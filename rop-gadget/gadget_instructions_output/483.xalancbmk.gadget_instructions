0x00000000000796bd : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000794b4 : enter -0x76ff, 3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000794c1 : loopne 0x794ca ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000794b6 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000004c5d9 : adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x000000000004b647 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000004d083 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004bef4 : add byte ptr [rax + 0x29], cl ; retf 0xf48
0x000000000004c3ef : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000004b67d : add byte ptr [rax - 0x75], cl ; xor eax, 0x3608db ; call rax
0x000000000004d5e1 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000004cebf : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x000000000004ba10 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000004d436 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004bef2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0xf48
0x000000000004d5df : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000004cebd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x000000000004ba0e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000004b828 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000004c875 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; jmp rax
0x000000000004c3ee : add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x000000000004c876 : add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x000000000004b67c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3608db] ; call rax
0x000000000004b64b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000004b908 : add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x000000000004c7c5 : add byte ptr [rax], al ; xor r11d, r11d ; jmp rax
0x000000000004c5db : add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x000000000004c877 : add byte ptr [rsi + 1], bh ; jmp rax
0x000000000004c5a5 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000004bd97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000004c874 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x000000000004b906 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x000000000004c7c3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor r11d, r11d ; jmp rax
0x000000000004c737 : add eax, 0x89410000 ; ret 0x8d41
0x000000000004d435 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004c3ed : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000004c3f1 : add eax, edi ; jmp rax
0x000000000004c81a : add eax, edi ; mov edx, 1 ; jmp rax
0x000000000004c665 : add eax, edi ; mov r11d, 1 ; jmp rax
0x000000000004b903 : add eax, esi ; mov edx, 1 ; xor esi, esi ; jmp rax
0x000000000004c3f0 : add rax, rdi ; jmp rax
0x000000000004c819 : add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000004c664 : add rax, rdi ; mov r11d, 1 ; jmp rax
0x000000000004c733 : and al, 0xf ; test dl, cl ; add eax, 0x89410000 ; ret 0x8d41
0x000000000004dcfc : and al, 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ba21 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004b648 : and eax, 0x30 ; xor esi, esi ; call rax
0x000000000004d439 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004c3f2 : clc ; jmp rax
0x000000000004c81b : clc ; mov edx, 1 ; jmp rax
0x000000000004c666 : clc ; mov r11d, 1 ; jmp rax
0x000000000004d082 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004c60c : cmp eax, 0x13f ; add rax, rdi ; jmp rax
0x000000000004c5a3 : cmp eax, 0x1a8 ; add rax, rdi ; jmp rax
0x000000000004c3eb : cmp eax, 0x360 ; add rax, rdi ; jmp rax
0x000000000004b4c1 : dec dword ptr [rax - 0x77] ; ret 0x294c
0x000000000004bb7e : dec dword ptr [rax - 0x77] ; ret 0x8944
0x000000000004baa2 : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x000000000004bc35 : dec dword ptr [rcx + 0x39] ; ret
0x000000000004d07f : dec dword ptr [rdi] ; test edi, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004ba1d : dec dword ptr [rdi] ; xchg byte ptr [rcx], ah ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004ce49 : dec dword ptr [rdi] ; xchg byte ptr [rsi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004d056 : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000004d5e4 : fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000004cec2 : fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x000000000004bf53 : inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000004bea8 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000004ce0b : inc dword ptr [rcx - 0x77] ; rol byte ptr [rcx], 1 ; retf -0x7277
0x000000000004c60b : lea edi, dword ptr [rip + 0x13f] ; add rax, rdi ; jmp rax
0x000000000004c5a2 : lea edi, dword ptr [rip + 0x1a8] ; add rax, rdi ; jmp rax
0x000000000004c3ea : lea edi, dword ptr [rip + 0x360] ; add rax, rdi ; jmp rax
0x000000000004d06f : mov ebp, 0xfffffae0 ; or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004c668 : mov ebx, 1 ; jmp rax
0x000000000004c81c : mov edx, 1 ; jmp rax
0x000000000004b905 : mov edx, 1 ; xor esi, esi ; jmp rax
0x000000000004c42d : mov esi, 0x3d8d48c2 ; retf 0x11ea
0x000000000004c878 : mov esi, 1 ; jmp rax
0x000000000004b67f : mov esi, dword ptr [rip + 0x3608db] ; call rax
0x000000000004c667 : mov r11d, 1 ; jmp rax
0x000000000004b67e : mov rsi, qword ptr [rip + 0x3608db] ; call rax
0x000000000004c818 : nop ; add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000004d074 : or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004ce4d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004b4c4 : ret 0x294c
0x000000000004d53a : ret 0x4108
0x000000000004c150 : ret 0x8589
0x000000000004d5e7 : ret 0x8844
0x000000000004bb81 : ret 0x8944
0x000000000004c5de : ret 0x8d41
0x000000000004dc4a : ret 0xffe6
0x000000000004bd8a : ret 9
0x000000000004ce10 : retf -0x7277
0x000000000004c432 : retf 0x11ea
0x000000000004bef7 : retf 0xf48
0x000000000004ce0e : rol byte ptr [rcx], 1 ; retf -0x7277
0x000000000004c736 : rol dword ptr [rip - 0x76bf0000], 1 ; ret 0x8d41
0x000000000004c0a2 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004bf21 : sbb dword ptr [rbx - 0x51f43], eax ; call qword ptr [rax]
0x000000000004c42a : sub dword ptr [rcx + 0xf], eax ; mov esi, 0x3d8d48c2 ; retf 0x11ea
0x000000000004d434 : sub eax, 0x83480005 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004c5a4 : test al, 1 ; add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x000000000004c735 : test dl, cl ; add eax, 0x89410000 ; ret 0x8d41
0x000000000004d081 : test edi, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004ba1f : xchg byte ptr [rcx], ah ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004ce4b : xchg byte ptr [rsi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004beab : xchg eax, esp ; ret
0x000000000004b649 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000004b680 : xor eax, 0x3608db ; call rax
0x000000000004b646 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x000000000004c7c8 : xor ebx, ebx ; jmp rax
0x000000000004b64d : xor esi, esi ; call rax
0x000000000004b90a : xor esi, esi ; jmp rax
0x000000000004c7c7 : xor r11d, r11d ; jmp rax
0x0000000000051293 : ret 0x77e9
0x0000000000051290 : ror dword ptr [rax - 0x77], 1 ; ret 0x77e9
0x000000000005128d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x77e9
0x00000000000540a5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000000866a7 : add eax, 0xcf64 ; cmove rax, rdx ; ret
0x000000000008668a : retf 0x3257
0x0000000000083f93 : add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x0000000000083f92 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000083f8f : add eax, 0xfb7c ; cmove rax, rdx ; ret
0x0000000000083f90 : jl 0x83f95 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000083f97 : ret 0x48c3
0x0000000000083f91 : sti ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000006e2b7 : add al, ch ; xchg eax, ebx ; retf
0x000000000006e2b5 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x000000000006e2e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000006e2b3 : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x000000000006e2b2 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x00000000000bfa80 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa81 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbef : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa83 : add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbf2 : add edi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfbf1 : add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa2c : and al, 8 ; test rax, rax ; je 0xbfa3c ; call rax
0x00000000000bfa2b : and al, 8 ; test rax, rax ; je 0xbfa3d ; call rax
0x00000000000bfa82 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa52 : in al, 0x75 ; retf
0x00000000000bfa31 : je 0xbfa37 ; call rax
0x00000000000bfb5a : je 0xbfb63 ; call rdx
0x00000000000bfbcb : je 0xbfbd4 ; call rax
0x00000000000bfbc5 : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbda ; call rax
0x00000000000bfa2a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xbfa3e ; call rax
0x00000000000bfb54 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb69 ; call rdx
0x00000000000bfbc4 : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbdb ; call rax
0x00000000000bfb53 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb6a ; call rdx
0x00000000000bfa4f : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; retf
0x00000000000bfabc : ret 0x4864
0x00000000000bfbf4 : sub byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x00000000000bfa2f : test eax, eax ; je 0xbfa39 ; call rax
0x00000000000bfbc9 : test eax, eax ; je 0xbfbd6 ; call rax
0x00000000000bfb58 : test edx, edx ; je 0xbfb65 ; call rdx
0x00000000000bfa2e : test rax, rax ; je 0xbfa3a ; call rax
0x00000000000bfbc8 : test rax, rax ; je 0xbfbd7 ; call rax
0x00000000000bfb57 : test rdx, rdx ; je 0xbfb66 ; call rdx
0x0000000000083fb9 : add eax, 0xfcf2 ; cmove rax, rdx ; ret
0x0000000000083fbb : cld ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000bfd68 : cmp eax, 0xfffff001 ; jae 0xbfd77 ; ret
0x00000000000bfd61 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfd67 : cmp rax, -0xfff ; jae 0xbfd78 ; ret
0x00000000000bfd6d : jae 0xbfd72 ; ret
0x00000000000bfd60 : mov eax, 0x3b ; syscall
0x0000000000073864 : loop 0x7386b ; mov eax, edx ; ret
0x0000000000073860 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000006bb85 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb1f : add dh, dh ; ret 0x7420
0x000000000006bb13 : je 0x6bb51 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb15 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb21 : ret 0x7420
0x00000000000371a6 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000037191 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000037190 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003713a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000037194 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000371a4 : and eax, 0x39480037 ; ret
0x0000000000037166 : cmovs eax, edx ; pop rbx ; ret
0x0000000000037138 : cmp byte ptr [rdi], 0 ; jne 0x37146 ; pop rbx ; ret
0x0000000000037135 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000037163 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x000000000003713b : jne 0x37143 ; pop rbx ; ret
0x0000000000037196 : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000037193 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000037192 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000037198 : pop rax ; ret
0x0000000000037195 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000371a3 : pop rcx ; and eax, 0x39480037 ; ret
0x0000000000037168 : ret 0xc35b
0x0000000000037137 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000037165 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x0000000000037164 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000037136 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x37148 ; pop rbx ; ret
0x00000000000376ff : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000037732 : jg 0x3777b ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000037733 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000037734 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000037714 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000037705 : mov dword ptr [rdi + 8], edx ; ret
0x0000000000037718 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000037736 : mov dword ptr [rsi], edx ; ret
0x0000000000037713 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000037704 : mov qword ptr [rdi + 8], rdx ; ret
0x0000000000037717 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000037728 : ret 0x3039
0x0000000000037702 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008667d : add eax, 0x7b0e ; cmove rax, rdx ; ret
0x000000000008667f : jnp 0x86687 ; add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x000000000009f349 : add eax, 0xffe2 ; cmove rax, rdx ; ret
0x000000000009f34b : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000009f34a : loop 0x9f353 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000c0680 : mov eax, 0x6e ; syscall
0x00000000000373b2 : retf 0x3771
0x000000000002135a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000021359 : add eax, dword ptr [0] ; ret
0x0000000000021358 : add rax, qword ptr [0] ; ret
0x0000000000021357 : add rax, qword ptr fs:[0] ; ret
0x000000000002135b : and eax, 0 ; ret
0x00000000000e1e96 : cmp eax, 0xfffff000 ; ja 0xe1ea8 ; ret
0x00000000000e1e95 : cmp rax, -0x1000 ; ja 0xe1ea9 ; ret
0x00000000000e1e9b : ja 0xe1ea3 ; ret
0x00000000000e1e8e : mov eax, 6 ; syscall
0x00000000000e1e8c : mov esi, edx ; mov eax, 6 ; syscall
0x00000000000e1e8b : mov rsi, rdx ; mov eax, 6 ; syscall
0x00000000000e1e8d : salc ; mov eax, 6 ; syscall
0x00000000000e3290 : and al, 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000e334a : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e328f : cmp al, 0x24 ; mov eax, 0x101 ; syscall
0x00000000000e3349 : cmp al, 0x24 ; mov eax, 3 ; syscall
0x00000000000e2ee3 : mov eax, 0x4f ; syscall
0x00000000000e2ee1 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x00000000000e2ee0 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x00000000000e328d : movsxd rdi, dword ptr [rsp] ; mov eax, 0x101 ; syscall
0x00000000000e3347 : movsxd rdi, dword ptr [rsp] ; mov eax, 3 ; syscall
0x00000000000e2ee2 : out dx, eax ; mov eax, 0x4f ; syscall
0x00000000000e3135 : ret 0x4164
0x00000000000e2edf : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x00000000000f36fe : loopne 0xf3704 ; ret
0x00000000000f36f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf370a ; ret
0x00000000000f36ad : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x0000000000080cc3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000080cc1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000080ccc : nop dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a03eb : adc dword ptr [rbx + 0x39480030], edx ; ret
0x00000000000a0293 : add al, ch ; retf -8
0x00000000000a0291 : add byte ptr [rax], al ; add al, ch ; retf -8
0x00000000000a028e : add byte ptr [rdx + 0x86], bh ; call 0x2cce8
0x00000000000a038f : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000a0253 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000a038e : je 0xa03bd ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a0254 : jo 0xa02a2 ; mov edi, ebp ; call rbx
0x00000000000a0251 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000a0250 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000a024f : loop 0xa02a6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000a0256 : mov edi, ebp ; call rbx
0x00000000000a028f : mov edx, 0x86 ; call 0x2cce7
0x00000000000a0392 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x00000000000a0255 : mov rdi, rbp ; call rbx
0x00000000000a0391 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000a028d : or eax, 0x86ba00 ; add byte ptr [rax], al ; call 0x2cce9
0x00000000000a0257 : out dx, eax ; call rbx
0x00000000000a0296 : retf -8
0x00000000000a0390 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a0290 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2cce6
0x00000000000377be : adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000377a8 : add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000377bd : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000377a4 : or dword ptr [rcx - 0x7d], 0xfffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000377a3 : or qword ptr [rcx - 0x7d], 0xfffffffffffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000377c0 : ret 0xc269
0x000000000003782c : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000377a7 : stc ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000021065 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021068 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002108c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000021132 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000210dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000021090 : add byte ptr [rax], al ; call rax
0x00000000000210de : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000020faf : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021134 : add edi, ebp ; call rax
0x0000000000021133 : add rdi, rbp ; call rax
0x000000000002106c : and al, 0x18 ; call rax
0x000000000002108d : and eax, 0x30 ; call rax
0x000000000002106e : call rax
0x000000000002112d : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000002106a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000210e2 : mov eax, edx ; syscall
0x0000000000021067 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021069 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021066 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000210aa : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000021131 : out 4, eax ; add rdi, rbp ; call rax
0x0000000000021135 : out dx, eax ; call rax
0x0000000000020fb8 : ret 0x8d48
0x00000000000210ad : ret 0xd284
0x0000000000020fb5 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021130 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000002112f : shl rdi, 4 ; add rdi, rbp ; call rax
0x0000000000020fb7 : xchg eax, esp ; ret 0x8d48
0x00000000000210ac : xchg eax, esp ; ret 0xd284
0x000000000002108e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002108b : xor eax, dword ptr [0x30] ; call rax
0x00000000000210e0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000002108a : xor rax, qword ptr [0x30] ; call rax
0x0000000000021089 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002bfa9 : adc eax, 0x381bef ; ret
0x000000000002be7d : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000002be7b : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000002bfa6 : cmp byte ptr [rax], al ; mov byte ptr [rip + 0x381bef], dl ; ret
0x000000000002be80 : dec dword ptr [rdi] ; retf 0xd88
0x000000000002bfa8 : mov byte ptr [rip + 0x381bef], dl ; ret
0x000000000002be93 : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x000000000002be83 : retf 0xd88
0x000000000002be7f : stc ; dec dword ptr [rdi] ; retf 0xd88
0x0000000000083f93 : add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x0000000000083f92 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000083f8f : add eax, 0xfb7c ; cmove rax, rdx ; ret
0x0000000000083f90 : jl 0x83f95 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000083f97 : ret 0x48c3
0x0000000000083f91 : sti ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000080711 : add al, 0xf ; test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000080792 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000080791 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c3 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080714 : clc ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000808a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000808c2 : je 0x808ef ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000080794 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c1 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080793 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c0 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080795 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000080885 : ret 0x2475
0x00000000000808a6 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000808c4 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000080713 : test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000e2c35 : cmp eax, 0xfffff000 ; ja 0xe2c47 ; ret
0x00000000000e2c34 : cmp rax, -0x1000 ; ja 0xe2c48 ; ret
0x00000000000e2c9f : fdivr dword ptr [rax + 0x20] ; syscall
0x00000000000e2c3a : ja 0xe2c42 ; ret
0x00000000000e2c67 : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c65 : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c66 : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000bfcd2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfcd9 : cmp eax, 0xfffff001 ; jae 0xbfce8 ; ret
0x00000000000bfcde : jae 0xbfce3 ; ret
0x00000000000bfcd1 : mov eax, 0x3a ; syscall
0x00000000000bfcd0 : pop rdi ; mov eax, 0x3a ; syscall
0x00000000000bfcd8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xbfce9 ; ret
0x0000000000081483 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000081482 : je 0x814ae ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000081481 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000081485 : mov rdi, rbp ; call rax
0x0000000000081480 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000008147f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000811ee : ret 0x1f76
0x0000000000081305 : ret 0x7402
0x0000000000081484 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000a09d7 : mov ch, 0xe8 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000003223 : js 0x3235 ; mov rax, rdi ; ret
0x0000000000003226 : mov eax, edi ; ret
0x0000000000003225 : mov rax, rdi ; ret
0x0000000000003224 : or ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000003221 : test edi, edi ; js 0x3237 ; mov rax, rdi ; ret
0x0000000000003220 : test rdi, rdi ; js 0x3238 ; mov rax, rdi ; ret
0x0000000000003252 : js 0x3264 ; mov eax, edi ; ret
0x0000000000003253 : or al, 0x89 ; clc ; ret
0x0000000000003250 : test edi, edi ; js 0x3266 ; mov eax, edi ; ret
0x00000000000fba10 : jmp rsi
0x0000000000090297 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x18 ; ret
0x0000000000090298 : add byte ptr [rax], al ; jne 0x902e9 ; add rsp, 0x18 ; ret
0x0000000000090299 : add byte ptr [rbp + 0x45], dh ; add rsp, 0x18 ; ret
0x000000000009029a : jne 0x902e7 ; add rsp, 0x18 ; ret
0x000000000008df90 : jmp 0x8a292
0x000000000008df91 : sti ; ret 0xffff
0x00000000000904a1 : cmp edx, dword ptr [rdi + rdi*8 - 0x3f7ab701] ; je 0x904b7 ; call rax
0x000000000009049b : je 0x904a3 ; pop rbx ; ret
0x00000000000904a8 : je 0x904b0 ; call rax
0x00000000000904c2 : retf 0x2f1c
0x0000000000090499 : test eax, eax ; je 0x904a5 ; pop rbx ; ret
0x00000000000904a6 : test eax, eax ; je 0x904b2 ; call rax
0x0000000000090498 : test rax, rax ; je 0x904a6 ; pop rbx ; ret
0x00000000000904a5 : test rax, rax ; je 0x904b3 ; call rax
0x00000000000fe0c0 : jmp 0x8a3a2
