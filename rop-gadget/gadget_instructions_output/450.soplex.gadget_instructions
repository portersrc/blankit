0x000000000007816b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; retf
0x000000000007816d : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; retf
0x000000000007816f : add byte ptr [rcx - 0x80], al ; retf
0x0000000000078155 : inc dword ptr [rcx - 0x7f] ; retf
0x0000000000077a7f : jo 0x77ad0 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077d9f : add byte ptr [rax + 0x63], cl ; sar dword ptr [rax + 2], 1 ; syscall
0x0000000000077d2a : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000077d29 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077d80 : cld ; mov eax, 3 ; syscall
0x0000000000077d16 : dec dword ptr [rcx] ; retf -0x27f
0x0000000000077d7d : movsd dword ptr [rdi], dword ptr [rsi] ; movsxd rdi, r12d ; mov eax, 3 ; syscall
0x0000000000077d7f : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000077d7e : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x0000000000077da1 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x0000000000077d18 : retf -0x27f
0x0000000000077ceb : retf -0x3fcf
0x0000000000077da2 : sar dword ptr [rax + 2], 1 ; syscall
0x0000000000077ce5 : test dword ptr [rsi - 0x77000000], esi ; retf -0x3fcf
0x0000000000078e58 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x0000000000078e57 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x0000000000078e5a : lea esi, dword ptr [rip - 0x580] ; call rax
0x0000000000078e59 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x0000000000078e5b : xor eax, 0xfffffa80 ; call rax
0x0000000000080711 : add al, 0xf ; test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000080792 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000080791 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c3 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080714 : clc ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000808a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000808c2 : je 0x808ef ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000080794 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c1 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080793 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c0 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080795 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000080885 : ret 0x2475
0x00000000000808a6 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000808c4 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000080713 : test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000e22ba : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e22bd : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e22bc : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e2337 : and al, 8 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e22a8 : mov edi, 0xffffff9c ; syscall
0x00000000000e22a5 : mov esi, edi ; mov rdi, -0x64 ; syscall
0x00000000000e22a7 : mov rdi, -0x64 ; syscall
0x00000000000bfa80 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa81 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbef : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa83 : add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbf2 : add edi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfbf1 : add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa2c : and al, 8 ; test rax, rax ; je 0xbfa3c ; call rax
0x00000000000bfa2b : and al, 8 ; test rax, rax ; je 0xbfa3d ; call rax
0x00000000000bfa82 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa52 : in al, 0x75 ; retf
0x00000000000bfa31 : je 0xbfa37 ; call rax
0x00000000000bfb5a : je 0xbfb63 ; call rdx
0x00000000000bfbcb : je 0xbfbd4 ; call rax
0x00000000000bfbc5 : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbda ; call rax
0x00000000000bfa2a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xbfa3e ; call rax
0x00000000000bfb54 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb69 ; call rdx
0x00000000000bfbc4 : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbdb ; call rax
0x00000000000bfb53 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb6a ; call rdx
0x00000000000bfa4f : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; retf
0x00000000000bfabc : ret 0x4864
0x00000000000bfbf4 : sub byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x00000000000bfa2f : test eax, eax ; je 0xbfa39 ; call rax
0x00000000000bfbc9 : test eax, eax ; je 0xbfbd6 ; call rax
0x00000000000bfb58 : test edx, edx ; je 0xbfb65 ; call rdx
0x00000000000bfa2e : test rax, rax ; je 0xbfa3a ; call rax
0x00000000000bfbc8 : test rax, rax ; je 0xbfbd7 ; call rax
0x00000000000bfb57 : test rdx, rdx ; je 0xbfb66 ; call rdx
0x00000000000bfd68 : cmp eax, 0xfffff001 ; jae 0xbfd77 ; ret
0x00000000000bfd61 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfd67 : cmp rax, -0xfff ; jae 0xbfd78 ; ret
0x00000000000bfd6d : jae 0xbfd72 ; ret
0x00000000000bfd60 : mov eax, 0x3b ; syscall
0x000000000006bb85 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb1f : add dh, dh ; ret 0x7420
0x000000000006bb13 : je 0x6bb51 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb15 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb21 : ret 0x7420
0x00000000000c0680 : mov eax, 0x6e ; syscall
0x0000000000021065 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021068 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002108c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000021132 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000210dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000021090 : add byte ptr [rax], al ; call rax
0x00000000000210de : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000020faf : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021134 : add edi, ebp ; call rax
0x0000000000021133 : add rdi, rbp ; call rax
0x000000000002106c : and al, 0x18 ; call rax
0x000000000002108d : and eax, 0x30 ; call rax
0x000000000002106e : call rax
0x000000000002112d : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000002106a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000210e2 : mov eax, edx ; syscall
0x0000000000021067 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021069 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021066 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000210aa : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000021131 : out 4, eax ; add rdi, rbp ; call rax
0x0000000000021135 : out dx, eax ; call rax
0x0000000000020fb8 : ret 0x8d48
0x00000000000210ad : ret 0xd284
0x0000000000020fb5 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021130 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000002112f : shl rdi, 4 ; add rdi, rbp ; call rax
0x0000000000020fb7 : xchg eax, esp ; ret 0x8d48
0x00000000000210ac : xchg eax, esp ; ret 0xd284
0x000000000002108e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002108b : xor eax, dword ptr [0x30] ; call rax
0x00000000000210e0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000002108a : xor rax, qword ptr [0x30] ; call rax
0x0000000000021089 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000e2c35 : cmp eax, 0xfffff000 ; ja 0xe2c47 ; ret
0x00000000000e2c34 : cmp rax, -0x1000 ; ja 0xe2c48 ; ret
0x00000000000e2c9f : fdivr dword ptr [rax + 0x20] ; syscall
0x00000000000e2c3a : ja 0xe2c42 ; ret
0x00000000000e2c67 : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c65 : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c66 : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000bfcd2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfcd9 : cmp eax, 0xfffff001 ; jae 0xbfce8 ; ret
0x00000000000bfcde : jae 0xbfce3 ; ret
0x00000000000bfcd1 : mov eax, 0x3a ; syscall
0x00000000000bfcd0 : pop rdi ; mov eax, 0x3a ; syscall
0x00000000000bfcd8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xbfce9 ; ret
0x0000000000003223 : js 0x3235 ; mov rax, rdi ; ret
0x0000000000003226 : mov eax, edi ; ret
0x0000000000003225 : mov rax, rdi ; ret
0x0000000000003224 : or ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000003221 : test edi, edi ; js 0x3237 ; mov rax, rdi ; ret
0x0000000000003220 : test rdi, rdi ; js 0x3238 ; mov rax, rdi ; ret
0x0000000000003252 : js 0x3264 ; mov eax, edi ; ret
0x0000000000003253 : or al, 0x89 ; clc ; ret
0x0000000000003250 : test edi, edi ; js 0x3266 ; mov eax, edi ; ret
0x00000000000fba10 : jmp rsi
0x000000000008df90 : jmp 0x8a292
0x000000000008df91 : sti ; ret 0xffff
0x00000000000fe0c0 : jmp 0x8a3a2
