0x000000000002cdb0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002cdb2 : and eax, 8 ; movzx eax, ax ; ret
0x000000000002cdb1 : js 0x2cd3d ; loopne 0x2cdc4 ; movzx eax, ax ; ret
0x000000000002cdb3 : loopne 0x2cdc2 ; movzx eax, ax ; ret
0x000000000002cdb6 : mov bh, 0xc0 ; ret
0x000000000002cdaf : mov bh, 4 ; js 0x2cd3f ; loopne 0x2cdc6 ; movzx eax, ax ; ret
0x000000000002cdb5 : movzx eax, ax ; ret
0x000000000002cdb4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000e2c35 : cmp eax, 0xfffff000 ; ja 0xe2c47 ; ret
0x00000000000e2c34 : cmp rax, -0x1000 ; ja 0xe2c48 ; ret
0x00000000000e2c9f : fdivr dword ptr [rax + 0x20] ; syscall
0x00000000000e2c3a : ja 0xe2c42 ; ret
0x00000000000e2c67 : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c65 : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c66 : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x0000000000083f93 : add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x0000000000083f92 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000083f8f : add eax, 0xfb7c ; cmove rax, rdx ; ret
0x0000000000083f90 : jl 0x83f95 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000083f97 : ret 0x48c3
0x0000000000083f91 : sti ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000037066 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000003708c : jne 0x37058 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003706a : mov dword ptr [rbp], edx ; call rax
0x0000000000037069 : mov qword ptr [rbp], rdx ; call rax
0x0000000000037068 : mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000037064 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00000000000afbaa : adc byte ptr [rsp - 0x10], al ; ret
0x00000000000afba6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000afbac : and al, 0xf0 ; ret
0x00000000000afba8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000afba9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000afba5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000006cff2 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000006cff1 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000bfd68 : cmp eax, 0xfffff001 ; jae 0xbfd77 ; ret
0x00000000000bfd61 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfd67 : cmp rax, -0xfff ; jae 0xbfd78 ; ret
0x00000000000bfd6d : jae 0xbfd72 ; ret
0x00000000000bfd60 : mov eax, 0x3b ; syscall
0x00000000000c0680 : mov eax, 0x6e ; syscall
0x0000000000080f9e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000080f8b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000080f8d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000080f8f : pop r14 ; pop r15 ; jmp rax
0x0000000000080f91 : pop r15 ; jmp rax
0x0000000000080f8a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000080f8e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000080f92 : pop rdi ; jmp rax
0x0000000000080f90 : pop rsi ; pop r15 ; jmp rax
0x0000000000080f8c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002ceb0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002ceb4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000002ceb2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002ceb5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000bfa80 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa81 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbef : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa83 : add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbf2 : add edi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfbf1 : add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa2c : and al, 8 ; test rax, rax ; je 0xbfa3c ; call rax
0x00000000000bfa2b : and al, 8 ; test rax, rax ; je 0xbfa3d ; call rax
0x00000000000bfa82 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa52 : in al, 0x75 ; retf
0x00000000000bfa31 : je 0xbfa37 ; call rax
0x00000000000bfb5a : je 0xbfb63 ; call rdx
0x00000000000bfbcb : je 0xbfbd4 ; call rax
0x00000000000bfbc5 : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbda ; call rax
0x00000000000bfa2a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xbfa3e ; call rax
0x00000000000bfb54 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb69 ; call rdx
0x00000000000bfbc4 : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbdb ; call rax
0x00000000000bfb53 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb6a ; call rdx
0x00000000000bfa4f : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; retf
0x00000000000bfabc : ret 0x4864
0x00000000000bfbf4 : sub byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x00000000000bfa2f : test eax, eax ; je 0xbfa39 ; call rax
0x00000000000bfbc9 : test eax, eax ; je 0xbfbd6 ; call rax
0x00000000000bfb58 : test edx, edx ; je 0xbfb65 ; call rdx
0x00000000000bfa2e : test rax, rax ; je 0xbfa3a ; call rax
0x00000000000bfbc8 : test rax, rax ; je 0xbfbd7 ; call rax
0x00000000000bfb57 : test rdx, rdx ; je 0xbfb66 ; call rdx
0x0000000000080711 : add al, 0xf ; test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000080792 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000080791 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c3 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080714 : clc ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000808a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000808c2 : je 0x808ef ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000080794 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c1 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080793 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808c0 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080795 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000080885 : ret 0x2475
0x00000000000808a6 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000808c4 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000080713 : test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000080cc3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000080cc1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000080ccc : nop dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000081edd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000081ee0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000081ee2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000081ee1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000bfd1f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000bfd1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000bfd1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000bfd1e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000bfd2e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000bfd2f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000bfd2d : ja 0xbfd59 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000bfd21 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000bfd31 : mov edi, edx ; mov eax, r8d ; syscall
0x00000000000bfd20 : mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000bfd30 : mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000bfd22 : xlatb ; mov eax, esi ; syscall
0x00000000000bfd32 : xlatb ; mov eax, r8d ; syscall
0x00000000000e79aa : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e79db : js 0xe79ad ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7991 : rol byte ptr [rax + rax*8 - 0x74b7c58c], 5 ; retf
0x00000000000e7990 : xchg eax, edx ; rol byte ptr [rax + rax*8 - 0x74b7c58c], 5 ; retf
0x0000000000021065 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021068 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002108c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000021132 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000210dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000021090 : add byte ptr [rax], al ; call rax
0x00000000000210de : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000020faf : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021134 : add edi, ebp ; call rax
0x0000000000021133 : add rdi, rbp ; call rax
0x000000000002106c : and al, 0x18 ; call rax
0x000000000002108d : and eax, 0x30 ; call rax
0x000000000002106e : call rax
0x000000000002112d : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000002106a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000210e2 : mov eax, edx ; syscall
0x0000000000021067 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021069 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021066 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000210aa : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000021131 : out 4, eax ; add rdi, rbp ; call rax
0x0000000000021135 : out dx, eax ; call rax
0x0000000000020fb8 : ret 0x8d48
0x00000000000210ad : ret 0xd284
0x0000000000020fb5 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021130 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000002112f : shl rdi, 4 ; add rdi, rbp ; call rax
0x0000000000020fb7 : xchg eax, esp ; ret 0x8d48
0x00000000000210ac : xchg eax, esp ; ret 0xd284
0x000000000002108e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002108b : xor eax, dword ptr [0x30] ; call rax
0x00000000000210e0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000002108a : xor rax, qword ptr [0x30] ; call rax
0x0000000000021089 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000e790d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xe7949 ; ret
0x00000000000e7911 : cmp edi, edx ; ja 0xe7945 ; ret
0x00000000000e7910 : cmp rdi, rdx ; ja 0xe7946 ; ret
0x00000000000e78fe : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000e7913 : ja 0xe7943 ; ret
0x00000000000e7934 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000e78f0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000000e7933 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000e794a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000e78f1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000e7901 : ret 0x1c77
0x00000000000e790f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xe7947 ; ret
0x00000000000e7914 : sub esi, ebx ; ret
0x00000000000e7912 : xlatb ; ja 0xe7944 ; ret
0x00000000000e790e : xor eax, eax ; cmp rdi, rdx ; ja 0xe7948 ; ret
0x000000000002cf27 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000002cf26 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000002cf23 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002cf22 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002cf24 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000e3290 : and al, 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000e334a : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e328f : cmp al, 0x24 ; mov eax, 0x101 ; syscall
0x00000000000e3349 : cmp al, 0x24 ; mov eax, 3 ; syscall
0x00000000000e2ee3 : mov eax, 0x4f ; syscall
0x00000000000e2ee1 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x00000000000e2ee0 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x00000000000e328d : movsxd rdi, dword ptr [rsp] ; mov eax, 0x101 ; syscall
0x00000000000e3347 : movsxd rdi, dword ptr [rsp] ; mov eax, 3 ; syscall
0x00000000000e2ee2 : out dx, eax ; mov eax, 0x4f ; syscall
0x00000000000e3135 : ret 0x4164
0x00000000000e2edf : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000006d7c2 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000006d808 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006d7e7 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000006d7c1 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000008407a : add eax, 0xf7a1 ; cmove rax, rdx ; ret
0x000000000008407c : test dword ptr [rax], 0x440f4800 ; ret 0x48c3
0x000000000006bb85 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb1f : add dh, dh ; ret 0x7420
0x000000000006bb13 : je 0x6bb51 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb15 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb21 : ret 0x7420
0x000000000002cf52 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000bfcd2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfcd9 : cmp eax, 0xfffff001 ; jae 0xbfce8 ; ret
0x00000000000bfcde : jae 0xbfce3 ; ret
0x00000000000bfcd1 : mov eax, 0x3a ; syscall
0x00000000000bfcd0 : pop rdi ; mov eax, 0x3a ; syscall
0x00000000000bfcd8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xbfce9 ; ret
0x0000000000021f91 : add byte ptr [rsi + 0xf], ah ; push rax ; ret 0x1a8
0x0000000000021e86 : add dh, byte ptr [rdi + rbp*2 + 0x48] ; add esp, 0x18 ; ret
0x0000000000021e87 : je 0x21efe ; add rsp, 0x18 ; ret
0x0000000000021e85 : jp 0x21e91 ; je 0x21f00 ; add rsp, 0x18 ; ret
0x0000000000021e88 : outsd dx, dword ptr [rsi] ; add rsp, 0x18 ; ret
0x0000000000021f94 : push rax ; ret 0x1a8
0x0000000000021f43 : ret 0x14bf
0x0000000000021ee5 : ret 0x15bf
0x0000000000021f95 : ret 0x1a8
0x0000000000021f6d : ret 0x2abf
0x0000000000021fa9 : ret 0x2bbf
0x0000000000021dad : add rax, 0x5e0ff300 ; retf 0xf66
0x0000000000021dac : jo 0x21e04 ; add eax, 0x5e0ff300 ; retf 0xf66
0x0000000000021746 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; retf 0xff2
0x0000000000021766 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xd038
0x0000000000021748 : add byte ptr [rsi + 0xf], ah ; retf 0xff2
0x0000000000021757 : push rsp ; ror byte ptr [rdi], 1 ; wait ; ror byte ptr [rdi], 0x45 ; ret 0xf66
0x0000000000021769 : ret 0xd038
0x000000000002175b : ror byte ptr [rdi], 0x45 ; ret 0xf66
0x0000000000021758 : ror byte ptr [rdi], 1 ; wait ; ror byte ptr [rdi], 0x45 ; ret 0xf66
0x0000000000021763 : shl dword ptr [rdx - 0x69f0fffa], 1 ; ret 0xd038
0x000000000002175a : wait ; ror byte ptr [rdi], 0x45 ; ret 0xf66
0x0000000000021768 : xchg eax, esi ; ret 0xd038
0x000000000000d31d : adc byte ptr [rax + rdi*8], al ; ret
0x000000000000d31e : add al, 0xf8 ; ret
0x000000000000d340 : add byte ptr [rax + 0x39], cl ; retf -0x76b8
0x000000000000d327 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000000d24e : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000000d325 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000000d24c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000000d38f : add dl, dh ; mulps xmm0, xmm1 ; divsd xmm0, xmm0 ; ret
0x000000000000d356 : add dword ptr [rax + 0x39], ecx ; ret 0xf47e
0x000000000000d382 : clc ; movq xmm0, rax ; ret
0x000000000000d3a6 : cli ; movq xmm0, rdx ; ret
0x000000000000d3c0 : dec dword ptr [rax - 0x77] ; ret 0xb841
0x000000000000d33e : dec dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf -0x76b8
0x000000000000d37f : enter 0x948, -8 ; movq xmm0, rax ; ret
0x000000000000d385 : movd mm0, eax ; ret
0x000000000000d3a9 : movd mm0, edx ; ret
0x000000000000d384 : movd mm0, rax ; ret
0x000000000000d3a8 : movd mm0, rdx ; ret
0x000000000000d383 : movq xmm0, rax ; ret
0x000000000000d3a7 : movq xmm0, rdx ; ret
0x000000000000d31b : movsd xmm0, qword ptr [rax + rdi*8] ; ret
0x000000000000d31c : movups xmm0, xmmword ptr [rax + rdi*8] ; ret
0x000000000000d391 : mulps xmm0, xmm1 ; divsd xmm0, xmm0 ; ret
0x000000000000d390 : mulsd xmm0, xmm1 ; divsd xmm0, xmm0 ; ret
0x000000000000d381 : or eax, edi ; movq xmm0, rax ; ret
0x000000000000d3a5 : or edx, edi ; movq xmm0, rdx ; ret
0x000000000000d380 : or rax, rdi ; movq xmm0, rax ; ret
0x000000000000d3a4 : or rdx, rdi ; movq xmm0, rdx ; ret
0x000000000000d3aa : outsb dx, byte ptr [rsi] ; ret 0xc3f3
0x000000000000d2e1 : ret 0x2944
0x000000000000d32a : ret 0x2948
0x000000000000d3c3 : ret 0xb841
0x000000000000d3ab : ret 0xc3f3
0x000000000000d359 : ret 0xf47e
0x000000000000d343 : retf -0x76b8
0x000000000000d2e4 : retf 0x12eb
0x000000000000d32d : retf 0xf48
0x000000000000d318 : shr edi, 0x3f ; movsd xmm0, qword ptr [rax + rdi*8] ; ret
0x000000000000d317 : shr rdi, 0x3f ; movsd xmm0, qword ptr [rax + rdi*8] ; ret
0x000000000000d33f : str word ptr [rax + 0x39] ; retf -0x76b8
0x00000000000215fa : add byte ptr [rdx + 2], bh ; je 0x21611 ; add rsp, 0x18 ; ret
0x0000000000021606 : add byte ptr [rsi + 0xf], spl ; push rsp ; retf 0xf66
0x00000000000215fc : add dh, byte ptr [rcx + rcx + 0x48] ; add esp, 0x18 ; ret
0x00000000000215fd : je 0x2160e ; add rsp, 0x18 ; ret
0x00000000000215fb : jp 0x21607 ; je 0x21610 ; add rsp, 0x18 ; ret
0x0000000000021620 : push rax ; ret 0xf66
0x0000000000021629 : ret 0xe083
0x0000000000003223 : js 0x3235 ; mov rax, rdi ; ret
0x0000000000003226 : mov eax, edi ; ret
0x0000000000003225 : mov rax, rdi ; ret
0x0000000000003224 : or ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000003221 : test edi, edi ; js 0x3237 ; mov rax, rdi ; ret
0x0000000000003220 : test rdi, rdi ; js 0x3238 ; mov rax, rdi ; ret
0x0000000000003252 : js 0x3264 ; mov eax, edi ; ret
0x0000000000003253 : or al, 0x89 ; clc ; ret
0x0000000000003250 : test edi, edi ; js 0x3266 ; mov eax, edi ; ret
0x00000000000fba10 : jmp rsi
0x000000000008df90 : jmp 0x8a292
0x000000000008df91 : sti ; ret 0xffff
0x00000000000fe0c0 : jmp 0x8a3a2
