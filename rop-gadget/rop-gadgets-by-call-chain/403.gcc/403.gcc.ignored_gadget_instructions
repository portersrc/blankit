0x0000000000081483 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000081482 : je 0x814ae ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000081481 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000081485 : mov rdi, rbp ; call rax
0x0000000000081480 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000008147f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000811ee : ret 0x1f76
0x0000000000081305 : ret 0x7402
0x0000000000081484 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000078388 : dec dword ptr [rax + 0x39] ; ret
0x0000000000078373 : jne 0x78384 ; xor eax, eax ; ret
0x0000000000078386 : loop 0x7838c ; dec dword ptr [rax + 0x39] ; ret
0x0000000000078372 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000078371 : test edx, edx ; jne 0x78386 ; xor eax, eax ; ret
0x0000000000078370 : test rdx, rdx ; jne 0x78387 ; xor eax, eax ; ret
0x00000000000e2c35 : cmp eax, 0xfffff000 ; ja 0xe2c47 ; ret
0x00000000000e2c34 : cmp rax, -0x1000 ; ja 0xe2c48 ; ret
0x00000000000e2c9f : fdivr dword ptr [rax + 0x20] ; syscall
0x00000000000e2c3a : ja 0xe2c42 ; ret
0x00000000000e2c67 : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c65 : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2c66 : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000832b2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000832b3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000832b7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000008328b : and byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; retf -0x72b8
0x0000000000083368 : fmul qword ptr [rbx - 0x76b7ffce] ; and al, 8 ; call qword ptr [rdx]
0x00000000000832b5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000083369 : mov esi, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000832ba : ret 0x8801
0x000000000008328e : sub byte ptr [rax - 0x77], cl ; retf -0x72b8
0x00000000000796bd : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000bfd68 : cmp eax, 0xfffff001 ; jae 0xbfd77 ; ret
0x00000000000bfd61 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfd67 : cmp rax, -0xfff ; jae 0xbfd78 ; ret
0x00000000000bfd6d : jae 0xbfd72 ; ret
0x00000000000bfd60 : mov eax, 0x3b ; syscall
0x00000000000c0680 : mov eax, 0x6e ; syscall
0x00000000000779b1 : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000bfa80 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa81 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbef : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa83 : add dword ptr [rax + 0x38], edi ; syscall
0x00000000000bfbf2 : add edi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfbf1 : add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000bfa2c : and al, 8 ; test rax, rax ; je 0xbfa3c ; call rax
0x00000000000bfa2b : and al, 8 ; test rax, rax ; je 0xbfa3d ; call rax
0x00000000000bfa82 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000bfa52 : in al, 0x75 ; retf
0x00000000000bfa31 : je 0xbfa37 ; call rax
0x00000000000bfb5a : je 0xbfb63 ; call rdx
0x00000000000bfbcb : je 0xbfbd4 ; call rax
0x00000000000bfbc5 : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbda ; call rax
0x00000000000bfa2a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xbfa3e ; call rax
0x00000000000bfb54 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb69 ; call rdx
0x00000000000bfbc4 : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbdb ; call rax
0x00000000000bfb53 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb6a ; call rdx
0x00000000000bfa4f : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; retf
0x00000000000bfabc : ret 0x4864
0x00000000000bfbf4 : sub byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x00000000000bfa2f : test eax, eax ; je 0xbfa39 ; call rax
0x00000000000bfbc9 : test eax, eax ; je 0xbfbd6 ; call rax
0x00000000000bfb58 : test edx, edx ; je 0xbfb65 ; call rdx
0x00000000000bfa2e : test rax, rax ; je 0xbfa3a ; call rax
0x00000000000bfbc8 : test rax, rax ; je 0xbfbd7 ; call rax
0x00000000000bfb57 : test rdx, rdx ; je 0xbfb66 ; call rdx
0x0000000000080cc3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000080cc1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000080ccc : nop dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000083102 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000008314e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000083127 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000083128 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000083129 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000083126 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000083152 : and al, 8 ; call qword ptr [rdx]
0x000000000008314c : lea esi, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000830e9 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00000000000830e8 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000830e6 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000083150 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000083125 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000830e5 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000008314f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000083124 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000083101 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000083105 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000083106 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000008314b : stc ; lea esi, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000008314d : xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000078729 : jbe 0x78774 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078861 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x000000000007872c : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007872a : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007872b : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000540a5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000000743d7 : adc eax, 0x8900004e ; ret 0xceeb
0x00000000000743b0 : add byte ptr [rax], 0 ; je 0x743e8 ; mov eax, edx ; pop rbx ; ret
0x00000000000743b1 : add byte ptr [rax], al ; je 0x743e7 ; mov eax, edx ; pop rbx ; ret
0x00000000000743b3 : je 0x743e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000021065 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021068 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002108c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000021132 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000210dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000021090 : add byte ptr [rax], al ; call rax
0x00000000000210de : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000020faf : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021134 : add edi, ebp ; call rax
0x0000000000021133 : add rdi, rbp ; call rax
0x000000000002106c : and al, 0x18 ; call rax
0x000000000002108d : and eax, 0x30 ; call rax
0x000000000002106e : call rax
0x000000000002112d : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000002106a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000210e2 : mov eax, edx ; syscall
0x0000000000021067 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021069 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000021066 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000210aa : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000021131 : out 4, eax ; add rdi, rbp ; call rax
0x0000000000021135 : out dx, eax ; call rax
0x0000000000020fb8 : ret 0x8d48
0x00000000000210ad : ret 0xd284
0x0000000000020fb5 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000021130 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000002112f : shl rdi, 4 ; add rdi, rbp ; call rax
0x0000000000020fb7 : xchg eax, esp ; ret 0x8d48
0x00000000000210ac : xchg eax, esp ; ret 0xd284
0x000000000002108e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002108b : xor eax, dword ptr [0x30] ; call rax
0x00000000000210e0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000002108a : xor rax, qword ptr [0x30] ; call rax
0x0000000000021089 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000794b4 : enter -0x76ff, 3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000794c1 : loopne 0x794ca ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000794b6 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006bb85 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb1f : add dh, dh ; ret 0x7420
0x000000000006bb13 : je 0x6bb51 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb15 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb21 : ret 0x7420
0x000000000006e2b7 : add al, ch ; xchg eax, ebx ; retf
0x000000000006e2b5 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x000000000006e2e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000006e2b3 : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x000000000006e2b2 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x0000000000079231 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000079230 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000079258 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000079257 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007922d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000079256 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007922c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000079255 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000079234 : pop rbx ; jmp rax
0x00000000000772c4 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x00000000000772c9 : mov eax, ebp ; syscall
0x00000000000772c8 : mov eax, r13d ; syscall
0x00000000000772c3 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x00000000000772c6 : mov esi, ebp ; mov eax, r13d ; syscall
0x00000000000772c2 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x00000000000772c5 : mov rsi, rbp ; mov eax, r13d ; syscall
0x00000000000772f6 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000772c7 : out dx, al ; mov eax, r13d ; syscall
0x000000000006c085 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c084 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000006c086 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000bfcd2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bfcd9 : cmp eax, 0xfffff001 ; jae 0xbfce8 ; ret
0x00000000000bfcde : jae 0xbfce3 ; ret
0x00000000000bfcd1 : mov eax, 0x3a ; syscall
0x00000000000bfcd0 : pop rdi ; mov eax, 0x3a ; syscall
0x00000000000bfcd8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xbfce9 ; ret
0x000000000004c5d9 : adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x000000000004b647 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000004d083 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004bef4 : add byte ptr [rax + 0x29], cl ; retf 0xf48
0x000000000004c3ef : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000004b67d : add byte ptr [rax - 0x75], cl ; xor eax, 0x3608db ; call rax
0x000000000004d5e1 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000004cebf : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x000000000004ba10 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000004d436 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004bef2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0xf48
0x000000000004d5df : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000004cebd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x000000000004ba0e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000004b828 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000004c875 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; jmp rax
0x000000000004c3ee : add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x000000000004c876 : add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x000000000004b67c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3608db] ; call rax
0x000000000004b64b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000004b908 : add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x000000000004c7c5 : add byte ptr [rax], al ; xor r11d, r11d ; jmp rax
0x000000000004c5db : add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x000000000004c877 : add byte ptr [rsi + 1], bh ; jmp rax
0x000000000004c5a5 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000004bd97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000004c874 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x000000000004b906 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x000000000004c7c3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor r11d, r11d ; jmp rax
0x000000000004c737 : add eax, 0x89410000 ; ret 0x8d41
0x000000000004d435 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004c3ed : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000004c3f1 : add eax, edi ; jmp rax
0x000000000004c81a : add eax, edi ; mov edx, 1 ; jmp rax
0x000000000004c665 : add eax, edi ; mov r11d, 1 ; jmp rax
0x000000000004b903 : add eax, esi ; mov edx, 1 ; xor esi, esi ; jmp rax
0x000000000004c3f0 : add rax, rdi ; jmp rax
0x000000000004c819 : add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000004c664 : add rax, rdi ; mov r11d, 1 ; jmp rax
0x000000000004c733 : and al, 0xf ; test dl, cl ; add eax, 0x89410000 ; ret 0x8d41
0x000000000004dcfc : and al, 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ba21 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004b648 : and eax, 0x30 ; xor esi, esi ; call rax
0x000000000004d439 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004c3f2 : clc ; jmp rax
0x000000000004c81b : clc ; mov edx, 1 ; jmp rax
0x000000000004c666 : clc ; mov r11d, 1 ; jmp rax
0x000000000004d082 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004c60c : cmp eax, 0x13f ; add rax, rdi ; jmp rax
0x000000000004c5a3 : cmp eax, 0x1a8 ; add rax, rdi ; jmp rax
0x000000000004c3eb : cmp eax, 0x360 ; add rax, rdi ; jmp rax
0x000000000004b4c1 : dec dword ptr [rax - 0x77] ; ret 0x294c
0x000000000004bb7e : dec dword ptr [rax - 0x77] ; ret 0x8944
0x000000000004baa2 : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x000000000004bc35 : dec dword ptr [rcx + 0x39] ; ret
0x000000000004d07f : dec dword ptr [rdi] ; test edi, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004ba1d : dec dword ptr [rdi] ; xchg byte ptr [rcx], ah ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004ce49 : dec dword ptr [rdi] ; xchg byte ptr [rsi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004d056 : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000004d5e4 : fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000004cec2 : fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x000000000004bf53 : inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000004bea8 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000004ce0b : inc dword ptr [rcx - 0x77] ; rol byte ptr [rcx], 1 ; retf -0x7277
0x000000000004c60b : lea edi, dword ptr [rip + 0x13f] ; add rax, rdi ; jmp rax
0x000000000004c5a2 : lea edi, dword ptr [rip + 0x1a8] ; add rax, rdi ; jmp rax
0x000000000004c3ea : lea edi, dword ptr [rip + 0x360] ; add rax, rdi ; jmp rax
0x000000000004d06f : mov ebp, 0xfffffae0 ; or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004c668 : mov ebx, 1 ; jmp rax
0x000000000004c81c : mov edx, 1 ; jmp rax
0x000000000004b905 : mov edx, 1 ; xor esi, esi ; jmp rax
0x000000000004c42d : mov esi, 0x3d8d48c2 ; retf 0x11ea
0x000000000004c878 : mov esi, 1 ; jmp rax
0x000000000004b67f : mov esi, dword ptr [rip + 0x3608db] ; call rax
0x000000000004c667 : mov r11d, 1 ; jmp rax
0x000000000004b67e : mov rsi, qword ptr [rip + 0x3608db] ; call rax
0x000000000004c818 : nop ; add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000004d074 : or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004ce4d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004b4c4 : ret 0x294c
0x000000000004d53a : ret 0x4108
0x000000000004c150 : ret 0x8589
0x000000000004d5e7 : ret 0x8844
0x000000000004bb81 : ret 0x8944
0x000000000004c5de : ret 0x8d41
0x000000000004dc4a : ret 0xffe6
0x000000000004bd8a : ret 9
0x000000000004ce10 : retf -0x7277
0x000000000004c432 : retf 0x11ea
0x000000000004bef7 : retf 0xf48
0x000000000004ce0e : rol byte ptr [rcx], 1 ; retf -0x7277
0x000000000004c736 : rol dword ptr [rip - 0x76bf0000], 1 ; ret 0x8d41
0x000000000004c0a2 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004bf21 : sbb dword ptr [rbx - 0x51f43], eax ; call qword ptr [rax]
0x000000000004c42a : sub dword ptr [rcx + 0xf], eax ; mov esi, 0x3d8d48c2 ; retf 0x11ea
0x000000000004d434 : sub eax, 0x83480005 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004c5a4 : test al, 1 ; add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x000000000004c735 : test dl, cl ; add eax, 0x89410000 ; ret 0x8d41
0x000000000004d081 : test edi, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004ba1f : xchg byte ptr [rcx], ah ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004ce4b : xchg byte ptr [rsi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000004beab : xchg eax, esp ; ret
0x000000000004b649 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000004b680 : xor eax, 0x3608db ; call rax
0x000000000004b646 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x000000000004c7c8 : xor ebx, ebx ; jmp rax
0x000000000004b64d : xor esi, esi ; call rax
0x000000000004b90a : xor esi, esi ; jmp rax
0x000000000004c7c7 : xor r11d, r11d ; jmp rax
