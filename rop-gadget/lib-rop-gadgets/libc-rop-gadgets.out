0x0000000000191960 : adc ah, bl ; jmp qword ptr [rcx]
0x0000000000002da3 : adc ah, ch ; clc ; ret
0x000000000017da05 : adc ah, dh ; call qword ptr [rax]
0x000000000016c97c : adc ah, dl ; jmp qword ptr [rax]
0x000000000010ec22 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c4d1 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000055643 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000000493ad : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000145eff : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145f69 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000da036 : adc al, 0 ; add byte ptr [rax], al ; add dword ptr [rbp + 0x3b], esi ; ret
0x0000000000189ab0 : adc al, 0 ; add byte ptr [rax], al ; cld ; mov dword ptr [rax], eax ; add al, bh ; ret
0x000000000019d4b0 : adc al, 0 ; add byte ptr [rax], al ; cld ; ret
0x000000000018dbb0 : adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x00000000001948f0 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x38 ; add dword ptr [rax], eax ; clc ; ret 0xfff4
0x00000000001a1890 : adc al, 0 ; add byte ptr [rax], al ; fadd qword ptr [rdi] ; add al, byte ptr [rax] ; cwde ; retf -9
0x000000000018dca0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x000000000019dba0 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf 1
0x000000000019d320 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018db20 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000018dc58 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000018dc10 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x000000000018db08 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000018db50 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000018d418 : adc al, 0 ; add byte ptr [rax], al ; ret
0x000000000018dbf8 : adc al, 0 ; add byte ptr [rax], al ; retf
0x000000000018fae0 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xea ; add byte ptr [rax], al ; cwde ; ret
0x00000000000e780e : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000e7b01 : adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000008c958 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000029737 : adc al, 0 ; mov eax, ecx ; syscall
0x00000000000336ec : adc al, 0 ; mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000331fe : adc al, 0 ; orpd xmm0, xmm1 ; ret
0x0000000000021175 : adc al, 0 ; ret
0x000000000012bbf5 : adc al, 0x13 ; jmp rdx
0x000000000008c3a5 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000001a2fcc : adc al, 0x1f ; add al, byte ptr [rax] ; jo 0x1a3042 ; sti ; jmp qword ptr [rdx]
0x00000000000e7f4a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000debdf : adc al, 0x24 ; call 0x6adf4
0x0000000000035df7 : adc al, 0x24 ; mov rsi, r13 ; mov rdi, r12 ; call r14
0x00000000000db304 : adc al, 0x24 ; mov rsi, r15 ; call rbx
0x0000000000036ad0 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000023fc : adc al, 0x2d ; retf
0x0000000000193fcc : adc al, 0x2f ; add dword ptr [rax], eax ; ror byte ptr [rdi - 0xc], 1 ; jmp qword ptr [rcx]
0x000000000009d013 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000007b3b5 : adc al, 0x30 ; ret
0x00000000001844cc : adc al, 0x34 ; add byte ptr [rax], al ; cli ; call qword ptr [rdi]
0x0000000000194dcc : adc al, 0x3d ; add dword ptr [rax], eax ; or bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000009a580 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009b3e3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000008e66b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000021065 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001861cc : adc al, 0x51 ; add byte ptr [rax], al ; xor byte ptr [rsp + rbp*8], ch ; jmp rdi
0x00000000001962cc : adc al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf5 ; jmp qword ptr [rsi]
0x0000000000197acc : adc al, 0x6a ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000002d7f3 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x0000000000070a9e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000011523b : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000b36d9 : adc al, 0x8f ; add rdx, rdi ; jmp rdx
0x000000000005ab47 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000005a772 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x0000000000147390 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000145abe : adc al, 0x91 ; sub eax, edx ; ret
0x000000000012bbf1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005ad3f : adc al, 0x98 ; add rax, rdx ; jmp rax
0x000000000008afa7 : adc al, 0xa ; jmp r10
0x000000000008c513 : adc al, 0xa ; sub eax, edx ; ret
0x00000000000d3397 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x000000000008513d : adc al, 0xb ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000c112d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000f38b4 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000081cd9 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000019d4cc : adc al, 0xc4 ; add dword ptr [rax], eax ; and bh, 0xf6 ; jmp qword ptr [rdi]
0x00000000001287e4 : adc al, 0xc7 ; xor eax, eax ; ret
0x000000000018decc : adc al, 0xce ; add byte ptr [rax], al ; cmp bl, 0xfb ; jmp qword ptr [rax]
0x000000000018eecc : adc al, 0xde ; add byte ptr [rax], al ; loopne 0x18eef4 ; int1 ; call qword ptr [rdx]
0x000000000009d9bf : adc al, 0xe ; cmp rdi, rdx ; jb 0x9d9d2 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000aebc2 : adc al, 0xe ; jne 0xaebbd ; ret
0x0000000000143bd1 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000149fea : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x0000000000002be7 : adc al, 0xe7 ; ret
0x00000000000a7a7a : adc al, 0xe9 ; mov byte ptr [rbx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000159011 : adc al, 0xea ; test rdx, rdx ; je 0x159021 ; call rdx
0x000000000018fdcc : adc al, 0xed ; add byte ptr [rax], al ; add ah, ch ; sti ; jmp qword ptr [rbx]
0x00000000001150ed : adc al, 0xf ; retf -0x2e77
0x000000000002f46c : adc al, 0xf ; retf -0x32f1
0x0000000000117f15 : adc al, 0xf ; test bh, al ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000009af59 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000196051 : adc al, 0xf5 ; jmp qword ptr [rcx]
0x000000000017ea3d : adc al, 0xf7 ; lcall ptr [rax] ; ret 1
0x000000000017f2ed : adc al, 0xf8 ; call rax
0x0000000000154878 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f03f4 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001a7420 : adc al, 6 ; add byte ptr [rax], al ; ret
0x000000000008a826 : adc al, 7 ; cmp edx, esi ; je 0x8a827 ; ret
0x000000000008a752 : adc al, 7 ; test dl, dl ; jne 0x8a74f ; ret
0x000000000004092f : adc al, 9 ; ret 0x9f74
0x0000000000003d83 : adc al, bh ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000001823a5 : adc al, byte ptr [rax] ; add al, bh ; jl 0x18239b ; jmp qword ptr [rdi]
0x00000000001460a7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146111 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000007ae8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000009432 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000004de2 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000e0c5d : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000009213e : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000033d5c : adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000033bf4 : adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000000000016b358 : adc al, byte ptr [rax] ; or eax, 0xeef6d100 ; jmp rsp
0x00000000000ec623 : adc al, byte ptr [rbx + 0x94801e2] ; ret 0x394d
0x00000000000958b4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001a2315 : adc al, byte ptr [rdx] ; add al, bh ; fcompi st(7) ; call qword ptr [rsi]
0x000000000014c06f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000052f6b : adc al, ch ; call rcx
0x00000000000e0302 : adc al, ch ; clc ; retf -1
0x00000000001956b0 : adc al, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000052bb4 : adc al, ch ; push rsi ; ret
0x00000000000e25e7 : adc al, ch ; ret
0x00000000000da118 : adc al, ch ; ret 0xfffe
0x00000000000c9fd8 : adc al, ch ; retf -0xa99
0x0000000000084cef : adc al, ch ; stosd dword ptr [rdi], eax ; mov eax, 0x8948fff9 ; ret 0xc031
0x000000000016cac8 : adc bh, ah ; jmp qword ptr [rax]
0x000000000017f29d : adc bh, al ; jmp rax
0x000000000017cb8c : adc bh, bh ; out dx, eax ; jmp qword ptr [rax]
0x000000000012660a : adc bh, byte ptr [rax + 3] ; syscall
0x0000000000003baf : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000194d80 : adc bh, cl ; hlt ; call qword ptr [rcx]
0x00000000000d45e2 : adc bh, dh ; ret 0x30f
0x00000000001065f5 : adc bh, dh ; ret 0x8080
0x0000000000180154 : adc bl, ah ; stc ; jmp rax
0x0000000000032f18 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000017a148 : adc bl, byte ptr [rdi - 3] ; call qword ptr [rdx]
0x0000000000098a25 : adc bl, ch ; call 0xffffffffc3da137a
0x0000000000098945 : adc bl, ch ; call 0xffffffffc402129a
0x000000000009ba15 : adc bl, ch ; call 0xffffffffc402436a
0x000000000016cb8c : adc bl, ch ; jmp qword ptr [rax]
0x0000000000044032 : adc bl, ch ; jno 0x44088 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000099b66 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000098ed6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000098f47 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000098ea7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002cb0a : adc bl, dh ; ret
0x0000000000189f50 : adc bl, dl ; out dx, al ; call qword ptr [rax]
0x0000000000099b65 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000098ed5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000077796 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000159d22 : adc byte ptr [r13 + 0x5b0875c0], r8b ; ret
0x00000000000fcd71 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x00000000000832b2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000c8aa5 : adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x0000000000127db7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000005a309 : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000013e4ba : adc byte ptr [r8 - 0x77], cl ; retf -0x7cb8
0x00000000000c1fd5 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000009cf8c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009cfae : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009cfec : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009d06e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000c336a : adc byte ptr [r9 + 3], r9b ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000511f8 : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000098cfa : adc byte ptr [rax + 0x29], cl ; retf -0x72b4
0x000000000008def6 : adc byte ptr [rax + 0x29], cl ; retf -0x79f1
0x00000000000994da : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x0000000000116cec : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x0000000000081fad : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000002a43e : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000f195f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000c8aa6 : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x000000000007b1cb : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000125472 : adc byte ptr [rax + 0x39], cl ; retf
0x000000000007b4a4 : adc byte ptr [rax + 0x39], cl ; retf -0x78f1
0x00000000000f195e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000127db8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000110dce : adc byte ptr [rax + 0x63], cl ; cmc ; mov eax, 0x81 ; syscall
0x0000000000077173 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f272a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000115fa9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000119116 : adc byte ptr [rax + 1], bh ; ret
0x00000000000aed3e : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000446ae : adc byte ptr [rax + 1], cl ; ret
0x000000000008e666 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000f2fc0 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000011c19d : adc byte ptr [rax + 1], dil ; ret
0x0000000000082331 : adc byte ptr [rax + 3], cl ; push rax ; sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x000000000011b6e1 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008a0a2 : adc byte ptr [rax + rcx*4 + 0x14], al ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000009d194 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009d092 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009d010 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000e8603 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000f38b1 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002cb03 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000007c930 : adc byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000000f3ad5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000f3ad4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000021068 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000005acd4 : adc byte ptr [rax - 0x75], cl ; cmp al, ch ; retf
0x00000000000f8b57 : adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x00000000000704ae : adc byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf -0x7df1
0x0000000000115232 : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x00000000001171c6 : adc byte ptr [rax - 0x76be05b3], cl ; retf -0x76b8
0x000000000007c4b0 : adc byte ptr [rax - 0x77], cl ; add byte ptr [rax + rsi], 1 ; ret
0x00000000000986fc : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000082153 : adc byte ptr [rax - 0x77], cl ; enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000000b151d : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006fe27 : adc byte ptr [rax - 0x77], cl ; jo 0x6fe45 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000011387b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000006fde7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000083102 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000235d7 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000005a30a : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000fd726 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000003d063 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00000000000a906b : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000007eb89 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x00000000001170d3 : adc byte ptr [rax - 0x77], cl ; ret 0x94c
0x00000000000f8db8 : adc byte ptr [rax - 0x77], cl ; retf -0x76b4
0x000000000013e4bb : adc byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x000000000017ab34 : adc byte ptr [rax - 0x786f0005], cl ; sti ; call qword ptr [rax]
0x0000000000154b6b : adc byte ptr [rax - 0x7b], cl ; retf -0x7af1
0x000000000013ae77 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000013aeb3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000944a4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000c8a43 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x39 ; ret
0x000000000005ace1 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000800e3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008e3d0 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000f2c7a : adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000000031e : adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x0000000000197890 : adc byte ptr [rax - 0xb], ah ; call qword ptr [rbx]
0x000000000016c500 : adc byte ptr [rax - 0xf], bl ; ljmp ptr [rax + 0x58] ; int1 ; call qword ptr [rax]
0x00000000000d914b : adc byte ptr [rax - 1], bh ; ret
0x000000000017a630 : adc byte ptr [rax - 5], ah ; jmp rax
0x000000000017aba8 : adc byte ptr [rax - 5], ch ; call qword ptr [rax + 0x10fffb69]
0x000000000017abfc : adc byte ptr [rax - 5], dh ; call qword ptr [rax + 0x10fffb71]
0x000000000017f63c : adc byte ptr [rax - 8], dl ; call rax
0x000000000017ed1c : adc byte ptr [rax - 9], bl ; jmp qword ptr [rax]
0x00000000000e6fab : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000689fc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000014a528 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x0000000000143dc0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000145b52 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000143c20 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000148321 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001462b1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010039c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf -0x603
0x0000000000005868 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000000082e0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x48
0x00000000000e4ffc : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f8a86 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000037c1c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000114eaa : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001137c5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000009dff3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000016f2ed : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000016f30d : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x000000000019d40c : adc byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000000e7170 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000069294 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x692a9 ; ret
0x000000000008cdd8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000fd213 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c11d2 : adc byte ptr [rax], al ; add cl, ch ; retf
0x0000000000136a68 : adc byte ptr [rax], al ; add cl, ch ; retf -2
0x0000000000067782 : adc byte ptr [rax], al ; call 0xf3a14
0x00000000000f8f23 : adc byte ptr [rax], al ; je 0xf8f36 ; xor eax, eax ; ret
0x0000000000040a9d : adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x000000000002287c : adc byte ptr [rax], al ; mov rdi, r13 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000221a4 : adc byte ptr [rax], al ; mov rdi, rbx ; call r14
0x00000000000621b3 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x0000000000069ac2 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000626e6 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000006a7fc : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x0000000000041522 : adc byte ptr [rax], al ; ret
0x000000000009cf8d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009cfaf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009cfed : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009d06f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009d171 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000001a4380 : adc byte ptr [rax], dl ; add eax, 0x1bd0000 ; mov byte ptr [rcx], al ; retf 2
0x000000000007bfda : adc byte ptr [rbp + 0x39], cl ; ret
0x00000000000d6bf1 : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000159d23 : adc byte ptr [rbp + 0x5b0875c0], al ; ret
0x000000000017c5a4 : adc byte ptr [rbp - 0x11], bl ; call rax
0x0000000000166950 : adc byte ptr [rbp - 0x4aca0014], dh ; in al, dx ; call qword ptr [rax]
0x000000000017ae80 : adc byte ptr [rbp - 0x536f0005], ch ; sti ; call qword ptr [rax]
0x00000000000fcd72 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x000000000009f952 : adc byte ptr [rbp - 0xd], dh ; ret
0x000000000017a5a8 : adc byte ptr [rbp - 5], bl ; push rax ; pop rsi ; sti ; call rax
0x000000000017abf4 : adc byte ptr [rbp - 5], ch ; call qword ptr [rax + 0x10fffb6e]
0x00000000000e6abf : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x0000000000054247 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029988 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ec9da : adc byte ptr [rbx + 0x94801e1], al ; retf -0x76b7
0x00000000001928bb : adc byte ptr [rbx + 0xa5d0202], al ; ret
0x000000000018914a : adc byte ptr [rbx + 0xa], al ; ret
0x0000000000187d0d : adc byte ptr [rbx + 0xa], ch ; ret
0x0000000000186054 : adc byte ptr [rbx + 0xab20202], al ; ret
0x0000000000077797 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000017ae88 : adc byte ptr [rbx + rdi*8 - 0x4546f01], ch ; call qword ptr [rax]
0x000000000017abc8 : adc byte ptr [rbx + rdi*8 - 1], dh ; nop ; jne 0x17abd1 ; call qword ptr [rax]
0x000000000017a458 : adc byte ptr [rbx + rdi*8], bh ; call qword ptr [rax]
0x00000000001871d3 : adc byte ptr [rbx - 0x1ff1b2fe], al ; add dword ptr [rdx], eax ; ret
0x000000000007a742 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000073897 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x738b1 ; ret
0x0000000000166958 : adc byte ptr [rbx - 0x4cef0014], dh ; in al, dx ; call qword ptr [rax]
0x00000000000e63b0 : adc byte ptr [rbx - 0x6817c383], cl ; retf -1
0x000000000009e228 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000010baeb : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000003ebf6 : adc byte ptr [rbx - 0x7af067fc], cl ; ret
0x00000000000fcf06 : adc byte ptr [rbx - 0x7d], bl ; loopne 0xfcf1f ; pop rbp ; pop r12 ; ret
0x00000000001599dc : adc byte ptr [rbx - 0xd], bl ; ret
0x000000000017a698 : adc byte ptr [rbx - 5], ah ; call qword ptr [rax]
0x000000000017a5c4 : adc byte ptr [rbx - 5], bl ; push rax ; pop rsp ; sti ; call rax
0x000000000017abb0 : adc byte ptr [rbx - 5], ch ; call qword ptr [rax + 0x10fffb6c]
0x000000000017ac04 : adc byte ptr [rbx - 5], dh ; call qword ptr [rax + 0x10fffb74]
0x000000000017d394 : adc byte ptr [rbx], ch ; call qword ptr [rax]
0x000000000000230b : adc byte ptr [rbx], cl ; pop rbx ; cmp byte ptr [rdi], cl ; salc ; ret
0x000000000007b225 : adc byte ptr [rbx], dh ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007c047 : adc byte ptr [rcx + 0x5c], al ; ret
0x000000000018b4f4 : adc byte ptr [rcx + 0xa], al ; ret
0x000000000003b479 : adc byte ptr [rcx + 0xf], cl ; ret
0x00000000000855d7 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00000000000c336b : adc byte ptr [rcx + 3], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000fd050 : adc byte ptr [rcx + rcx*4 + 0x40], cl ; or byte ptr [rax - 0x77], cl ; retf -0x76b7
0x00000000000d9e1c : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x000000000007fa29 : adc byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000072d87 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ee022 : adc byte ptr [rcx + rcx*4 - 0x39], cl ; xor eax, eax ; syscall
0x000000000009d0f2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009d0d2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000017ab2c : adc byte ptr [rcx - 0x776f0005], cl ; sti ; call qword ptr [rax]
0x00000000000ec97a : adc byte ptr [rcx - 0x77], cl ; retf
0x00000000000aa2e4 : adc byte ptr [rcx - 0x7cb7e9f4], cl ; ret 0x4804
0x000000000007bf87 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000000d3bb7 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000801e3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4920
0x0000000000143c53 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001477f7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000017d76c : adc byte ptr [rcx - 0xd], cl ; jmp qword ptr [rax]
0x000000000016c508 : adc byte ptr [rcx - 0xf], bl ; jmp qword ptr [rax]
0x0000000000048ccc : adc byte ptr [rcx - 3], bh ; dec dword ptr [rax + 0x29] ; ret
0x000000000017a694 : adc byte ptr [rcx - 5], ah ; call qword ptr [rax]
0x000000000017ac14 : adc byte ptr [rcx - 5], bh ; call qword ptr [rax + 0x10fffb7a]
0x000000000017abc0 : adc byte ptr [rcx - 5], dh ; call qword ptr [rax + 0x10fffb72]
0x00000000001920dd : adc byte ptr [rcx], al ; add al, ah ; cld ; call qword ptr [rax]
0x000000000003f094 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000f0bd1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000ab0e4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b07fa : adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000377be : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007a745 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000029959 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010bee7 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000e790d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xe7949 ; ret
0x000000000017a420 : adc byte ptr [rcx], dh ; sti ; call rax
0x00000000000f8743 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000017ea74 : adc byte ptr [rdi + rsi*8], bl ; dec eax ; ret
0x00000000000ba856 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000017ae70 : adc byte ptr [rdi - 0x516f0005], ch ; sti ; call qword ptr [rax]
0x000000000017ab3c : adc byte ptr [rdi - 0x796f0005], al ; sti ; call qword ptr [rax]
0x0000000000197550 : adc byte ptr [rdi - 0xb], dl ; call qword ptr [rdx]
0x000000000017abe4 : adc byte ptr [rdi - 5], ah ; call qword ptr [rax + 0x10fffb68]
0x000000000017abd0 : adc byte ptr [rdi - 5], dh ; call qword ptr [rax + 0x10fffb78]
0x000000000017f76c : adc byte ptr [rdi - 8], ah ; call qword ptr [rax]
0x000000000017f910 : adc byte ptr [rdi], 2 ; add al, dl ; ret 0xfff8
0x0000000000083090 : adc byte ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000002cef5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000100e7a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000832b3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000075f98 : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000001153ec : adc byte ptr [rdi], cl ; retf -0x2877
0x00000000001150a9 : adc byte ptr [rdi], cl ; retf -0x2e77
0x000000000011520c : adc byte ptr [rdi], cl ; retf 0x5089
0x0000000000115169 : adc byte ptr [rdi], cl ; retf 0x5389
0x000000000013df58 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000001529a3 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000144e41 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f31 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144d51 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d1cb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bccf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014cecf : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c5cf : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c8cf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bfc7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145799 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000001452f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000144a81 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00000000001454d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144c61 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001456b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010d7e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001455c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f03 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144ff3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144e13 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c274 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ce74 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d174 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c874 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c574 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014bf6c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144b71 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000148a9d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001488bd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149295 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001481b5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001490b5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144d23 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144b43 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144c33 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144a53 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000063898 : adc byte ptr [rdi], cl ; xchg dword ptr [rax + rdi + 0x1480000], esi ; ret
0x00000000000349a3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x00000000000d9e25 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x000000000003f921 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8349
0x00000000000e59fb : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8440
0x0000000000003a01 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000185a68 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x000000000012c0e9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017abd8 : adc byte ptr [rdx - 5], bh ; call qword ptr [rax - 0x2f000485]
0x000000000017abec : adc byte ptr [rdx - 5], ch ; call qword ptr [rax + 0x10fffb6b]
0x000000000009213d : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000010f37f : adc byte ptr [rdx], al ; je 0x10f38c ; ret
0x000000000017a454 : adc byte ptr [rdx], bh ; sti ; call qword ptr [rax]
0x000000000010fd00 : adc byte ptr [rdx], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014feeb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a4381 : adc byte ptr [rip + 0x1bd0000], al ; mov byte ptr [rcx], al ; retf 2
0x000000000012516d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000014fd9a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000014f395 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014f795 : adc byte ptr [rsi + 0xf], ah ; jmp 0x14f769
0x000000000014f813 : adc byte ptr [rsi + 0xf], ah ; jmp 0x14f7e7
0x000000000014fca5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x14fc79
0x000000000014fd23 : adc byte ptr [rsi + 0xf], ah ; jmp 0x14fcf7
0x0000000000150dc5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x150d99
0x0000000000150e43 : adc byte ptr [rsi + 0xf], ah ; jmp 0x150e17
0x00000000001512d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1512a9
0x0000000000151353 : adc byte ptr [rsi + 0xf], ah ; jmp 0x151327
0x000000000014f790 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14f76e
0x000000000014f80e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14f7ec
0x000000000014fca0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14fc7e
0x000000000014fd1e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14fcfc
0x0000000000150dc0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x150d9e
0x0000000000150e3e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x150e1c
0x00000000001512d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1512ae
0x000000000015134e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x15132c
0x000000000008b0f5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ef2b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000535f5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf1e8
0x000000000004ebb9 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000005155b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000000990bb : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000990ba : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000187b10 : adc byte ptr [rsi - 0x12], bl ; jmp qword ptr [rdi]
0x000000000017ae78 : adc byte ptr [rsi - 0x526f0005], ch ; sti ; call qword ptr [rax]
0x000000000017ab44 : adc byte ptr [rsi - 0x7a6f0005], al ; sti ; call qword ptr [rax]
0x000000000017abb8 : adc byte ptr [rsi - 5], ch ; call qword ptr [rax + 0x10fffb6f]
0x000000000017ac0c : adc byte ptr [rsi - 5], dh ; call qword ptr [rax + 0x10fffb77]
0x00000000001395ed : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019aeb0 : adc byte ptr [rsi], bh ; idiv bh ; retf
0x0000000000196540 : adc byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000010f8c3 : adc byte ptr [rsp + 0x48], dh ; add esp, 8 ; ret
0x0000000000037a6a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000000afbaa : adc byte ptr [rsp - 0x10], al ; ret
0x00000000000453df : adc byte ptr [rsp - 4], al ; ret
0x0000000000045425 : adc byte ptr [rsp - 8], al ; ret
0x000000000014c277 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011eda7 : adc ch, al ; ret
0x00000000000bc664 : adc ch, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000017c244 : adc ch, ch ; out dx, al ; call qword ptr [rax]
0x00000000000c86da : adc cl, byte ptr [r8 - 0x7d] ; ret
0x000000000008aef5 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000b059e : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b051f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000b060f : adc cl, byte ptr [rax + 0x29] ; retf -0x76b8
0x00000000000e8ec8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000429ed : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33d71fd
0x00000000000c86db : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000002ea1b : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000098935 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000000970 : adc cl, byte ptr [rcx + rax] ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000000aa1cb : adc cl, byte ptr [rcx - 0x7cb7e9f4] ; ret 0x4804
0x00000000000656a6 : adc cl, ch ; pop rsi ; retf -1
0x000000000018d700 : adc cl, dl ; out dx, eax ; jmp qword ptr [rax]
0x000000000016c7f8 : adc dh, al ; jmp qword ptr [rax]
0x0000000000181170 : adc dh, bh ; jmp 0x19dc7a
0x000000000016cd51 : adc dh, bl ; call rax
0x000000000016cd45 : adc dh, bl ; call rdi
0x000000000016cd41 : adc dh, bl ; lcall ptr [rax] ; adc dh, bl ; call rdi
0x000000000011cd5a : adc dh, dh ; ret 0x7401
0x000000000007d4de : adc dh, dh ; ret 0xf0f
0x0000000000180214 : adc dh, dh ; stc ; call qword ptr [rax]
0x00000000000334fd : adc dh, dl ; addps xmm0, xmm0 ; add rsp, 0x28 ; ret
0x0000000000195490 : adc dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000017e604 : adc dl, al ; idiv bh ; js 0x17e5c0 ; add dword ptr [rax], eax ; push rax ; ret 0xfff6
0x00000000000026fa : adc dl, bh ; enter -0x1ee6, -0x4c ; hlt ; out -0x21, eax ; syscall
0x0000000000195350 : adc dl, bl ; hlt ; jmp qword ptr [rcx]
0x000000000017ebc8 : adc dl, cl ; add dword ptr [rax], eax ; and byte ptr [rsi - 9], cl ; ljmp ptr [rax] ; retf 1
0x000000000016c6d8 : adc dl, dh ; sti ; jmp qword ptr [rax]
0x000000000016c908 : adc dl, dl ; jmp qword ptr [rax]
0x0000000000071e04 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000015954b : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000036f8e : adc dword ptr [rax - 0x77], ecx ; ret
0x00000000000da3ad : adc dword ptr [rax - 0x77], ecx ; ret 0x349
0x000000000007a6ec : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x000000000006c8e5 : adc dword ptr [rax - 0x77], ecx ; retf
0x00000000000cdf0e : adc dword ptr [rax - 0x77], ecx ; retf -0x76b8
0x0000000000089175 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000cc10e : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000000000cec66 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000832b7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014a81b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000040a9b : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x000000000007d155 : adc dword ptr [rax], eax ; add al, ch ; ret
0x0000000000146247 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001481b9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000bb68 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x0000000000004cc2 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001594eb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000e0bfd : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000008cc58 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000027f07 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x415e
0x00000000000bfa80 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x0000000000057e53 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdi ; jmp rax
0x000000000005ab43 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000086fda : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000088e7a : adc dword ptr [rbp + 0xf], eax ; mov dh, 0x14 ; adc eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x0000000000118683 : adc dword ptr [rbx + 0x29], edx ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000a03eb : adc dword ptr [rbx + 0x39480030], edx ; ret
0x0000000000037bf2 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009dc38 : adc dword ptr [rbx], eax ; ret
0x000000000018ce22 : adc dword ptr [rbx], eax ; retf 0xa03
0x000000000009dbb1 : adc dword ptr [rbx], esp ; ret
0x00000000000cec48 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x0000000000151bc7 : adc dword ptr [rcx + 7], edi ; ret
0x000000000010fdbe : adc dword ptr [rcx + rcx*4 - 0x20], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009dbac : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000151862 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000151826 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000120dce : adc dword ptr [rcx], eax ; ja 0x120e02 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000f57c6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000d8e43 : adc dword ptr [rcx], esi ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000009dc33 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000009d973 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x000000000009db15 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000009db1a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x000000000009daf2 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000009daf7 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000151d29 : adc dword ptr [rdi - 8], edi ; ret
0x000000000009d970 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000332d4 : adc dword ptr [rdi], ecx ; ret
0x000000000003329d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000033632 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000151f7c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000000236d : adc dword ptr [rsi + 0x6c8cd7d0], esp ; xor bl, al ; retf 0x23c4
0x00000000001520af : adc dword ptr [rsi + 3], edx ; ret
0x000000000015214c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000151f4e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000158d56 : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000146246 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aed3a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000015950b : adc eax, 0x255470 ; je 0x15951a ; ret
0x00000000001256b7 : adc eax, 0x287e54 ; add rsp, 8 ; ret
0x000000000011dc59 : adc eax, 0x293462 ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000115382 : adc eax, 0x2967d9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000011d422 : adc eax, 0x29f9 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000f25df : adc eax, 0x2b9d5c ; je 0xf25f0 ; pop rbp ; ret
0x00000000000ea1be : adc eax, 0x2c504d ; add rsp, 8 ; ret
0x0000000000168c64 : adc eax, 0x2f3ffae1 ; retf -0x4ae6
0x000000000007b2f3 : adc eax, 0x330fb8 ; ret
0x0000000000024bbc : adc eax, 0x358d4800 ; lahf ; ret
0x0000000000034e7d : adc eax, 0x377306 ; ret
0x000000000002d236 : adc eax, 0x37ece5 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002bfa9 : adc eax, 0x381bef ; ret
0x0000000000020829 : adc eax, 0x390bfa ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000009f21a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000001ebc : adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000000ff7c9 : adc eax, 0x52f22 ; cmove rax, rdx ; ret
0x0000000000099868 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000018261d : adc eax, 0x6ab00000 ; std ; call qword ptr [rcx]
0x000000000009af8c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000145dd1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000024ced : adc eax, 0x83489066 ; ret 0x8901
0x00000000000743d7 : adc eax, 0x8900004e ; ret 0xceeb
0x000000000003eeb3 : adc eax, 0x89480000 ; retf -0x74b8
0x0000000000058366 : adc eax, 0x89480000 ; retf -0x76b8
0x000000000012a4d8 : adc eax, 0x894d0000 ; retf
0x000000000009f924 : adc eax, 0xb2dd7 ; cmove rax, rdx ; ret
0x000000000017f8c1 : adc eax, 0xb9500002 ; clc ; call qword ptr [rax]
0x00000000000af50a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000cb477 : adc eax, 0xf6000001 ; ret
0x0000000000062a72 : adc eax, 0xf600001f ; ret
0x000000000009de84 : adc eax, 0xf880272 ; ret
0x000000000005a31f : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014a57e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fd9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000cd50 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000e7a61 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008cad8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004c5d9 : adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x0000000000031bae : adc eax, dword ptr [rax] ; add rdx, rsi ; jmp rdx
0x00000000000429b5 : adc eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002d7ef : adc eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000088e7f : adc eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x00000000000e6cbc : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000000c9f5c : adc eax, dword ptr [rbx + 0x67403f8] ; ret
0x000000000016b8d8 : adc eax, dword ptr [rbx + 0x73a5ffef] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b898 : adc eax, dword ptr [rbx + 0x761fffef] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b8f8 : adc eax, dword ptr [rbx + 0x77d4ffef] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b930 : adc eax, dword ptr [rbx + 0x79a5ffef] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b958 : adc eax, dword ptr [rbx + 0x7ed0ffef] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b828 : adc eax, dword ptr [rbx - 0x7cec0011] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b954 : adc eax, dword ptr [rbx - 0x7cec0011] ; out dx, eax ; call rax
0x000000000016b8f4 : adc eax, dword ptr [rbx - 0x7cec0011] ; out dx, eax ; call rsp
0x000000000016b8ec : adc eax, dword ptr [rbx - 0x7d350011] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b96c : adc eax, dword ptr [rbx - 0x7d350011] ; out dx, eax ; call rsi
0x000000000016b960 : adc eax, dword ptr [rbx - 0x7d410011] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b890 : adc eax, dword ptr [rbx - 0x7d4d0011] ; out dx, eax ; call qword ptr [rbx]
0x00000000000f0557 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000017ceb1 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; xchg eax, esi ; jmp rax
0x000000000017f899 : adc eax, dword ptr [rdx] ; add byte ptr [rax - 0x5c], al ; clc ; jmp qword ptr [rax]
0x00000000000958b8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014bf6f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000439e9 : adc eax, eax ; ret
0x0000000000043b26 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000000eaf2d : adc ebp, dword ptr [rax + rax] ; ret
0x0000000000168905 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000016b7bc : adc ebp, dword ptr [rdi - 0x11] ; jmp rdi
0x00000000000bc4f4 : adc ebp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000100230 : adc ebp, ebx ; ret 0x1f0f
0x0000000000195e69 : adc ebp, esi ; call qword ptr [rbx]
0x0000000000195ee9 : adc ebp, esi ; call rdx
0x0000000000033e39 : adc ebx, dword ptr [rcx + 0x14] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xaae8
0x000000000016e6fc : adc ebx, dword ptr [rsi + rsi*8 - 1] ; sub byte ptr [rsi - 0xa], bl ; call qword ptr [rdi]
0x00000000000f3adc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000016cd49 : adc ebx, esi ; jmp rax
0x000000000009b8ec : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x00000000001223fe : adc ecx, dword ptr [rax + 0x39] ; ret
0x00000000000e1ba4 : adc ecx, dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x1c], cl ; syscall
0x00000000000fdf09 : adc ecx, dword ptr [rax + 5] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000002bfeb : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x00000000000e438b : adc ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfff3
0x0000000000025164 : adc ecx, dword ptr [rax - 0x77] ; retf
0x0000000000122659 : adc ecx, dword ptr [rax - 0x77] ; retf -0x76b4
0x0000000000079a2a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000000b3830 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a9eb1 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000009f694 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x0000000000088ebf : adc ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000057349 : adc ecx, dword ptr [rbp + rsi] ; call rax
0x0000000000061ea4 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x00000000000e0bf8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x11b8
0x00000000000e0c58 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x12b8
0x00000000000e7b98 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x27b8
0x00000000000e7bf8 : adc ecx, dword ptr [rcx - 0x77] ; retf 0x28b8
0x00000000000a1c12 : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000a41b1 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4901
0x0000000000115450 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000001151f2 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x0000000000095a84 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x0000000000095aa4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000095ac4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x000000000009590e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000018eb89 : adc ecx, esi ; call qword ptr [rsi]
0x0000000000084fab : adc edi, 0xf48000c ; ret 0x48c3
0x000000000017f2ad : adc edi, eax ; call qword ptr [rax]
0x000000000009f289 : adc edi, ecx ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000169e1e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000f00f5 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000079183 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006ce6a : adc esi, esi ; ret 0xf20
0x000000000014c152 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000151bc6 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000151861 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000151825 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000151d28 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000001520ae : adc qword ptr [rsi + 3], rdx ; ret
0x000000000015214b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000151f4d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000031bad : adc r8, qword ptr [r8] ; add rdx, rsi ; jmp rdx
0x0000000000148140 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000043b25 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001a149b : add ah, ah ; add eax, dword ptr [rdx] ; add al, dh ; ret
0x000000000019099b : add ah, ah ; clc ; add byte ptr [rax], al ; mov al, 0xa0 ; jmp rsp
0x000000000018ee9b : add ah, ah ; fld qword ptr [rax] ; add al, ah ; sbb esi, ecx ; call qword ptr [rdx]
0x000000000018d89b : add ah, ah ; mov dword ptr [rax], 0xefd56000 ; call qword ptr [rbx]
0x0000000000191e9b : add ah, ah ; or eax, 0xeac00001 ; jmp qword ptr [rcx]
0x000000000019709b : add ah, ah ; pop rdi ; add dword ptr [rax], eax ; jo 0x1970ee ; cmc ; jmp qword ptr [rdx]
0x000000000000ba0f : add ah, ah ; ret
0x000000000018db9b : add ah, ah ; retf 0
0x000000000019567b : add ah, al ; add dword ptr [r8], r8d ; loopne 0x195671 ; hlt ; jmp qword ptr [rcx]
0x00000000001a147b : add ah, al ; add eax, dword ptr [rdx] ; add al, ah ; ret
0x0000000000194d7b : add ah, al ; cmp al, 1 ; add byte ptr [rax], dl ; iretd ; hlt ; call qword ptr [rcx]
0x0000000000188b7b : add ah, al ; jp 0x188b87 ; add byte ptr [rax - 0x71], dh ; out dx, al ; jmp rcx
0x0000000000191d7b : add ah, al ; or al, 1 ; add byte ptr [rax - 0x17], dl ; jmp qword ptr [rcx]
0x000000000019657b : add ah, al ; push rsp ; add dword ptr [rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x000000000018457b : add ah, al ; xor al, 0 ; add byte ptr [rax], dh ; sub ebp, ebx ; call qword ptr [rcx]
0x0000000000186fbb : add ah, bh ; add byte ptr [rax], al ; add byte ptr [rax], ah ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001976b3 : add ah, bh ; add dword ptr gs:[rax], eax ; test al, 0x58 ; cmc ; jmp rax
0x000000000009df4e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009df6e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000018eeb3 : add ah, bh ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x0000000000197ab3 : add ah, bh ; imul eax, dword ptr [rcx], 0xf566b800 ; jmp qword ptr [rcx]
0x000000000009e006 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009df2d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001982b3 : add ah, bh ; jno 0x1982c0 ; add al, bl ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000189ab3 : add ah, bh ; mov dword ptr [rax], eax ; add al, bh ; ret
0x0000000000199fb3 : add ah, bh ; mov es, word ptr [rcx] ; add byte ptr [rax - 0xe], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000191eb3 : add ah, bh ; or eax, 0xead80001 ; jmp qword ptr [rcx]
0x0000000000197fb3 : add ah, bh ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000019d4b3 : add ah, bh ; ret
0x000000000018dbb3 : add ah, bh ; retf 0
0x000000000018c0b3 : add ah, bh ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x18c129 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000195393 : add ah, bl ; add dword ptr [rax], eax ; mov dl, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000194b93 : add ah, bl ; cmp al, byte ptr [rcx] ; add byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x0000000000184993 : add ah, bl ; cmp byte ptr [rax], al ; add al, ch ; xor ch, bl ; call qword ptr [rsi]
0x0000000000194993 : add ah, bl ; cmp byte ptr [rcx], al ; add al, ch ; ret
0x0000000000198393 : add ah, bl ; jb 0x1983a0 ; add al, bl ; mov dh, ch ; jmp qword ptr [rcx]
0x000000000018cc93 : add ah, bl ; mov ebx, 0x83f80000 ; out dx, eax ; call qword ptr [rcx]
0x0000000000187a9b : add ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax + 0x5c], dl ; out dx, al ; jmp qword ptr [rbx]
0x0000000000196893 : add ah, bl ; push rdi ; add dword ptr [rax], eax ; pop rax ; and al, 0xf5 ; jmp qword ptr [rsi]
0x000000000019a493 : add ah, bl ; xchg eax, ebx ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000184593 : add ah, bl ; xor al, 0 ; add byte ptr [rax], bh ; sub ebp, ebx ; call qword ptr [rcx]
0x0000000000169e47 : add ah, byte ptr [rbp + rdi - 0x55] ; retf -0x5d02
0x0000000000192cd7 : add ah, byte ptr [rbx + 0xa] ; ret
0x000000000019ca51 : add ah, byte ptr [rcx + 0xa] ; ret
0x000000000019a84c : add ah, byte ptr [rdx + 0x41200e0a] ; ret
0x00000000000f9add : add ah, byte ptr [rdx - 0x76b7fff9] ; ret 0x8948
0x00000000001520aa : add ah, byte ptr [rdx - 0xf] ; jl 0x1520ff ; adc dword ptr [rsi + 3], edx ; ret
0x000000000009590b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000051557 : add ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000001823a3 : add ah, ch ; adc al, byte ptr [rax] ; add al, bh ; jl 0x18239d ; jmp qword ptr [rdi]
0x00000000001954a3 : add ah, ch ; add dword ptr [r8], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000194ea3 : add ah, ch ; cmp eax, 0xd1480001 ; hlt ; jmp qword ptr [rcx]
0x000000000019b8a3 : add ah, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; call qword ptr [rcx]
0x000000000018d3a3 : add ah, ch ; ret 0
0x000000000018dca3 : add ah, ch ; retf
0x000000000019dba3 : add ah, ch ; retf 1
0x000000000018fdd0 : add ah, ch ; sti ; jmp qword ptr [rbx]
0x000000000019a3a3 : add ah, ch ; xchg eax, edx ; add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x0000000000186083 : add ah, cl ; add byte ptr [r8], r8b ; mov byte ptr [rdi], ah ; in al, dx ; jmp qword ptr [rdx]
0x0000000000193f83 : add ah, cl ; add dword ptr cs:[rax], eax ; mov byte ptr [rdi - 0xc], cl ; jmp qword ptr [rcx]
0x000000000018eb83 : add ah, cl ; fiadd dword ptr [rax] ; add al, bl ; adc ecx, esi ; call qword ptr [rsi]
0x000000000018ee83 : add ah, cl ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x0000000000191e83 : add ah, cl ; or eax, 0xeaa80001 ; jmp qword ptr [rcx]
0x0000000000196e83 : add ah, cl ; pop rbp ; add dword ptr [rax], eax ; cwde ; cmc ; call qword ptr [rdx]
0x000000000018db83 : add ah, cl ; retf 0
0x00000000001a3e83 : add ah, cl ; sub eax, 0x40880002 ; clc ; jmp qword ptr [rsi]
0x00000000001956ab : add ah, dh ; add dword ptr [r8], r8d ; adc al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001936ab : add ah, dh ; and eax, 0xfc300001 ; jmp rdx
0x00000000001a0dab : add ah, dh ; cld ; add dword ptr [rax], eax ; nop ; test al, 0xf7 ; jmp qword ptr [rax]
0x000000000017e0cc : add ah, dh ; cmc ; call qword ptr [rax]
0x00000000001a1cab : add ah, dh ; or eax, dword ptr [rdx] ; add al, al ; sal edi, 1 ; call qword ptr [rdx]
0x0000000000196fab : add ah, dh ; pop rsi ; add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000019aeab : add ah, dh ; popfq ; add dword ptr [rax], eax ; adc byte ptr [rsi], bh ; idiv bh ; retf
0x000000000019788b : add ah, dl ; add dword ptr [eax], eax ; adc byte ptr [rax - 0xb], ah ; call qword ptr [rbx]
0x000000000019548b : add ah, dl ; add dword ptr [r8], eax ; adc dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000016c978 : add ah, dl ; call qword ptr [rax]
0x000000000019b58b : add ah, dl ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xa], cl ; call qword ptr [rax]
0x000000000018ff8b : add ah, dl ; out dx, al ; add byte ptr [rax], al ; sar bl, 1 ; int1 ; jmp qword ptr [rcx]
0x000000000019808b : add ah, dl ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; mov al, 0x87 ; cmc ; jmp qword ptr [rcx]
0x000000000019d48b : add ah, dl ; ret
0x000000000019d38b : add ah, dl ; ret 1
0x000000000018dc8b : add ah, dl ; retf
0x000000000018988b : add ah, dl ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x41], dl ; out dx, al ; jmp rsi
0x000000000019a38b : add ah, dl ; xchg eax, edx ; add dword ptr [rax], eax ; and byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x0000000000187375 : add al, 0 ; add al, ch ; out dx, al ; jmp rbx
0x000000000010454d : add al, 0 ; add al, ch ; ret 0xfff1
0x00000000000bc5cd : add al, 0 ; add al, ch ; retf
0x0000000000025df3 : add al, 0 ; add bh, dh ; ret 0
0x0000000000027e24 : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe783
0x000000000007e2cd : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret 0xeb72
0x0000000000046f2d : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000007dd05 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000042d63 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000157fe7 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 9], cl ; ret
0x00000000000df845 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014438d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ed9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001443b1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000fdb0 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x00000000000af593 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e1def : add al, 0 ; add byte ptr [rax], al ; syscall
0x000000000008d9d8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011b4ab : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006879f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d2dd9 : add al, 0 ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rcx + 0x63], cl ; ret
0x0000000000083506 : add al, 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f8745 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000fde16 : add al, 0 ; cmovne rax, rdx ; ret
0x00000000000c5979 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000012535b : add al, 0 ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000041521 : add al, 0x10 ; add bl, dh ; ret
0x000000000002cb09 : add al, 0x10 ; ret
0x00000000000f3a05 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000007b260 : add al, 0x10 ; xor eax, dword ptr [rax] ; ret
0x00000000000f3adb : add al, 0x11 ; ret
0x000000000009df9d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000008c3a1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008c33a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000083fe8 : add al, 0x1b ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000011fe0a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000ff31d : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000bca1f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000086a30 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000bf8b1 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e1bdd : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000033d42 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000033bd6 : add al, 0x24 ; add rsp, 0x28 ; ret
0x00000000000f30d4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000f3135 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000004232a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000820be : add al, 0x24 ; je 0x82188 ; call rax
0x000000000009f703 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed9dd : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x00000000000823ab : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002135a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002108c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d4d3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002df2c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000004b647 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000188168 : add al, 0x28 ; ret 1
0x000000000009ce49 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ce5b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000093a0e : add al, 0x31 ; ret
0x000000000010a2a4 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000007e407 : add al, 0x33 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009390a : add al, 0x37 ; ret
0x00000000000cd46f : add al, 0x39 ; ret 0xec7f
0x000000000007096f : add al, 0x3a ; ret
0x0000000000087014 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x0000000000167f26 : add al, 0x3d ; retf
0x0000000000194fbc : add al, 0x3f ; add dword ptr [rax], eax ; and dl, dl ; hlt ; jmp qword ptr [rcx]
0x000000000008a98e : add al, 0x48 ; add eax, edi ; ret
0x0000000000021132 : add al, 0x48 ; add edi, ebp ; call rax
0x000000000010d1cb : add al, 0x48 ; add edx, 1 ; syscall
0x000000000009a3eb : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009b22b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000008ab2e : add al, 0x48 ; lea eax, dword ptr [rdi + rdx - 1] ; ret
0x000000000010bf3e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00000000001406c9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000001406db : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000006e6c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000001335fa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000006f27c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006f422 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000008aa5e : add al, 0x48 ; mov eax, edi ; ret
0x0000000000093cb4 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000a00c7 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000fe9da : add al, 0x4c ; mov esi, ecx ; mov rdi, rbx ; call 0x4b3f9
0x0000000000187778 : add al, 0x4c ; retf
0x00000000000fc604 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000019e07f : add al, 0x51 ; ret
0x00000000000cd9b9 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000ca01b : add al, 0x5b ; ret
0x0000000000199ce7 : add al, 0x5c ; ret
0x0000000000183b6f : add al, 0x60 ; ret
0x0000000000183acf : add al, 0x63 ; ret
0x00000000001406d7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009599c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001a289f : add al, 0x66 ; ret
0x00000000001980bc : add al, 0x70 ; add dword ptr [rax], eax ; loopne 0x198050 ; cmc ; jmp qword ptr [rcx]
0x000000000018d2ef : add al, 0x71 ; ret
0x0000000000029462 : add al, 0x72 ; jns 0x29d4c66d ; ret
0x000000000002cb1d : add al, 0x72 ; or bl, dh ; ret
0x000000000018f6cf : add al, 0x72 ; ret
0x00000000001275b1 : add al, 0x74 ; jle 0x12753c ; ret 0x8380
0x00000000000ca4f5 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xca509 ; xor eax, eax ; ret
0x00000000000e63ae : add al, 0x75 ; adc byte ptr [rbx - 0x6817c383], cl ; retf -1
0x000000000009f3d2 : add al, 0x75 ; ret
0x00000000001231f0 : add al, 0x75 ; sbb ebp, ecx ; retf
0x00000000000e65c2 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002ced0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002cef0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002ce30 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002ceb0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002cdd0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ce70 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002ce10 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ce50 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002cf70 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002cdf0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002ce90 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002cdb0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001869ff : add al, 0x78 ; ret
0x000000000018d217 : add al, 0x7b ; ret
0x00000000000ca4df : add al, 0x7c ; out dx, al ; ret
0x0000000000186aaf : add al, 0x7c ; ret
0x000000000008ab15 : add al, 0x80 ; add rax, r8 ; jmp rax
0x00000000001991bc : add al, 0x81 ; add dword ptr [rax], eax ; jo 0x19917e ; cmc ; call rdi
0x000000000009e523 : add al, 0x81 ; je 0x9e505 ; ret
0x0000000000145abb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000009e51f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x9e509 ; ret
0x0000000000147393 : add al, 0x81 ; sub eax, edx ; ret
0x000000000006a074 : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000002171e : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000009e4d8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x9e4c8 ; ret
0x0000000000090d77 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000073762 : add al, 0x83 ; loop 0x7376d ; mov eax, edx ; ret
0x0000000000075eb4 : add al, 0x83 ; loopne 0x75ebd ; ret
0x0000000000053cc9 : add al, 0x83 ; ret
0x00000000000a13eb : add al, 0x83 ; ret 0x4101
0x00000000000c9b31 : add al, 0x83 ; ret 0x4801
0x00000000000c7332 : add al, 0x83 ; ret 0x8d01
0x00000000000622d3 : add al, 0x83 ; retf
0x000000000009e572 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0x9e570 ; ret
0x000000000009f94e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000a0a09 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000ff5ba : add al, 0x85 ; test byte ptr [rcx + 0x480f7430], 0x39 ; retf -0x158b
0x00000000000621b7 : add al, 0x87 ; add rdi, rax ; jmp rdi
0x000000000009f6ae : add al, 0x87 ; test r8d, r8d ; jne 0x9f688 ; ret
0x00000000001406c6 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000009597b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000057e57 : add al, 0x88 ; add rax, rdi ; jmp rax
0x0000000000053cf8 : add al, 0x89 ; ret 0xda29
0x0000000000127b89 : add al, 0x89 ; retf -0x1540
0x0000000000118062 : add al, 0x89 ; retf 0x3944
0x00000000000cfb84 : add al, 0x89 ; retf 0x4c89
0x000000000009e4db : add al, 0x8a ; je 0x9e4c5 ; ret
0x0000000000095964 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000e1cf7 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x000000000009f698 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000533c0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000018c617 : add al, 0x8c ; add ecx, dword ptr [rbp + 0x80e5d02] ; ret
0x00000000000db44e : add al, 0x8d ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8944
0x000000000018a38b : add al, 0x8d ; add ecx, dword ptr [rsi + 0xa5a0202] ; ret
0x00000000001a321b : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000008aa43 : add al, 0x90 ; add r8, rax ; jmp r8
0x000000000019a3bc : add al, 0x93 ; add dword ptr [rax], eax ; push rax ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000018a4bc : add al, 0x94 ; add byte ptr [rax], al ; and bh, 0xee ; call qword ptr [rdx]
0x000000000018adbc : add al, 0x9d ; add byte ptr [rax], al ; sar ah, 0xee ; jmp qword ptr [rax]
0x00000000000f38b7 : add al, 0xa ; ret
0x0000000000002341 : add al, 0xaa ; ret
0x0000000000187708 : add al, 0xae ; retf
0x000000000002cb06 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000120d83 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001140f2 : add al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000002d158 : add al, 0xb8 ; ret
0x000000000009def9 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x0000000000115389 : add al, 0xc2 ; jmp rax
0x0000000000187810 : add al, 0xc4 ; retf 1
0x000000000010fbad : add al, 0xc6 ; sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001287c4 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000ba953 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c6034 : add al, 0xd1 ; jmp 0xc5ffe
0x0000000000128807 : add al, 0xd7 ; xor eax, eax ; ret
0x0000000000187f98 : add al, 0xe4 ; ret
0x0000000000122a17 : add al, 0xe8 ; ret
0x000000000002ffb7 : add al, 0xeb ; ret 0x8b48
0x000000000002fa42 : add al, 0xeb ; retf
0x000000000002cdd5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000008aa09 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000143bcd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000011608a : add al, 0xf ; retf 0x1689
0x0000000000120a99 : add al, 0xf ; retf 0x5089
0x0000000000116105 : add al, 0xf ; retf 0x6348
0x000000000014943b : add al, 0xf ; sub rax, r8 ; ret
0x0000000000080711 : add al, 0xf ; test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000dd4b2 : add al, 0xf ; test byte ptr [rbx - 0x76000003], bl ; ret 0xdb31
0x000000000007e2c9 : add al, 0xf ; test dword ptr [rbx], ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; ret 0xeb72
0x000000000009f125 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000009963b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e86c9 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000018da21 : add al, 0xf0 ; jmp qword ptr [rbx]
0x000000000002a68f : add al, 0xf0 ; test rax, rax ; je 0x2a69f ; call rax
0x0000000000190249 : add al, 0xf2 ; call rsi
0x0000000000133963 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006929b : add al, 0xf3 ; ret
0x000000000016b3d4 : add al, 0xf6 ; out dx, al ; jmp rsp
0x00000000001876b0 : add al, 0xf8 ; retf
0x0000000000083abf : add al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000019154d : add al, 1 ; add byte ptr [rax - 0x37], dh ; call rdi
0x000000000009f158 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000e3704 : add al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000069250 : add al, 1 ; ret
0x00000000000692ba : add al, 1 ; xor eax, eax ; ret
0x000000000018a197 : add al, 2 ; hlt ; ret
0x0000000000193bbf : add al, 2 ; jle 0x193bd1 ; ret
0x000000000019d28f : add al, 2 ; pop rdi ; ret
0x000000000019e407 : add al, 2 ; push rbx ; ret
0x0000000000192a67 : add al, 2 ; ret
0x000000000008ae4c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xe6e8
0x00000000001505f7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000099788 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000009343d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000093658 : add al, 7 ; ret
0x000000000008a7ef : add al, 7 ; test r8b, r8b ; jne 0x8a7d8 ; ret
0x0000000000075343 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000008c50f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000058727 : add al, 9 ; ret 0xb60f
0x00000000000585c6 : add al, 9 ; ret 0xc141
0x000000000019604f : add al, ah ; adc al, 0xf5 ; jmp qword ptr [rcx]
0x000000000017f2eb : add al, ah ; adc al, 0xf8 ; call rax
0x000000000017f29b : add al, ah ; adc bh, al ; jmp rax
0x000000000019a44f : add al, ah ; and al, 0xf6 ; jmp qword ptr [rsi]
0x00000000001920df : add al, ah ; cld ; call qword ptr [rax]
0x00000000001807bb : add al, ah ; cli ; call qword ptr [rax]
0x000000000019703f : add al, ah ; cmc ; jmp qword ptr [rcx]
0x000000000017b713 : add al, ah ; cmp al, 0xeb ; call rax
0x000000000019531f : add al, ah ; fxtract ; jmp qword ptr [rcx]
0x000000000017e3fb : add al, ah ; jnp 0x17e3f9 ; jmp qword ptr [rax]
0x000000000017c86b : add al, ah ; mov al, 0xef ; call qword ptr [rax]
0x000000000017bf83 : add al, ah ; movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; call qword ptr [rax]
0x000000000019567f : add al, ah ; out -0xc, eax ; jmp qword ptr [rcx]
0x000000000017d54b : add al, ah ; pop rsp ; jmp qword ptr [rax]
0x00000000001806a3 : add al, ah ; push rdi ; cli ; call rax
0x000000000016712f : add al, ah ; ret
0x0000000000180a93 : add al, ah ; retf -6
0x000000000000ae57 : add al, ah ; retf 0xf
0x00000000001808cb : add al, ah ; sahf ; cli ; call qword ptr [rax]
0x000000000017f1fb : add al, ah ; sal bh, cl ; call qword ptr [rax]
0x000000000017d5f3 : add al, ah ; sal dl, cl ; call qword ptr [rax]
0x0000000000180b33 : add al, ah ; salc ; cli ; call rax
0x000000000017ea5b : add al, ah ; sbb edi, esi ; inc eax ; ret 1
0x000000000018ee3f : add al, ah ; sbb esi, ecx ; call qword ptr [rdx]
0x000000000018ee0f : add al, ah ; sbb esi, ecx ; jmp qword ptr [rax]
0x000000000017fa3b : add al, ah ; std ; clc ; call rax
0x000000000017e143 : add al, ah ; sub dh, dh ; jmp rax
0x000000000017d57b : add al, ah ; xchg dl, dh ; jmp qword ptr [rax]
0x00000000001980bf : add al, ah ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000018544f : add al, ah ; xor edi, edx ; jmp qword ptr [rcx]
0x000000000017fa83 : add al, al ; add bh, cl ; jmp qword ptr [rax]
0x00000000001901ff : add al, al ; add dh, dl ; jmp qword ptr [rcx]
0x000000000018028b : add al, al ; add edi, edx ; jmp qword ptr [rax]
0x000000000019a32f : add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000017d47b : add al, al ; call rax
0x000000000018adbf : add al, al ; cld ; out dx, al ; jmp qword ptr [rax]
0x000000000017d23b : add al, al ; cmp cl, dh ; call rax
0x000000000019d2df : add al, al ; fdivrp st(6) ; jmp qword ptr [rdi]
0x000000000017d49b : add al, al ; jmp rax
0x000000000017d8b3 : add al, al ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rax]
0x000000000017c89b : add al, al ; mov ah, 0xef ; jmp qword ptr [rax]
0x000000000017d0bb : add al, al ; mov ch, 0xf0 ; call rax
0x0000000000195c1f : add al, al ; or esi, ebp ; jmp rcx
0x000000000017d9e3 : add al, al ; or esp, esi ; jmp rax
0x000000000017c46b : add al, al ; out dx, eax ; jmp rax
0x000000000017f6eb : add al, al ; pop rax ; clc ; jmp rax
0x000000000017e95b : add al, al ; push rsi ; call rax
0x00000000000068af : add al, al ; ret
0x000000000017e61b : add al, al ; ret 0xfff6
0x000000000000e7cf : add al, al ; retf
0x000000000001f36f : add al, al ; retf 0x3a
0x00000000001a1caf : add al, al ; sal edi, 1 ; call qword ptr [rdx]
0x000000000017ea7b : add al, al ; sbb al, 0xf7 ; call qword ptr [rax]
0x0000000000161f87 : add al, al ; sldt word ptr [rax] ; ret
0x000000000019e34f : add al, al ; sub dh, bh ; call qword ptr [rbx]
0x000000000017efbb : add al, al ; test esi, edi ; call qword ptr [rax]
0x000000000018494f : add al, al ; xor ch, bl ; call qword ptr [rsi]
0x000000000017ded3 : add al, al ; xor ebp, esi ; call rax
0x0000000000195ee7 : add al, bh ; adc ebp, esi ; call rdx
0x000000000018fed7 : add al, bh ; cli ; int1 ; jmp rcx
0x00000000001a2317 : add al, bh ; fcompi st(7) ; call qword ptr [rsi]
0x0000000000195337 : add al, bh ; fxtract ; jmp qword ptr [rcx]
0x00000000001823a7 : add al, bh ; jl 0x182399 ; jmp qword ptr [rdi]
0x0000000000191b67 : add al, bh ; loope 0x191b61 ; jmp qword ptr [rcx]
0x0000000000195477 : add al, bh ; loope 0x195473 ; jmp qword ptr [rcx]
0x0000000000189ab7 : add al, bh ; ret
0x00000000001948f7 : add al, bh ; ret 0xfff4
0x0000000000198b27 : add al, bh ; sahf ; cmc ; call qword ptr [rdx]
0x0000000000197fb7 : add al, bh ; xchg ch, dh ; jmp qword ptr [rcx]
0x00000000001954d7 : add al, bh ; xor al, 0xf9 ; call qword ptr [rax]
0x000000000018eb87 : add al, bl ; adc ecx, esi ; call qword ptr [rsi]
0x0000000000196777 : add al, bl ; and dh, ch ; jmp rdx
0x000000000019a347 : add al, bl ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000199e37 : add al, bl ; in eax, dx ; cmc ; call rsp
0x000000000019ff47 : add al, bl ; je 0x19ff46 ; call qword ptr [rsi]
0x0000000000191ff7 : add al, bl ; jmp rcx
0x0000000000198397 : add al, bl ; mov dh, ch ; jmp qword ptr [rcx]
0x00000000001982b7 : add al, bl ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000099a8b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f29e3 : add al, bl ; nop dword ptr [rax] ; ret
0x0000000000187527 : add al, bl ; out dx, al ; call qword ptr [rax]
0x00000000001915c7 : add al, bl ; retf -0xe
0x000000000019df97 : add al, bl ; sbb esi, edi ; jmp qword ptr [rdx]
0x0000000000189167 : add al, bl ; test al, 0xee ; jmp rdx
0x0000000000197e17 : add al, bl ; test dh, ch ; jmp qword ptr [rcx]
0x0000000000079446 : add al, bpl ; ret
0x000000000014d052 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000098931 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000180152 : add al, byte ptr [rax] ; adc bl, ah ; stc ; jmp rax
0x000000000017f63a : add al, byte ptr [rax] ; adc byte ptr [rax - 8], dl ; call rax
0x000000000017f76a : add al, byte ptr [rax] ; adc byte ptr [rdi - 8], ah ; call qword ptr [rax]
0x0000000000180212 : add al, byte ptr [rax] ; adc dh, dh ; stc ; call qword ptr [rax]
0x00000000000e0561 : add al, byte ptr [rax] ; add al, ch ; push rdi ; retf -1
0x000000000007ff5d : add al, byte ptr [rax] ; add al, ch ; retf
0x0000000000106941 : add al, byte ptr [rax] ; add al, ch ; xlatb ; ret 0xfffd
0x000000000017f922 : add al, byte ptr [rax] ; add bh, 0xf8 ; jmp qword ptr [rax]
0x00000000000261fd : add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000000000261f1 : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000002cf27 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000007c615 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000cd5de : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf -0x76bb
0x000000000008dee2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000b2566 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dd579 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f2d5d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000085adf : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000aa284 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000152244 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f73db : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc348bbef
0x000000000002329d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a894a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010a758 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000014452d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147151 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144551 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000001097a : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000119bef : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000011c02f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000011b78f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000005dd2b : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5a816
0x00000000000661c2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x62466
0x00000000000ec356 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000114024 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000341d9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000c041a : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f2505 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000011dca9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011fe0c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000f2665 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000454e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000002120c : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bb0e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000002f36b : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x00000000000fd2bd : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000000cb973 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; retf
0x00000000001a7901 : add al, byte ptr [rax] ; add byte ptr [rbp + 5], dh ; add byte ptr [rax], al ; ret
0x000000000008db58 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006fac0 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000353b1 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000153fa4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000155016 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x0000000000041a26 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000f5c18 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000004d083 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000cb962 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000002b96b : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x0000000000187775 : add al, byte ptr [rax] ; add byte ptr [rsp + rcx*2], al ; retf
0x000000000018020a : add al, byte ptr [rax] ; add ch, dh ; stc ; call rax
0x000000000005375b : add al, byte ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x536f4 ; ret 0xe680
0x0000000000054010 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000180a9a : add al, byte ptr [rax] ; and bl, cl ; cli ; jmp rax
0x000000000018079a : add al, byte ptr [rax] ; and byte ptr [rax - 6], ah ; jmp rax
0x000000000017f75a : add al, byte ptr [rax] ; and byte ptr [rax - 8], ah ; call qword ptr [rax]
0x000000000018071a : add al, byte ptr [rax] ; and byte ptr [rbx - 6], bl ; jmp rax
0x000000000017fc72 : add al, byte ptr [rax] ; and byte ptr [rcx - 7], cl ; jmp qword ptr [rax]
0x000000000017f992 : add al, byte ptr [rax] ; and ch, dl ; clc ; call qword ptr [rax]
0x00000000001809f2 : add al, byte ptr [rax] ; and cl, al ; cli ; call qword ptr [rax]
0x00000000001801e2 : add al, byte ptr [rax] ; and cl, dh ; stc ; jmp rax
0x0000000000180092 : add al, byte ptr [rax] ; and dl, al ; stc ; call qword ptr [rax]
0x00000000001a2316 : add al, byte ptr [rax] ; clc ; fcompi st(7) ; call qword ptr [rsi]
0x00000000001804e2 : add al, byte ptr [rax] ; cmp byte ptr [rax], 0xfa ; jmp rax
0x00000000001a29b6 : add al, byte ptr [rax] ; cwde ; out 0xf7, al ; call qword ptr [rdx]
0x00000000001a1896 : add al, byte ptr [rax] ; cwde ; retf -9
0x000000000010bbc2 : add al, byte ptr [rax] ; jne 0x10bc16 ; mov eax, r8d ; ret
0x000000000017f6ba : add al, byte ptr [rax] ; jo 0x17f71a ; clc ; jmp qword ptr [rax]
0x000000000017fbf2 : add al, byte ptr [rax] ; jo 0x17fc3b ; stc ; jmp qword ptr [rax]
0x0000000000180642 : add al, byte ptr [rax] ; jo 0x18069f ; cli ; call qword ptr [rax]
0x0000000000180aba : add al, byte ptr [rax] ; jo 0x180a8f ; cli ; jmp rax
0x00000000001a2fce : add al, byte ptr [rax] ; jo 0x1a3040 ; sti ; jmp qword ptr [rdx]
0x00000000001a3b5e : add al, byte ptr [rax] ; jo 0x1a3ba2 ; clc ; call qword ptr [rax]
0x000000000017f9ea : add al, byte ptr [rax] ; loopne 0x17f9db ; clc ; call rax
0x000000000017fa3a : add al, byte ptr [rax] ; loopne 0x17fa40 ; clc ; call rax
0x00000000001806a2 : add al, byte ptr [rax] ; loopne 0x180702 ; cli ; call rax
0x00000000001807ba : add al, byte ptr [rax] ; loopne 0x180829 ; cli ; call qword ptr [rax]
0x00000000001808ca : add al, byte ptr [rax] ; loopne 0x180871 ; cli ; call qword ptr [rax]
0x0000000000180aca : add al, byte ptr [rax] ; loopne 0x180a9f ; cli ; jmp qword ptr [rax]
0x0000000000180362 : add al, byte ptr [rax] ; mov al, 0x1f ; cli ; jmp qword ptr [rax]
0x000000000018076a : add al, byte ptr [rax] ; mov al, 0x5d ; cli ; call qword ptr [rax]
0x0000000000180bf2 : add al, byte ptr [rax] ; mov al, 0xdd ; cli ; call qword ptr [rax]
0x00000000001a3e86 : add al, byte ptr [rax] ; mov byte ptr [rax - 8], al ; jmp qword ptr [rsi]
0x000000000017f89a : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x0000000000158d52 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000014f30b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001a350e : add al, byte ptr [rax] ; nop ; and eax, edi ; jmp qword ptr [rcx]
0x000000000017fd52 : add al, byte ptr [rax] ; nop ; outsb dx, byte ptr [rsi] ; stc ; jmp rax
0x000000000017f6aa : add al, byte ptr [rax] ; nop ; push rsi ; clc ; jmp rax
0x00000000001800b2 : add al, byte ptr [rax] ; nop ; ret
0x0000000000180a8a : add al, byte ptr [rax] ; nop ; retf -6
0x000000000018025a : add al, byte ptr [rax] ; nop ; std ; stc ; call qword ptr [rax]
0x00000000001a175e : add al, byte ptr [rax] ; or al, 0xf7 ; call rax
0x0000000000126989 : add al, byte ptr [rax] ; or byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000017fb22 : add al, byte ptr [rax] ; or byte ptr [rsi], 0xf9 ; call rax
0x00000000001a34d6 : add al, byte ptr [rax] ; pop rax ; and eax, edi ; call qword ptr [rax]
0x0000000000105509 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000edf92 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001a3b2e : add al, byte ptr [rax] ; push rax ; cmp edi, eax ; call qword ptr [rdi]
0x00000000001a3c4e : add al, byte ptr [rax] ; push rax ; cmp edi, eax ; call rcx
0x0000000000180882 : add al, byte ptr [rax] ; push rax ; pushfq ; cli ; jmp rax
0x0000000000180a82 : add al, byte ptr [rax] ; push rax ; retf -6
0x0000000000180f3a : add al, byte ptr [rax] ; push rax ; xlatb ; std ; jmp rax
0x00000000001a1cae : add al, byte ptr [rax] ; rcl cl, 0xf7 ; call qword ptr [rdx]
0x000000000017fcf2 : add al, byte ptr [rax] ; rcr byte ptr [rdi - 7], 1 ; call qword ptr [rax]
0x0000000000180c02 : add al, byte ptr [rax] ; rcr ch, 1 ; cli ; jmp rax
0x00000000001800aa : add al, byte ptr [rax] ; ret
0x00000000001a42ee : add al, byte ptr [rax] ; ret 0x503
0x000000000001886a : add al, byte ptr [rax] ; ret 0x5b
0x000000000018028a : add al, byte ptr [rax] ; rol byte ptr [rbx], 0xfa ; jmp qword ptr [rax]
0x000000000017fa82 : add al, byte ptr [rax] ; rol byte ptr [rdx], 0xf9 ; jmp qword ptr [rax]
0x0000000000180082 : add al, byte ptr [rax] ; rol cl, 0xf9 ; call rax
0x000000000017f912 : add al, byte ptr [rax] ; rol dl, 1 ; clc ; call rax
0x000000000017fab2 : add al, byte ptr [rax] ; ror byte ptr [rax], 1 ; stc ; call qword ptr [rax]
0x000000000018032a : add al, byte ptr [rax] ; sbb byte ptr [rdx], 0xfa ; call rax
0x000000000017fa0a : add al, byte ptr [rax] ; sub bh, 0xf8 ; jmp rax
0x00000000001a2ee6 : add al, byte ptr [rax] ; sub byte ptr [rdx - 5], ch ; jmp qword ptr [rdx]
0x00000000001a3ff6 : add al, byte ptr [rax] ; sub byte ptr [rdx], cl ; sti ; call rax
0x00000000001a2b4e : add al, byte ptr [rax] ; xor byte ptr [rbp - 5], ch ; jmp qword ptr [rdx]
0x000000000017fd32 : add al, byte ptr [rax] ; xor byte ptr [rbx - 7], ch ; jmp rax
0x000000000017faa2 : add al, byte ptr [rax] ; xor byte ptr [rdi], al ; stc ; call rax
0x00000000001805c2 : add al, byte ptr [rax] ; xor byte ptr [rsi - 6], cl ; jmp qword ptr [rax]
0x00000000001800e2 : add al, byte ptr [rax] ; xor cl, dl ; stc ; call rax
0x0000000000111cbc : add al, byte ptr [rbx + 0x5d4101e8] ; pop r14 ; ret
0x00000000000b0756 : add al, byte ptr [rcx + 0x29] ; ret
0x00000000000fccbe : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000182760 : add al, byte ptr [rcx + 0xa] ; ret
0x00000000000db451 : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8944
0x000000000010bd44 : add al, byte ptr [rcx - 0x77] ; add byte ptr [rcx + 0x11894dd0], cl ; ret
0x00000000000cd8c4 : add al, byte ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000e2211 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000051ea2 : add al, byte ptr [rcx] ; ret 0x2945
0x0000000000058a3b : add al, byte ptr [rcx] ; retf -0x2fd7
0x0000000000187f70 : add al, byte ptr [rdi + 0xa] ; ret
0x000000000017f639 : add al, byte ptr [rdx] ; add byte ptr [rax], dl ; push rax ; clc ; call rax
0x0000000000186056 : add al, byte ptr [rdx] ; mov dl, 0xa ; ret
0x000000000018d69d : add al, byte ptr [rdx] ; ret
0x000000000019d5bd : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x000000000006c535 : add al, byte ptr [rip + 0x5b000000] ; ret
0x0000000000089ad7 : add al, byte ptr [rsi + 0xf] ; mov dh, 0x14 ; add eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x0000000000089c43 : add al, byte ptr [rsi + 0xf] ; mov dh, 0xc ; add eax, dword ptr [rbp + 0x38] ; retf -0x78f1
0x00000000001a3ddd : add al, byte ptr [rsi + rcx + 0x10] ; ret
0x000000000009988a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000006d3aa : add al, ch ; and byte ptr [rsi], ah ; add eax, 0x89c08500 ; ret 0x8389
0x000000000018b707 : add al, ch ; cmp al, 0xef ; jmp rsp
0x0000000000105fbe : add al, ch ; fdiv qword ptr [rsi + rdi*8 - 0x763f7a01] ; ret
0x0000000000193fe7 : add al, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000020ef6 : add al, ch ; hlt ; ret 0
0x000000000019e8a7 : add al, ch ; idiv r15d ; retf 0
0x00000000000c307f : add al, ch ; imul edx, ebp, -0xb ; dec dword ptr [rax - 0x77] ; ret 0x1ceb
0x0000000000121a5e : add al, ch ; in al, dx ; xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008021d : add al, ch ; insd dword ptr [rdi], dx ; retf 7
0x00000000001147fd : add al, ch ; int 0xc3
0x000000000016caf0 : add al, ch ; jmp qword ptr [rax]
0x00000000000c571b : add al, ch ; jmp rcx
0x00000000000fe29e : add al, ch ; lodsb al, byte ptr [rsi] ; retf
0x00000000001981c7 : add al, ch ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000018e927 : add al, ch ; or esi, ecx ; jmp rsi
0x0000000000187377 : add al, ch ; out dx, al ; jmp rbx
0x00000000001008ec : add al, ch ; out dx, al ; ret
0x00000000000a0982 : add al, ch ; pop rax ; ret
0x000000000018bd47 : add al, ch ; pop rdx ; out dx, eax ; jmp qword ptr [rdi]
0x000000000006449d : add al, ch ; popfq ; ret
0x0000000000029713 : add al, ch ; push rdi ; retf
0x00000000000e0563 : add al, ch ; push rdi ; retf -1
0x000000000000cf3f : add al, ch ; ret
0x0000000000027a18 : add al, ch ; ret 0x52
0x000000000007eec8 : add al, ch ; ret 0x7dd
0x0000000000117448 : add al, ch ; ret 0x8e
0x000000000006b298 : add al, ch ; ret 0x919
0x0000000000040a3b : add al, ch ; ret 0xb
0x00000000000b5d18 : add al, ch ; ret 0xf76f
0x0000000000107768 : add al, ch ; ret 0xfda6
0x000000000010cfa8 : add al, ch ; ret 0xfe3f
0x000000000010454f : add al, ch ; ret 0xfff1
0x00000000000e0a92 : add al, ch ; ret 0xfff4
0x000000000010f288 : add al, ch ; ret 0xfff9
0x0000000000022cdf : add al, ch ; retf
0x000000000004b310 : add al, ch ; retf -0x1e7
0x00000000001003a0 : add al, ch ; retf -0x603
0x00000000000b5b10 : add al, ch ; retf -0x955
0x00000000000da610 : add al, ch ; retf -0xada
0x000000000010dfd8 : add al, ch ; retf -0xed9
0x00000000000a0293 : add al, ch ; retf -8
0x0000000000077b70 : add al, ch ; retf 0x10
0x0000000000028210 : add al, ch ; retf 0x4a
0x0000000000074280 : add al, ch ; retf 0x6b
0x0000000000080490 : add al, ch ; retf 0x7c7
0x00000000000f4990 : add al, ch ; retf 0x82
0x0000000000029830 : add al, ch ; retf 0xc19
0x000000000018ee27 : add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x000000000016c6bc : add al, ch ; sti ; push qword ptr [rax - 0x17] ; sti ; jmp rax
0x00000000001266ef : add al, ch ; sti ; ret 0xfffb
0x00000000000cfc6e : add al, ch ; sub al, 0xb ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000fa902 : add al, ch ; test al, 0x2d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000085efc : add al, ch ; test al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fccff : add al, ch ; wait ; ret 2
0x000000000006e2b7 : add al, ch ; xchg eax, ebx ; retf
0x00000000000809c4 : add al, ch ; xchg eax, esi ; ret 7
0x00000000000e5394 : add al, ch ; xchg eax, esi ; retf -1
0x0000000000106943 : add al, ch ; xlatb ; ret 0xfffd
0x000000000019e567 : add al, ch ; xor al, 0xf7 ; call rcx
0x0000000000184997 : add al, ch ; xor ch, bl ; call qword ptr [rsi]
0x000000000019a437 : add al, cl ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000019a077 : add al, cl ; clc ; cmc ; call qword ptr [rdx]
0x000000000018e337 : add al, cl ; cli ; sti ; call rsp
0x0000000000197027 : add al, cl ; cmc ; jmp qword ptr [rcx]
0x000000000018a217 : add al, cl ; fucomi st(6) ; call rcx
0x0000000000195307 : add al, cl ; fxtract ; jmp qword ptr [rcx]
0x000000000016c850 : add al, cl ; jmp qword ptr [rax]
0x0000000000191f77 : add al, cl ; jmp qword ptr [rdi]
0x0000000000183a37 : add al, cl ; or ch, bl ; jmp qword ptr [rcx]
0x0000000000195667 : add al, cl ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001980a7 : add al, cl ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000019a35f : add al, dh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000017cbdd : add al, dh ; call qword ptr [rax]
0x000000000017f4bb : add al, dh ; clc ; jmp qword ptr [rax]
0x000000000018e4ff : add al, dh ; cld ; sti ; call qword ptr [rdx]
0x000000000017cc9b : add al, dh ; cmp al, 0xf0 ; jmp rax
0x0000000000180513 : add al, dh ; cmp edi, edx ; jmp qword ptr [rax]
0x00000000001830bf : add al, dh ; fucomp st(2) ; call qword ptr [rdi]
0x000000000017f7bb : add al, dh ; jge 0x17f7bb ; call qword ptr [rax]
0x000000000017cbcd : add al, dh ; jmp rax
0x00000000001a265f : add al, dh ; jrcxz 0x1a265e ; jmp qword ptr [rbx]
0x000000000017c9d3 : add al, dh ; loope 0x17c9ca ; jmp qword ptr [rax]
0x000000000018e10f : add al, dh ; mov bl, 0xfb ; jmp qword ptr [rdi]
0x00000000001982cf : add al, dh ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000017b8bb : add al, dh ; mov ebx, ebp ; call rax
0x00000000001a29ff : add al, dh ; out 0xf7, al ; jmp qword ptr [rcx]
0x000000000017def3 : add al, dh ; push rax ; cmc ; jmp rax
0x000000000017dc23 : add al, dh ; push rsi ; hlt ; call qword ptr [rax]
0x00000000001800bb : add al, dh ; ret
0x000000000001f38f : add al, dh ; retf
0x000000000017e6b3 : add al, dh ; retf -0xa
0x000000000017f1d3 : add al, dh ; retf -9
0x000000000000951f : add al, dh ; retf 0xb
0x000000000017b583 : add al, dh ; sbb ch, bl ; jmp rax
0x000000000017f3c3 : add al, dh ; sbb eax, edi ; call qword ptr [rax]
0x000000000019dfaf : add al, dh ; sbb esi, edi ; call qword ptr [rdi]
0x000000000017c263 : add al, dh ; stc ; out dx, al ; jmp rax
0x000000000017d383 : add al, dh ; sub dh, dl ; jmp rax
0x000000000017c3c3 : add al, dh ; xor bh, ch ; call qword ptr [rax]
0x000000000019e1ff : add al, dl ; and edi, esi ; call rax
0x0000000000196f5f : add al, dl ; cmc ; jmp qword ptr [rcx]
0x00000000000e452a : add al, dl ; dec dword ptr [rax + 0x39] ; ret
0x000000000017e043 : add al, dl ; fdivr st(5), st(0) ; call qword ptr [rax]
0x000000000017db1b : add al, dl ; hlt ; call rax
0x0000000000193fcf : add al, dl ; hlt ; jmp qword ptr [rcx]
0x000000000017bfab : add al, dl ; iretd ; in al, dx ; call rax
0x000000000017ef6b : add al, dl ; jg 0x17ef6a ; jmp qword ptr [rax]
0x000000000017d433 : add al, dl ; jmp rax
0x000000000017d56b : add al, dl ; movsxd rsi, edx ; jmp qword ptr [rax]
0x000000000017fab3 : add al, dl ; or cl, bh ; call qword ptr [rax]
0x000000000017ca9b : add al, dl ; out dx, eax ; jmp rax
0x000000000017fcf3 : add al, dl ; pop rdi ; stc ; call qword ptr [rax]
0x000000000017d50b : add al, dl ; push rdi ; jmp rax
0x000000000017bdab : add al, dl ; push rsp ; in al, dx ; jmp qword ptr [rax]
0x000000000017c8fb : add al, dl ; ret
0x000000000000f9e7 : add al, dl ; ret 0x3a
0x000000000017f913 : add al, dl ; ret 0xfff8
0x00000000001800a3 : add al, dl ; ret 0xfff9
0x00000000000069cf : add al, dl ; ret 6
0x000000000000fb07 : add al, dl ; retf
0x000000000017bc8b : add al, dl ; retf -0x15
0x00000000001a18af : add al, dl ; retf -9
0x000000000019000f : add al, dl ; sti ; int1 ; call qword ptr [rcx]
0x000000000018ff8f : add al, dl ; sti ; int1 ; jmp qword ptr [rcx]
0x000000000017d5ab : add al, dl ; stosb byte ptr [rdi], al ; call rax
0x000000000017f463 : add al, dl ; sub eax, edi ; call rax
0x000000000017f924 : add bh, 0xf8 ; jmp qword ptr [rax]
0x000000000016cac4 : add bh, ah ; call qword ptr [rax]
0x0000000000021ebf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e89f3 : add bh, al ; and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000016c830 : add bh, al ; jmp qword ptr [rax]
0x0000000000159cdf : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000125809 : add bh, bh ; and eax, 0x285dd0 ; ret
0x00000000000483e4 : add bh, bh ; inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; retf -0x46b8
0x00000000001a4312 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001a423c : add bh, bh ; inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x000000000011905c : add bh, bh ; loope 0x118ff5 ; ret
0x00000000000ae82a : add bh, bh ; ret
0x00000000000dca01 : add bh, bh ; shr cl, 1 ; ret 0xfff8
0x0000000000127528 : add bh, bh ; str word ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000e1b72 : add bh, byte ptr [rax + 0x16] ; jbe 0xe1b89 ; ret
0x00000000000d9fec : add bh, byte ptr [rax + 0xf] ; je 0xda049 ; ret
0x00000000000452d0 : add bh, byte ptr [rax + 1] ; ret
0x0000000000045526 : add bh, byte ptr [rax + 2] ; ret
0x00000000000e2a84 : add bh, byte ptr [rax - 1] ; jmp 0xe2a56
0x0000000000076d7b : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x00000000000344eb : add bh, byte ptr [rax - 1] ; ret
0x0000000000154372 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000188ab9 : add bh, byte ptr [rdi + 0x41380e0a] ; ret
0x0000000000193bc0 : add bh, byte ptr [rsi + 0xa] ; ret
0x000000000017fa85 : add bh, cl ; jmp qword ptr [rax]
0x0000000000155267 : add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf -0x17d
0x0000000000155676 : add bh, dh ; fnsave dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf -0x27d
0x000000000017e96d : add bh, dh ; jmp qword ptr [rax]
0x000000000016ef69 : add bh, dh ; jmp qword ptr [rbp + 0x26fff700]
0x000000000016ef21 : add bh, dh ; jmp qword ptr [rbp - 0x1d000900]
0x000000000016ef6d : add bh, dh ; jmp qword ptr [rsi]
0x000000000016ef25 : add bh, dh ; jmp rdx
0x00000000000a0e4f : add bh, dh ; ret
0x0000000000025df5 : add bh, dh ; ret 0
0x0000000000025de9 : add bh, dh ; ret 0xf800
0x000000000016c648 : add bh, dl ; sti ; jmp qword ptr [rax]
0x000000000017ea70 : add bl, 1 ; add byte ptr [rax], dl ; sbb al, 0xf7 ; dec eax ; ret
0x000000000017a0fc : add bl, ah ; cld ; jmp rax
0x000000000016ca58 : add bl, ah ; jmp qword ptr [rax]
0x000000000006417c : add bl, al ; add byte ptr [rax], al ; mov r14d, eax ; jmp 0x64150
0x000000000017df8c : add bl, al ; cmc ; dec dword ptr [rax - 0x6ffffe78] ; ret
0x00000000000c1efc : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000af321 : add bl, al ; mov eax, 2 ; ret
0x000000000007365c : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000c0e5c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000e6fad : add bl, al ; nop ; xor eax, eax ; ret
0x000000000007b319 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000034d7b : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000833bc : add bl, al ; ret
0x000000000011b90e : add bl, al ; xor eax, eax ; ret
0x000000000016ecd7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x000000000010eed0 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000018320d : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001936f3 : add bl, byte ptr [rbp + 0x41380e0a] ; ret
0x00000000001928be : add bl, byte ptr [rbp + 0xa] ; ret
0x000000000010eed1 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000192eba : add bl, byte ptr [rdx + 0x44380e0a] ; ret
0x000000000018a390 : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000016cb88 : add bl, ch ; call qword ptr [rax]
0x00000000000da58c : add bl, ch ; out -0x77, eax ; retf -0x35cf
0x0000000000066c60 : add bl, ch ; ret
0x00000000000cadd9 : add bl, ch ; ret 0x1f0f
0x00000000000bd0b9 : add bl, ch ; ret 0x8b48
0x00000000000619e8 : add bl, ch ; ret 0xbd8b
0x00000000001198b2 : add bl, ch ; retf -0x74b8
0x0000000000115b83 : add bl, ch ; retf 0x2e66
0x00000000000337ef : add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000017d8ec : add bl, dh ; jmp qword ptr [rax]
0x0000000000099e3f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x0000000000099e4f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000158d53 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000000336ed : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000002b187 : add bl, dh ; ret
0x00000000000318ce : add bl, sil ; ret
0x00000000000ec175 : add byte ptr [r13 + 0x395274c0], r8b ; ret
0x00000000000c0fc7 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010b04c : add byte ptr [r8 + 1], r9b ; ret
0x0000000000084db6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000bd724 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000018544d : add byte ptr [r8], al ; loopne 0x18548b ; cli ; jmp qword ptr [rcx]
0x00000000000dd2da : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000186085 : add byte ptr [r8], r8b ; mov byte ptr [rdi], ah ; in al, dx ; jmp qword ptr [rdx]
0x00000000000cf169 : add byte ptr [r9 + 1], r9b ; retf
0x00000000000ec1c0 : add byte ptr [r9], r15b ; ret
0x00000000000e220f : add byte ptr [rax + 0x102], bh ; syscall
0x00000000000e3eef : add byte ptr [rax + 0x107], bh ; syscall
0x00000000000e7a1f : add byte ptr [rax + 0x10], bh ; syscall
0x00000000000e3e2f : add byte ptr [rax + 0x10a], bh ; syscall
0x00000000000e6815 : add byte ptr [rax + 0x10f], bh ; syscall
0x000000000017ea63 : add byte ptr [rax + 0x10fff71a], al ; ret
0x000000000017ebc3 : add byte ptr [rax + 0x10fff74d], dh ; retf 1
0x00000000000f0bcf : add byte ptr [rax + 0x110], bh ; syscall
0x00000000000f0c2f : add byte ptr [rax + 0x11b], bh ; syscall
0x00000000000f02ba : add byte ptr [rax + 0x121], bh ; syscall
0x00000000000f02ef : add byte ptr [rax + 0x122], bh ; syscall
0x00000000000f02ee : add byte ptr [rax + 0x122], dil ; syscall
0x00000000000f089f : add byte ptr [rax + 0x123], bh ; syscall
0x00000000000e2cff : add byte ptr [rax + 0x124], bh ; syscall
0x00000000000e2d5f : add byte ptr [rax + 0x125], bh ; syscall
0x00000000000f09bf : add byte ptr [rax + 0x126], bh ; syscall
0x00000000000f0cbf : add byte ptr [rax + 0x12c], bh ; syscall
0x00000000000f07df : add byte ptr [rax + 0x131], bh ; syscall
0x000000000017f2ab : add byte ptr [rax + 0x13], al ; clc ; call qword ptr [rax]
0x000000000017ea43 : add byte ptr [rax + 0x14], ah ; idiv edi ; pop rax ; ret 1
0x0000000000081ea7 : add byte ptr [rax + 0x16], bh ; ret
0x00000000000e2d2f : add byte ptr [rax + 0x16], bh ; syscall
0x000000000017f37b : add byte ptr [rax + 0x18], al ; clc ; call qword ptr [rax]
0x00000000000d8fcf : add byte ptr [rax + 0x18], bh ; syscall
0x000000000017c2cb : add byte ptr [rax + 0x18ffef0a], dl ; ret 0
0x00000000000eb32f : add byte ptr [rax + 0x1b], bh ; syscall
0x0000000000196427 : add byte ptr [rax + 0x1c], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000073f05 : add byte ptr [rax + 0x1d740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000335bb : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000001965e7 : add byte ptr [rax + 0x20], bh ; cmc ; jmp rdx
0x00000000000e2ccf : add byte ptr [rax + 0x21], bh ; syscall
0x00000000001a34d7 : add byte ptr [rax + 0x21], bl ; clc ; call qword ptr [rax]
0x0000000000196617 : add byte ptr [rax + 0x21], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000154ba5 : add byte ptr [rax + 0x21], cl ; ret 0x86e9
0x00000000001575d8 : add byte ptr [rax + 0x21], cl ; ret 0x8be9
0x0000000000048382 : add byte ptr [rax + 0x21], cl ; retf -0x3eb8
0x00000000000483e8 : add byte ptr [rax + 0x21], cl ; retf -0x46b8
0x00000000001559ad : add byte ptr [rax + 0x21], cl ; retf -0x76b8
0x000000000019662f : add byte ptr [rax + 0x21], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018038b : add byte ptr [rax + 0x22], ah ; cli ; call qword ptr [rax]
0x00000000000b2b6f : add byte ptr [rax + 0x24], bh ; syscall
0x0000000000196897 : add byte ptr [rax + 0x24], bl ; cmc ; jmp qword ptr [rsi]
0x000000000017d2eb : add byte ptr [rax + 0x25], al ; call qword ptr [rax]
0x000000000019062f : add byte ptr [rax + 0x25], al ; jmp qword ptr [rcx]
0x00000000000bf83f : add byte ptr [rax + 0x25], bh ; syscall
0x0000000000190647 : add byte ptr [rax + 0x25], bl ; jmp qword ptr [rcx]
0x0000000000074074 : add byte ptr [rax + 0x26740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000b2b9f : add byte ptr [rax + 0x26], bh ; syscall
0x00000000000c066f : add byte ptr [rax + 0x27], bh ; syscall
0x000000000017d353 : add byte ptr [rax + 0x27], dh ; call rax
0x00000000000f149f : add byte ptr [rax + 0x29], bh ; syscall
0x00000000000544c3 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000109d78 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b41c5 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000028bfa : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000000dac5a : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000645dd : add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000027e26 : add byte ptr [rax + 0x29], cl ; ret 0xe783
0x0000000000041043 : add byte ptr [rax + 0x29], cl ; retf
0x0000000000070874 : add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x00000000000d140f : add byte ptr [rax + 0x29], cl ; retf 0x44c7
0x000000000004bef4 : add byte ptr [rax + 0x29], cl ; retf 0xf48
0x000000000007396f : add byte ptr [rax + 0x2b740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000017c3a3 : add byte ptr [rax + 0x2c], al ; out dx, eax ; call rax
0x0000000000196b27 : add byte ptr [rax + 0x2f], ch ; cmc ; jmp rdi
0x000000000017c3bb : add byte ptr [rax + 0x30], dh ; out dx, eax ; call rax
0x00000000000f0f6f : add byte ptr [rax + 0x33], bh ; syscall
0x000000000017d6e3 : add byte ptr [rax + 0x34], dl ; jmp qword ptr [rax]
0x000000000018048b : add byte ptr [rax + 0x35], al ; cli ; jmp qword ptr [rax]
0x000000000017dab3 : add byte ptr [rax + 0x35], dh ; hlt ; call rax
0x000000000017dabb : add byte ptr [rax + 0x36], dl ; hlt ; call qword ptr [rax]
0x0000000000040a9e : add byte ptr [rax + 0x38], bh ; syscall
0x00000000001002e3 : add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xf9fc
0x00000000000371a6 : add byte ptr [rax + 0x39], cl ; ret
0x000000000002b1e6 : add byte ptr [rax + 0x39], cl ; ret 0x5476
0x000000000007c082 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000b146f : add byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000000fcec1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000000fcf80 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000007ddc1 : add byte ptr [rax + 0x39], cl ; ret 0xe972
0x000000000007e2cf : add byte ptr [rax + 0x39], cl ; ret 0xeb72
0x00000000001129e7 : add byte ptr [rax + 0x39], cl ; ret 0xf375
0x000000000002452f : add byte ptr [rax + 0x39], cl ; retf
0x000000000014e330 : add byte ptr [rax + 0x39], cl ; retf -0x1e8b
0x0000000000152883 : add byte ptr [rax + 0x39], cl ; retf -0x268b
0x000000000012baf6 : add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x0000000000151fd8 : add byte ptr [rax + 0x39], cl ; retf -0x78f1
0x0000000000131083 : add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x00000000000c0ec6 : add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x00000000000c0ee5 : add byte ptr [rax + 0x39], cl ; retf 0x2475
0x000000000012bfd6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000000ff0ef : add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x00000000001328cf : add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000b12f7 : add byte ptr [rax + 0x39], cl ; retf 0x4b7f
0x000000000010029f : add byte ptr [rax + 0x39], cl ; retf 0x577
0x000000000003d9e7 : add byte ptr [rax + 0x39], cl ; retf 0x777
0x00000000000bfd5f : add byte ptr [rax + 0x3b], bh ; syscall
0x00000000001a3b5f : add byte ptr [rax + 0x3b], dh ; clc ; call qword ptr [rax]
0x00000000001a3b2f : add byte ptr [rax + 0x3b], dl ; clc ; call qword ptr [rdi]
0x00000000001a3c4f : add byte ptr [rax + 0x3b], dl ; clc ; call rcx
0x0000000000193d37 : add byte ptr [rax + 0x3c], bl ; hlt ; jmp qword ptr [rdi]
0x000000000017c423 : add byte ptr [rax + 0x3c], dh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000040dd8 : add byte ptr [rax + 0x3e], bh ; mov rbx, rdi ; syscall
0x00000000000344ff : add byte ptr [rax + 0x3e], bh ; syscall
0x0000000000194b57 : add byte ptr [rax + 0x3e], bl ; stc ; call qword ptr [rax]
0x00000000000344fe : add byte ptr [rax + 0x3e], dil ; syscall
0x00000000000bf56f : add byte ptr [rax + 0x3f], bh ; syscall
0x000000000017fbf3 : add byte ptr [rax + 0x40], dh ; stc ; jmp qword ptr [rax]
0x00000000001844cf : add byte ptr [rax + 0x43], al ; cli ; call qword ptr [rdi]
0x0000000000196fc7 : add byte ptr [rax + 0x43], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000196faf : add byte ptr [rax + 0x43], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001798dd : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002be7d : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000019709f : add byte ptr [rax + 0x44], dh ; cmc ; jmp qword ptr [rdx]
0x000000000017f5db : add byte ptr [rax + 0x45], al ; clc ; call rax
0x0000000000073db6 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000018756f : add byte ptr [rax + 0x49], ah ; out dx, al ; call rdi
0x00000000001805b3 : add byte ptr [rax + 0x4d], ah ; cli ; call rax
0x00000000000e2e1f : add byte ptr [rax + 0x50], bh ; syscall
0x000000000017d7c3 : add byte ptr [rax + 0x51], al ; jmp qword ptr [rax]
0x00000000000e2e4f : add byte ptr [rax + 0x51], bh ; syscall
0x000000000017c523 : add byte ptr [rax + 0x51], dh ; out dx, eax ; jmp rax
0x000000000006917f : add byte ptr [rax + 0x52], bh ; syscall
0x00000000000e21df : add byte ptr [rax + 0x53], bh ; syscall
0x00000000000e21de : add byte ptr [rax + 0x53], dil ; syscall
0x000000000017d4d3 : add byte ptr [rax + 0x54], ah ; jmp rax
0x00000000000e3f1f : add byte ptr [rax + 0x54], bh ; syscall
0x0000000000180643 : add byte ptr [rax + 0x54], dh ; cli ; call qword ptr [rax]
0x000000000017dbdb : add byte ptr [rax + 0x55], al ; hlt ; jmp qword ptr [rax]
0x00000000000e3d9f : add byte ptr [rax + 0x56], bh ; syscall
0x000000000006e775 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000197627 : add byte ptr [rax + 0x57], bh ; cmc ; call qword ptr [rax]
0x000000000017f6bb : add byte ptr [rax + 0x57], dh ; clc ; jmp qword ptr [rax]
0x00000000000e3e5f : add byte ptr [rax + 0x59], bh ; syscall
0x00000000000e20ef : add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000e211f : add byte ptr [rax + 0x5b], bh ; syscall
0x000000000002082d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000004ddf : add byte ptr [rax + 0x5b], dl ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000187a9f : add byte ptr [rax + 0x5c], dl ; out dx, al ; jmp qword ptr [rbx]
0x0000000000180c73 : add byte ptr [rax + 0x5d], ah ; sti ; call qword ptr [rax]
0x0000000000180c63 : add byte ptr [rax + 0x5d], al ; sti ; jmp rax
0x00000000000e369f : add byte ptr [rax + 0x5d], bh ; syscall
0x00000000000e36cf : add byte ptr [rax + 0x5e], bh ; syscall
0x00000000000b03df : add byte ptr [rax + 0x60], bh ; syscall
0x000000000017d833 : add byte ptr [rax + 0x61], dh ; jmp qword ptr [rax]
0x000000000017c07b : add byte ptr [rax + 0x62], al ; in eax, dx ; jmp qword ptr [rax]
0x00000000000e752f : add byte ptr [rax + 0x62], bh ; syscall
0x00000000000e752e : add byte ptr [rax + 0x62], dil ; syscall
0x000000000002d7f0 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005ab44 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000006a7fd : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000c149a : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000081cd6 : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000006a6db : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000069ac3 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000621b4 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rdi, rax ; jmp rdi
0x0000000000057e54 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rdi ; jmp rax
0x000000000009def6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000d0c64 : add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000128fbc : add byte ptr [rax + 0x63], cl ; clc ; mov eax, 0x3e ; syscall
0x0000000000076d58 : add byte ptr [rax + 0x63], cl ; jnp 0x76dd2 ; syscall
0x000000000010baf7 : add byte ptr [rax + 0x63], cl ; ret
0x0000000000069baa : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000fb325 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000005349a : add byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000046f2f : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000007093f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000b69aa : add byte ptr [rax + 0x63], cl ; retf
0x00000000000cd5e0 : add byte ptr [rax + 0x63], cl ; retf -0x76bb
0x00000000001494b1 : add byte ptr [rax + 0x63], cl ; retf -0x7cb8
0x00000000000d723f : add byte ptr [rax + 0x63], cl ; retf 0x5489
0x0000000000077d9f : add byte ptr [rax + 0x63], cl ; sar dword ptr [rax + 2], 1 ; syscall
0x000000000002f3e1 : add byte ptr [rax + 0x63], cl ; std ; mov eax, 3 ; syscall
0x00000000000e7330 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x10 ; syscall
0x00000000000bb08d : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x00000000000fad93 : add byte ptr [rax + 0x63], cl ; xchg eax, ebp ; push -0x16000001 ; retf -5
0x00000000000bf59f : add byte ptr [rax + 0x64], bh ; syscall
0x00000000000c068f : add byte ptr [rax + 0x66], bh ; syscall
0x0000000000197b5f : add byte ptr [rax + 0x67], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018c0b7 : add byte ptr [rax + 0x67], bh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000f0a1f : add byte ptr [rax + 0x67], bh ; syscall
0x0000000000197b47 : add byte ptr [rax + 0x67], cl ; cmc ; jmp qword ptr [rcx]
0x000000000000fb97 : add byte ptr [rax + 0x68], ah ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000c06af : add byte ptr [rax + 0x68], bh ; syscall
0x000000000017d573 : add byte ptr [rax + 0x68], dh ; call rax
0x00000000001a2fcf : add byte ptr [rax + 0x69], dh ; sti ; jmp qword ptr [rdx]
0x00000000000c069f : add byte ptr [rax + 0x6b], bh ; syscall
0x00000000001a2c4f : add byte ptr [rax + 0x6c], ah ; sti ; jmp qword ptr [rdx]
0x00000000000c06bf : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000c089f : add byte ptr [rax + 0x6d], bh ; syscall
0x000000000017dcab : add byte ptr [rax + 0x6d], dh ; hlt ; call qword ptr [rax]
0x00000000000c067f : add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000c08cf : add byte ptr [rax + 0x6f], bh ; syscall
0x000000000017d843 : add byte ptr [rax + 0x70], ah ; call rax
0x00000000000c092f : add byte ptr [rax + 0x70], bh ; syscall
0x000000000018c407 : add byte ptr [rax + 0x70], ch ; out dx, eax ; jmp qword ptr [rcx]
0x000000000018c3ef : add byte ptr [rax + 0x70], dl ; out dx, eax ; jmp qword ptr [rcx]
0x000000000018c7df : add byte ptr [rax + 0x73], ah ; out dx, eax ; call qword ptr [rax]
0x000000000018c827 : add byte ptr [rax + 0x73], bh ; out dx, eax ; call qword ptr [rdx]
0x00000000000c06cf : add byte ptr [rax + 0x73], bh ; syscall
0x000000000009892f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000c095f : add byte ptr [rax + 0x76], bh ; syscall
0x000000000006f4d3 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000006e5f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000188417 : add byte ptr [rax + 0x77], cl ; out dx, al ; call qword ptr [rsi]
0x00000000000c098f : add byte ptr [rax + 0x78], bh ; syscall
0x000000000009a38f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000017c603 : add byte ptr [rax + 0x7a], al ; out dx, eax ; jmp qword ptr [rax]
0x00000000000f018f : add byte ptr [rax + 0x7a], bh ; syscall
0x000000000017c623 : add byte ptr [rax + 0x7b], ah ; out dx, eax ; jmp rax
0x000000000017fda3 : add byte ptr [rax + 0x7b], ah ; stc ; jmp qword ptr [rax]
0x00000000000f01bf : add byte ptr [rax + 0x7b], bh ; syscall
0x000000000018dcd7 : add byte ptr [rax + 0x7b], ch ; sti ; call qword ptr [rax]
0x00000000000c08ff : add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000f077f : add byte ptr [rax + 0x7d], bh ; syscall
0x00000000000c0e57 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000f07af : add byte ptr [rax + 0x7e], bh ; syscall
0x00000000000c0daa : add byte ptr [rax + 0x7f], bh ; ret
0x0000000000034534 : add byte ptr [rax + 0x7f], bh ; syscall
0x000000000003457e : add byte ptr [rax + 0x82], bh ; syscall
0x00000000000349df : add byte ptr [rax + 0x83], bh ; syscall
0x00000000000349de : add byte ptr [rax + 0x83], dil ; syscall
0x00000000000e1d4f : add byte ptr [rax + 0x84], bh ; syscall
0x00000000000e1d4e : add byte ptr [rax + 0x84], dil ; syscall
0x00000000000f0bff : add byte ptr [rax + 0x86], bh ; syscall
0x0000000000076062 : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000e201f : add byte ptr [rax + 0x8a], bh ; syscall
0x00000000000e783f : add byte ptr [rax + 0x8d], bh ; syscall
0x00000000000e783e : add byte ptr [rax + 0x8d], dil ; syscall
0x00000000000d8f0f : add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000d8f3f : add byte ptr [rax + 0x8f], bh ; syscall
0x00000000000d8f6f : add byte ptr [rax + 0x90], bh ; syscall
0x00000000000d8f9f : add byte ptr [rax + 0x91], bh ; syscall
0x00000000000d8fff : add byte ptr [rax + 0x92], bh ; syscall
0x00000000000d902f : add byte ptr [rax + 0x93], bh ; syscall
0x0000000000154fd2 : add byte ptr [rax + 0x9480000], al ; ret 0xbee9
0x0000000000157a02 : add byte ptr [rax + 0x9480000], al ; ret 0xc1e9
0x00000000000d905f : add byte ptr [rax + 0x94], bh ; syscall
0x00000000000eb3bf : add byte ptr [rax + 0x96], bh ; syscall
0x00000000000eb3ef : add byte ptr [rax + 0x97], bh ; syscall
0x00000000000eb41f : add byte ptr [rax + 0x98], bh ; syscall
0x00000000000f06df : add byte ptr [rax + 0x9a], bh ; syscall
0x00000000000f0adf : add byte ptr [rax + 0x9b], bh ; syscall
0x00000000000e829f : add byte ptr [rax + 0xa1], bh ; syscall
0x00000000000e826f : add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000b04bf : add byte ptr [rax + 0xa4], bh ; syscall
0x00000000000f012f : add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000e879f : add byte ptr [rax + 0xa7], bh ; syscall
0x00000000000e87cf : add byte ptr [rax + 0xa8], bh ; syscall
0x000000000017c2c3 : add byte ptr [rax + 0xa], ah ; out dx, eax ; inc dword ptr [rax] ; ret 0
0x00000000000eb22f : add byte ptr [rax + 0xa], bh ; syscall
0x000000000018e8f7 : add byte ptr [rax + 0xa], ch ; int1 ; call rdx
0x00000000000e7fef : add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000e808f : add byte ptr [rax + 0xab], bh ; syscall
0x00000000000f001f : add byte ptr [rax + 0xac], bh ; syscall
0x00000000000effef : add byte ptr [rax + 0xad], bh ; syscall
0x00000000000effee : add byte ptr [rax + 0xad], dil ; syscall
0x00000000000f080f : add byte ptr [rax + 0xae], bh ; syscall
0x00000000000f083f : add byte ptr [rax + 0xb0], bh ; syscall
0x00000000000eb1ff : add byte ptr [rax + 0xb], bh ; syscall
0x00000000000f015f : add byte ptr [rax + 0xbb], bh ; syscall
0x00000000000ee2bf : add byte ptr [rax + 0xc6], bh ; syscall
0x00000000000ee19f : add byte ptr [rax + 0xc7], bh ; syscall
0x00000000000b031f : add byte ptr [rax + 0xc9], bh ; syscall
0x00000000000b031e : add byte ptr [rax + 0xc9], dil ; syscall
0x00000000000cb0fc : add byte ptr [rax + 0xc], bh ; jmp 0xcb0ce
0x00000000000c9e4f : add byte ptr [rax + 0xc], bh ; pop rbx ; ret
0x00000000000fcca1 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000000f086f : add byte ptr [rax + 0xd5], bh ; syscall
0x000000000017bd73 : add byte ptr [rax + 0xd], ah ; in al, dx ; call rax
0x00000000000f070f : add byte ptr [rax + 0xe4], bh ; syscall
0x00000000000c14ce : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000006f33c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000000942f : add byte ptr [rax + 0xe], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000341dc : add byte ptr [rax + 0xe], bh ; syscall
0x00000000000e97bf : add byte ptr [rax + 0xeb], bh ; syscall
0x000000000002ce74 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x0000000000093875 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000e8848 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000083f93 : add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x000000000008409c : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000001251a4 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000f886b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000027add : add byte ptr [rax + 0xf], cl ; ret 0x8545
0x000000000002511a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e4b6e : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000b1676 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000008abf9 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000083ac1 : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000e4aec : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000002542d : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x00000000000267df : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x0000000000084eb9 : add byte ptr [rax + 0xf], cl ; ret 0xf6c3
0x0000000000083b97 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000010db3c : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000b1d0e : add byte ptr [rax + 0xf], cl ; retf -0x76b8
0x00000000000515cc : add byte ptr [rax + 0xf], cl ; retf 0xf4c
0x00000000000357e3 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000dbf16 : add byte ptr [rax + 0xf], cl ; sti ; call r14
0x00000000000c0e6f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000f098f : add byte ptr [rax + 0xfd], bh ; syscall
0x00000000000f09ef : add byte ptr [rax + 0xff], bh ; syscall
0x00000000000e0f47 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000045305 : add byte ptr [rax + 1], bh ; ret
0x00000000000f2508 : add byte ptr [rax + 1], bh ; syscall
0x000000000008dee4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000004c3ef : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x0000000000149d09 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000031baf : add byte ptr [rax + 1], cl ; jmp rdx
0x0000000000023f8c : add byte ptr [rax + 1], cl ; ret
0x000000000003955f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000149d00 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000af96c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000002e5be : add byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000013298d : add byte ptr [rax + 1], cl ; retf -0x7eb8
0x00000000000e0f46 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x000000000007532e : add byte ptr [rax + 1], dil ; ret
0x000000000011559f : add byte ptr [rax + 2], bh ; ret
0x000000000007563c : add byte ptr [rax + 2], bh ; syscall
0x00000000001a759f : add byte ptr [rax + 3], bh ; add byte ptr [rax], al ; retf
0x00000000000c1046 : add byte ptr [rax + 7], bh ; ret
0x0000000000154fd5 : add byte ptr [rax + 9], cl ; ret 0xbee9
0x0000000000157a05 : add byte ptr [rax + 9], cl ; ret 0xc1e9
0x00000000001557b4 : add byte ptr [rax + 9], cl ; retf 0x25e9
0x0000000000160f2b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000018116b : add byte ptr [rax + rax - 0x1f00000], dh ; jmp 0x19dc7f
0x0000000000099a0c : add byte ptr [rax + rax], 0 ; ret
0x000000000019d35f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x000000000010454c : add byte ptr [rax + rax], al ; add al, ch ; ret 0xfff1
0x00000000000bc5cc : add byte ptr [rax + rax], al ; add al, ch ; retf
0x000000000000fdaf : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x000000000006879e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019db5f : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 1
0x000000000018d2ff : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; ret 0
0x00000000001810d3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; call 0xffffffffe117fad8
0x0000000000009daf : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x36
0x000000000019d40f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000018d39f : add byte ptr [rax + rax], cl ; add ah, ch ; ret 0
0x000000000007ecd9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f907 : add byte ptr [rax + rax], cl ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000019d4af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret
0x000000000018dbaf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0
0x000000000018dc9f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf
0x000000000019db9f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf 1
0x000000000019d31f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018db1f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000018dc57 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000018dc0f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf
0x000000000018db07 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000018db4f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000018d417 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x000000000018dbf7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf
0x00000000000aeff5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000188167 : add byte ptr [rax + rbp], al ; ret 1
0x000000000018e923 : add byte ptr [rax + rbx*8], ch ; add al, ch ; or esi, ecx ; jmp rsi
0x000000000019195b : add byte ptr [rax + rcx - 0x23efffff], ah ; jmp qword ptr [rcx]
0x00000000000ea57d : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00000000000416a6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001876af : add byte ptr [rax + rdi*8], al ; retf
0x00000000001948f3 : add byte ptr [rax + rdi], bh ; add dword ptr [rax], eax ; clc ; ret 0xfff4
0x00000000001620d7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x0000000000196143 : add byte ptr [rax + rdx*2 + 0x16f80001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000e510d : add byte ptr [rax + rdx*2 - 0x18], dh ; retf
0x000000000018e123 : add byte ptr [rax + rdx*8], ch ; add byte ptr [rax], cl ; mov ch, 0xfb ; call qword ptr [rdi]
0x000000000018e10b : add byte ptr [rax + rdx*8], dl ; add al, dh ; mov bl, 0xfb ; jmp qword ptr [rdi]
0x00000000001920db : add byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; loopne 0x1920e5 ; call qword ptr [rax]
0x00000000001920db : add byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; loopne 0x1920e6 ; call qword ptr [rax]
0x000000000019811b : add byte ptr [rax + rsi*2 + 1], ah ; add byte ptr [rax - 0x78], al ; cmc ; jmp qword ptr [rcx]
0x0000000000198133 : add byte ptr [rax + rsi*2 + 1], bh ; add byte ptr [rax - 0x78], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000198163 : add byte ptr [rax + rsi*2 - 0x7777ffff], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019814b : add byte ptr [rax + rsi*2 - 0x778fffff], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001980bb : add byte ptr [rax + rsi*2], al ; add dword ptr [rax], eax ; loopne 0x198051 ; cmc ; jmp qword ptr [rcx]
0x000000000018c153 : add byte ptr [rax + rsi*4 + 0x69080000], bl ; out dx, eax ; call rax
0x000000000019016b : add byte ptr [rax + rsi*8 + 0x1820000], dh ; jmp qword ptr [rax]
0x000000000007c4b5 : add byte ptr [rax + rsi], 1 ; ret
0x00000000001940f3 : add byte ptr [rax + rsi], bh ; add dword ptr [rax], eax ; test al, 0x50 ; hlt ; call qword ptr [rdx]
0x000000000017c444 : add byte ptr [rax - 0x11], al ; call qword ptr [rax]
0x000000000006a71f : add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x000000000018b13b : add byte ptr [rax - 0x15e00000], al ; cld ; jmp rsp
0x000000000011ab16 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894d
0x000000000017b32c : add byte ptr [rax - 0x16], ah ; call rax
0x000000000017ca63 : add byte ptr [rax - 0x16], ah ; out dx, eax ; call qword ptr [rax]
0x0000000000191df7 : add byte ptr [rax - 0x16], bh ; jmp qword ptr [rcx]
0x000000000018109b : add byte ptr [rax - 0x16], dh ; std ; jmp rax
0x00000000000fa232 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0xeac1
0x0000000000191d7f : add byte ptr [rax - 0x17], dl ; jmp qword ptr [rcx]
0x00000000001956df : add byte ptr [rax - 0x18], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a28d7 : add byte ptr [rax - 0x1b], ch ; idiv edi ; ret
0x0000000000180fd3 : add byte ptr [rax - 0x1e], al ; std ; call rax
0x0000000000199c47 : add byte ptr [rax - 0x1f], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018a33f : add byte ptr [rax - 0x20], ah ; out dx, al ; jmp qword ptr [rsi]
0x000000000018a31f : add byte ptr [rax - 0x20], dl ; out dx, al ; jmp qword ptr [rsi]
0x000000000017c1f3 : add byte ptr [rax - 0x21], dl ; out dx, al ; call rax
0x000000000017e07b : add byte ptr [rax - 0x22], ah ; cmc ; call rax
0x00000000001919ef : add byte ptr [rax - 0x23], dl ; call qword ptr [rdx]
0x0000000000180b93 : add byte ptr [rax - 0x24], al ; cli ; jmp qword ptr [rax]
0x000000000017e033 : add byte ptr [rax - 0x24], dh ; cmc ; jmp rax
0x000000000018ddc7 : add byte ptr [rax - 0x25], bl ; sti ; call qword ptr [rax]
0x0000000000195277 : add byte ptr [rax - 0x28], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000180f3b : add byte ptr [rax - 0x29], dl ; std ; jmp rax
0x000000000018d89f : add byte ptr [rax - 0x2b], ah ; out dx, eax ; call qword ptr [rbx]
0x000000000017bfdb : add byte ptr [rax - 0x2b], dh ; in al, dx ; jmp rax
0x0000000000180b0b : add byte ptr [rax - 0x2b], dl ; cli ; jmp rax
0x000000000017f98b : add byte ptr [rax - 0x2c], ah ; clc ; jmp rax
0x000000000018c077 : add byte ptr [rax - 0x2c], ch ; cld ; call qword ptr [rdx]
0x0000000000034bd1 : add byte ptr [rax - 0x2d], cl ; loopne 0x34c27 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000194ebf : add byte ptr [rax - 0x2f], ah ; hlt ; jmp qword ptr [rcx]
0x0000000000194ea7 : add byte ptr [rax - 0x2f], cl ; hlt ; jmp qword ptr [rcx]
0x000000000019975f : add byte ptr [rax - 0x30], dl ; cmc ; call rsi
0x000000000018b9f7 : add byte ptr [rax - 0x32], ch ; stc ; call qword ptr [rcx]
0x0000000000180abb : add byte ptr [rax - 0x34], dh ; cli ; jmp rax
0x0000000000199617 : add byte ptr [rax - 0x35], ch ; cmc ; call rdi
0x000000000019154f : add byte ptr [rax - 0x37], dh ; call rdi
0x00000000000324c7 : add byte ptr [rax - 0x39], cl ; ret
0x000000000003e2d2 : add byte ptr [rax - 0x39], cl ; ret 0xc001
0x000000000003ba10 : add byte ptr [rax - 0x39], cl ; ret 0xfc01
0x0000000000039130 : add byte ptr [rax - 0x39], cl ; ret 0xff81
0x0000000000071c0d : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000af57f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000af55f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000af5bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000af56f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000af5af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000003424f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000180a1b : add byte ptr [rax - 0x3c], al ; cli ; call rax
0x00000000000afe45 : add byte ptr [rax - 0x3db2f0b8], al ; pop rbx ; ret
0x0000000000032ef5 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000337fe : add byte ptr [rax - 0x3f28f09a], dl ; and eax, 8 ; ret
0x000000000003361a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000010d1c7 : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x48 ; add edx, 1 ; syscall
0x000000000002081b : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000033fc5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000018988f : add byte ptr [rax - 0x41], dl ; out dx, al ; jmp rsi
0x0000000000189807 : add byte ptr [rax - 0x44], cl ; out dx, al ; call rbx
0x000000000017df6b : add byte ptr [rax - 0x45], dl ; cmc ; call qword ptr [rax]
0x000000000018969f : add byte ptr [rax - 0x47], ah ; out dx, al ; call rdx
0x0000000000191267 : add byte ptr [rax - 0x47], bl ; call rsi
0x000000000017f8c3 : add byte ptr [rax - 0x47], dl ; clc ; call qword ptr [rax]
0x000000000017ac34 : add byte ptr [rax - 0x486f0005], bh ; sti ; jmp qword ptr [rax]
0x0000000000039acf : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000003d1a3 : add byte ptr [rax - 0x48], cl ; retf -2
0x000000000018f7ff : add byte ptr [rax - 0x4a], ah ; int1 ; jmp qword ptr [rcx]
0x00000000001991bf : add byte ptr [rax - 0x4b], dh ; cmc ; call rdi
0x00000000001809a3 : add byte ptr [rax - 0x4d], ah ; cli ; jmp rax
0x000000000017a07c : add byte ptr [rax - 0x4f0f0004], dh ; cld ; jmp rax
0x0000000000186477 : add byte ptr [rax - 0x51], cl ; in al, dx ; call qword ptr [rcx]
0x0000000000190f0f : add byte ptr [rax - 0x55], dh ; call rdi
0x000000000019e66f : add byte ptr [rax - 0x57], dh ; clc ; call qword ptr [rax]
0x000000000000c9ff : add byte ptr [rax - 0x57], dl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018904f : add byte ptr [rax - 0x5c], ah ; out dx, al ; jmp rsp
0x000000000017f89b : add byte ptr [rax - 0x5c], al ; clc ; jmp qword ptr [rax]
0x000000000017ec2b : add byte ptr [rax - 0x5f0008b0], ah ; retf
0x000000000017ebeb : add byte ptr [rax - 0x5f0008b2], dl ; retf 1
0x00000000001a0c27 : add byte ptr [rax - 0x5f], bh ; idiv edi ; retf
0x0000000000180883 : add byte ptr [rax - 0x64], dl ; cli ; jmp rax
0x0000000000198a5f : add byte ptr [rax - 0x65], dh ; cmc ; jmp qword ptr [rcx]
0x000000000017fef3 : add byte ptr [rax - 0x66], ah ; stc ; jmp qword ptr [rax]
0x000000000017bf1b : add byte ptr [rax - 0x67], ah ; in al, dx ; jmp qword ptr [rax]
0x000000000018dd97 : add byte ptr [rax - 0x6a], bl ; sti ; call qword ptr [rax]
0x000000000017bf13 : add byte ptr [rax - 0x6b], dh ; in al, dx ; call rax
0x000000000017ea4b : add byte ptr [rax - 0x6f0008e7], ah ; ret 1
0x0000000000188b7f : add byte ptr [rax - 0x71], dh ; out dx, al ; jmp rcx
0x00000000000f8e3a : add byte ptr [rax - 0x71f0ffc8], al ; ret
0x000000000019860f : add byte ptr [rax - 0x72], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000198627 : add byte ptr [rax - 0x72], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000c6031 : add byte ptr [rax - 0x73], cl ; add al, 0xd1 ; jmp 0xc6001
0x000000000002bff7 : add byte ptr [rax - 0x73], cl ; add eax, 0x145200 ; ret
0x000000000002116f : add byte ptr [rax - 0x73], cl ; add eax, 0x14fbd4 ; ret
0x000000000002117f : add byte ptr [rax - 0x73], cl ; add eax, 0x151a01 ; ret
0x0000000000112c6f : add byte ptr [rax - 0x73], cl ; add eax, 0x5e588 ; ret
0x000000000010e2ff : add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000af03f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000af04f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000010868f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a8185 ; call rax
0x00000000000af02f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007b4a0 : add byte ptr [rax - 0x73], cl ; push rax ; adc byte ptr [rax + 0x39], cl ; retf -0x78f1
0x000000000007d4da : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000333cc : add byte ptr [rax - 0x73], cl ; retf 0x2de9
0x0000000000040c35 : add byte ptr [rax - 0x73], cl ; xor eax, 0x193 ; call rax
0x000000000006d278 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007a63a : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe29e ; call rax
0x000000000007a172 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe766 ; call rax
0x0000000000078e58 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x0000000000078c10 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcc8 ; call rax
0x000000000006d571 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x00000000001983e7 : add byte ptr [rax - 0x75], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000115386 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x000000000010b062 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 + 1], r9b ; ret
0x00000000000bf112 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000037191 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000125862 : add byte ptr [rax - 0x75], cl ; add eax, 0x287ca6 ; call qword ptr [rax]
0x000000000012525f : add byte ptr [rax - 0x75], cl ; add eax, 0x2882a9 ; call qword ptr [rax]
0x000000000007a98f : add byte ptr [rax - 0x75], cl ; add eax, 0x332c89 ; ret
0x00000000000296ef : add byte ptr [rax - 0x75], cl ; add eax, 0x3842f9 ; ret
0x000000000002200f : add byte ptr [rax - 0x75], cl ; add eax, 0x38f419 ; ret
0x0000000000021fff : add byte ptr [rax - 0x75], cl ; add eax, 0x38f439 ; ret
0x000000000007c6c5 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000e8a1e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000010f9d0 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001592d8 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; ret
0x00000000000cc3c7 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012188f : add byte ptr [rax - 0x75], cl ; je 0x1218c0 ; or byte ptr [rax - 0x77], cl ; retf -0x76bc
0x0000000000103a1b : add byte ptr [rax - 0x75], cl ; jl 0x103a4b ; xor al, ch ; retf 0x242
0x00000000001217b9 : add byte ptr [rax - 0x75], cl ; jl 0x1217ea ; or byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000025f74 : add byte ptr [rax - 0x75], cl ; jl 0x25fa5 ; or byte ptr [rax + 0x29], cl ; retf -0x1f7d
0x00000000000d633b : add byte ptr [rax - 0x75], cl ; jl 0xd636b ; jo 0xd634a ; ret 0xc083
0x00000000000c3bcd : add byte ptr [rax - 0x75], cl ; jnp 0xc3bf9 ; call 0x205e7
0x00000000000c26f0 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r15
0x0000000000072d0f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000ccfff : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000001207f7 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000ee3d7 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000012d51f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000375f4 : add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf -0x3eb8
0x0000000000043ecf : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x00000000000bc89f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000f29a8 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000000ecea5 : add byte ptr [rax - 0x75], cl ; xor al, ch ; ret 0xf81d
0x00000000000625c5 : add byte ptr [rax - 0x75], cl ; xor eax, 0x349993 ; call rax
0x000000000005a905 : add byte ptr [rax - 0x75], cl ; xor eax, 0x351653 ; call rax
0x000000000005a251 : add byte ptr [rax - 0x75], cl ; xor eax, 0x351d07 ; call rax
0x0000000000057345 : add byte ptr [rax - 0x75], cl ; xor eax, 0x354c13 ; call rax
0x000000000004e6d9 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35d87f ; call rax
0x000000000004b67d : add byte ptr [rax - 0x75], cl ; xor eax, 0x3608db ; call rax
0x00000000001983ff : add byte ptr [rax - 0x75], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000198347 : add byte ptr [rax - 0x76], ch ; cmc ; call qword ptr [rsi]
0x000000000010ba0f : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000e9d00 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ea292 : add byte ptr [rax - 0x76b80000], al ; ret
0x00000000000ff31f : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x000000000017ec23 : add byte ptr [rax - 0x770008b0], al ; retf
0x000000000017ebe3 : add byte ptr [rax - 0x770008b2], al ; retf 1
0x000000000019823f : add byte ptr [rax - 0x77], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000198257 : add byte ptr [rax - 0x77], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000127db4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000f2c77 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000007b28c : add byte ptr [rax - 0x77], cl ; add eax, 0x330fcc ; ret
0x000000000007b25c : add byte ptr [rax - 0x77], cl ; add eax, 0x331004 ; ret
0x0000000000127f6f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000008314e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000fdfcf : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003710f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007a9bf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018dca7 : add byte ptr [rax - 0x77], cl ; cli ; call qword ptr [rax]
0x00000000000cd1b3 : add byte ptr [rax - 0x77], cl ; fbstp dword ptr [rbp + 0x27] ; call 0xc9478
0x0000000000077d2a : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000689fe : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000082819 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x0000000000126741 : add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x18] ; syscall
0x00000000001267f7 : add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x40] ; syscall
0x0000000000126b34 : add byte ptr [rax - 0x77], cl ; fidivr word ptr [rax + 1] ; syscall
0x0000000000082a9a : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x000000000003279b : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 3] ; syscall
0x00000000000323d7 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x0000000000127889 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000004d5e1 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000008ae4e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xe6e8
0x000000000004cebf : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000000ca05b : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000c028d : add byte ptr [rax - 0x77], cl ; fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x00000000000e90c7 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; push rax ; ret 0xfff9
0x00000000000f4d24 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000006bcd4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000010bf8c : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; stosd dword ptr [rdi], eax ; retf -0xe
0x00000000000e907c : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; wait ; ret 0xfff9
0x00000000000fffd5 : add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf212
0x00000000000694d5 : add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfb7d
0x0000000000074fec : add byte ptr [rax - 0x77], cl ; imul eax ; stosd dword ptr [rdi], eax ; ret 0xfffa
0x000000000006bc35 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000765b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000000f2283 : add byte ptr [rax - 0x77], cl ; out -0x48, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000082d5b : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000fd374 : add byte ptr [rax - 0x77], cl ; out dx, al ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x000000000011585c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000001140d3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000113f14 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000297b0 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 3 ; syscall
0x00000000000fc291 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000007d8af : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000080792 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000002783f : add byte ptr [rax - 0x77], cl ; ret
0x000000000005c363 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x000000000010f231 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000805ec : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000042d65 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000004ba10 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000006c4d3 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003284a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x000000000010f2ac : add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x00000000000ff322 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000b283f : add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x000000000002e5ad : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f6163 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000005092d : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000030eec : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000c1443 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002b9d0 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006d128 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000bc4f6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000e8dca : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000bbc4e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000060f02 : add byte ptr [rax - 0x77], cl ; ret 0xa5e8
0x00000000000ee035 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000002e810 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000004090a : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000008371f : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x00000000000a305c : add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000416aa : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000a550e : add byte ptr [rax - 0x77], cl ; ret 0xe929
0x000000000007afd1 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000050f30 : add byte ptr [rax - 0x77], cl ; ret 0xf8e9
0x000000000003a7b2 : add byte ptr [rax - 0x77], cl ; ret 0xf929
0x0000000000083092 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000003b1d1 : add byte ptr [rax - 0x77], cl ; retf
0x0000000000068e1d : add byte ptr [rax - 0x77], cl ; retf -0x2eb8
0x00000000000542c7 : add byte ptr [rax - 0x77], cl ; retf -0x4415
0x000000000008292e : add byte ptr [rax - 0x77], cl ; retf -0x5e15
0x000000000014a40c : add byte ptr [rax - 0x77], cl ; retf -0x63b
0x0000000000143b80 : add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000009e54f : add byte ptr [rax - 0x77], cl ; retf -0x72b8
0x0000000000039cd5 : add byte ptr [rax - 0x77], cl ; retf -0x74b8
0x000000000003b108 : add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x00000000000498fc : add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000143dc2 : add byte ptr [rax - 0x77], cl ; retf -0x7cb7
0x0000000000050181 : add byte ptr [rax - 0x77], cl ; retf 0x14eb
0x0000000000145b54 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000005779f : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x0000000000143c22 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000030912 : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x00000000001459d6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000053cf1 : add byte ptr [rax - 0x77], cl ; rol dword ptr [rcx - 0x75], 0x46 ; add al, 0x89 ; ret 0xda29
0x00000000001553cf : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 9], cl ; ret
0x000000000012752b : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000102ad4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000009da50 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000127d6c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000040ddd : add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000000bfd1f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000e18e0 : add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x000000000011912c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x119144 ; ret
0x000000000011b85c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11b874 ; ret
0x000000000011b874 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11b88c ; ret
0x000000000011c0ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11c0c4 ; ret
0x000000000011c0c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11c0dc ; ret
0x000000000011c0f4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11c10c ; ret
0x0000000000100dcf : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000e6cae : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x000000000019811f : add byte ptr [rax - 0x78], al ; cmc ; jmp qword ptr [rcx]
0x0000000000198137 : add byte ptr [rax - 0x78], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019814f : add byte ptr [rax - 0x78], dh ; cmc ; jmp qword ptr [rcx]
0x000000000017d273 : add byte ptr [rax - 0x78], dh ; int1 ; jmp rax
0x0000000000198047 : add byte ptr [rax - 0x79], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019802f : add byte ptr [rax - 0x79], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000156b9f : add byte ptr [rax - 0x7ab80000], al ; ret 0x375
0x00000000000bca21 : add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000093caf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000156ba2 : add byte ptr [rax - 0x7b], cl ; ret 0x375
0x0000000000157d97 : add byte ptr [rax - 0x7b], cl ; retf -0x7af1
0x0000000000154c1c : add byte ptr [rax - 0x7b], cl ; retf -0x7bf1
0x000000000009fd86 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000067955 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000123d75 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000006341d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000637da : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x1f
0x0000000000055db4 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xb
0x0000000000096173 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000011e803 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000b428a : add byte ptr [rax - 0x7bf0ffc2], al ; ret 0xfff3
0x000000000013c46b : add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000038f66 : add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; ret 0x8348
0x0000000000142287 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000197c87 : add byte ptr [rax - 0x7d], ch ; cmc ; jmp qword ptr [rcx]
0x000000000004097e : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d5195
0x00000000000f73dd : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc348bbed
0x0000000000080956 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000081edd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002cc34 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007d70d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004d436 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000003336f : add byte ptr [rax - 0x7d], cl ; clc ; retf
0x000000000007e0ec : add byte ptr [rax - 0x7d], cl ; enter 0x4801, -0x77 ; ret 0x8b49
0x0000000000069b3f : add byte ptr [rax - 0x7d], cl ; fiadd dword ptr [rbx] ; sub rdx, r12 ; syscall
0x00000000000e24cf : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x0000000000159766 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x159777 ; ret
0x0000000000080a82 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002329f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000007e07f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000007c23c : add byte ptr [rax - 0x7d], cl ; ret 0x3110
0x000000000009d37f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e9227 : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000011f9fa : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000010a5ca : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000007eb29 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000001231ff : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000002fcf4 : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000021ec5 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d0c57 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000f1faa : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000493af : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000f7f61 : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000143c4f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010b6af : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x0000000000032ac9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000a308f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000cea47 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000c5a93 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006024f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000066dcf : add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x0000000000058226 : add byte ptr [rax - 0x7d], cl ; ret 0xc71e
0x0000000000107804 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000002e4ba : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000145c33 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143c73 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000032927 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000155b9d : add byte ptr [rax - 0x7d], cl ; retf 0x41ff
0x0000000000128937 : add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x000000000008c44f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000093def : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000002917c : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000002a387 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000006ce64 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000041a17 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000003d5ef : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000017f7db : add byte ptr [rax - 0x7f], al ; clc ; call rax
0x00000000000b0539 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007eec1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x7dd
0x000000000006b291 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x919
0x0000000000080489 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x7c7
0x0000000000125ce8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; js 0x125cf7 ; add byte ptr [rax], al ; syscall
0x000000000006fa1c : add byte ptr [rax - 0x7f], cl ; ret
0x000000000013118b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000007fa8f : add byte ptr [rax - 0x7f], cl ; ret 0x870
0x000000000006d21f : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000d60af : add byte ptr [rax - 0x7f], cl ; retf 0
0x000000000001104f : add byte ptr [rax - 0xc], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017caab : add byte ptr [rax - 0xc], dh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000194000 : add byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x000000000017d3f4 : add byte ptr [rax - 0xe], al ; call rax
0x000000000017d51c : add byte ptr [rax - 0xe], bl ; call qword ptr [rax]
0x0000000000199fb7 : add byte ptr [rax - 0xe], ch ; cmc ; jmp qword ptr [rcx]
0x000000000006ad65 : add byte ptr [rax - 1], bh ; jmp 0x6ad37
0x00000000000c0138 : add byte ptr [rax - 1], bh ; leave ; ret
0x00000000001270aa : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000003260d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003422d : add byte ptr [rax - 1], bh ; ret
0x000000000018ae97 : add byte ptr [rax - 1], ch ; out dx, al ; call qword ptr [rsi]
0x0000000000034e96 : add byte ptr [rax - 1], dil ; ret
0x000000000017c283 : add byte ptr [rax - 1], dl ; out dx, al ; call rax
0x000000000017d643 : add byte ptr [rax - 5], ah ; jmp qword ptr [rax]
0x000000000017c26b : add byte ptr [rax - 5], dl ; out dx, al ; jmp qword ptr [rax]
0x000000000016f780 : add byte ptr [rax - 6], bl ; jmp rax
0x000000000018ab17 : add byte ptr [rax - 8], bh ; out dx, al ; call rsp
0x000000000008021a : add byte ptr [rax], 0 ; add al, ch ; insd dword ptr [rdi], dx ; retf 7
0x000000000006dec4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007eec5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x7dd
0x000000000006b295 : add byte ptr [rax], 0 ; add al, ch ; ret 0x919
0x0000000000040a38 : add byte ptr [rax], 0 ; add al, ch ; ret 0xb
0x000000000008048d : add byte ptr [rax], 0 ; add al, ch ; retf 0x7c7
0x00000000000f498d : add byte ptr [rax], 0 ; add al, ch ; retf 0x82
0x00000000000809c1 : add byte ptr [rax], 0 ; add al, ch ; xchg eax, esi ; ret 7
0x00000000000692fb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000014e32d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf -0x1e8b
0x0000000000149cfd : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000013298a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x0000000000071c0a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000fffd2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf212
0x00000000000694d2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfb7d
0x0000000000074fe9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; stosd dword ptr [rdi], eax ; ret 0xfffa
0x000000000003d9cc : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000149c0a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000337eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000159cdb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000120d4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000013396b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000ee3d3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000002b183 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000e6acb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007fe0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007db2b : add byte ptr [rax], 0 ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000006f1e3 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007fe01 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000014f611 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000064651 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000000000017b7a1 : add byte ptr [rax], 0 ; and byte ptr [rbx - 0x15], dh ; call rax
0x000000000006e5f4 : add byte ptr [rax], 0 ; je 0x6e608 ; mov eax, esi ; pop rbx ; ret
0x000000000006e776 : add byte ptr [rax], 0 ; je 0x6e788 ; mov eax, esi ; pop rbx ; ret
0x000000000006f19a : add byte ptr [rax], 0 ; je 0x6f1b1 ; mov eax, r8d ; pop rbx ; ret
0x000000000006f33d : add byte ptr [rax], 0 ; je 0x6f358 ; mov eax, edx ; pop rbx ; ret
0x000000000006f4d4 : add byte ptr [rax], 0 ; je 0x6f4e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000073970 : add byte ptr [rax], 0 ; je 0x739a8 ; mov eax, edx ; pop rbx ; ret
0x0000000000073db7 : add byte ptr [rax], 0 ; je 0x73dc8 ; mov eax, edx ; pop rbx ; ret
0x0000000000073f06 : add byte ptr [rax], 0 ; je 0x73f30 ; mov eax, edx ; pop rbx ; ret
0x0000000000074075 : add byte ptr [rax], 0 ; je 0x740a8 ; mov eax, edx ; pop rbx ; ret
0x00000000000743b0 : add byte ptr [rax], 0 ; je 0x743e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000074d97 : add byte ptr [rax], 0 ; je 0x74da8 ; mov eax, edx ; pop rbx ; ret
0x0000000000076063 : add byte ptr [rax], 0 ; je 0x76078 ; mov eax, edx ; pop rbx ; ret
0x000000000017cbcb : add byte ptr [rax], ah ; add al, dh ; jmp rax
0x00000000000d9ed7 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000000000000762 : add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x00000000000bfa81 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000000f8baf : add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x000000000017b6d3 : add byte ptr [rax], ah ; and al, 0xeb ; jmp qword ptr [rax]
0x000000000019a38f : add byte ptr [rax], ah ; and al, 0xf6 ; jmp qword ptr [rsi]
0x00000000001a1e3f : add byte ptr [rax], ah ; fincstp ; call qword ptr [rdx]
0x00000000001801e3 : add byte ptr [rax], ah ; int1 ; stc ; jmp rax
0x000000000017b7a3 : add byte ptr [rax], ah ; jae 0x17b796 ; call rax
0x000000000017d5b3 : add byte ptr [rax], ah ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rax]
0x000000000017c893 : add byte ptr [rax], ah ; mov bl, 0xef ; call rax
0x00000000001982ff : add byte ptr [rax], ah ; mov dh, ch ; jmp qword ptr [rcx]
0x000000000002ceb4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000018071b : add byte ptr [rax], ah ; pop rbx ; cli ; jmp rax
0x000000000017db83 : add byte ptr [rax], ah ; push rax ; hlt ; call rax
0x00000000000105e7 : add byte ptr [rax], ah ; ret
0x000000000001e19f : add byte ptr [rax], ah ; ret 0x11
0x000000000001f2f7 : add byte ptr [rax], ah ; ret 0x3a
0x0000000000180093 : add byte ptr [rax], ah ; ret 0xfff9
0x0000000000180a9b : add byte ptr [rax], ah ; retf
0x00000000001995bf : add byte ptr [rax], ah ; retf -0xb
0x000000000017f1c3 : add byte ptr [rax], ah ; retf -9
0x000000000000f6e7 : add byte ptr [rax], ah ; retf 0x11
0x000000000000a80f : add byte ptr [rax], ah ; retf 0xf
0x0000000000194fbf : add byte ptr [rax], ah ; sal ah, cl ; jmp qword ptr [rcx]
0x000000000017b5d3 : add byte ptr [rax], ah ; sbb al, 0xeb ; call rax
0x000000000017b593 : add byte ptr [rax], ah ; sbb ebp, ebx ; call qword ptr [rax]
0x00000000001892ef : add byte ptr [rax], ah ; scasd eax, dword ptr [rdi] ; out dx, al ; call rsp
0x000000000017fc73 : add byte ptr [rax], ah ; stc ; jmp qword ptr [rax]
0x0000000000180d7b : add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x000000000000516f : add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000186fbf : add byte ptr [rax], ah ; sub dh, ch ; jmp qword ptr [rcx]
0x000000000018482f : add byte ptr [rax], ah ; xor ch, bl ; jmp qword ptr [rbx]
0x000000000019d4ae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret
0x000000000018dbae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x000000000018dc9e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x000000000019db9e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf 1
0x000000000019d31e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018db1e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000018dc56 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000018dc0e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x000000000018db06 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000018db4e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000018d416 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x000000000018dbf6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf
0x00000000001a2fca : add byte ptr [rax], al ; adc al, 0x1f ; add al, byte ptr [rax] ; jo 0x1a3044 ; sti ; jmp qword ptr [rdx]
0x0000000000193fca : add byte ptr [rax], al ; adc al, 0x2f ; add dword ptr [rax], eax ; ror byte ptr [rdi - 0xc], 1 ; jmp qword ptr [rcx]
0x00000000001844ca : add byte ptr [rax], al ; adc al, 0x34 ; add byte ptr [rax], al ; cli ; call qword ptr [rdi]
0x0000000000194dca : add byte ptr [rax], al ; adc al, 0x3d ; add dword ptr [rax], eax ; or bh, 0xf4 ; jmp qword ptr [rcx]
0x00000000001861ca : add byte ptr [rax], al ; adc al, 0x51 ; add byte ptr [rax], al ; xor byte ptr [rsp + rbp*8], ch ; jmp rdi
0x00000000001962ca : add byte ptr [rax], al ; adc al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf5 ; jmp qword ptr [rsi]
0x0000000000197aca : add byte ptr [rax], al ; adc al, 0x6a ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000019d4ca : add byte ptr [rax], al ; adc al, 0xc4 ; add dword ptr [rax], eax ; and bh, 0xf6 ; jmp qword ptr [rdi]
0x000000000018deca : add byte ptr [rax], al ; adc al, 0xce ; add byte ptr [rax], al ; cmp bl, 0xfb ; jmp qword ptr [rax]
0x000000000018eeca : add byte ptr [rax], al ; adc al, 0xde ; add byte ptr [rax], al ; loopne 0x18eef6 ; int1 ; call qword ptr [rdx]
0x000000000018fdca : add byte ptr [rax], al ; adc al, 0xed ; add byte ptr [rax], al ; add ah, ch ; sti ; jmp qword ptr [rbx]
0x000000000017ea3b : add byte ptr [rax], al ; adc al, 0xf7 ; lcall ptr [rax] ; ret 1
0x00000000001a741e : add byte ptr [rax], al ; adc al, 6 ; add byte ptr [rax], al ; ret
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000016b356 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or eax, 0xeef6d100 ; jmp rsp
0x000000000017cb8a : add byte ptr [rax], al ; adc bh, bh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000189f4e : add byte ptr [rax], al ; adc bl, dl ; out dx, al ; call qword ptr [rax]
0x000000000016c4fe : add byte ptr [rax], al ; adc byte ptr [rax - 0xf], bl ; ljmp ptr [rax + 0x58] ; int1 ; call qword ptr [rax]
0x000000000017c5a2 : add byte ptr [rax], al ; adc byte ptr [rbp - 0x11], bl ; call rax
0x0000000000187b0e : add byte ptr [rax], al ; adc byte ptr [rsi - 0x12], bl ; jmp qword ptr [rdi]
0x000000000017c242 : add byte ptr [rax], al ; adc ch, ch ; out dx, al ; call qword ptr [rax]
0x000000000018d6fe : add byte ptr [rax], al ; adc cl, dl ; out dx, eax ; jmp qword ptr [rax]
0x000000000018116e : add byte ptr [rax], al ; adc dh, bh ; jmp 0x19dc7c
0x000000000018261a : add byte ptr [rax], al ; adc eax, 0x6ab00000 ; std ; call qword ptr [rcx]
0x00000000001a1499 : add byte ptr [rax], al ; add ah, ah ; add eax, dword ptr [rdx] ; add al, dh ; ret
0x0000000000190999 : add byte ptr [rax], al ; add ah, ah ; clc ; add byte ptr [rax], al ; mov al, 0xa0 ; jmp rsp
0x0000000000191e99 : add byte ptr [rax], al ; add ah, ah ; or eax, 0xeac00001 ; jmp qword ptr [rcx]
0x000000000018db99 : add byte ptr [rax], al ; add ah, ah ; retf 0
0x00000000001a1479 : add byte ptr [rax], al ; add ah, al ; add eax, dword ptr [rdx] ; add al, ah ; ret
0x0000000000191d79 : add byte ptr [rax], al ; add ah, al ; or al, 1 ; add byte ptr [rax - 0x17], dl ; jmp qword ptr [rcx]
0x0000000000189ab1 : add byte ptr [rax], al ; add ah, bh ; mov dword ptr [rax], eax ; add al, bh ; ret
0x0000000000191eb1 : add byte ptr [rax], al ; add ah, bh ; or eax, 0xead80001 ; jmp qword ptr [rcx]
0x000000000019d4b1 : add byte ptr [rax], al ; add ah, bh ; ret
0x000000000018dbb1 : add byte ptr [rax], al ; add ah, bh ; retf 0
0x0000000000194991 : add byte ptr [rax], al ; add ah, bl ; cmp byte ptr [rcx], al ; add al, ch ; ret
0x000000000018d3a1 : add byte ptr [rax], al ; add ah, ch ; ret 0
0x000000000018dca1 : add byte ptr [rax], al ; add ah, ch ; retf
0x000000000019dba1 : add byte ptr [rax], al ; add ah, ch ; retf 1
0x000000000018fdce : add byte ptr [rax], al ; add ah, ch ; sti ; jmp qword ptr [rbx]
0x0000000000191e81 : add byte ptr [rax], al ; add ah, cl ; or eax, 0xeaa80001 ; jmp qword ptr [rcx]
0x000000000018db81 : add byte ptr [rax], al ; add ah, cl ; retf 0
0x000000000019d489 : add byte ptr [rax], al ; add ah, dl ; ret
0x000000000019d389 : add byte ptr [rax], al ; add ah, dl ; ret 1
0x000000000018dc89 : add byte ptr [rax], al ; add ah, dl ; retf
0x000000000010454b : add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret 0xfff1
0x00000000000bc5cb : add byte ptr [rax], al ; add al, 0 ; add al, ch ; retf
0x0000000000188166 : add byte ptr [rax], al ; add al, 0x28 ; ret 1
0x0000000000194fba : add byte ptr [rax], al ; add al, 0x3f ; add dword ptr [rax], eax ; and dl, dl ; hlt ; jmp qword ptr [rcx]
0x0000000000187776 : add byte ptr [rax], al ; add al, 0x4c ; retf
0x00000000001980ba : add byte ptr [rax], al ; add al, 0x70 ; add dword ptr [rax], eax ; loopne 0x198052 ; cmc ; jmp qword ptr [rcx]
0x00000000001991ba : add byte ptr [rax], al ; add al, 0x81 ; add dword ptr [rax], eax ; jo 0x199180 ; cmc ; call rdi
0x000000000019a3ba : add byte ptr [rax], al ; add al, 0x93 ; add dword ptr [rax], eax ; push rax ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000018a4ba : add byte ptr [rax], al ; add al, 0x94 ; add byte ptr [rax], al ; and bh, 0xee ; call qword ptr [rdx]
0x000000000018adba : add byte ptr [rax], al ; add al, 0x9d ; add byte ptr [rax], al ; sar ah, 0xee ; jmp qword ptr [rax]
0x0000000000187706 : add byte ptr [rax], al ; add al, 0xae ; retf
0x000000000018780e : add byte ptr [rax], al ; add al, 0xc4 ; retf 1
0x0000000000187f96 : add byte ptr [rax], al ; add al, 0xe4 ; ret
0x000000000018da1e : add byte ptr [rax], al ; add al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001876ae : add byte ptr [rax], al ; add al, 0xf8 ; retf
0x000000000016712d : add byte ptr [rax], al ; add al, ah ; ret
0x000000000001f36d : add byte ptr [rax], al ; add al, al ; retf 0x3a
0x00000000001a663a : add byte ptr [rax], al ; add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000008021b : add byte ptr [rax], al ; add al, ch ; insd dword ptr [rdi], dx ; retf 7
0x00000000001147fb : add byte ptr [rax], al ; add al, ch ; int 0xc3
0x00000000000fe29c : add byte ptr [rax], al ; add al, ch ; lodsb al, byte ptr [rsi] ; retf
0x00000000001008ea : add byte ptr [rax], al ; add al, ch ; out dx, al ; ret
0x00000000000a0980 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x000000000006449b : add byte ptr [rax], al ; add al, ch ; popfq ; ret
0x0000000000029711 : add byte ptr [rax], al ; add al, ch ; push rdi ; retf
0x0000000000021f15 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000007eec6 : add byte ptr [rax], al ; add al, ch ; ret 0x7dd
0x0000000000117446 : add byte ptr [rax], al ; add al, ch ; ret 0x8e
0x000000000006b296 : add byte ptr [rax], al ; add al, ch ; ret 0x919
0x0000000000040a39 : add byte ptr [rax], al ; add al, ch ; ret 0xb
0x0000000000107766 : add byte ptr [rax], al ; add al, ch ; ret 0xfda6
0x000000000010f286 : add byte ptr [rax], al ; add al, ch ; ret 0xfff9
0x0000000000022cdd : add byte ptr [rax], al ; add al, ch ; retf
0x000000000010039e : add byte ptr [rax], al ; add al, ch ; retf -0x603
0x000000000010dfd6 : add byte ptr [rax], al ; add al, ch ; retf -0xed9
0x00000000000a0291 : add byte ptr [rax], al ; add al, ch ; retf -8
0x0000000000077b6e : add byte ptr [rax], al ; add al, ch ; retf 0x10
0x000000000007427e : add byte ptr [rax], al ; add al, ch ; retf 0x6b
0x000000000008048e : add byte ptr [rax], al ; add al, ch ; retf 0x7c7
0x00000000000f498e : add byte ptr [rax], al ; add al, ch ; retf 0x82
0x00000000001266ed : add byte ptr [rax], al ; add al, ch ; sti ; ret 0xfffb
0x000000000006e2b5 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x00000000000809c2 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; ret 7
0x00000000000e5392 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; retf -1
0x000000000001f38d : add byte ptr [rax], al ; add al, dh ; retf
0x0000000000159cdd : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000483e2 : add byte ptr [rax], al ; add bh, bh ; inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; retf -0x46b8
0x000000000011905a : add byte ptr [rax], al ; add bh, bh ; loope 0x118ff7 ; ret
0x00000000000dc9ff : add byte ptr [rax], al ; add bh, bh ; shr cl, 1 ; ret 0xfff8
0x00000000000a0e4d : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000084e87 : add byte ptr [rax], al ; add bh, dh ; ret 0
0x00000000000c1efa : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000af31f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000011c1bb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000034d79 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000833ba : add byte ptr [rax], al ; add bl, al ; ret
0x000000000011b90c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000da58a : add byte ptr [rax], al ; add bl, ch ; out -0x77, eax ; retf -0x35cf
0x0000000000066c5e : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000cadd7 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000619e6 : add byte ptr [rax], al ; add bl, ch ; ret 0xbd8b
0x00000000001198b0 : add byte ptr [rax], al ; add bl, ch ; retf -0x74b8
0x00000000000337ed : add byte ptr [rax], al ; add bl, dh ; addps xmm0, xmm0 ; ret
0x0000000000099e3d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x0000000000099e4d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002b185 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000e7a1d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x00000000000e6813 : add byte ptr [rax], al ; add byte ptr [rax + 0x10f], bh ; syscall
0x00000000000f02b8 : add byte ptr [rax], al ; add byte ptr [rax + 0x121], bh ; syscall
0x0000000000048380 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf -0x3eb8
0x00000000001559ab : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf -0x76b8
0x00000000000b2b6d : add byte ptr [rax], al ; add byte ptr [rax + 0x24], bh ; syscall
0x00000000000bf83d : add byte ptr [rax], al ; add byte ptr [rax + 0x25], bh ; syscall
0x00000000000c066d : add byte ptr [rax], al ; add byte ptr [rax + 0x27], bh ; syscall
0x00000000000544c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b41c3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000dac58 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000d140d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x44c7
0x000000000004bef2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0xf48
0x00000000001002e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xf9fc
0x00000000000a90c7 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002b1e4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x5476
0x000000000010dff9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000014e32e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf -0x1e8b
0x00000000000c0ec4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x000000000012bfd4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000000ff0ed : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x00000000001353c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000010029d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000000ad04d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x00000000000bfd5d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x00000000000bf56d : add byte ptr [rax], al ; add byte ptr [rax + 0x3f], bh ; syscall
0x00000000001798db : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000002be7b : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x00000000000e2e1d : add byte ptr [rax], al ; add byte ptr [rax + 0x50], bh ; syscall
0x00000000000e3d9d : add byte ptr [rax], al ; add byte ptr [rax + 0x56], bh ; syscall
0x00000000000e20ed : add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000b03dd : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; syscall
0x00000000000d0c62 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000076d56 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x76dd4 ; syscall
0x000000000007093d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000b69a8 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000c068d : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000000c06ad : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000c069d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000c06bd : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000c067d : add byte ptr [rax], al ; add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000c06cd : add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x000000000009a38d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c08fd : add byte ptr [rax], al ; add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000c0da8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000034532 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000003457c : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x00000000000d8f0d : add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x0000000000154fd0 : add byte ptr [rax], al ; add byte ptr [rax + 0x9480000], al ; ret 0xbee9
0x0000000000157a00 : add byte ptr [rax], al ; add byte ptr [rax + 0x9480000], al ; ret 0xc1e9
0x00000000000e826d : add byte ptr [rax], al ; add byte ptr [rax + 0xa3], bh ; syscall
0x00000000000b04bd : add byte ptr [rax], al ; add byte ptr [rax + 0xa4], bh ; syscall
0x00000000000f012d : add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000e7fed : add byte ptr [rax], al ; add byte ptr [rax + 0xaa], bh ; syscall
0x00000000000e808d : add byte ptr [rax], al ; add byte ptr [rax + 0xab], bh ; syscall
0x00000000000eb1fd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x00000000000cb0fa : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; jmp 0xcb0d0
0x00000000000c9e4d : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; pop rbx ; ret
0x00000000000fcc9f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000c14cc : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x00000000000341da : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000000e8846 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000001251a2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000f8869 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000027adb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8545
0x0000000000025118 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e4b6c : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000087098 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000e4aea : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000002542b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x00000000000267dd : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x00000000000bf5bb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000357e1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc748
0x00000000000c0e6d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000e50ba : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000045303 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000f2506 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x00000000000aec70 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000149d07 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000023f8a : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003955d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000149cfe : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x000000000013298b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf -0x7eb8
0x000000000011559d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000c1044 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x000000000019d35d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x000000000019db5d : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 1
0x000000000018d2fd : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; ret 0
0x000000000019d40d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000019d4ad : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret
0x000000000018dbad : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0
0x000000000018dc9d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf
0x000000000019db9d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; retf 1
0x000000000019d31d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018db1d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000018dc55 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000018dc0d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf
0x000000000018db05 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000018db4d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000018d415 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x000000000018dbf5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf
0x00000000000aeff3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000191959 : add byte ptr [rax], al ; add byte ptr [rax + rcx - 0x23efffff], ah ; jmp qword ptr [rcx]
0x00000000001948f1 : add byte ptr [rax], al ; add byte ptr [rax + rdi], bh ; add dword ptr [rax], eax ; clc ; ret 0xfff4
0x00000000000e510b : add byte ptr [rax], al ; add byte ptr [rax + rdx*2 - 0x18], dh ; retf
0x00000000001920d9 : add byte ptr [rax], al ; add byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; loopne 0x1920e7 ; call qword ptr [rax]
0x0000000000190169 : add byte ptr [rax], al ; add byte ptr [rax + rsi*8 + 0x1820000], dh ; jmp qword ptr [rax]
0x000000000017c442 : add byte ptr [rax], al ; add byte ptr [rax - 0x11], al ; call qword ptr [rax]
0x000000000006a71d : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x2e66
0x000000000017b32a : add byte ptr [rax], al ; add byte ptr [rax - 0x16], ah ; call rax
0x00000000000e75a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000071c0b : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000afe43 : add byte ptr [rax], al ; add byte ptr [rax - 0x3db2f0b8], al ; pop rbx ; ret
0x0000000000033618 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000020819 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000033fc3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000f8e38 : add byte ptr [rax], al ; add byte ptr [rax - 0x71f0ffc8], al ; ret
0x000000000010e2fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000af03d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000af04d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000af02d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007b49e : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; adc byte ptr [rax + 0x39], cl ; retf -0x78f1
0x000000000007c6c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000e8a1c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000cc3c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000103a19 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0x103a4d ; xor al, ch ; retf 0x242
0x00000000000d6339 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0xd636d ; jo 0xd634c ; ret 0xc083
0x00000000000ee3d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000000375f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf -0x3eb8
0x00000000000bc89d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007a9bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000011017b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000082a98 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x000000000004d5df : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000004cebd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000000f4d22 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000010bf8a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; stosd dword ptr [rdi], eax ; retf -0xe
0x00000000000fffd3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xf212
0x00000000000694d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfb7d
0x0000000000074fea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; stosd dword ptr [rdi], eax ; ret 0xfffa
0x0000000000082d59 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000011585a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000003adcb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f22f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000805ea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000049967 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000004ba0e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000b283d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x5e9
0x00000000000da05d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000c1441 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006d126 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000060f00 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xa5e8
0x00000000000ee033 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000e3b93 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000008371d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd148
0x00000000000a305a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000a550c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe929
0x00000000000856a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000003a7b0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf929
0x000000000003b1cf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000014a40a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x63b
0x0000000000143b7e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x6f9a
0x000000000009e54d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x72b8
0x000000000003b106 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x00000000000498fa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000001459d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000157eed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 9], cl ; ret
0x0000000000040ddb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000000bfd1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000000e18de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x0000000000156b9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret 0x375
0x0000000000067953 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000006341b : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000637d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x1f
0x0000000000055db2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xb
0x000000000011e801 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x0000000000038f64 : add byte ptr [rax], al ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; ret 0x8348
0x000000000004097c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33d5197
0x000000000003336d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; retf
0x00000000000e24cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x000000000003098d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007e07d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000009d37d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e928d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000001231fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000002fcf2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000021ec3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d0c55 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000f1fa8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000f7f5f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000145773 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010b6ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x0000000000032ac7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000bfec8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000006024d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x0000000000066dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe08
0x00000000001472f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014579d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000489c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000155b9b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x41ff
0x0000000000128935 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x000000000008c44d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002943e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000f74d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000a77bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000132984 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000007fa8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x870
0x00000000000d60ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x000000000006ad63 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; jmp 0x6ad39
0x00000000000c0136 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; leave ; ret
0x000000000003260b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003422b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000016f77e : add byte ptr [rax], al ; add byte ptr [rax - 6], bl ; jmp rax
0x000000000001e19d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x11
0x000000000001f2f5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x3a
0x0000000000186fbd : add byte ptr [rax], al ; add byte ptr [rax], ah ; sub dh, ch ; jmp qword ptr [rcx]
0x000000000019d4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret
0x000000000018dbac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0
0x000000000018dc9c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x000000000019db9c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; retf 1
0x000000000019d31c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000018db1c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000018dc54 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000018dc0c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x000000000018db04 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000018db4c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; retf 0
0x000000000018d414 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x000000000018dbf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf
0x00000000001a741c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 6 ; add byte ptr [rax], al ; ret
0x000000000016712b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x000000000001f36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf 0x3a
0x00000000001a6638 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000007015b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000001f38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x00000000000a0e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000099e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000007366b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000d140b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x44c7
0x00000000000ff0eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2f77
0x00000000000ad04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x777
0x000000000007093b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000af03b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000af04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000af02b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007a9bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000805e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000da05b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f94ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000060efe : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xa5e8
0x000000000008371b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd148
0x000000000009e54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x72b8
0x000000000003098b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007e07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000009d37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e928b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000001231fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000001054db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010b6ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x00000000001126cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007fa8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x870
0x000000000001e19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x11
0x000000000001f2f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x3a
0x0000000000167129 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret
0x000000000001f369 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf 0x3a
0x00000000000d912d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000001e199 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x11
0x000000000001f2f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x3a
0x000000000000a410 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000b0a0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x00000000001a6f94 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001796b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x00000000001a67c0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x00000000001a77ec : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x00000000001a58b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x000000000001b19a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rcx]
0x000000000001d792 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rax]
0x000000000000b32a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rdx]
0x000000000017967a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000001a2e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001e82a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x170e
0x000000000000586a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000000697a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x25
0x000000000000841a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000000f362 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2c
0x000000000000b0a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x00000000001632a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000009db2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x36
0x000000000000cd52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000101a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x000000000000e4c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000fdb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x000000000000b8fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x000000000000736a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55
0x00000000001a6f96 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001a4bce : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x0000000000007aea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000006152 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000006782 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000001ca12 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1718
0x0000000000011462 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b
0x0000000000005e82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d
0x0000000000162df2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000000062a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000000b252 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x36
0x0000000000006a3a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x39
0x000000000001030a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45
0x00000000000082e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x48
0x00000000001796ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x000000000000e732 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4c
0x00000000000098d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x00000000000060da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xf
0x000000000016245a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000bb6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x00000000001a77ee : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x00000000001a58b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x0000000000154c16 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax - 0x7b], cl ; retf -0x7bf1
0x00000000001565a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rcx - 0x7b], cl ; retf -0x7bf1
0x000000000009cddb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000156e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rcx - 0x7b], cl ; ret 0x1474
0x00000000001a6b97 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 3], cl ; add byte ptr [rax], al ; ret
0x0000000000037309 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000eb53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000d817b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000009d5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000b08fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000f071b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x0000000000116b2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x334c
0x00000000000c7f8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003c4fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000012923b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008b0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007816b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; retf
0x000000000017967b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000c95cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x337e
0x0000000000038f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0xb8
0x00000000001a5683 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + 5], ch ; add byte ptr [rax], al ; retf 3
0x000000000007850b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000000aeedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf -0x7ab8
0x00000000001a741b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + rax], dl ; add byte ptr [rax], al ; ret
0x000000000014ed5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf -0x367b
0x00000000000eb17b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000000fef6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000018864 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add al, byte ptr [rax] ; ret 0x5b
0x00000000000af53c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000e8d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000337ec : add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000019d35c : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x0000000000075e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000dbadf : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x127cf6
0x000000000007935c : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x75e36
0x00000000001266ec : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xe29f6
0x0000000000159cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000001b19c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rcx]
0x000000000012813c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000164ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000163f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000000e68e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000f1977 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000ca38d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000e8845 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x0000000000087097 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000018d2fc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000016e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000001a76f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; ret
0x000000000001d794 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rax]
0x000000000000b32c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rdx]
0x000000000004b828 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000009f5a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x9f59f ; ret
0x0000000000152bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000152bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000152bec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000152bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000152c0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000152b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000152b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000152b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000152b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000152b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000152b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000152bac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000152bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000af02c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000af04c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000af03c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000152b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000013e30c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009a38c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000098d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000099d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000099a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000656a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rax], edx ; jmp 0x62112
0x000000000013e34c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000013e36c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000013e33c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e10ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000099d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000099d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000099d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000e7a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000b2b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x24 ; syscall
0x00000000000bf83c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x25 ; syscall
0x00000000000c066c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x27 ; syscall
0x00000000000bfd5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000bf56c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000000e2e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x50 ; syscall
0x00000000000e3d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000e20ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000b03dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000c068c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000c06ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000c069c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000c06bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000c067c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000c06cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000c08fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000d8f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000e826c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000b04bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000000f012c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000e7fec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000e808c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x00000000000eb1fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000000c0e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00000000000795bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000045302 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000011559c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000120d4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000013396c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000013e37c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000121108 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000099dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x0000000000099dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000114f8a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ee3d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000bb5fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007a9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007a9bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002b41f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000073cac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call 0x207b1
0x00000000000bfd1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000013e31c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000099d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000099e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x0000000000099e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007850c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000133abc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000011a498 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000120f09 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000afe42 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x000000000016f77d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; cli ; jmp rax
0x0000000000086a32 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000f2658 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003730a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000e4ffd : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029e54 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000017967c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001798da : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000001a30 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001e82c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x170e
0x0000000000163dac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000164544 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000000586c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000000697c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x25
0x000000000000841c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000000f364 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2c
0x000000000000b0a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x00000000001632a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000009db4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x36
0x000000000000cd54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000101a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x000000000000e4c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000fdb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4b
0x000000000000b8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x000000000000736c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x55
0x00000000001a6f98 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001a4bd0 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x0000000000007aec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000004de4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000004cc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000006784 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000001ca14 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1718
0x0000000000011464 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b
0x0000000000005e84 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d
0x0000000000163de4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000164584 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x0000000000162df4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000000062a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000000b254 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x36
0x0000000000006a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x39
0x00000000001671e5 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x000000000001030c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x45
0x00000000000082e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x48
0x00000000001796bc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x000000000000e734 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4c
0x00000000000098d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x00000000000060dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xf
0x000000000001097c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000bb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x00000000001a77f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x00000000001a58b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000001499ac : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000009cddc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000037212 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000762cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014d8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000001a608c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ecx, dword ptr [rax] ; add byte ptr [rax], al ; retf 6
0x00000000000210dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x00000000000aed4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000154c18 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax - 0x7b], cl ; retf -0x7bf1
0x00000000001565a5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rcx - 0x7b], cl ; retf -0x7bf1
0x0000000000154bc2 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf -0x17d
0x0000000000154dec : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf -0x27d
0x000000000009cddd : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000156e4d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rcx - 0x7b], cl ; ret 0x1474
0x00000000000293ef : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000b6143 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000853f1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000005341c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000083127 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000a58dd : add byte ptr [rax], al ; add byte ptr [rbp + 0x6348ff50], cl ; retf -0x74b8
0x00000000000cabca : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ret 0x148b
0x0000000000191e69 : add byte ptr [rax], al ; add byte ptr [rbp + rcx - 0x156fffff], dh ; jmp qword ptr [rcx]
0x00000000000f64c0 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; jmp rax
0x00000000000767d7 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x35], cl ; jmp qword ptr [rax]
0x000000000004aab5 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x1269
0x00000000000d0854 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x43], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000114025 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x0000000000114567 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x0000000000190641 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8 + 0x25580000], cl ; jmp qword ptr [rcx]
0x0000000000190629 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8], dh ; add byte ptr [rax + 0x25], al ; jmp qword ptr [rcx]
0x000000000009f5a3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x000000000009e1a9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x0000000000087a3d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0x8945
0x0000000000045506 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0xc129
0x0000000000145728 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cb481 : add byte ptr [rax], al ; add byte ptr [rbp - 0x9d78b37], al ; ret
0x0000000000069295 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000009df69 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000b0091 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3934245c], cl ; ret
0x00000000000c0866 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000010de62 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8589
0x000000000010de12 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8589
0x000000000010de3a : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8589
0x000000000013324d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000002980d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000211c4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023266 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000751e4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf -0x38b8
0x000000000003746d : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001a6b99 : add byte ptr [rax], al ; add byte ptr [rbx + 3], cl ; add byte ptr [rax], al ; ret
0x00000000001a1419 : add byte ptr [rax], al ; add byte ptr [rbx + rax + 2], ah ; add byte ptr [rax], dh ; ret 0xfff7
0x0000000000151748 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000000bb019 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x00000000000589a0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x52343], al ; call qword ptr [rax]
0x000000000003730b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000053217 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000008e5b2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000c932d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000eb53d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000049e3c : add byte ptr [rax], al ; add byte ptr [rbx - 0x8bf43], al ; call qword ptr [rax]
0x0000000000055532 : add byte ptr [rax], al ; add byte ptr [rbx - 0x90b43], al ; call qword ptr [rax]
0x000000000007db2c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000156e64 : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret 0x8149
0x0000000000155f70 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000009909f : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000013e36d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000010ae72 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000eb05f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000076e5b : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000fe56e : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000013e34d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x0000000000099d9d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000732b0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000d817d : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000b7998 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000054e0d : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000009e1c8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000002f596 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; retf
0x00000000000f76c2 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 1] ; retf
0x000000000009d5bd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000191261 : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0x46a7ffff], ch ; call rsi
0x0000000000191a59 : add byte ptr [rax], al ; add byte ptr [rcx + rcx - 0x221fffff], ah ; jmp qword ptr [rcx]
0x00000000000f7d1d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000067f08 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000010e8b5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1b8
0x000000000010e016 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000010e8fa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x1ba
0x00000000000cf906 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x448b
0x0000000000073cad : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x207b0
0x00000000000faddc : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xf7848
0x000000000002df2f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000000ee03c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, r12d ; syscall
0x000000000006f1e4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007fe02 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000014dbfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000000fadbe : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0xf7848
0x0000000000023bd7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x205f8
0x00000000001899d9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4], ah ; add byte ptr [rax], al ; ret 0xffee
0x0000000000158bfa : add byte ptr [rax], al ; add byte ptr [rcx + rdi*2 + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000190241 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*8 + 0x4080000], cl ; call rsi
0x000000000017c582 : add byte ptr [rax], al ; add byte ptr [rcx - 0x11], bl ; call rax
0x0000000000191df1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x1587ffff], bh ; jmp qword ptr [rcx]
0x00000000000e10ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000041949 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000127584 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [rax - 0x77], r9b ; ret 0xe281
0x00000000000435dc : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000cb917 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000010ba5a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x000000000003ad77 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x000000000003d688 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000a78a8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x9066
0x00000000000843d1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000000853ca : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf -0x46bf
0x00000000000f071d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000f036d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x0000000000116b2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x334c
0x0000000000155284 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000157ccc : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx - 0x77], 1 ; ret 0x2941
0x00000000000d621d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4901
0x0000000000020aaa : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x31ff
0x000000000003e8ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000008545f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000087e75 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x000000000003c4fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000012923d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008b0ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000ec3fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x00000000000818c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x00000000001110f0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000007816d : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; retf
0x00000000000253ad : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x4801
0x000000000017967d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008e780 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008e7a6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000da037 : add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xda07f ; ret
0x00000000000aac35 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000c95cd : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x337e
0x00000000000842e4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000b5910 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000b9088 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000ad152 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8548
0x00000000000b6e35 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000001495fb : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00000000000b6d9e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b8fa1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000b6f84 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000b8ff8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000e780f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000038f5d : add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0xb8
0x00000000000c39fb : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(0) ; jmp 0xc39d5
0x0000000000036d7a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008e0ca : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000000a1485 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000126784 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x62 ; ret 0xfffb
0x00000000000fd2be : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax + 0x63], 0xfa ; syscall
0x000000000009f262 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001a5685 : add byte ptr [rax], al ; add byte ptr [rdi + 5], ch ; add byte ptr [rax], al ; retf 3
0x0000000000154992 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000111126 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x0000000000191ff1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx], bh ; add dword ptr [rax], eax ; fdiv st(2) ; jmp rcx
0x00000000001907d9 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], ah ; add byte ptr [rax], al ; nop ; pop rax ; call qword ptr [rax]
0x00000000001907c1 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rax]
0x0000000000190de1 : add byte ptr [rax], al ; add byte ptr [rdi*8 - 0x56280000], ch ; jmp qword ptr [rdi]
0x00000000000fd485 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x000000000009dec5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000020c18 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xff31
0x0000000000133a4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000133abd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000026337 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c45ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007850d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008e10d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000ba1df : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000b84be : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x0000000000029fce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x000000000007e645 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4489
0x00000000000d1054 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x813b
0x00000000000411dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000127331 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000000e68e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000da899 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x9be9
0x00000000000a85ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x000000000003af71 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x00000000000b6447 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x0000000000156bb0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x60e9
0x0000000000149545 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000000ceb5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x0000000000068b99 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x000000000018fae1 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8], ch ; add byte ptr [rax], al ; cwde ; ret
0x0000000000191b61 : add byte ptr [rax], al ; add byte ptr [rdx + rcx - 0x1e07ffff], ch ; jmp qword ptr [rcx]
0x000000000014f612 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e50a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e032 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000aeedd : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf -0x7ab8
0x000000000004c875 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; jmp rax
0x00000000000e1b75 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x0000000000191771 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0x2f67ffff], bh ; call rsi
0x00000000001a741d : add byte ptr [rax], al ; add byte ptr [rsi + rax], dl ; add byte ptr [rax], al ; ret
0x00000000001a286e : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x0000000000191f71 : add byte ptr [rax], al ; add byte ptr [rsi + rcx - 0xf37ffff], bh ; jmp qword ptr [rdi]
0x0000000000190f09 : add byte ptr [rax], al ; add byte ptr [rsi + rdi*8], dl ; add byte ptr [rax - 0x55], dh ; call rdi
0x0000000000190739 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8 + 0x2c900000], al ; call rsp
0x0000000000191549 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0x368fffff], dl ; call rdi
0x00000000000e10c7 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000000d9fef : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 - 0xd], dh ; ret
0x000000000017c90a : add byte ptr [rax], al ; add ch, 0xef ; jmp qword ptr [rax]
0x000000000014ed5d : add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf -0x367b
0x000000000005d309 : add byte ptr [rax], al ; add cl, ch ; call rsp
0x0000000000064259 : add byte ptr [rax], al ; add cl, ch ; jmp rcx
0x000000000005117a : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000dfce1 : add byte ptr [rax], al ; add cl, ch ; ret 0xffed
0x00000000000f16c0 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000058df5 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000005fb3e : add byte ptr [rax], al ; add cl, ch ; retf -0x54
0x00000000000d587d : add byte ptr [rax], al ; add cl, ch ; retf -0xb
0x00000000000b8458 : add byte ptr [rax], al ; add cl, ch ; retf -2
0x0000000000112790 : add byte ptr [rax], al ; add cl, ch ; retf -3
0x0000000000028d2b : add byte ptr [rax], al ; add cl, ch ; retf -5
0x00000000000eeb91 : add byte ptr [rax], al ; add cl, ch ; retf -8
0x00000000000661c3 : add byte ptr [rax], al ; add cl, ch ; xchg eax, ebp ; ret 0xffff
0x00000000000ecf56 : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret 0xfff8
0x0000000000049d56 : add byte ptr [rax], al ; add dh, al ; test ebp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000055419 : add byte ptr [rax], al ; add dh, al ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000018fdfe : add byte ptr [rax], al ; add dh, ch ; sti ; jmp rsi
0x0000000000064652 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000243c6 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000eb17d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000000fef6d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000153e01 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000cc4bf : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x0000000000115441 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000000000094150 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000094159 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000da83b : add byte ptr [rax], al ; add dh, dh ; rol dword ptr [rax + 0xf], -0x7c ; retf 3
0x00000000000fa0f8 : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x0000000000018866 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add al, byte ptr [rax] ; ret 0x5b
0x00000000000da038 : add byte ptr [rax], al ; add dword ptr [rbp + 0x3b], esi ; ret
0x00000000000c8ca6 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x7fe9
0x0000000000193f02 : add byte ptr [rax], al ; add dword ptr cs:[rax], eax ; mov byte ptr [rdi - 0xc], cl ; call qword ptr [rbx]
0x000000000019561a : add byte ptr [rax], al ; add dword ptr fs:[r8], r8d ; and bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000019531a : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; loopne 0x195304 ; hlt ; jmp qword ptr [rcx]
0x00000000001a141a : add byte ptr [rax], al ; add eax, dword ptr fs:[rdx] ; add byte ptr [rax], dh ; ret 0xfff7
0x000000000011a68f : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x0000000000195c1a : add byte ptr [rax], al ; add qword ptr fs:[r8], rax ; ror byte ptr [rbx], 0xf5 ; jmp rcx
0x00000000000af53e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000008dee3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000004c3ee : add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x0000000000149d08 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x000000000004972d : add byte ptr [rax], al ; add rax, rdx ; jmp rax
0x0000000000119bf1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x00000000000bfbef : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000fd0d8 : add byte ptr [rax], al ; add rdi, 0x28 ; mov eax, r9d ; syscall
0x000000000011c031 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000011b791 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000119054 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x0000000000116075 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000115fb6 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000034719 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000340a1 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000764bf : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e1109 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000033e5c : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000212fb : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000078b4c : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003354c : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000007c42b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001588e3 : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000000000e22ba : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000034437 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00000000000416b1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008414a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000022067 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033156 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000337ee : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000019d35e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000001920da : add byte ptr [rax], al ; and al, 0x10 ; add dword ptr [rax], eax ; loopne 0x1920e6 ; call qword ptr [rax]
0x00000000001920da : add byte ptr [rax], al ; and al, 0x10 ; add dword ptr [rax], eax ; loopne 0x1920e7 ; call qword ptr [rax]
0x00000000001899da : add byte ptr [rax], al ; and al, 0x89 ; add byte ptr [rax], al ; ret 0xffee
0x000000000019d2da : add byte ptr [rax], al ; and al, 0xc2 ; add dword ptr [rax], eax ; rcr dh, 0xf6 ; jmp qword ptr [rdi]
0x00000000001907da : add byte ptr [rax], al ; and al, 0xf7 ; add byte ptr [rax], al ; nop ; pop rax ; call qword ptr [rax]
0x000000000018a4be : add byte ptr [rax], al ; and bh, 0xee ; call qword ptr [rdx]
0x0000000000186fbe : add byte ptr [rax], al ; and byte ptr [rax], ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000017b6d2 : add byte ptr [rax], al ; and byte ptr [rbx + rbp*8], ah ; jmp qword ptr [rax]
0x000000000017b5d2 : add byte ptr [rax], al ; and byte ptr [rbx + rbp*8], bl ; call rax
0x000000000017b7a2 : add byte ptr [rax], al ; and byte ptr [rbx - 0x15], dh ; call rax
0x000000000017c072 : add byte ptr [rax], al ; and byte ptr [rcx - 0x13], ah ; call rax
0x000000000018b13e : add byte ptr [rax], al ; and dl, ch ; cld ; jmp rsp
0x000000000018fcae : add byte ptr [rax], al ; and dl, ch ; int1 ; call qword ptr [rdx]
0x0000000000075e9e : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000002d18b : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000008e10e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000093b90 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000093874 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000018dc76 : add byte ptr [rax], al ; call 0x1118cc90
0x000000000018ee26 : add byte ptr [rax], al ; call 0x1118df4d
0x000000000018ee56 : add byte ptr [rax], al ; call 0x1118df7d
0x000000000018ee86 : add byte ptr [rax], al ; call 0x1118dfad
0x000000000018eeb6 : add byte ptr [rax], al ; call 0x1118dfdd
0x000000000018eee6 : add byte ptr [rax], al ; call 0x1118e00d
0x0000000000182be6 : add byte ptr [rax], al ; call 0x12181697
0x00000000000dbae1 : add byte ptr [rax], al ; call 0x127cf4
0x00000000000fccfe : add byte ptr [rax], al ; call 0x128fa4
0x000000000018af46 : add byte ptr [rax], al ; call 0x13189e51
0x0000000000184996 : add byte ptr [rax], al ; call 0x171834d4
0x000000000018ea76 : add byte ptr [rax], al ; call 0x1718db90
0x00000000000c3c90 : add byte ptr [rax], al ; call 0x20714
0x00000000000f4566 : add byte ptr [rax], al ; call 0x207a4
0x000000000018bd46 : add byte ptr [rax], al ; call 0x2818acac
0x00000000000e0a91 : add byte ptr [rax], al ; call 0x2cce4
0x0000000000120ca7 : add byte ptr [rax], al ; call 0x2d6b4
0x000000000007935e : add byte ptr [rax], al ; call 0x75e34
0x000000000006e360 : add byte ptr [rax], al ; call 0x7ae54
0x000000000007f39a : add byte ptr [rax], al ; call 0x7b624
0x00000000000e0562 : add byte ptr [rax], al ; call 0xdcfc4
0x00000000000e5393 : add byte ptr [rax], al ; call 0xe1e34
0x00000000001266ee : add byte ptr [rax], al ; call 0xe29f4
0x0000000000106942 : add byte ptr [rax], al ; call 0xe2c24
0x000000000011495c : add byte ptr [rax], al ; call 0xf1384
0x00000000000677e7 : add byte ptr [rax], al ; call 0xf3aa4
0x00000000000409b9 : add byte ptr [rax], al ; call 0xfcc64
0x0000000000040a3a : add byte ptr [rax], al ; call 0xfcc94
0x000000000018d176 : add byte ptr [rax], al ; call 0xffffffffcc18c119
0x00000000001810d6 : add byte ptr [rax], al ; call 0xffffffffe117fad5
0x0000000000187376 : add byte ptr [rax], al ; call 0xffffffffe41861c6
0x000000000018b706 : add byte ptr [rax], al ; call 0xffffffffe518a64e
0x000000000018e926 : add byte ptr [rax], al ; call 0xffffffffe718da3d
0x000000000017d4ab : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000159cde : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000001b19e : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000021090 : add byte ptr [rax], al ; call rax
0x000000000012813e : add byte ptr [rax], al ; call rcx
0x0000000000164dde : add byte ptr [rax], al ; call rdi
0x0000000000036ad4 : add byte ptr [rax], al ; call rdx
0x0000000000163f8e : add byte ptr [rax], al ; call rsp
0x000000000017f58b : add byte ptr [rax], al ; clc ; call rax
0x000000000018fed6 : add byte ptr [rax], al ; clc ; cli ; int1 ; jmp rcx
0x00000000001823a6 : add byte ptr [rax], al ; clc ; jl 0x18239a ; jmp qword ptr [rdi]
0x0000000000189ab6 : add byte ptr [rax], al ; clc ; ret
0x0000000000186fba : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ah ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001976b2 : add byte ptr [rax], al ; cld ; add dword ptr gs:[rax], eax ; test al, 0x58 ; cmc ; jmp rax
0x000000000018eeb2 : add byte ptr [rax], al ; cld ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x0000000000197ab2 : add byte ptr [rax], al ; cld ; imul eax, dword ptr [rcx], 0xf566b800 ; jmp qword ptr [rcx]
0x00000000001982b2 : add byte ptr [rax], al ; cld ; jno 0x1982c1 ; add al, bl ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000189ab2 : add byte ptr [rax], al ; cld ; mov dword ptr [rax], eax ; add al, bh ; ret
0x0000000000199fb2 : add byte ptr [rax], al ; cld ; mov es, word ptr [rcx] ; add byte ptr [rax - 0xe], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000191eb2 : add byte ptr [rax], al ; cld ; or eax, 0xead80001 ; jmp qword ptr [rcx]
0x0000000000197fb2 : add byte ptr [rax], al ; cld ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000019d4b2 : add byte ptr [rax], al ; cld ; ret
0x000000000018dbb2 : add byte ptr [rax], al ; cld ; retf 0
0x000000000018c0b2 : add byte ptr [rax], al ; cld ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x18c12a ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001844ce : add byte ptr [rax], al ; cli ; call qword ptr [rdi]
0x000000000018020b : add byte ptr [rax], al ; cmc ; stc ; call rax
0x00000000000e68e9 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000000f1979 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000a85ed : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000ca38f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000e8847 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x0000000000083f92 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000dbf15 : add byte ptr [rax], al ; cmove rdi, rbx ; call r14
0x00000000000fd2d9 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000009f28b : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000f7b8f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000019db5e : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 1
0x000000000018d2fe : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000193bf2 : add byte ptr [rax], al ; cmp al, 0x2b ; add dword ptr [rax], eax ; test al, 0x3b ; hlt ; jmp qword ptr [rsi]
0x00000000001a3ff2 : add byte ptr [rax], al ; cmp al, 0x2f ; add al, byte ptr [rax] ; sub byte ptr [rdx], cl ; sti ; call rax
0x00000000001940f2 : add byte ptr [rax], al ; cmp al, 0x30 ; add dword ptr [rax], eax ; test al, 0x50 ; hlt ; call qword ptr [rdx]
0x00000000001948f2 : add byte ptr [rax], al ; cmp al, 0x38 ; add dword ptr [rax], eax ; clc ; ret 0xfff4
0x0000000000196ff2 : add byte ptr [rax], al ; cmp al, 0x5f ; add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rcx]
0x000000000019a4f2 : add byte ptr [rax], al ; cmp al, 0x94 ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000191df2 : add byte ptr [rax], al ; cmp al, 0xd ; add dword ptr [rax], eax ; js 0x191dec ; jmp qword ptr [rcx]
0x0000000000191df2 : add byte ptr [rax], al ; cmp al, 0xd ; add dword ptr [rax], eax ; js 0x191ded ; jmp qword ptr [rcx]
0x0000000000191ff2 : add byte ptr [rax], al ; cmp al, 0xf ; add dword ptr [rax], eax ; fdiv st(2) ; jmp rcx
0x000000000018dece : add byte ptr [rax], al ; cmp bl, 0xfb ; jmp qword ptr [rax]
0x0000000000142286 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000184666 : add byte ptr [rax], al ; cmp byte ptr [rbx + rbp*8], ch ; jmp qword ptr [rsi]
0x0000000000072537 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x72548 ; pop rbx ; ret
0x000000000009fc17 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0x9fc31 ; mov eax, edi ; ret
0x00000000000794fe : add byte ptr [rax], al ; cmp qword ptr [rdi + 0x38], 0 ; je 0x79519 ; ret
0x0000000000070305 : add byte ptr [rax], al ; cmp qword ptr [rsi + 0x30], 0 ; je 0x70319 ; ret
0x00000000000804e7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x804b8 ; ret
0x00000000000c0ee4 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xc0f17 ; ret
0x000000000018b702 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; call 0xffffffffe518a652
0x00000000001907c6 : add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rax]
0x000000000018fae6 : add byte ptr [rax], al ; cwde ; ret
0x0000000000186546 : add byte ptr [rax], al ; cwde ; retf
0x0000000000000c32 : add byte ptr [rax], al ; enter 0, 0 ; retf
0x0000000000164f8e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000001620e6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000001618e6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x0000000000161ce6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x000000000016518e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x000000000016538e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x000000000016558e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x000000000016578e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x000000000016598e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000000016e6 : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x0000000000165d8e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x0000000000165f8e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x000000000016618e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000001a1892 : add byte ptr [rax], al ; fadd qword ptr [rdi] ; add al, byte ptr [rax] ; cwde ; retf -9
0x00000000001a54c2 : add byte ptr [rax], al ; fadd qword ptr [rdi] ; add byte ptr [rax], al ; ret 3
0x0000000000199392 : add byte ptr [rax], al ; fadd qword ptr [rdx - 0x4017ffff] ; cmc ; call rdx
0x0000000000191392 : add byte ptr [rax], al ; fadd qword ptr [rdx] ; add dword ptr [rax], eax ; test al, 0xc1 ; jmp rbx
0x000000000018d826 : add byte ptr [rax], al ; fadd st(4) ; cld ; call qword ptr [rax]
0x000000000018eb86 : add byte ptr [rax], al ; fcom dword ptr [rcx] ; int1 ; call qword ptr [rsi]
0x000000000019a492 : add byte ptr [rax], al ; fcom qword ptr [rbx - 0x15e7ffff] ; clc ; jmp qword ptr [rsi]
0x0000000000196892 : add byte ptr [rax], al ; fcom qword ptr [rdi + 1] ; add byte ptr [rax + 0x24], bl ; cmc ; jmp qword ptr [rsi]
0x000000000018ae92 : add byte ptr [rax], al ; fcomp qword ptr [rbp - 0x980000] ; out dx, al ; call qword ptr [rsi]
0x0000000000184592 : add byte ptr [rax], al ; fdiv qword ptr [rax + rax] ; add byte ptr [rax], bh ; sub ebp, ebx ; call qword ptr [rcx]
0x0000000000198392 : add byte ptr [rax], al ; fdiv qword ptr [rdx + 1] ; add al, bl ; mov dh, ch ; jmp qword ptr [rcx]
0x0000000000184992 : add byte ptr [rax], al ; fdivr qword ptr [rax] ; add byte ptr [rax], al ; call 0x171834d8
0x000000000018cc92 : add byte ptr [rax], al ; fdivr qword ptr [rbx - 0x7c080000] ; out dx, eax ; call qword ptr [rcx]
0x0000000000194b92 : add byte ptr [rax], al ; fdivr qword ptr [rdx] ; add dword ptr [rax], eax ; sub byte ptr [rsi], bh ; stc ; call qword ptr [rax]
0x000000000018eefa : add byte ptr [rax], al ; fiadd word ptr [rax] ; add al, ah ; sbb esi, ecx ; call qword ptr [rdx]
0x00000000001a777a : add byte ptr [rax], al ; fld dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x0000000000187526 : add byte ptr [rax], al ; fmul dword ptr [rax - 0x12] ; call qword ptr [rax]
0x0000000000187a9a : add byte ptr [rax], al ; fmul qword ptr [rbx] ; add byte ptr [rax], al ; push rax ; pop rsp ; out dx, al ; jmp qword ptr [rbx]
0x000000000018dd92 : add byte ptr [rax], al ; fmul st(4), st(0) ; add byte ptr [rax], al ; pop rax ; xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000018b592 : add byte ptr [rax], al ; fsub qword ptr [rax + rax - 0x10ca7800] ; call qword ptr [rsi]
0x000000000018fc92 : add byte ptr [rax], al ; fsub st(3), st(0) ; add byte ptr [rax], al ; sub dl, ch ; int1 ; call qword ptr [rax]
0x000000000019f692 : add byte ptr [rax], al ; fsubr st(5), st(0) ; add dword ptr [rax], eax ; call 0x1419edfd
0x00000000001956aa : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; adc al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001936aa : add byte ptr [rax], al ; hlt ; and eax, 0xfc300001 ; jmp rdx
0x000000000017daf3 : add byte ptr [rax], al ; hlt ; call qword ptr [rax]
0x000000000017dae3 : add byte ptr [rax], al ; hlt ; call rax
0x00000000001a0daa : add byte ptr [rax], al ; hlt ; cld ; add dword ptr [rax], eax ; nop ; test al, 0xf7 ; jmp qword ptr [rax]
0x000000000017e0cb : add byte ptr [rax], al ; hlt ; cmc ; call qword ptr [rax]
0x000000000017da7b : add byte ptr [rax], al ; hlt ; jmp qword ptr [rax]
0x00000000001a1caa : add byte ptr [rax], al ; hlt ; or eax, dword ptr [rdx] ; add al, al ; sal edi, 1 ; call qword ptr [rdx]
0x0000000000196faa : add byte ptr [rax], al ; hlt ; pop rsi ; add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000018ee9a : add byte ptr [rax], al ; in al, -0x23 ; add byte ptr [rax], al ; loopne 0x18eec6 ; int1 ; call qword ptr [rdx]
0x000000000019099a : add byte ptr [rax], al ; in al, -8 ; add byte ptr [rax], al ; mov al, 0xa0 ; jmp rsp
0x000000000018229a : add byte ptr [rax], al ; in al, 0x11 ; add byte ptr [rax], al ; jnp 0x182296 ; call qword ptr [rdx]
0x000000000019709a : add byte ptr [rax], al ; in al, 0x5f ; add dword ptr [rax], eax ; jo 0x1970ef ; cmc ; jmp qword ptr [rdx]
0x0000000000191e9a : add byte ptr [rax], al ; in al, 0xd ; add dword ptr [rax], eax ; shr dl, 0xf2 ; jmp qword ptr [rcx]
0x00000000001a76f6 : add byte ptr [rax], al ; in al, 7 ; add byte ptr [rax], al ; ret
0x00000000001823a2 : add byte ptr [rax], al ; in al, dx ; adc al, byte ptr [rax] ; add al, bh ; jl 0x18239e ; jmp qword ptr [rdi]
0x00000000001954a2 : add byte ptr [rax], al ; in al, dx ; add dword ptr [r8], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000194ea2 : add byte ptr [rax], al ; in al, dx ; cmp eax, 0xd1480001 ; hlt ; jmp qword ptr [rcx]
0x000000000019b8a2 : add byte ptr [rax], al ; in al, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; call qword ptr [rcx]
0x000000000018d3a2 : add byte ptr [rax], al ; in al, dx ; ret 0
0x000000000018dca2 : add byte ptr [rax], al ; in al, dx ; retf
0x000000000019dba2 : add byte ptr [rax], al ; in al, dx ; retf 1
0x000000000018fdcf : add byte ptr [rax], al ; in al, dx ; sti ; jmp qword ptr [rbx]
0x000000000019a3a2 : add byte ptr [rax], al ; in al, dx ; xchg eax, edx ; add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000018fdfa : add byte ptr [rax], al ; in eax, dx ; add byte ptr [rax], al ; add dh, ch ; sti ; jmp rsi
0x000000000017ddbb : add byte ptr [rax], al ; in eax, dx ; hlt ; call rax
0x0000000000187522 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr fs:[rax], al ; fmul dword ptr [rax - 0x12] ; call qword ptr [rax]
0x0000000000195522 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rax], r8d ; or dl, ah ; hlt ; call qword ptr [rax]
0x0000000000197622 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr gs:[rax], eax ; js 0x19768a ; cmc ; call qword ptr [rax]
0x000000000018e922 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fadd dword ptr [rax] ; add al, ch ; or esi, ecx ; jmp rsi
0x000000000018ee22 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x0000000000198622 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jne 0x198631 ; add byte ptr [rax - 0x72], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000198b22 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jp 0x198b31 ; add al, bh ; sahf ; cmc ; call qword ptr [rdx]
0x000000000018c822 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov bh, 0 ; add byte ptr [rax + 0x73], bh ; out dx, eax ; call qword ptr [rdx]
0x000000000018d822 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov dword ptr [rax], 0xfcc4d800 ; call qword ptr [rax]
0x0000000000196922 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rax ; add dword ptr [rax], eax ; call 0x27195e5b
0x000000000019d322 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 1
0x000000000019dc22 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf
0x000000000018db22 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x000000000018e122 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; rol byte ptr [rax], 1 ; add byte ptr [rax], cl ; mov ch, 0xfb ; call qword ptr [rdi]
0x0000000000190722 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test byte ptr [rax], 0 ; mov byte ptr [rdx + rsi*8], ch ; call qword ptr [rdx]
0x000000000019a722 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, esi ; add dword ptr [rax], eax ; sbb bh, ch ; sti ; jmp qword ptr [rsi]
0x000000000019a522 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, esp ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x00000000001901fa : add byte ptr [rax], al ; int1 ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x00000000001a4ef6 : add byte ptr [rax], al ; invd ; add byte ptr [rax], al ; retf
0x0000000000188416 : add byte ptr [rax], al ; ja 0x18840e ; call qword ptr [rsi]
0x00000000001983fa : add byte ptr [rax], al ; jae 0x198409 ; add byte ptr [rax - 0x75], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001982fa : add byte ptr [rax], al ; jb 0x198309 ; add byte ptr [rax], ah ; mov dh, ch ; jmp qword ptr [rcx]
0x00000000000e1b76 : add byte ptr [rax], al ; jbe 0xe1b85 ; ret
0x00000000001588b3 : add byte ptr [rax], al ; je 0x1588f8 ; add rsp, 0x38 ; ret
0x0000000000158bfb : add byte ptr [rax], al ; je 0x158c80 ; add rsp, 0x38 ; ret
0x000000000018fc2a : add byte ptr [rax], al ; je 0x18fc20 ; add byte ptr [rax], al ; push rax ; retf
0x000000000019402a : add byte ptr [rax], al ; je 0x194066 ; add dword ptr [rax], eax ; xor byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x000000000019662a : add byte ptr [rax], al ; je 0x19668c ; add dword ptr [rax], eax ; jo 0x19665c ; cmc ; jmp qword ptr [rcx]
0x000000000019802a : add byte ptr [rax], al ; je 0x1980a6 ; add dword ptr [rax], eax ; push rax ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000019a32a : add byte ptr [rax], al ; je 0x19a2c9 ; add dword ptr [rax], eax ; shl byte ptr [rbx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001a3b2a : add byte ptr [rax], al ; je 0x1a3b61 ; add al, byte ptr [rax] ; push rax ; cmp edi, eax ; call qword ptr [rdi]
0x000000000006e5f5 : add byte ptr [rax], al ; je 0x6e607 ; mov eax, esi ; pop rbx ; ret
0x000000000006e777 : add byte ptr [rax], al ; je 0x6e787 ; mov eax, esi ; pop rbx ; ret
0x000000000006f19b : add byte ptr [rax], al ; je 0x6f1b0 ; mov eax, r8d ; pop rbx ; ret
0x000000000006f33e : add byte ptr [rax], al ; je 0x6f357 ; mov eax, edx ; pop rbx ; ret
0x000000000006f4d5 : add byte ptr [rax], al ; je 0x6f4e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000073971 : add byte ptr [rax], al ; je 0x739a7 ; mov eax, edx ; pop rbx ; ret
0x0000000000073db8 : add byte ptr [rax], al ; je 0x73dc7 ; mov eax, edx ; pop rbx ; ret
0x0000000000073f07 : add byte ptr [rax], al ; je 0x73f2f ; mov eax, edx ; pop rbx ; ret
0x0000000000074076 : add byte ptr [rax], al ; je 0x740a7 ; mov eax, edx ; pop rbx ; ret
0x00000000000743b1 : add byte ptr [rax], al ; je 0x743e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000074d98 : add byte ptr [rax], al ; je 0x74da7 ; mov eax, edx ; pop rbx ; ret
0x0000000000075e56 : add byte ptr [rax], al ; je 0x75e64 ; ret
0x0000000000076064 : add byte ptr [rax], al ; je 0x76077 ; mov eax, edx ; pop rbx ; ret
0x000000000007b540 : add byte ptr [rax], al ; je 0x7b556 ; xor eax, eax ; ret
0x0000000000081e57 : add byte ptr [rax], al ; je 0x81e64 ; ret
0x0000000000082e56 : add byte ptr [rax], al ; je 0x82e64 ; ret
0x000000000009f909 : add byte ptr [rax], al ; je 0x9f914 ; ret
0x00000000000aeff4 : add byte ptr [rax], al ; je 0xaf068 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000c0f0b : add byte ptr [rax], al ; je 0xc0f5e ; mov eax, 0x20 ; ret
0x00000000000d7746 : add byte ptr [rax], al ; je 0xd7786 ; xor eax, eax ; ret
0x00000000000d9ff0 : add byte ptr [rax], al ; je 0xda045 ; ret
0x00000000000e10c8 : add byte ptr [rax], al ; je 0xe10d5 ; ret
0x00000000000ff7ae : add byte ptr [rax], al ; je 0xff7b9 ; ret
0x0000000000154993 : add byte ptr [rax], al ; jg 0x1549a6 ; neg eax ; ret
0x000000000009f263 : add byte ptr [rax], al ; jg 0x9f26f ; neg eax ; ret
0x0000000000151749 : add byte ptr [rax], al ; jl 0x151756 ; neg eax ; ret
0x0000000000193d32 : add byte ptr [rax], al ; jl 0x193d6b ; add dword ptr [rax], eax ; pop rax ; cmp al, 0xf4 ; jmp qword ptr [rdi]
0x0000000000195332 : add byte ptr [rax], al ; jl 0x195381 ; add dword ptr [rax], eax ; clc ; fxtract ; jmp qword ptr [rcx]
0x0000000000198132 : add byte ptr [rax], al ; jl 0x1981af ; add dword ptr [rax], eax ; pop rax ; mov ch, dh ; jmp qword ptr [rcx]
0x0000000000199e32 : add byte ptr [rax], al ; jl 0x199dcc ; add dword ptr [rax], eax ; fsubr st(5) ; cmc ; call rsp
0x000000000005dd2d : add byte ptr [rax], al ; jmp 0x5a814
0x00000000000661c4 : add byte ptr [rax], al ; jmp 0x62464
0x0000000000066c5f : add byte ptr [rax], al ; jmp 0x66c29
0x00000000000ecf57 : add byte ptr [rax], al ; jmp 0x791f4
0x00000000000cb100 : add byte ptr [rax], al ; jmp 0xcb0ca
0x000000000001d796 : add byte ptr [rax], al ; jmp qword ptr [rax]
0x000000000000b32e : add byte ptr [rax], al ; jmp qword ptr [rdx]
0x000000000002d4d7 : add byte ptr [rax], al ; jmp rax
0x000000000011905b : add byte ptr [rax], al ; jmp rcx
0x000000000014a0d2 : add byte ptr [rax], al ; jne 0x149fe8 ; ret
0x000000000014e520 : add byte ptr [rax], al ; jne 0x14e4a8 ; ret
0x00000000001a7902 : add byte ptr [rax], al ; jne 0x1a7911 ; add byte ptr [rax], al ; ret
0x0000000000038f4f : add byte ptr [rax], al ; jne 0x38f98 ; add rsp, 8 ; ret
0x000000000003b82f : add byte ptr [rax], al ; jne 0x3b878 ; add rsp, 8 ; ret
0x000000000003e0ff : add byte ptr [rax], al ; jne 0x3e148 ; add rsp, 8 ; ret
0x00000000000457bf : add byte ptr [rax], al ; jne 0x45808 ; add rsp, 8 ; ret
0x000000000009f5a4 : add byte ptr [rax], al ; jne 0x9f59d ; ret
0x00000000000a160f : add byte ptr [rax], al ; jne 0xa1658 ; add rsp, 8 ; ret
0x00000000000a3c0f : add byte ptr [rax], al ; jne 0xa3c58 ; add rsp, 8 ; ret
0x00000000000a5fdf : add byte ptr [rax], al ; jne 0xa6028 ; add rsp, 8 ; ret
0x00000000000ac11f : add byte ptr [rax], al ; jne 0xac168 ; add rsp, 8 ; ret
0x00000000000c0ddf : add byte ptr [rax], al ; jne 0xc0db0 ; ret
0x00000000000c0fee : add byte ptr [rax], al ; jne 0xc0fd1 ; xor eax, eax ; ret
0x000000000018229e : add byte ptr [rax], al ; jnp 0x182292 ; call qword ptr [rdx]
0x000000000017bf12 : add byte ptr [rax], al ; jo 0x17beb0 ; in al, dx ; call rax
0x000000000017bfda : add byte ptr [rax], al ; jo 0x17bfb8 ; in al, dx ; jmp rax
0x000000000017c3ba : add byte ptr [rax], al ; jo 0x17c3f3 ; out dx, eax ; call rax
0x000000000017c422 : add byte ptr [rax], al ; jo 0x17c467 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017c522 : add byte ptr [rax], al ; jo 0x17c57c ; out dx, eax ; jmp rax
0x000000000017caaa : add byte ptr [rax], al ; jo 0x17caa7 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000188b7e : add byte ptr [rax], al ; jo 0x188b16 ; out dx, al ; jmp rcx
0x0000000000190f0e : add byte ptr [rax], al ; jo 0x190ec1 ; call rdi
0x0000000000190f0e : add byte ptr [rax], al ; jo 0x190ec2 ; call rdi
0x000000000019811a : add byte ptr [rax], al ; jo 0x198129 ; add byte ptr [rax - 0x78], al ; cmc ; jmp qword ptr [rcx]
0x000000000017c602 : add byte ptr [rax], al ; jp 0x17c5fb ; jmp qword ptr [rax]
0x000000000018ab16 : add byte ptr [rax], al ; js 0x18ab17 ; out dx, al ; call rsp
0x000000000018c0b6 : add byte ptr [rax], al ; js 0x18c126 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018c826 : add byte ptr [rax], al ; js 0x18c8a2 ; out dx, eax ; call qword ptr [rdx]
0x00000000001a759e : add byte ptr [rax], al ; js 0x1a75ab ; add byte ptr [rax], al ; retf
0x00000000000c1045 : add byte ptr [rax], al ; js 0xc1055 ; ret
0x0000000000114191 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000114026 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000114568 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000c6030 : add byte ptr [rax], al ; lea rax, qword ptr [rcx + rdx*8] ; jmp 0xc6002
0x0000000000152bce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000152bde : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000152bee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000152bfe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000152c0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000152b2d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000152b4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000152b5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000152b6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000152b7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000152b8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000152b9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000152ada : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000152bae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000152bbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000aeecb : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000af02e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000af04e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000af03e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000152b3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002116e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x14fbd4] ; ret
0x000000000002117e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x151a01] ; ret
0x0000000000112c6e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x5e588] ; ret
0x000000000010868e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a8185] ; call rax
0x0000000000040c34 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x193] ; call rax
0x000000000006d277 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007a171 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x189a] ; call rax
0x000000000007a639 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1d62] ; call rax
0x000000000006d570 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x0000000000078c0f : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x338] ; call rax
0x0000000000078e57 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000018da1a : add byte ptr [rax], al ; leave ; add byte ptr [rax], al ; add al, 0xf0 ; jmp qword ptr [rbx]
0x0000000000191262 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr [rcx], eax ; add byte ptr [rax - 0x47], bl ; call rsi
0x0000000000195e62 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; cmp byte ptr [rcx], dl ; cmc ; call qword ptr [rbx]
0x0000000000191b62 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or al, byte ptr [rcx] ; add al, bh ; loope 0x191b66 ; jmp qword ptr [rcx]
0x000000000019d362 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x000000000019db62 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 1
0x000000000019a462 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000180fd2 : add byte ptr [rax], al ; loop 0x180fd9 ; call rax
0x000000000017bf82 : add byte ptr [rax], al ; loopne 0x17bf2f ; in al, dx ; call qword ptr [rax]
0x000000000017c86a : add byte ptr [rax], al ; loopne 0x17c823 ; out dx, eax ; call qword ptr [rax]
0x000000000018544e : add byte ptr [rax], al ; loopne 0x18548a ; cli ; jmp qword ptr [rcx]
0x000000000018af0e : add byte ptr [rax], al ; loopne 0x18af16 ; out dx, al ; call qword ptr [rdx]
0x000000000018ee0e : add byte ptr [rax], al ; loopne 0x18ee32 ; int1 ; jmp qword ptr [rax]
0x000000000018ee3e : add byte ptr [rax], al ; loopne 0x18ee62 ; int1 ; call qword ptr [rdx]
0x000000000018ee6e : add byte ptr [rax], al ; loopne 0x18ee92 ; int1 ; call qword ptr [rdx]
0x000000000018ee9e : add byte ptr [rax], al ; loopne 0x18eec2 ; int1 ; call qword ptr [rdx]
0x000000000018eece : add byte ptr [rax], al ; loopne 0x18eef2 ; int1 ; call qword ptr [rdx]
0x000000000018eefe : add byte ptr [rax], al ; loopne 0x18ef22 ; int1 ; call qword ptr [rdx]
0x0000000000182f6a : add byte ptr [rax], al ; mov ah, 0x1e ; add byte ptr [rax], al ; push rax ; ret
0x000000000019826a : add byte ptr [rax], al ; mov ah, 0x71 ; add dword ptr [rax], eax ; nop ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000019b86a : add byte ptr [rax], al ; mov ah, 0xa7 ; add dword ptr [rax], eax ; rcl byte ptr [rdx - 0xa], 1 ; call qword ptr [rdx]
0x000000000019e66a : add byte ptr [rax], al ; mov ah, 0xd5 ; add dword ptr [rax], eax ; jo 0x19e624 ; clc ; call qword ptr [rax]
0x000000000018ee6a : add byte ptr [rax], al ; mov ah, 0xdd ; add byte ptr [rax], al ; loopne 0x18ee96 ; int1 ; call qword ptr [rdx]
0x0000000000187372 : add byte ptr [rax], al ; mov ah, 4 ; add byte ptr [rax], al ; call 0xffffffffe41861ca
0x000000000017c4aa : add byte ptr [rax], al ; mov al, 0x47 ; out dx, eax ; call qword ptr [rax]
0x000000000017c5aa : add byte ptr [rax], al ; mov al, 0x5d ; out dx, eax ; call qword ptr [rax]
0x000000000018261e : add byte ptr [rax], al ; mov al, 0x6a ; std ; call qword ptr [rcx]
0x000000000019099e : add byte ptr [rax], al ; mov al, 0xa0 ; jmp rsp
0x000000000017c172 : add byte ptr [rax], al ; mov al, 0xd4 ; out dx, al ; jmp rax
0x000000000017cae2 : add byte ptr [rax], al ; mov al, 0xf6 ; out dx, eax ; jmp qword ptr [rax]
0x000000000014066e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000013c33e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001a52f6 : add byte ptr [rax], al ; mov bh, 6 ; add byte ptr [rax], al ; retf 2
0x000000000018c402 : add byte ptr [rax], al ; mov bl, 0 ; add byte ptr [rax + 0x70], ch ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001a7286 : add byte ptr [rax], al ; mov bl, 3 ; add byte ptr [rax], al ; ret 1
0x000000000018ff46 : add byte ptr [rax], al ; mov bl, bh ; int1 ; call qword ptr [rcx]
0x000000000018d6fa : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; adc cl, dl ; out dx, eax ; jmp qword ptr [rax]
0x000000000013e30e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000c844e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000186086 : add byte ptr [rax], al ; mov byte ptr [rdi], ah ; in al, dx ; jmp qword ptr [rdx]
0x000000000009a38e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000098d8e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000099d5e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000190726 : add byte ptr [rax], al ; mov byte ptr [rdx + rsi*8], ch ; call qword ptr [rdx]
0x0000000000099a5e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000656a3 : add byte ptr [rax], al ; mov dword ptr [rax], edx ; jmp 0x62110
0x00000000001a4702 : add byte ptr [rax], al ; mov dword ptr [rbx], eax ; add byte ptr [rax], al ; retf
0x000000000013e34e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000013e36e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000013e35e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000013e33e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000e10ee : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000099d7e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000008ab8e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x0000000000099d9e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000099dae : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000099d8e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000053e45 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007b23b : add byte ptr [rax], al ; mov dword ptr [rip + 0x331049], eax ; ret
0x0000000000114f4e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000114f3e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x0000000000114f6e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000114f5e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000e1a94 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000011a614 : add byte ptr [rax], al ; mov dword ptr [rsp + 0x2c], eax ; call 0x116838
0x00000000000bcae0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000098d9e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000e7a1e : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000000e220e : add byte ptr [rax], al ; mov eax, 0x102 ; syscall
0x00000000000e3eee : add byte ptr [rax], al ; mov eax, 0x107 ; syscall
0x00000000000e3e2e : add byte ptr [rax], al ; mov eax, 0x10a ; syscall
0x00000000000e6814 : add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x00000000000f0bce : add byte ptr [rax], al ; mov eax, 0x110 ; syscall
0x00000000000f0c2e : add byte ptr [rax], al ; mov eax, 0x11b ; syscall
0x00000000000f02b9 : add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x00000000000f089e : add byte ptr [rax], al ; mov eax, 0x123 ; syscall
0x00000000000e2cfe : add byte ptr [rax], al ; mov eax, 0x124 ; syscall
0x00000000000e2d5e : add byte ptr [rax], al ; mov eax, 0x125 ; syscall
0x00000000000f09be : add byte ptr [rax], al ; mov eax, 0x126 ; syscall
0x00000000000f0cbe : add byte ptr [rax], al ; mov eax, 0x12c ; syscall
0x00000000000f07de : add byte ptr [rax], al ; mov eax, 0x131 ; syscall
0x0000000000081ea6 : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000e2d2e : add byte ptr [rax], al ; mov eax, 0x16 ; syscall
0x00000000000d8fce : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000000eb32e : add byte ptr [rax], al ; mov eax, 0x1b ; syscall
0x00000000000e2cce : add byte ptr [rax], al ; mov eax, 0x21 ; syscall
0x00000000000b2b6e : add byte ptr [rax], al ; mov eax, 0x24 ; syscall
0x00000000000bf83e : add byte ptr [rax], al ; mov eax, 0x25 ; syscall
0x00000000000b2b9e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000000c066e : add byte ptr [rax], al ; mov eax, 0x27 ; syscall
0x00000000000f149e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x00000000000f0f6e : add byte ptr [rax], al ; mov eax, 0x33 ; syscall
0x00000000000bfd5e : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000bf56e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000000e2e1e : add byte ptr [rax], al ; mov eax, 0x50 ; syscall
0x00000000000e2e4e : add byte ptr [rax], al ; mov eax, 0x51 ; syscall
0x00000000000e3f1e : add byte ptr [rax], al ; mov eax, 0x54 ; syscall
0x00000000000e3d9e : add byte ptr [rax], al ; mov eax, 0x56 ; syscall
0x00000000000e3e5e : add byte ptr [rax], al ; mov eax, 0x59 ; syscall
0x00000000000e20ee : add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000e211e : add byte ptr [rax], al ; mov eax, 0x5b ; syscall
0x00000000000e369e : add byte ptr [rax], al ; mov eax, 0x5d ; syscall
0x00000000000e36ce : add byte ptr [rax], al ; mov eax, 0x5e ; syscall
0x00000000000b03de : add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000bf59e : add byte ptr [rax], al ; mov eax, 0x64 ; syscall
0x00000000000c068e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000f0a1e : add byte ptr [rax], al ; mov eax, 0x67 ; syscall
0x00000000000c06ae : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000c069e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000c06be : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000c089e : add byte ptr [rax], al ; mov eax, 0x6d ; syscall
0x00000000000c067e : add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000c08ce : add byte ptr [rax], al ; mov eax, 0x6f ; syscall
0x00000000000c092e : add byte ptr [rax], al ; mov eax, 0x70 ; syscall
0x00000000000c06ce : add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000c095e : add byte ptr [rax], al ; mov eax, 0x76 ; syscall
0x00000000000c098e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall
0x00000000000f018e : add byte ptr [rax], al ; mov eax, 0x7a ; syscall
0x00000000000f01be : add byte ptr [rax], al ; mov eax, 0x7b ; syscall
0x00000000000c08fe : add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000f077e : add byte ptr [rax], al ; mov eax, 0x7d ; syscall
0x00000000000f07ae : add byte ptr [rax], al ; mov eax, 0x7e ; syscall
0x00000000000c0da9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x0000000000034533 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003457d : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x00000000000f0bfe : add byte ptr [rax], al ; mov eax, 0x86 ; syscall
0x00000000000e201e : add byte ptr [rax], al ; mov eax, 0x8a ; syscall
0x00000000000d8f0e : add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000d8f3e : add byte ptr [rax], al ; mov eax, 0x8f ; syscall
0x00000000000d8f6e : add byte ptr [rax], al ; mov eax, 0x90 ; syscall
0x00000000000d8f9e : add byte ptr [rax], al ; mov eax, 0x91 ; syscall
0x00000000000d8ffe : add byte ptr [rax], al ; mov eax, 0x92 ; syscall
0x00000000000d902e : add byte ptr [rax], al ; mov eax, 0x93 ; syscall
0x00000000000d905e : add byte ptr [rax], al ; mov eax, 0x94 ; syscall
0x00000000000eb3be : add byte ptr [rax], al ; mov eax, 0x96 ; syscall
0x00000000000eb3ee : add byte ptr [rax], al ; mov eax, 0x97 ; syscall
0x00000000000eb41e : add byte ptr [rax], al ; mov eax, 0x98 ; syscall
0x00000000000f06de : add byte ptr [rax], al ; mov eax, 0x9a ; syscall
0x00000000000f0ade : add byte ptr [rax], al ; mov eax, 0x9b ; syscall
0x00000000000eb22e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000000e829e : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall
0x00000000000e826e : add byte ptr [rax], al ; mov eax, 0xa3 ; syscall
0x00000000000b04be : add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000000f012e : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000e879e : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall
0x00000000000e87ce : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall
0x00000000000e7fee : add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x00000000000e808e : add byte ptr [rax], al ; mov eax, 0xab ; syscall
0x00000000000f001e : add byte ptr [rax], al ; mov eax, 0xac ; syscall
0x00000000000f080e : add byte ptr [rax], al ; mov eax, 0xae ; syscall
0x00000000000eb1fe : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000000f083e : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall
0x00000000000f015e : add byte ptr [rax], al ; mov eax, 0xbb ; syscall
0x00000000000cb0fb : add byte ptr [rax], al ; mov eax, 0xc ; jmp 0xcb0cf
0x00000000000c9e4e : add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; ret
0x00000000000ee2be : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall
0x00000000000ee19e : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall
0x00000000000fcca0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000f086e : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall
0x00000000000341db : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000f070e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall
0x00000000000c14cd : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000c0e6e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00000000000f098e : add byte ptr [rax], al ; mov eax, 0xfd ; syscall
0x00000000000f09ee : add byte ptr [rax], al ; mov eax, 0xff ; syscall
0x000000000006ad64 : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x6ad38
0x00000000000c0137 : add byte ptr [rax], al ; mov eax, 0xffffffff ; leave ; ret
0x00000000001270a9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003260c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003422c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000e50bb : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000045304 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000f2507 : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000011559e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000f7ec6 : add byte ptr [rax], al ; mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x0000000000143a5e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007a70e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000114e9c : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000120d4e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000ccfc6 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000e10de : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007536e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007533e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000070b7e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000034e4e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x377332] ; ret
0x0000000000076e5c : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e77aa : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000eb060 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081fe0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000341a2 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000002188c : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000432b1 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000f5c19 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000534d7 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000021e6b : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000fe56f : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b0a9 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000069471 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000006f1e5 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x00000000001981df : add byte ptr [rax], al ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000190242 : add byte ptr [rax], al ; mov ecx, dr0 ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], al ; call rsi
0x0000000000098dce : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000113cae : add byte ptr [rax], al ; mov edi, 0x100 ; call 0x207a9
0x000000000013324e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000098dbe : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000006e1ed : add byte ptr [rax], al ; mov edx, eax ; je 0x6e209 ; mov eax, edx ; pop rbx ; ret
0x00000000000732b1 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000000fcd56 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000126986 : add byte ptr [rax], al ; mov esi, 0x80002 ; mov eax, ecx ; syscall
0x000000000004c876 : add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x00000000000bb01a : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000000e77f3 : add byte ptr [rax], al ; mov esi, esi ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000018ff42 : add byte ptr [rax], al ; mov esi, gs ; add byte ptr [rax], al ; mov bl, bh ; int1 ; call qword ptr [rcx]
0x0000000000197d72 : add byte ptr [rax], al ; mov esp, 0x1800016c ; test dh, ch ; jmp qword ptr [rcx]
0x0000000000197e72 : add byte ptr [rax], al ; mov esp, 0x2800016d ; test esi, ebp ; jmp qword ptr [rcx]
0x0000000000186472 : add byte ptr [rax], al ; mov esp, 0x48000053 ; scasd eax, dword ptr [rdi] ; in al, dx ; call qword ptr [rcx]
0x0000000000195272 : add byte ptr [rax], al ; mov esp, 0x68000141 ; fdiv st(4) ; jmp qword ptr [rcx]
0x000000000019a372 : add byte ptr [rax], al ; mov esp, 0x8000192 ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000019d072 : add byte ptr [rax], al ; mov esp, 0x80001bf ; retf
0x0000000000191772 : add byte ptr [rax], al ; mov esp, 0x98000106 ; sal dl, 1 ; call rsi
0x0000000000198072 : add byte ptr [rax], al ; mov esp, 0x9800016f ; xchg ebp, esi ; jmp qword ptr [rcx]
0x0000000000194f72 : add byte ptr [rax], al ; mov esp, 0xa800013e ; sal esp, 1 ; jmp qword ptr [rcx]
0x0000000000196372 : add byte ptr [rax], al ; mov esp, 0xb8000152 ; sbb esi, ebp ; jmp qword ptr [rbx]
0x0000000000191f72 : add byte ptr [rax], al ; mov esp, 0xc800010e ; jmp qword ptr [rdi]
0x000000000019a072 : add byte ptr [rax], al ; mov esp, 0xc800018f ; clc ; cmc ; call qword ptr [rdx]
0x0000000000196772 : add byte ptr [rax], al ; mov esp, 0xd8000156 ; and dh, ch ; jmp rdx
0x0000000000195472 : add byte ptr [rax], al ; mov esp, 0xf8000143 ; loope 0x195478 ; jmp qword ptr [rcx]
0x000000000018e542 : add byte ptr [rax], al ; mov esp, ss ; add byte ptr [rax], al ; or ch, bh ; sti ; call qword ptr [rbx]
0x000000000010b3ce : add byte ptr [rax], al ; mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x00000000000fc290 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x0000000000127db3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000127d6b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000127f6e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013e38e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000013e3ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000013e3be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000013e3ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e3de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e3ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e3fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000013e39e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013e37e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000011655b : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000012110a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000099dbe : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x0000000000099dde : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000099dfe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000099e0e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000099e1e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000099e2e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000099dee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000099dce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000452f0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000074179 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000011912b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000007b28b : add byte ptr [rax], al ; mov qword ptr [rip + 0x330fcc], rax ; ret
0x000000000007b25b : add byte ptr [rax], al ; mov qword ptr [rip + 0x331004], rax ; ret
0x0000000000114edc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000037d13 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000e100c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000114eac : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000007b4d1 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r10 ; ret
0x0000000000100dce : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000a7d40 : add byte ptr [rax], al ; mov qword ptr [rsp + 8], r10 ; call 0x43fe9
0x0000000000037066 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000011dcab : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000113c88 : add byte ptr [rax], al ; mov r14, rax ; call 0x206c7
0x000000000006417e : add byte ptr [rax], al ; mov r14d, eax ; jmp 0x6414e
0x0000000000068361 : add byte ptr [rax], al ; mov r15d, eax ; jmp 0x64e62
0x00000000000340d4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000003424e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000000af55e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000af56e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000af57e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000af58e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000af59e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000af5ae : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000af5be : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000127f2e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000072550 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000fc5b6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000ee3d6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000037190 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000bb5fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072d0e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007a9ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000125861 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287ca6] ; call qword ptr [rax]
0x000000000012525e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2882a9] ; call qword ptr [rax]
0x000000000007a98e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x332c89] ; ret
0x000000000002200e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x38f419] ; ret
0x0000000000021ffe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x38f439] ; ret
0x00000000000e8a1d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007fe03 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000014dbfe : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000006bb85 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077d29 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000689fd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003751c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000325a4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007a9be : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001259da : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000080791 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c4f9 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000006dccc : add byte ptr [rax], al ; mov rax, rsi ; pop rbx ; ret
0x0000000000040ddc : add byte ptr [rax], al ; mov rbx, rdi ; syscall
0x000000000009da4f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000c3bcc : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x20] ; call 0x205e8
0x000000000002b421 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000073cae : add byte ptr [rax], al ; mov rdi, r13 ; call 0x207af
0x00000000000faddd : add byte ptr [rax], al ; mov rdi, r13 ; call 0xf7847
0x000000000002df30 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000023bd8 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x205f7
0x00000000000fadbf : add byte ptr [rax], al ; mov rdi, r15 ; call 0xf7847
0x00000000000ee03d : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, r12d ; syscall
0x000000000011585b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000010bf8b : add byte ptr [rax], al ; mov rdi, rbx ; call 0x38a47
0x000000000011d425 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006a86e : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006a515 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000bfd1e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000e18df : add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x0000000000074feb : add byte ptr [rax], al ; mov rdi, rsi ; call 0x212a7
0x000000000011fe0e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000098dfe : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000824f1 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, r8 ; call rax
0x000000000018dca6 : add byte ptr [rax], al ; mov rdx, rdi ; call qword ptr [rax]
0x00000000000e6cad : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x00000000000625c4 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x349993] ; call rax
0x000000000005a904 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x351653] ; call rax
0x000000000005a250 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x351d07] ; call rax
0x0000000000057344 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x354c13] ; call rax
0x000000000004e6d8 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35d87f] ; call rax
0x000000000004b67c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3608db] ; call rax
0x0000000000082d5a : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000034eee : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x0000000000126740 : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, r13d ; syscall
0x00000000001267f6 : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, r8d ; syscall
0x0000000000082a99 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r13 ; call rax
0x000000000018bd42 : add byte ptr [rax], al ; mov word ptr [rax + rax - 0x10a51800], gs ; jmp qword ptr [rdi]
0x0000000000186542 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; cwde ; retf
0x0000000000199c42 : add byte ptr [rax], al ; mov word ptr [rbx - 0x1eb7ffff], cs ; cmc ; jmp qword ptr [rcx]
0x000000000018ac42 : add byte ptr [rax], al ; mov word ptr [rbx - 0x4480000], ds ; out dx, al ; jmp qword ptr [rbx]
0x0000000000197d42 : add byte ptr [rax], al ; mov word ptr [rcx + rax], gs ; call 0x221972d9
0x000000000013e32e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000013e31e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000198042 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add byte ptr [rax - 0x79], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000099d6e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000198342 : add byte ptr [rax], al ; mov word ptr [rdx + 1], dr0 ; add byte ptr [rax - 0x76], ch ; cmc ; call qword ptr [rsi]
0x0000000000197b42 : add byte ptr [rax], al ; mov word ptr [rdx + 1], gs ; add byte ptr [rax + 0x67], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000037d5d : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000037da4 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000018af42 : add byte ptr [rax], al ; mov word ptr [rsi - 0x180000], ds ; out dx, al ; call qword ptr [rdx]
0x0000000000193f42 : add byte ptr [rax], al ; mov word ptr [rsi], gs ; add dword ptr [rax], eax ; mov byte ptr [rdi - 0xc], cl ; call qword ptr [rsi]
0x0000000000099e3e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x0000000000099e4e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000194f5a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr ds:[rax], eax ; nop ; sal esp, 1 ; jmp qword ptr [rcx]
0x0000000000189162 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rax] ; add al, bl ; test al, 0xee ; jmp rdx
0x0000000000198a5a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x198a69 ; add byte ptr [rax - 0x65], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019195a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rcx], al ; add byte ptr [rax], dl ; fdivr st(2), st(0) ; jmp qword ptr [rcx]
0x0000000000196f5a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsi ; add dword ptr [rax], eax ; rol byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000197b5a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push 1 ; add byte ptr [rax + 0x67], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018dc5a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001a3b5a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sub al, byte ptr [rdx] ; add byte ptr [rax + 0x3b], dh ; clc ; call qword ptr [rax]
0x000000000019975a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg byte ptr [rcx], al ; add byte ptr [rax - 0x30], dl ; cmc ; call rsi
0x00000000000eb1ad : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000006a6da : add byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000434fe : add byte ptr [rax], al ; movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x0000000000076d57 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000034345 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000000da08e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000007850e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000001333de : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000133abe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000133a4e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000184b7e : add byte ptr [rax], al ; nop ; cmp ebx, ebp ; call qword ptr [rax]
0x000000000017bd32 : add byte ptr [rax], al ; nop ; fsub st(3), st(0) ; jmp rax
0x00000000001822ee : add byte ptr [rax], al ; nop ; insb byte ptr [rdi], dx ; std ; jmp qword ptr [rdi]
0x000000000017c21a : add byte ptr [rax], al ; nop ; jrcxz 0x17c212 ; call rax
0x000000000017c932 : add byte ptr [rax], al ; nop ; leave ; out dx, eax ; call qword ptr [rax]
0x000000000017beca : add byte ptr [rax], al ; nop ; mov ah, ch ; jmp qword ptr [rax]
0x00000000000f0c8c : add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x00000000000f0d1c : add byte ptr [rax], al ; nop ; mov eax, 0x134 ; syscall
0x00000000000eb2fd : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x00000000000f146c : add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x00000000000f0e6c : add byte ptr [rax], al ; nop ; mov eax, 0x31 ; syscall
0x00000000000f0fcc : add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x00000000000f0f3c : add byte ptr [rax], al ; nop ; mov eax, 0x34 ; syscall
0x00000000000f1d2c : add byte ptr [rax], al ; nop ; mov eax, 0x43 ; syscall
0x00000000000e3ebc : add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x00000000000e3dfc : add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x00000000000f0b9c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x00000000000f039c : add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x00000000000e1fec : add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x00000000000eb38c : add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x00000000000e876c : add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x00000000000f06ac : add byte ptr [rax], al ; nop ; mov eax, 0x9e ; syscall
0x00000000000f074c : add byte ptr [rax], al ; nop ; mov eax, 0x9f ; syscall
0x00000000000f08fc : add byte ptr [rax], al ; nop ; mov eax, 0xb1 ; syscall
0x00000000000f0aac : add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x00000000000ee22c : add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x00000000000ee28c : add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x00000000000ee16c : add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x00000000000ee31c : add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x00000000000f095c : add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x000000000011ee5d : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x0000000000100e0d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000017c2ca : add byte ptr [rax], al ; nop ; or ch, bh ; lcall ptr [rax] ; ret 0
0x00000000001907de : add byte ptr [rax], al ; nop ; pop rax ; call qword ptr [rax]
0x00000000001594ed : add byte ptr [rax], al ; nop ; ret
0x000000000017bbca : add byte ptr [rax], al ; nop ; ret 0xffeb
0x000000000017bc9a : add byte ptr [rax], al ; nop ; retf
0x000000000019073e : add byte ptr [rax], al ; nop ; sub al, 0xf2 ; call rsp
0x00000000001209e9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000006e252 : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, edi ; ret
0x000000000011a49a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000120f0b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018dac6 : add byte ptr [rax], al ; or ah, al ; sti ; call rsp
0x00000000001956c2 : add byte ptr [rax], al ; or al, 0x46 ; add dword ptr [rax], eax ; sub al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001981c2 : add byte ptr [rax], al ; or al, 0x71 ; add dword ptr [rax], eax ; call 0x2219775e
0x000000000019a4c2 : add byte ptr [rax], al ; or al, 0x94 ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000018dac2 : add byte ptr [rax], al ; or al, 0xca ; add byte ptr [rax], al ; or ah, al ; sti ; call rsp
0x00000000001907c2 : add byte ptr [rax], al ; or al, 0xf7 ; add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rax]
0x00000000000afe44 : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x0000000000125fde : add byte ptr [rax], al ; or byte ptr [rax], al ; mov eax, 2 ; syscall
0x000000000002b610 : add byte ptr [rax], al ; or byte ptr [rax], al ; mov rdi, r15 ; mov eax, ecx ; syscall
0x0000000000185026 : add byte ptr [rax], al ; or byte ptr [rbp - 0x15], ch ; call rax
0x000000000018c156 : add byte ptr [rax], al ; or byte ptr [rcx - 0x11], ch ; call rax
0x0000000000190246 : add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], al ; call rsi
0x000000000018e546 : add byte ptr [rax], al ; or ch, bh ; sti ; call qword ptr [rbx]
0x000000000018f7fa : add byte ptr [rax], al ; out 0, eax ; add byte ptr [rax - 0x4a], ah ; int1 ; jmp qword ptr [rcx]
0x000000000018fdff : add byte ptr [rax], al ; out dx, al ; sti ; jmp rsi
0x000000000017c443 : add byte ptr [rax], al ; out dx, eax ; call qword ptr [rax]
0x000000000017d51b : add byte ptr [rax], al ; pop rax ; call qword ptr [rax]
0x000000000016f77f : add byte ptr [rax], al ; pop rax ; cli ; jmp rax
0x00000000001844e6 : add byte ptr [rax], al ; pop rax ; sub ch, bl ; call qword ptr [rcx]
0x000000000018dd96 : add byte ptr [rax], al ; pop rax ; xchg eax, esi ; sti ; call qword ptr [rax]
0x0000000000196e1a : add byte ptr [rax], al ; pop rbp ; add dword ptr [rax], eax ; loopne 0x196e6a ; cmc ; call qword ptr [rax]
0x000000000005334d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005341d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000083128 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000f265a : add byte ptr [rax], al ; pop rbp ; ret
0x000000000009df6a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003730c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000053218 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000fe8f5 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000005134c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000c0867 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000002980e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000211c5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023267 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007773d : add byte ptr [rax], al ; pop rbx ; pop rbp ; sub rax, rdx ; pop r12 ; ret
0x0000000000029e56 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000017967e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000017c583 : add byte ptr [rax], al ; pop rcx ; out dx, eax ; call rax
0x00000000000bfcce : add byte ptr [rax], al ; pop rdi ; mov eax, 0x3a ; syscall
0x00000000001a2312 : add byte ptr [rax], al ; pop rsp ; adc al, byte ptr [rdx] ; add al, bh ; fcompi st(7) ; call qword ptr [rsi]
0x000000000017f733 : add byte ptr [rax], al ; pop rsp ; clc ; jmp qword ptr [rax]
0x0000000000188412 : add byte ptr [rax], al ; pop rsp ; jae 0x188420 ; add byte ptr [rax + 0x77], cl ; out dx, al ; call qword ptr [rsi]
0x0000000000197b12 : add byte ptr [rax], al ; pop rsp ; push 1 ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000196612 : add byte ptr [rax], al ; pop rsp ; push rbp ; add dword ptr [rax], eax ; pop rax ; and ebp, esi ; jmp qword ptr [rcx]
0x0000000000196212 : add byte ptr [rax], al ; pop rsp ; push rcx ; add dword ptr [rax], eax ; or byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019d412 : add byte ptr [rax], al ; pop rsp ; ret
0x000000000018dc12 : add byte ptr [rax], al ; pop rsp ; retf
0x000000000019db12 : add byte ptr [rax], al ; pop rsp ; retf 1
0x0000000000199612 : add byte ptr [rax], al ; pop rsp ; test dword ptr [rcx], eax ; add byte ptr [rax - 0x35], ch ; cmc ; call rdi
0x000000000017c1f2 : add byte ptr [rax], al ; push rax ; fucompi st(6) ; call rax
0x0000000000193fff : add byte ptr [rax], al ; push rax ; hlt ; jmp qword ptr [rcx]
0x000000000017bd4a : add byte ptr [rax], al ; push rax ; in al, -0x15 ; call qword ptr [rax]
0x000000000017b47a : add byte ptr [rax], al ; push rax ; in al, -0x16 ; jmp rax
0x000000000018c3ee : add byte ptr [rax], al ; push rax ; jo 0x18c3e7 ; jmp qword ptr [rcx]
0x000000000018a31e : add byte ptr [rax], al ; push rax ; loopne 0x18a316 ; jmp qword ptr [rsi]
0x00000000001798dc : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000187a9e : add byte ptr [rax], al ; push rax ; pop rsp ; out dx, al ; jmp qword ptr [rbx]
0x0000000000182f6e : add byte ptr [rax], al ; push rax ; ret
0x000000000018fc2e : add byte ptr [rax], al ; push rax ; retf
0x000000000017c26a : add byte ptr [rax], al ; push rax ; sti ; out dx, al ; jmp qword ptr [rax]
0x00000000000fd49e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001961fa : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; add byte ptr [rax], bl ; cmc ; call qword ptr [rsi]
0x000000000018ee0a : add byte ptr [rax], al ; push rsp ; fld qword ptr [rax] ; add al, ah ; sbb esi, ecx ; jmp qword ptr [rax]
0x0000000000190f0a : add byte ptr [rax], al ; push rsp ; inc byte ptr [rax] ; add byte ptr [rax - 0x55], dh ; call rdi
0x000000000019860a : add byte ptr [rax], al ; push rsp ; jne 0x198619 ; add byte ptr [rax - 0x72], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000191e0a : add byte ptr [rax], al ; push rsp ; or eax, 0xea900001 ; jmp qword ptr [rcx]
0x000000000019000a : add byte ptr [rax], al ; push rsp ; out dx, eax ; add byte ptr [rax], al ; sar bl, 1 ; int1 ; call qword ptr [rcx]
0x000000000019700a : add byte ptr [rax], al ; push rsp ; pop rdi ; add dword ptr [rax], eax ; mov al, 0x43 ; cmc ; jmp qword ptr [rcx]
0x0000000000187b0a : add byte ptr [rax], al ; push rsp ; push 0 ; add byte ptr [rax], dl ; pop rsi ; out dx, al ; jmp qword ptr [rdi]
0x000000000018db0a : add byte ptr [rax], al ; push rsp ; retf 0
0x000000000018e10a : add byte ptr [rax], al ; push rsp ; rol byte ptr [rax], 1 ; add al, dh ; mov bl, 0xfb ; jmp qword ptr [rdi]
0x000000000018af0a : add byte ptr [rax], al ; push rsp ; sahf ; add byte ptr [rax], al ; loopne 0x18af1a ; out dx, al ; call qword ptr [rdx]
0x0000000000194b52 : add byte ptr [rax], al ; pushfq ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x3e], bl ; stc ; call qword ptr [rax]
0x000000000018ee52 : add byte ptr [rax], al ; pushfq ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x000000000018fd52 : add byte ptr [rax], al ; pushfq ; in al, dx ; add byte ptr [rax], al ; sbb bl, ch ; int1 ; jmp qword ptr [rbx]
0x0000000000198252 : add byte ptr [rax], al ; pushfq ; jno 0x198261 ; add byte ptr [rax - 0x77], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019b052 : add byte ptr [rax], al ; pushfq ; lahf ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], al ; call qword ptr [rax]
0x000000000019d852 : add byte ptr [rax], al ; pushfq ; mov dword ptr [rcx], 0xf6f99800 ; jmp qword ptr [rcx]
0x000000000018db52 : add byte ptr [rax], al ; pushfq ; retf 0
0x000000000019a552 : add byte ptr [rax], al ; pushfq ; xchg eax, esp ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000017b302 : add byte ptr [rax], al ; rcr byte ptr [rsi - 0x16], 1 ; call qword ptr [rax]
0x000000000017b682 : add byte ptr [rax], al ; rcr byte ptr [rsi], 0xeb ; jmp rax
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000000c2a : add byte ptr [rax], al ; ret 0
0x00000000001620de : add byte ptr [rax], al ; ret 0x10
0x000000000001e82e : add byte ptr [rax], al ; ret 0x170e
0x0000000000163dae : add byte ptr [rax], al ; ret 0x1d4
0x0000000000164546 : add byte ptr [rax], al ; ret 0x1d5
0x000000000000586e : add byte ptr [rax], al ; ret 0x24
0x000000000000697e : add byte ptr [rax], al ; ret 0x25
0x000000000000841e : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x000000000000f366 : add byte ptr [rax], al ; ret 0x2c
0x000000000000b0a6 : add byte ptr [rax], al ; ret 0x2e
0x00000000001632a6 : add byte ptr [rax], al ; ret 0x33
0x0000000000009db6 : add byte ptr [rax], al ; ret 0x36
0x000000000000cd56 : add byte ptr [rax], al ; ret 0x37
0x00000000000101a6 : add byte ptr [rax], al ; ret 0x3d
0x000000000000e4c6 : add byte ptr [rax], al ; ret 0x3f
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000fdb6 : add byte ptr [rax], al ; ret 0x4b
0x000000000000b8fe : add byte ptr [rax], al ; ret 0x4e
0x000000000000736e : add byte ptr [rax], al ; ret 0x55
0x00000000001618de : add byte ptr [rax], al ; ret 0xa
0x0000000000161cde : add byte ptr [rax], al ; ret 0xd
0x000000000017b443 : add byte ptr [rax], al ; ret 0xffea
0x00000000001899de : add byte ptr [rax], al ; ret 0xffee
0x0000000000000e06 : add byte ptr [rax], al ; ret 1
0x0000000000000fd6 : add byte ptr [rax], al ; ret 2
0x000000000000119a : add byte ptr [rax], al ; ret 3
0x0000000000165782 : add byte ptr [rax], al ; ret 4
0x0000000000165982 : add byte ptr [rax], al ; ret 5
0x00000000000016d2 : add byte ptr [rax], al ; ret 6
0x0000000000007aee : add byte ptr [rax], al ; ret 7
0x0000000000001a2a : add byte ptr [rax], al ; ret 8
0x0000000000166182 : add byte ptr [rax], al ; ret 9
0x0000000000000c36 : add byte ptr [rax], al ; retf
0x000000000017bc73 : add byte ptr [rax], al ; retf -0x15
0x0000000000004cc6 : add byte ptr [rax], al ; retf 0
0x0000000000006786 : add byte ptr [rax], al ; retf 0x10
0x000000000016223e : add byte ptr [rax], al ; retf 0x11
0x000000000001ca16 : add byte ptr [rax], al ; retf 0x1718
0x0000000000011466 : add byte ptr [rax], al ; retf 0x1b
0x0000000000005e86 : add byte ptr [rax], al ; retf 0x1d
0x0000000000163de6 : add byte ptr [rax], al ; retf 0x1d4
0x0000000000164586 : add byte ptr [rax], al ; retf 0x1d5
0x0000000000162df6 : add byte ptr [rax], al ; retf 0x24
0x00000000000062a6 : add byte ptr [rax], al ; retf 0x33
0x000000000000b256 : add byte ptr [rax], al ; retf 0x36
0x0000000000006a3e : add byte ptr [rax], al ; retf 0x39
0x00000000001671e7 : add byte ptr [rax], al ; retf 0x3b9a
0x000000000001030e : add byte ptr [rax], al ; retf 0x45
0x00000000000082e6 : add byte ptr [rax], al ; retf 0x48
0x00000000001796be : add byte ptr [rax], al ; retf 0x49f2
0x000000000000e736 : add byte ptr [rax], al ; retf 0x4c
0x00000000000098d6 : add byte ptr [rax], al ; retf 0x59
0x0000000000161a3e : add byte ptr [rax], al ; retf 0xb
0x0000000000161e3e : add byte ptr [rax], al ; retf 0xe
0x00000000000060de : add byte ptr [rax], al ; retf 0xf
0x000000000001097e : add byte ptr [rax], al ; retf 1
0x0000000000165392 : add byte ptr [rax], al ; retf 2
0x0000000000165592 : add byte ptr [rax], al ; retf 3
0x000000000000bb6e : add byte ptr [rax], al ; retf 4
0x0000000000165992 : add byte ptr [rax], al ; retf 5
0x00000000000016ea : add byte ptr [rax], al ; retf 6
0x0000000000001892 : add byte ptr [rax], al ; retf 7
0x0000000000001a3a : add byte ptr [rax], al ; retf 8
0x0000000000166192 : add byte ptr [rax], al ; retf 9
0x000000000017bbe2 : add byte ptr [rax], al ; rol ah, 0xeb ; call rax
0x0000000000001366 : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x000000000016577e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001901fe : add byte ptr [rax], al ; rol byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x000000000019e1fa : add byte ptr [rax], al ; rol dword ptr [rcx], 1 ; add al, dl ; and edi, esi ; call rax
0x000000000017bfaa : add byte ptr [rax], al ; ror bh, 1 ; in al, dx ; call rax
0x0000000000161b86 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x000000000018ea5e : add byte ptr [rax], al ; ror byte ptr [rsi], 1 ; int1 ; jmp qword ptr [rdi]
0x00000000001808c3 : add byte ptr [rax], al ; sahf ; cli ; jmp rax
0x000000000017ca9a : add byte ptr [rax], al ; sal bl, 1 ; out dx, eax ; jmp rax
0x000000000018494e : add byte ptr [rax], al ; sal byte ptr [rdx], 0xeb ; call qword ptr [rsi]
0x000000000018adbe : add byte ptr [rax], al ; sar ah, 0xee ; jmp qword ptr [rax]
0x000000000019000e : add byte ptr [rax], al ; sar bl, 1 ; int1 ; call qword ptr [rcx]
0x000000000018ff8e : add byte ptr [rax], al ; sar bl, 1 ; int1 ; jmp qword ptr [rcx]
0x00000000001810d2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; call 0xffffffffe117fad9
0x00000000001a34d2 : add byte ptr [rax], al ; sbb al, 0x24 ; add al, byte ptr [rax] ; pop rax ; and eax, edi ; call qword ptr [rax]
0x0000000000194fd2 : add byte ptr [rax], al ; sbb al, 0x3f ; add dword ptr [rax], eax ; cmp dl, dl ; hlt ; jmp qword ptr [rcx]
0x00000000001954d2 : add byte ptr [rax], al ; sbb al, 0x44 ; add dword ptr [rax], eax ; clc ; xor al, 0xf9 ; call qword ptr [rax]
0x00000000001989d2 : add byte ptr [rax], al ; sbb al, 0x79 ; add dword ptr [rax], eax ; test al, 0x99 ; cmc ; jmp rsi
0x000000000018fed2 : add byte ptr [rax], al ; sbb al, 0xee ; add byte ptr [rax], al ; clc ; cli ; int1 ; jmp rcx
0x000000000018fd56 : add byte ptr [rax], al ; sbb bl, ch ; int1 ; jmp qword ptr [rbx]
0x00000000001961ff : add byte ptr [rax], al ; sbb ch, dh ; call qword ptr [rsi]
0x00000000001a29fa : add byte ptr [rax], al ; sbb dword ptr [rdx], r8d ; add al, dh ; out 0xf7, al ; jmp qword ptr [rcx]
0x0000000000069b3e : add byte ptr [rax], al ; sbb rdx, 3 ; sub rdx, r12 ; syscall
0x0000000000186476 : add byte ptr [rax], al ; scasq rax, qword ptr [rdi] ; in al, dx ; call qword ptr [rcx]
0x00000000000da07e : add byte ptr [rax], al ; setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x000000000017b342 : add byte ptr [rax], al ; shl byte ptr [rax - 0x16], 1 ; jmp qword ptr [rax]
0x000000000017ca52 : add byte ptr [rax], al ; shr cl, 1 ; out dx, eax ; call rax
0x000000000007ff38 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000000e0f76 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000017da63 : add byte ptr [rax], al ; sub ah, dh ; jmp rax
0x000000000019d40e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000182be2 : add byte ptr [rax], al ; sub al, 0x1b ; add byte ptr [rax], al ; call 0x1218169b
0x00000000001a2ee2 : add byte ptr [rax], al ; sub al, 0x1e ; add al, byte ptr [rax] ; sub byte ptr [rdx - 5], ch ; jmp qword ptr [rdx]
0x0000000000193fe2 : add byte ptr [rax], al ; sub al, 0x2f ; add dword ptr [rax], eax ; call 0x22193445
0x00000000001844e2 : add byte ptr [rax], al ; sub al, 0x34 ; add byte ptr [rax], al ; pop rax ; sub ch, bl ; call qword ptr [rcx]
0x0000000000194de2 : add byte ptr [rax], al ; sub al, 0x3d ; add dword ptr [rax], eax ; cwde ; iretd ; hlt ; jmp qword ptr [rsi]
0x0000000000195ee2 : add byte ptr [rax], al ; sub al, 0x4e ; add dword ptr [rax], eax ; clc ; adc ebp, esi ; call rdx
0x00000000001962e2 : add byte ptr [rax], al ; sub al, 0x52 ; add dword ptr [rax], eax ; cwde ; sbb ebp, esi ; jmp qword ptr [rsi]
0x00000000001965e2 : add byte ptr [rax], al ; sub al, 0x55 ; add dword ptr [rax], eax ; js 0x196613 ; cmc ; jmp rdx
0x00000000001983e2 : add byte ptr [rax], al ; sub al, 0x73 ; add dword ptr [rax], eax ; pop rax ; mov esi, ebp ; jmp qword ptr [rcx]
0x000000000018eee2 : add byte ptr [rax], al ; sub al, 0xde ; add byte ptr [rax], al ; call 0x1118e011
0x000000000018fae2 : add byte ptr [rax], al ; sub al, 0xea ; add byte ptr [rax], al ; cwde ; ret
0x000000000017c3a2 : add byte ptr [rax], al ; sub al, 0xef ; call rax
0x000000000018b226 : add byte ptr [rax], al ; sub byte ptr [rax], cl ; out dx, eax ; jmp rdx
0x000000000018fc96 : add byte ptr [rax], al ; sub dl, ch ; int1 ; call qword ptr [rax]
0x000000000015005c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000e7810 : add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000b349a : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000001845ae : add byte ptr [rax], al ; sub ebp, ebx ; call qword ptr [rdx]
0x0000000000032edd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000079e36 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000009d7d1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000125ce7 : add byte ptr [rax], al ; sub rsp, 0x178 ; syscall
0x00000000000013de : add byte ptr [rax], al ; syscall
0x000000000018dd06 : add byte ptr [rax], al ; test al, 0xc5 ; sti ; call qword ptr [rax]
0x000000000018ee3a : add byte ptr [rax], al ; test bl, ch ; add byte ptr [rax], al ; loopne 0x18ee66 ; int1 ; call qword ptr [rdx]
0x000000000018b13a : add byte ptr [rax], al ; test byte ptr [rax - 0x15e00000], ah ; cld ; jmp rsp
0x0000000000079cb4 : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x79cc8 ; pop rbx ; ret
0x000000000019823a : add byte ptr [rax], al ; test byte ptr [rcx + 1], dh ; add byte ptr [rax - 0x77], ah ; cmc ; jmp qword ptr [rcx]
0x000000000019a53a : add byte ptr [rax], al ; test byte ptr [rcx + rax - 0x9db2000], dl ; jmp qword ptr [rsi]
0x000000000019653a : add byte ptr [rax], al ; test byte ptr [rcx + rax], dl ; adc byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019703a : add byte ptr [rax], al ; test byte ptr [rdi + 1], bl ; add al, ah ; cmc ; jmp qword ptr [rcx]
0x000000000018983a : add byte ptr [rax], al ; test byte ptr [rdi - 0x41100000], al ; out dx, al ; jmp qword ptr [rax]
0x0000000000197d5f : add byte ptr [rax], al ; test dh, ch ; jmp qword ptr [rcx]
0x000000000019073a : add byte ptr [rax], al ; test dh, dh ; add byte ptr [rax], al ; nop ; sub al, 0xf2 ; call rsp
0x0000000000114dff : add byte ptr [rax], al ; test eax, eax ; je 0x114e18 ; xor eax, eax ; ret
0x0000000000069296 : add byte ptr [rax], al ; test ecx, ecx ; je 0x692a7 ; ret
0x00000000000fd33d : add byte ptr [rax], al ; test rax, rax ; je 0xfd377 ; call rax
0x000000000011e802 : add byte ptr [rax], al ; test rax, rax ; jne 0x11e7f8 ; pop rbx ; ret
0x00000000001499ae : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000017c6db : add byte ptr [rax], al ; xchg eax, ebx ; out dx, eax ; jmp qword ptr [rax]
0x000000000018a31a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; push rax ; loopne 0x18a31a ; jmp qword ptr [rsi]
0x000000000019a2fa : add byte ptr [rax], al ; xchg eax, edx ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000017ceb3 : add byte ptr [rax], al ; xchg eax, esi ; jmp rax
0x000000000019154a : add byte ptr [rax], al ; xchg eax, esp ; add al, 1 ; add byte ptr [rax - 0x37], dh ; call rdi
0x000000000018544a : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [r8], al ; loopne 0x18548e ; cli ; jmp qword ptr [rcx]
0x000000000019564a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [r8], r8d ; mov al, 0xe7 ; hlt ; jmp qword ptr [rcx]
0x000000000019534a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], eax ; adc dl, bl ; hlt ; jmp qword ptr [rcx]
0x000000000019754a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr fs:[rax], eax ; adc byte ptr [rdi - 0xb], dl ; call qword ptr [rdx]
0x000000000019604a : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x19606f ; cmc ; jmp qword ptr [rcx]
0x000000000018494a : add byte ptr [rax], al ; xchg eax, esp ; cmp byte ptr [rax], al ; add al, al ; xor ch, bl ; call qword ptr [rsi]
0x000000000018904a : add byte ptr [rax], al ; xchg eax, esp ; jg 0x189058 ; add byte ptr [rax - 0x5c], ah ; out dx, al ; jmp rsp
0x0000000000188c4a : add byte ptr [rax], al ; xchg eax, esp ; jnp 0x188c58 ; add byte ptr [rax], dl ; cdq ; out dx, al ; call rdx
0x000000000019814a : add byte ptr [rax], al ; xchg eax, esp ; jo 0x198159 ; add byte ptr [rax - 0x78], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000189f4a : add byte ptr [rax], al ; xchg eax, esp ; mov es, word ptr [rax] ; add byte ptr [rax], dl ; shr esi, cl ; call qword ptr [rax]
0x000000000019e34a : add byte ptr [rax], al ; xchg eax, esp ; rol byte ptr [rcx], cl ; add al, al ; sub dh, bh ; call qword ptr [rbx]
0x00000000001a2b4a : add byte ptr [rax], al ; xchg eax, esp ; sbb al, byte ptr [rdx] ; add byte ptr [rax], dh ; insd dword ptr [rdi], dx ; sti ; jmp qword ptr [rdx]
0x00000000001a2c4a : add byte ptr [rax], al ; xchg eax, esp ; sbb eax, dword ptr [rdx] ; add byte ptr [rax + 0x6c], ah ; sti ; jmp qword ptr [rdx]
0x00000000001a3c4a : add byte ptr [rax], al ; xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0x3b], dl ; clc ; call rcx
0x0000000000189802 : add byte ptr [rax], al ; xchg qword ptr [rax], r8 ; add byte ptr [rax - 0x44], cl ; out dx, al ; call rbx
0x000000000019a402 : add byte ptr [rax], al ; xchg rax, rbx ; add dword ptr [rax], eax ; cwde ; and al, 0xf6 ; jmp qword ptr [rsi]
0x00000000001822ea : add byte ptr [rax], al ; xor al, 0x12 ; add byte ptr [rax], al ; nop ; insb byte ptr [rdi], dx ; std ; jmp qword ptr [rdi]
0x0000000000194aea : add byte ptr [rax], al ; xor al, 0x3a ; add dword ptr [rax], eax ; rol ch, 1 ; hlt ; call qword ptr [rsi]
0x00000000001952ea : add byte ptr [rax], al ; xor al, 0x42 ; add dword ptr [rax], eax ; mov al, 0xd9 ; hlt ; jmp qword ptr [rcx]
0x000000000018c3ea : add byte ptr [rax], al ; xor al, 0xb3 ; add byte ptr [rax], al ; push rax ; jo 0x18c3eb ; jmp qword ptr [rcx]
0x000000000017cb22 : add byte ptr [rax], al ; xor bh, dh ; out dx, eax ; jmp rax
0x000000000018485e : add byte ptr [rax], al ; xor bpl, bl ; jmp qword ptr [rdx]
0x000000000017bdca : add byte ptr [rax], al ; xor byte ptr [rbx - 0x14], bl ; jmp qword ptr [rax]
0x00000000000e704a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000017c2f2 : add byte ptr [rax], al ; xor byte ptr [rdi + rbp*8], cl ; dec eax ; ret 0
0x000000000017b77a : add byte ptr [rax], al ; xor byte ptr [rdi - 0x15], ah ; call rax
0x00000000001861ce : add byte ptr [rax], al ; xor byte ptr [rsp + rbp*8], ch ; jmp rdi
0x000000000009cdde : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000811ac : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000106d66 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000128796 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000008189e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000126785 : add byte ptr [rax], al ; xor eax, eax ; call 0xe29f6
0x000000000011564e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x0000000000115606 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000036d7b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb09d : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000369e3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000036a06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001498fa : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000037a3c : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000001a608e : add byte ptr [rax], al ; xor ecx, dword ptr [rax] ; add byte ptr [rax], al ; retf 6
0x00000000000210de : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x00000000000e74ba : add byte ptr [rax], al ; xor edi, edi ; syscall
0x0000000000021207 : add byte ptr [rax], al ; xor edx, edx ; mov eax, 2 ; syscall
0x000000000003504e : add byte ptr [rax], al ; xor edx, edx ; mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000004b64b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000004b908 : add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x00000000000c13fc : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x000000000002f36d : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x00000000000fd2bf : add byte ptr [rax], al ; xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000000e6ab3 : add byte ptr [rax], al ; xor esi, esi ; syscall
0x000000000004c7c5 : add byte ptr [rax], al ; xor r11d, r11d ; jmp rax
0x000000000010c196 : add byte ptr [rax], al ; xor r8d, r8d ; mov eax, r8d ; ret
0x00000000000293f0 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000009f26e : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000195e67 : add byte ptr [rax], bh ; adc ebp, esi ; call qword ptr [rbx]
0x000000000019a3a7 : add byte ptr [rax], bh ; and al, 0xf6 ; jmp qword ptr [rsi]
0x0000000000185d37 : add byte ptr [rax], bh ; imul ebx ; call qword ptr [rcx]
0x00000000001a1867 : add byte ptr [rax], bh ; retf -9
0x0000000000194fd7 : add byte ptr [rax], bh ; sal ah, cl ; jmp qword ptr [rcx]
0x000000000017a470 : add byte ptr [rax], bh ; sti ; call rax
0x0000000000184667 : add byte ptr [rax], bh ; sub al, 0xeb ; jmp qword ptr [rsi]
0x0000000000184597 : add byte ptr [rax], bh ; sub ebp, ebx ; call qword ptr [rcx]
0x0000000000198017 : add byte ptr [rax], bh ; xchg ebp, esi ; jmp qword ptr [rcx]
0x0000000000184847 : add byte ptr [rax], bh ; xor ch, bl ; jmp qword ptr [rax]
0x000000000017f920 : add byte ptr [rax], bl ; add al, byte ptr [rax] ; add bh, 0xf8 ; jmp qword ptr [rax]
0x0000000000196200 : add byte ptr [rax], bl ; cmc ; call qword ptr [rsi]
0x0000000000197b17 : add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001986d7 : add byte ptr [rax], bl ; nop ; cmc ; jmp qword ptr [rbx]
0x000000000019a727 : add byte ptr [rax], bl ; out dx, eax ; sti ; jmp qword ptr [rsi]
0x0000000000194017 : add byte ptr [rax], bl ; push rax ; hlt ; jmp qword ptr [rcx]
0x000000000000b697 : add byte ptr [rax], bl ; ret
0x00000000001963d7 : add byte ptr [rax], bl ; sbb al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000197d77 : add byte ptr [rax], bl ; test dh, ch ; jmp qword ptr [rcx]
0x000000000018d3a7 : add byte ptr [rax], ch ; cdq ; out dx, eax ; jmp rax
0x000000000017da64 : add byte ptr [rax], ch ; hlt ; jmp rax
0x00000000001954a7 : add byte ptr [rax], ch ; loop 0x1954a3 ; jmp qword ptr [rcx]
0x00000000001a3ff7 : add byte ptr [rax], ch ; or bh, bl ; call rax
0x000000000018b227 : add byte ptr [rax], ch ; or bh, ch ; jmp rdx
0x00000000001a2ee7 : add byte ptr [rax], ch ; push 0xfb ; jmp qword ptr [rdx]
0x0000000000194b97 : add byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x0000000000197e77 : add byte ptr [rax], ch ; test esi, ebp ; jmp qword ptr [rcx]
0x000000000016cd3f : add byte ptr [rax], cl ; adc dh, bl ; lcall ptr [rax] ; adc dh, bl ; call rdi
0x0000000000190247 : add byte ptr [rax], cl ; add al, 0xf2 ; call rsi
0x0000000000155265 : add byte ptr [rax], cl ; add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf -0x17d
0x0000000000155674 : add byte ptr [rax], cl ; add bh, dh ; fnsave dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf -0x27d
0x0000000000125fdf : add byte ptr [rax], cl ; add byte ptr [rax + 2], bh ; syscall
0x0000000000154c1a : add byte ptr [rax], cl ; add byte ptr [rax - 0x7b], cl ; retf -0x7bf1
0x0000000000157ac7 : add byte ptr [rax], cl ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7b], cl ; retf -0x7bf1
0x0000000000154b66 : add byte ptr [rax], cl ; add byte ptr [rbx - 0x7ab7ef31], al ; retf -0x7af1
0x000000000002b611 : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 1], cl ; mov eax, ecx ; syscall
0x00000000001565a7 : add byte ptr [rax], cl ; add byte ptr [rcx - 0x7b], cl ; retf -0x7bf1
0x0000000000154bc4 : add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf -0x17d
0x0000000000154dee : add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf -0x27d
0x000000000019a377 : add byte ptr [rax], cl ; and al, 0xf6 ; jmp qword ptr [rsi]
0x0000000000195527 : add byte ptr [rax], cl ; loop 0x195523 ; call qword ptr [rax]
0x000000000018e127 : add byte ptr [rax], cl ; mov ch, 0xfb ; call qword ptr [rdi]
0x000000000002ce14 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000000bb116 : add byte ptr [rax], cl ; or dword ptr [rax], eax ; mov eax, 2 ; syscall
0x000000000019d077 : add byte ptr [rax], cl ; retf
0x0000000000196217 : add byte ptr [rax], cl ; sbb ch, dh ; jmp qword ptr [rcx]
0x0000000000190fd7 : add byte ptr [rax], cl ; scasd eax, dword ptr [rdi] ; jmp rcx
0x000000000018e547 : add byte ptr [rax], cl ; std ; sti ; call qword ptr [rbx]
0x00000000001936af : add byte ptr [rax], dh ; cld ; jmp rdx
0x00000000001805c3 : add byte ptr [rax], dh ; cli ; jmp qword ptr [rax]
0x000000000017d703 : add byte ptr [rax], dh ; cmp ebx, esi ; call qword ptr [rax]
0x000000000017dd3b : add byte ptr [rax], dh ; fdiv st(4) ; jmp qword ptr [rax]
0x000000000017cb23 : add byte ptr [rax], dh ; imul edi ; jmp rax
0x0000000000180d3b : add byte ptr [rax], dh ; in al, dx ; cld ; jmp qword ptr [rax]
0x000000000017e0ab : add byte ptr [rax], dh ; in al, dx ; cmc ; call rax
0x000000000009cddf : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001a2b4f : add byte ptr [rax], dh ; insd dword ptr [rdi], dx ; sti ; jmp qword ptr [rdx]
0x000000000017ffc3 : add byte ptr [rax], dh ; lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000017c2f3 : add byte ptr [rax], dh ; or al, 0xef ; dec eax ; ret 0
0x0000000000180e9b : add byte ptr [rax], dh ; outsd dx, dword ptr [rsi] ; std ; jmp qword ptr [rax]
0x000000000017bdcb : add byte ptr [rax], dh ; pop rbx ; in al, dx ; jmp qword ptr [rax]
0x000000000019402f : add byte ptr [rax], dh ; push rax ; hlt ; jmp qword ptr [rcx]
0x000000000017bbd3 : add byte ptr [rax], dh ; ret
0x00000000001a141f : add byte ptr [rax], dh ; ret 0xfff7
0x0000000000180aa3 : add byte ptr [rax], dh ; retf
0x000000000017c93b : add byte ptr [rax], dh ; retf -0x11
0x0000000000180a7b : add byte ptr [rax], dh ; retf -6
0x0000000000004a07 : add byte ptr [rax], dh ; retf 0xb
0x00000000001800e3 : add byte ptr [rax], dh ; sar ecx, 1 ; call rax
0x00000000001861cf : add byte ptr [rax], dh ; sub al, 0xec ; jmp rdi
0x000000000018457f : add byte ptr [rax], dh ; sub ebp, ebx ; call qword ptr [rcx]
0x0000000000197d8f : add byte ptr [rax], dh ; test dh, ch ; jmp qword ptr [rcx]
0x0000000000040a9c : add byte ptr [rax], dl ; add byte ptr [rax + 0x38], bh ; syscall
0x000000000007b53e : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x7b558 ; xor eax, eax ; ret
0x00000000000fd212 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068b55 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000068b63 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000156e4f : add byte ptr [rax], dl ; add byte ptr [rcx - 0x7b], cl ; ret 0x1474
0x0000000000188c4f : add byte ptr [rax], dl ; cdq ; out dx, al ; call rdx
0x000000000017f76b : add byte ptr [rax], dl ; clc ; call qword ptr [rax]
0x000000000017f22b : add byte ptr [rax], dl ; fcompi st(7) ; call rax
0x000000000019195f : add byte ptr [rax], dl ; fdivr st(2), st(0) ; jmp qword ptr [rcx]
0x000000000018300f : add byte ptr [rax], dl ; fsubr st(2) ; call qword ptr [rdx]
0x000000000017bd3b : add byte ptr [rax], dl ; fucomp st(3) ; call qword ptr [rax]
0x000000000019aeaf : add byte ptr [rax], dl ; idiv bh ; retf
0x0000000000180213 : add byte ptr [rax], dl ; idiv cl ; call qword ptr [rax]
0x000000000017c243 : add byte ptr [rax], dl ; in eax, dx ; out dx, al ; call qword ptr [rax]
0x0000000000194d7f : add byte ptr [rax], dl ; iretd ; hlt ; call qword ptr [rcx]
0x000000000017d76b : add byte ptr [rax], dl ; jmp qword ptr [rax]
0x0000000000180153 : add byte ptr [rax], dl ; jrcxz 0x180154 ; jmp rax
0x000000000017c80b : add byte ptr [rax], dl ; lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x000000000019548f : add byte ptr [rax], dl ; loop 0x19548b ; jmp qword ptr [rcx]
0x00000000001980ef : add byte ptr [rax], dl ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000002cef4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000016c4ff : add byte ptr [rax], dl ; pop rax ; int1 ; ljmp ptr [rax + 0x58] ; int1 ; call qword ptr [rax]
0x000000000017c5a3 : add byte ptr [rax], dl ; pop rbp ; out dx, eax ; call rax
0x0000000000187b0f : add byte ptr [rax], dl ; pop rsi ; out dx, al ; jmp qword ptr [rdi]
0x000000000017f63b : add byte ptr [rax], dl ; push rax ; clc ; call rax
0x000000000017ec13 : add byte ptr [rax], dl ; push rax ; idiv edi ; pop rax ; retf
0x000000000019754f : add byte ptr [rax], dl ; push rdi ; cmc ; call qword ptr [rdx]
0x000000000017e603 : add byte ptr [rax], dl ; ret 0xfff6
0x000000000000771f : add byte ptr [rax], dl ; retf
0x000000000017e6a3 : add byte ptr [rax], dl ; retf -0xa
0x000000000019476f : add byte ptr [rax], dl ; sahf ; hlt ; jmp qword ptr [rdx]
0x000000000017ea73 : add byte ptr [rax], dl ; sbb al, 0xf7 ; dec eax ; ret
0x000000000017b553 : add byte ptr [rax], dl ; sbb bl, ch ; call qword ptr [rax]
0x000000000018d6ff : add byte ptr [rax], dl ; shr edi, 1 ; jmp qword ptr [rax]
0x0000000000189f4f : add byte ptr [rax], dl ; shr esi, cl ; call qword ptr [rax]
0x000000000017d393 : add byte ptr [rax], dl ; sub esi, edx ; call qword ptr [rax]
0x0000000000197fcf : add byte ptr [rax], dl ; xchg ebp, esi ; jmp qword ptr [rcx]
0x00000000001a1498 : add byte ptr [rax], r8b ; add ah, ah ; add eax, dword ptr [rdx] ; add al, dh ; ret
0x000000000018d3a0 : add byte ptr [rax], r8b ; add ah, ch ; ret 0
0x00000000000f8125 : add byte ptr [rax], r8b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010fbfd : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000072536 : add byte ptr [rax], r8b ; cmp eax, 0xff ; jne 0x72549 ; pop rbx ; ret
0x00000000000c844d : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000e220d : add byte ptr [rax], r8b ; mov eax, 0x102 ; syscall
0x00000000000e3eed : add byte ptr [rax], r8b ; mov eax, 0x107 ; syscall
0x00000000000e3e2d : add byte ptr [rax], r8b ; mov eax, 0x10a ; syscall
0x00000000000f0bcd : add byte ptr [rax], r8b ; mov eax, 0x110 ; syscall
0x00000000000f0c2d : add byte ptr [rax], r8b ; mov eax, 0x11b ; syscall
0x00000000000f089d : add byte ptr [rax], r8b ; mov eax, 0x123 ; syscall
0x00000000000e2cfd : add byte ptr [rax], r8b ; mov eax, 0x124 ; syscall
0x00000000000e2d5d : add byte ptr [rax], r8b ; mov eax, 0x125 ; syscall
0x00000000000f09bd : add byte ptr [rax], r8b ; mov eax, 0x126 ; syscall
0x00000000000f0cbd : add byte ptr [rax], r8b ; mov eax, 0x12c ; syscall
0x00000000000f07dd : add byte ptr [rax], r8b ; mov eax, 0x131 ; syscall
0x0000000000081ea5 : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000e2d2d : add byte ptr [rax], r8b ; mov eax, 0x16 ; syscall
0x00000000000d8fcd : add byte ptr [rax], r8b ; mov eax, 0x18 ; syscall
0x00000000000eb32d : add byte ptr [rax], r8b ; mov eax, 0x1b ; syscall
0x00000000000e2ccd : add byte ptr [rax], r8b ; mov eax, 0x21 ; syscall
0x00000000000b2b9d : add byte ptr [rax], r8b ; mov eax, 0x26 ; syscall
0x00000000000f149d : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x00000000000f0f6d : add byte ptr [rax], r8b ; mov eax, 0x33 ; syscall
0x00000000000e2e4d : add byte ptr [rax], r8b ; mov eax, 0x51 ; syscall
0x00000000000e3f1d : add byte ptr [rax], r8b ; mov eax, 0x54 ; syscall
0x00000000000e3e5d : add byte ptr [rax], r8b ; mov eax, 0x59 ; syscall
0x00000000000e211d : add byte ptr [rax], r8b ; mov eax, 0x5b ; syscall
0x00000000000e369d : add byte ptr [rax], r8b ; mov eax, 0x5d ; syscall
0x00000000000e36cd : add byte ptr [rax], r8b ; mov eax, 0x5e ; syscall
0x00000000000bf59d : add byte ptr [rax], r8b ; mov eax, 0x64 ; syscall
0x00000000000f0a1d : add byte ptr [rax], r8b ; mov eax, 0x67 ; syscall
0x00000000000c089d : add byte ptr [rax], r8b ; mov eax, 0x6d ; syscall
0x00000000000c08cd : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall
0x00000000000c092d : add byte ptr [rax], r8b ; mov eax, 0x70 ; syscall
0x00000000000c095d : add byte ptr [rax], r8b ; mov eax, 0x76 ; syscall
0x00000000000c098d : add byte ptr [rax], r8b ; mov eax, 0x78 ; syscall
0x00000000000f018d : add byte ptr [rax], r8b ; mov eax, 0x7a ; syscall
0x00000000000f01bd : add byte ptr [rax], r8b ; mov eax, 0x7b ; syscall
0x00000000000f077d : add byte ptr [rax], r8b ; mov eax, 0x7d ; syscall
0x00000000000f07ad : add byte ptr [rax], r8b ; mov eax, 0x7e ; syscall
0x00000000000f0bfd : add byte ptr [rax], r8b ; mov eax, 0x86 ; syscall
0x00000000000e201d : add byte ptr [rax], r8b ; mov eax, 0x8a ; syscall
0x00000000000d8f3d : add byte ptr [rax], r8b ; mov eax, 0x8f ; syscall
0x00000000000d8f6d : add byte ptr [rax], r8b ; mov eax, 0x90 ; syscall
0x00000000000d8f9d : add byte ptr [rax], r8b ; mov eax, 0x91 ; syscall
0x00000000000d8ffd : add byte ptr [rax], r8b ; mov eax, 0x92 ; syscall
0x00000000000d902d : add byte ptr [rax], r8b ; mov eax, 0x93 ; syscall
0x00000000000d905d : add byte ptr [rax], r8b ; mov eax, 0x94 ; syscall
0x00000000000eb3bd : add byte ptr [rax], r8b ; mov eax, 0x96 ; syscall
0x00000000000eb3ed : add byte ptr [rax], r8b ; mov eax, 0x97 ; syscall
0x00000000000eb41d : add byte ptr [rax], r8b ; mov eax, 0x98 ; syscall
0x00000000000f06dd : add byte ptr [rax], r8b ; mov eax, 0x9a ; syscall
0x00000000000f0add : add byte ptr [rax], r8b ; mov eax, 0x9b ; syscall
0x00000000000eb22d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000000e829d : add byte ptr [rax], r8b ; mov eax, 0xa1 ; syscall
0x00000000000e879d : add byte ptr [rax], r8b ; mov eax, 0xa7 ; syscall
0x00000000000e87cd : add byte ptr [rax], r8b ; mov eax, 0xa8 ; syscall
0x00000000000f001d : add byte ptr [rax], r8b ; mov eax, 0xac ; syscall
0x00000000000f080d : add byte ptr [rax], r8b ; mov eax, 0xae ; syscall
0x00000000000f083d : add byte ptr [rax], r8b ; mov eax, 0xb0 ; syscall
0x00000000000f015d : add byte ptr [rax], r8b ; mov eax, 0xbb ; syscall
0x00000000000ee2bd : add byte ptr [rax], r8b ; mov eax, 0xc6 ; syscall
0x00000000000ee19d : add byte ptr [rax], r8b ; mov eax, 0xc7 ; syscall
0x00000000000f086d : add byte ptr [rax], r8b ; mov eax, 0xd5 ; syscall
0x00000000000f070d : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall
0x00000000000f098d : add byte ptr [rax], r8b ; mov eax, 0xfd ; syscall
0x00000000000f09ed : add byte ptr [rax], r8b ; mov eax, 0xff ; syscall
0x00000000000432bd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000c1ef5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000011e80d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00000000000ccfc5 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000070b7d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x00000000000f5c25 : add byte ptr [rax], r8b ; mov eax, edx ; ret
0x0000000000098dbd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000100dcd : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000127f2d : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000fc5b5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000325ad : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000009a02d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x0000000000098dfd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000113d0d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000bfccd : add byte ptr [rax], r8b ; pop rdi ; mov eax, 0x3a ; syscall
0x0000000000048a55 : add byte ptr [rax], r8b ; ret
0x0000000000128795 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000cac5d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003726d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000036a05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000010c195 : add byte ptr [rax], r8b ; xor r8d, r8d ; mov eax, r8d ; ret
0x000000000009f26d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000487bf : add byte ptr [rbp + 0x29], cl ; ret
0x00000000000aac57 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000faf2d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005605c : add byte ptr [rbp + 0x31], al ; fcmovnb st(0), st(7) ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x00000000000293f1 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000157ac9 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7b], cl ; retf -0x7bf1
0x00000000000b6145 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000853f3 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000fd49f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000aacab : add byte ptr [rbp + 0x390a74db], al ; ret
0x00000000000b0847 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x00000000000ec176 : add byte ptr [rbp + 0x395274c0], al ; ret
0x000000000010a546 : add byte ptr [rbp + 0x39], al ; or al, 0x75 ; retf
0x000000000007b420 : add byte ptr [rbp + 0x39], cl ; ret 0x820f
0x0000000000038f50 : add byte ptr [rbp + 0x3d], dh ; add rsp, 8 ; ret
0x000000000007c041 : add byte ptr [rbp + 0x41], bl ; mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x000000000005334e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005341e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000083129 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008411e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x0000000000068aee : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010bbc3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x000000000003b09f : add byte ptr [rbp + 0x6348ff50], cl ; retf -0x74b8
0x00000000000cabcc : add byte ptr [rbp + 0x63], cl ; ret 0x148b
0x00000000000cb975 : add byte ptr [rbp + 0x63], cl ; retf
0x0000000000108476 : add byte ptr [rbp + 0x79c389c0], al ; mov ah, 0xe9 ; ret 0xfffd
0x0000000000127e00 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x000000000004419f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000004408f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000f2009 : add byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf 0x34c
0x000000000017d640 : add byte ptr [rbp + 1], al ; add byte ptr [rax - 5], ah ; jmp qword ptr [rax]
0x0000000000197623 : add byte ptr [rbp + 1], ch ; add byte ptr [rax + 0x57], bh ; cmc ; call qword ptr [rax]
0x00000000001a7777 : add byte ptr [rbp + 1], cl ; add byte ptr [rax], al ; fld dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x000000000003713a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x000000000008069a : add byte ptr [rbp + 3], dh ; ret
0x00000000000ca019 : add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x00000000001a7903 : add byte ptr [rbp + 5], dh ; add byte ptr [rax], al ; ret
0x00000000000e8b65 : add byte ptr [rbp + 8], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154dfe : add byte ptr [rbp + 9], cl ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000075e82 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000195663 : add byte ptr [rbp + rax*2 - 0x1837ffff], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019564b : add byte ptr [rbp + rax*2 - 0x184fffff], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000199613 : add byte ptr [rbp + rax*4 + 1], bl ; add byte ptr [rax - 0x35], ch ; cmc ; call rdi
0x000000000000b24f : add byte ptr [rbp + rax], dl ; add byte ptr [rax], al ; retf 0x36
0x0000000000197e13 : add byte ptr [rbp + rbp*2 + 1], bl ; add al, bl ; test dh, ch ; jmp qword ptr [rcx]
0x0000000000197e73 : add byte ptr [rbp + rbp*2 - 0x7ad7ffff], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018fdfb : add byte ptr [rbp + rbp*8], al ; add byte ptr [rax], al ; out dx, al ; sti ; jmp rsi
0x000000000018ee3b : add byte ptr [rbp + rbx*8 + 0x1be00000], al ; int1 ; call qword ptr [rdx]
0x000000000018ee6b : add byte ptr [rbp + rbx*8 + 0x1be00000], dh ; int1 ; call qword ptr [rdx]
0x000000000018ee53 : add byte ptr [rbp + rbx*8 + 0x1be80000], bl ; int1 ; call qword ptr [rax]
0x000000000018ee23 : add byte ptr [rbp + rbx*8], ch ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x000000000018ee0b : add byte ptr [rbp + rbx*8], dl ; add al, ah ; sbb esi, ecx ; jmp qword ptr [rax]
0x0000000000161cd7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000191e6b : add byte ptr [rbp + rcx - 0x156fffff], dh ; jmp qword ptr [rcx]
0x0000000000195e63 : add byte ptr [rbp + rcx*2 + 0x11380001], ch ; cmc ; call qword ptr [rbx]
0x00000000000f64c2 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; jmp rax
0x00000000000767d9 : add byte ptr [rbp + rcx*4 + 0x35], cl ; jmp qword ptr [rax]
0x000000000004aab7 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x1269
0x00000000000d0856 : add byte ptr [rbp + rcx*4 + 0x43], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000072f41 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000114192 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x0000000000072e5e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000114027 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x1c ; call qword ptr [rax]
0x0000000000114569 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000ca777 : add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000199e33 : add byte ptr [rbp + rcx*4 + 1], bh ; add al, bl ; in eax, dx ; cmc ; call rsp
0x0000000000196643 : add byte ptr [rbp + rdx*2 + 0x21880001], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000196613 : add byte ptr [rbp + rdx*2 + 1], bl ; add byte ptr [rax + 0x21], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019662b : add byte ptr [rbp + rdx*2 + 1], dh ; add byte ptr [rax + 0x21], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019e66b : add byte ptr [rbp + rdx*8 - 0x568fffff], dh ; clc ; call qword ptr [rax]
0x0000000000198623 : add byte ptr [rbp + rsi*2 + 1], ch ; add byte ptr [rax - 0x72], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019860b : add byte ptr [rbp + rsi*2 + 1], dl ; add byte ptr [rax - 0x72], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000190643 : add byte ptr [rbp + rsi*8 + 0x25580000], cl ; jmp qword ptr [rcx]
0x000000000019062b : add byte ptr [rbp + rsi*8], dh ; add byte ptr [rax + 0x25], al ; jmp qword ptr [rcx]
0x000000000009f5a5 : add byte ptr [rbp - 0x10], dh ; ret
0x000000000012116b : add byte ptr [rbp - 0x179f8a25], al ; sti ; retf
0x00000000001594d4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000c0fef : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000c0de0 : add byte ptr [rbp - 0x38], dh ; ret
0x0000000000161f83 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000c0f52 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x000000000017ae4c : add byte ptr [rbp - 0x4b6f0005], dh ; sti ; jmp qword ptr [rax]
0x00000000000ab32f : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000009e1ab : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000017c0d8 : add byte ptr [rbp - 0x71600000], dh ; in eax, dx ; jmp qword ptr [rax]
0x00000000000cd14a : add byte ptr [rbp - 0x76bb008b], cl ; retf -0x76b8
0x00000000001580af : add byte ptr [rbp - 0x77], al ; fld dword ptr [rbx - 0x76b7d731] ; ret 0x8341
0x0000000000087a3f : add byte ptr [rbp - 0x77], al ; ret 0x8945
0x00000000000b56bc : add byte ptr [rbp - 0x77], al ; retf -0x7ebf
0x00000000001588ef : add byte ptr [rbp - 0x77], cl ; ret 0x949
0x0000000000045508 : add byte ptr [rbp - 0x77], cl ; ret 0xc129
0x000000000008c6fd : add byte ptr [rbp - 0x77], cl ; retf
0x000000000002a55d : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008a6bb : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x00000000000ccd6f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000cb483 : add byte ptr [rbp - 0x9d78b37], al ; ret
0x00000000000429a7 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x000000000007c475 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000033ff5 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000069297 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000018fdcb : add byte ptr [rbp*8 - 0x14000000], dl ; sti ; jmp qword ptr [rbx]
0x0000000000145ab9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000007536f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000009df6b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000072538 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000f053f : add byte ptr [rbx + 0x2c12da05], cl ; add byte ptr [rcx - 0x77], cl ; retf -0x3f7b
0x00000000000e80bf : add byte ptr [rbx + 0x2c975a05], cl ; add byte ptr [rcx - 0x77], cl ; retf -0x3f7b
0x00000000000cd947 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000007e169 : add byte ptr [rbx + 0x33077c05], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007ddcf : add byte ptr [rbx + 0x330b1605], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007aa27 : add byte ptr [rbx + 0x333e3505], al ; add byte ptr [rcx], al ; ret
0x00000000000b0093 : add byte ptr [rbx + 0x3934245c], cl ; ret
0x00000000000c0868 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000005134d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000098dcf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000001406af : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000143a5f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000bf91a : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; ret
0x000000000009b1ff : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000008a71c : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000010de64 : add byte ptr [rbx + 0x4f0f05f8], al ; ret 0x8589
0x000000000010de14 : add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8589
0x000000000010de3c : add byte ptr [rbx + 0x4f0f1ef8], al ; ret 0x8589
0x000000000013324f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000080b3f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000002316d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002980f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000211c6 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002141b : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007773e : add byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; pop r12 ; ret
0x0000000000075ebf : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000000994b9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000e10df : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00000000000751e6 : add byte ptr [rbx + 0x7501046a], al ; retf -0x38b8
0x000000000007533f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000ecba7 : add byte ptr [rbx + 0x94801e0], al ; ret 0x8949
0x000000000009fc18 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x0000000000084e83 : add byte ptr [rbx + 0xa891], cl ; add bh, dh ; ret 0
0x000000000010f818 : add byte ptr [rbx + 0xb74ffff], al ; mov eax, edx ; syscall
0x000000000003746f : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001a6b9b : add byte ptr [rbx + 3], cl ; add byte ptr [rax], al ; ret
0x00000000001a7283 : add byte ptr [rbx + 7], bl ; add byte ptr [rax], al ; mov bl, 3 ; add byte ptr [rax], al ; ret 1
0x00000000001a4bcb : add byte ptr [rbx + 8], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001a141b : add byte ptr [rbx + rax + 2], ah ; add byte ptr [rax], dh ; ret 0xfff7
0x000000000015174a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000018544b : add byte ptr [rbx + rax*2 + 0x33e00000], dl ; cli ; jmp qword ptr [rcx]
0x0000000000195473 : add byte ptr [rbx + rax*2 - 0x1e07ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a3c4b : add byte ptr [rbx + rbp + 0x3b500002], dl ; clc ; call rcx
0x0000000000193bf3 : add byte ptr [rbx + rbp], bh ; add dword ptr [rax], eax ; test al, 0x3b ; hlt ; jmp qword ptr [rsi]
0x00000000001a2c4b : add byte ptr [rbx + rbx + 0x6c600002], dl ; sti ; jmp qword ptr [rdx]
0x000000000018ac43 : add byte ptr [rbx + rbx*4 - 0x4480000], cl ; out dx, al ; jmp qword ptr [rbx]
0x0000000000182be3 : add byte ptr [rbx + rbx], ch ; add byte ptr [rax], al ; call 0x1218169a
0x00000000000f578a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000fc62a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x0000000000195c1b : add byte ptr [rbx + rcx*2 + 1], ah ; add al, al ; or esi, ebp ; jmp rcx
0x00000000000b21df : add byte ptr [rbx + rcx*4 + 0x1d], cl ; retf 0x2f
0x000000000010384d : add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf
0x00000000000bb01b : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000037957 : add byte ptr [rbx + rcx*4 + 0x49], cl ; or byte ptr [rax - 0x77], cl ; retf
0x000000000003e2ce : add byte ptr [rbx + rcx*4 + 0x55], cl ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x0000000000045257 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000043b17 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000622cf : add byte ptr [rbx + rcx*4 + 0x76], al ; add al, 0x83 ; retf
0x000000000003ba0c : add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x39], cl ; ret 0xfc01
0x000000000003912c : add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x39], cl ; ret 0xff81
0x00000000000f28eb : add byte ptr [rbx + rcx*4 + 0xd], cl ; cmc ; retf
0x0000000000199c43 : add byte ptr [rbx + rcx*4 - 0x1eb7ffff], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000188c4b : add byte ptr [rbx + rdi*2 - 0x66f00000], dl ; out dx, al ; call rdx
0x00000000001a0c23 : add byte ptr [rbx + rdi*8 + 1], ch ; add byte ptr [rax - 0x5f], bh ; idiv edi ; retf
0x000000000017ab54 : add byte ptr [rbx + rdi*8 - 0x47c8f01], al ; jmp rax
0x000000000017a488 : add byte ptr [rbx + rdi*8], dh ; jmp rax
0x0000000000196423 : add byte ptr [rbx + rdx*2 + 1], ch ; add byte ptr [rax + 0x1c], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000186473 : add byte ptr [rbx + rdx*2 - 0x50b80000], bh ; in al, dx ; call qword ptr [rcx]
0x000000000019a433 : add byte ptr [rbx + rdx*4 + 1], bh ; add al, cl ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000019a463 : add byte ptr [rbx + rdx*4 - 0x15e7ffff], ch ; clc ; jmp qword ptr [rsi]
0x000000000019a3bb : add byte ptr [rbx + rdx*4], al ; add dword ptr [rax], eax ; push rax ; and al, 0xf6 ; jmp qword ptr [rsi]
0x00000000001983fb : add byte ptr [rbx + rsi*2 + 1], al ; add byte ptr [rax - 0x75], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000188413 : add byte ptr [rbx + rsi*2], bl ; add byte ptr [rax + 0x77], cl ; out dx, al ; call qword ptr [rsi]
0x00000000001983e3 : add byte ptr [rbx + rsi*2], ch ; add dword ptr [rax], eax ; pop rax ; mov esi, ebp ; jmp qword ptr [rcx]
0x000000000018c403 : add byte ptr [rbx + rsi*4], cl ; add byte ptr [rax + 0x70], ch ; out dx, eax ; jmp qword ptr [rcx]
0x000000000018c3eb : add byte ptr [rbx + rsi*4], dh ; add byte ptr [rax], al ; push rax ; jo 0x18c3ea ; jmp qword ptr [rcx]
0x00000000000db31f : add byte ptr [rbx - 0x15b43], al ; jmp qword ptr [rdx]
0x00000000000e6037 : add byte ptr [rbx - 0x1f17d783], cl ; retf
0x00000000000724cf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000009dfef : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000009dfe8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000009dfe1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000009dfda : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000009dfd3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000009dfcc : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000001160ff : add byte ptr [rbx - 0x3e7cb7ef], cl ; add al, 0xf ; retf 0x6348
0x00000000000ee12b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x000000000010f6a6 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x10f6b8 ; ret
0x00000000000fcd6f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0xfcd89 ; ret
0x00000000001211f7 : add byte ptr [rbx - 0x3f7cb7f6], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x0000000000100d57 : add byte ptr [rbx - 0x48], bl ; retf 0
0x000000000007c226 : add byte ptr [rbx - 0x4e], dh ; ret
0x000000000009e2c1 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x65e9
0x000000000009e2ac : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x00000000000589a2 : add byte ptr [rbx - 0x52343], al ; call qword ptr [rax]
0x000000000003b020 : add byte ptr [rbx - 0x71f0e908], al ; ret
0x00000000001230db : add byte ptr [rbx - 0x74c3dbac], cl ; or byte ptr [rcx], dil ; ret 0x2175
0x0000000000037194 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000e29cf : add byte ptr [rbx - 0x7613dbbc], cl ; ret 0xdaf7
0x00000000001555e7 : add byte ptr [rbx - 0x76b7d731], al ; ret 0x18e9
0x000000000002ad98 : add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000053219 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000008e5b4 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x0000000000020faf : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000154b68 : add byte ptr [rbx - 0x7ab7ef31], al ; retf -0x7af1
0x00000000000463ca : add byte ptr [rbx - 0x7aefdbbc], cl ; ror byte ptr [rdi], 0x84 ; retf -2
0x00000000000c553d : add byte ptr [rbx - 0x7bf00005], al ; ret 4
0x00000000000a447e : add byte ptr [rbx - 0x7bf09608], al ; retf
0x0000000000153fa6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000c44e7 : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret
0x00000000000c932f : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000d6887 : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x3904
0x00000000000eb53f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000049e3e : add byte ptr [rbx - 0x8bf43], al ; call qword ptr [rax]
0x0000000000055534 : add byte ptr [rbx - 0x90b43], al ; call qword ptr [rax]
0x000000000017dae4 : add byte ptr [rbx - 0xc], al ; call rax
0x00000000000fd63f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x000000000007db2e : add byte ptr [rbx - 0xd], bl ; ret
0x000000000017d4ac : add byte ptr [rbx - 0xe], cl ; call qword ptr [rax]
0x000000000018adbb : add byte ptr [rbx*4 - 0x3400000], al ; out dx, al ; jmp qword ptr [rax]
0x000000000004972b : add byte ptr [rbx], al ; add byte ptr [rax], al ; add rax, rdx ; jmp rax
0x00000000000fccfc : add byte ptr [rbx], al ; add byte ptr [rax], al ; call 0x128fa6
0x000000000017a404 : add byte ptr [rbx], dh ; sti ; jmp rax
0x000000000010bd47 : add byte ptr [rcx + 0x11894dd0], cl ; ret
0x0000000000053e46 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x0000000000156eca : add byte ptr [rcx + 0x21], cl ; ret 0x2be9
0x0000000000156e67 : add byte ptr [rcx + 0x21], cl ; ret 0x8149
0x000000000015702f : add byte ptr [rcx + 0x21], cl ; ret 0x8945
0x00000000001567ae : add byte ptr [rcx + 0x21], cl ; ret 0xc149
0x00000000000bf900 : add byte ptr [rcx + 0x22b8c7], cl ; add byte ptr [rax], al ; syscall
0x0000000000155018 : add byte ptr [rcx + 0x29], cl ; ret
0x00000000001449b5 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000000990a1 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x0000000000116bca : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x0000000000116dd2 : add byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x000000000013e36f : add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000053494 : add byte ptr [rcx + 0x358d8505], cl ; add byte ptr [rax + 0x63], cl ; ret 0x8948
0x000000000010a59f : add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000b5a48 : add byte ptr [rcx + 0x39], al ; ret 0xf40
0x0000000000093e1f : add byte ptr [rcx + 0x39], cl ; ret
0x0000000000041a28 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000010a4f6 : add byte ptr [rcx + 0x39], cl ; retf
0x000000000006f3ff : add byte ptr [rcx + 0x3d8b48f8], cl ; jmp rbx
0x00000000000f5c1a : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000e280e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000346c6 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000006e2e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000076e5d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000fe570 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000013e34f : add byte ptr [rcx + 0x4518811], cl ; ret
0x0000000000099d9f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000017ebd3 : add byte ptr [rcx + 0x4e], bl ; idiv edi ; pop rax ; retf 1
0x00000000000d179c : add byte ptr [rcx + 0x58d48c2], cl ; cli ; retf
0x00000000000d8e46 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x00000000000eba3a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00000000000732b2 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000784ff : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000012bbee : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008aa40 : add byte ptr [rcx + 0x63], cl ; add al, 0x90 ; add r8, rax ; jmp r8
0x00000000000dc517 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x00000000000434ff : add byte ptr [rcx + 0x63], cl ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0x000000000014f30c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000098c48 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000d2ddf : add byte ptr [rcx + 0x63], cl ; ret
0x000000000002cfbf : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x000000000003366f : add byte ptr [rcx + 0x7fffff], ch ; je 0x3366a ; ret
0x00000000000ea28f : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001198ac : add byte ptr [rcx + 0x9895], cl ; add bl, ch ; retf -0x74b8
0x0000000000114f0b : add byte ptr [rcx + 0xc6348c1], cl ; mov cl, byte ptr [rax + 1] ; retf -0x1d01
0x00000000000b799a : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x00000000000e1547 : add byte ptr [rcx + 0xf], al ; mov bh, 4 ; and al, 0x89 ; ret 0xe283
0x00000000000c7158 : add byte ptr [rcx + 0xf], al ; mov dh, 0x14 ; and al, 0x39 ; ret 0x840f
0x0000000000054e0f : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000007d244 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000009e1ca : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000002f598 : add byte ptr [rcx + 0xf], cl ; retf
0x00000000000f76c4 : add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 1] ; retf
0x00000000000f245c : add byte ptr [rcx + 1], cl ; fmul qword ptr [rax + 0x39] ; ret
0x000000000009d5bf : add byte ptr [rcx + 1], cl ; ret
0x00000000000cf16a : add byte ptr [rcx + 1], cl ; retf
0x00000000000e4497 : add byte ptr [rcx + 3], cl ; jbe 0xe44bb ; mov eax, ecx ; syscall
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000001a66b7 : add byte ptr [rcx + 5], cl ; add byte ptr [rax], al ; ret 4
0x0000000000156980 : add byte ptr [rcx + 9], cl ; ret 0x8948
0x00000000001a52e7 : add byte ptr [rcx + rax + 0x41a0000], ch ; add byte ptr [rax], al ; retf
0x0000000000191263 : add byte ptr [rcx + rax - 0x46a7ffff], ch ; call rsi
0x0000000000195273 : add byte ptr [rcx + rax*2 - 0x2797ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001991bb : add byte ptr [rcx + rax*4], al ; add dword ptr [rax], eax ; jo 0x19917f ; cmc ; call rdi
0x0000000000183a33 : add byte ptr [rcx + rbp], bh ; add al, cl ; or ch, bl ; jmp qword ptr [rcx]
0x00000000001a29fb : add byte ptr [rcx + rbx + 2], al ; add al, dh ; out 0xf7, al ; jmp qword ptr [rcx]
0x000000000018ea5b : add byte ptr [rcx + rbx*8 + 0xed00000], ah ; int1 ; jmp qword ptr [rdi]
0x000000000018ea73 : add byte ptr [rcx + rbx*8 + 0xee80000], bh ; int1 ; call qword ptr [rsi]
0x000000000006f19c : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x0000000000191a5b : add byte ptr [rcx + rcx - 0x221fffff], ah ; jmp qword ptr [rcx]
0x00000000000f7d1f : add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000067f0a : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000010e8b7 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1b8
0x000000000011de11 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x000000000010e018 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000010e8fc : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x1ba
0x00000000000bcae1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000bcbab : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000cf908 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x448b
0x00000000000a7d41 : add byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 8 ; call 0x43fe8
0x000000000008a9d7 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x0000000000126242 : add byte ptr [rcx + rcx*4 - 0x10], al ; syscall
0x0000000000073caf : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x207ae
0x00000000000fadde : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0xf7846
0x000000000002df31 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000002287d : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000073cbf : add byte ptr [rcx + rcx*4 - 0x11], cl ; xor r13d, r13d ; call 0x207b1
0x00000000000824f2 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r8 ; call rax
0x0000000000108414 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000f1e7c : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 1 ; syscall
0x000000000002b4b7 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov eax, 3 ; syscall
0x00000000000e0437 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rsi, rbp ; call 0xdceb9
0x000000000007cfda : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x00000000000e84ca : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x00000000000ee03e : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, r12d ; syscall
0x000000000008a5e2 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x000000000006f1e6 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007fe04 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000014dbff : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000000fadc0 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0xf7846
0x000000000002b613 : add byte ptr [rcx + rcx*4 - 1], cl ; mov eax, ecx ; syscall
0x0000000000023bd9 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x205f6
0x000000000007d7c4 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000114b18 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000001899db : add byte ptr [rcx + rcx*4], ah ; add byte ptr [rax], al ; ret 0xffee
0x00000000001588b4 : add byte ptr [rcx + rdi + 0x48], dh ; add esp, 0x38 ; ret
0x00000000000804e8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x804b7 ; ret
0x0000000000158bfc : add byte ptr [rcx + rdi*2 + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000198a5b : add byte ptr [rcx + rdi*2 - 0x648fffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001989d3 : add byte ptr [rcx + rdi*2], bl ; add dword ptr [rax], eax ; test al, 0x99 ; cmc ; jmp rsi
0x00000000001961fb : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], al ; sbb ch, dh ; call qword ptr [rsi]
0x0000000000196213 : add byte ptr [rcx + rdx*2 + 1], bl ; add byte ptr [rax], cl ; sbb ch, dh ; jmp qword ptr [rcx]
0x00000000001861cb : add byte ptr [rcx + rdx*2], dl ; add byte ptr [rax], al ; xor byte ptr [rsp + rbp*8], ch ; jmp rdi
0x000000000018a213 : add byte ptr [rcx + rdx*4], bl ; add al, cl ; fucomi st(6) ; call rcx
0x000000000019e1fb : add byte ptr [rcx + rdx*8 + 1], al ; add al, dl ; and edi, esi ; call rax
0x000000000019826b : add byte ptr [rcx + rsi*2 - 0x766fffff], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000198253 : add byte ptr [rcx + rsi*2 - 0x7687ffff], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019823b : add byte ptr [rcx + rsi*2 - 0x769fffff], al ; cmc ; jmp qword ptr [rcx]
0x00000000001981c3 : add byte ptr [rcx + rsi*2], cl ; add dword ptr [rax], eax ; call 0x2219775d
0x0000000000190243 : add byte ptr [rcx + rsi*8 + 0x4080000], cl ; call rsi
0x00000000001901fb : add byte ptr [rcx + rsi*8], al ; add al, al ; add dh, dl ; jmp qword ptr [rcx]
0x000000000017c584 : add byte ptr [rcx - 0x11], bl ; call rax
0x0000000000191df3 : add byte ptr [rcx - 0x1587ffff], bh ; jmp qword ptr [rcx]
0x00000000000024b7 : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00000000000a056c : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000004151e : add byte ptr [rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000e9b68 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000000e10ef : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000ae2b4 : add byte ptr [rcx - 0x45], al ; add eax, dword ptr [rax] ; add cl, ch ; retf
0x0000000000031204 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x000000000010c10f : add byte ptr [rcx - 0x6535ff12], al ; cmp ecx, dword ptr [rax - 0x77] ; ret 0x9ceb
0x000000000017a73c : add byte ptr [rcx - 0x6f6f0005], dl ; sti ; jmp qword ptr [rax]
0x000000000015627f : add byte ptr [rcx - 0x73], al ; ret
0x0000000000117a52 : add byte ptr [rcx - 0x74bb9b11], cl ; and ebp, eax ; ret 0xfcb1
0x000000000006c8df : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000002f49f : add byte ptr [rcx - 0x75], al ; push rbp ; sbb byte ptr [rdi], cl ; retf -0x2d77
0x00000000000bd721 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000035cf4 : add byte ptr [rcx - 0x75], cl ; cmp al, 0x24 ; call r14
0x0000000000036a37 : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000c2ce7 : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x00000000000d2ddb : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000004194b : add byte ptr [rcx - 0x75], cl ; ret
0x0000000000127586 : add byte ptr [rcx - 0x75], cl ; sub byte ptr [rax - 0x77], r9b ; ret 0xe281
0x00000000001008a7 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000008aaa7 : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000262e4 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000cb964 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000005809a : add byte ptr [rcx - 0x77], al ; ret 0x408d
0x00000000000257f9 : add byte ptr [rcx - 0x77], al ; ret 0x415e
0x000000000002895b : add byte ptr [rcx - 0x77], al ; ret 0x8949
0x000000000004c5db : add byte ptr [rcx - 0x77], al ; ret 0x8d41
0x00000000000cb919 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000010ba5c : add byte ptr [rcx - 0x77], al ; retf
0x000000000002b96d : add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x0000000000020af6 : add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x000000000010d7e9 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000003ad79 : add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000030c22 : add byte ptr [rcx - 0x77], cl ; ret 0x49e9
0x000000000003d68a : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000a78aa : add byte ptr [rcx - 0x77], cl ; ret 0x9066
0x00000000000843d3 : add byte ptr [rcx - 0x77], cl ; retf
0x00000000000f08cf : add byte ptr [rcx - 0x77], cl ; retf -0x1648
0x00000000000eb35f : add byte ptr [rcx - 0x77], cl ; retf -0x2748
0x00000000000ee25f : add byte ptr [rcx - 0x77], cl ; retf -0x3f48
0x00000000000e6ee5 : add byte ptr [rcx - 0x77], cl ; retf -0x3f7b
0x00000000000ee1cf : add byte ptr [rcx - 0x77], cl ; retf -0x4148
0x00000000000ee2ef : add byte ptr [rcx - 0x77], cl ; retf -0x4248
0x00000000000ee34f : add byte ptr [rcx - 0x77], cl ; retf -0x4348
0x00000000000853cc : add byte ptr [rcx - 0x77], cl ; retf -0x46bf
0x00000000000f092f : add byte ptr [rcx - 0x77], cl ; retf -0x5048
0x00000000000f0a4f : add byte ptr [rcx - 0x77], cl ; retf -0x5a48
0x00000000000f0b0f : add byte ptr [rcx - 0x77], cl ; retf -0x6248
0x00000000000f0c5f : add byte ptr [rcx - 0x77], cl ; retf 0x1eb8
0x00000000000f071f : add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000f036f : add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x00000000000f0cef : add byte ptr [rcx - 0x77], cl ; retf 0x2fb8
0x0000000000116b2f : add byte ptr [rcx - 0x77], cl ; retf 0x334c
0x0000000000116d37 : add byte ptr [rcx - 0x77], cl ; retf 0x334d
0x00000000000f14cf : add byte ptr [rcx - 0x77], cl ; retf 0x35b8
0x00000000000f0d4f : add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x00000000000f0f9f : add byte ptr [rcx - 0x77], cl ; retf 0x37b8
0x00000000000bf75f : add byte ptr [rcx - 0x77], cl ; retf 0x3db8
0x00000000000e36ff : add byte ptr [rcx - 0x77], cl ; retf 0x4b8
0x00000000000691af : add byte ptr [rcx - 0x77], cl ; retf 0x6348
0x00000000000e3dcf : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x00000000000e3e8f : add byte ptr [rcx - 0x77], cl ; retf 0xbb8
0x0000000000155286 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000157cce : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx - 0x77], 1 ; ret 0x2941
0x00000000001012ab : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000156e51 : add byte ptr [rcx - 0x7b], cl ; ret 0x1474
0x00000000001565a9 : add byte ptr [rcx - 0x7b], cl ; retf -0x7bf1
0x00000000000d621f : add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4901
0x0000000000063356 : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x0000000000029d42 : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000020aac : add byte ptr [rcx - 0x7d], al ; retf 0x31ff
0x00000000000b33e6 : add byte ptr [rcx - 0x7d], al ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x000000000002c3e1 : add byte ptr [rcx - 0x7d], cl ; mov byte ptr [rcx], 0x83 ; ret
0x000000000002339e : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000031d9f : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000087e77 : add byte ptr [rcx - 0x7d], cl ; ret 0x4601
0x0000000000023317 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000039eb7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000012923f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008b0af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000ec40f : add byte ptr [rcx - 0x7d], cl ; retf 0x4801
0x00000000000ec3ff : add byte ptr [rcx - 0x7d], cl ; retf 0x4c01
0x0000000000037a1c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000818c9 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x0000000000110f9f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x000000000007816f : add byte ptr [rcx - 0x80], al ; retf
0x000000000007b3fe : add byte ptr [rcx - 0x80], al ; stc ; add dword ptr [rdi + rcx + 0x44], eax ; retf 0x2a8
0x00000000001126a7 : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000e77f4 : add byte ptr [rcx - 0x9cb70a], cl ; mov eax, ecx ; syscall
0x00000000000253af : add byte ptr [rcx - 0xa], al ; ret 0x4801
0x0000000000026472 : add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000000000017967f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008e782 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008e7a8 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000017ec3c : add byte ptr [rcx - 9], dl ; call rax
0x000000000018ddc3 : add byte ptr [rcx*8 - 0x24a80000], cl ; sti ; call qword ptr [rax]
0x00000000000b5b0d : add byte ptr [rcx], 0 ; add al, ch ; retf -0x955
0x000000000002820d : add byte ptr [rcx], 0 ; add al, ch ; retf 0x4a
0x000000000017ded1 : add byte ptr [rcx], 0 ; sal byte ptr [rcx], 0xf5 ; call rax
0x0000000000188ab7 : add byte ptr [rcx], 2 ; mov edi, 0x41380e0a ; ret
0x000000000000ba0d : add byte ptr [rcx], ah ; add ah, ah ; ret
0x000000000000cf3d : add byte ptr [rcx], ah ; add al, ch ; ret
0x000000000000f9e5 : add byte ptr [rcx], ah ; add al, dl ; ret 0x3a
0x00000000000105e5 : add byte ptr [rcx], ah ; add byte ptr [rax], ah ; ret
0x000000000000b695 : add byte ptr [rcx], ah ; add byte ptr [rax], bl ; ret
0x000000000016f2eb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000007b227 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000002d189 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000113cb1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x207a6
0x00000000000dbf13 : add byte ptr [rcx], al ; add byte ptr [rax], al ; cmove rdi, rbx ; call r14
0x000000000011d5d1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1b5d : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000009d7cf : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000da039 : add byte ptr [rcx], al ; jne 0xda07d ; ret
0x000000000002ced4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x0000000000159cad : add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107b8d : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000120d3f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000054b56 : add byte ptr [rcx], al ; ret
0x00000000000aac37 : add byte ptr [rcx], bh ; ret
0x0000000000034e70 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000c9067 : add byte ptr [rcx], bh ; retf
0x00000000000d14e3 : add byte ptr [rcx], bh ; retf -0x77c0
0x00000000000c95cf : add byte ptr [rcx], bh ; retf 0x337e
0x000000000018b223 : add byte ptr [rcx], ch ; add byte ptr [rax], ch ; or bh, ch ; jmp rdx
0x00000000000842e6 : add byte ptr [rcx], ch ; ret
0x00000000000b5912 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000b908a : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000ad154 : add byte ptr [rcx], ch ; ret 0x8548
0x00000000000b6e37 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000001495fd : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000032ede : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000b8fa3 : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000b6f86 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000b8ffa : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000e7811 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000001a78ff : add byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rbp + 5], dh ; add byte ptr [rax], al ; ret
0x000000000000b4bf : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000100e91 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00000000000c9144 : add byte ptr [rcx], cl ; ret
0x0000000000038f5f : add byte ptr [rcx], cl ; retf 0xb8
0x00000000000d1d74 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; enter -0x72b8, 0x14 ; retf 0x16eb
0x0000000000154bc6 : add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf -0x17d
0x0000000000154df0 : add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf -0x27d
0x00000000000c39fd : add byte ptr [rcx], dh ; fucomi st(0) ; jmp 0xc39d3
0x00000000000c13fd : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x000000000003347f : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x0000000000119de0 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000af8d7 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000036d7c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008e0cc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000002cfcf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x0000000000039577 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000036b9b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009d872 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000014e4bf : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000000e5eb1 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0xb3 ; ret
0x0000000000021208 : add byte ptr [rcx], dh ; sar byte ptr [rax + 2], cl ; syscall
0x0000000000126786 : add byte ptr [rcx], dh ; shr al, 0x62 ; ret 0xfffb
0x00000000000fd2c0 : add byte ptr [rcx], dh ; test byte ptr [rax + 0x63], 0xfa ; syscall
0x000000000000ba0b : add byte ptr [rcx], dl ; add byte ptr [rcx], ah ; add ah, ah ; ret
0x000000000000cf3b : add byte ptr [rcx], dl ; add byte ptr [rcx], ah ; add al, ch ; ret
0x000000000000f9e3 : add byte ptr [rcx], dl ; add byte ptr [rcx], ah ; add al, dl ; ret 0x3a
0x00000000000105e3 : add byte ptr [rcx], dl ; add byte ptr [rcx], ah ; add byte ptr [rax], ah ; ret
0x000000000000b693 : add byte ptr [rcx], dl ; add byte ptr [rcx], ah ; add byte ptr [rax], bl ; ret
0x0000000000113caf : add byte ptr [rdi + 0x100], bh ; call 0x207a8
0x000000000013109a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000001928b8 : add byte ptr [rdi + 0xe], cl ; adc byte ptr [rbx + 0xa5d0202], al ; ret
0x000000000017d7c0 : add byte ptr [rdi + 1], cl ; add byte ptr [rax + 0x51], al ; jmp qword ptr [rax]
0x000000000009f264 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001a5687 : add byte ptr [rdi + 5], ch ; add byte ptr [rax], al ; retf 3
0x00000000001a46ff : add byte ptr [rdi + 6], ah ; add byte ptr [rax], al ; mov dword ptr [rbx], eax ; add byte ptr [rax], al ; retf
0x0000000000154994 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000018983b : add byte ptr [rdi + rax*4 - 0x41100000], al ; out dx, al ; jmp qword ptr [rax]
0x0000000000189803 : add byte ptr [rdi + rax*4], cl ; add byte ptr [rax - 0x44], cl ; out dx, al ; call rbx
0x0000000000193ffb : add byte ptr [rdi + rbp + 1], al ; add byte ptr [rax], al ; push rax ; hlt ; jmp qword ptr [rcx]
0x0000000000194013 : add byte ptr [rdi + rbp + 1], bl ; add byte ptr [rax], bl ; push rax ; hlt ; jmp qword ptr [rcx]
0x000000000019402b : add byte ptr [rdi + rbp + 1], dh ; add byte ptr [rax], dh ; push rax ; hlt ; jmp qword ptr [rcx]
0x0000000000198013 : add byte ptr [rdi + rbp*2 + 1], bl ; add byte ptr [rax], bh ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000019802b : add byte ptr [rdi + rbp*2 + 1], dh ; add byte ptr [rax - 0x79], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000198073 : add byte ptr [rdi + rbp*2 - 0x7867ffff], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019805b : add byte ptr [rdi + rbp*2 - 0x787fffff], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000198043 : add byte ptr [rdi + rbp*2 - 0x7897ffff], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018c073 : add byte ptr [rdi + rbp*4 - 0x2b980000], bh ; cld ; call qword ptr [rdx]
0x000000000019000b : add byte ptr [rdi + rbp*8], dl ; add al, dl ; sti ; int1 ; call qword ptr [rcx]
0x00000000001a3ff3 : add byte ptr [rdi + rbp], bh ; add al, byte ptr [rax] ; sub byte ptr [rdx], cl ; sti ; call rax
0x0000000000193fe3 : add byte ptr [rdi + rbp], ch ; add dword ptr [rax], eax ; call 0x22193444
0x0000000000193fcb : add byte ptr [rdi + rbp], dl ; add dword ptr [rax], eax ; ror byte ptr [rdi - 0xc], 1 ; jmp qword ptr [rcx]
0x000000000019703b : add byte ptr [rdi + rbx*2 + 0x43e00001], al ; cmc ; jmp qword ptr [rcx]
0x0000000000197023 : add byte ptr [rdi + rbx*2 + 1], ch ; add al, cl ; cmc ; jmp qword ptr [rcx]
0x0000000000196ff3 : add byte ptr [rdi + rbx*2], bh ; add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rcx]
0x00000000001a2fcb : add byte ptr [rdi + rbx], dl ; add al, byte ptr [rax] ; jo 0x1a3043 ; sti ; jmp qword ptr [rdx]
0x000000000018300b : add byte ptr [rdi + rbx], dl ; add byte ptr [rax], dl ; fsubr st(2) ; call qword ptr [rdx]
0x0000000000111128 : add byte ptr [rdi + rcx - 0x4a], al ; cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x000000000019604b : add byte ptr [rdi + rcx*2 + 0x14e00001], dl ; cmc ; jmp qword ptr [rcx]
0x000000000019a073 : add byte ptr [rdi + rcx*4 - 0x737ffff], bh ; cmc ; call qword ptr [rdx]
0x000000000002cdd4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x0000000000191ff3 : add byte ptr [rdi + rcx], bh ; add dword ptr [rax], eax ; fdiv st(2) ; jmp rcx
0x000000000018904b : add byte ptr [rdi + rdi*2 - 0x5ba00000], dl ; out dx, al ; jmp rsp
0x0000000000194fbb : add byte ptr [rdi + rdi], al ; add dword ptr [rax], eax ; and dl, dl ; hlt ; jmp qword ptr [rcx]
0x0000000000194fd3 : add byte ptr [rdi + rdi], bl ; add dword ptr [rax], eax ; cmp dl, dl ; hlt ; jmp qword ptr [rcx]
0x0000000000188873 : add byte ptr [rdi + rsi*2 - 0x7cd80000], bh ; out dx, al ; call rsi
0x0000000000188843 : add byte ptr [rdi + rsi*2 - 0x7d380000], cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000018c823 : add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x73], bh ; out dx, eax ; call qword ptr [rdx]
0x00000000001907db : add byte ptr [rdi + rsi*8], ah ; add byte ptr [rax], al ; nop ; pop rax ; call qword ptr [rax]
0x00000000001907c3 : add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rax]
0x000000000017ea3c : add byte ptr [rdi + rsi*8], dl ; lcall ptr [rax] ; ret 1
0x000000000018482b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], ah ; xor ch, bl ; jmp qword ptr [rbx]
0x0000000000194de3 : add byte ptr [rdi - 0x3067ffff], ch ; hlt ; jmp qword ptr [rsi]
0x0000000000194dcb : add byte ptr [rdi - 0x307fffff], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000bfccf : add byte ptr [rdi - 0x48], bl ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000c0fc8 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000190de3 : add byte ptr [rdi*8 - 0x56280000], ch ; jmp qword ptr [rdi]
0x000000000018f7fb : add byte ptr [rdi], al ; add byte ptr [rax - 0x4a], ah ; int1 ; jmp qword ptr [rcx]
0x0000000000007367 : add byte ptr [rdi], bh ; add eax, 0 ; add byte ptr [rax], al ; ret 0x55
0x00000000000337e0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000021417 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000021445 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x00000000000fd487 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x0000000000132a16 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000009dec7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000020c1a : add byte ptr [rdi], cl ; lahf ; ret 0xff31
0x0000000000133a4f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000f1931 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cf6d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2cefe ; loopne 0x2cf7e ; ret
0x00000000000f32f4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xf3285 ; loopne 0xf3305 ; ret
0x0000000000133abf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000c71de : add byte ptr [rdi], cl ; mov dh, 0x34 ; mov al, 0x39 ; retf
0x0000000000026339 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c45ef : add byte ptr [rdi], cl ; mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006aa87 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008c34f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007850f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000014a05f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e82f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008e5ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008e5ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008e5df : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008a8af : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000008a76f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000008e0ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008e12f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008e11f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008e10f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000335d7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000ba1e1 : add byte ptr [rdi], cl ; ret
0x00000000000b84c0 : add byte ptr [rdi], cl ; ret 0x144
0x0000000000029fd0 : add byte ptr [rdi], cl ; ret 0x4389
0x000000000007e647 : add byte ptr [rdi], cl ; ret 0x4489
0x00000000000d1056 : add byte ptr [rdi], cl ; ret 0x813b
0x00000000000411de : add byte ptr [rdi], cl ; ret 0x8539
0x0000000000127333 : add byte ptr [rdi], cl ; ret 0x8941
0x000000000011ab2b : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000fa241 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000e68ea : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000da89b : add byte ptr [rdi], cl ; ret 0x9be9
0x00000000000a85ee : add byte ptr [rdi], cl ; ret 0xc3f3
0x000000000003af73 : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000b6449 : add byte ptr [rdi], cl ; ret 0xd801
0x00000000001449af : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000000da886 : add byte ptr [rdi], cl ; test byte ptr [rdx + 0x3d000006], bl ; retf 0
0x00000000000e382f : add byte ptr [rdi], cl ; test byte ptr [rdx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000002fcee : add byte ptr [rdi], cl ; test dl, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000000000002b9ca : add byte ptr [rdi], cl ; xchg bh, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000003e3d5 : add byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], bl ; ret
0x0000000000054a03 : add byte ptr [rdi], cl ; xchg dword ptr [rdi], esi ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000156bb2 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x60e9
0x0000000000117f1b : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000149547 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000001552eb : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000ceb5e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x0000000000068b9c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x000000000017a3cc : add byte ptr [rdi], dh ; sti ; jmp rax
0x000000000007f396 : add byte ptr [rdx + 0x11d7], bh ; call 0x7b628
0x000000000007f3e1 : add byte ptr [rdx + 0x121f], bh ; call 0x7b628
0x000000000007f3b5 : add byte ptr [rdx + 0x1243], bh ; call 0x7b628
0x000000000002bffb : add byte ptr [rdx + 0x14], dl ; add bl, dh ; ret
0x00000000000e0a8d : add byte ptr [rdx + 0x18c], bh ; call 0x2cce8
0x000000000014066f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000013c33f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009b1bf : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000c497d : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000a028e : add byte ptr [rdx + 0x86], bh ; call 0x2cce8
0x000000000011021b : add byte ptr [rdx + 0xb7], bh ; call 0x2cce8
0x00000000001101fc : add byte ptr [rdx + 0xb9], bh ; call 0x2cce8
0x00000000001a4cd7 : add byte ptr [rdx + 2], al ; add byte ptr [rax], al ; retf 0
0x0000000000120ca3 : add byte ptr [rdx + 5], bh ; call 0x2d6b8
0x0000000000021e67 : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000000f25e3 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x000000000009f90a : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000019531b : add byte ptr [rdx + rax*2 + 1], ah ; add al, ah ; fxtract ; jmp qword ptr [rcx]
0x0000000000195333 : add byte ptr [rdx + rax*2 + 1], bh ; add al, bh ; fxtract ; jmp qword ptr [rcx]
0x0000000000195303 : add byte ptr [rdx + rax*2 + 1], cl ; add al, cl ; fxtract ; jmp qword ptr [rcx]
0x000000000019534b : add byte ptr [rdx + rax*2 - 0x25efffff], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001952eb : add byte ptr [rdx + rax*2], dh ; add dword ptr [rax], eax ; mov al, 0xd9 ; hlt ; jmp qword ptr [rcx]
0x000000000019d2db : add byte ptr [rdx + rax*8], ah ; add dword ptr [rax], eax ; rcr dh, 0xf6 ; jmp qword ptr [rdi]
0x00000000001a3b5b : add byte ptr [rdx + rbp + 0x3b700002], ah ; clc ; call qword ptr [rax]
0x00000000001a3b2b : add byte ptr [rdx + rbp + 2], dh ; add byte ptr [rax + 0x3b], dl ; clc ; call qword ptr [rdi]
0x0000000000197b43 : add byte ptr [rdx + rbp*2 + 0x67480001], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000197b5b : add byte ptr [rdx + rbp*2 + 0x67600001], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000197b13 : add byte ptr [rdx + rbp*2 + 1], bl ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000187b0b : add byte ptr [rdx + rbp*2], dl ; add byte ptr [rax], dl ; pop rsi ; out dx, al ; jmp qword ptr [rdi]
0x0000000000197acb : add byte ptr [rdx + rbp*2], dl ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000033674 : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x000000000018fae3 : add byte ptr [rdx + rbp*8], ch ; add byte ptr [rax], al ; cwde ; ret
0x00000000001a2b4b : add byte ptr [rdx + rbx + 0x6d300002], dl ; sti ; jmp qword ptr [rdx]
0x0000000000196b23 : add byte ptr [rdx + rbx*2 + 1], ch ; add byte ptr [rax + 0x2f], ch ; cmc ; jmp rdi
0x000000000018ab13 : add byte ptr [rdx + rbx*4], bl ; add byte ptr [rax - 8], bh ; out dx, al ; call rsp
0x00000000000fe8ab : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000869c3 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001618d7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000191b63 : add byte ptr [rdx + rcx - 0x1e07ffff], ch ; jmp qword ptr [rcx]
0x000000000018dac3 : add byte ptr [rdx + rcx*8], cl ; add byte ptr [rax], al ; or ah, al ; sti ; call rsp
0x0000000000194b53 : add byte ptr [rdx + rdi + 0x3e580001], bl ; stc ; call qword ptr [rax]
0x0000000000194b73 : add byte ptr [rdx + rdi - 0x3a67ffff], bh ; hlt ; call qword ptr [rax]
0x0000000000198b23 : add byte ptr [rdx + rdi*2 + 1], ch ; add al, bh ; sahf ; cmc ; call qword ptr [rdx]
0x000000000018cb6b : add byte ptr [rdx + rdi*4 - 0x7e400000], dh ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000194aeb : add byte ptr [rdx + rdi], dh ; add dword ptr [rax], eax ; rol ch, 1 ; hlt ; call qword ptr [rsi]
0x00000000001a2313 : add byte ptr [rdx + rdx + 2], bl ; add al, bh ; fcompi st(7) ; call qword ptr [rsi]
0x0000000000196373 : add byte ptr [rdx + rdx*2 + 0x1bb80001], bh ; cmc ; jmp qword ptr [rbx]
0x00000000001962e3 : add byte ptr [rdx + rdx*2], ch ; add dword ptr [rax], eax ; cwde ; sbb ebp, esi ; jmp qword ptr [rsi]
0x00000000001962cb : add byte ptr [rdx + rdx*2], dl ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf5 ; jmp qword ptr [rsi]
0x000000000019a32b : add byte ptr [rdx + rdx*4 + 1], dh ; add al, al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000018a31b : add byte ptr [rdx + rdx*4], ah ; add byte ptr [rax - 0x20], dl ; out dx, al ; jmp qword ptr [rsi]
0x000000000018e333 : add byte ptr [rdx + rdx*8], bh ; add al, cl ; cli ; sti ; call rsp
0x00000000001822eb : add byte ptr [rdx + rdx], dh ; add byte ptr [rax], al ; nop ; insb byte ptr [rdi], dx ; std ; jmp qword ptr [rdi]
0x00000000001982fb : add byte ptr [rdx + rsi*2 + 1], al ; add byte ptr [rax], ah ; mov dh, ch ; jmp qword ptr [rcx]
0x0000000000198343 : add byte ptr [rdx + rsi*2 - 0x7597ffff], cl ; cmc ; call qword ptr [rsi]
0x0000000000189163 : add byte ptr [rdx - 0x57280000], ah ; out dx, al ; jmp rdx
0x00000000000f5d97 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000f5d96 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x000000000017f58c : add byte ptr [rdx - 8], al ; call rax
0x00000000001965e3 : add byte ptr [rdx*2 + 0x20780001], ch ; cmc ; jmp rdx
0x000000000018e5eb : add byte ptr [rdx*8 + 0x41800000], dh ; cld ; call qword ptr [rbx]
0x00000000001808c9 : add byte ptr [rdx], 0 ; loopne 0x180872 ; cli ; call qword ptr [rax]
0x00000000000f16be : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000002cf26 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000010f336 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000f8747 : add byte ptr [rdx], al ; call rax
0x000000000002ce34 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000016f77a : add byte ptr [rdx], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 6], bl ; jmp rax
0x000000000017d79b : add byte ptr [rdx], bl ; call qword ptr [rax]
0x00000000001a66b3 : add byte ptr [rdx], bl ; or byte ptr [rax], al ; add byte ptr [rcx + 5], cl ; add byte ptr [rax], al ; ret 4
0x00000000000d42ae : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000013d7 : add byte ptr [rdx], cl ; add eax, 0x50d0000 ; add byte ptr [rax], al ; syscall
0x00000000000f8b90 : add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ecf3f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016b357 : add byte ptr [rdx], dl ; add byte ptr [rip - 0x11092f00], cl ; jmp rsp
0x0000000000000764 : add byte ptr [rdx], dl ; retf
0x000000000016f30b : add byte ptr [rip + 0x10], al ; retf 8
0x00000000001285c2 : add byte ptr [rip + 0x3d8d4800], al ; out dx, al ; ret
0x00000000000fdcb3 : add byte ptr [rip + 0x450f4800], al ; ret 0xf6c3
0x000000000017f6b8 : add byte ptr [rip + 0x57700002], al ; clc ; jmp qword ptr [rax]
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x000000000016b359 : add byte ptr [rip - 0x11092f00], cl ; jmp rsp
0x0000000000126987 : add byte ptr [rsi + 0x80002], bh ; mov eax, ecx ; syscall
0x00000000000fcd57 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000011d9d7 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149405 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014f614 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004ebb5 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000033dbf : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x27e8
0x000000000005157c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000004ebfe : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x68e8
0x0000000000051aef : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8d4c
0x0000000000033e3c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xaae8
0x00000000000eb87c : add byte ptr [rsi + 0xf], ah ; push rsp ; retf
0x000000000008e50c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e034 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000aeedf : add byte ptr [rsi + 0xf], ah ; xlatb ; retf -0x7ab8
0x0000000000051aee : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x8d4c
0x000000000004c877 : add byte ptr [rsi + 1], bh ; jmp rax
0x000000000017d8e8 : add byte ptr [rsi + 1], dl ; add byte ptr [rax], al ; jmp qword ptr [rax]
0x00000000000e1b77 : add byte ptr [rsi + 6], dh ; ret
0x00000000000ebfef : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x000000000018176b : add byte ptr [rsi + rax + 0x77800000], dh ; std ; jmp qword ptr [rdx]
0x0000000000191773 : add byte ptr [rsi + rax - 0x2f67ffff], bh ; call rsi
0x00000000000c0f0c : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001956c3 : add byte ptr [rsi + rax*2], cl ; add dword ptr [rax], eax ; sub al, ch ; hlt ; jmp qword ptr [rcx]
0x000000000019975b : add byte ptr [rsi + rax*4 - 0x2fafffff], ah ; cmc ; call rsi
0x0000000000084e71 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000159caa : add byte ptr [rsi + rax*8], ah ; add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000018d6fb : add byte ptr [rsi + rax*8], al ; add byte ptr [rax], dl ; shr edi, 1 ; jmp qword ptr [rax]
0x00000000001a741f : add byte ptr [rsi + rax], dl ; add byte ptr [rax], al ; ret
0x0000000000193f43 : add byte ptr [rsi + rbp + 0x4f880001], cl ; hlt ; call qword ptr [rsi]
0x0000000000187707 : add byte ptr [rsi + rbp*4], al ; retf
0x000000000018ff43 : add byte ptr [rsi + rbp*8 - 0x4780000], cl ; int1 ; call qword ptr [rcx]
0x000000000018fed3 : add byte ptr [rsi + rbp*8], bl ; add byte ptr [rax], al ; clc ; cli ; int1 ; jmp rcx
0x0000000000196f43 : add byte ptr [rsi + rbx*2 + 0x42b80001], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000196f5b : add byte ptr [rsi + rbx*2 + 0x42d00001], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018af43 : add byte ptr [rsi + rbx*4 - 0x180000], cl ; out dx, al ; call qword ptr [rdx]
0x000000000018eefb : add byte ptr [rsi + rbx*8], al ; add al, ah ; sbb esi, ecx ; call qword ptr [rdx]
0x000000000018eee3 : add byte ptr [rsi + rbx*8], ch ; add byte ptr [rax], al ; call 0x1118e010
0x000000000018eecb : add byte ptr [rsi + rbx*8], dl ; add byte ptr [rax], al ; loopne 0x18eef5 ; int1 ; call qword ptr [rdx]
0x00000000001a2ee3 : add byte ptr [rsi + rbx], ch ; add al, byte ptr [rax] ; sub byte ptr [rdx - 5], ch ; jmp qword ptr [rdx]
0x00000000001a2870 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x0000000000191f73 : add byte ptr [rsi + rcx - 0xf37ffff], bh ; jmp qword ptr [rdi]
0x0000000000195ee3 : add byte ptr [rsi + rcx*2], ch ; add dword ptr [rax], eax ; clc ; adc ebp, esi ; call rdx
0x0000000000189f4b : add byte ptr [rsi + rcx*4 - 0x2cf00000], dl ; out dx, al ; call qword ptr [rax]
0x000000000018decb : add byte ptr [rsi + rcx*8], dl ; add byte ptr [rax], al ; cmp bl, 0xfb ; jmp qword ptr [rax]
0x0000000000194f73 : add byte ptr [rsi + rdi - 0x2e57ffff], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000194f5b : add byte ptr [rsi + rdi - 0x2e6fffff], ah ; hlt ; jmp qword ptr [rcx]
0x0000000000190f0b : add byte ptr [rsi + rdi*8], dl ; add byte ptr [rax - 0x55], dh ; call rdi
0x0000000000196773 : add byte ptr [rsi + rdx*2 + 0x22d80001], bh ; cmc ; jmp rdx
0x000000000019a723 : add byte ptr [rsi + rdx*4 + 1], ch ; add byte ptr [rax], bl ; out dx, eax ; sti ; jmp qword ptr [rsi]
0x000000000019476b : add byte ptr [rsi + rsi - 0x61efffff], dh ; hlt ; jmp qword ptr [rdx]
0x000000000019073b : add byte ptr [rsi + rsi*8 + 0x2c900000], al ; call rsp
0x00000000000f0c8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x00000000000f0d1d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x134 ; syscall
0x00000000000f146d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x00000000000f0e6d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x31 ; syscall
0x00000000000f0fcd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x00000000000f0f3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x34 ; syscall
0x00000000000f1d2d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x43 ; syscall
0x00000000000e3ebd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x00000000000e3dfd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x00000000000f0b9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000000f039d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x00000000000e1fed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x00000000000eb38d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x00000000000e876d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x00000000000f06ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x9e ; syscall
0x00000000000f074d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x00000000000f08fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb1 ; syscall
0x00000000000f0aad : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x00000000000ee22d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x00000000000ee28d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x00000000000ee16d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x00000000000ee31d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x00000000000f095d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x000000000007782d : add byte ptr [rsi - 0x70], ah ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000017a954 : add byte ptr [rsi - 0x726f0005], cl ; sti ; jmp qword ptr [rax]
0x0000000000180d54 : add byte ptr [rsi], 0xfd ; jmp qword ptr [rax]
0x00000000001a759b : add byte ptr [rsi], bh ; or byte ptr [rax], al ; add byte ptr [rax + 3], bh ; add byte ptr [rax], al ; retf
0x000000000017da7c : add byte ptr [rsi], ch ; hlt ; jmp qword ptr [rax]
0x000000000018b703 : add byte ptr [rsi], cl ; add al, ch ; cmp al, 0xef ; jmp rsp
0x00000000000060d7 : add byte ptr [rsi], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xf
0x00000000000e75a2 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000018756b : add byte ptr [rsp + 0x49600000], dh ; out dx, al ; call rdi
0x000000000019754b : add byte ptr [rsp + 0x57100001], dl ; cmc ; call qword ptr [rdx]
0x0000000000187373 : add byte ptr [rsp + rax + 0x44e80000], dh ; out dx, al ; jmp rbx
0x000000000019154b : add byte ptr [rsp + rax - 0x368fffff], dl ; call rdi
0x00000000000e10c9 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000195523 : add byte ptr [rsp + rax*2 + 1], ch ; add byte ptr [rax], cl ; loop 0x195527 ; call qword ptr [rax]
0x000000000005c5b3 : add byte ptr [rsp + rax*2 - 0x75], ah ; sub cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000e6569 : add byte ptr [rsp + rax*2 - 0x77], ah ; and esi, dword ptr [rcx] ; fucomi st(1) ; retf
0x000000000005c386 : add byte ptr [rsp + rax*2 - 0x77], ah ; sub cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000001954d3 : add byte ptr [rsp + rax*2], bl ; add dword ptr [rax], eax ; clc ; xor al, 0xf9 ; call qword ptr [rax]
0x000000000018780f : add byte ptr [rsp + rax*8], al ; retf 1
0x000000000019d4cb : add byte ptr [rsp + rax*8], dl ; add dword ptr [rax], eax ; and bh, 0xf6 ; jmp qword ptr [rdi]
0x0000000000193d33 : add byte ptr [rsp + rbp + 1], bh ; add byte ptr [rax + 0x3c], bl ; hlt ; jmp qword ptr [rdi]
0x0000000000197d73 : add byte ptr [rsp + rbp*2 - 0x7be7ffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000197d5b : add byte ptr [rsp + rbp*2 - 0x7bffffff], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000197d43 : add byte ptr [rsp + rbp*2 - 0x7c17ffff], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018bd43 : add byte ptr [rsp + rbp*4 + 0x5ae80000], cl ; out dx, eax ; jmp qword ptr [rdi]
0x000000000018fd53 : add byte ptr [rsp + rbp*8 - 0x14e80000], bl ; int1 ; jmp qword ptr [rbx]
0x00000000000d9ff1 : add byte ptr [rsp + rcx*2 - 0xd], dh ; ret
0x0000000000187777 : add byte ptr [rsp + rcx*2], al ; retf
0x0000000000185d33 : add byte ptr [rsp + rcx*2], bh ; add byte ptr [rax], bh ; imul ebx ; call qword ptr [rcx]
0x000000000018dd63 : add byte ptr [rsp + rcx*8 - 0x56280000], ch ; cli ; call qword ptr [rax]
0x000000000019653b : add byte ptr [rsp + rdx*2 + 0x1e100001], al ; cmc ; jmp qword ptr [rcx]
0x000000000019a50b : add byte ptr [rsp + rdx*4 + 1], dl ; add al, ah ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000019a553 : add byte ptr [rsp + rdx*4 - 0x15e7ffff], bl ; clc ; jmp qword ptr [rsi]
0x000000000018a4bb : add byte ptr [rsp + rdx*4], al ; add byte ptr [rax], al ; and bh, 0xee ; call qword ptr [rdx]
0x000000000019a4f3 : add byte ptr [rsp + rdx*4], bh ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000019a4c3 : add byte ptr [rsp + rdx*4], cl ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000018e543 : add byte ptr [rsp + rdx*8 - 0x2f80000], cl ; sti ; call qword ptr [rbx]
0x000000000018e4fb : add byte ptr [rsp + rdx*8], al ; add al, dh ; cld ; sti ; call qword ptr [rdx]
0x000000000018a33b : add byte ptr [rsp + rsi], bh ; add byte ptr [rax - 0x20], ah ; out dx, al ; jmp qword ptr [rsi]
0x00000000001844e3 : add byte ptr [rsp + rsi], ch ; add byte ptr [rax], al ; pop rax ; sub ch, bl ; call qword ptr [rcx]
0x00000000001844cb : add byte ptr [rsp + rsi], dl ; add byte ptr [rax], al ; cli ; call qword ptr [rdi]
0x0000000000187f97 : add byte ptr [rsp], al ; ret
0x00000000001a34d3 : add byte ptr [rsp], bl ; add al, byte ptr [rax] ; pop rax ; and eax, edi ; call qword ptr [rax]
0x0000000000187523 : add byte ptr [rsp], ch ; add al, bl ; out dx, al ; call qword ptr [rax]
0x00000000000c0ded : add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x00000000000be405 : add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x00000000000be08d : add byte ptr cs:[rax - 0x77], cl ; ret 0x9ce9
0x0000000000040dda : add byte ptr ds:[rax], al ; add byte ptr [rax - 0x77], cl ; sti ; syscall
0x00000000000ebfee : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x0000000000034c8a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000187525 : add byte ptr fs:[rax], al ; fmul dword ptr [rax - 0x12] ; call qword ptr [rax]
0x000000000006ea83 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000416a5 : add byte ptr ss:[rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000004151d : add byte ptr ss:[rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x000000000017c90c : add ch, 0xef ; jmp qword ptr [rax]
0x0000000000084eda : add ch, ah ; or al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000161ce3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000149bde : add ch, al ; std ; je 0x149c4b ; and ch, al ; std ; xlatb ; ret
0x0000000000149ccc : add ch, al ; std ; je 0x149d39 ; and ch, al ; std ; xlatb ; ret
0x0000000000149c72 : add ch, al ; std ; xlatb ; ret
0x0000000000149c7e : add ch, al ; std ; xlatb ; ret 0xc085
0x000000000014d83f : add ch, al ; std ; xlatb ; retf -0x367b
0x000000000017b149 : add ch, bh ; call qword ptr [rax]
0x0000000000024ceb : add ch, bl ; adc eax, 0x83489066 ; ret 0x8901
0x0000000000180bb4 : add ch, bl ; cli ; call rax
0x0000000000037f3b : add ch, bl ; jrcxz 0x37fac ; nop ; xor eax, eax ; ret
0x00000000000bb100 : add ch, bl ; retf
0x000000000016a95c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000016a95d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x0000000000058df3 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000b07e7 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000afc90 : add ch, byte ptr [rcx] ; ret 0x8d41
0x000000000004fc00 : add ch, byte ptr [rcx] ; retf -0x2e77
0x0000000000070a3a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000190e97 : add ch, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000017ddbc : add ch, ch ; hlt ; call rax
0x00000000000648ce : add ch, cl ; hlt ; loope 0x648d9 ; push rsi ; ret
0x000000000005f3d0 : add ch, cl ; stc ; loopne 0x5f3dc ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000018020c : add ch, dh ; stc ; call rax
0x0000000000034ae6 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000017cf33 : add cl, bh ; mov eax, dr0 ; call rax
0x000000000005375d : add cl, bl ; in eax, -0x21 ; loopne 0x536f2 ; ret 0xe680
0x0000000000169d2a : add cl, bl ; retf -0x156f
0x00000000000ebc4f : add cl, bl ; retf -0x3627
0x00000000000edf85 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000009594c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000039b01 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000039b33 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000009f9c9 : add cl, byte ptr [rax + 0x29] ; retf -0x7ab8
0x000000000009fa6d : add cl, byte ptr [rax + 0x29] ; retf 0x57e9
0x000000000009fa4d : add cl, byte ptr [rax + 0x29] ; retf 0x77e9
0x000000000010b15b : add cl, byte ptr [rax + 0x39] ; ret 0x1f72
0x000000000010b14d : add cl, byte ptr [rax + 0x39] ; ret 0x2d72
0x00000000000edf86 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x00000000000bdc05 : add cl, byte ptr [rax + 0x39] ; retf
0x000000000003af08 : add cl, byte ptr [rax + 0x39] ; retf -0x7df1
0x00000000000533dd : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000004700a : add cl, byte ptr [rax + 0x63] ; ror byte ptr [rcx + 0x63], cl ; ret 0xa67f
0x000000000014e354 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000001928d6 : add cl, byte ptr [rax + 0xa] ; ret
0x000000000018b615 : add cl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000071e08 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000aa88b : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000b5637 : add cl, byte ptr [rax - 0x46] ; ret
0x000000000009594d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000008aa9f : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000006ee1f : add cl, byte ptr [rax - 0x77] ; ret
0x0000000000044b18 : add cl, byte ptr [rax - 0x77] ; retf -0x76b8
0x0000000000051a6a : add cl, byte ptr [rax - 0x77] ; retf -0x8b8
0x000000000003c419 : add cl, byte ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000007a6f2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000ea1b2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000000af7b0 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcb943fc0
0x000000000005bace : add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000988c0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000c97b1 : add cl, byte ptr [rax - 0x7d] ; ret 0x6601
0x0000000000098923 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000000c9968 : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000120b25 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x000000000016f77b : add cl, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; cli ; jmp rax
0x000000000010c76f : add cl, byte ptr [rbp + 0xf] ; ret
0x0000000000133892 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000018a3f0 : add cl, byte ptr [rbx + 0xa] ; ret
0x00000000000dc020 : add cl, byte ptr [rbx - 0x1777b] ; dec dword ptr [rdi] ; ret 0x8589
0x0000000000069b32 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x00000000000bcc8e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000002cdf4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000e29dc : add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000002fe2a : add cl, byte ptr [rdi] ; retf -0x76bf
0x000000000006abff : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000014940b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000009e22b : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000001812d5 : add cl, byte ptr [rdx + 0xe] ; sbb byte ptr [rbx + 0xa950203], al ; ret
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000019e980 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x000000000005d30b : add cl, ch ; call rsp
0x00000000001586da : add cl, ch ; imul ebp, esi, -1 ; dec dword ptr [rax - 0x77] ; retf -0x76b8
0x000000000006425b : add cl, ch ; jmp rcx
0x000000000005117c : add cl, ch ; ret
0x00000000000dfce3 : add cl, ch ; ret 0xffed
0x00000000000305d5 : add cl, ch ; ret 0xffef
0x00000000000301d5 : add cl, ch ; ret 0xfff3
0x0000000000101fdd : add cl, ch ; ret 0xfffc
0x0000000000157080 : add cl, ch ; ret 0xfffd
0x00000000000f16c2 : add cl, ch ; ret 0xfffe
0x0000000000058df7 : add cl, ch ; retf
0x000000000005fb40 : add cl, ch ; retf -0x54
0x00000000000d587f : add cl, ch ; retf -0xb
0x00000000000300cd : add cl, ch ; retf -0xc
0x00000000000303cd : add cl, ch ; retf -0xf
0x00000000000842ef : add cl, ch ; retf -2
0x000000000007faf5 : add cl, ch ; retf -3
0x0000000000028d2d : add cl, ch ; retf -5
0x00000000000eeb93 : add cl, ch ; retf -8
0x00000000000661c5 : add cl, ch ; xchg eax, ebp ; ret 0xffff
0x00000000000ecf58 : add cl, ch ; xchg eax, edx ; ret 0xfff8
0x000000000017f93c : add cl, cl ; clc ; lcall ptr [rax + 0x60000218] ; retf -8
0x00000000000fd636 : add cl, cl ; ret
0x0000000000169be3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x000000000016b35b : add cl, dl ; imul dh ; jmp rsp
0x0000000000169be2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x00000000001a4cd3 : add dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rdx + 2], al ; add byte ptr [rax], al ; retf 0
0x000000000018a198 : add dh, ah ; ret
0x000000000016598b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000016c7f4 : add dh, al ; call qword ptr [rax]
0x00000000000c844f : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000049d58 : add dh, al ; test ebp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000005541b : add dh, al ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000017e9ad : add dh, bh ; call qword ptr [rax]
0x000000000016ecdb : add dh, bh ; jmp rdi
0x0000000000164dd7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000133a43 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000007783f : add dh, bl ; ret
0x0000000000084ec2 : add dh, byte ptr [rax + rcx*2 - 9] ; ret 0
0x000000000009ce1b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000197453 : add dh, byte ptr [rbp + 0xa] ; ret
0x000000000011ada2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000186cdd : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001275ac : add dh, byte ptr [rcx + rdx - 0x7d] ; cli ; add al, 0x74 ; jle 0x127541 ; ret 0x8380
0x00000000000d04fd : add dh, byte ptr [rcx] ; imul al ; retf
0x000000000019e945 : add dh, byte ptr [rdx + 0xa] ; ret
0x000000000011ada1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018fe00 : add dh, ch ; sti ; jmp rsi
0x00000000001a4ddf : add dh, cl ; add eax, 0x6bd0000 ; add byte ptr [rax], al ; ret
0x000000000016c628 : add dh, cl ; sti ; jmp qword ptr [rax]
0x00000000000c0501 : add dh, dh ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000062a75 : add dh, dh ; ret
0x00000000000243c8 : add dh, dh ; ret 0x4801
0x00000000000eb17f : add dh, dh ; ret 0x7404
0x000000000006bb1f : add dh, dh ; ret 0x7420
0x00000000001529d7 : add dh, dh ; ret 0x7501
0x00000000001529e4 : add dh, dh ; ret 0x7502
0x00000000001529f1 : add dh, dh ; ret 0x7504
0x00000000001529a9 : add dh, dh ; ret 0x7510
0x00000000001529b6 : add dh, dh ; ret 0x7520
0x00000000000cc4c1 : add dh, dh ; ret 0x7540
0x00000000000da15a : add dh, dh ; ret 0xf01
0x000000000002b5eb : add dh, dh ; ret 0xf04
0x0000000000094152 : add dh, dh ; ret 0xf20
0x000000000009415b : add dh, dh ; ret 0xf40
0x00000000000da83d : add dh, dh ; rol dword ptr [rax + 0xf], -0x7c ; retf 3
0x00000000000f9c66 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000fa0fa : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x0000000000190201 : add dh, dl ; jmp qword ptr [rcx]
0x00000000000ae829 : add dil, r15b ; ret
0x00000000000a127e : add dil, sil ; ret
0x000000000016c7d8 : add dl, ah ; cld ; jmp rax
0x000000000017c2c8 : add dl, al ; add byte ptr [rax], al ; nop ; or ch, bh ; lcall ptr [rax] ; ret 0
0x00000000001a32aa : add dl, byte ptr [rbp + 0xa] ; ret
0x000000000017a7e8 : add dl, byte ptr [rbx - 0x6d6d0005] ; sti ; jmp qword ptr [rdx]
0x000000000018b4dd : add dl, byte ptr [rdi + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000019e2f6 : add dl, byte ptr [rsi + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a3dd1 : add dl, byte ptr [rsi + rcx + 0x10] ; ret
0x000000000008aeea : add dl, byte ptr [rsi - 7] ; dec dword ptr [rax + 0x39] ; ret
0x00000000001812b1 : add dl, ch ; call qword ptr [rcx]
0x000000000003335f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000016c904 : add dl, dl ; call qword ptr [rax]
0x000000000019788d : add dword ptr [eax], eax ; adc byte ptr [rax - 0xb], ah ; call qword ptr [rbx]
0x000000000017db19 : add dword ptr [eax], eax ; rol byte ptr [rbp - 0xc], 1 ; call rax
0x00000000000d9415 : add dword ptr [r10 + rdx*8 - 0x76b21a8b], eax ; ret 0x894d
0x000000000010be1d : add dword ptr [r8 - 0x77], ecx ; retf -0x3eb8
0x0000000000041c24 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000019548d : add dword ptr [r8], eax ; adc dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000010a543 : add dword ptr [r8], eax ; add byte ptr [rbp + 0x39], al ; or al, 0x75 ; retf
0x000000000017d611 : add dword ptr [r8], eax ; and cl, 0xf2 ; jmp rax
0x0000000000195475 : add dword ptr [r8], eax ; clc ; loope 0x195475 ; jmp qword ptr [rcx]
0x000000000017d619 : add dword ptr [r8], eax ; cmp cl, 0xf2 ; call qword ptr [rax]
0x00000000001954a5 : add dword ptr [r8], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001956ad : add dword ptr [r8], r8d ; adc al, ch ; hlt ; jmp qword ptr [rcx]
0x000000000010f9cd : add dword ptr [r8], r8d ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000019561d : add dword ptr [r8], r8d ; and bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000019567d : add dword ptr [r8], r8d ; loopne 0x19566f ; hlt ; jmp qword ptr [rcx]
0x000000000019564d : add dword ptr [r8], r8d ; mov al, 0xe7 ; hlt ; jmp qword ptr [rcx]
0x00000000000c84f8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000140671 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000489ea : add dword ptr [rax + 0x29], ecx ; ret 0x149
0x00000000000c2995 : add dword ptr [rax + 0x29], ecx ; ret 0x8948
0x00000000000bfa83 : add dword ptr [rax + 0x38], edi ; syscall
0x00000000000429f1 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000cec43 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x000000000010c0f3 : add dword ptr [rax + 0x39], ecx ; ret 0x1776
0x00000000000e4a83 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000005ca75 : add dword ptr [rax + 0x39], ecx ; ret 0x850f
0x0000000000044acc : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000050604 : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000e4a77 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000d012f : add dword ptr [rax + 0x39], ecx ; ret 0xe375
0x00000000000ced13 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000c6303 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x0000000000051a89 : add dword ptr [rax + 0x39], ecx ; ret 0xe975
0x000000000008a3de : add dword ptr [rax + 0x39], ecx ; ret 0xeb77
0x00000000000aa6b8 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x00000000000a9af8 : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x000000000004456b : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x0000000000088f8a : add dword ptr [rax + 0x39], ecx ; ret 0xef77
0x000000000008975a : add dword ptr [rax + 0x39], ecx ; ret 0xf075
0x00000000000aa809 : add dword ptr [rax + 0x39], ecx ; ret 0xf175
0x0000000000060fa9 : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000707d3 : add dword ptr [rax + 0x39], ecx ; retf -0x108b
0x00000000000f93b8 : add dword ptr [rax + 0x39], ecx ; retf -0xd8b
0x000000000004380b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000b8735 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000027814 : add dword ptr [rax + 0x63], ecx ; ret
0x00000000000eb7e1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000d6fa5 : add dword ptr [rax + 0x63], ecx ; retf
0x00000000000f7ca7 : add dword ptr [rax + 0xf], eax ; ret 0xfc3
0x0000000000154a10 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x000000000006335a : add dword ptr [rax + 1], ecx ; ret
0x0000000000020e62 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000c8473 : add dword ptr [rax + 1], edi ; ret
0x0000000000157d84 : add dword ptr [rax + 9], ecx ; ret
0x00000000000ec626 : add dword ptr [rax + 9], ecx ; ret 0x394d
0x00000000000ecb36 : add dword ptr [rax + 9], ecx ; ret 0x8948
0x00000000000ecbaa : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000158059 : add dword ptr [rax + 9], ecx ; retf -0x45bf
0x000000000015559d : add dword ptr [rax + 9], ecx ; retf -0x46bf
0x00000000000ec9dd : add dword ptr [rax + 9], ecx ; retf -0x76b7
0x00000000000eca37 : add dword ptr [rax + 9], ecx ; retf -0x76b8
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000c5978 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000e71ce : add dword ptr [rax + rax], edx ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000115e65 : add dword ptr [rax + rcx + 0x31], esi ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018a70e : add dword ptr [rax + rdi*2], 0xa ; ret
0x00000000001697db : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x169847 ; retf
0x00000000000c1d5e : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x000000000002e06b : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000edf82 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000d6774 : add dword ptr [rax - 0x75], ecx ; je 0xd67a5 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000095926 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000007b2f0 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x330fb8 ; ret
0x000000000013c2d2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000007ec7d : add dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax + 9] ; retf -0x76b8
0x000000000010dbf9 : add dword ptr [rax - 0x77], ecx ; or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x0000000000110c58 : add dword ptr [rax - 0x77], ecx ; or ecx, dword ptr [rcx + rcx*4 + 0x34] ; ret 0xfae9
0x0000000000075f0d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000002ee49 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000779b1 : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000007e0f0 : add dword ptr [rax - 0x77], ecx ; ret 0x8b49
0x000000000003f95f : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x00000000000af7b4 : add dword ptr [rax - 0x77], ecx ; retf
0x000000000010be1e : add dword ptr [rax - 0x77], ecx ; retf -0x3eb8
0x000000000010b9f0 : add dword ptr [rax - 0x78], eax ; ja 0x10b9fb ; ret
0x000000000011f9f5 : add dword ptr [rax - 0x78], eax ; je 0x11fa57 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011faed : add dword ptr [rax - 0x78], eax ; je 0x11fb4f ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000014228a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000002157a : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d688a : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000cc8d3 : add dword ptr [rax - 0x7d], ecx ; ret 0x3920
0x0000000000041d7c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000cb197 : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000358d9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000c646b : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000000240b9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000ba826 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000024ed9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d01
0x00000000000d6bed : add dword ptr [rax - 0x7d], ecx ; ret 0x4d10
0x000000000011f945 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000a920c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x00000000000e62a9 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000000cef54 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000016ba94 : add dword ptr [rax - 0x7e0b0011], -0x11 ; jmp qword ptr [rsi]
0x000000000010f9dd : add dword ptr [rax - 9], esi ; ret 0
0x00000000000435db : add dword ptr [rax], 0x89410000 ; ret
0x0000000000068360 : add dword ptr [rax], 0xc7894100 ; jmp 0x64e63
0x000000000017b7e1 : add dword ptr [rax], 0xeb7db000 ; call rax
0x00000000000f2973 : add dword ptr [rax], 1 ; ret
0x000000000019195e : add dword ptr [rax], eax ; adc ah, bl ; jmp qword ptr [rcx]
0x00000000001956ae : add dword ptr [rax], eax ; adc al, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000194d7e : add dword ptr [rax], eax ; adc bh, cl ; hlt ; call qword ptr [rcx]
0x000000000019788e : add dword ptr [rax], eax ; adc byte ptr [rax - 0xb], ah ; call qword ptr [rbx]
0x000000000017ed1a : add dword ptr [rax], eax ; adc byte ptr [rax - 9], bl ; jmp qword ptr [rax]
0x000000000017d392 : add dword ptr [rax], eax ; adc byte ptr [rbx], ch ; call qword ptr [rax]
0x000000000017d76a : add dword ptr [rax], eax ; adc byte ptr [rcx - 0xd], cl ; jmp qword ptr [rax]
0x000000000017ea72 : add dword ptr [rax], eax ; adc byte ptr [rdi + rsi*8], bl ; dec eax ; ret
0x000000000019754e : add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], dl ; call qword ptr [rdx]
0x000000000019aeae : add dword ptr [rax], eax ; adc byte ptr [rsi], bh ; idiv bh ; retf
0x000000000019653e : add dword ptr [rax], eax ; adc byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019548e : add dword ptr [rax], eax ; adc dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000019534e : add dword ptr [rax], eax ; adc dl, bl ; hlt ; jmp qword ptr [rcx]
0x000000000017f2aa : add dword ptr [rax], eax ; adc edi, eax ; call qword ptr [rax]
0x000000000017e0ca : add dword ptr [rax], eax ; add ah, dh ; cmc ; call qword ptr [rax]
0x0000000000018868 : add dword ptr [rax], eax ; add al, byte ptr [rax] ; ret 0x5b
0x00000000000c4215 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000e0a90 : add dword ptr [rax], eax ; add al, ch ; ret 0xfff4
0x00000000000b5b0e : add dword ptr [rax], eax ; add al, ch ; retf -0x955
0x000000000002820e : add dword ptr [rax], eax ; add al, ch ; retf 0x4a
0x000000000013e2fc : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000017d8ea : add dword ptr [rax], eax ; add bl, dh ; jmp qword ptr [rax]
0x000000000006bc3a : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000006d11d : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002452d : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000152881 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf -0x268b
0x00000000000c0ee3 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x2475
0x0000000000069ba8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000dbf14 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; sti ; call r14
0x000000000004c5a5 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x0000000000071188 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000188165 : add dword ptr [rax], eax ; add byte ptr [rax + rbp], al ; ret 1
0x00000000001876ad : add dword ptr [rax], eax ; add byte ptr [rax + rdi*8], al ; retf
0x00000000001216e6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000124a89 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000c602f : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add al, 0xd1 ; jmp 0xc6003
0x000000000007d4d8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000010f9ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000127f6d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000012673f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x18] ; syscall
0x00000000001267f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x40] ; syscall
0x000000000007594a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d549f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002b9ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000e3833 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007afcf : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000fee9f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000157ec6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 9], cl ; ret
0x000000000009da4e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000e6cac : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x0000000000080954 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000080a80 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000023ccb : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007eb27 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000038c5c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001446cd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c5a91 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000002e4b8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014b6df : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144621 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000c7808 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000002917a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006fa1a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000193ffe : add dword ptr [rax], eax ; add byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x000000000017d3f2 : add dword ptr [rax], eax ; add byte ptr [rax - 0xe], al ; call rax
0x000000000017d51a : add dword ptr [rax], eax ; add byte ptr [rax - 0xe], bl ; call qword ptr [rax]
0x0000000000021ec1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000164dda : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000163f8a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000163db2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000163daa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000164542 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000163dea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000163de2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x0000000000164582 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000009f5a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x0000000000116073 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007c429 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001588e1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000000000082793 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c3c8e : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20716
0x00000000000e5391 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xe1e36
0x0000000000154991 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x1549a8 ; neg eax ; ret
0x000000000009f261 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x9f271 ; neg eax ; ret
0x0000000000151747 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x151758 ; neg eax ; ret
0x0000000000066c5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x66c2b
0x000000000004bd97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000c1043 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xc1057 ; ret
0x00000000000fcc9e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000c14cb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000001191d3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000081fde : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000004c874 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x0000000000116559 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000452ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000114eda : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000113c86 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r14, rax ; call 0x206c9
0x00000000000faddb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call 0xf7849
0x00000000000fadbd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0xf7849
0x000000000006a86c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006a513 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000005341b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000083126 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000079a43 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023265 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000070380 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000034d78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e25ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000692ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004b906 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x000000000004c7c3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor r11d, r11d ; jmp rax
0x00000000001961fe : add dword ptr [rax], eax ; add byte ptr [rax], bl ; cmc ; call qword ptr [rsi]
0x000000000017da62 : add dword ptr [rax], eax ; add byte ptr [rax], ch ; hlt ; jmp rax
0x000000000010a544 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], al ; or al, 0x75 ; retf
0x00000000000cd148 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76bb008b], cl ; retf -0x76b8
0x000000000008dcd8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d113c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000e3946 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000040bc7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000db31d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x15b43], al ; jmp qword ptr [rdx]
0x000000000017dae2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0xc], al ; call rax
0x000000000017d4aa : add dword ptr [rax], eax ; add byte ptr [rbx - 0xe], cl ; call qword ptr [rax]
0x0000000000156ec8 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x21], cl ; ret 0x2be9
0x00000000000b5a46 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0xf40
0x00000000001170f8 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000010a4f4 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; retf
0x0000000000155943 : add dword ptr [rax], eax ; add byte ptr [rcx + 1], cl ; ret
0x00000000000824f0 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, r8 ; call rax
0x000000000010d7e7 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000002c3df : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; mov byte ptr [rcx], 0x83 ; ret
0x000000000002339c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000026470 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000000000017ec3a : add dword ptr [rax], eax ; add byte ptr [rcx - 9], dl ; call rax
0x00000000000c5a1d : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000d14e1 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf -0x77c0
0x00000000000ba192 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000017ea3a : add dword ptr [rax], eax ; add byte ptr [rdi + rsi*8], dl ; lcall ptr [rax] ; ret 1
0x0000000000117f19 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000017f58a : add dword ptr [rax], eax ; add byte ptr [rdx - 8], al ; call rax
0x0000000000187705 : add dword ptr [rax], eax ; add byte ptr [rsi + rbp*4], al ; retf
0x0000000000180d52 : add dword ptr [rax], eax ; add byte ptr [rsi], 0xfd ; jmp qword ptr [rax]
0x000000000017da7a : add dword ptr [rax], eax ; add byte ptr [rsi], ch ; hlt ; jmp qword ptr [rax]
0x0000000000187f95 : add dword ptr [rax], eax ; add byte ptr [rsp], al ; ret
0x0000000000149c70 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x0000000000149c7c : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x0000000000180bb2 : add dword ptr [rax], eax ; add ch, bl ; cli ; call rax
0x000000000017ddba : add dword ptr [rax], eax ; add ch, ch ; hlt ; call rax
0x00000000000cb478 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001529d5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001529e2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001529ef : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001529a7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001529b4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001529c1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000da158 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x000000000002b5e9 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000e4496 : add dword ptr [rax], eax ; add rsi, qword ptr [r14 + 0x18] ; mov eax, ecx ; syscall
0x00000000000ea54d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000540a5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019561e : add dword ptr [rax], eax ; and bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000019d4ce : add dword ptr [rax], eax ; and bh, 0xf6 ; jmp qword ptr [rdi]
0x000000000017db82 : add dword ptr [rax], eax ; and byte ptr [rax - 0xc], dl ; call rax
0x000000000017ee92 : add dword ptr [rax], eax ; and byte ptr [rcx - 9], ch ; jmp qword ptr [rax]
0x000000000019a38e : add dword ptr [rax], eax ; and byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000017ebca : add dword ptr [rax], eax ; and byte ptr [rsi - 9], cl ; ljmp ptr [rax] ; retf 1
0x0000000000180d7a : add dword ptr [rax], eax ; and byte ptr [rsi], ah ; std ; call qword ptr [rax]
0x000000000017d612 : add dword ptr [rax], eax ; and cl, 0xf2 ; jmp rax
0x0000000000194fbe : add dword ptr [rax], eax ; and dl, dl ; hlt ; jmp qword ptr [rcx]
0x000000000019f696 : add dword ptr [rax], eax ; call 0x1419edf9
0x0000000000193fe6 : add dword ptr [rax], eax ; call 0x22193441
0x0000000000197d46 : add dword ptr [rax], eax ; call 0x221972d5
0x00000000001981c6 : add dword ptr [rax], eax ; call 0x2219775a
0x0000000000196926 : add dword ptr [rax], eax ; call 0x27195e57
0x000000000019e566 : add dword ptr [rax], eax ; call 0xffffffffd219dca6
0x0000000000199396 : add dword ptr [rax], eax ; call 0xffffffffd3198961
0x0000000000195ee6 : add dword ptr [rax], eax ; clc ; adc ebp, esi ; call rdx
0x000000000017f5da : add dword ptr [rax], eax ; clc ; call rax
0x0000000000195336 : add dword ptr [rax], eax ; clc ; fxtract ; jmp qword ptr [rcx]
0x0000000000191b66 : add dword ptr [rax], eax ; clc ; loope 0x191b62 ; jmp qword ptr [rcx]
0x0000000000195476 : add dword ptr [rax], eax ; clc ; loope 0x195474 ; jmp qword ptr [rcx]
0x00000000001948f6 : add dword ptr [rax], eax ; clc ; ret 0xfff4
0x0000000000198b26 : add dword ptr [rax], eax ; clc ; sahf ; cmc ; call qword ptr [rdx]
0x0000000000197fb6 : add dword ptr [rax], eax ; clc ; xchg ch, dh ; jmp qword ptr [rcx]
0x00000000001954d6 : add dword ptr [rax], eax ; clc ; xor al, 0xf9 ; call qword ptr [rax]
0x0000000000197b46 : add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x0000000000084d4a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000083ac0 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000017d202 : add dword ptr [rax], eax ; cmp ah, 0xf0 ; call rax
0x000000000017e92a : add dword ptr [rax], eax ; cmp ah, 0xf6 ; jmp rax
0x000000000017d1ea : add dword ptr [rax], eax ; cmp bl, 0xf0 ; call qword ptr [rax]
0x000000000019b576 : add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xa], cl ; call qword ptr [rax]
0x0000000000195e66 : add dword ptr [rax], eax ; cmp byte ptr [rcx], dl ; cmc ; call qword ptr [rbx]
0x000000000019a3a6 : add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000017d61a : add dword ptr [rax], eax ; cmp cl, 0xf2 ; call qword ptr [rax]
0x0000000000194fd6 : add dword ptr [rax], eax ; cmp dl, dl ; hlt ; jmp qword ptr [rcx]
0x000000000019db16 : add dword ptr [rax], eax ; cwde ; add esi, edi ; call rsi
0x000000000019a406 : add dword ptr [rax], eax ; cwde ; and al, 0xf6 ; jmp qword ptr [rsi]
0x0000000000196e86 : add dword ptr [rax], eax ; cwde ; cmc ; call qword ptr [rdx]
0x0000000000196ff6 : add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rcx]
0x0000000000194de6 : add dword ptr [rax], eax ; cwde ; iretd ; hlt ; jmp qword ptr [rsi]
0x0000000000192a06 : add dword ptr [rax], eax ; cwde ; ja 0x192a03 ; jmp rdx
0x0000000000191776 : add dword ptr [rax], eax ; cwde ; sal dl, 1 ; call rsi
0x00000000001962e6 : add dword ptr [rax], eax ; cwde ; sbb ebp, esi ; jmp qword ptr [rsi]
0x0000000000198076 : add dword ptr [rax], eax ; cwde ; xchg ebp, esi ; jmp qword ptr [rcx]
0x0000000000199db6 : add dword ptr [rax], eax ; enter -0xa19, -1 ; ret
0x0000000000191ff6 : add dword ptr [rax], eax ; fdiv st(2) ; jmp rcx
0x0000000000180b92 : add dword ptr [rax], eax ; fdiv st(2), st(0) ; jmp qword ptr [rax]
0x0000000000196776 : add dword ptr [rax], eax ; fsub dword ptr [rdx] ; cmc ; jmp rdx
0x0000000000191eb6 : add dword ptr [rax], eax ; fsubr st(2) ; jmp qword ptr [rcx]
0x0000000000199e36 : add dword ptr [rax], eax ; fsubr st(5) ; cmc ; call rsp
0x00000000000429a6 : add dword ptr [rax], eax ; jne 0x429a8 ; mov rax, rbx ; pop rbx ; ret
0x000000000017d272 : add dword ptr [rax], eax ; jo 0x17d203 ; int1 ; jmp rax
0x000000000017d352 : add dword ptr [rax], eax ; jo 0x17d381 ; call rax
0x000000000017d352 : add dword ptr [rax], eax ; jo 0x17d382 ; call rax
0x000000000017d572 : add dword ptr [rax], eax ; jo 0x17d5e2 ; call rax
0x000000000017d572 : add dword ptr [rax], eax ; jo 0x17d5e3 ; call rax
0x000000000017d832 : add dword ptr [rax], eax ; jo 0x17d89c ; jmp qword ptr [rax]
0x000000000017dab2 : add dword ptr [rax], eax ; jo 0x17daf0 ; hlt ; call rax
0x000000000017dcaa : add dword ptr [rax], eax ; jo 0x17dd20 ; hlt ; call qword ptr [rax]
0x000000000017e032 : add dword ptr [rax], eax ; jo 0x17e017 ; cmc ; jmp rax
0x000000000018109a : add dword ptr [rax], eax ; jo 0x18108d ; std ; jmp rax
0x000000000019154e : add dword ptr [rax], eax ; jo 0x19151f ; call rdi
0x000000000019154e : add dword ptr [rax], eax ; jo 0x191520 ; call rdi
0x000000000019662e : add dword ptr [rax], eax ; jo 0x196658 ; cmc ; jmp qword ptr [rcx]
0x000000000019709e : add dword ptr [rax], eax ; jo 0x1970eb ; cmc ; jmp qword ptr [rdx]
0x000000000019814e : add dword ptr [rax], eax ; jo 0x1980df ; cmc ; jmp qword ptr [rcx]
0x00000000001983fe : add dword ptr [rax], eax ; jo 0x198392 ; cmc ; jmp qword ptr [rcx]
0x0000000000198a5e : add dword ptr [rax], eax ; jo 0x198a02 ; cmc ; jmp qword ptr [rcx]
0x00000000001991be : add dword ptr [rax], eax ; jo 0x19917c ; cmc ; call rdi
0x000000000019e66e : add dword ptr [rax], eax ; jo 0x19e620 ; clc ; call qword ptr [rax]
0x000000000017e3a2 : add dword ptr [rax], eax ; js 0x17e3a2 ; call rax
0x0000000000191df6 : add dword ptr [rax], eax ; js 0x191de8 ; jmp qword ptr [rcx]
0x0000000000191df6 : add dword ptr [rax], eax ; js 0x191de9 ; jmp qword ptr [rcx]
0x00000000001965e6 : add dword ptr [rax], eax ; js 0x19660f ; cmc ; jmp rdx
0x0000000000197626 : add dword ptr [rax], eax ; js 0x197686 ; cmc ; call qword ptr [rax]
0x0000000000198256 : add dword ptr [rax], eax ; js 0x1981e8 ; cmc ; jmp qword ptr [rcx]
0x0000000000198626 : add dword ptr [rax], eax ; js 0x1985bd ; cmc ; jmp qword ptr [rcx]
0x00000000001a0c26 : add dword ptr [rax], eax ; js 0x1a0bd1 ; idiv edi ; retf
0x0000000000199c46 : add dword ptr [rax], eax ; loope 0x199c45 ; jmp qword ptr [rcx]
0x000000000017d57a : add dword ptr [rax], eax ; loopne 0x17d508 ; jmp qword ptr [rax]
0x000000000017d57a : add dword ptr [rax], eax ; loopne 0x17d509 ; jmp qword ptr [rax]
0x000000000017d54a : add dword ptr [rax], eax ; loopne 0x17d5ae ; jmp qword ptr [rax]
0x000000000017d54a : add dword ptr [rax], eax ; loopne 0x17d5af ; jmp qword ptr [rax]
0x000000000017d5f2 : add dword ptr [rax], eax ; loopne 0x17d5cc ; call qword ptr [rax]
0x000000000017d5f2 : add dword ptr [rax], eax ; loopne 0x17d5cd ; call qword ptr [rax]
0x000000000017d5f1 : add dword ptr [rax], eax ; loopne 0x17d5ce ; call qword ptr [rax]
0x000000000017f29a : add dword ptr [rax], eax ; loopne 0x17f2b5 ; clc ; jmp rax
0x000000000017f2ea : add dword ptr [rax], eax ; loopne 0x17f307 ; clc ; call rax
0x000000000017f36a : add dword ptr [rax], eax ; loopne 0x17f38a ; clc ; jmp rax
0x000000000017f369 : add dword ptr [rax], eax ; loopne 0x17f38b ; clc ; jmp rax
0x0000000000180b32 : add dword ptr [rax], eax ; loopne 0x180b11 ; cli ; call rax
0x0000000000180dfa : add dword ptr [rax], eax ; loopne 0x180e32 ; std ; call rax
0x0000000000191a5e : add dword ptr [rax], eax ; loopne 0x191a43 ; jmp qword ptr [rcx]
0x0000000000191a5e : add dword ptr [rax], eax ; loopne 0x191a44 ; jmp qword ptr [rcx]
0x00000000001920de : add dword ptr [rax], eax ; loopne 0x1920e2 ; call qword ptr [rax]
0x00000000001920de : add dword ptr [rax], eax ; loopne 0x1920e3 ; call qword ptr [rax]
0x000000000019531e : add dword ptr [rax], eax ; loopne 0x195300 ; hlt ; jmp qword ptr [rcx]
0x000000000019531d : add dword ptr [rax], eax ; loopne 0x195301 ; hlt ; jmp qword ptr [rcx]
0x000000000019567e : add dword ptr [rax], eax ; loopne 0x19566e ; hlt ; jmp qword ptr [rcx]
0x000000000019604e : add dword ptr [rax], eax ; loopne 0x19606b ; cmc ; jmp qword ptr [rcx]
0x0000000000196e1e : add dword ptr [rax], eax ; loopne 0x196e66 ; cmc ; call qword ptr [rax]
0x000000000019703e : add dword ptr [rax], eax ; loopne 0x19708a ; cmc ; jmp qword ptr [rcx]
0x00000000001980be : add dword ptr [rax], eax ; loopne 0x19804e ; cmc ; jmp qword ptr [rcx]
0x000000000017da02 : add dword ptr [rax], eax ; mov al, 0x10 ; hlt ; call qword ptr [rax]
0x000000000017d312 : add dword ptr [rax], eax ; mov al, 0x26 ; call qword ptr [rax]
0x000000000017d3aa : add dword ptr [rax], eax ; mov al, 0x2d ; call qword ptr [rax]
0x000000000017daca : add dword ptr [rax], eax ; mov al, 0x3d ; hlt ; jmp rax
0x000000000017f5a2 : add dword ptr [rax], eax ; mov al, 0x42 ; clc ; jmp qword ptr [rax]
0x000000000019700e : add dword ptr [rax], eax ; mov al, 0x43 ; cmc ; jmp qword ptr [rcx]
0x000000000017db5a : add dword ptr [rax], eax ; mov al, 0x4b ; hlt ; call qword ptr [rax]
0x000000000019410e : add dword ptr [rax], eax ; mov al, 0x50 ; hlt ; call rdx
0x000000000019808e : add dword ptr [rax], eax ; mov al, 0x87 ; cmc ; jmp qword ptr [rcx]
0x000000000017dcda : add dword ptr [rax], eax ; mov al, 0x93 ; hlt ; call qword ptr [rax]
0x00000000001952ee : add dword ptr [rax], eax ; mov al, 0xd9 ; hlt ; jmp qword ptr [rcx]
0x000000000017e002 : add dword ptr [rax], eax ; mov al, 0xdb ; cmc ; jmp qword ptr [rax]
0x000000000019564e : add dword ptr [rax], eax ; mov al, 0xe7 ; hlt ; jmp qword ptr [rcx]
0x000000000019811e : add dword ptr [rax], eax ; mov bpl, sil ; jmp qword ptr [rcx]
0x000000000019b056 : add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], al ; call qword ptr [rax]
0x0000000000196646 : add dword ptr [rax], eax ; mov byte ptr [rcx], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000193f06 : add dword ptr [rax], eax ; mov byte ptr [rdi - 0xc], cl ; call qword ptr [rbx]
0x0000000000193f46 : add dword ptr [rax], eax ; mov byte ptr [rdi - 0xc], cl ; call qword ptr [rsi]
0x0000000000193f86 : add dword ptr [rax], eax ; mov byte ptr [rdi - 0xc], cl ; jmp qword ptr [rcx]
0x0000000000195396 : add dword ptr [rax], eax ; mov dl, bl ; hlt ; jmp qword ptr [rcx]
0x000000000008a69c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008a5e1 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000108413 : add dword ptr [rax], eax ; mov rdi, r12 ; call rbx
0x000000000017e96a : add dword ptr [rax], eax ; nop ; add bh, dh ; jmp qword ptr [rax]
0x000000000019a2fe : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000197b8e : add dword ptr [rax], eax ; nop ; cmc ; jmp qword ptr [rcx]
0x000000000017ddca : add dword ptr [rax], eax ; nop ; in eax, dx ; hlt ; call qword ptr [rax]
0x000000000017d302 : add dword ptr [rax], eax ; nop ; jmp rax
0x000000000017cdea : add dword ptr [rax], eax ; nop ; jne 0x17cde4 ; call qword ptr [rax]
0x000000000017d0a2 : add dword ptr [rax], eax ; nop ; mov ah, 0xf0 ; jmp qword ptr [rax]
0x000000000019e41e : add dword ptr [rax], eax ; nop ; mov bl, 0xfb ; jmp qword ptr [rdx]
0x000000000017d0c2 : add dword ptr [rax], eax ; nop ; mov dh, 0xf0 ; jmp qword ptr [rax]
0x000000000019826e : add dword ptr [rax], eax ; nop ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000017dc82 : add dword ptr [rax], eax ; nop ; push 0xf4 ; jmp qword ptr [rax]
0x000000000017dc12 : add dword ptr [rax], eax ; nop ; push rsi ; hlt ; jmp rax
0x000000000017d7ea : add dword ptr [rax], eax ; nop ; push rsi ; jmp rax
0x000000000017df92 : add dword ptr [rax], eax ; nop ; ret
0x000000000017e612 : add dword ptr [rax], eax ; nop ; ret 0xfff6
0x0000000000194f5e : add dword ptr [rax], eax ; nop ; sal esp, 1 ; jmp qword ptr [rcx]
0x000000000017e12a : add dword ptr [rax], eax ; nop ; sub dh, dh ; jmp qword ptr [rax]
0x00000000001a0dae : add dword ptr [rax], eax ; nop ; test al, 0xf7 ; jmp qword ptr [rax]
0x000000000017efaa : add dword ptr [rax], eax ; nop ; test dh, bh ; jmp rax
0x0000000000194dce : add dword ptr [rax], eax ; or bh, 0xf4 ; jmp qword ptr [rcx]
0x0000000000196216 : add dword ptr [rax], eax ; or byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019b8a6 : add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; call qword ptr [rcx]
0x000000000019a376 : add dword ptr [rax], eax ; or byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x0000000000195526 : add dword ptr [rax], eax ; or dl, ah ; hlt ; call qword ptr [rax]
0x000000000017e86a : add dword ptr [rax], eax ; out -0xa, eax ; jmp qword ptr [rax]
0x0000000000196896 : add dword ptr [rax], eax ; pop rax ; and al, 0xf5 ; jmp qword ptr [rsi]
0x0000000000196616 : add dword ptr [rax], eax ; pop rax ; and ebp, esi ; jmp qword ptr [rcx]
0x0000000000193d36 : add dword ptr [rax], eax ; pop rax ; cmp al, 0xf4 ; jmp qword ptr [rdi]
0x0000000000198136 : add dword ptr [rax], eax ; pop rax ; mov ch, dh ; jmp qword ptr [rcx]
0x00000000001983e6 : add dword ptr [rax], eax ; pop rax ; mov esi, ebp ; jmp qword ptr [rcx]
0x0000000000194b56 : add dword ptr [rax], eax ; pop rax ; stc ; call qword ptr [rax]
0x0000000000180c62 : add dword ptr [rax], eax ; pop rbp ; sti ; jmp rax
0x000000000008a71b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000017ebd2 : add dword ptr [rax], eax ; pop rcx ; idiv rdi ; pop rax ; retf 1
0x000000000019a3be : add dword ptr [rax], eax ; push rax ; and al, 0xf6 ; jmp qword ptr [rsi]
0x0000000000196fae : add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000017daba : add dword ptr [rax], eax ; push rax ; hlt ; call qword ptr [rax]
0x000000000017efea : add dword ptr [rax], eax ; push rax ; mov bh, dh ; jmp qword ptr [rax]
0x000000000017e51a : add dword ptr [rax], eax ; push rax ; mov bl, 0xf6 ; call rax
0x000000000019cbfe : add dword ptr [rax], eax ; push rax ; mov dl, 0xf6 ; call qword ptr [rdi]
0x000000000017f02a : add dword ptr [rax], eax ; push rax ; mov edi, dr0 ; jmp rax
0x000000000017e482 : add dword ptr [rax], eax ; push rax ; mov esi, dr0 ; jmp qword ptr [rax]
0x000000000017e60a : add dword ptr [rax], eax ; push rax ; ret 0xfff6
0x000000000019975e : add dword ptr [rax], eax ; push rax ; sal ch, 1 ; call rsi
0x000000000017ceba : add dword ptr [rax], eax ; push rax ; xchg eax, esi ; call qword ptr [rax]
0x000000000019802e : add dword ptr [rax], eax ; push rax ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000017d6e2 : add dword ptr [rax], eax ; push rax ; xor al, 0xf3 ; jmp qword ptr [rax]
0x000000000017eb6a : add dword ptr [rax], eax ; push rax ; xor bh, dh ; call rax
0x000000000017dbda : add dword ptr [rax], eax ; push rbp ; hlt ; jmp qword ptr [rax]
0x000000000017d7c2 : add dword ptr [rax], eax ; push rcx ; jmp qword ptr [rax]
0x000000000017d50a : add dword ptr [rax], eax ; rcl byte ptr [rdi - 0xe], 1 ; jmp rax
0x000000000019b86e : add dword ptr [rax], eax ; rcl byte ptr [rdx - 0xa], 1 ; call qword ptr [rdx]
0x000000000017e042 : add dword ptr [rax], eax ; rcr ah, 1 ; cmc ; call qword ptr [rax]
0x000000000019d2de : add dword ptr [rax], eax ; rcr dh, 0xf6 ; jmp qword ptr [rdi]
0x000000000019490e : add dword ptr [rax], eax ; ret
0x000000000019b2ae : add dword ptr [rax], eax ; rol byte ptr [rbp - 0xa], 1 ; jmp rdi
0x000000000017db1a : add dword ptr [rax], eax ; rol byte ptr [rbp - 0xc], 1 ; call rax
0x000000000017d432 : add dword ptr [rax], eax ; rol byte ptr [rbx - 0xe], 1 ; jmp rax
0x0000000000196f5e : add dword ptr [rax], eax ; rol byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000194aee : add dword ptr [rax], eax ; rol ch, 1 ; hlt ; call qword ptr [rsi]
0x0000000000195c1e : add dword ptr [rax], eax ; ror byte ptr [rbx], 0xf5 ; jmp rcx
0x000000000017d9e2 : add dword ptr [rax], eax ; ror byte ptr [rcx], 0xf4 ; jmp rax
0x0000000000193fce : add dword ptr [rax], eax ; ror byte ptr [rdi - 0xc], 1 ; jmp qword ptr [rcx]
0x000000000017e8fa : add dword ptr [rax], eax ; sal ah, 0xf6 ; call rax
0x000000000017ded2 : add dword ptr [rax], eax ; sal byte ptr [rcx], 0xf5 ; call rax
0x0000000000194ea6 : add dword ptr [rax], eax ; sal rsp, 1 ; jmp qword ptr [rcx]
0x000000000017e95a : add dword ptr [rax], eax ; sar bh, 0xf6 ; call rax
0x000000000017d23a : add dword ptr [rax], eax ; sar byte ptr [rax], 0xf1 ; call rax
0x000000000017ef6a : add dword ptr [rax], eax ; sar byte ptr [rdi - 9], 1 ; jmp qword ptr [rax]
0x000000000017f37a : add dword ptr [rax], eax ; sbb al, dil ; call qword ptr [rax]
0x000000000017f232 : add dword ptr [rax], eax ; sbb bh, 0xf7 ; call qword ptr [rax]
0x000000000019a726 : add dword ptr [rax], eax ; sbb bh, ch ; sti ; jmp qword ptr [rsi]
0x0000000000194016 : add dword ptr [rax], eax ; sbb byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x00000000001962ce : add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf5 ; jmp qword ptr [rsi]
0x000000000019de0e : add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf7 ; call qword ptr [rcx]
0x0000000000197b16 : add dword ptr [rax], eax ; sbb byte ptr [rdi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000017ea62 : add dword ptr [rax], eax ; sbb byte ptr [rdx], 0xf7 ; call qword ptr [rax]
0x000000000019657e : add dword ptr [rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x000000000017d79a : add dword ptr [rax], eax ; sbb cl, byte ptr [rbx - 0xd] ; call qword ptr [rax]
0x000000000019a466 : add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000017ee52 : add dword ptr [rax], eax ; shl byte ptr [rbp - 9], 1 ; call rax
0x000000000017d56a : add dword ptr [rax], eax ; shl byte ptr [rbx - 0xe], 1 ; jmp qword ptr [rax]
0x000000000019a32e : add dword ptr [rax], eax ; shl byte ptr [rbx], 0xf6 ; jmp qword ptr [rsi]
0x000000000019250e : add dword ptr [rax], eax ; shl byte ptr [rdx - 0xd], 1 ; call qword ptr [rsi]
0x0000000000197ace : add dword ptr [rax], eax ; shl byte ptr [rsi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000017f462 : add dword ptr [rax], eax ; shr byte ptr [rcx], 1 ; clc ; call rax
0x000000000019e34e : add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf7 ; call qword ptr [rbx]
0x0000000000191e9e : add dword ptr [rax], eax ; shr dl, 0xf2 ; jmp qword ptr [rcx]
0x000000000017cf32 : add dword ptr [rax], eax ; stc ; mov eax, dr0 ; call rax
0x00000000001956c6 : add dword ptr [rax], eax ; sub al, ch ; hlt ; jmp qword ptr [rcx]
0x000000000017eb1a : add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf7 ; jmp rax
0x0000000000194b96 : add dword ptr [rax], eax ; sub byte ptr [rsi], bh ; stc ; call qword ptr [rax]
0x00000000001954a6 : add dword ptr [rax], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000193bf6 : add dword ptr [rax], eax ; test al, 0x3b ; hlt ; jmp qword ptr [rsi]
0x0000000000192316 : add dword ptr [rax], eax ; test al, 0x40 ; call rsi
0x00000000001940f6 : add dword ptr [rax], eax ; test al, 0x50 ; hlt ; call qword ptr [rdx]
0x00000000001976b6 : add dword ptr [rax], eax ; test al, 0x58 ; cmc ; jmp rax
0x0000000000198286 : add dword ptr [rax], eax ; test al, 0x89 ; cmc ; jmp qword ptr [rcx]
0x00000000001989d6 : add dword ptr [rax], eax ; test al, 0x99 ; cmc ; jmp rsi
0x0000000000191396 : add dword ptr [rax], eax ; test al, 0xc1 ; jmp rbx
0x0000000000194f76 : add dword ptr [rax], eax ; test al, 0xd1 ; hlt ; jmp qword ptr [rcx]
0x0000000000191e86 : add dword ptr [rax], eax ; test al, 0xea ; jmp qword ptr [rcx]
0x00000000001936ae : add dword ptr [rax], eax ; xor ah, bh ; jmp rdx
0x0000000000180d3a : add dword ptr [rax], eax ; xor ah, ch ; cld ; jmp qword ptr [rax]
0x000000000017e0aa : add dword ptr [rax], eax ; xor ah, ch ; cmc ; call rax
0x000000000017dd3a : add dword ptr [rax], eax ; xor al, bl ; hlt ; jmp qword ptr [rax]
0x000000000019402e : add dword ptr [rax], eax ; xor byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x000000000019b58e : add dword ptr [rax], eax ; xor byte ptr [rbp - 0xa], cl ; call qword ptr [rax]
0x000000000017d702 : add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; call qword ptr [rax]
0x000000000017cd4a : add dword ptr [rax], eax ; xor byte ptr [rdi - 0x10], bl ; jmp rax
0x0000000000180e9a : add dword ptr [rax], eax ; xor byte ptr [rdi - 3], ch ; jmp qword ptr [rax]
0x000000000019acbe : add dword ptr [rax], eax ; xor byte ptr [rdi], 0xf6 ; jmp rbx
0x00000000000848e6 : add dword ptr [rax], edi ; ret 0x940f
0x00000000000b146d : add dword ptr [rax], esi ; add byte ptr [rax + 0x39], cl ; ret 0x940f
0x00000000001954d5 : add dword ptr [rax], r8d ; clc ; xor al, 0xf9 ; call qword ptr [rax]
0x0000000000195525 : add dword ptr [rax], r8d ; or dl, ah ; hlt ; call qword ptr [rax]
0x00000000001956c5 : add dword ptr [rax], r8d ; sub al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000894c9 : add dword ptr [rbp + 0x38], eax ; retf -0x7af1
0x0000000000089c2a : add dword ptr [rbp + 0x38], eax ; retf 0x1975
0x000000000008947a : add dword ptr [rbp + 0x38], eax ; retf 0x2075
0x0000000000089c73 : add dword ptr [rbp + 0x38], eax ; retf 0x7f75
0x00000000000da03a : add dword ptr [rbp + 0x3b], esi ; ret
0x000000000009e264 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x0000000000169d24 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x00000000000ff74f : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x000000000010bd36 : add dword ptr [rbp + 0x75020254], ecx ; ret
0x00000000000b7036 : add dword ptr [rbp + 1], ecx ; ret
0x000000000010f639 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000009f5d7 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000000000043834 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000baa11 : add dword ptr [rbp - 0x24], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010bd52 : add dword ptr [rbp - 0x55], esi ; mov eax, 0xffffffff ; ret
0x0000000000083bb9 : add dword ptr [rbp - 0x76be2fbf], ecx ; retf -0x77d
0x00000000000377a8 : add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000818cd : add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x0000000000061082 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x00000000000ff504 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rsi + rdx + 0x48], 0x39 ; retf -0x168b
0x00000000000edb09 : add dword ptr [rbp - 0xc], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087044 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000016a10a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000133902 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000168cea : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test dl, bh ; retf -0x2081
0x00000000000c7eea : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x0000000000002762 : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x0000000000158ac3 : add dword ptr [rbx + 0x41], ebx ; pop rsi ; ret
0x00000000001053f8 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x0000000000159cae : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000192cb6 : add dword ptr [rbx + rax], 0x37 ; add dword ptr [rdx], ecx ; ret
0x0000000000045b07 : add dword ptr [rbx + rcx*4 + 0x2c], ecx ; ret
0x00000000000fc191 : add dword ptr [rbx + rcx*4 + 0x2c], ecx ; retf -0x76b4
0x00000000000cd09a : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000010ba12 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000031d61 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000a9209 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00000000000ce6ca : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x0000000000197450 : add dword ptr [rbx], -0x7a ; add dh, byte ptr [rbp + 0xa] ; ret
0x0000000000199f8e : add dword ptr [rbx], 0xa ; ret
0x0000000000197442 : add dword ptr [rbx], 2 ; pop rdi ; ret
0x00000000001a447e : add dword ptr [rbx], ecx ; retf
0x00000000001191c1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000000f29e1 : add dword ptr [rcx + 0x1f0fc302], ecx ; add bl, dh ; ret
0x00000000001573ff : add dword ptr [rcx + 0x21], ecx ; ret 0xf6e9
0x00000000000843da : add dword ptr [rcx + 0x29], ecx ; ret
0x00000000000cf3c3 : add dword ptr [rcx + 0x38], eax ; retf
0x00000000000d52c6 : add dword ptr [rcx + 0x38], eax ; retf -0x138c
0x000000000009f7bf : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000ccd76 : add dword ptr [rcx + 0x39], eax ; ret 0x8e0f
0x0000000000085440 : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000084437 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x0000000000047e42 : add dword ptr [rcx + 0x39], ecx ; ret 0x6d7e
0x000000000003e3ce : add dword ptr [rcx + 0x39], ecx ; ret 0x8948
0x00000000000ae215 : add dword ptr [rcx + 0x39], ecx ; ret 0x8e0f
0x000000000008a257 : add dword ptr [rcx + 0x39], ecx ; ret 0xef75
0x00000000000883f1 : add dword ptr [rcx + 0x39], ecx ; sal byte ptr [rbp - 0x17], 1 ; or byte ptr [rdi], sil ; ret
0x00000000000c871f : add dword ptr [rcx + 0x5d], eax ; pop r14 ; pop r15 ; ret
0x0000000000111cbf : add dword ptr [rcx + 0x5d], eax ; pop r14 ; ret
0x0000000000022a0c : add dword ptr [rcx + rcx*4 + 0x7d], ecx ; test al, 0xe8 ; retf -0x25
0x000000000009f5d4 : add dword ptr [rcx + rcx*4 + 1], eax ; jne 0x9f5c7 ; ret
0x000000000010bd14 : add dword ptr [rcx + rcx*8 + 0x6348e775], eax ; ret 0xc741
0x000000000002c7b2 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000011ff5c : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ca33a : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x0000000000042327 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000095966 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000039e8d : add dword ptr [rcx - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000003f067 : add dword ptr [rcx - 0x77], ecx ; fisttp word ptr [rax - 0x77] ; ret
0x000000000008a011 : add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0x00000000000899b3 : add dword ptr [rcx - 0x77], ecx ; retf 0xf41
0x000000000003f95b : add dword ptr [rcx - 0x7d], ecx ; out dx, al ; add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x000000000003f0ae : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000002334d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000010bcdf : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a1c16 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x00000000000ccea3 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4504
0x000000000010bae4 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x0000000000029d46 : add dword ptr [rcx - 0x7d], ecx ; shr dword ptr [rax + 0x41], 0x39 ; ret
0x000000000017def1 : add dword ptr [rcx], 0xf550f000 ; jmp rax
0x00000000001991bd : add dword ptr [rcx], 0xf5b57000 ; call rdi
0x0000000000191265 : add dword ptr [rcx], eax ; add byte ptr [rax - 0x47], bl ; call rsi
0x00000000000aef2b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000bb0be : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000154a0e : add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000154a0c : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000054be1 : add dword ptr [rcx], eax ; ret
0x00000000000edc26 : add dword ptr [rcx], ebp ; retf
0x00000000000ccfd5 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000ccfa7 : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000026d4f : add dword ptr [rcx], ecx ; retf 0x3948
0x00000000000d70d1 : add dword ptr [rcx], edi ; ret
0x00000000000c99c4 : add dword ptr [rcx], edi ; ret 0xe37c
0x00000000000435f0 : add dword ptr [rcx], edi ; retf -0x76b4
0x0000000000169c35 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x000000000010b173 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000023ced : add dword ptr [rcx], esi ; test byte ptr [rax - 0x77], 0xdf ; call 0x20738
0x000000000009de82 : add dword ptr [rdi + 0x15], esi ; jb 0x9de90 ; mov byte ptr [rdi], cl ; ret
0x0000000000120d80 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x0000000000120d40 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000120dcf : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000015976a : add dword ptr [rdi + 3], esi ; ret
0x000000000010fd76 : add dword ptr [rdi + rax + 0x5b], esi ; pop rbp ; pop r12 ; ret
0x00000000000bbc4b : add dword ptr [rdi + rbp], ebx ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000007b402 : add dword ptr [rdi + rcx + 0x44], eax ; retf 0x2a8
0x00000000000cb42b : add dword ptr [rdi + rcx - 0x49], eax ; retf
0x0000000000085e57 : add dword ptr [rdi - 0x1a], edi ; ret
0x0000000000196f15 : add dword ptr [rdi], 0x6e ; ret
0x0000000000191cc3 : add dword ptr [rdi], 0x76 ; ret
0x000000000018c0d3 : add dword ptr [rdi], 2 ; lodsb al, byte ptr [rsi] ; ret
0x000000000019581b : add dword ptr [rdi], 3 ; add ecx, dword ptr fs:[rdx] ; ret
0x00000000001a344b : add dword ptr [rdi], 3 ; pop rsp ; add dword ptr [rdx], ecx ; ret
0x000000000018623a : add dword ptr [rdi], 3 ; ret
0x000000000010d1cf : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000c8ca8 : add dword ptr [rdi], ecx ; lahf ; ret 0x7fe9
0x000000000002ced5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000d14f2 : add dword ptr [rdi], ecx ; ret 0x894c
0x000000000011a608 : add dword ptr [rdi], ecx ; retf -0x37f1
0x00000000000b33ea : add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x000000000009e2c4 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x65e9
0x000000000009e2af : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000032ac3 : add dword ptr [rdi], ecx ; test al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000052911 : add dword ptr [rdi], ecx ; test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000da154 : add dword ptr [rdi], ecx ; test dword ptr [rbp - 0x9ffffff], esi ; ret 0xf01
0x000000000013e14e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000005bc94 : add dword ptr [rdi], ecx ; test dword ptr [rsi - 0x76000010], ebp ; ret
0x000000000010841e : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000042711 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x000000000009e18d : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x000000000009e520 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000f5ed3 : add dword ptr [rdx + 0x2b], edi ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000095924 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000151fcc : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006924e : add dword ptr [rdx + 4], 1 ; ret
0x00000000000692b8 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000001518fd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000002fe28 : add dword ptr [rdx + rax + 0xf], esi ; retf -0x76bf
0x00000000000f274b : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000018a196 : add dword ptr [rdx + rax], -0xc ; ret
0x0000000000192a66 : add dword ptr [rdx + rax], 0x48 ; ret
0x000000000019e406 : add dword ptr [rdx + rax], 0x53 ; ret
0x000000000019d28e : add dword ptr [rdx + rax], 0x5f ; ret
0x000000000010fd2b : add dword ptr [rdx + rcx + 0x48], esi ; mov dword ptr [rdi], eax ; ret
0x00000000000d9416 : add dword ptr [rdx + rdx*8 - 0x76b21a8b], eax ; ret 0x894d
0x000000000016990f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000018d6a6 : add dword ptr [rdx], 0x4b ; ret
0x00000000001a2874 : add dword ptr [rdx], 0x51 ; ret
0x0000000000197354 : add dword ptr [rdx], 0x53 ; ret
0x000000000018a32c : add dword ptr [rdx], 0x54 ; ret
0x000000000019dff4 : add dword ptr [rdx], 0x59 ; ret
0x000000000019a77b : add dword ptr [rdx], 0x5b ; ret
0x0000000000185654 : add dword ptr [rdx], 0x63 ; ret
0x000000000019cab4 : add dword ptr [rdx], 0x65 ; ret
0x000000000018be7c : add dword ptr [rdx], 0x6c ; ret
0x000000000018604c : add dword ptr [rdx], 0x6f ; ret
0x0000000000188fe4 : add dword ptr [rdx], 0x77 ; ret
0x000000000019cb2d : add dword ptr [rdx], 0x7f ; ret
0x00000000001808e1 : add dword ptr [rdx], 0xfaa33000 ; jmp rax
0x0000000000186055 : add dword ptr [rdx], 2 ; mov dl, 0xa ; ret
0x000000000018d69c : add dword ptr [rdx], 2 ; ret
0x000000000019d5bc : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x0000000000188ab8 : add dword ptr [rdx], eax ; mov edi, 0x41380e0a ; ret
0x000000000010baef : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000001871d9 : add dword ptr [rdx], eax ; ret
0x00000000001a423f : add dword ptr [rdx], ecx ; jne 0x1a424c ; retf
0x00000000001a44d9 : add dword ptr [rdx], ecx ; jne 0x1a44e6 ; retf
0x0000000000192cba : add dword ptr [rdx], ecx ; ret
0x000000000010baee : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007aa28 : add dword ptr [rip + 0x333e35], 1 ; ret
0x00000000000538fd : add dword ptr [rip - 0x7d000000], ebp ; ret
0x000000000008949a : add dword ptr [rsi + 0xf], eax ; mov dh, 0xc ; add eax, dword ptr [rbp + 0x38] ; retf -0x78f1
0x00000000000958b5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001496fe : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000019ca4b : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; add ah, byte ptr [rcx + 0xa] ; ret
0x000000000018d227 : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000018b4ff : add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x0000000000187d18 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000018a36a : add dword ptr [rsi + rcx + 0x30], ecx ; add al, al ; ret
0x0000000000095937 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000019daa8 : add dword ptr [rsi], 0x69 ; ret
0x000000000018f788 : add dword ptr [rsi], 0x77 ; ret
0x00000000001930c0 : add dword ptr [rsi], 2 ; hlt ; ret
0x000000000018a100 : add dword ptr [rsi], 2 ; pop rbx ; ret
0x00000000000cd0dc : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xcd0f3 ; je 0xcd083 ; pop rbx ; ret
0x000000000017d311 : add dword ptr cs:[rax], eax ; mov al, 0x26 ; call qword ptr [rax]
0x0000000000193f05 : add dword ptr cs:[rax], eax ; mov byte ptr [rdi - 0xc], cl ; call qword ptr [rbx]
0x0000000000193f45 : add dword ptr cs:[rax], eax ; mov byte ptr [rdi - 0xc], cl ; call qword ptr [rsi]
0x0000000000193f85 : add dword ptr cs:[rax], eax ; mov byte ptr [rdi - 0xc], cl ; jmp qword ptr [rcx]
0x000000000017d301 : add dword ptr cs:[rax], eax ; nop ; jmp rax
0x000000000017d571 : add dword ptr ds:[rax], eax ; jo 0x17d5e3 ; call rax
0x000000000017d571 : add dword ptr ds:[rax], eax ; jo 0x17d5e4 ; call rax
0x000000000017d579 : add dword ptr ds:[rax], eax ; loopne 0x17d509 ; jmp qword ptr [rax]
0x000000000017d579 : add dword ptr ds:[rax], eax ; loopne 0x17d50a ; jmp qword ptr [rax]
0x0000000000194f5d : add dword ptr ds:[rax], eax ; nop ; sal esp, 1 ; jmp qword ptr [rcx]
0x0000000000194f75 : add dword ptr ds:[rax], eax ; test al, 0xd1 ; hlt ; jmp qword ptr [rcx]
0x000000000014d177 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017d201 : add dword ptr es:[rax], eax ; cmp ah, 0xf0 ; call rax
0x000000000019561c : add dword ptr fs:[r8], r8d ; and bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000019754d : add dword ptr fs:[rax], eax ; adc byte ptr [rdi - 0xb], dl ; call qword ptr [rdx]
0x000000000017dab1 : add dword ptr fs:[rax], eax ; jo 0x17daf1 ; hlt ; call rax
0x000000000019531c : add dword ptr fs:[rax], eax ; loopne 0x195302 ; hlt ; jmp qword ptr [rcx]
0x000000000017dab9 : add dword ptr fs:[rax], eax ; push rax ; hlt ; call qword ptr [rax]
0x00000000000cc285 : add dword ptr gs:[rax - 0x7d], ecx ; ret
0x0000000000156ec7 : add dword ptr gs:[rax], eax ; add byte ptr [rcx + 0x21], cl ; ret 0x2be9
0x0000000000197625 : add dword ptr gs:[rax], eax ; js 0x197687 ; cmc ; call qword ptr [rax]
0x000000000017dac9 : add dword ptr gs:[rax], eax ; mov al, 0x3d ; hlt ; jmp rax
0x00000000001976b5 : add dword ptr gs:[rax], eax ; test al, 0x58 ; cmc ; jmp rax
0x00000000000ccfa6 : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x000000000017d431 : add dword ptr ss:[rax], eax ; rol byte ptr [rbx - 0xe], 1 ; jmp rax
0x0000000000004cb1 : add eax, 0 ; add byte ptr [rax], al ; ret
0x0000000000007369 : add eax, 0 ; add byte ptr [rax], al ; ret 0x55
0x000000000000b251 : add eax, 0 ; add byte ptr [rax], al ; retf 0x36
0x000000000010b196 : add eax, 0x10 ; ret
0x000000000016f30c : add eax, 0x10 ; retf 8
0x000000000009e59b : add eax, 0x10630 ; cmove rax, rdx ; ret
0x000000000002bffa : add eax, 0x145200 ; ret
0x000000000011b42c : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x0000000000021172 : add eax, 0x14fbd4 ; ret
0x0000000000021182 : add eax, 0x151a01 ; ret
0x00000000000b2c60 : add eax, 0x16e ; ret
0x0000000000084d47 : add eax, 0x18554 ; cmove rax, rdx ; ret
0x0000000000085314 : add eax, 0x18637 ; cmovne rax, rdx ; ret
0x000000000008505b : add eax, 0x188d0 ; cmovne rax, rdx ; ret
0x0000000000084f1d : add eax, 0x18a2e ; cmovne rax, rdx ; ret
0x0000000000084380 : add eax, 0x194fb ; cmovne rax, rdx ; ret
0x0000000000084098 : add eax, 0x19743 ; cmovne rax, rdx ; ret
0x0000000000083b93 : add eax, 0x19ba8 ; cmovne rax, rdx ; ret
0x00000000001a4382 : add eax, 0x1bd0000 ; mov byte ptr [rcx], al ; retf 2
0x000000000014995a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000001909fc : add eax, 0x2300e44 ; ret 0xe0a
0x000000000018c384 : add eax, 0x2400e47 ; retf
0x0000000000125865 : add eax, 0x287ca6 ; call qword ptr [rax]
0x0000000000125262 : add eax, 0x2882a9 ; call qword ptr [rax]
0x000000000011ddc2 : add eax, 0x28e0c1 ; add rsp, 8 ; ret
0x000000000011dd92 : add eax, 0x28e159 ; add rsp, 8 ; ret
0x000000000011dd32 : add eax, 0x28e251 ; add rsp, 8 ; ret
0x000000000011dd62 : add eax, 0x28e279 ; add rsp, 8 ; ret
0x00000000000842e3 : add eax, 0x29000000 ; ret
0x00000000000b3429 : add eax, 0x2907f9c1 ; ret 0xf089
0x000000000010f782 : add eax, 0x29c861 ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000113d3a : add eax, 0x29d189 ; add rsp, 8 ; ret
0x0000000000113d21 : add eax, 0x29d1a2 ; test eax, eax ; je 0x113d39 ; ret
0x0000000000113486 : add eax, 0x29d9d5 ; add rsp, 8 ; ret
0x0000000000113456 : add eax, 0x29da05 ; add rsp, 8 ; ret
0x000000000011343a : add eax, 0x29da21 ; add rsp, 8 ; ret
0x000000000010f31b : add eax, 0x2a1864 ; test eax, eax ; je 0x10f331 ; ret
0x0000000000109072 : add eax, 0x2a4901 ; ret
0x0000000000108610 : add eax, 0x2a534b ; add rsp, 8 ; ret
0x00000000000fd5b9 : add eax, 0x2b2c82 ; pop rbp ; ret
0x00000000000f3072 : add eax, 0x2b8de1 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000ebac0 : add eax, 0x2c387b ; add rsp, 0x18 ; ret
0x00000000000eba6c : add eax, 0x2c390f ; pop rbp ; pop r12 ; ret
0x00000000000eb528 : add eax, 0x2c3dc3 ; add rsp, 8 ; ret
0x00000000000eb4c9 : add eax, 0x2c3e42 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8d30 : add eax, 0x2c4b6b ; add rsp, 8 ; ret
0x00000000000ea24b : add eax, 0x2c4fc0 ; add rsp, 8 ; ret
0x00000000000e9e69 : add eax, 0x2c52d2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e1d4 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x000000000004972a : add eax, 0x300 ; add rax, rdx ; jmp rax
0x00000000000840c7 : add eax, 0x32a8dc ; add rsp, 8 ; ret
0x0000000000080670 : add eax, 0x32b85b ; mov qword ptr [rax], rdi ; ret
0x0000000000080696 : add eax, 0x32bbb5 ; jne 0x806a8 ; ret
0x0000000000080681 : add eax, 0x32e23e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007d995 : add eax, 0x32e426 ; xor edi, edi ; call qword ptr [rax]
0x000000000007d7c0 : add eax, 0x32e5fb ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007b315 : add eax, 0x330fae ; ret
0x000000000007b305 : add eax, 0x330fb6 ; ret
0x000000000007b2b5 : add eax, 0x330fbe ; ret
0x000000000007b28f : add eax, 0x330fcc ; ret
0x000000000007b2a5 : add eax, 0x330fd6 ; ret
0x000000000007b25f : add eax, 0x331004 ; ret
0x000000000007b23e : add eax, 0x331049 ; ret
0x000000000007a992 : add eax, 0x332c89 ; ret
0x000000000007b274 : add eax, 0x333673 ; ret
0x000000000007aa96 : add eax, 0x333dc9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000068ab5 : add eax, 0x345d46 ; pop rbx ; pop rbp ; ret
0x0000000000034e8c : add eax, 0x3772fb ; mov eax, edx ; ret
0x0000000000034e51 : add eax, 0x377332 ; ret
0x0000000000034e41 : add eax, 0x377346 ; ret
0x000000000008abf5 : add eax, 0x3796 ; cmove rax, rdx ; ret
0x0000000000037b62 : add eax, 0x379a0f ; add rsp, 8 ; ret
0x000000000002ca6d : add eax, 0x37f36e ; mov qword ptr [rax], rdx ; ret
0x000000000002bc7e : add eax, 0x381ea5 ; mov eax, ecx ; syscall
0x00000000000296f2 : add eax, 0x3842f9 ; ret
0x0000000000075e84 : add eax, 0x38c48348 ; ret
0x0000000000022012 : add eax, 0x38f419 ; ret
0x0000000000022002 : add eax, 0x38f439 ; ret
0x00000000001285c3 : add eax, 0x3d8d4800 ; out dx, al ; ret
0x000000000014997a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x00000000001994e5 : add eax, 0x43200e49 ; ret
0x0000000000001e80 : add eax, 0x43cdb26c ; push rbp ; salc ; retf 0x559a
0x00000000000ff7cc : add eax, 0x440f4800 ; ret 0x66c3
0x00000000000fdf0b : add eax, 0x450f4800 ; ret 0x66c3
0x00000000000fdcb4 : add eax, 0x450f4800 ; ret 0xf6c3
0x0000000000113457 : add eax, 0x480029da ; add esp, 8 ; ret
0x0000000000140708 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000013c3b8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000098e56 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000010d1d1 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000fde13 : add eax, 0x4ff58 ; cmovne rax, rdx ; ret
0x00000000000fdd62 : add eax, 0x50029 ; cmovne rax, rdx ; ret
0x00000000000fdcb1 : add eax, 0x500da ; cmovne rax, rdx ; ret
0x00000000000fdec4 : add eax, 0x50347 ; cmovne rax, rdx ; ret
0x00000000000013d9 : add eax, 0x50d0000 ; add byte ptr [rax], al ; syscall
0x0000000000140789 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013c3f9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000000fde61 : add eax, 0x542ea ; cmovne rax, rdx ; ret
0x00000000000fddb0 : add eax, 0x543bb ; cmovne rax, rdx ; ret
0x00000000000fdcff : add eax, 0x5446c ; cmovne rax, rdx ; ret
0x00000000000fdf08 : add eax, 0x54813 ; cmovne rax, rdx ; ret
0x000000000017f6b9 : add eax, 0x57700002 ; clc ; jmp qword ptr [rax]
0x000000000017f6e9 : add eax, 0x58c00002 ; clc ; jmp rax
0x000000000006c536 : add eax, 0x5b000000 ; ret
0x0000000000120ca2 : add eax, 0x5ba00 ; add byte ptr [rax], al ; call 0x2d6b9
0x000000000016597d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000000153d : add eax, 0x5c10000 ; add byte ptr [rax], al ; ret
0x000000000007c018 : add eax, 0x5c415d5b ; ret
0x000000000016598d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000000ddccd : add eax, 0x5d000000 ; pop r12 ; ret
0x0000000000112c72 : add eax, 0x5e588 ; ret
0x0000000000149da3 : add eax, 0x60 ; add rax, rdi ; ret
0x000000000014999a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000001a4de1 : add eax, 0x6bd0000 ; add byte ptr [rax], al ; ret
0x00000000000c8a48 : add eax, 0x75c33948 ; ret 0x8948
0x000000000008667d : add eax, 0x7b0e ; cmove rax, rdx ; ret
0x000000000009965e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x000000000009e187 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000001442bd : add eax, 0x83480000 ; ret 0x4910
0x0000000000146e11 : add eax, 0x83480000 ; ret 0xe910
0x0000000000144211 : add eax, 0x83480000 ; ret 0xeb10
0x000000000014070b : add eax, 0x8428d48 ; ret
0x000000000004c737 : add eax, 0x89410000 ; ret 0x8d41
0x000000000008d858 : add eax, 0x894d0000 ; retf
0x000000000006d3ae : add eax, 0x89c08500 ; ret 0x8389
0x00000000000fd489 : add eax, 0x89c78944 ; ret
0x0000000000084e10 : add eax, 0x904b ; cmove rax, rdx ; ret
0x0000000000154dfc : add eax, 0x94d0000 ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000009ad12 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000011dd86 : add eax, 0xa0 ; add rsp, 8 ; ret
0x000000000011ddb6 : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000009f8c5 : add eax, 0xaeac6 ; je 0x9f89a ; ret
0x000000000012516e : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000015034a : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x000000000014078d : add eax, 0xc428d48 ; ret
0x000000000009a49d : add eax, 0xc478d48 ; ret
0x0000000000084e6d : add eax, 0xc505e ; je 0x84e42 ; ret
0x00000000000852ac : add eax, 0xc8aef ; cmovne rax, rdx ; ret
0x0000000000084ff3 : add eax, 0xc8d88 ; cmovne rax, rdx ; ret
0x0000000000084eb5 : add eax, 0xc8ee6 ; cmovne rax, rdx ; ret
0x0000000000084f66 : add eax, 0xc92b5 ; cmovne rax, rdx ; ret
0x00000000000852fa : add eax, 0xcce81 ; cmovne rax, rdx ; ret
0x0000000000085041 : add eax, 0xcd11a ; cmovne rax, rdx ; ret
0x0000000000084f03 : add eax, 0xcd278 ; cmovne rax, rdx ; ret
0x0000000000084faa : add eax, 0xcd781 ; cmovne rax, rdx ; ret
0x00000000000866a7 : add eax, 0xcf64 ; cmove rax, rdx ; ret
0x000000000009b2ed : add eax, 0xd478d48 ; ret
0x0000000000030c3f : add eax, 0xd93d8b48 ; retf
0x00000000000ab26f : add eax, 0xdf894801 ; call 0x127cf7
0x00000000000303ca : add eax, 0xe900140f ; retf -0xf
0x0000000000110bea : add eax, 0xebc58948 ; retf -0x7cb8
0x000000000009f868 : add eax, 0xf003 ; cmove rax, rdx ; ret
0x00000000000c7156 : add eax, 0xf410000 ; mov dh, 0x14 ; and al, 0x39 ; ret 0x840f
0x000000000009f65d : add eax, 0xf6fe ; cmove rax, rdx ; ret
0x000000000008407a : add eax, 0xf7a1 ; cmove rax, rdx ; ret
0x00000000001338f3 : add eax, 0xf7f0ff3 ; ret
0x000000000004d435 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000009f288 : add eax, 0xf913 ; cmovne rax, rdx ; ret
0x0000000000083f8f : add eax, 0xfb7c ; cmove rax, rdx ; ret
0x0000000000083fb9 : add eax, 0xfcf2 ; cmove rax, rdx ; ret
0x000000000009f349 : add eax, 0xffe2 ; cmove rax, rdx ; ret
0x00000000000fde7b : add eax, 0xfff9faa0 ; cmovne rax, rdx ; ret
0x00000000000fddca : add eax, 0xfff9fb71 ; cmovne rax, rdx ; ret
0x00000000000fdd19 : add eax, 0xfff9fc22 ; cmovne rax, rdx ; ret
0x00000000001a4479 : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; retf
0x00000000001a423a : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1a4251 ; retf
0x00000000001a44d4 : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1a44eb ; retf
0x0000000000055089 : add eax, 0xfffffcfc ; add rax, rdx ; jmp rax
0x00000000000e1c84 : add eax, 0xffffff67 ; cmove rax, rdx ; ret
0x00000000000f29df : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000f29c9 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x000000000009e262 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008508b : add eax, 1 ; ret
0x0000000000021ea5 : add eax, 2 ; push rax ; call rbx
0x00000000000af528 : add eax, 2 ; ret
0x00000000000af541 : add eax, 3 ; ret
0x00000000000ccfdb : add eax, 8 ; ret
0x0000000000021359 : add eax, dword ptr [0] ; ret
0x0000000000027a16 : add eax, dword ptr [rax] ; add al, ch ; ret 0x52
0x00000000000b5d16 : add eax, dword ptr [rax] ; add al, ch ; ret 0xf76f
0x00000000000fccfd : add eax, dword ptr [rax] ; add al, ch ; wait ; ret 2
0x0000000000025de7 : add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000028bf8 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000041041 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x000000000004c3ed : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x00000000000c3bcb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; jnp 0xc3bfb ; call 0x205e9
0x000000000015825f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 9], cl ; ret
0x000000000007e0ea : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; enter 0x4801, -0x77 ; ret 0x8b49
0x000000000010a5c8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000014445d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a7a7d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000146fb1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144481 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000119eae : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001169db : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000f2346 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fd2d7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000ec36c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000bb018 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000076d55 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000000af583 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000297b5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000145458 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cf71f : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000009e2bf : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x65e9
0x000000000003b01e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x71f0e908], al ; ret
0x0000000000155703 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000011de0f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x000000000002f49d : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; push rbp ; sbb byte ptr [rdi], cl ; retf -0x2d77
0x00000000000fccb5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000020af4 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x0000000000037a1a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000001126a5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000c9065 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf
0x00000000000c9142 : add eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret
0x00000000001a4cd5 : add eax, dword ptr [rax] ; add byte ptr [rdx + 2], al ; add byte ptr [rax], al ; retf 0
0x00000000000fcd55 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000018780d : add eax, dword ptr [rax] ; add byte ptr [rsp + rax*8], al ; retf 1
0x00000000000ae09e : add eax, dword ptr [rax] ; add cl, ch ; ret
0x00000000000ae2b7 : add eax, dword ptr [rax] ; add cl, ch ; retf
0x00000000000fdcd8 : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000bf8ff : add eax, dword ptr [rax] ; mov edi, eax ; mov eax, 0x22 ; syscall
0x00000000000e8817 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000009df50 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009df70 : add eax, dword ptr [rax] ; ret
0x000000000008949f : add eax, dword ptr [rbp + 0x38] ; retf -0x78f1
0x0000000000089adc : add eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x00000000001915db : add eax, dword ptr [rbx + 0xa810204] ; ret
0x000000000018a3ea : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4b0204], al ; ret
0x00000000000c8c24 : add eax, dword ptr [rbx - 0x6bf0f903] ; ret 0xfd83
0x000000000010b9ed : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x10b9fe ; ret
0x000000000013e199 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000000000018275a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x0000000000187f6a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000010cd90 : add eax, dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0xf45
0x00000000000f3ada : add eax, dword ptr [rcx + rdx] ; ret
0x00000000000cb427 : add eax, dword ptr [rcx - 0x7d] ; clc ; add dword ptr [rdi + rcx - 0x49], eax ; retf
0x000000000010db6d : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x000000000017cc99 : add eax, dword ptr [rcx] ; add al, dh ; cmp al, 0xf0 ; jmp rax
0x00000000000e1f4b : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000032590 : add eax, dword ptr [rdi + 0x20] ; ret
0x00000000001972b2 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; retf
0x0000000000127edf : add eax, dword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x000000000012878a : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000000f38b6 : add eax, dword ptr [rdx + rcx] ; ret
0x00000000001a147d : add eax, dword ptr [rdx] ; add al, ah ; ret
0x00000000001a149d : add eax, dword ptr [rdx] ; add al, dh ; ret
0x000000000013e299 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001a141d : add eax, dword ptr [rdx] ; add byte ptr [rax], dh ; ret 0xfff7
0x0000000000197443 : add eax, dword ptr [rdx] ; pop rdi ; ret
0x00000000000fdec6 : add eax, dword ptr [rip + 0x450f4800] ; ret 0xf6c3
0x000000000019317d : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x000000000019318f : add eax, dword ptr [rsi + 0x180e4a02] ; ret
0x0000000000188c12 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x000000000018652a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000019fa02 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rax + rdi*2], 0xa ; ret
0x0000000000199f8a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rbx], 0xa ; ret
0x000000000018a192 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x0000000000192a62 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x48 ; ret
0x000000000019e402 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x53 ; ret
0x000000000014cf6f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cf71e : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001a141c : add eax, dword ptr fs:[rdx] ; add byte ptr [rax], dh ; ret 0xfff7
0x000000000009e021 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000008aa46 : add eax, eax ; jmp r8
0x000000000008ab18 : add eax, eax ; jmp rax
0x000000000004eb08 : add eax, eax ; ret
0x0000000000149e71 : add eax, eax ; vzeroupper ; ret
0x0000000000085be8 : add eax, ebp ; mov dl, 0xa9 ; stc ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000741be : add eax, ebp ; ret
0x000000000010e2d7 : add eax, ebp ; retf
0x00000000001065d0 : add eax, ebp ; retf -0x241
0x000000000010dcd8 : add eax, ebp ; retf -0xed6
0x00000000001090a1 : add eax, ebp ; sbb dword ptr [rdi + rsi*8 + 0x58948ff], ebp ; retf 0x2a48
0x00000000000fdf57 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014d578 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000011c06b : add eax, ecx ; jmp rax
0x000000000008dee9 : add eax, ecx ; ret
0x000000000014d90d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x00000000001497d6 : add eax, ecx ; vzeroupper ; ret
0x0000000000149e6e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x000000000008dee6 : add eax, edi ; add rax, rcx ; ret
0x00000000001497d3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000008e70a : add eax, edi ; add rax, rsi ; ret
0x000000000004c3f1 : add eax, edi ; jmp rax
0x000000000004c81a : add eax, edi ; mov edx, 1 ; jmp rax
0x000000000008a99e : add eax, edi ; mov qword ptr [rdi], rdx ; ret
0x000000000004c665 : add eax, edi ; mov r11d, 1 ; jmp rax
0x0000000000057eb0 : add eax, edi ; mov r8d, 1 ; jmp rax
0x000000000008a990 : add eax, edi ; ret
0x000000000014941b : add eax, edi ; sub rax, r8 ; ret
0x0000000000149670 : add eax, edi ; sub rax, rdx ; ret
0x000000000014d9c5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000014994a : add eax, edi ; vzeroupper ; ret
0x00000000000e1c0d : add eax, edx ; cmp rdi, rsi ; ja 0xe1c08 ; ret
0x000000000002d7f6 : add eax, edx ; jmp rax
0x0000000000115e2e : add eax, edx ; ret
0x0000000000093ca6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000af22b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000000e8815 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000009df8c : add eax, esi ; jmp rax
0x000000000004b903 : add eax, esi ; mov edx, 1 ; xor esi, esi ; jmp rax
0x000000000008e70d : add eax, esi ; ret
0x000000000004eb07 : add eax, r8d ; ret
0x000000000004e838 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000afc78 : add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000113664 : add ebp, dword ptr [rcx] ; ret 0x8166
0x000000000002e4a1 : add ebp, eax ; stc ; and bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xd3e9
0x000000000002df79 : add ebp, eax ; xchg eax, ecx ; and eax, 0x8948ffff ; ret 0x8548
0x0000000000168877 : add ebp, ebp ; retf
0x00000000000b7d87 : add ebp, ecx ; ret 0xfff0
0x00000000001a42ec : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00000000000d0502 : add ebp, esi ; call rcx
0x000000000000320e : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000083af9 : add ebp, esi ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000127f72 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000010beed : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000001a344d : add ebx, dword ptr [rcx + rax + 0xa] ; ret
0x000000000002fa3d : add ebx, eax ; mov eax, dword ptr [r15 + 4] ; jmp 0x2fa17
0x00000000000afd83 : add ebx, eax ; mov qword ptr [rbp], rbx ; call r12
0x00000000000fc60c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000043b61 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000014a02b : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000000f00f7 : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000e92ed : add ebx, ebp ; and ecx, dword ptr [rax - 0x7d] ; ret 0x3c01
0x00000000000eb961 : add ebx, ebp ; ret
0x0000000000021258 : add ebx, ebp ; ret 0x1f0f
0x00000000000be583 : add ebx, esi ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x0000000000133ab3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f31af : add ebx, esi ; ret
0x000000000011fc1e : add ebx, esp ; call r14
0x000000000009de67 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x9de5c ; ret
0x00000000000e0d0f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000066c59 : add ecx, 8 ; mov edi, 1 ; jmp 0x66c2f
0x00000000000959ba : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000154d13 : add ecx, dword ptr [rax + 0x21] ; retf -0x76b8
0x00000000001065c9 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007c6c8 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000c7eed : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000001077d8 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000086b81 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x00000000001070a9 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000869af : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x000000000015801b : add ecx, dword ptr [rax + 0x39] ; retf 0x2377
0x000000000015555b : add ecx, dword ptr [rax + 0x39] ; retf 0x2777
0x000000000010bf0c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000e9a84 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009fa0a : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x9fa24 ; ret
0x00000000000959be : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000001016c1 : add ecx, dword ptr [rax - 0x77] ; ret
0x00000000000d6c49 : add ecx, dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000fa3a7 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x00000000001328d4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x00000000000f98f8 : add ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rdi + 0x48], 0x83 ; ret
0x00000000000b4115 : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000018c619 : add ecx, dword ptr [rbp + 0x80e5d02] ; ret
0x0000000000187212 : add ecx, dword ptr [rbp + 0xe] ; lock add dword ptr [rdx], eax ; ret
0x0000000000128231 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x0000000000133822 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000011a691 : add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x0000000000021573 : add ecx, dword ptr [rbx - 0x7cb77efc] ; ret 0x4801
0x0000000000098df4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000e59f7 : add ecx, dword ptr [rcx + 0xf10244c] ; xchg eax, esp ; ret 0x8440
0x0000000000069b43 : add ecx, dword ptr [rcx + rbp - 0x1e] ; syscall
0x00000000000959bb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000001a321d : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x0000000000099620 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000ab335 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000183f83 : add ecx, dword ptr [rdx + rax + 0x200e0a7c] ; ret
0x000000000019581f : add ecx, dword ptr [rdx] ; ret
0x000000000018a38d : add ecx, dword ptr [rsi + 0xa5a0202] ; ret
0x000000000019581e : add ecx, dword ptr fs:[rdx] ; ret
0x000000000005dfad : add ecx, ebp ; ret
0x00000000000f7676 : add ecx, ebp ; ret 0xfffd
0x000000000012babb : add ecx, ebx ; jmp r9
0x000000000014f312 : add ecx, ebx ; jmp rcx
0x00000000000ebf54 : add ecx, ebx ; ret
0x00000000000ebc68 : add ecx, ebx ; ret 0x3944
0x000000000008a973 : add ecx, ecx ; jmp rcx
0x0000000000043505 : add ecx, edx ; jmp rcx
0x00000000000489ef : add ecx, edx ; mov rax, r9 ; add rsp, 0x28 ; ret
0x000000000009dfc4 : add ecx, esi ; jmp rcx
0x0000000000119bcd : add edi, 0x10 ; jmp rcx
0x00000000001137af : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000128399 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000011564a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000bfbf2 : add edi, 0x28 ; mov eax, r12d ; syscall
0x00000000000fd0db : add edi, 0x28 ; mov eax, r9d ; syscall
0x000000000011c034 : add edi, 0x58 ; jmp rcx
0x000000000011b794 : add edi, 0x68 ; jmp rcx
0x0000000000119057 : add edi, 0xc8 ; jmp rcx
0x00000000000c2033 : add edi, 1 ; test dl, dl ; jne 0xc2021 ; ret
0x0000000000030ee9 : add edi, dword ptr [rax - 0x76b7ffc9] ; ret 0x8948
0x0000000000158db3 : add edi, dword ptr [rbp + 0x10] ; call rbx
0x000000000018b2aa : add edi, dword ptr [rbp + 0x380e0a01] ; ret
0x00000000000d89c3 : add edi, dword ptr [rcx] ; retf -0x7bf1
0x00000000000621ba : add edi, eax ; jmp rdi
0x000000000010bd24 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000021134 : add edi, ebp ; call rax
0x00000000000c3c8b : add edi, ebx ; mov ebx, 1 ; call 0x20719
0x000000000012bab8 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000000a3ddc : add edi, edx ; dec dword ptr [rbx + rcx*4 + 0x55] ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x000000000018028d : add edi, edx ; jmp qword ptr [rax]
0x000000000003491c : add edi, esi ; ret 0
0x0000000000156a3e : add edi, esp ; jmp r15
0x000000000010b6d1 : add edx, 0xc ; cmp rdx, r8 ; jne 0x10b6c2 ; ret
0x000000000010d1cd : add edx, 1 ; syscall
0x000000000010bce1 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000008e618 : add edx, eax ; jl 0x8e687 ; add rax, rdi ; ret
0x000000000008e628 : add edx, eax ; jl 0x8e689 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e648 : add edx, eax ; jl 0x8e689 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e668 : add edx, eax ; jl 0x8e689 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000021721 : add edx, eax ; jmp rdx
0x00000000000446f2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000b6284 : add edx, ecx ; jmp rdx
0x00000000000b36dc : add edx, edi ; jmp rdx
0x0000000000190171 : add edx, esi ; jmp qword ptr [rax]
0x0000000000031bb1 : add edx, esi ; jmp rdx
0x00000000000afb35 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000011ab95 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010b171 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000009ce79 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000011d2b0 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000192cb8 : add esi, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x00000000000e4499 : add esi, dword ptr [rsi + 0x18] ; mov eax, ecx ; syscall
0x00000000001840bb : add esi, dword ptr [rsi + 0x41380e01] ; ret
0x0000000000115372 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000029e17 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000000c9f5f : add esi, dword ptr [rsi + rax - 0xd] ; ret
0x000000000009f869 : add esi, eax ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000021415 : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000021443 : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x000000000008a69a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008a719 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000f8eaa : add esi, eax ; and al, 0xc ; add ecx, ebp ; ret
0x0000000000041a1b : add esi, eax ; jmp qword ptr [rax]
0x000000000002b2ad : add esi, eax ; jmp rsi
0x0000000000120a63 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000032d7e : add esi, ebp ; mov eax, r8d ; syscall
0x00000000001339d3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000009d9c5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000127793 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000008069c : add esi, ebx ; ret
0x000000000007ff3c : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000034ae9 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000019db19 : add esi, edi ; call rsi
0x000000000015174c : add esi, edi ; fadd st(3) ; ret
0x000000000009e009 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000031ddf : add esi, edi ; jmp rsi
0x000000000012bab5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000c87a7 : add esi, esi ; or esi, r10d ; jne 0xc87b8 ; ret
0x00000000000cd06b : add esi, esi ; ret
0x000000000006c958 : add esi, esi ; ret 0x7420
0x00000000000f93e3 : add esi, esi ; ret 0xf04
0x0000000000054e68 : add esi, esi ; ret 0xf40
0x0000000000115fa7 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x00000000000826c4 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000120fd6 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f96 : add esp, 0x10 ; movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000079231 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000029986 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000345de : add esp, 0x10 ; pop rbx ; ret
0x000000000010b306 : add esp, 0x10 ; ret
0x0000000000029957 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aae31 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000009d7cd : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000068b53 : add esp, 0x1000 ; pop rbx ; ret
0x0000000000068b61 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003471c : add esp, 0x108 ; ret
0x00000000000e361e : add esp, 0x120 ; pop rbx ; ret
0x0000000000128704 : add esp, 0x130 ; mov eax, ebx ; pop rbx ; ret
0x00000000001286e3 : add esp, 0x130 ; pop rbx ; ret
0x0000000000034949 : add esp, 0x140 ; pop rbx ; ret
0x00000000000340a4 : add esp, 0x148 ; ret
0x0000000000113e2c : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000001081f0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000e7f4d : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000dcede : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000082286 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000006d9a1 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000069136 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000011ffa6 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000120f4c : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000048e97 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000114112 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000037bf5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002d677 : add esp, 0x18 ; ret
0x0000000000042a78 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e2bd7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000799bd : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000007976d : add esp, 0x20 ; pop rbx ; jmp rax
0x00000000000799f6 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000033a0e : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033d45 : add esp, 0x20 ; pop rbx ; ret
0x000000000011a899 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2b84 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000212fe : add esp, 0x28 ; jmp rax
0x0000000000020efd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000407b5 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000033503 : add esp, 0x28 ; ret
0x0000000000068a81 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000109afa : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c42e : add esp, 0x30 ; pop rbx ; ret
0x0000000000109b29 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000158a95 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000001577e3 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c14e8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000075e86 : add esp, 0x38 ; ret
0x0000000000158b22 : add esp, 0x38 ; xor eax, eax ; pop rbx ; pop r14 ; ret
0x0000000000114040 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000349cc : add esp, 0x40 ; pop rbx ; ret
0x00000000000f3138 : add esp, 0x40 ; ret
0x0000000000113f98 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed308 : add esp, 0x408 ; ret
0x000000000004889c : add esp, 0x440 ; pop rbx ; ret
0x00000000000e3d92 : add esp, 0x48 ; movzx eax, al ; ret
0x00000000001168c7 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010d1d3 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000bcc92 : add esp, 0x48 ; ret
0x000000000009fb0b : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012516b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000e2a1b : add esp, 0x58 ; ret
0x00000000000e75af : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e2417 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7b51 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e22bd : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e2a50 : add esp, 0x68 ; ret
0x000000000011d186 : add esp, 0x78 ; ret
0x00000000000534d3 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000007374e : add esp, 0x80 ; mov eax, edx ; ret
0x00000000000698a1 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007fdff : add esp, 0x80 ; mov rax, r8 ; ret
0x0000000000040ea3 : add esp, 0x80 ; pop rbx ; ret
0x00000000000692f9 : add esp, 0x80 ; ret
0x00000000000369df : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000347d2 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000011e6f5 : add esp, 0x88 ; ret
0x00000000000f19c2 : add esp, 0x90 ; pop rbx ; ret
0x00000000000341e8 : add esp, 0x90 ; ret
0x0000000000034f21 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000068ba3 : add esp, 0x98 ; ret
0x000000000011ced4 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000352d3 : add esp, 0xa8 ; ret
0x00000000000b05b6 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006946d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000bae9e : add esp, 0xd0 ; pop rbx ; ret
0x000000000003443a : add esp, 0xd0 ; ret
0x00000000000416b4 : add esp, 0xd8 ; ret
0x0000000000119e73 : add esp, 8 ; add eax, 2 ; ret
0x000000000008414d : add esp, 8 ; jmp rax
0x000000000010bc6d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000004e77f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006e53d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ab168 : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000021878 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006b72d : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000695be : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008a62d : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030f37 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000110357 : add esp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; ret
0x00000000000b33a4 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000036ce0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000705a7 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010c101 : add esp, 8 ; mov rdx, rax ; ret
0x000000000010c0c0 : add esp, 8 ; movsxd rdx, esi ; ret
0x00000000000f0336 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000001167a7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000040ed6 : add esp, 8 ; movzx eax, al ; ret
0x000000000010f79a : add esp, 8 ; movzx eax, ax ; ret
0x0000000000115e29 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000023629 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021ff1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000034663 : add esp, 8 ; pop rbx ; ret
0x0000000000033117 : add esp, 8 ; ret
0x0000000000124fb1 : add esp, 8 ; sar eax, 0x1f ; ret
0x0000000000121044 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000023254 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d90db : add esp, 8 ; xor eax, eax ; ret
0x00000000000e0dca : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000169f6b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x000000000019581d : add esp, dword ptr [rbx + rax + 0xa] ; ret
0x00000000001053f7 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x000000000019581a : add qword ptr [r15], 3 ; add ecx, dword ptr fs:[rdx] ; ret
0x000000000017d769 : add qword ptr [r8], r8 ; adc byte ptr [rcx - 0xd], cl ; jmp qword ptr [rax]
0x0000000000195e65 : add qword ptr [r8], r8 ; cmp byte ptr [rcx], dl ; cmc ; call qword ptr [rbx]
0x000000000019604d : add qword ptr [r8], r8 ; loopne 0x19606c ; cmc ; jmp qword ptr [rcx]
0x000000000017d7e9 : add qword ptr [r8], r8 ; nop ; push rsi ; jmp rax
0x000000000017d7c1 : add qword ptr [r8], r8 ; push rcx ; jmp qword ptr [rax]
0x000000000017d799 : add qword ptr [r8], r8 ; sbb cl, byte ptr [rbx - 0xd] ; call qword ptr [rax]
0x0000000000195c1d : add qword ptr [r8], rax ; ror byte ptr [rbx], 0xf5 ; jmp rcx
0x000000000010dbf8 : add qword ptr [rax - 0x77], rcx ; or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x0000000000110c57 : add qword ptr [rax - 0x77], rcx ; or ecx, dword ptr [rcx + rcx*4 + 0x34] ; ret 0xfae9
0x00000000000240b8 : add qword ptr [rax - 0x7d], rcx ; ret 0x4901
0x0000000000024ed8 : add qword ptr [rax - 0x7d], rcx ; ret 0x4d01
0x00000000000fee9e : add qword ptr [rax], r8 ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000195ee5 : add qword ptr [rax], r8 ; clc ; adc ebp, esi ; call rdx
0x000000000017d6e1 : add qword ptr [rax], rax ; push rax ; xor al, 0xf3 ; jmp qword ptr [rax]
0x000000000017d701 : add qword ptr [rax], rax ; xor byte ptr [rcx], bh ; call qword ptr [rax]
0x0000000000191cc2 : add qword ptr [rdi], 0x76 ; ret
0x000000000013e14d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000195c1c : add qword ptr fs:[r8], rax ; ror byte ptr [rbx], 0xf5 ; jmp rcx
0x0000000000133ab2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133a42 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001339d2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000156a3d : add r15, r12 ; jmp r15
0x0000000000149040 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001454d4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000008aa45 : add r8, rax ; jmp r8
0x000000000010bbc1 : add r8b, byte ptr [r8] ; jne 0x10bc17 ; mov eax, r8d ; ret
0x00000000001800b1 : add r8b, byte ptr [r8] ; nop ; ret
0x00000000001800a9 : add r8b, byte ptr [r8] ; ret
0x00000000001800e1 : add r8b, byte ptr [r8] ; xor cl, dl ; stc ; call rax
0x0000000000180091 : add r8b, byte ptr [rax] ; and dl, al ; stc ; call qword ptr [rax]
0x0000000000180081 : add r8b, byte ptr [rax] ; rol cl, 0xf9 ; call rax
0x00000000000fdec5 : add r8d, dword ptr [rip + 0x450f4800] ; ret 0xf6c3
0x0000000000128230 : add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000012baba : add r9, r11 ; jmp r9
0x0000000000169d29 : add r9b, bl ; retf -0x156f
0x000000000008aa9e : add r9b, byte ptr [r8 - 0x77] ; clc ; ret
0x000000000010b14c : add r9b, byte ptr [rax + 0x39] ; ret 0x2d72
0x000000000014cd52 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000013e1d3 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fdf0a : add rax, 0x450f4800 ; ret 0x66c3
0x000000000009e261 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af530 : add rax, 1 ; ret
0x00000000000af527 : add rax, 2 ; ret
0x00000000000af540 : add rax, 3 ; ret
0x0000000000021358 : add rax, qword ptr [0] ; ret
0x000000000003258f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000127ede : add rax, qword ptr [rdx + 8] ; add rsp, 0x28 ; ret
0x0000000000128789 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x0000000000021357 : add rax, qword ptr fs:[0] ; ret
0x000000000008ab17 : add rax, r8 ; jmp rax
0x00000000000afd02 : add rax, r8 ; ret
0x0000000000149e70 : add rax, r8 ; vzeroupper ; ret
0x00000000000fdf56 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014d577 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000011c06a : add rax, rcx ; jmp rax
0x000000000008dee8 : add rax, rcx ; ret
0x000000000014d90c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x00000000001497d5 : add rax, rcx ; vzeroupper ; ret
0x0000000000149e6d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x000000000008dee5 : add rax, rdi ; add rax, rcx ; ret
0x00000000001497d2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000008e709 : add rax, rdi ; add rax, rsi ; ret
0x000000000004c3f0 : add rax, rdi ; jmp rax
0x000000000004c819 : add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000008a99d : add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000004c664 : add rax, rdi ; mov r11d, 1 ; jmp rax
0x0000000000057eaf : add rax, rdi ; mov r8d, 1 ; jmp rax
0x000000000008a98f : add rax, rdi ; ret
0x000000000014941a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014966f : add rax, rdi ; sub rax, rdx ; ret
0x000000000014d9c4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000149949 : add rax, rdi ; vzeroupper ; ret
0x000000000002d7f5 : add rax, rdx ; jmp rax
0x0000000000093ca5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000009df8b : add rax, rsi ; jmp rax
0x000000000008e70c : add rax, rsi ; ret
0x000000000011fc1d : add rbx, r12 ; call r14
0x000000000002fa3c : add rbx, rax ; mov eax, dword ptr [r15 + 4] ; jmp 0x2fa18
0x00000000000afd82 : add rbx, rax ; mov qword ptr [rbp], rbx ; call r12
0x0000000000043504 : add rcx, r10 ; jmp rcx
0x000000000014f311 : add rcx, r11 ; jmp rcx
0x000000000008a972 : add rcx, r9 ; jmp rcx
0x000000000005a774 : add rcx, rdx ; jmp rcx
0x000000000009dfc3 : add rcx, rsi ; jmp rcx
0x0000000000119bcc : add rdi, 0x10 ; jmp rcx
0x00000000001137ae : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000128398 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x0000000000115649 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000bfbf1 : add rdi, 0x28 ; mov eax, r12d ; syscall
0x00000000000fd0da : add rdi, 0x28 ; mov eax, r9d ; syscall
0x000000000011c033 : add rdi, 0x58 ; jmp rcx
0x000000000011b793 : add rdi, 0x68 ; jmp rcx
0x0000000000119056 : add rdi, 0xc8 ; jmp rcx
0x00000000000c2032 : add rdi, 1 ; test dl, dl ; jne 0xc2022 ; ret
0x0000000000158db2 : add rdi, qword ptr [r13 + 0x10] ; call rbx
0x00000000000621b9 : add rdi, rax ; jmp rdi
0x000000000010bd23 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000021133 : add rdi, rbp ; call rax
0x000000000012bab7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000010d1cc : add rdx, 1 ; syscall
0x00000000000446f1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000b6283 : add rdx, r9 ; jmp rdx
0x000000000008e617 : add rdx, rax ; jl 0x8e688 ; add rax, rdi ; ret
0x000000000008e616 : add rdx, rax ; jl 0x8e689 ; add rax, rdi ; ret
0x0000000000021720 : add rdx, rax ; jmp rdx
0x0000000000114f12 : add rdx, rcx ; jmp rdx
0x00000000000b36db : add rdx, rdi ; jmp rdx
0x0000000000031bb0 : add rdx, rsi ; jmp rdx
0x000000000011ab94 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010b170 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000e4498 : add rsi, qword ptr [r14 + 0x18] ; mov eax, ecx ; syscall
0x000000000002b2ac : add rsi, r8 ; jmp rsi
0x000000000009defb : add rsi, rax ; jmp rsi
0x0000000000120a62 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000032d7d : add rsi, rbp ; mov eax, r8d ; syscall
0x0000000000031dde : add rsi, rdi ; jmp rsi
0x00000000000826c3 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000120fd5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000079230 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000029985 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000345dd : add rsp, 0x10 ; pop rbx ; ret
0x000000000010b305 : add rsp, 0x10 ; ret
0x00000000000aae30 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000068b52 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003471b : add rsp, 0x108 ; ret
0x00000000000e361d : add rsp, 0x120 ; pop rbx ; ret
0x00000000001286e2 : add rsp, 0x130 ; pop rbx ; ret
0x0000000000034948 : add rsp, 0x140 ; pop rbx ; ret
0x00000000000340a3 : add rsp, 0x148 ; ret
0x0000000000113e2b : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000001081ef : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000e7f4c : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000dcedd : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000082285 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000006d9a0 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000069135 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000011ffa5 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000120f4b : add rsp, 0x18 ; movzx eax, al ; ret
0x0000000000037bf4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002d676 : add rsp, 0x18 ; ret
0x0000000000042a77 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000799bc : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000007976c : add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000799f5 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000033a0d : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033d44 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000e2b83 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000212fd : add rsp, 0x28 ; jmp rax
0x00000000000407b4 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000033502 : add rsp, 0x28 ; ret
0x0000000000068a80 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000109af9 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c42d : add rsp, 0x30 ; pop rbx ; ret
0x0000000000158a94 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000000c14e7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000075e85 : add rsp, 0x38 ; ret
0x0000000000158b21 : add rsp, 0x38 ; xor eax, eax ; pop rbx ; pop r14 ; ret
0x000000000011403f : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000349cb : add rsp, 0x40 ; pop rbx ; ret
0x00000000000f3137 : add rsp, 0x40 ; ret
0x00000000000ed307 : add rsp, 0x408 ; ret
0x000000000004889b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000e3d91 : add rsp, 0x48 ; movzx eax, al ; ret
0x000000000010d1d2 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000bcc91 : add rsp, 0x48 ; ret
0x000000000009fb0a : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2a1a : add rsp, 0x58 ; ret
0x00000000000e75ae : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e2416 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e22bc : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000e2a4f : add rsp, 0x68 ; ret
0x000000000011d185 : add rsp, 0x78 ; ret
0x000000000007374d : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000040ea2 : add rsp, 0x80 ; pop rbx ; ret
0x00000000000692f8 : add rsp, 0x80 ; ret
0x00000000000347d1 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000011e6f4 : add rsp, 0x88 ; ret
0x00000000000f19c1 : add rsp, 0x90 ; pop rbx ; ret
0x00000000000341e7 : add rsp, 0x90 ; ret
0x0000000000034f20 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000068ba2 : add rsp, 0x98 ; ret
0x000000000011ced3 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000352d2 : add rsp, 0xa8 ; ret
0x00000000000bae9d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000034439 : add rsp, 0xd0 ; ret
0x00000000000416b3 : add rsp, 0xd8 ; ret
0x0000000000119e72 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008414c : add rsp, 8 ; jmp rax
0x000000000004e77e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006e53c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ab167 : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000021877 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000006b72c : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000695bd : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008a62c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000030f36 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000110356 : add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; ret
0x00000000000b33a3 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000036cdf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000705a6 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010c100 : add rsp, 8 ; mov rdx, rax ; ret
0x000000000010c0bf : add rsp, 8 ; movsxd rdx, esi ; ret
0x00000000000f0335 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000001167a6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000040ed5 : add rsp, 8 ; movzx eax, al ; ret
0x000000000010f799 : add rsp, 8 ; movzx eax, ax ; ret
0x0000000000115e28 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000021ff0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000034662 : add rsp, 8 ; pop rbx ; ret
0x0000000000033116 : add rsp, 8 ; ret
0x0000000000124fb0 : add rsp, 8 ; sar eax, 0x1f ; ret
0x0000000000121043 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000023253 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d90da : add rsp, 8 ; xor eax, eax ; ret
0x00000000000f29ad : add word ptr [rax], 1 ; ret
0x000000000017dae1 : add word ptr [rax], ax ; add byte ptr [rbx - 0xc], al ; call rax
0x00000000000f274a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000000334ff : addps xmm0, xmm0 ; add rsp, 0x28 ; ret
0x0000000000033483 : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000337f1 : addps xmm0, xmm0 ; ret
0x00000000000334fe : addsd xmm0, xmm0 ; add rsp, 0x28 ; ret
0x0000000000033482 : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000003383a : addss xmm0, xmm0 ; add rsp, 0x28 ; ret
0x00000000000337f0 : addss xmm0, xmm0 ; ret
0x000000000016ca80 : and ah, 0xf2 ; jmp qword ptr [rax - 0x2f000d1c]
0x0000000000096171 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000023f88 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000db922 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000086a31 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000019d360 : and al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000000b2b71 : and al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000090f65 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000869c2 : and al, 0 ; je 0x869d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d1313 : and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001920dc : and al, 0x10 ; add dword ptr [rax], eax ; loopne 0x1920e4 ; call qword ptr [rax]
0x00000000001920dc : and al, 0x10 ; add dword ptr [rax], eax ; loopne 0x1920e5 ; call qword ptr [rax]
0x00000000000e0301 : and al, 0x10 ; call 0xdce04
0x0000000000113c38 : and al, 0x10 ; call qword ptr [rax]
0x0000000000035d3b : and al, 0x10 ; call r14
0x00000000000bbfc6 : and al, 0x10 ; call rax
0x000000000007d979 : and al, 0x10 ; call rdi
0x0000000000032f17 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000f8742 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000008aa6b : and al, 0x10 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000ec5b7 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000072d86 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000ee021 : and al, 0x10 ; mov rdi, r8 ; xor eax, eax ; syscall
0x000000000011387a : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000011c394 : and al, 0x10 ; mov rdi, rbx ; call r12
0x00000000000f863e : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000007c046 : and al, 0x10 ; pop r12 ; ret
0x000000000007d8b3 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x00000000000e0327 : and al, 0x10 ; xor esi, esi ; call 0xdce06
0x000000000008aa0d : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000001266ea : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xe29f8
0x00000000001266e9 : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xe29f9
0x000000000008a99b : and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x0000000000080cc3 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000127e78 : and al, 0x18 ; add rsp, 0x28 ; ret
0x000000000007f5e1 : and al, 0x18 ; call 0x7b844
0x00000000001140da : and al, 0x18 ; call qword ptr [rax]
0x000000000002106c : and al, 0x18 ; call rax
0x0000000000119587 : and al, 0x18 ; call rcx
0x000000000004757f : and al, 0x18 ; mov dword ptr [rsp + 8], r10d ; call 0x43fe9
0x000000000007d974 : and al, 0x18 ; mov qword ptr [rsp + 0x10], rdx ; call rdi
0x0000000000021e20 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000bbfc1 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000a062f : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000072e62 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000a08f7 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000a038f : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x0000000000113c33 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000808c3 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000113f1b : and al, 0x1c ; call qword ptr [rax]
0x000000000010ea03 : and al, 0x20 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000d549d : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007d5a4 : and al, 0x20 ; call qword ptr [rax]
0x00000000000241d6 : and al, 0x20 ; call r15
0x00000000001286ac : and al, 0x20 ; call r9
0x0000000000025d31 : and al, 0x20 ; call rax
0x00000000000a0065 : and al, 0x20 ; call rbx
0x000000000011938f : and al, 0x20 ; call rcx
0x000000000009fcdb : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000b00f0 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000ab3ff : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000df11f : and al, 0x20 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000010693f : and al, 0x22 ; add al, byte ptr [rax] ; add al, ch ; xlatb ; ret 0xfffd
0x0000000000168aa4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000127dfe : and al, 0x28 ; add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x00000000000d3d9e : and al, 0x28 ; add rax, rdx ; jmp rax
0x0000000000047dbd : and al, 0x28 ; call 0x43fe4
0x000000000007d908 : and al, 0x28 ; call rax
0x000000000009fbaf : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000106925 : and al, 0x28 ; mov edi, dword ptr [rax] ; call 0xe2c25
0x0000000000106925 : and al, 0x28 ; mov edi, dword ptr [rax] ; call 0xe2c26
0x0000000000106924 : and al, 0x28 ; mov edi, dword ptr [rax] ; call 0xe2c27
0x00000000001286a7 : and al, 0x28 ; mov r9, qword ptr [rsp + 0x20] ; call r9
0x00000000000241d1 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000081483 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000011a618 : and al, 0x2c ; call 0x116834
0x000000000011a617 : and al, 0x2c ; call 0x116835
0x000000000007cfad : and al, 0x2f ; mov rdi, r9 ; mov eax, r8d ; syscall
0x00000000000b4359 : and al, 0x30 ; call 0x205e4
0x00000000000b4358 : and al, 0x30 ; call 0x205e5
0x000000000011456d : and al, 0x30 ; call qword ptr [rax]
0x0000000000024970 : and al, 0x30 ; call r14
0x0000000000025212 : and al, 0x30 ; call r15
0x0000000000024b65 : and al, 0x30 ; call rbx
0x000000000007d903 : and al, 0x30 ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x0000000000120ed9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000abd21 : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000a051c : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00000000000bb8b9 : and al, 0x30 ; mov rdi, rbx ; call r12
0x00000000000c7df6 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003727c : and al, 0x37 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000477f9 : and al, 0x38 ; call 0x44254
0x0000000000024de2 : and al, 0x38 ; call r14
0x000000000002456d : and al, 0x38 ; call r15
0x00000000000e8905 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000026978 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002496b : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002520d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000024b60 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000008a8b6 : and al, 0x39 ; ret 0x2574
0x00000000000c715d : and al, 0x39 ; ret 0x840f
0x00000000000f7c16 : and al, 0x39 ; ret 0xb575
0x000000000011db71 : and al, 0x3a ; call qword ptr [rax]
0x00000000001170f6 : and al, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000026193 : and al, 0x40 ; call r15
0x0000000000025d2c : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000024ddd : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024568 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000035cf8 : and al, 0x41 ; call rsi
0x0000000000079258 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000029984 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7f4b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000bf8b2 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e1bde : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000033a0c : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033d43 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000033bd7 : and al, 0x48 ; add esp, 0x28 ; ret
0x00000000000f30d5 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000f3136 : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000010f8c5 : and al, 0x48 ; add esp, 8 ; ret
0x0000000000027fc6 : and al, 0x48 ; call r14
0x000000000002552c : and al, 0x48 ; call r15
0x0000000000127cdd : and al, 0x48 ; mov eax, dword ptr [rax + 0x160] ; jmp rax
0x000000000009f704 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db9b7 : and al, 0x48 ; mov edi, dword ptr [rbp - 0x198] ; call rbx
0x0000000000076aad : and al, 0x48 ; mov edi, ebx ; call rax
0x00000000000ed9de : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x000000000002618e : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000e0c18 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x11 ; syscall
0x00000000000e0c78 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x12 ; syscall
0x00000000000e7bb8 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x127 ; syscall
0x00000000000e7c18 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x128 ; syscall
0x0000000000035df8 : and al, 0x4c ; mov esi, ebp ; mov rdi, r12 ; call r14
0x00000000000db305 : and al, 0x4c ; mov esi, edi ; call rbx
0x0000000000027fc1 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000025527 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000e59f5 : and al, 0x58 ; add ecx, dword ptr [rcx + 0xf10244c] ; xchg eax, esp ; ret 0x8440
0x0000000000020924 : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000823ac : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000114b3b : and al, 0x60 ; call rax
0x00000000000a07cd : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000a0253 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000d14df : and al, 0x72 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf -0x77c0
0x0000000000082397 : and al, 0x74 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000e0e4d : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000005594f : and al, 0x75 ; out 0xc7, al ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x000000000010dfd4 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; retf -0xed9
0x00000000001899dc : and al, 0x89 ; add byte ptr [rax], al ; ret 0xffee
0x0000000000029c6c : and al, 0x89 ; ret
0x00000000000bb391 : and al, 0x89 ; ret 0x8b49
0x00000000000e154c : and al, 0x89 ; ret 0xe283
0x000000000010be1b : and al, 0x8d ; add dword ptr [r8 - 0x77], ecx ; retf -0x3eb8
0x000000000010dff7 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000243c4 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e3b91 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000293ed : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000010e8b3 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1b8
0x000000000010e014 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000010e8f8 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x1ba
0x00000000000274d4 : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000000975 : and al, 0xa0 ; add byte ptr [rax], al ; ret
0x0000000000156a3b : and al, 0xa7 ; add r15, r12 ; jmp r15
0x00000000000a90c5 : and al, 0xab ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e8a22 : and al, 0xb0 ; ret
0x00000000000e3290 : and al, 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000e334a : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e89f6 : and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000f8ead : and al, 0xc ; add ecx, ebp ; ret
0x00000000000345db : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bf9ad : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000375bd : and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000127e2f : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000f0283 : and al, 0xc ; call 0xfcd14
0x00000000000f0282 : and al, 0xc ; call 0xfcd15
0x00000000000e1ce7 : and al, 0xc ; call rax
0x0000000000079d7b : and al, 0xc ; jmp 0x79d45
0x00000000000e1d2f : and al, 0xc ; mov eax, 0x135 ; syscall
0x00000000000e2aac : and al, 0xc ; mov eax, 0x48 ; syscall
0x000000000008a989 : and al, 0xc ; mov word ptr [rdi + 4], dx ; add rax, rdi ; ret
0x00000000001147f9 : and al, 0xc0 ; add byte ptr [rax], al ; add al, ch ; int 0xc3
0x00000000000e07a5 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000253ab : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x4801
0x000000000019d2dc : and al, 0xc2 ; add dword ptr [rax], eax ; rcr dh, 0xf6 ; jmp qword ptr [rdi]
0x000000000010dbff : and al, 0xc2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000021fd : and al, 0xc7 ; jno 0x224e ; ret 0x1dd4
0x00000000000f0085 : and al, 0xc8 ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x000000000012159b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f008a : and al, 0xd0 ; syscall
0x0000000000002daa : and al, 0xd7 ; cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x00000000000fe29a : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; lodsb al, byte ptr [rsi] ; retf
0x000000000006e2b3 : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x000000000010e76d : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000006cff2 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000158d58 : and al, 0xd8 ; ret
0x000000000008aada : and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x000000000006fa18 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000016c594 : and al, 0xe4 ; int1 ; inc edi ; in al, -0xf ; jmp rax
0x00000000000e29da : and al, 0xe8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000032f7c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003300b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x000000000010d778 : and al, 0xe8 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000100a52 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x0000000000032fe9 : and al, 0xe8 ; ret
0x00000000000b4b5f : and al, 0xe8 ; retf
0x00000000000dfe03 : and al, 0xe9 ; ret
0x000000000017b6d5 : and al, 0xeb ; jmp qword ptr [rax]
0x00000000000e716d : and al, 0xeb ; mov eax, 0x10 ; syscall
0x0000000000045468 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000008aa59 : and al, 0xec ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000004c733 : and al, 0xf ; test dl, cl ; add eax, 0x89410000 ; ret 0x8d41
0x00000000000c56d5 : and al, 0xf ; xchg eax, esp ; ret 0x394c
0x0000000000033007 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000032fe5 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000330a3 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000003397e : and al, 0xf0 ; movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x00000000000afba6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000afbac : and al, 0xf0 ; ret
0x0000000000033d78 : and al, 0xf0 ; shr rax, 0x3f ; ret
0x000000000017d2e5 : and al, 0xf2 ; push rax ; sub eax, 0x25400001 ; call qword ptr [rax]
0x00000000000c0eea : and al, 0xf3 ; ret
0x000000000008aab9 : and al, 0xf4 ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000008a9ec : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000196899 : and al, 0xf5 ; jmp qword ptr [rsi]
0x000000000019a379 : and al, 0xf6 ; jmp qword ptr [rsi]
0x00000000001907dc : and al, 0xf7 ; add byte ptr [rax], al ; nop ; pop rax ; call qword ptr [rax]
0x0000000000045421 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000045427 : and al, 0xf8 ; ret
0x0000000000128c14 : and al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000008aa9b : and al, 0xfa ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000008a9ce : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000017a541 : and al, 0xfb ; jmp rax
0x00000000000453db : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000453e1 : and al, 0xfc ; ret
0x0000000000033ea7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000033eab : and al, 0xfe ; ret
0x00000000000e2d01 : and al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001a34d5 : and al, 2 ; add byte ptr [rax + 0x21], bl ; clc ; call qword ptr [rax]
0x00000000001140f1 : and al, 4 ; mov eax, 3 ; syscall
0x000000000004dcfc : and al, 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000099768 : and al, 7 ; add byte ptr [rax], al ; ret
0x0000000000028959 : and al, 8 ; add byte ptr [rcx - 0x77], al ; ret 0x8949
0x000000000004270f : and al, 8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000aae46 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002d674 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000007979d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000010c025 : and al, 8 ; add rsp, 0x28 ; ret
0x00000000000e2337 : and al, 8 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000000a7d45 : and al, 8 ; call 0x43fe4
0x0000000000115bb7 : and al, 8 ; call qword ptr [rax]
0x0000000000083152 : and al, 8 ; call qword ptr [rdx]
0x00000000000f8643 : and al, 8 ; call rax
0x0000000000114b1f : and al, 8 ; call rcx
0x000000000003303a : and al, 8 ; fscale ; fstp st(1) ; ret
0x00000000000dd9e5 : and al, 8 ; jmp 0xdd9b7
0x00000000000dd9e4 : and al, 8 ; jmp 0xdd9b8
0x0000000000111923 : and al, 8 ; jne 0x111918 ; add rsp, 0x18 ; ret
0x00000000000f00e8 : and al, 8 ; mov eax, 0x38 ; syscall
0x00000000000fd481 : and al, 8 ; mov eax, 0xe6 ; syscall
0x000000000003272d : and al, 8 ; mov eax, 2 ; syscall
0x00000000000cd9b5 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000350f0 : and al, 8 ; mov eax, ecx ; syscall
0x00000000000a75ae : and al, 8 ; mov ecx, r15d ; call 0x43fe7
0x000000000006bda5 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000107f9b : and al, 8 ; mov rdi, r13 ; call r12
0x0000000000071d81 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000011ffcf : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000032f1b : and al, 8 ; ret
0x00000000000eaf55 : and al, 8 ; syscall
0x00000000000bfa2c : and al, 8 ; test rax, rax ; je 0xbfa3c ; call rax
0x00000000000bfa2b : and al, 8 ; test rax, rax ; je 0xbfa3d ; call rax
0x0000000000120ede : and al, 8 ; xor eax, eax ; call rdx
0x00000000000eda39 : and al, 8 ; xor eax, eax ; syscall
0x0000000000189165 : and al, byte ptr [rax] ; add al, bl ; test al, 0xee ; jmp rdx
0x0000000000033e5a : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003354a : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000033154 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000bf8cb : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000009110e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f02f1 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000106940 : and al, byte ptr [rdx] ; add byte ptr [rax], al ; call 0xe2c26
0x000000000009893a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000257f4 : and al, ch ; cmp byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x415e
0x0000000000027f04 : and al, ch ; push rsi ; adc dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x415e
0x00000000000ce333 : and al, ch ; ret
0x0000000000103bcc : and al, ch ; salc ; retf
0x000000000002ced2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002cef2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002ce32 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002ceb2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002cdd2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ce72 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002ce12 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ce52 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000018a4c0 : and bh, 0xee ; call qword ptr [rdx]
0x0000000000195620 : and bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000019d4d0 : and bh, 0xf6 ; jmp qword ptr [rdi]
0x00000000000fdd1a : and bh, ah ; stc ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x0000000000058df1 : and bh, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000538fb : and bh, al ; add dword ptr [rip - 0x7d000000], ebp ; ret
0x000000000017f445 : and bh, al ; call rax
0x000000000002e4a4 : and bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xd3e9
0x000000000017a4fd : and bh, bl ; jmp qword ptr [rax]
0x0000000000003008 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000010f9df : and bh, dh ; ret 0
0x000000000018038d : and bh, dl ; call qword ptr [rax]
0x0000000000099d47 : and bl, al ; nop dword ptr [rax] ; ret
0x000000000006a723 : and bl, ch ; retf 0x2e66
0x0000000000180a9c : and bl, cl ; cli ; jmp rax
0x0000000000076796 : and byte ptr [r13 + 0x31], r8b ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000007c933 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000074aaa : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000010e302 : and byte ptr [r8 - 0x7d], cl ; ret
0x000000000009d196 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b2c7f : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000071fa6 : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000001497e6 : and byte ptr [rax + 0x29], cl ; retf -0x79f1
0x0000000000082265 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000035911 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000078aa4 : and byte ptr [rax + 0x39], cl ; retf
0x0000000000071b67 : and byte ptr [rax + 0x39], cl ; retf -0x418b
0x000000000014d48a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000000df120 : and byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000115eab : and byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x000000000014995c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000048fec : and byte ptr [rax + 1], cl ; ret
0x0000000000149dd6 : and byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008e646 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000093b78 : and byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000093c9d : and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000093e5e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000017b3c0 : and byte ptr [rax + rax], 0x80 ; jle 0x17b3b8 ; jmp rax
0x0000000000036ac8 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000017ae68 : and byte ptr [rax - 0x506f0005], dh ; sti ; call qword ptr [rax]
0x00000000000f195b : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000000b00f1 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000074aab : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000370fa : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006bf56 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000113d00 : and byte ptr [rax - 0x77], cl ; fistp word ptr [rbx - 0x17] ; sahf ; retf -0x10
0x000000000008342b : and byte ptr [rax - 0x77], cl ; jae 0x83441 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039775 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000f74df : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001259a2 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x000000000004232c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000232ac : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x00000000000bd91c : and byte ptr [rax - 0x77], cl ; retf -0x118b
0x00000000000d94a5 : and byte ptr [rax - 0x77], cl ; retf -0x128b
0x00000000000b3c4c : and byte ptr [rax - 0x77], cl ; retf -0x198b
0x00000000000d974b : and byte ptr [rax - 0x77], cl ; retf -0x7af1
0x00000000000b3c32 : and byte ptr [rax - 0x77], cl ; retf 0x1a74
0x000000000002b7e4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2b7f8 ; call rax
0x000000000008328b : and byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; retf -0x72b8
0x000000000011addb : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; ret 0xf059
0x0000000000023156 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000088e5f : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000149b97 : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000002d99 : and byte ptr [rax - 0xc0713e4], bh ; ret
0x000000000017db84 : and byte ptr [rax - 0xc], dl ; call rax
0x0000000000077002 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000018079c : and byte ptr [rax - 6], ah ; jmp rax
0x000000000017f75c : and byte ptr [rax - 8], ah ; call qword ptr [rax]
0x0000000000002d89 : and byte ptr [rax], ah ; or edx, ebp ; clc ; ret
0x00000000001830bd : and byte ptr [rax], al ; add al, dh ; fucomp st(2) ; call qword ptr [rdi]
0x0000000000122bc2 : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000ba00 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000b2c80 : and byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000c0f2b : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000009dfec : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c0f10 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e2ca1 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000009135e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000157d3a : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000001552e9 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000186fc0 : and byte ptr [rax], ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000009ae8c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000009d197 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000017a4a0 : and byte ptr [rax], dh ; sti ; jmp rax
0x0000000000076797 : and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000056fd3 : and byte ptr [rbp + 0x31], al ; fcmovnb st(0), st(7) ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x000000000017b07c : and byte ptr [rbp - 0x535f0005], ch ; sti ; jmp qword ptr [rax]
0x00000000001a3ddb : and byte ptr [rbx + 0x100e4402], al ; ret
0x000000000016a848 : and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000317d2 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000033a10 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000018275d : and byte ptr [rbx + 0xa410204], al ; ret
0x0000000000187f6d : and byte ptr [rbx + 0xa470204], al ; ret
0x000000000018a3ed : and byte ptr [rbx + 0xa4b0204], al ; ret
0x0000000000193bbd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x000000000017b6d4 : and byte ptr [rbx + rbp*8], ah ; jmp qword ptr [rax]
0x000000000017b5d4 : and byte ptr [rbx + rbp*8], bl ; call rax
0x000000000017b084 : and byte ptr [rbx + rdi*8 - 0x4545f01], ch ; jmp qword ptr [rax]
0x000000000017b7a4 : and byte ptr [rbx - 0x15], dh ; call rax
0x000000000017b08c : and byte ptr [rbx - 0x555f0005], ch ; sti ; call qword ptr [rax]
0x0000000000192cd1 : and byte ptr [rbx - 0x73fc79fc], al ; add ah, byte ptr [rbx + 0xa] ; ret
0x000000000018071c : and byte ptr [rbx - 6], bl ; jmp rax
0x0000000000003e19 : and byte ptr [rbx], al ; retf -0x7536
0x000000000014eb8a : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000002919c : and byte ptr [rcx + 0x39], cl ; ret
0x0000000000001da4 : and byte ptr [rcx + 0x72b02084], bh ; retf
0x000000000018643e : and byte ptr [rcx + 0xa], al ; ret
0x00000000000ab400 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x000000000017c074 : and byte ptr [rcx - 0x13], ah ; call rax
0x0000000000045465 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000799bf : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x00000000000021e7 : and byte ptr [rcx - 0x4273d1ae], ah ; out dx, al ; nop ; retf 0x3844
0x0000000000121d18 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000071fa7 : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000017a5e0 : and byte ptr [rcx - 5], bl ; jmp rax
0x000000000017fc74 : and byte ptr [rcx - 7], cl ; jmp qword ptr [rax]
0x000000000017ee94 : and byte ptr [rcx - 9], ch ; jmp qword ptr [rax]
0x000000000017a4f8 : and byte ptr [rcx], 0xfb ; call rax
0x00000000000e3620 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f1731 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000bfa82 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000db734 : and byte ptr [rcx], bh ; ret 0x3a74
0x00000000001008cb : and byte ptr [rcx], ch ; retf 0x3ae9
0x0000000000074c0b : and byte ptr [rcx], ch ; retf 0x55e9
0x000000000011a89b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ba6b8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000018feff : and byte ptr [rdi + 0xa], cl ; ret
0x000000000017b06c : and byte ptr [rdi - 0x515f0005], ch ; sti ; jmp qword ptr [rax]
0x000000000009dc31 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000002ceb5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000115224 : and byte ptr [rdi], cl ; retf 0x5089
0x0000000000023299 : and byte ptr [rdi], cl ; test ch, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000099a39 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000001529b0 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000e91ff : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x00000000001328cc : and byte ptr [rdx + 0x39480027], bl ; retf 0x377
0x0000000000005170 : and byte ptr [rdx + 8], ch ; add byte ptr [rax], al ; ret
0x000000000001f388 : and byte ptr [rdx + rdi], dl ; add al, dh ; retf
0x000000000017ab24 : and byte ptr [rdx - 0x765f0005], cl ; sti ; call qword ptr [rax]
0x000000000017e438 : and byte ptr [rdx - 0x785fffff], 0xf6 ; call qword ptr [rax]
0x000000000017a614 : and byte ptr [rdx - 5], ah ; jmp qword ptr [rax]
0x000000000017fa81 : and byte ptr [rdx], al ; add al, al ; add bh, cl ; jmp qword ptr [rax]
0x00000000001972b5 : and byte ptr [rdx], al ; retf
0x000000000000031b : and byte ptr [rdx], bl ; adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x000000000017a484 : and byte ptr [rdx], dh ; sti ; inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x000000000017a3c8 : and byte ptr [rip + 0x3700fffb], dh ; sti ; jmp rax
0x0000000000181098 : and byte ptr [rip - 0x158fffff], 0xfd ; jmp rax
0x000000000014f3aa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018652d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000019a390 : and byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000017b074 : and byte ptr [rsi - 0x525f0005], ch ; sti ; jmp qword ptr [rax]
0x000000000017ebcc : and byte ptr [rsi - 9], cl ; ljmp ptr [rax] ; retf 1
0x000000000006d3ac : and byte ptr [rsi], ah ; add eax, 0x89c08500 ; ret 0x8389
0x0000000000180d7c : and byte ptr [rsi], ah ; std ; call qword ptr [rax]
0x000000000017d570 : and byte ptr [rsi], bh ; add dword ptr [rax], eax ; jo 0x17d5e4 ; call rax
0x000000000017d570 : and byte ptr [rsi], bh ; add dword ptr [rax], eax ; jo 0x17d5e5 ; call rax
0x000000000017a46c : and byte ptr [rsi], dh ; sti ; inc dword ptr [rax] ; cmp bl, bh ; call rax
0x00000000000e9b51 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000af522 : and ch, 0xf ; je 0xaf549 ; add rax, 2 ; ret
0x000000000014d7bb : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf -0x23b
0x0000000000149be3 : and ch, al ; std ; xlatb ; ret
0x000000000016c6dc : and ch, bl ; sti ; jmp qword ptr [rax]
0x00000000000ff7ca : and ch, byte ptr [rdi] ; add eax, 0x440f4800 ; ret 0x66c3
0x00000000001965e9 : and ch, dh ; jmp rdx
0x000000000017f994 : and ch, dl ; clc ; call qword ptr [rax]
0x00000000000af50d : and cl, 0xf ; je 0xaf535 ; ret
0x000000000017d614 : and cl, 0xf2 ; jmp rax
0x000000000017a0f8 : and cl, ah ; cld ; inc dword ptr [rax] ; jrcxz 0x17a102 ; jmp rax
0x0000000000003a06 : and cl, ah ; ret
0x00000000001809f4 : and cl, al ; cli ; call qword ptr [rax]
0x00000000000e0edb : and cl, byte ptr [rax + 0x63] ; ret 0xc283
0x00000000000b270d : and cl, byte ptr [rax - 0x77] ; retf -0x7cb8
0x0000000000127124 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000085448 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e83d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000058a7a : and cl, byte ptr [rip - 0x76b80000] ; retf -0x76b8
0x00000000000d3d16 : and cl, ch ; retf -2
0x00000000001801e4 : and cl, dh ; stc ; jmp rax
0x00000000000e717d : and dh, bl ; ret
0x000000000017ace0 : and dh, byte ptr [rbx - 0x466d0005] ; sti ; jmp qword ptr [rdx]
0x00000000000a945a : and dh, byte ptr [rcx - 9] ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000196779 : and dh, ch ; jmp rdx
0x0000000000180094 : and dl, al ; stc ; call qword ptr [rax]
0x000000000018b140 : and dl, ch ; cld ; jmp rsp
0x000000000018fcb0 : and dl, ch ; int1 ; call qword ptr [rdx]
0x0000000000194fc0 : and dl, dl ; hlt ; jmp qword ptr [rcx]
0x000000000004ba21 : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000013c469 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000000aab8 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000e2cd1 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000138aae : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016a5c2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000d9258 : and dword ptr [rbx - 0x7cb7f717], eax ; ret 0x4801
0x0000000000070890 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000708e8 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010bec6 : and dword ptr [rcx - 0xa], eax ; ret
0x00000000000073e0 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000f02bc : and dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000003e7c3 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000a3b3b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000128806 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000075ea0 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000034c18 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000017fab1 : and dword ptr [rdx], eax ; add al, dl ; or cl, bh ; call qword ptr [rax]
0x000000000014e45b : and dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000167679 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009986b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000016a5c1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000013c468 : and dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000159756 : and eax, 0 ; add bl, dh ; ret
0x000000000002135b : and eax, 0 ; ret
0x00000000000e6f93 : and eax, 0x100f ; ret
0x00000000000330ea : and eax, 0x200 ; ret
0x0000000000166b60 : and eax, 0x25ffecb6 ; mov dh, 0xec ; call qword ptr [rdi]
0x000000000017a505 : and eax, 0x26c0fffb ; sti ; call qword ptr [rax]
0x000000000012580b : and eax, 0x285dd0 ; ret
0x00000000000212f8 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x0000000000084147 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002108d : and eax, 0x30 ; call rax
0x0000000000036ad1 : and eax, 0x30 ; call rdx
0x000000000002d4d4 : and eax, 0x30 ; jmp rax
0x000000000002df2d : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000004b648 : and eax, 0x30 ; xor esi, esi ; call rax
0x00000000000fccfb : and eax, 0x300 ; call 0x128fa7
0x00000000000371a4 : and eax, 0x39480037 ; ret
0x0000000000158f24 : and eax, 0x3d8b4800 ; ret
0x0000000000166a08 : and eax, 0x3dffecb6 ; mov dh, 0xec ; call qword ptr [rdi]
0x000000000009df4d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000009df6d : and eax, 0x3fc00 ; ret
0x000000000009df2c : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000001594d3 : and eax, 0x5be17500 ; ret
0x000000000007954a : and eax, 0x5c415d5b ; ret
0x000000000002cfc2 : and eax, 0x7f ; ret
0x000000000009dfa0 : and eax, 0x7ff80000 ; ret
0x00000000000334c4 : and eax, 0x80 ; ret
0x0000000000033617 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000075342 : and eax, 0x804 ; ret
0x000000000002df7c : and eax, 0x8948ffff ; ret 0x8548
0x000000000007d243 : and eax, 0x950f4100 ; ret
0x00000000000fcd37 : and eax, 0xc ; cmp eax, 4 ; je 0xfcd48 ; ret
0x00000000000fcf08 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000181099 : and eax, 0xea700001 ; std ; jmp rax
0x00000000000da094 : and eax, 0xf ; ret
0x0000000000076e3b : and eax, 0xf480033 ; ret 0x8948
0x00000000001936ad : and eax, 0xfc300001 ; jmp rdx
0x0000000000159765 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000100e8d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000100e28 : and eax, 0xffffff ; ret
0x000000000010b193 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000eb95f : and eax, 1 ; jmp 0xeb92b
0x00000000000c871d : and eax, 1 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd098 : and eax, 1 ; pop rbx ; ret
0x000000000002cf72 : and eax, 1 ; ret
0x00000000000ccfd8 : and eax, 2 ; add eax, 8 ; ret
0x000000000002cdf2 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000ccfac : and eax, 2 ; ret
0x0000000000043b5c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002ce92 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002cdb2 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000033804 : and eax, 8 ; ret
0x0000000000023bd6 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x205f9
0x00000000000bf94b : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000138905 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f08a1 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000013e279 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000002d73 : and eax, ebp ; clc ; ret
0x00000000001a34d9 : and eax, edi ; call qword ptr [rax]
0x00000000001a3511 : and eax, edi ; jmp qword ptr [rcx]
0x0000000000033256 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000032ea2 : and eax, edx ; ret
0x00000000000331e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002d18d : and eax, esi ; ret
0x0000000000117a58 : and ebp, eax ; ret 0xfcb1
0x0000000000070891 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000708e9 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000196619 : and ebp, esi ; jmp qword ptr [rcx]
0x00000000000fccd2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0xfcce5 ; ret
0x00000000000cd0df : and ebx, 8 ; je 0xcd080 ; pop rbx ; ret
0x0000000000168d74 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x000000000017a4f9 : and ebx, edi ; call rax
0x00000000000e2999 : and ebx, esi ; ret
0x0000000000037a38 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x0000000000150925 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000150058 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000073660 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000e92ef : and ecx, dword ptr [rax - 0x7d] ; ret 0x3c01
0x0000000000125b85 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x000000000007aacc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000010eca6 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000ea129 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000010eccd : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000000eff38 : and edi, 0xffffff00 ; or eax, edi ; ret
0x000000000002cfd2 : and edi, 0xffffff80 ; sete al ; ret
0x000000000017a53d : and edi, ebx ; call qword ptr [rax - 0x1f0004dc]
0x000000000019e201 : and edi, esi ; call rax
0x0000000000073763 : and edx, 1 ; mov eax, edx ; ret
0x000000000009fa08 : and edx, 3 ; mov rax, rdi ; jne 0x9fa26 ; ret
0x00000000000c0ec0 : and edx, dword ptr [rcx + 0xffb8] ; add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x000000000011343b : and edx, ebx ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000002c59 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004543e : and esi, 0xe0837fff ; jg 0x45457 ; ret 0x5488
0x0000000000077076 : and esi, dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e656d : and esi, dword ptr [rcx] ; fucomi st(1) ; retf
0x00000000000cf288 : and esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003731c : and esi, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019a301 : and esi, esi ; jmp qword ptr [rsi]
0x00000000000cb48c : and esi, esi ; ret
0x000000000010fe28 : and esp, eax ; mov eax, r12d ; pop r12 ; ret
0x00000000000bfd2e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000005316a : and esp, esp ; xor eax, 0x840f0000 ; retf
0x0000000000128805 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000034c17 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000010fe27 : and r12d, eax ; mov eax, r12d ; pop r12 ; ret
0x0000000000158f23 : and rax, 0x3d8b4800 ; ret
0x0000000000033255 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000000335db : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000335d8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000008e1ea : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008e110 : bsf eax, eax ; add rax, rdi ; ret
0x00000000001499c1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000008e120 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008e130 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008e100 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008e05f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000093653 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000085085 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000093b46 : bsf eax, edx ; ret
0x00000000000af117 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000093ca2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000093770 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000093b92 : bsf rax, rdx ; ret
0x00000000000af116 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000149da0 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x000000000008e706 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x000000000008e536 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000149c8f : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000008e5e0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008e5f0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008e600 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000093afb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000093a09 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000093905 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000093876 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000093afa : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000093a08 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000093904 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000011c15d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000100e02 : bswap eax ; ret
0x0000000000002c5b : bswap ebx ; clc ; ret
0x0000000000159e94 : call 0x11158b14
0x000000000018dc78 : call 0x1118cc8e
0x000000000018ee28 : call 0x1118df4b
0x000000000018ee58 : call 0x1118df7b
0x000000000018ee88 : call 0x1118dfab
0x000000000018eeb8 : call 0x1118dfdb
0x000000000018eee8 : call 0x1118e00b
0x0000000000111e10 : call 0x1118e8
0x000000000011a61a : call 0x116832
0x000000000011349c : call 0x11fee2
0x0000000000182be8 : call 0x12181695
0x00000000000dbae3 : call 0x127cf2
0x00000000000fcd00 : call 0x128fa2
0x000000000018af48 : call 0x13189e4f
0x000000000019f698 : call 0x1419edf7
0x0000000000184998 : call 0x171834d2
0x000000000018ea78 : call 0x1718db8e
0x00000000000642a9 : call 0x20512
0x00000000000b435b : call 0x205e2
0x0000000000023bdd : call 0x205f2
0x0000000000113c8d : call 0x206c2
0x00000000000b4422 : call 0x206e2
0x00000000000c3c71 : call 0x20712
0x00000000000e4529 : call 0x20732
0x00000000000f4568 : call 0x207a2
0x00000000000f44d4 : call 0x207aa
0x0000000000049d5b : call 0x21049d59
0x0000000000049ddc : call 0x21049dda
0x000000000004a01e : call 0x2104a01c
0x000000000004a95d : call 0x2104a95b
0x0000000000074ff0 : call 0x212a2
0x00000000000483d6 : call 0x214d4e66
0x0000000000193fe8 : call 0x2219343f
0x0000000000197d48 : call 0x221972d3
0x00000000001981c8 : call 0x22197758
0x0000000000196928 : call 0x27195e55
0x000000000018bd48 : call 0x2818acaa
0x00000000000e0a93 : call 0x2cce2
0x0000000000020ef7 : call 0x2d1f2
0x0000000000120ca9 : call 0x2d6b2
0x000000000010bf90 : call 0x38a42
0x00000000000a6f14 : call 0x43992
0x0000000000047d72 : call 0x43fe2
0x00000000000477fb : call 0x44252
0x00000000000fe9e1 : call 0x4b3f2
0x000000000006adcb : call 0x570c2
0x00000000000653ac : call 0x61e62
0x00000000000debe1 : call 0x6adf2
0x0000000000050c7f : call 0x6cf62
0x00000000000641a6 : call 0x70482
0x0000000000079360 : call 0x75e32
0x000000000006e362 : call 0x7ae52
0x000000000007f39c : call 0x7b622
0x000000000007f5e3 : call 0x7b842
0x000000000007f6ca : call 0x7c1c2
0x00000000000e9035 : call 0x85322
0x0000000000158469 : call 0x94f59
0x00000000000cd1b9 : call 0xc9472
0x00000000000ce398 : call 0xca682
0x00000000000e0303 : call 0xdce02
0x00000000000e043e : call 0xdceb2
0x00000000000e0564 : call 0xdcfc2
0x00000000000e5395 : call 0xe1e32
0x00000000001266f0 : call 0xe29f2
0x0000000000106929 : call 0xe2c21
0x0000000000106929 : call 0xe2c22
0x00000000001269d9 : call 0xe2cd1
0x00000000001269d9 : call 0xe2cd2
0x00000000000e63b4 : call 0xe2e52
0x00000000000c1908 : call 0xedb22
0x000000000011495e : call 0xf1382
0x0000000000067784 : call 0xf3a12
0x00000000000677e9 : call 0xf3aa2
0x00000000000fadc4 : call 0xf7842
0x00000000000409bb : call 0xfcc62
0x0000000000040a3c : call 0xfcc92
0x00000000000f0254 : call 0xfccb2
0x00000000000f0285 : call 0xfcd12
0x000000000003306d : call 0xffffffff8169f2fd
0x0000000000169f1a : call 0xffffffffab246a10
0x00000000000996a4 : call 0xffffffffc30996b4
0x0000000000040981 : call 0xffffffffc33d5192
0x00000000000429f0 : call 0xffffffffc33d71fa
0x00000000000e8fa2 : call 0xffffffffc347d7ac
0x00000000000f73e0 : call 0xffffffffc348bbea
0x00000000000f766c : call 0xffffffffc348be76
0x0000000000051ab1 : call 0xffffffffc38e5bbe
0x0000000000141035 : call 0xffffffffc39a1f4e
0x00000000001420b5 : call 0xffffffffc39a2fce
0x0000000000098a27 : call 0xffffffffc3da1378
0x0000000000098947 : call 0xffffffffc4021298
0x000000000009ba17 : call 0xffffffffc4024368
0x00000000000eff24 : call 0xffffffffc4070835
0x000000000018d178 : call 0xffffffffcc18c117
0x000000000019e568 : call 0xffffffffd219dca4
0x0000000000199398 : call 0xffffffffd319895f
0x00000000001810d8 : call 0xffffffffe117fad3
0x0000000000032f37 : call 0xffffffffe284f1c7
0x0000000000187378 : call 0xffffffffe41861c4
0x000000000018b708 : call 0xffffffffe518a64c
0x000000000018e928 : call 0xffffffffe718da3b
0x00000000000fa237 : call 0xffffffffead164c7
0x000000000011d08f : call qword ptr [r10]
0x000000000007b9ef : call qword ptr [r14]
0x00000000000c1f87 : call qword ptr [r15]
0x000000000017aba3 : call qword ptr [rax + 0x10fffb66]
0x000000000017abe7 : call qword ptr [rax + 0x10fffb68]
0x000000000017abab : call qword ptr [rax + 0x10fffb69]
0x000000000017abef : call qword ptr [rax + 0x10fffb6b]
0x000000000017abb3 : call qword ptr [rax + 0x10fffb6c]
0x000000000017abf7 : call qword ptr [rax + 0x10fffb6e]
0x000000000017abbb : call qword ptr [rax + 0x10fffb6f]
0x000000000017abff : call qword ptr [rax + 0x10fffb71]
0x000000000017abc3 : call qword ptr [rax + 0x10fffb72]
0x000000000017ac07 : call qword ptr [rax + 0x10fffb74]
0x000000000017abcb : call qword ptr [rax + 0x10fffb75]
0x000000000017ac0f : call qword ptr [rax + 0x10fffb77]
0x000000000017abd3 : call qword ptr [rax + 0x10fffb78]
0x000000000017ac17 : call qword ptr [rax + 0x10fffb7a]
0x000000000017ab47 : call qword ptr [rax + 0x10fffb85]
0x000000000017ab3f : call qword ptr [rax + 0x10fffb86]
0x000000000017ab37 : call qword ptr [rax + 0x10fffb87]
0x000000000017ab2f : call qword ptr [rax + 0x10fffb88]
0x000000000017ae8b : call qword ptr [rax + 0x10fffbab]
0x000000000017ae83 : call qword ptr [rax + 0x10fffbac]
0x000000000017ae7b : call qword ptr [rax + 0x10fffbad]
0x000000000017ae73 : call qword ptr [rax + 0x10fffbae]
0x000000000017ae6b : call qword ptr [rax + 0x10fffbaf]
0x000000000017a49b : call qword ptr [rax + 0x20fffb3d]
0x000000000017a5db : call qword ptr [rax + 0x20fffb66]
0x000000000017a957 : call qword ptr [rax + 0x20fffb8d]
0x000000000017a73f : call qword ptr [rax + 0x20fffb90]
0x000000000017ae4f : call qword ptr [rax + 0x20fffbb4]
0x000000000017ac37 : call qword ptr [rax + 0x20fffbb7]
0x000000000017b12b : call qword ptr [rax - 0x1f000309]
0x000000000017a70b : call qword ptr [rax - 0x1f0004b0]
0x000000000017a6b7 : call qword ptr [rax - 0x1f0004b7]
0x000000000017a53f : call qword ptr [rax - 0x1f0004dc]
0x000000000017a4eb : call qword ptr [rax - 0x1f0004e3]
0x000000000016c78b : call qword ptr [rax - 0x1f000d9e]
0x000000000017abdb : call qword ptr [rax - 0x2f000485]
0x000000000003330c : call qword ptr [rax - 0x3d]
0x00000000000030d3 : call qword ptr [rax]
0x0000000000003622 : call qword ptr [rbx]
0x000000000000dd69 : call qword ptr [rcx]
0x00000000000c1f88 : call qword ptr [rdi]
0x000000000017a7eb : call qword ptr [rdx + 0x22fffb92]
0x000000000017ace3 : call qword ptr [rdx + 0x22fffbb9]
0x0000000000041441 : call qword ptr [rdx]
0x000000000016d5cf : call qword ptr [rip - 0x19000b68]
0x000000000017a787 : call qword ptr [rsi + 0x26fffb8f]
0x000000000017ac7f : call qword ptr [rsi + 0x26fffbb6]
0x000000000007b9f0 : call qword ptr [rsi]
0x000000000017d315 : call qword ptr es:[rax]
0x00000000000296a9 : call r12
0x00000000000221a9 : call r14
0x00000000000241d8 : call r15
0x000000000006a873 : call r8
0x00000000000fc555 : call r9
0x000000000002106e : call rax
0x0000000000021e25 : call rbx
0x000000000002a7ea : call rcx
0x00000000000241d9 : call rdi
0x0000000000036ad6 : call rdx
0x00000000000221aa : call rsi
0x00000000000296aa : call rsp
0x000000000012a7b7 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001989d9 : cdq ; cmc ; jmp rsi
0x0000000000037114 : cdq ; idiv rsi ; ret
0x000000000017bf1d : cdq ; in al, dx ; jmp qword ptr [rax]
0x0000000000169e20 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000ab463 : cdq ; loop 0xab49b ; add byte ptr [rax + 0x39], cl ; ret
0x000000000005efd8 : cdq ; mov edi, 0x8348ffff ; ret 0xb908
0x0000000000188c51 : cdq ; out dx, al ; call rdx
0x000000000018d3a9 : cdq ; out dx, eax ; jmp rax
0x00000000000fa6c3 : cdq ; retf
0x0000000000034a43 : cdq ; retf 0x37
0x0000000000086bd4 : cdq ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000007c23a : cdq ; str word ptr [rax - 0x7d] ; ret 0x3110
0x00000000000625ca : cdq ; xor al, 0 ; call rax
0x000000000010bf0d : cdqe ; shr rax, 4 ; ret
0x000000000003ebf5 : clc ; adc byte ptr [rbx - 0x7af067fc], cl ; ret
0x000000000003b478 : clc ; adc byte ptr [rcx + 0xf], cl ; ret
0x000000000003f920 : clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8349
0x00000000000eaf2c : clc ; adc ebp, dword ptr [rax + rax] ; ret
0x0000000000195ee8 : clc ; adc ebp, esi ; call rdx
0x00000000000db44d : clc ; add al, 0x8d ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8944
0x00000000000e86c8 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000004f78c : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000080714 : clc ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000019099d : clc ; add byte ptr [rax], al ; mov al, 0xa0 ; jmp rsp
0x000000000017ca99 : clc ; add byte ptr [rax], al ; sal bl, 1 ; out dx, eax ; jmp rax
0x000000000006ee1e : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000085e83 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000117f18 : clc ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x000000000017d5f0 : clc ; add dword ptr [rax], eax ; loopne 0x17d5ce ; call qword ptr [rax]
0x000000000017d5f0 : clc ; add dword ptr [rax], eax ; loopne 0x17d5cf ; call qword ptr [rax]
0x0000000000108412 : clc ; add dword ptr [rax], eax ; mov rdi, r12 ; call rbx
0x000000000017f378 : clc ; add dword ptr [rax], eax ; sbb al, dil ; call qword ptr [rax]
0x00000000000818cc : clc ; add dword ptr [rbp - 0x77], ecx ; retf -0x76b4
0x0000000000045b06 : clc ; add dword ptr [rbx + rcx*4 + 0x2c], ecx ; ret
0x0000000000031d60 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000cb42a : clc ; add dword ptr [rdi + rcx - 0x49], eax ; retf
0x000000000009e18c : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x000000000017d310 : clc ; add dword ptr cs:[rax], eax ; mov al, 0x26 ; call qword ptr [rax]
0x000000000010b195 : clc ; add eax, 0x10 ; ret
0x00000000000b3428 : clc ; add eax, 0x2907f9c1 ; ret 0xf089
0x000000000011c630 : clc ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000115371 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c9f5e : clc ; add esi, dword ptr [rsi + rax - 0xd] ; ret
0x000000000017d700 : clc ; add qword ptr [rax], rax ; xor byte ptr [rcx], bh ; call qword ptr [rax]
0x0000000000149e6f : clc ; add rax, r8 ; vzeroupper ; ret
0x000000000008dee7 : clc ; add rax, rcx ; ret
0x00000000001497d4 : clc ; add rax, rcx ; vzeroupper ; ret
0x000000000008e70b : clc ; add rax, rsi ; ret
0x00000000000fdfd2 : clc ; add rsp, 8 ; ret
0x000000000002cfc1 : clc ; and eax, 0x7f ; ret
0x0000000000100e27 : clc ; and eax, 0xffffff ; ret
0x0000000000100e01 : clc ; bswap eax ; ret
0x000000000017f2ae : clc ; call qword ptr [rax]
0x00000000001a3b32 : clc ; call qword ptr [rdi]
0x000000000017f2ee : clc ; call rax
0x00000000001a3c52 : clc ; call rcx
0x000000000018fed8 : clc ; cli ; int1 ; jmp rcx
0x000000000019a079 : clc ; cmc ; call qword ptr [rdx]
0x000000000010afe1 : clc ; cmc ; je 0x10afdd ; pop rbx ; ret
0x0000000000038f87 : clc ; cmovne eax, ecx ; add rsp, 8 ; ret
0x000000000017d4a8 : clc ; cmp byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000017d518 : clc ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; pop rax ; call qword ptr [rax]
0x0000000000003baa : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001508c9 : clc ; cmp rcx, rax ; jne 0x1508fb ; xor eax, eax ; ret
0x00000000001508c8 : clc ; cmp rcx, rax ; jne 0x1508fc ; xor eax, eax ; ret
0x0000000000151709 : clc ; cmp rcx, rax ; jne 0x15173b ; xor eax, eax ; ret
0x0000000000151708 : clc ; cmp rcx, rax ; jne 0x15173c ; xor eax, eax ; ret
0x0000000000037112 : clc ; cqo ; idiv rsi ; ret
0x0000000000081ee0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000077144 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000002cc37 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007d710 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004d439 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000011de49 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00000000000c5a18 : clc ; dec dword ptr [rdi] ; test ch, ch ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x0000000000056ef4 : clc ; dec dword ptr [rdi] ; test dword ptr [rdi - 0x16000007], ecx ; jmp rax
0x0000000000073dad : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000017f366 : clc ; dec eax ; add dword ptr [rax], eax ; loopne 0x17f38e ; clc ; jmp rax
0x000000000017f6e6 : clc ; dec eax ; add eax, 0x58c00002 ; clc ; jmp rax
0x00000000001a2318 : clc ; fcompi st(7) ; call qword ptr [rsi]
0x000000000017efb8 : clc ; fiadd dword ptr [rcx] ; add al, al ; test esi, edi ; call qword ptr [rax]
0x0000000000195338 : clc ; fxtract ; jmp qword ptr [rcx]
0x0000000000003090 : clc ; imul ebp, dword ptr [rsi], -0x74 ; int1 ; mov dr0, word ptr [rax] ; retf
0x000000000016c5a4 : clc ; in al, -0xf ; call qword ptr [rax]
0x000000000017f90e : clc ; inc dword ptr [rax - 0x2ffffde9] ; ret 0xfff8
0x000000000017f6b6 : clc ; inc dword ptr [rax] ; add eax, 0x57700002 ; clc ; jmp qword ptr [rax]
0x000000000002ad9a : clc ; inc dword ptr [rcx - 0x77] ; ret
0x000000000017b550 : clc ; je 0x17b55a ; add byte ptr [rax], dl ; sbb bl, ch ; call qword ptr [rax]
0x0000000000026853 : clc ; jg 0x267e6 ; sal dword ptr [rsi - 0x29], 0x2d ; ret 0
0x00000000001823a8 : clc ; jl 0x182398 ; jmp qword ptr [rdi]
0x000000000017f4be : clc ; jmp qword ptr [rax]
0x00000000001a3512 : clc ; jmp qword ptr [rcx]
0x000000000019a46a : clc ; jmp qword ptr [rsi]
0x000000000004c3f2 : clc ; jmp rax
0x000000000015488a : clc ; jne 0x154997 ; ret
0x0000000000154889 : clc ; jne 0x154998 ; ret
0x000000000017b590 : clc ; jne 0x17b59a ; add byte ptr [rax], ah ; sbb ebp, ebx ; call qword ptr [rax]
0x0000000000034d74 : clc ; jne 0x34d70 ; mov eax, 1 ; ret
0x000000000009fa0d : clc ; jne 0x9fa21 ; ret
0x0000000000180640 : clc ; jno 0x18064c ; add byte ptr [rax + 0x54], dh ; cli ; call qword ptr [rax]
0x00000000000a1e7a : clc ; jo 0xa1e90 ; xchg eax, esp ; ret
0x00000000000a683a : clc ; jo 0xa6850 ; xchg eax, esp ; ret
0x000000000017f586 : clc ; lcall ptr [rax + 0x1fe] ; clc ; call rax
0x000000000017f93e : clc ; lcall ptr [rax + 0x60000218] ; retf -8
0x00000000000c0124 : clc ; leave ; ret
0x000000000017fa06 : clc ; ljmp ptr [rax - 0x7ffffde2] ; out dx, eax ; clc ; jmp rax
0x0000000000191b68 : clc ; loope 0x191b60 ; jmp qword ptr [rcx]
0x0000000000195478 : clc ; loope 0x195472 ; jmp qword ptr [rcx]
0x00000000000e9afd : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000168a82 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000017eb28 : clc ; mov dword ptr [rcx], 0xf72ed000 ; call qword ptr [rax]
0x0000000000128fbf : clc ; mov eax, 0x3e ; syscall
0x0000000000121661 : clc ; mov eax, 3 ; syscall
0x000000000004c81b : clc ; mov edx, 1 ; jmp rax
0x00000000000038cc : clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x000000000012d507 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012de77 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132dc7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e077 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132d37 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e277 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132ca7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d523 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009de8e : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000014e36d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000008a99f : clc ; mov qword ptr [rdi], rdx ; ret
0x00000000001518cc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000009da7a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000004c666 : clc ; mov r11d, 1 ; jmp rax
0x0000000000057eb1 : clc ; mov r8d, 1 ; jmp rax
0x00000000000e1e39 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000017e040 : clc ; mov word ptr [rcx], es ; add al, dl ; fdivr st(5), st(0) ; call qword ptr [rax]
0x0000000000045422 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000002187c : clc ; neg eax ; ret
0x0000000000083c17 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x0000000000083bc1 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x000000000017c808 : clc ; out 0, eax ; add byte ptr [rax], dl ; lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x000000000016b581 : clc ; out dx, al ; call rdi
0x000000000018ab19 : clc ; out dx, al ; call rsp
0x000000000017f2a8 : clc ; out dx, eax ; add dword ptr [rax], eax ; adc edi, eax ; call qword ptr [rax]
0x000000000007754f : clc ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008aec6 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011035c : clc ; pop rbx ; pop rbp ; ret
0x000000000008701b : clc ; pop rbx ; ret
0x0000000000180360 : clc ; pop rdi ; add al, byte ptr [rax] ; mov al, 0x1f ; cli ; jmp qword ptr [rax]
0x000000000017b300 : clc ; pop rsi ; add byte ptr [rax], al ; rcr byte ptr [rsi - 0x16], 1 ; call qword ptr [rax]
0x000000000017f766 : clc ; push qword ptr [rax + 0x10000208] ; clc ; call qword ptr [rax]
0x0000000000070324 : clc ; push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000017f296 : clc ; push qword ptr [rax - 0x1ffffe11] ; adc bh, al ; jmp rax
0x000000000017f45e : clc ; push qword ptr [rax - 9] ; add dword ptr [rax], eax ; shr byte ptr [rcx], 1 ; clc ; call rax
0x0000000000079547 : clc ; push qword ptr [rbp + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000007253a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000006b500 : clc ; push qword ptr [rbp + rbp*4 - 0x77] ; ret 0xe283
0x000000000012717f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000bb75d : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000043bb5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00000000000fd641 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x000000000017d830 : clc ; push rcx ; add dword ptr [rax], eax ; jo 0x17d89e ; jmp qword ptr [rax]
0x0000000000002c31 : clc ; ret
0x0000000000179682 : clc ; ret 0x6e1f
0x00000000001948f8 : clc ; ret 0xfff4
0x0000000000033372 : clc ; retf
0x00000000000c3cac : clc ; retf -0xb
0x00000000000e0304 : clc ; retf -1
0x000000000014a4f4 : clc ; rol ch, 1 ; jns 0x14a4d5 ; retf -0x152d
0x000000000014a644 : clc ; rol ch, 1 ; jns 0x14a625 ; retf -0x152d
0x000000000014a794 : clc ; rol ch, 1 ; jns 0x14a775 ; retf -0x152d
0x000000000014a8e4 : clc ; rol ch, 1 ; jns 0x14a8c5 ; retf -0x152d
0x000000000014aa34 : clc ; rol ch, 1 ; jns 0x14aa15 ; retf -0x152d
0x000000000014ab84 : clc ; rol ch, 1 ; jns 0x14ab65 ; retf -0x152d
0x000000000014acd4 : clc ; rol ch, 1 ; jns 0x14acb5 ; retf -0x152d
0x000000000014ae24 : clc ; rol ch, 1 ; jns 0x14ae05 ; retf -0x152d
0x000000000014af74 : clc ; rol ch, 1 ; jns 0x14af55 ; retf -0x152d
0x000000000014b0c4 : clc ; rol ch, 1 ; jns 0x14b0a5 ; retf -0x152d
0x000000000014b214 : clc ; rol ch, 1 ; jns 0x14b1f5 ; retf -0x152d
0x000000000014b364 : clc ; rol ch, 1 ; jns 0x14b345 ; retf -0x152d
0x000000000014b4b4 : clc ; rol ch, 1 ; jns 0x14b495 ; retf -0x152d
0x000000000014b604 : clc ; rol ch, 1 ; jns 0x14b5e5 ; retf -0x152d
0x000000000014b754 : clc ; rol ch, 1 ; jns 0x14b735 ; retf -0x152d
0x000000000014bbc4 : clc ; rol ch, 1 ; jns 0x14bba5 ; retf -0x152d
0x000000000014bd44 : clc ; rol ch, 1 ; jns 0x14bd25 ; retf -0x152d
0x000000000014bec4 : clc ; rol ch, 1 ; jns 0x14bea5 ; retf -0x152d
0x000000000014c044 : clc ; rol ch, 1 ; jns 0x14c025 ; retf -0x152d
0x000000000014c1c4 : clc ; rol ch, 1 ; jns 0x14c1a5 ; retf -0x152d
0x000000000014c344 : clc ; rol ch, 1 ; jns 0x14c325 ; retf -0x152d
0x000000000014c4c4 : clc ; rol ch, 1 ; jns 0x14c4a5 ; retf -0x152d
0x000000000014c644 : clc ; rol ch, 1 ; jns 0x14c625 ; retf -0x152d
0x000000000014c7c4 : clc ; rol ch, 1 ; jns 0x14c7a5 ; retf -0x152d
0x000000000014c944 : clc ; rol ch, 1 ; jns 0x14c925 ; retf -0x152d
0x000000000014cac4 : clc ; rol ch, 1 ; jns 0x14caa5 ; retf -0x152d
0x000000000014cc44 : clc ; rol ch, 1 ; jns 0x14cc25 ; retf -0x152d
0x000000000014cdc4 : clc ; rol ch, 1 ; jns 0x14cda5 ; retf -0x152d
0x000000000014cf44 : clc ; rol ch, 1 ; jns 0x14cf25 ; retf -0x152d
0x000000000014d0c4 : clc ; rol ch, 1 ; jns 0x14d0a5 ; retf -0x152d
0x0000000000100e11 : clc ; ror ax, 8 ; ret
0x0000000000198b28 : clc ; sahf ; cmc ; call qword ptr [rdx]
0x0000000000003998 : clc ; salc ; jb 0x3a1c ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000370a3 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000100abb : clc ; sar rax, 6 ; ret
0x00000000000c7ac8 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000440da : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000100ea7 : clc ; shr eax, 0x18 ; ret
0x00000000000af22f : clc ; shr rax, 2 ; ret
0x000000000017bf80 : clc ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; loopne 0x17bf31 ; in al, dx ; call qword ptr [rax]
0x0000000000003d84 : clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x0000000000180c70 : clc ; sub byte ptr [rcx], al ; add byte ptr [rax + 0x5d], ah ; sti ; call qword ptr [rax]
0x000000000014941c : clc ; sub rax, r8 ; ret
0x0000000000149671 : clc ; sub rax, rdx ; ret
0x000000000014d9c6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000014994b : clc ; vzeroupper ; ret
0x000000000017df68 : clc ; xchg byte ptr [rcx], al ; add byte ptr [rax - 0x45], dl ; cmc ; call qword ptr [rax]
0x0000000000197fb8 : clc ; xchg ch, dh ; jmp qword ptr [rcx]
0x00000000001954d8 : clc ; xor al, 0xf9 ; call qword ptr [rax]
0x000000000017d390 : clc ; xor dword ptr [rcx], eax ; add byte ptr [rax], dl ; sub esi, edx ; call qword ptr [rax]
0x00000000000e0560 : cld ; add al, byte ptr [rax] ; add al, ch ; push rdi ; retf -1
0x000000000017cb89 : cld ; add byte ptr [rax], al ; adc bh, bh ; out dx, eax ; jmp qword ptr [rax]
0x0000000000186fbc : cld ; add byte ptr [rax], al ; add byte ptr [rax], ah ; sub dh, ch ; jmp qword ptr [rcx]
0x0000000000083fbb : cld ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000c0e72 : cld ; add byte ptr [rax], al ; ret
0x00000000001a0dad : cld ; add dword ptr [rax], eax ; nop ; test al, 0xf7 ; jmp qword ptr [rax]
0x00000000001976b4 : cld ; add dword ptr gs:[rax], eax ; test al, 0x58 ; cmc ; jmp rax
0x000000000009df4f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009df6f : cld ; add eax, dword ptr [rax] ; ret
0x000000000017b12a : cld ; call qword ptr [rax - 0x1f000309]
0x000000000017a056 : cld ; call qword ptr [rax]
0x000000000018e5f2 : cld ; call qword ptr [rbx]
0x000000000018c07a : cld ; call qword ptr [rdx]
0x000000000017a046 : cld ; call rax
0x000000000017b13d : cld ; cld ; jmp qword ptr [rax]
0x0000000000057040 : cld ; cmp dword ptr [rcx], edx ; add dh, al ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000154982 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x154998 ; xor eax, eax ; ret
0x0000000000154981 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x154999 ; xor eax, eax ; ret
0x00000000000ca4dc : cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xca4d7 ; ret
0x000000000016dda4 : cld ; cmp esi, ebp ; inc dword ptr [rsi] ; cmp al, 0xf5 ; call qword ptr [rax]
0x00000000000b208c : cld ; dec dword ptr [rax + 0x39] ; ret
0x0000000000158dad : cld ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x0000000000056917 : cld ; dec dword ptr [rax - 0x77] ; ret 0x12e9
0x00000000000543a9 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000055a2e : cld ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000115de9 : cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001246ff : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000018eeb4 : cld ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x0000000000033037 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000197ab4 : cld ; imul eax, dword ptr [rcx], 0xf566b800 ; jmp qword ptr [rcx]
0x000000000017a112 : cld ; inc dword ptr [rax - 0x12] ; cld ; jmp qword ptr [rax]
0x000000000017a0f2 : cld ; inc dword ptr [rax - 0x21] ; cld ; jmp qword ptr [rax]
0x000000000017b136 : cld ; inc dword ptr [rax - 0x2f000305] ; cld ; cld ; jmp qword ptr [rax]
0x000000000017a06a : cld ; inc dword ptr [rax - 0x54] ; cld ; push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000017a052 : cld ; inc dword ptr [rax - 0x5a] ; cld ; call qword ptr [rax]
0x000000000017b126 : cld ; inc dword ptr [rax - 0xa] ; cld ; call qword ptr [rax - 0x1f000309]
0x000000000017a0fa : cld ; inc dword ptr [rax] ; jrcxz 0x17a100 ; jmp rax
0x000000000016c7d6 : cld ; inc dword ptr [rax] ; loop 0x16c7dc ; jmp rax
0x000000000017a07a : cld ; inc dword ptr [rax] ; mov al, 0xfc ; push rax ; mov al, 0xfc ; jmp rax
0x000000000009e007 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009df2e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000109d75 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000017b146 : cld ; inc eax ; add ch, bh ; call qword ptr [rax]
0x000000000017a0da : cld ; inc eax ; mov eax, 0xd5f0fffc ; cld ; call rax
0x000000000016c75e : cld ; jmp qword ptr [rax]
0x000000000018fd12 : cld ; jmp qword ptr [rbx]
0x000000000016c7da : cld ; jmp rax
0x00000000001936b1 : cld ; jmp rdx
0x000000000018b142 : cld ; jmp rsp
0x0000000000151516 : cld ; jne 0x15174f ; xor eax, eax ; ret
0x0000000000154985 : cld ; jne 0x154995 ; xor eax, eax ; ret
0x0000000000154984 : cld ; jne 0x154996 ; xor eax, eax ; ret
0x00000000001548a5 : cld ; jne 0x154997 ; ret
0x00000000001548a4 : cld ; jne 0x154998 ; ret
0x00000000001982b4 : cld ; jno 0x1982bf ; add al, bl ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000169805 : cld ; lodsb al, byte ptr [rsi] ; loop 0x1697d4 ; retf
0x0000000000189ab4 : cld ; mov dword ptr [rax], eax ; add al, bh ; ret
0x000000000012dc92 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012de95 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e095 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e295 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009de96 : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000014e378 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000001518de : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000009da88 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000000351ac : cld ; mov eax, 0x81 ; syscall
0x0000000000077d80 : cld ; mov eax, 3 ; syscall
0x0000000000199fb4 : cld ; mov es, word ptr [rcx] ; add byte ptr [rax - 0xe], ch ; cmc ; jmp qword ptr [rcx]
0x000000000009da82 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000012d8c6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132f56 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012daa6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132ed6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012dc86 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132e56 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012d6e6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132fd6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000e86b1 : cld ; mov rdi, r8 ; mov eax, 1 ; syscall
0x00000000000453dc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000084050 : cld ; or dword ptr [rbx], 0 ; cmovne rax, rdx ; ret
0x0000000000191eb4 : cld ; or eax, 0xead80001 ; jmp qword ptr [rcx]
0x000000000016b5a1 : cld ; out dx, al ; call rdi
0x000000000018adc1 : cld ; out dx, al ; jmp qword ptr [rax]
0x0000000000197fb4 : cld ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000017a0ae : cld ; push qword ptr [rax + 0x50fffcc0] ; ret 0xfffc
0x000000000017a0c6 : cld ; push qword ptr [rax - 0x36] ; cld ; call qword ptr [rax]
0x000000000017a0a6 : cld ; push qword ptr [rax - 0x43] ; cld ; call qword ptr [rax]
0x000000000016c756 : cld ; push qword ptr [rax - 0x43] ; cld ; push rax ; lahf ; cld ; jmp qword ptr [rax]
0x000000000017a04e : cld ; push qword ptr [rax - 0x5b] ; cld ; inc dword ptr [rax - 0x5a] ; cld ; call qword ptr [rax]
0x000000000017b142 : cld ; push qword ptr [rax - 1] ; cld ; inc eax ; add ch, bh ; call qword ptr [rax]
0x000000000017a06e : cld ; push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000016c75a : cld ; push rax ; lahf ; cld ; jmp qword ptr [rax]
0x000000000017a07e : cld ; push rax ; mov al, 0xfc ; jmp rax
0x000000000017a0b6 : cld ; push rax ; ret
0x00000000000453e2 : cld ; ret
0x000000000018dbb4 : cld ; retf 0
0x000000000018c0b4 : cld ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x18c128 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000167f23 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000000fdd1b : cld ; stc ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000018e501 : cld ; sti ; call qword ptr [rdx]
0x0000000000167f36 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000aebbe : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xaebc1 ; ret
0x0000000000152362 : cld ; vzeroupper ; ret
0x00000000000377bd : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000b059d : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000b051e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000b060e : cli ; adc cl, byte ptr [rax + 0x29] ; retf -0x76b8
0x000000000010d1ca : cli ; add al, 0x48 ; add edx, 1 ; syscall
0x00000000001275b0 : cli ; add al, 0x74 ; jle 0x12753d ; ret 0x8380
0x000000000004d082 : cli ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000017cae1 : cli ; add byte ptr [rax], al ; mov al, 0xf6 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017cb21 : cli ; add byte ptr [rax], al ; xor bh, dh ; out dx, eax ; jmp rax
0x00000000000b07e6 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000afc8f : cli ; add ch, byte ptr [rcx] ; ret 0x8d41
0x000000000004fbff : cli ; add ch, byte ptr [rcx] ; retf -0x2e77
0x0000000000039b00 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000039b32 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000533dc : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000071e07 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000003c418 : cli ; add cl, byte ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000010c76e : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x000000000009e22a : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000010bd51 : cli ; add dword ptr [rbp - 0x55], esi ; mov eax, 0xffffffff ; ret
0x000000000009de81 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x9de91 ; mov byte ptr [rdi], cl ; ret
0x0000000000151fcb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000001518fc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000afc77 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000ab334 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000000e9b50 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000c3c70 : cli ; call 0x20713
0x0000000000169f19 : cli ; call 0xffffffffab246a11
0x000000000018038e : cli ; call qword ptr [rax]
0x00000000001844d2 : cli ; call qword ptr [rdi]
0x000000000016f78a : cli ; call rax
0x0000000000037471 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000018060e : cli ; dec dword ptr [rax - 0x5ffffd90] ; push rcx ; cli ; jmp rax
0x0000000000071a37 : cli ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000001805be : cli ; dec dword ptr [rax] ; outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; xor byte ptr [rsi - 6], cl ; jmp qword ptr [rax]
0x0000000000180286 : cli ; dec dword ptr [rax] ; pop rbx ; add al, byte ptr [rax] ; rol byte ptr [rbx], 0xfa ; jmp qword ptr [rax]
0x000000000018050e : cli ; dec dword ptr [rax] ; push 2 ; add al, dh ; cmp edi, edx ; jmp qword ptr [rax]
0x00000000000a3ddd : cli ; dec dword ptr [rbx + rcx*4 + 0x55] ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x00000000000a17eb : cli ; dec dword ptr [rbx + rcx*4 + 0x7d] ; add byte ptr [rax - 0x39], cl ; ret 0xfc01
0x000000000007f6c5 : cli ; dec dword ptr [rcx + rcx*4 - 9] ; call 0x7c1c7
0x0000000000180b06 : cli ; dec eax ; mov dword ptr [rax], eax ; add byte ptr [rax - 0x2b], dl ; cli ; jmp rax
0x0000000000180ae6 : cli ; inc dword ptr [rax - 0x5ffffd74] ; sar edx, cl ; call rax
0x0000000000180716 : cli ; inc eax ; jne 0x180726 ; add byte ptr [rax], ah ; pop rbx ; cli ; jmp rax
0x00000000001807b6 : cli ; inc eax ; js 0x1807c6 ; add al, ah ; cli ; call qword ptr [rax]
0x0000000000170862 : cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000170866 : cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000170842 : cli ; inc eax ; mov edx, edi ; call rax
0x000000000018fed9 : cli ; int1 ; jmp rcx
0x000000000016c615 : cli ; int1 ; push rax ; sti ; int1 ; call rax
0x000000000014de79 : cli ; jg 0x14de8c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000014e362 : cli ; jg 0x14e372 ; vzeroupper ; ret
0x00000000001518b7 : cli ; jg 0x1518ca ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000151f96 : cli ; jg 0x151fa8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000152291 : cli ; jg 0x1522a4 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001528c8 : cli ; jg 0x1528d8 ; vzeroupper ; ret
0x000000000016f786 : cli ; jmp qword ptr [rax - 0x2f0005a9]
0x000000000018028e : cli ; jmp qword ptr [rax]
0x0000000000185452 : cli ; jmp qword ptr [rcx]
0x000000000016f782 : cli ; jmp rax
0x00000000000b36dd : cli ; jmp rdx
0x00000000000c1d60 : cli ; jnp 0xc1d76 ; xchg eax, esp ; ret 0xb60f
0x00000000001805ae : cli ; lcall ptr [rax + 0x6000026e] ; cli ; call rax
0x000000000017087a : cli ; lcall ptr [rax - 0x54] ; cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000170852 : cli ; lcall ptr [rax] ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; call rax
0x00000000000e0d75 : cli ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000180b2e : cli ; ljmp ptr [rax + 7] ; add dword ptr [rax], eax ; loopne 0x180b15 ; cli ; call rax
0x00000000001804de : cli ; ljmp ptr [rax - 0x7ffffd98] ; cmp dl, bh ; jmp rax
0x000000000008ab7c : cli ; mov byte ptr [rdi + 2], al ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aa9c : cli ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000008a9cf : cli ; mov byte ptr [rdi + 2], dl ; ret
0x000000000012e098 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000f7c5d : cli ; mov rsi, r13 ; call r14
0x0000000000105300 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008e858 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000144d26 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000af882 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x00000000000af636 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000003f941 : cli ; or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x000000000002082a : cli ; or edi, dword ptr [rcx] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000016b541 : cli ; out dx, al ; call rdi
0x000000000016a3a1 : cli ; push 0x6e ; ja 0x16a32e ; ret 0x48f
0x000000000017083e : cli ; push qword ptr [rax - 0x3f000577] ; mov edx, edi ; call rax
0x0000000000180326 : cli ; push qword ptr [rax - 0x7ffffda2] ; sbb bh, dl ; call rax
0x0000000000170856 : cli ; push qword ptr [rax] ; mov bh, dl ; call rax
0x0000000000180b8e : cli ; push rax ; int1 ; add dword ptr [rax], eax ; fdiv st(2), st(0) ; jmp qword ptr [rax]
0x000000000009dda9 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000002bfef : cli ; ret
0x00000000000b053c : cli ; ret 0x10
0x0000000000168e45 : cli ; ret 0xac65
0x00000000000d17a2 : cli ; retf
0x00000000001093b9 : cli ; retf 0
0x00000000000f29fa : cli ; retf 0x2b
0x00000000000c7ac5 : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000fc68b : cli ; setae al ; ret
0x00000000000fde7d : cli ; stc ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000001079ea : cli ; std ; jbe 0x1079f4 ; ret
0x000000000018e339 : cli ; sti ; call rsp
0x00000000000fd2c5 : cli ; syscall
0x0000000000168cf0 : cli ; test dl, bh ; retf -0x2081
0x0000000000167a8a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000001a42ed : cmc ; add al, byte ptr [rax] ; ret 0x503
0x0000000000149298 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000159cea : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016ddaa : cmc ; call qword ptr [rax]
0x0000000000195e6a : cmc ; call qword ptr [rbx]
0x0000000000197c2a : cmc ; call qword ptr [rcx]
0x0000000000196e8a : cmc ; call qword ptr [rdx]
0x0000000000196202 : cmc ; call qword ptr [rsi]
0x000000000016e392 : cmc ; call rax
0x00000000000d0503 : cmc ; call rcx
0x00000000001991c2 : cmc ; call rdi
0x000000000016dcd2 : cmc ; call rdx
0x00000000001992f2 : cmc ; call rsi
0x000000000016dd92 : cmc ; call rsp
0x000000000017df8e : cmc ; dec dword ptr [rax - 0x6ffffe78] ; ret
0x00000000000c1310 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c3083 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x1ceb
0x00000000000cfc72 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000cc67f : cmc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000016de0e : cmc ; dec dword ptr [rsi] ; cmp eax, 0x3d18fff5 ; cmc ; jmp qword ptr [rdx]
0x000000000016dd8e : cmc ; dec dword ptr [rsi] ; cmp ebp, esi ; call rsp
0x000000000016dd8a : cmc ; dec dword ptr [rsi] ; cmp ebp, esi ; dec dword ptr [rsi] ; cmp ebp, esi ; call rsp
0x000000000016dd4e : cmc ; dec dword ptr [rsi] ; cmp ebp, esi ; lcall ptr [rax] ; cmp esi, ebp ; jmp qword ptr [rdx]
0x000000000016ddf2 : cmc ; dec eax ; cmp al, 0xf5 ; call rdx
0x000000000016dd32 : cmc ; dec eax ; cmp dh, ch ; call rdx
0x000000000016dcce : cmc ; dec eax ; cmp ebp, esi ; call rdx
0x000000000017df96 : cmc ; dec eax ; mov byte ptr [rcx], al ; add al, ah ; ret
0x000000000017e0c6 : cmc ; inc dword ptr [rax + 0x18f] ; hlt ; cmc ; call qword ptr [rax]
0x000000000017e0a6 : cmc ; inc dword ptr [rax + 0x3000018e] ; in al, dx ; cmc ; call rax
0x00000000000ca014 : cmc ; inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000017dece : cmc ; inc dword ptr [rax - 0x80] ; add dword ptr [rax], eax ; sal byte ptr [rcx], 0xf5 ; call rax
0x000000000016dda6 : cmc ; inc dword ptr [rsi] ; cmp al, 0xf5 ; call qword ptr [rax]
0x000000000017e02e : cmc ; inc eax ; mov word ptr [rcx], es ; add byte ptr [rax - 0x24], dh ; cmc ; jmp rax
0x000000000010afe2 : cmc ; je 0x10afdc ; pop rbx ; ret
0x000000000016e24a : cmc ; jmp qword ptr [rax - 0x34000a7b]
0x000000000016e38e : cmc ; jmp qword ptr [rax]
0x000000000019637a : cmc ; jmp qword ptr [rbx]
0x0000000000196052 : cmc ; jmp qword ptr [rcx]
0x000000000016dd56 : cmc ; jmp qword ptr [rdx]
0x00000000001962d2 : cmc ; jmp qword ptr [rsi]
0x000000000017def6 : cmc ; jmp rax
0x000000000016e0de : cmc ; jmp rbx
0x0000000000195c22 : cmc ; jmp rcx
0x0000000000196b2a : cmc ; jmp rdi
0x00000000001965ea : cmc ; jmp rdx
0x000000000016dcda : cmc ; jmp rsi
0x0000000000100f15 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000016dd52 : cmc ; lcall ptr [rax] ; cmp esi, ebp ; jmp qword ptr [rdx]
0x000000000016e03a : cmc ; lcall ptr [rbp + 0x3a] ; cmc ; jmp qword ptr [rdx]
0x00000000000ca2e1 : cmc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000017deee : cmc ; ljmp ptr [rax - 0xffffe7f] ; push rax ; cmc ; jmp rax
0x000000000016a7c9 : cmc ; mov ch, 0xab ; ret
0x0000000000132eda : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012d91e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000110dd1 : cmc ; mov eax, 0x81 ; syscall
0x00000000000d3d9a : cmc ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000f0444 : cmc ; movsxd rdi, ebx ; mov eax, 0x114 ; syscall
0x00000000000e6f44 : cmc ; movsxd rdi, ebx ; mov eax, 0x11d ; syscall
0x00000000000351a9 : cmc ; movsxd rdi, r12d ; mov eax, 0x81 ; syscall
0x0000000000153e93 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000007c07f : cmc ; or esi, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000006c251 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000167677 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000007616d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cb0c3 : cmc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f28ef : cmc ; retf
0x00000000000da627 : cmc ; retf 9
0x000000000018020d : cmc ; stc ; call rax
0x0000000000153e97 : cmc ; sub eax, edx ; ret
0x0000000000169e05 : cmc ; xlatb ; ret 0x4e27
0x00000000000d9191 : cmova eax, edx ; ret
0x000000000007af39 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000083ca7 : cmovae eax, ecx ; ret
0x00000000000487dd : cmovae eax, edi ; ret
0x00000000000f197c : cmovae eax, esi ; ret
0x000000000007af38 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000487dc : cmovae rax, rdi ; ret
0x00000000000f197b : cmovae rax, rsi ; ret
0x00000000000376ff : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000d90ab : cmovbe esi, ecx ; mov eax, ecx ; syscall
0x00000000000d90aa : cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x0000000000069104 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000e1bdb : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000087339 : cmove eax, ebx ; pop rbx ; ret
0x0000000000072cf1 : cmove eax, ecx ; ret
0x0000000000120efa : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000085088 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000b03b2 : cmove eax, edx ; add rsp, 0x28 ; ret
0x0000000000038f6a : cmove eax, edx ; add rsp, 8 ; ret
0x000000000002c9ab : cmove eax, edx ; ret
0x00000000000ca391 : cmove eax, esi ; ret
0x00000000000dbf18 : cmove edi, ebx ; call r14
0x0000000000072cf0 : cmove r8, rcx ; ret
0x00000000000e1bda : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000087338 : cmove rax, rbx ; pop rbx ; ret
0x0000000000120ef9 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000085099 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000b03b1 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000081ee2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002c9aa : cmove rax, rdx ; ret
0x00000000000dbf17 : cmove rdi, rbx ; call r14
0x000000000006fdab : cmovg eax, ecx ; test rdx, rdx ; jne 0x6fda9 ; ret
0x0000000000078eeb : cmovg eax, ecx ; test rdx, rdx ; jne 0x78ee9 ; ret
0x00000000000afe48 : cmovge eax, edx ; pop rbx ; ret
0x00000000000afe47 : cmovge rax, rdx ; pop rbx ; ret
0x00000000000be254 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000afe27 : cmovle eax, edx ; pop rbx ; ret
0x00000000000afe26 : cmovle rax, rdx ; pop rbx ; ret
0x000000000010d333 : cmovne eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000077b93 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037474 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000038f88 : cmovne eax, ecx ; add rsp, 8 ; ret
0x00000000000f7e26 : cmovne eax, ecx ; ret
0x0000000000100e45 : cmovne eax, edi ; ret
0x0000000000038fa2 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000083ac3 : cmovne eax, edx ; ret
0x000000000014d354 : cmovne eax, edx ; vzeroupper ; ret
0x00000000000f7e5c : cmovne eax, esi ; ret
0x0000000000037473 : cmovne rax, rbx ; pop rbx ; ret
0x0000000000081883 : cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000001251a5 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000083ac2 : cmovne rax, rdx ; ret
0x000000000014d353 : cmovne rax, rdx ; vzeroupper ; ret
0x0000000000116fe7 : cmovno eax, dword ptr [rbx - 0x76b3c01c] ; ret 0x894c
0x00000000000f7b92 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000f7b91 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000ddeed : cmovs eax, dword ptr [rbx + 0x148f0e1] ; retf 0x3949
0x000000000008dea8 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf -0x7cb8
0x0000000000110de0 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x0000000000037166 : cmovs eax, edx ; pop rbx ; ret
0x0000000000023ffc : cmovs eax, edx ; ret
0x000000000007c950 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000011700a : cmovs ecx, dword ptr [rcx] ; ret 0x894c
0x00000000000ff5c0 : cmovs edi, dword ptr [rcx] ; retf -0x158b
0x0000000000116d0c : cmovs esi, dword ptr [rcx] ; retf -0x3eb8
0x000000000009df86 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x000000000017d204 : cmp ah, 0xf0 ; call rax
0x000000000017e92c : cmp ah, 0xf6 ; jmp rax
0x0000000000149593 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149408 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014946f : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000cf904 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x448b
0x000000000019db60 : cmp al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 1
0x000000000018d300 : cmp al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000f0103 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000ca4f8 : cmp al, 0x11 ; je 0xca506 ; xor eax, eax ; ret
0x0000000000079257 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000035cf7 : cmp al, 0x24 ; call r14
0x00000000000e328f : cmp al, 0x24 ; mov eax, 0x101 ; syscall
0x00000000000e3349 : cmp al, 0x24 ; mov eax, 3 ; syscall
0x0000000000034f96 : cmp al, 0x24 ; mov eax, ecx ; syscall
0x0000000000127cdc : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x160] ; jmp rax
0x00000000000fccfa : cmp al, 0x25 ; add byte ptr [rbx], al ; add byte ptr [rax], al ; call 0x128fa8
0x0000000000111445 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000193bf4 : cmp al, 0x2b ; add dword ptr [rax], eax ; test al, 0x3b ; hlt ; jmp qword ptr [rsi]
0x00000000001a3ff4 : cmp al, 0x2f ; add al, byte ptr [rax] ; sub byte ptr [rdx], cl ; sti ; call rax
0x00000000001940f4 : cmp al, 0x30 ; add dword ptr [rax], eax ; test al, 0x50 ; hlt ; call qword ptr [rdx]
0x00000000001948f4 : cmp al, 0x38 ; add dword ptr [rax], eax ; clc ; ret 0xfff4
0x0000000000087015 : cmp al, 0x3d ; jne 0x8704f ; mov rax, rdi ; pop rbx ; ret
0x0000000000168a80 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000196ff4 : cmp al, 0x5f ; add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rcx]
0x0000000000167983 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000000e6520 : cmp al, 0x78 ; jno 0xe6593 ; or dword ptr [rbx + 0x64], 2 ; jmp 0xe64fe
0x00000000001230df : cmp al, 0x8b ; or byte ptr [rcx], dil ; ret 0x2175
0x000000000016a46b : cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000019a4f4 : cmp al, 0x94 ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000063c14 : cmp al, 0xcf ; jmp 0x63bde
0x0000000000191df4 : cmp al, 0xd ; add dword ptr [rax], eax ; js 0x191dea ; jmp qword ptr [rcx]
0x0000000000191df4 : cmp al, 0xd ; add dword ptr [rax], eax ; js 0x191deb ; jmp qword ptr [rcx]
0x00000000000e63b3 : cmp al, 0xe8 ; xchg eax, edi ; retf -1
0x000000000017b715 : cmp al, 0xeb ; call rax
0x000000000017c425 : cmp al, 0xef ; jmp qword ptr [rax]
0x000000000018b709 : cmp al, 0xef ; jmp rsp
0x0000000000191ff4 : cmp al, 0xf ; add dword ptr [rax], eax ; fdiv st(2) ; jmp rcx
0x000000000017cc9d : cmp al, 0xf0 ; jmp rax
0x0000000000193d39 : cmp al, 0xf4 ; jmp qword ptr [rdi]
0x000000000016dda9 : cmp al, 0xf5 ; call qword ptr [rax]
0x000000000016ddf5 : cmp al, 0xf5 ; call rdx
0x00000000000cc9ec : cmp al, 0xf5 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000016ddf1 : cmp al, 0xf5 ; dec eax ; cmp al, 0xf5 ; call rdx
0x000000000016ddfd : cmp al, 0xf5 ; jmp rsi
0x000000000017fbed : cmp al, 0xf9 ; call rax
0x000000000017a459 : cmp al, 0xfb ; call qword ptr [rax]
0x000000000017a3d9 : cmp al, 0xfb ; call rax
0x0000000000194d7d : cmp al, 1 ; add byte ptr [rax], dl ; iretd ; hlt ; call qword ptr [rcx]
0x00000000001514f3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000099950 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x000000000006f5ab : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000bfcd2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000194b55 : cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x3e], bl ; stc ; call qword ptr [rax]
0x000000000017d4d1 : cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x54], ah ; jmp rax
0x0000000000194b95 : cmp al, byte ptr [rcx] ; add byte ptr [rax], ch ; stc ; call qword ptr [rax]
0x000000000007dc0b : cmp al, byte ptr [rcx] ; add rsp, 8 ; ret
0x00000000000dd4b1 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000003], bl ; ret 0xdb31
0x0000000000154356 : cmp al, byte ptr [rsi - 1] ; jne 0x15437c ; xor eax, eax ; ret
0x00000000000477fa : cmp al, ch ; push rax ; retf -1
0x00000000000d7518 : cmp al, ch ; ret 0xf490
0x0000000000022a48 : cmp al, ch ; ret 0xffdc
0x0000000000106928 : cmp al, ch ; ret 0xfffd
0x000000000005acd7 : cmp al, ch ; retf
0x000000000008e106 : cmp al, dh ; ret
0x000000000008e105 : cmp al, r14b ; ret
0x0000000000032ef6 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00000000000d42ac : cmp bh, al ; add byte ptr [rdx], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000017a455 : cmp bh, bl ; call qword ptr [rax]
0x000000000017a3d5 : cmp bh, bl ; call rax
0x00000000000f7e5a : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000000f7e24 : cmp bh, dl ; cmovne eax, ecx ; ret
0x000000000017d1ec : cmp bl, 0xf0 ; call qword ptr [rax]
0x000000000018ded0 : cmp bl, 0xfb ; jmp qword ptr [rax]
0x000000000017b138 : cmp bl, 0xfc ; call rax
0x000000000017a451 : cmp bl, bh ; call qword ptr [rax]
0x000000000017a3d1 : cmp bl, bh ; call rax
0x00000000000ec4a1 : cmp bl, byte ptr [rbx + 0x5d] ; ret
0x0000000000002d09 : cmp bl, byte ptr [rip - 0x165c2f47] ; rcl byte ptr [rbx - 0x7a], 1 ; retf -0x2fb1
0x000000000017a450 : cmp bl, dil ; call qword ptr [rax]
0x000000000009f246 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000071a3b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000f8b5a : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x00000000000fa9e2 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000774a3 : cmp byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000d6ea9 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7743 : cmp byte ptr [rax + 0x2d], bh ; add byte ptr [rax], al ; je 0xd7789 ; xor eax, eax ; ret
0x000000000006d7c2 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000011c096 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008e147 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000ebac2 : cmp byte ptr [rax + rax], ch ; add rsp, 0x18 ; ret
0x0000000000026979 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000010f9d3 : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000071a3c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000fa9e3 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000071d71 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x00000000000d6703 : cmp byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000bdd14 : cmp byte ptr [rax - 0x77], cl ; shr eax, cl ; ret
0x00000000000d6702 : cmp byte ptr [rax - 0x77], r9b ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000774a4 : cmp byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000113a70 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000011540e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011ad1c : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000031c0e : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000d62d7 : cmp byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000ea110 : cmp byte ptr [rax - 0x80], al ; jmp qword ptr [rbx]
0x00000000001804e4 : cmp byte ptr [rax], 0xfa ; jmp rax
0x0000000000142288 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008e136 : cmp byte ptr [rax], ah ; ret
0x000000000018494d : cmp byte ptr [rax], al ; add al, al ; xor ch, bl ; call qword ptr [rsi]
0x0000000000184995 : cmp byte ptr [rax], al ; add al, ch ; xor ch, bl ; call qword ptr [rsi]
0x000000000006389c : cmp byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000040aa0 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000257f7 : cmp byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x415e
0x0000000000079503 : cmp byte ptr [rax], al ; je 0x79514 ; ret
0x000000000002bfa6 : cmp byte ptr [rax], al ; mov byte ptr [rip + 0x381bef], dl ; ret
0x000000000002bc81 : cmp byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000022005 : cmp byte ptr [rax], al ; ret
0x00000000001495e4 : cmp byte ptr [rax], al ; retf 0xf66
0x000000000011e7a9 : cmp byte ptr [rax], bl ; je 0x11e7b4 ; ret
0x00000000000d6eaa : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093440 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000008e606 : cmp byte ptr [rax], dh ; ret
0x000000000008e126 : cmp byte ptr [rax], dl ; ret
0x000000000008e125 : cmp byte ptr [rax], r10b ; ret
0x000000000008e135 : cmp byte ptr [rax], r12b ; ret
0x000000000008e605 : cmp byte ptr [rax], r14b ; ret
0x000000000009343f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000009f24a : cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000009f249 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000ee12e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000019b578 : cmp byte ptr [rbp - 0xa], cl ; call qword ptr [rax]
0x000000000002bfe9 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000158a97 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x00000000001577e5 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000c14ea : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ca016 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xca027 ; pop rbx ; ret
0x0000000000184668 : cmp byte ptr [rbx + rbp*8], ch ; jmp qword ptr [rsi]
0x000000000017a418 : cmp byte ptr [rbx + rdi*8], 0xff ; cmp byte ptr [rsi], 0xfb ; call qword ptr [rax]
0x000000000018ce1c : cmp byte ptr [rbx - 0x5ff1acf9], al ; adc dword ptr [rbx], eax ; retf 0xa03
0x000000000009f247 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000cf52b : cmp byte ptr [rcx - 0x1787dbb4], cl ; retf
0x00000000000e8906 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000fd427 : cmp byte ptr [rcx - 0x77], cl ; retf 0x6348
0x0000000000002c58 : cmp byte ptr [rcx], ah ; loop 0x2c6f ; retf
0x000000000017d499 : cmp byte ptr [rcx], al ; add al, al ; jmp rax
0x00000000001948f5 : cmp byte ptr [rcx], al ; add al, bh ; ret 0xfff4
0x0000000000194995 : cmp byte ptr [rcx], al ; add al, ch ; ret
0x000000000017d4a9 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000142289 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000009ad74 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000158b24 : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5e ; ret
0x0000000000195e68 : cmp byte ptr [rcx], dl ; cmc ; call qword ptr [rbx]
0x00000000000d3d11 : cmp byte ptr [rdi + 0xf], al ; mov dh, 4 ; and cl, ch ; retf -2
0x00000000000d3d10 : cmp byte ptr [rdi + 0xf], r8b ; mov dh, 4 ; and cl, ch ; retf -2
0x0000000000002074 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000037138 : cmp byte ptr [rdi], 0 ; jne 0x37146 ; pop rbx ; ret
0x000000000017b778 : cmp byte ptr [rdi], 0 ; xor byte ptr [rdi - 0x15], ah ; call rax
0x00000000000d3b2d : cmp byte ptr [rdi], cl ; mov dh, 0x42 ; or byte ptr [rcx - 0x77], al ; ret 0x8341
0x000000000000230e : cmp byte ptr [rdi], cl ; salc ; ret
0x00000000000cb474 : cmp byte ptr [rdi], cl ; test byte ptr [rip - 0x9ffffff], dl ; ret
0x000000000014fd9d : cmp byte ptr [rdi], dl ; ret
0x00000000001508b0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000150899 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000150882 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014f33e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d3b2c : cmp byte ptr [rdi], r9b ; mov dh, 0x42 ; or byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000001494af : cmp byte ptr [rdx], al ; add byte ptr [rax + 0x63], cl ; retf -0x7cb8
0x00000000000ce396 : cmp byte ptr [rdx], cl ; call 0xca684
0x000000000016cd50 : cmp byte ptr [rdx], dl ; call rax
0x00000000000c8530 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xc8548 ; xor eax, eax ; ret
0x00000000000e7252 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x000000000019a3a8 : cmp byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000017a41c : cmp byte ptr [rsi], 0xfb ; call qword ptr [rax]
0x00000000000e6ee2 : cmp ch, byte ptr [rcx - 0x76b6ffd4] ; retf -0x3f7b
0x0000000000149472 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000017d61c : cmp cl, 0xf2 ; call qword ptr [rax]
0x000000000011a978 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006dec0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000f4989 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x82
0x000000000012c0c1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000012c211 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000012c361 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000012c4b1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000012c601 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000012c751 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000012c8a1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000012c9f1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000012cb41 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000012cc91 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000012cde1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000012cf31 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000012d081 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000012d1d1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000012d321 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000001312fa : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000013147a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000001315fa : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000013177a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000001318fa : cmp cl, byte ptr [rdi] ; retf 0xf05
0x0000000000131a7a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000131bfa : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000131d7a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000131efa : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000013207a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000001321fa : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000013237a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000001324fa : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000013267a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000001327fa : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000001126ab : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000016a846 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000cd0ae : cmp cl, byte ptr [rsi] ; je 0xcd04b ; pop rbx ; ret
0x00000000000f8a22 : cmp cl, ch ; ret
0x000000000017d23d : cmp cl, dh ; call rax
0x00000000000d91c9 : cmp cx, 0xa ; mov eax, edx ; je 0xd922a ; ret
0x00000000000dc032 : cmp dh, 0xff ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x00000000000f8bad : cmp dh, al ; add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f8b8e : cmp dh, al ; add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f7e93 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000014d351 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000037135 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000001528aa : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000016dd35 : cmp dh, ch ; call rdx
0x000000000016dd31 : cmp dh, ch ; dec eax ; cmp dh, ch ; call rdx
0x000000000016e03d : cmp dh, ch ; jmp qword ptr [rdx]
0x000000000016dd3d : cmp dh, ch ; jmp rsi
0x000000000016e039 : cmp dh, ch ; lcall ptr [rbp + 0x3a] ; cmc ; jmp qword ptr [rdx]
0x0000000000094135 : cmp dh, dh ; ret 0x7501
0x00000000000f7ebb : cmp dh, dl ; cmovne eax, ecx ; ret
0x00000000000f7e59 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000f7e23 : cmp dil, dl ; cmovne eax, ecx ; ret
0x000000000009de80 : cmp dl, 1 ; ja 0x9dea3 ; jb 0x9de92 ; mov byte ptr [rdi], cl ; ret
0x00000000001518fb : cmp dl, 1 ; jb 0x15190d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000151fca : cmp dl, 1 ; jb 0x151fd8 ; mov byte ptr [rdi], cl ; ret
0x0000000000083c62 : cmp dl, 3 ; je 0x83c90 ; movsx eax, dl ; ret
0x0000000000083c61 : cmp dl, 3 ; je 0x83c91 ; movsx eax, dl ; ret
0x00000000001804e5 : cmp dl, bh ; jmp rax
0x000000000016b540 : cmp dl, bh ; out dx, al ; call rdi
0x0000000000057015 : cmp dl, byte ptr [rcx] ; add dh, al ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000002be6 : cmp dl, byte ptr [rdi] ; ret
0x0000000000194fd8 : cmp dl, dl ; hlt ; jmp qword ptr [rcx]
0x000000000012b617 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000eba6e : cmp dword ptr [rax + rax], ebp ; pop rbp ; pop r12 ; ret
0x0000000000144be7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011e7a8 : cmp dword ptr [rax], 0x18 ; je 0x11e7b5 ; ret
0x000000000002082c : cmp dword ptr [rax], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000002cd5d : cmp dword ptr [rbp + 0x14], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000132a18 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000086bd3 : cmp dword ptr [rcx - 0x76b70007], ebx ; ret 0x8949
0x000000000008a6d9 : cmp dword ptr [rcx - 0x77], eax ; retf -0x76bf
0x0000000000057041 : cmp dword ptr [rcx], edx ; add dh, al ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000000f8f21 : cmp dword ptr [rdi + 0x10], 0 ; je 0xf8f38 ; xor eax, eax ; ret
0x000000000010f37d : cmp dword ptr [rdi + 0x10], 2 ; je 0x10f38e ; ret
0x0000000000075324 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000079501 : cmp dword ptr [rdi + 0x38], 0 ; je 0x79516 ; ret
0x00000000000ae860 : cmp dword ptr [rdi + 8], edx ; jne 0xae843 ; ret
0x00000000000fc628 : cmp dword ptr [rdi], 0 ; je 0xfc63e ; ret
0x00000000000fd62f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000082e51 : cmp dword ptr [rip + 0x32bb18], 0 ; je 0x82e69 ; ret
0x0000000000075e51 : cmp dword ptr [rip + 0x33b5a8], 0 ; je 0x75e69 ; ret
0x000000000011a4f0 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x11a508 ; xor eax, eax ; ret
0x0000000000070308 : cmp dword ptr [rsi + 0x30], 0 ; je 0x70316 ; ret
0x00000000000ebfed : cmp dword ptr [rsi], 0 ; je 0xebffe ; pop rbx ; ret
0x00000000000038de : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000e29d8 : cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x000000000011e7a7 : cmp dword ptr fs:[rax], 0x18 ; je 0x11e7b6 ; ret
0x000000000007b53d : cmp eax, 0x1000 ; je 0x7b559 ; xor eax, eax ; ret
0x000000000006777f : cmp eax, 0x109d32 ; call 0xf3a17
0x0000000000003c67 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000004c60c : cmp eax, 0x13f ; add rax, rdi ; jmp rax
0x0000000000029734 : cmp eax, 0x14b4f7 ; mov eax, ecx ; syscall
0x000000000004c5a3 : cmp eax, 0x1a8 ; add rax, rdi ; jmp rax
0x0000000000108692 : cmp eax, 0x2a8185 ; call rax
0x00000000000eaf2b : cmp eax, 0x2c13f8 ; ret
0x000000000017a49d : cmp eax, 0x3020fffb ; sti ; jmp rax
0x000000000017a47d : cmp eax, 0x3060fffb ; sti ; jmp qword ptr [rax]
0x000000000007aa98 : cmp eax, 0x33 ; add byte ptr [rax], al ; ret
0x000000000007c222 : cmp eax, 0x3326d1 ; jae 0x7c1e3 ; ret
0x000000000004c3eb : cmp eax, 0x360 ; add rax, rdi ; jmp rax
0x000000000016de11 : cmp eax, 0x3d18fff5 ; cmc ; jmp qword ptr [rdx]
0x000000000017d549 : cmp eax, 0x5ce00001 ; jmp qword ptr [rax]
0x000000000017d569 : cmp eax, 0x63d00001 ; jmp qword ptr [rax]
0x00000000000c0feb : cmp eax, 0x7275 ; jne 0xc0fd4 ; xor eax, eax ; ret
0x0000000000034dd4 : cmp eax, 0x80 ; jne 0x34dc7 ; xor eax, eax ; ret
0x0000000000034e24 : cmp eax, 0x80 ; jne 0x34e17 ; xor eax, eax ; ret
0x000000000005badd : cmp eax, 0x83480000 ; ret 0x8001
0x00000000000edff7 : cmp eax, 0x84ea4 ; sub rsp, 0x60 ; syscall
0x00000000000edd99 : cmp eax, 0x850d2 ; mov eax, ebx ; syscall
0x00000000000edca8 : cmp eax, 0x851b8 ; mov eax, ebx ; syscall
0x00000000000eafd5 : cmp eax, 0x85d82 ; mov eax, ecx ; syscall
0x000000000014d744 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000087016 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00000000000bb76a : cmp eax, 0x89e18948 ; ret 0xf631
0x0000000000038f52 : cmp eax, 0x8c48348 ; ret
0x00000000000e6ac0 : cmp eax, 0xa1 ; je 0xe6ae0 ; neg eax ; pop rbx ; ret
0x00000000000e6cbd : cmp eax, 0xa1 ; je 0xe6ce0 ; neg eax ; pop rbx ; ret
0x0000000000167d6b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000007cf87 : cmp eax, 0xb8000f8e ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ce6c8 : cmp eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000442e2 : cmp eax, 0xc5834900 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000194dcd : cmp eax, 0xcf800001 ; hlt ; jmp qword ptr [rcx]
0x0000000000194de5 : cmp eax, 0xcf980001 ; hlt ; jmp qword ptr [rsi]
0x0000000000194ea5 : cmp eax, 0xd1480001 ; hlt ; jmp qword ptr [rcx]
0x000000000010afe0 : cmp eax, 0xf5 ; je 0x10afde ; pop rbx ; ret
0x0000000000001cb7 : cmp eax, 0xf9a7750 ; retf
0x00000000000a85ea : cmp eax, 0xff ; cmove eax, edx ; ret
0x000000000012717e : cmp eax, 0xff ; je 0x127199 ; add rsp, 8 ; ret
0x0000000000070323 : cmp eax, 0xff ; je 0x70336 ; pop rbx ; ret
0x0000000000079546 : cmp eax, 0xff ; je 0x79579 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043bb4 : cmp eax, 0xff ; jne 0x43ba9 ; mov rax, rdx ; ret
0x0000000000072539 : cmp eax, 0xff ; jne 0x72546 ; pop rbx ; ret
0x00000000000fd640 : cmp eax, 0xff ; jne 0xfd63f ; xor eax, eax ; leave ; ret
0x00000000000344d1 : cmp eax, 0xfffff000 ; ja 0x344e8 ; ret
0x000000000003453d : cmp eax, 0xfffff000 ; ja 0x34558 ; ret
0x0000000000034587 : cmp eax, 0xfffff000 ; ja 0x34597 ; ret
0x0000000000037e44 : cmp eax, 0xfffff000 ; ja 0x37e57 ; ret
0x0000000000069188 : cmp eax, 0xfffff000 ; ja 0x691a0 ; ret
0x00000000000691c1 : cmp eax, 0xfffff000 ; ja 0x691d8 ; ret
0x000000000007650c : cmp eax, 0xfffff000 ; ja 0x76520 ; ret
0x0000000000076d60 : cmp eax, 0xfffff000 ; ja 0x76d78 ; pop rbx ; ret
0x0000000000077839 : cmp eax, 0xfffff000 ; ja 0x7784a ; ret
0x00000000000b03e8 : cmp eax, 0xfffff000 ; ja 0xb0400 ; ret
0x00000000000bb178 : cmp eax, 0xfffff000 ; ja 0xbb190 ; pop rbx ; ret
0x00000000000bc362 : cmp eax, 0xfffff000 ; ja 0xbc377 ; ret
0x00000000000bf621 : cmp eax, 0xfffff000 ; ja 0xbf637 ; ret
0x00000000000bf6bb : cmp eax, 0xfffff000 ; ja 0xbf6cf ; ret
0x00000000000bf7ac : cmp eax, 0xfffff000 ; ja 0xbf7bf ; ret
0x00000000000bf8d2 : cmp eax, 0xfffff000 ; ja 0xbf8e7 ; ret
0x00000000000bf952 : cmp eax, 0xfffff000 ; ja 0xbf967 ; ret
0x00000000000c0714 : cmp eax, 0xfffff000 ; ja 0xc0727 ; ret
0x00000000000c0784 : cmp eax, 0xfffff000 ; ja 0xc0797 ; ret
0x00000000000c09d8 : cmp eax, 0xfffff000 ; ja 0xc09e7 ; ret
0x00000000000c0a58 : cmp eax, 0xfffff000 ; ja 0xc0a67 ; ret
0x00000000000e1df6 : cmp eax, 0xfffff000 ; ja 0xe1e08 ; ret
0x00000000000e1e45 : cmp eax, 0xfffff000 ; ja 0xe1e58 ; ret
0x00000000000e1e96 : cmp eax, 0xfffff000 ; ja 0xe1ea8 ; ret
0x00000000000e1eee : cmp eax, 0xfffff000 ; ja 0xe1f08 ; ret
0x00000000000e1f52 : cmp eax, 0xfffff000 ; ja 0xe1f68 ; ret
0x00000000000e1fab : cmp eax, 0xfffff000 ; ja 0xe1fc0 ; ret
0x00000000000e218a : cmp eax, 0xfffff000 ; ja 0xe21a0 ; ret
0x00000000000e2512 : cmp eax, 0xfffff000 ; ja 0xe2527 ; ret
0x00000000000e25b5 : cmp eax, 0xfffff000 ; ja 0xe25c7 ; ret
0x00000000000e264e : cmp eax, 0xfffff000 ; ja 0xe2668 ; ret
0x00000000000e268b : cmp eax, 0xfffff000 ; ja 0xe26a0 ; ret
0x00000000000e2993 : cmp eax, 0xfffff000 ; ja 0xe29c3 ; ret
0x00000000000e2c35 : cmp eax, 0xfffff000 ; ja 0xe2c47 ; ret
0x00000000000e2da4 : cmp eax, 0xfffff000 ; ja 0xe2db7 ; ret
0x00000000000e6755 : cmp eax, 0xfffff000 ; ja 0xe6767 ; ret
0x00000000000e6d33 : cmp eax, 0xfffff000 ; ja 0xe6d48 ; ret
0x00000000000e6d87 : cmp eax, 0xfffff000 ; ja 0xe6d98 ; ret
0x00000000000e6e58 : cmp eax, 0xfffff000 ; ja 0xe6e67 ; ret
0x00000000000e6efb : cmp eax, 0xfffff000 ; ja 0xe6f0f ; ret
0x00000000000e7177 : cmp eax, 0xfffff000 ; ja 0xe71a8 ; ret
0x00000000000e72ef : cmp eax, 0xfffff000 ; ja 0xe7307 ; ret
0x00000000000e74c1 : cmp eax, 0xfffff000 ; ja 0xe74d8 ; ret
0x00000000000e7502 : cmp eax, 0xfffff000 ; ja 0xe7518 ; ret
0x00000000000e7a68 : cmp eax, 0xfffff000 ; ja 0xe7a77 ; ret
0x00000000000e7b08 : cmp eax, 0xfffff000 ; ja 0xe7b17 ; ret
0x00000000000e7cc6 : cmp eax, 0xfffff000 ; ja 0xe7cd7 ; ret
0x00000000000e7d36 : cmp eax, 0xfffff000 ; ja 0xe7d47 ; ret
0x00000000000e7db7 : cmp eax, 0xfffff000 ; ja 0xe7dc7 ; ret
0x00000000000e7e67 : cmp eax, 0xfffff000 ; ja 0xe7e77 ; ret
0x00000000000e80d8 : cmp eax, 0xfffff000 ; ja 0xe80e7 ; ret
0x00000000000e82e5 : cmp eax, 0xfffff000 ; ja 0xe82f7 ; ret
0x00000000000e8395 : cmp eax, 0xfffff000 ; ja 0xe83a7 ; ret
0x00000000000e8447 : cmp eax, 0xfffff000 ; ja 0xe8458 ; ret
0x00000000000e97c8 : cmp eax, 0xfffff000 ; ja 0xe97e0 ; ret
0x00000000000e985c : cmp eax, 0xfffff000 ; ja 0xe9870 ; ret
0x00000000000e98fc : cmp eax, 0xfffff000 ; ja 0xe9910 ; ret
0x00000000000e9950 : cmp eax, 0xfffff000 ; ja 0xe9968 ; ret
0x00000000000e9988 : cmp eax, 0xfffff000 ; ja 0xe99a0 ; ret
0x00000000000e99bb : cmp eax, 0xfffff000 ; ja 0xe99d0 ; ret
0x00000000000eb275 : cmp eax, 0xfffff000 ; ja 0xeb287 ; ret
0x00000000000ed85f : cmp eax, 0xfffff000 ; ja 0xed878 ; ret
0x00000000000f008f : cmp eax, 0xfffff000 ; ja 0xf00a8 ; ret
0x00000000000f0211 : cmp eax, 0xfffff000 ; ja 0xf0227 ; ret
0x00000000000f02c3 : cmp eax, 0xfffff000 ; ja 0xf02d8 ; ret
0x00000000000f03fb : cmp eax, 0xfffff000 ; ja 0xf040f ; ret
0x00000000000f04a8 : cmp eax, 0xfffff000 ; ja 0xf04b7 ; ret
0x00000000000f055e : cmp eax, 0xfffff000 ; ja 0xf0577 ; ret
0x00000000000f0628 : cmp eax, 0xfffff000 ; ja 0xf0637 ; ret
0x00000000000f0de5 : cmp eax, 0xfffff000 ; ja 0xf0df7 ; ret
0x00000000000f0eb7 : cmp eax, 0xfffff000 ; ja 0xf0ec7 ; ret
0x00000000000f101e : cmp eax, 0xfffff000 ; ja 0xf1037 ; ret
0x00000000000f10d8 : cmp eax, 0xfffff000 ; ja 0xf10e7 ; ret
0x00000000000f1198 : cmp eax, 0xfffff000 ; ja 0xf11a7 ; ret
0x00000000000f123e : cmp eax, 0xfffff000 ; ja 0xf1257 ; ret
0x00000000000f12f8 : cmp eax, 0xfffff000 ; ja 0xf1307 ; ret
0x00000000000f139b : cmp eax, 0xfffff000 ; ja 0xf13af ; ret
0x00000000000f1738 : cmp eax, 0xfffff000 ; ja 0xf1747 ; ret
0x00000000000f17da : cmp eax, 0xfffff000 ; ja 0xf17ef ; ret
0x00000000000f188a : cmp eax, 0xfffff000 ; ja 0xf189f ; ret
0x00000000000f19f8 : cmp eax, 0xfffff000 ; ja 0xf1a07 ; ret
0x00000000000f1a9b : cmp eax, 0xfffff000 ; ja 0xf1aaf ; ret
0x00000000000f1b4e : cmp eax, 0xfffff000 ; ja 0xf1b68 ; ret
0x00000000000f1b8e : cmp eax, 0xfffff000 ; ja 0xf1ba8 ; ret
0x00000000000f1bcb : cmp eax, 0xfffff000 ; ja 0xf1be0 ; ret
0x00000000000f1c01 : cmp eax, 0xfffff000 ; ja 0xf1c18 ; ret
0x00000000000f1c5f : cmp eax, 0xfffff000 ; ja 0xf1ca0 ; ret
0x00000000000f1cbe : cmp eax, 0xfffff000 ; ja 0xf1cd8 ; ret
0x00000000000f1cfe : cmp eax, 0xfffff000 ; ja 0xf1d18 ; ret
0x00000000000f1d38 : cmp eax, 0xfffff000 ; ja 0xf1d50 ; ret
0x00000000000f1d71 : cmp eax, 0xfffff000 ; ja 0xf1d88 ; ret
0x00000000000f1dae : cmp eax, 0xfffff000 ; ja 0xf1dc8 ; ret
0x00000000000fd2fb : cmp eax, 0xfffff000 ; ja 0xfd310 ; ret
0x00000000000fd3a8 : cmp eax, 0xfffff000 ; ja 0xfd3d2 ; ret
0x00000000000ff0fd : cmp eax, 0xfffff000 ; ja 0xff118 ; ret
0x00000000000ff1ad : cmp eax, 0xfffff000 ; ja 0xff1c8 ; ret
0x0000000000124feb : cmp eax, 0xfffff001 ; jae 0x124ffa ; ret
0x000000000012503b : cmp eax, 0xfffff001 ; jae 0x12504a ; ret
0x0000000000034508 : cmp eax, 0xfffff001 ; jae 0x34517 ; ret
0x00000000000349e8 : cmp eax, 0xfffff001 ; jae 0x349f7 ; ret
0x0000000000043392 : cmp eax, 0xfffff001 ; jae 0x433a5 ; xor eax, eax ; ret
0x00000000000b04c8 : cmp eax, 0xfffff001 ; jae 0xb04d7 ; ret
0x00000000000b2b78 : cmp eax, 0xfffff001 ; jae 0xb2b87 ; ret
0x00000000000b2ba8 : cmp eax, 0xfffff001 ; jae 0xb2bb7 ; ret
0x00000000000bf578 : cmp eax, 0xfffff001 ; jae 0xbf587 ; ret
0x00000000000bf76b : cmp eax, 0xfffff001 ; jae 0xbf77a ; ret
0x00000000000bf848 : cmp eax, 0xfffff001 ; jae 0xbf857 ; ret
0x00000000000bfcd9 : cmp eax, 0xfffff001 ; jae 0xbfce8 ; ret
0x00000000000bfd68 : cmp eax, 0xfffff001 ; jae 0xbfd77 ; ret
0x00000000000c06d8 : cmp eax, 0xfffff001 ; jae 0xc06e7 ; ret
0x00000000000c0878 : cmp eax, 0xfffff001 ; jae 0xc0887 ; ret
0x00000000000c08a8 : cmp eax, 0xfffff001 ; jae 0xc08b7 ; ret
0x00000000000c0908 : cmp eax, 0xfffff001 ; jae 0xc0917 ; ret
0x00000000000c0938 : cmp eax, 0xfffff001 ; jae 0xc0947 ; ret
0x00000000000c0968 : cmp eax, 0xfffff001 ; jae 0xc0977 ; ret
0x00000000000c0998 : cmp eax, 0xfffff001 ; jae 0xc09a7 ; ret
0x00000000000d8f18 : cmp eax, 0xfffff001 ; jae 0xd8f27 ; ret
0x00000000000d8f48 : cmp eax, 0xfffff001 ; jae 0xd8f57 ; ret
0x00000000000d8f78 : cmp eax, 0xfffff001 ; jae 0xd8f87 ; ret
0x00000000000d8fa8 : cmp eax, 0xfffff001 ; jae 0xd8fb7 ; ret
0x00000000000d8fd8 : cmp eax, 0xfffff001 ; jae 0xd8fe7 ; ret
0x00000000000d9008 : cmp eax, 0xfffff001 ; jae 0xd9017 ; ret
0x00000000000d9038 : cmp eax, 0xfffff001 ; jae 0xd9047 ; ret
0x00000000000d9068 : cmp eax, 0xfffff001 ; jae 0xd9077 ; ret
0x00000000000e0c04 : cmp eax, 0xfffff001 ; jae 0xe0c46 ; ret
0x00000000000e0c64 : cmp eax, 0xfffff001 ; jae 0xe0ca6 ; ret
0x00000000000e1d58 : cmp eax, 0xfffff001 ; jae 0xe1d67 ; ret
0x00000000000e1ff8 : cmp eax, 0xfffff001 ; jae 0xe2007 ; ret
0x00000000000e2028 : cmp eax, 0xfffff001 ; jae 0xe2037 ; ret
0x00000000000e20f8 : cmp eax, 0xfffff001 ; jae 0xe2107 ; ret
0x00000000000e2128 : cmp eax, 0xfffff001 ; jae 0xe2137 ; ret
0x00000000000e21e8 : cmp eax, 0xfffff001 ; jae 0xe21f7 ; ret
0x00000000000e2218 : cmp eax, 0xfffff001 ; jae 0xe2227 ; ret
0x00000000000e2ae8 : cmp eax, 0xfffff001 ; jae 0xe2af7 ; ret
0x00000000000e2ca8 : cmp eax, 0xfffff001 ; jae 0xe2cb7 ; ret
0x00000000000e2cd8 : cmp eax, 0xfffff001 ; jae 0xe2ce7 ; ret
0x00000000000e2d08 : cmp eax, 0xfffff001 ; jae 0xe2d17 ; ret
0x00000000000e2d38 : cmp eax, 0xfffff001 ; jae 0xe2d47 ; ret
0x00000000000e2d68 : cmp eax, 0xfffff001 ; jae 0xe2d77 ; ret
0x00000000000e2e28 : cmp eax, 0xfffff001 ; jae 0xe2e37 ; ret
0x00000000000e2e58 : cmp eax, 0xfffff001 ; jae 0xe2e67 ; ret
0x00000000000e3678 : cmp eax, 0xfffff001 ; jae 0xe3687 ; ret
0x00000000000e36a8 : cmp eax, 0xfffff001 ; jae 0xe36b7 ; ret
0x00000000000e36d8 : cmp eax, 0xfffff001 ; jae 0xe36e7 ; ret
0x00000000000e370b : cmp eax, 0xfffff001 ; jae 0xe371a ; ret
0x00000000000e3da8 : cmp eax, 0xfffff001 ; jae 0xe3db7 ; ret
0x00000000000e3ddb : cmp eax, 0xfffff001 ; jae 0xe3dea ; ret
0x00000000000e3e08 : cmp eax, 0xfffff001 ; jae 0xe3e17 ; ret
0x00000000000e3e38 : cmp eax, 0xfffff001 ; jae 0xe3e47 ; ret
0x00000000000e3e68 : cmp eax, 0xfffff001 ; jae 0xe3e77 ; ret
0x00000000000e3e9b : cmp eax, 0xfffff001 ; jae 0xe3eaa ; ret
0x00000000000e3ec8 : cmp eax, 0xfffff001 ; jae 0xe3ed7 ; ret
0x00000000000e3ef8 : cmp eax, 0xfffff001 ; jae 0xe3f07 ; ret
0x00000000000e3f28 : cmp eax, 0xfffff001 ; jae 0xe3f37 ; ret
0x00000000000e6cfb : cmp eax, 0xfffff001 ; jae 0xe6d0a ; ret
0x00000000000e7538 : cmp eax, 0xfffff001 ; jae 0xe7547 ; ret
0x00000000000e7848 : cmp eax, 0xfffff001 ; jae 0xe7857 ; ret
0x00000000000e7a28 : cmp eax, 0xfffff001 ; jae 0xe7a37 ; ret
0x00000000000e7ba4 : cmp eax, 0xfffff001 ; jae 0xe7be6 ; ret
0x00000000000e7c04 : cmp eax, 0xfffff001 ; jae 0xe7c46 ; ret
0x00000000000e7ff8 : cmp eax, 0xfffff001 ; jae 0xe8007 ; ret
0x00000000000e8098 : cmp eax, 0xfffff001 ; jae 0xe80a7 ; ret
0x00000000000e8278 : cmp eax, 0xfffff001 ; jae 0xe8287 ; ret
0x00000000000e82a8 : cmp eax, 0xfffff001 ; jae 0xe82b7 ; ret
0x00000000000e8358 : cmp eax, 0xfffff001 ; jae 0xe8367 ; ret
0x00000000000e8408 : cmp eax, 0xfffff001 ; jae 0xe8417 ; ret
0x00000000000e8778 : cmp eax, 0xfffff001 ; jae 0xe8787 ; ret
0x00000000000e87a8 : cmp eax, 0xfffff001 ; jae 0xe87b7 ; ret
0x00000000000e87d8 : cmp eax, 0xfffff001 ; jae 0xe87e7 ; ret
0x00000000000eaf5a : cmp eax, 0xfffff001 ; jae 0xeaf69 ; ret
0x00000000000eb208 : cmp eax, 0xfffff001 ; jae 0xeb217 ; ret
0x00000000000eb238 : cmp eax, 0xfffff001 ; jae 0xeb247 ; ret
0x00000000000eb308 : cmp eax, 0xfffff001 ; jae 0xeb317 ; ret
0x00000000000eb338 : cmp eax, 0xfffff001 ; jae 0xeb347 ; ret
0x00000000000eb36b : cmp eax, 0xfffff001 ; jae 0xeb37a ; ret
0x00000000000eb398 : cmp eax, 0xfffff001 ; jae 0xeb3a7 ; ret
0x00000000000eb3c8 : cmp eax, 0xfffff001 ; jae 0xeb3d7 ; ret
0x00000000000eb3f8 : cmp eax, 0xfffff001 ; jae 0xeb407 ; ret
0x00000000000eb428 : cmp eax, 0xfffff001 ; jae 0xeb437 ; ret
0x00000000000ee14b : cmp eax, 0xfffff001 ; jae 0xee15a ; ret
0x00000000000ee178 : cmp eax, 0xfffff001 ; jae 0xee187 ; ret
0x00000000000ee1a8 : cmp eax, 0xfffff001 ; jae 0xee1b7 ; ret
0x00000000000ee1db : cmp eax, 0xfffff001 ; jae 0xee1ea ; ret
0x00000000000ee20b : cmp eax, 0xfffff001 ; jae 0xee21a ; ret
0x00000000000ee238 : cmp eax, 0xfffff001 ; jae 0xee247 ; ret
0x00000000000ee26b : cmp eax, 0xfffff001 ; jae 0xee27a ; ret
0x00000000000ee298 : cmp eax, 0xfffff001 ; jae 0xee2a7 ; ret
0x00000000000ee2c8 : cmp eax, 0xfffff001 ; jae 0xee2d7 ; ret
0x00000000000ee2fb : cmp eax, 0xfffff001 ; jae 0xee30a ; ret
0x00000000000ee328 : cmp eax, 0xfffff001 ; jae 0xee337 ; ret
0x00000000000ee35b : cmp eax, 0xfffff001 ; jae 0xee36a ; ret
0x00000000000efff8 : cmp eax, 0xfffff001 ; jae 0xf0007 ; ret
0x00000000000f0028 : cmp eax, 0xfffff001 ; jae 0xf0037 ; ret
0x00000000000f0138 : cmp eax, 0xfffff001 ; jae 0xf0147 ; ret
0x00000000000f0168 : cmp eax, 0xfffff001 ; jae 0xf0177 ; ret
0x00000000000f0198 : cmp eax, 0xfffff001 ; jae 0xf01a7 ; ret
0x00000000000f01c8 : cmp eax, 0xfffff001 ; jae 0xf01d7 ; ret
0x00000000000f02f8 : cmp eax, 0xfffff001 ; jae 0xf0307 ; ret
0x00000000000f037b : cmp eax, 0xfffff001 ; jae 0xf038a ; ret
0x00000000000f03a8 : cmp eax, 0xfffff001 ; jae 0xf03b7 ; ret
0x00000000000f06b8 : cmp eax, 0xfffff001 ; jae 0xf06c7 ; ret
0x00000000000f06e8 : cmp eax, 0xfffff001 ; jae 0xf06f7 ; ret
0x00000000000f072b : cmp eax, 0xfffff001 ; jae 0xf073a ; ret
0x00000000000f0758 : cmp eax, 0xfffff001 ; jae 0xf0767 ; ret
0x00000000000f0788 : cmp eax, 0xfffff001 ; jae 0xf0797 ; ret
0x00000000000f07b8 : cmp eax, 0xfffff001 ; jae 0xf07c7 ; ret
0x00000000000f07e8 : cmp eax, 0xfffff001 ; jae 0xf07f7 ; ret
0x00000000000f0818 : cmp eax, 0xfffff001 ; jae 0xf0827 ; ret
0x00000000000f0848 : cmp eax, 0xfffff001 ; jae 0xf0857 ; ret
0x00000000000f0878 : cmp eax, 0xfffff001 ; jae 0xf0887 ; ret
0x00000000000f08a8 : cmp eax, 0xfffff001 ; jae 0xf08b7 ; ret
0x00000000000f08db : cmp eax, 0xfffff001 ; jae 0xf08ea ; ret
0x00000000000f0908 : cmp eax, 0xfffff001 ; jae 0xf0917 ; ret
0x00000000000f093b : cmp eax, 0xfffff001 ; jae 0xf094a ; ret
0x00000000000f0968 : cmp eax, 0xfffff001 ; jae 0xf0977 ; ret
0x00000000000f0998 : cmp eax, 0xfffff001 ; jae 0xf09a7 ; ret
0x00000000000f09c8 : cmp eax, 0xfffff001 ; jae 0xf09d7 ; ret
0x00000000000f09f8 : cmp eax, 0xfffff001 ; jae 0xf0a07 ; ret
0x00000000000f0a28 : cmp eax, 0xfffff001 ; jae 0xf0a37 ; ret
0x00000000000f0a5b : cmp eax, 0xfffff001 ; jae 0xf0a6a ; ret
0x00000000000f0a8b : cmp eax, 0xfffff001 ; jae 0xf0a9a ; ret
0x00000000000f0ab8 : cmp eax, 0xfffff001 ; jae 0xf0ac7 ; ret
0x00000000000f0ae8 : cmp eax, 0xfffff001 ; jae 0xf0af7 ; ret
0x00000000000f0b1b : cmp eax, 0xfffff001 ; jae 0xf0b2a ; ret
0x00000000000f0b4b : cmp eax, 0xfffff001 ; jae 0xf0b5a ; ret
0x00000000000f0b7b : cmp eax, 0xfffff001 ; jae 0xf0b8a ; ret
0x00000000000f0ba8 : cmp eax, 0xfffff001 ; jae 0xf0bb7 ; ret
0x00000000000f0bd8 : cmp eax, 0xfffff001 ; jae 0xf0be7 ; ret
0x00000000000f0c08 : cmp eax, 0xfffff001 ; jae 0xf0c17 ; ret
0x00000000000f0c38 : cmp eax, 0xfffff001 ; jae 0xf0c47 ; ret
0x00000000000f0c6b : cmp eax, 0xfffff001 ; jae 0xf0c7a ; ret
0x00000000000f0c98 : cmp eax, 0xfffff001 ; jae 0xf0ca7 ; ret
0x00000000000f0cc8 : cmp eax, 0xfffff001 ; jae 0xf0cd7 ; ret
0x00000000000f0cfb : cmp eax, 0xfffff001 ; jae 0xf0d0a ; ret
0x00000000000f0d28 : cmp eax, 0xfffff001 ; jae 0xf0d37 ; ret
0x00000000000f0d5b : cmp eax, 0xfffff001 ; jae 0xf0d6a ; ret
0x00000000000f0d8b : cmp eax, 0xfffff001 ; jae 0xf0d9a ; ret
0x00000000000f0e78 : cmp eax, 0xfffff001 ; jae 0xf0e87 ; ret
0x00000000000f0f48 : cmp eax, 0xfffff001 ; jae 0xf0f57 ; ret
0x00000000000f0f78 : cmp eax, 0xfffff001 ; jae 0xf0f87 ; ret
0x00000000000f0fab : cmp eax, 0xfffff001 ; jae 0xf0fba ; ret
0x00000000000f0fd8 : cmp eax, 0xfffff001 ; jae 0xf0fe7 ; ret
0x00000000000f144b : cmp eax, 0xfffff001 ; jae 0xf145a ; ret
0x00000000000f1478 : cmp eax, 0xfffff001 ; jae 0xf1487 ; ret
0x00000000000f14a8 : cmp eax, 0xfffff001 ; jae 0xf14b7 ; ret
0x00000000000f14db : cmp eax, 0xfffff001 ; jae 0xf14ea ; ret
0x00000000000fd618 : cmp eax, 0xfffffe93 ; call rax
0x00000000000c4435 : cmp eax, 1 ; sete al ; movzx eax, al ; ret
0x000000000009e48f : cmp eax, 2 ; je 0x9e4a7 ; xor eax, eax ; ret
0x000000000011feb1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000c9f5d : cmp eax, 3 ; je 0xc9f6e ; ret
0x00000000000fcd3a : cmp eax, 4 ; je 0xfcd45 ; ret
0x00000000000bfd61 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011112c : cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rcx]
0x000000000017d509 : cmp eax, dword ptr [rcx] ; add al, dl ; push rdi ; jmp rax
0x000000000017d519 : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; pop rax ; call qword ptr [rax]
0x00000000000c9e01 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000077795 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x777a8 ; movzx eax, byte ptr [rax] ; ret
0x000000000009f16e : cmp eax, dword ptr [rsi + 0x10] ; jne 0x9f269 ; ret
0x000000000009f183 : cmp eax, dword ptr [rsi + 0x14] ; jne 0x9f269 ; ret
0x000000000009f198 : cmp eax, dword ptr [rsi + 0x18] ; jne 0x9f269 ; ret
0x000000000009f1b3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0x9f269 ; ret
0x000000000009f1ce : cmp eax, dword ptr [rsi + 0x20] ; jne 0x9f269 ; ret
0x000000000009f1e3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0x9f265 ; ret
0x000000000009f1f8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0x9f265 ; ret
0x000000000009f203 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9f265 ; ret
0x000000000009f21e : cmp eax, dword ptr [rsi + 0x30] ; jne 0x9f265 ; ret
0x000000000009f233 : cmp eax, dword ptr [rsi + 0x34] ; jne 0x9f265 ; ret
0x000000000009f248 : cmp eax, dword ptr [rsi + 0x38] ; jne 0x9f265 ; ret
0x000000000009f253 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9f265 ; ret
0x000000000009f153 : cmp eax, dword ptr [rsi + 0xc] ; jne 0x9f269 ; ret
0x000000000009f123 : cmp eax, dword ptr [rsi + 4] ; jne 0x9f269 ; ret
0x000000000009f138 : cmp eax, dword ptr [rsi + 8] ; jne 0x9f269 ; ret
0x000000000015485a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x154999 ; ret
0x0000000000154873 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x154999 ; ret
0x0000000000154983 : cmp eax, dword ptr [rsi - 4] ; jne 0x154997 ; xor eax, eax ; ret
0x00000000001548a3 : cmp eax, dword ptr [rsi - 4] ; jne 0x154999 ; ret
0x0000000000154888 : cmp eax, dword ptr [rsi - 8] ; jne 0x154999 ; ret
0x000000000009f10d : cmp eax, dword ptr [rsi] ; jne 0x9f268 ; ret
0x0000000000169c37 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x00000000000e0f38 : cmp eax, ebx ; setg al ; pop rbx ; ret
0x000000000007aac9 : cmp eax, ecx ; jae 0x7aaf7 ; movzx eax, byte ptr [rax] ; ret
0x000000000008a89d : cmp eax, ecx ; je 0x8a885 ; ret
0x0000000000003bab : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000154373 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000034d73 : cmp eax, edi ; jne 0x34d71 ; mov eax, 1 ; ret
0x00000000000fc5ab : cmp eax, edx ; jb 0xfc5a6 ; xor eax, eax ; ret
0x000000000011dd21 : cmp eax, edx ; je 0x11dd38 ; add rsp, 8 ; ret
0x000000000004380d : cmp eax, edx ; jne 0x43806 ; xor eax, eax ; ret
0x00000000000438ed : cmp eax, edx ; jne 0x438e6 ; xor eax, eax ; ret
0x00000000000883f3 : cmp eax, edx ; jne 0x883e7 ; or byte ptr [rdi], sil ; ret
0x000000000009f4e7 : cmp eax, edx ; jne 0x9f4d7 ; xor eax, eax ; ret
0x00000000000fcc70 : cmp eax, edx ; jne 0xfcc84 ; mov eax, 0xca ; syscall
0x00000000000f7849 : cmp eax, esi ; jb 0xf7861 ; mov eax, 1 ; ret
0x0000000000166910 : cmp ebp, dword ptr [rdi - 0x14] ; ljmp ptr [rsi] ; outsd dx, dword ptr [rsi] ; in al, dx ; jmp qword ptr [rcx]
0x000000000011b7f1 : cmp ebp, eax ; sub dword ptr [rsp + rdi*8 - 1], esi ; jmp 0x11b7cb
0x000000000006d5ea : cmp ebp, edi ; je 0x6d600 ; mov eax, esi ; syscall
0x000000000016dcd1 : cmp ebp, esi ; call rdx
0x000000000016dd91 : cmp ebp, esi ; call rsp
0x000000000016dd8d : cmp ebp, esi ; dec dword ptr [rsi] ; cmp ebp, esi ; call rsp
0x000000000016dccd : cmp ebp, esi ; dec eax ; cmp ebp, esi ; call rdx
0x000000000016dcd9 : cmp ebp, esi ; jmp rsi
0x000000000016dd51 : cmp ebp, esi ; lcall ptr [rax] ; cmp esi, ebp ; jmp qword ptr [rdx]
0x00000000000fccd6 : cmp ebx, 0xa ; je 0xfcce1 ; ret
0x000000000007c015 : cmp ebx, eax ; je 0x7c026 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000184b81 : cmp ebx, ebp ; call qword ptr [rax]
0x0000000000184b99 : cmp ebx, ebp ; call qword ptr [rdx]
0x000000000015952a : cmp ebx, ebp ; jae 0x15953d ; call qword ptr [rbx]
0x0000000000159559 : cmp ebx, ebp ; jb 0x159553 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000017a475 : cmp ebx, edi ; call rax
0x000000000017d705 : cmp ebx, esi ; call qword ptr [rax]
0x00000000000414bb : cmp ecx, 0x24 ; jne 0x4149a ; ret
0x00000000000d91ca : cmp ecx, 0xa ; mov eax, edx ; je 0xd9229 ; ret
0x000000000009f905 : cmp ecx, 0xc00 ; je 0x9f918 ; ret
0x00000000000ff7aa : cmp ecx, 0xc00 ; je 0xff7bd ; ret
0x000000000004422c : cmp ecx, 0xff ; jne 0x44229 ; mov rax, rdx ; ret
0x000000000009f9ec : cmp ecx, 0xff ; jne 0x9f9e9 ; sub rax, 4 ; ret
0x00000000001592db : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; ret
0x000000000010c115 : cmp ecx, dword ptr [rax - 0x77] ; ret 0x9ceb
0x00000000000a4bd8 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000038e12 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000cb86f : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000db8b2 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x481c
0x00000000000da06c : cmp ecx, dword ptr [rax - 0xc] ; jne 0xda068 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000016e388 : cmp ecx, dword ptr [rbp + rsi*8 - 0xa73c401] ; jmp qword ptr [rax]
0x000000000016e38c : cmp ecx, dword ptr [rbp + rsi*8 - 0xa75df01] ; call rax
0x0000000000159d20 : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x159d39 ; pop rbx ; ret
0x00000000000858c6 : cmp ecx, dword ptr [rcx + 0x39] ; ret
0x0000000000123815 : cmp ecx, dword ptr [rcx + 0x39] ; ror byte ptr [rdi], 0x82 ; ret
0x00000000001153f6 : cmp ecx, dword ptr [rdi] ; retf -0x57f
0x0000000000072cee : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000002dac : cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x00000000001508cb : cmp ecx, eax ; jne 0x1508f9 ; xor eax, eax ; ret
0x000000000015170b : cmp ecx, eax ; jne 0x151739 ; xor eax, eax ; ret
0x000000000015173f : cmp ecx, eax ; jne 0x15174c ; xor eax, eax ; ret
0x0000000000120b43 : cmp ecx, edx ; jae 0x120b56 ; xor eax, eax ; ret
0x0000000000120b83 : cmp ecx, edx ; jae 0x120b96 ; xor eax, eax ; ret
0x000000000008a848 : cmp ecx, edx ; je 0x8a849 ; cmp ecx, esi ; je 0x8a849 ; ret
0x0000000000085f59 : cmp ecx, edx ; jne 0x85f55 ; ret
0x000000000008a84c : cmp ecx, esi ; je 0x8a845 ; ret
0x000000000009fc19 : cmp edi, 0x7f ; ja 0x9fc2f ; mov eax, edi ; ret
0x00000000000cd3db : cmp edi, 0x83486675 ; ret 0xeb04
0x000000000010f819 : cmp edi, 0xff ; je 0x10f830 ; mov eax, edx ; syscall
0x0000000000159768 : cmp edi, 1 ; ja 0x159775 ; ret
0x00000000000f340d : cmp edi, 9 ; setbe al ; ret
0x00000000000852d1 : cmp edi, dword ptr [rbp + 0xf48000a] ; ret 0xc3f3
0x000000000007c221 : cmp edi, dword ptr [rip + 0x3326d1] ; jae 0x7c1e4 ; ret
0x00000000001a3b61 : cmp edi, eax ; call qword ptr [rax]
0x00000000001a3b31 : cmp edi, eax ; call qword ptr [rdi]
0x00000000001a3c51 : cmp edi, eax ; call rcx
0x00000000000486aa : cmp edi, eax ; jbe 0x486a8 ; nop ; pop rbx ; ret
0x00000000000ed853 : cmp edi, eax ; jne 0xed891 ; mov eax, 0x88 ; syscall
0x000000000017a499 : cmp edi, ebx ; call qword ptr [rax + 0x20fffb3d]
0x000000000017a479 : cmp edi, ebx ; call rax
0x000000000004eaf5 : cmp edi, ecx ; ja 0x4eae0 ; mov eax, r8d ; ret
0x0000000000117412 : cmp edi, ecx ; jne 0x117405 ; ret
0x0000000000040b7a : cmp edi, edi ; dec dword ptr [rcx] ; ret
0x00000000000e7911 : cmp edi, edx ; ja 0xe7945 ; ret
0x000000000009d9c2 : cmp edi, edx ; jb 0x9d9cf ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007b600 : cmp edi, edx ; je 0x7b46c ; ret
0x0000000000180515 : cmp edi, edx ; jmp qword ptr [rax]
0x00000000000ee3b5 : cmp edi, edx ; jne 0xee3b0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e1c10 : cmp edi, esi ; ja 0xe1c05 ; ret
0x00000000000487d7 : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000100e3f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x000000000010cd8d : cmp edx, 0xf410308 ; xchg eax, ebp ; ret 0xf45
0x00000000001079e9 : cmp edx, 0xfd ; jbe 0x1079f5 ; ret
0x0000000000037470 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x000000000002cb1b : cmp edx, dword ptr [rdi + 4] ; jb 0x2cb2e ; ret
0x00000000000ca305 : cmp edx, dword ptr [rsi + 4] ; je 0xca316 ; ret
0x000000000014e4c4 : cmp edx, dword ptr [rsi] ; jne 0x14e4b0 ; ret
0x0000000000128913 : cmp edx, eax ; ja 0x12890f ; xor eax, eax ; ret
0x000000000010b15d : cmp edx, eax ; jb 0x10b189 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000010b6d5 : cmp edx, eax ; jne 0x10b6be ; ret
0x00000000000804ea : cmp edx, eax ; jne 0x804b5 ; ret
0x00000000000fcf82 : cmp edx, eax ; jne 0xfcf65 ; ret
0x00000000000ff0f1 : cmp edx, ecx ; ja 0xff12d ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000ff1a1 : cmp edx, ecx ; ja 0xff1dd ; mov eax, 0x59 ; syscall
0x0000000000120a2f : cmp edx, ecx ; je 0x120a45 ; ret
0x000000000014e332 : cmp edx, ecx ; jne 0x14e31e ; vzeroupper ; ret
0x0000000000152885 : cmp edx, ecx ; jne 0x152869 ; vzeroupper ; ret
0x000000000009de6b : cmp edx, ecx ; jne 0x9de58 ; ret
0x00000000000c0ee7 : cmp edx, ecx ; jne 0xc0f14 ; ret
0x00000000000fc68a : cmp edx, edi ; setae al ; ret
0x000000000016c705 : cmp edx, esi ; inc eax ; cmp esi, edx ; call rax
0x000000000010bca6 : cmp edx, esi ; jb 0x10bc9d ; mov eax, 0xffffffff ; ret
0x000000000008a828 : cmp edx, esi ; je 0x8a825 ; ret
0x00000000000a0a06 : cmp edx, esi ; je 0xa0a17 ; test edx, edx ; jne 0xa0a09 ; ret
0x000000000008305b : cmp esi, 0x5b9066ff ; ret
0x0000000000070ba9 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x0000000000075438 : cmp esi, 2 ; je 0x75450 ; mov dword ptr [rdi], edx ; ret
0x0000000000029e15 : cmp esi, 3 ; je 0x29e26 ; pop rbx ; ret
0x000000000014ea50 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000000ca4dd : cmp esi, dword ptr [rdi + 4] ; jl 0xca4d6 ; ret
0x0000000000115cfa : cmp esi, dword ptr [rdx + 0x28] ; ja 0x115cf1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014de65 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000085211 : cmp esi, dword ptr [rip + 0xf48000b] ; ret 0xc3f3
0x000000000016dda5 : cmp esi, ebp ; inc dword ptr [rsi] ; cmp al, 0xf5 ; call qword ptr [rax]
0x000000000016dd55 : cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000169e04 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x00000000000da03c : cmp esi, ebx ; ret
0x000000000007096a : cmp esi, ecx ; jb 0x70967 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007b3af : cmp esi, ecx ; jb 0x7b398 ; mov byte ptr [rax + rsi], r10b ; ret
0x0000000000149728 : cmp esi, ecx ; jle 0x14966d ; ret
0x0000000000079e2a : cmp esi, ecx ; jne 0x79e27 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000016c709 : cmp esi, edx ; call rax
0x0000000000193bf9 : cmp esi, esp ; jmp qword ptr [rsi]
0x0000000000022003 : cmp esp, esi ; cmp byte ptr [rax], al ; ret
0x0000000000193ae1 : cmp esp, esi ; jmp qword ptr [rax]
0x00000000000f8f20 : cmp qword ptr [rdi + 0x10], 0 ; je 0xf8f39 ; xor eax, eax ; ret
0x0000000000075323 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000079500 : cmp qword ptr [rdi + 0x38], 0 ; je 0x79517 ; ret
0x00000000000fc627 : cmp qword ptr [rdi], 0 ; je 0xfc63f ; ret
0x0000000000070307 : cmp qword ptr [rsi + 0x30], 0 ; je 0x70317 ; ret
0x00000000000ebfec : cmp qword ptr [rsi], 0 ; je 0xebfff ; pop rbx ; ret
0x000000000010cd8c : cmp r10d, 0xf410308 ; xchg eax, ebp ; ret 0xf45
0x00000000000fccd5 : cmp r11d, 0xa ; je 0xfcce2 ; ret
0x00000000000883f2 : cmp r8, rdx ; jne 0x883e8 ; or byte ptr [rdi], sil ; ret
0x000000000008a89c : cmp r8d, ecx ; je 0x8a886 ; ret
0x00000000000f8a21 : cmp r9b, r13b ; ret
0x00000000000344d0 : cmp rax, -0x1000 ; ja 0x344e9 ; ret
0x000000000003453c : cmp rax, -0x1000 ; ja 0x34559 ; ret
0x0000000000034586 : cmp rax, -0x1000 ; ja 0x34598 ; ret
0x0000000000037e43 : cmp rax, -0x1000 ; ja 0x37e58 ; ret
0x0000000000069187 : cmp rax, -0x1000 ; ja 0x691a1 ; ret
0x00000000000691c0 : cmp rax, -0x1000 ; ja 0x691d9 ; ret
0x000000000007650b : cmp rax, -0x1000 ; ja 0x76521 ; ret
0x0000000000076d5f : cmp rax, -0x1000 ; ja 0x76d79 ; pop rbx ; ret
0x0000000000077838 : cmp rax, -0x1000 ; ja 0x7784b ; ret
0x00000000000b03e7 : cmp rax, -0x1000 ; ja 0xb0401 ; ret
0x00000000000bb177 : cmp rax, -0x1000 ; ja 0xbb191 ; pop rbx ; ret
0x00000000000bc361 : cmp rax, -0x1000 ; ja 0xbc378 ; ret
0x00000000000bf620 : cmp rax, -0x1000 ; ja 0xbf638 ; ret
0x00000000000bf6ba : cmp rax, -0x1000 ; ja 0xbf6d0 ; ret
0x00000000000bf7ab : cmp rax, -0x1000 ; ja 0xbf7c0 ; ret
0x00000000000bf8d1 : cmp rax, -0x1000 ; ja 0xbf8e8 ; ret
0x00000000000bf951 : cmp rax, -0x1000 ; ja 0xbf968 ; ret
0x00000000000c0713 : cmp rax, -0x1000 ; ja 0xc0728 ; ret
0x00000000000c0783 : cmp rax, -0x1000 ; ja 0xc0798 ; ret
0x00000000000c09d7 : cmp rax, -0x1000 ; ja 0xc09e8 ; ret
0x00000000000c0a57 : cmp rax, -0x1000 ; ja 0xc0a68 ; ret
0x00000000000e1df5 : cmp rax, -0x1000 ; ja 0xe1e09 ; ret
0x00000000000e1e44 : cmp rax, -0x1000 ; ja 0xe1e59 ; ret
0x00000000000e1e95 : cmp rax, -0x1000 ; ja 0xe1ea9 ; ret
0x00000000000e1eed : cmp rax, -0x1000 ; ja 0xe1f09 ; ret
0x00000000000e1f51 : cmp rax, -0x1000 ; ja 0xe1f69 ; ret
0x00000000000e1faa : cmp rax, -0x1000 ; ja 0xe1fc1 ; ret
0x00000000000e2189 : cmp rax, -0x1000 ; ja 0xe21a1 ; ret
0x00000000000e2511 : cmp rax, -0x1000 ; ja 0xe2528 ; ret
0x00000000000e25b4 : cmp rax, -0x1000 ; ja 0xe25c8 ; ret
0x00000000000e264d : cmp rax, -0x1000 ; ja 0xe2669 ; ret
0x00000000000e268a : cmp rax, -0x1000 ; ja 0xe26a1 ; ret
0x00000000000e2992 : cmp rax, -0x1000 ; ja 0xe29c4 ; ret
0x00000000000e2c34 : cmp rax, -0x1000 ; ja 0xe2c48 ; ret
0x00000000000e2da3 : cmp rax, -0x1000 ; ja 0xe2db8 ; ret
0x00000000000e6754 : cmp rax, -0x1000 ; ja 0xe6768 ; ret
0x00000000000e6d32 : cmp rax, -0x1000 ; ja 0xe6d49 ; ret
0x00000000000e6d86 : cmp rax, -0x1000 ; ja 0xe6d99 ; ret
0x00000000000e6e57 : cmp rax, -0x1000 ; ja 0xe6e68 ; ret
0x00000000000e6efa : cmp rax, -0x1000 ; ja 0xe6f10 ; ret
0x00000000000e7176 : cmp rax, -0x1000 ; ja 0xe71a9 ; ret
0x00000000000e72ee : cmp rax, -0x1000 ; ja 0xe7308 ; ret
0x00000000000e74c0 : cmp rax, -0x1000 ; ja 0xe74d9 ; ret
0x00000000000e7501 : cmp rax, -0x1000 ; ja 0xe7519 ; ret
0x00000000000e7a67 : cmp rax, -0x1000 ; ja 0xe7a78 ; ret
0x00000000000e7b07 : cmp rax, -0x1000 ; ja 0xe7b18 ; ret
0x00000000000e7cc5 : cmp rax, -0x1000 ; ja 0xe7cd8 ; ret
0x00000000000e7d35 : cmp rax, -0x1000 ; ja 0xe7d48 ; ret
0x00000000000e7db6 : cmp rax, -0x1000 ; ja 0xe7dc8 ; ret
0x00000000000e7e66 : cmp rax, -0x1000 ; ja 0xe7e78 ; ret
0x00000000000e80d7 : cmp rax, -0x1000 ; ja 0xe80e8 ; ret
0x00000000000e82e4 : cmp rax, -0x1000 ; ja 0xe82f8 ; ret
0x00000000000e8394 : cmp rax, -0x1000 ; ja 0xe83a8 ; ret
0x00000000000e8446 : cmp rax, -0x1000 ; ja 0xe8459 ; ret
0x00000000000e97c7 : cmp rax, -0x1000 ; ja 0xe97e1 ; ret
0x00000000000e985b : cmp rax, -0x1000 ; ja 0xe9871 ; ret
0x00000000000e98fb : cmp rax, -0x1000 ; ja 0xe9911 ; ret
0x00000000000e994f : cmp rax, -0x1000 ; ja 0xe9969 ; ret
0x00000000000e9987 : cmp rax, -0x1000 ; ja 0xe99a1 ; ret
0x00000000000e99ba : cmp rax, -0x1000 ; ja 0xe99d1 ; ret
0x00000000000eb274 : cmp rax, -0x1000 ; ja 0xeb288 ; ret
0x00000000000ed85e : cmp rax, -0x1000 ; ja 0xed879 ; ret
0x00000000000f008e : cmp rax, -0x1000 ; ja 0xf00a9 ; ret
0x00000000000f0210 : cmp rax, -0x1000 ; ja 0xf0228 ; ret
0x00000000000f02c2 : cmp rax, -0x1000 ; ja 0xf02d9 ; ret
0x00000000000f03fa : cmp rax, -0x1000 ; ja 0xf0410 ; ret
0x00000000000f04a7 : cmp rax, -0x1000 ; ja 0xf04b8 ; ret
0x00000000000f055d : cmp rax, -0x1000 ; ja 0xf0578 ; ret
0x00000000000f0627 : cmp rax, -0x1000 ; ja 0xf0638 ; ret
0x00000000000f0de4 : cmp rax, -0x1000 ; ja 0xf0df8 ; ret
0x00000000000f0eb6 : cmp rax, -0x1000 ; ja 0xf0ec8 ; ret
0x00000000000f101d : cmp rax, -0x1000 ; ja 0xf1038 ; ret
0x00000000000f10d7 : cmp rax, -0x1000 ; ja 0xf10e8 ; ret
0x00000000000f1197 : cmp rax, -0x1000 ; ja 0xf11a8 ; ret
0x00000000000f123d : cmp rax, -0x1000 ; ja 0xf1258 ; ret
0x00000000000f12f7 : cmp rax, -0x1000 ; ja 0xf1308 ; ret
0x00000000000f139a : cmp rax, -0x1000 ; ja 0xf13b0 ; ret
0x00000000000f1737 : cmp rax, -0x1000 ; ja 0xf1748 ; ret
0x00000000000f17d9 : cmp rax, -0x1000 ; ja 0xf17f0 ; ret
0x00000000000f1889 : cmp rax, -0x1000 ; ja 0xf18a0 ; ret
0x00000000000f19f7 : cmp rax, -0x1000 ; ja 0xf1a08 ; ret
0x00000000000f1a9a : cmp rax, -0x1000 ; ja 0xf1ab0 ; ret
0x00000000000f1b4d : cmp rax, -0x1000 ; ja 0xf1b69 ; ret
0x00000000000f1b8d : cmp rax, -0x1000 ; ja 0xf1ba9 ; ret
0x00000000000f1bca : cmp rax, -0x1000 ; ja 0xf1be1 ; ret
0x00000000000f1c00 : cmp rax, -0x1000 ; ja 0xf1c19 ; ret
0x00000000000f1c5e : cmp rax, -0x1000 ; ja 0xf1ca1 ; ret
0x00000000000f1cbd : cmp rax, -0x1000 ; ja 0xf1cd9 ; ret
0x00000000000f1cfd : cmp rax, -0x1000 ; ja 0xf1d19 ; ret
0x00000000000f1d37 : cmp rax, -0x1000 ; ja 0xf1d51 ; ret
0x00000000000f1d70 : cmp rax, -0x1000 ; ja 0xf1d89 ; ret
0x00000000000f1dad : cmp rax, -0x1000 ; ja 0xf1dc9 ; ret
0x00000000000fd2fa : cmp rax, -0x1000 ; ja 0xfd311 ; ret
0x00000000000fd3a7 : cmp rax, -0x1000 ; ja 0xfd3d3 ; ret
0x00000000000ff0fc : cmp rax, -0x1000 ; ja 0xff119 ; ret
0x00000000000ff1ac : cmp rax, -0x1000 ; ja 0xff1c9 ; ret
0x0000000000124fea : cmp rax, -0xfff ; jae 0x124ffb ; ret
0x000000000012503a : cmp rax, -0xfff ; jae 0x12504b ; ret
0x0000000000034507 : cmp rax, -0xfff ; jae 0x34518 ; ret
0x00000000000349e7 : cmp rax, -0xfff ; jae 0x349f8 ; ret
0x00000000000b04c7 : cmp rax, -0xfff ; jae 0xb04d8 ; ret
0x00000000000b2b77 : cmp rax, -0xfff ; jae 0xb2b88 ; ret
0x00000000000b2ba7 : cmp rax, -0xfff ; jae 0xb2bb8 ; ret
0x00000000000bf577 : cmp rax, -0xfff ; jae 0xbf588 ; ret
0x00000000000bf76a : cmp rax, -0xfff ; jae 0xbf77b ; ret
0x00000000000bf847 : cmp rax, -0xfff ; jae 0xbf858 ; ret
0x00000000000bfd67 : cmp rax, -0xfff ; jae 0xbfd78 ; ret
0x00000000000c06d7 : cmp rax, -0xfff ; jae 0xc06e8 ; ret
0x00000000000c0877 : cmp rax, -0xfff ; jae 0xc0888 ; ret
0x00000000000c08a7 : cmp rax, -0xfff ; jae 0xc08b8 ; ret
0x00000000000c0907 : cmp rax, -0xfff ; jae 0xc0918 ; ret
0x00000000000c0937 : cmp rax, -0xfff ; jae 0xc0948 ; ret
0x00000000000c0967 : cmp rax, -0xfff ; jae 0xc0978 ; ret
0x00000000000c0997 : cmp rax, -0xfff ; jae 0xc09a8 ; ret
0x00000000000d8f17 : cmp rax, -0xfff ; jae 0xd8f28 ; ret
0x00000000000d8f47 : cmp rax, -0xfff ; jae 0xd8f58 ; ret
0x00000000000d8f77 : cmp rax, -0xfff ; jae 0xd8f88 ; ret
0x00000000000d8fa7 : cmp rax, -0xfff ; jae 0xd8fb8 ; ret
0x00000000000d8fd7 : cmp rax, -0xfff ; jae 0xd8fe8 ; ret
0x00000000000d9007 : cmp rax, -0xfff ; jae 0xd9018 ; ret
0x00000000000d9037 : cmp rax, -0xfff ; jae 0xd9048 ; ret
0x00000000000d9067 : cmp rax, -0xfff ; jae 0xd9078 ; ret
0x00000000000e0c03 : cmp rax, -0xfff ; jae 0xe0c47 ; ret
0x00000000000e0c63 : cmp rax, -0xfff ; jae 0xe0ca7 ; ret
0x00000000000e1d57 : cmp rax, -0xfff ; jae 0xe1d68 ; ret
0x00000000000e1ff7 : cmp rax, -0xfff ; jae 0xe2008 ; ret
0x00000000000e2027 : cmp rax, -0xfff ; jae 0xe2038 ; ret
0x00000000000e20f7 : cmp rax, -0xfff ; jae 0xe2108 ; ret
0x00000000000e2127 : cmp rax, -0xfff ; jae 0xe2138 ; ret
0x00000000000e21e7 : cmp rax, -0xfff ; jae 0xe21f8 ; ret
0x00000000000e2217 : cmp rax, -0xfff ; jae 0xe2228 ; ret
0x00000000000e2ae7 : cmp rax, -0xfff ; jae 0xe2af8 ; ret
0x00000000000e2ca7 : cmp rax, -0xfff ; jae 0xe2cb8 ; ret
0x00000000000e2cd7 : cmp rax, -0xfff ; jae 0xe2ce8 ; ret
0x00000000000e2d07 : cmp rax, -0xfff ; jae 0xe2d18 ; ret
0x00000000000e2d37 : cmp rax, -0xfff ; jae 0xe2d48 ; ret
0x00000000000e2d67 : cmp rax, -0xfff ; jae 0xe2d78 ; ret
0x00000000000e2e27 : cmp rax, -0xfff ; jae 0xe2e38 ; ret
0x00000000000e2e57 : cmp rax, -0xfff ; jae 0xe2e68 ; ret
0x00000000000e3677 : cmp rax, -0xfff ; jae 0xe3688 ; ret
0x00000000000e36a7 : cmp rax, -0xfff ; jae 0xe36b8 ; ret
0x00000000000e36d7 : cmp rax, -0xfff ; jae 0xe36e8 ; ret
0x00000000000e370a : cmp rax, -0xfff ; jae 0xe371b ; ret
0x00000000000e3da7 : cmp rax, -0xfff ; jae 0xe3db8 ; ret
0x00000000000e3dda : cmp rax, -0xfff ; jae 0xe3deb ; ret
0x00000000000e3e07 : cmp rax, -0xfff ; jae 0xe3e18 ; ret
0x00000000000e3e37 : cmp rax, -0xfff ; jae 0xe3e48 ; ret
0x00000000000e3e67 : cmp rax, -0xfff ; jae 0xe3e78 ; ret
0x00000000000e3e9a : cmp rax, -0xfff ; jae 0xe3eab ; ret
0x00000000000e3ec7 : cmp rax, -0xfff ; jae 0xe3ed8 ; ret
0x00000000000e3ef7 : cmp rax, -0xfff ; jae 0xe3f08 ; ret
0x00000000000e3f27 : cmp rax, -0xfff ; jae 0xe3f38 ; ret
0x00000000000e6cfa : cmp rax, -0xfff ; jae 0xe6d0b ; ret
0x00000000000e7537 : cmp rax, -0xfff ; jae 0xe7548 ; ret
0x00000000000e7847 : cmp rax, -0xfff ; jae 0xe7858 ; ret
0x00000000000e7a27 : cmp rax, -0xfff ; jae 0xe7a38 ; ret
0x00000000000e7ba3 : cmp rax, -0xfff ; jae 0xe7be7 ; ret
0x00000000000e7c03 : cmp rax, -0xfff ; jae 0xe7c47 ; ret
0x00000000000e7ff7 : cmp rax, -0xfff ; jae 0xe8008 ; ret
0x00000000000e8097 : cmp rax, -0xfff ; jae 0xe80a8 ; ret
0x00000000000e8277 : cmp rax, -0xfff ; jae 0xe8288 ; ret
0x00000000000e82a7 : cmp rax, -0xfff ; jae 0xe82b8 ; ret
0x00000000000e8357 : cmp rax, -0xfff ; jae 0xe8368 ; ret
0x00000000000e8407 : cmp rax, -0xfff ; jae 0xe8418 ; ret
0x00000000000e8777 : cmp rax, -0xfff ; jae 0xe8788 ; ret
0x00000000000e87a7 : cmp rax, -0xfff ; jae 0xe87b8 ; ret
0x00000000000e87d7 : cmp rax, -0xfff ; jae 0xe87e8 ; ret
0x00000000000eaf59 : cmp rax, -0xfff ; jae 0xeaf6a ; ret
0x00000000000eb207 : cmp rax, -0xfff ; jae 0xeb218 ; ret
0x00000000000eb237 : cmp rax, -0xfff ; jae 0xeb248 ; ret
0x00000000000eb307 : cmp rax, -0xfff ; jae 0xeb318 ; ret
0x00000000000eb337 : cmp rax, -0xfff ; jae 0xeb348 ; ret
0x00000000000eb36a : cmp rax, -0xfff ; jae 0xeb37b ; ret
0x00000000000eb397 : cmp rax, -0xfff ; jae 0xeb3a8 ; ret
0x00000000000eb3c7 : cmp rax, -0xfff ; jae 0xeb3d8 ; ret
0x00000000000eb3f7 : cmp rax, -0xfff ; jae 0xeb408 ; ret
0x00000000000eb427 : cmp rax, -0xfff ; jae 0xeb438 ; ret
0x00000000000ee14a : cmp rax, -0xfff ; jae 0xee15b ; ret
0x00000000000ee177 : cmp rax, -0xfff ; jae 0xee188 ; ret
0x00000000000ee1a7 : cmp rax, -0xfff ; jae 0xee1b8 ; ret
0x00000000000ee1da : cmp rax, -0xfff ; jae 0xee1eb ; ret
0x00000000000ee20a : cmp rax, -0xfff ; jae 0xee21b ; ret
0x00000000000ee237 : cmp rax, -0xfff ; jae 0xee248 ; ret
0x00000000000ee26a : cmp rax, -0xfff ; jae 0xee27b ; ret
0x00000000000ee297 : cmp rax, -0xfff ; jae 0xee2a8 ; ret
0x00000000000ee2c7 : cmp rax, -0xfff ; jae 0xee2d8 ; ret
0x00000000000ee2fa : cmp rax, -0xfff ; jae 0xee30b ; ret
0x00000000000ee327 : cmp rax, -0xfff ; jae 0xee338 ; ret
0x00000000000ee35a : cmp rax, -0xfff ; jae 0xee36b ; ret
0x00000000000efff7 : cmp rax, -0xfff ; jae 0xf0008 ; ret
0x00000000000f0027 : cmp rax, -0xfff ; jae 0xf0038 ; ret
0x00000000000f0137 : cmp rax, -0xfff ; jae 0xf0148 ; ret
0x00000000000f0167 : cmp rax, -0xfff ; jae 0xf0178 ; ret
0x00000000000f0197 : cmp rax, -0xfff ; jae 0xf01a8 ; ret
0x00000000000f01c7 : cmp rax, -0xfff ; jae 0xf01d8 ; ret
0x00000000000f02f7 : cmp rax, -0xfff ; jae 0xf0308 ; ret
0x00000000000f037a : cmp rax, -0xfff ; jae 0xf038b ; ret
0x00000000000f03a7 : cmp rax, -0xfff ; jae 0xf03b8 ; ret
0x00000000000f06b7 : cmp rax, -0xfff ; jae 0xf06c8 ; ret
0x00000000000f06e7 : cmp rax, -0xfff ; jae 0xf06f8 ; ret
0x00000000000f072a : cmp rax, -0xfff ; jae 0xf073b ; ret
0x00000000000f0757 : cmp rax, -0xfff ; jae 0xf0768 ; ret
0x00000000000f0787 : cmp rax, -0xfff ; jae 0xf0798 ; ret
0x00000000000f07b7 : cmp rax, -0xfff ; jae 0xf07c8 ; ret
0x00000000000f07e7 : cmp rax, -0xfff ; jae 0xf07f8 ; ret
0x00000000000f0817 : cmp rax, -0xfff ; jae 0xf0828 ; ret
0x00000000000f0847 : cmp rax, -0xfff ; jae 0xf0858 ; ret
0x00000000000f0877 : cmp rax, -0xfff ; jae 0xf0888 ; ret
0x00000000000f08a7 : cmp rax, -0xfff ; jae 0xf08b8 ; ret
0x00000000000f08da : cmp rax, -0xfff ; jae 0xf08eb ; ret
0x00000000000f0907 : cmp rax, -0xfff ; jae 0xf0918 ; ret
0x00000000000f093a : cmp rax, -0xfff ; jae 0xf094b ; ret
0x00000000000f0967 : cmp rax, -0xfff ; jae 0xf0978 ; ret
0x00000000000f0997 : cmp rax, -0xfff ; jae 0xf09a8 ; ret
0x00000000000f09c7 : cmp rax, -0xfff ; jae 0xf09d8 ; ret
0x00000000000f09f7 : cmp rax, -0xfff ; jae 0xf0a08 ; ret
0x00000000000f0a27 : cmp rax, -0xfff ; jae 0xf0a38 ; ret
0x00000000000f0a5a : cmp rax, -0xfff ; jae 0xf0a6b ; ret
0x00000000000f0a8a : cmp rax, -0xfff ; jae 0xf0a9b ; ret
0x00000000000f0ab7 : cmp rax, -0xfff ; jae 0xf0ac8 ; ret
0x00000000000f0ae7 : cmp rax, -0xfff ; jae 0xf0af8 ; ret
0x00000000000f0b1a : cmp rax, -0xfff ; jae 0xf0b2b ; ret
0x00000000000f0b4a : cmp rax, -0xfff ; jae 0xf0b5b ; ret
0x00000000000f0b7a : cmp rax, -0xfff ; jae 0xf0b8b ; ret
0x00000000000f0ba7 : cmp rax, -0xfff ; jae 0xf0bb8 ; ret
0x00000000000f0bd7 : cmp rax, -0xfff ; jae 0xf0be8 ; ret
0x00000000000f0c07 : cmp rax, -0xfff ; jae 0xf0c18 ; ret
0x00000000000f0c37 : cmp rax, -0xfff ; jae 0xf0c48 ; ret
0x00000000000f0c6a : cmp rax, -0xfff ; jae 0xf0c7b ; ret
0x00000000000f0c97 : cmp rax, -0xfff ; jae 0xf0ca8 ; ret
0x00000000000f0cc7 : cmp rax, -0xfff ; jae 0xf0cd8 ; ret
0x00000000000f0cfa : cmp rax, -0xfff ; jae 0xf0d0b ; ret
0x00000000000f0d27 : cmp rax, -0xfff ; jae 0xf0d38 ; ret
0x00000000000f0d5a : cmp rax, -0xfff ; jae 0xf0d6b ; ret
0x00000000000f0d8a : cmp rax, -0xfff ; jae 0xf0d9b ; ret
0x00000000000f0e77 : cmp rax, -0xfff ; jae 0xf0e88 ; ret
0x00000000000f0f47 : cmp rax, -0xfff ; jae 0xf0f58 ; ret
0x00000000000f0f77 : cmp rax, -0xfff ; jae 0xf0f88 ; ret
0x00000000000f0faa : cmp rax, -0xfff ; jae 0xf0fbb ; ret
0x00000000000f0fd7 : cmp rax, -0xfff ; jae 0xf0fe8 ; ret
0x00000000000f144a : cmp rax, -0xfff ; jae 0xf145b ; ret
0x00000000000f1477 : cmp rax, -0xfff ; jae 0xf1488 ; ret
0x00000000000f14a7 : cmp rax, -0xfff ; jae 0xf14b8 ; ret
0x00000000000f14da : cmp rax, -0xfff ; jae 0xf14eb ; ret
0x0000000000034dd3 : cmp rax, 0x80 ; jne 0x34dc8 ; xor eax, eax ; ret
0x0000000000034e23 : cmp rax, 0x80 ; jne 0x34e18 ; xor eax, eax ; ret
0x0000000000077794 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x777a9 ; movzx eax, byte ptr [rax] ; ret
0x00000000000e0f37 : cmp rax, rbx ; setg al ; pop rbx ; ret
0x000000000007aac8 : cmp rax, rcx ; jae 0x7aaf8 ; movzx eax, byte ptr [rax] ; ret
0x00000000000fc5aa : cmp rax, rdx ; jb 0xfc5a7 ; xor eax, eax ; ret
0x00000000000fc5a9 : cmp rax, rdx ; jb 0xfc5a8 ; xor eax, eax ; ret
0x000000000011dd20 : cmp rax, rdx ; je 0x11dd39 ; add rsp, 8 ; ret
0x000000000004380c : cmp rax, rdx ; jne 0x43807 ; xor eax, eax ; ret
0x00000000000438ec : cmp rax, rdx ; jne 0x438e7 ; xor eax, eax ; ret
0x000000000009f4e6 : cmp rax, rdx ; jne 0x9f4d8 ; xor eax, eax ; ret
0x000000000007c014 : cmp rbx, rax ; je 0x7c027 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000159529 : cmp rbx, rbp ; jae 0x15953e ; call qword ptr [rbx]
0x0000000000159558 : cmp rbx, rbp ; jb 0x159554 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000072ced : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000001508ca : cmp rcx, rax ; jne 0x1508fa ; xor eax, eax ; ret
0x000000000015170a : cmp rcx, rax ; jne 0x15173a ; xor eax, eax ; ret
0x0000000000085f58 : cmp rcx, rdx ; jne 0x85f56 ; ret
0x0000000000159767 : cmp rdi, 1 ; ja 0x159776 ; ret
0x00000000000486a9 : cmp rdi, r8 ; jbe 0x486a9 ; nop ; pop rbx ; ret
0x0000000000117411 : cmp rdi, rcx ; jne 0x117406 ; ret
0x00000000000e7910 : cmp rdi, rdx ; ja 0xe7946 ; ret
0x000000000009d9c1 : cmp rdi, rdx ; jb 0x9d9d0 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ee3b4 : cmp rdi, rdx ; jne 0xee3b1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e1c0f : cmp rdi, rsi ; ja 0xe1c06 ; ret
0x00000000001079e8 : cmp rdx, 0xfd ; jbe 0x1079f6 ; ret
0x000000000010b6d4 : cmp rdx, r8 ; jne 0x10b6bf ; ret
0x00000000000804e9 : cmp rdx, r8 ; jne 0x804b6 ; ret
0x0000000000128912 : cmp rdx, rax ; ja 0x128910 ; xor eax, eax ; ret
0x00000000000fcf81 : cmp rdx, rax ; jne 0xfcf66 ; ret
0x0000000000120a2e : cmp rdx, rcx ; je 0x120a46 ; ret
0x000000000014e331 : cmp rdx, rcx ; jne 0x14e31f ; vzeroupper ; ret
0x0000000000152884 : cmp rdx, rcx ; jne 0x15286a ; vzeroupper ; ret
0x000000000009de6a : cmp rdx, rcx ; jne 0x9de59 ; ret
0x000000000009de69 : cmp rdx, rcx ; jne 0x9de5a ; ret
0x00000000000c0ee6 : cmp rdx, rcx ; jne 0xc0f15 ; ret
0x00000000000fc689 : cmp rdx, rdi ; setae al ; ret
0x0000000000070969 : cmp rsi, rcx ; jb 0x70968 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007b3ae : cmp rsi, rcx ; jb 0x7b399 ; mov byte ptr [rax + rsi], r10b ; ret
0x0000000000079e29 : cmp rsi, rcx ; jne 0x79e28 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000f7e92 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000f7eba : cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014bdf7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c0f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000dd578 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000014cff7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b705 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; call 0xffffffffe518a64f
0x000000000018b704 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; call 0xffffffffe518a650
0x000000000007eb26 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000014ccf7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000150349 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000017a055 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000167e36 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x167e02 ; mov ecx, 0x5b92ac50 ; retf
0x00000000001468c6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c9f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c6f7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000169f51 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x000000000000236e : cmpsb byte ptr [rsi], byte ptr [rdi] ; rcl bh, 1 ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x000000000002878e : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000000000017a1d4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; inc dword ptr [rsi + 0x66] ; std ; jmp rsi
0x000000000017bec9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; nop ; mov ah, ch ; jmp qword ptr [rax]
0x00000000000416a4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr ss:[rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000019b8a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; call qword ptr [rcx]
0x000000000019b86d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; rcl byte ptr [rdx - 0xa], 1 ; call qword ptr [rdx]
0x0000000000156a3c : cmpsd dword ptr [rsi], dword ptr [rdi] ; add r15, r12 ; jmp r15
0x0000000000096170 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000077075 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and esi, dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000016791f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000000e868b : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rax], al ; mov eax, 2 ; syscall
0x00000000000e602a : cmpsd dword ptr [rsi], dword ptr [rdi] ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b2865 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000000399e : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000c3cfd : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf -0xb
0x0000000000054add : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 0x35
0x000000000006619b : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar bh, 1 ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000808a5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000085e7e : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000000399d : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000159509 : cmpxchg dword ptr [rip + 0x255470], edx ; je 0x15951c ; ret
0x0000000000037113 : cqo ; idiv rsi ; ret
0x0000000000029710 : cwde ; add byte ptr [rax], al ; add al, ch ; push rdi ; retf
0x00000000001198af : cwde ; add byte ptr [rax], al ; add bl, ch ; retf -0x74b8
0x000000000011017a : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000011bdaf : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3b92 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000293ee : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000034f23 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000122d3c : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000012817b : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000017d200 : cwde ; add dword ptr es:[rax], eax ; cmp ah, 0xf0 ; call rax
0x000000000019db18 : cwde ; add esi, edi ; call rsi
0x000000000005ad40 : cwde ; add rax, rdx ; jmp rax
0x000000000019a408 : cwde ; and al, 0xf6 ; jmp qword ptr [rsi]
0x0000000000196e88 : cwde ; cmc ; call qword ptr [rdx]
0x0000000000196ff8 : cwde ; cmc ; jmp qword ptr [rcx]
0x000000000016d621 : cwde ; hlt ; jmp rdi
0x000000000016d5d1 : cwde ; hlt ; jmp rsi
0x000000000017f588 : cwde ; inc byte ptr [rcx] ; add byte ptr [rax], al ; clc ; call rax
0x0000000000194de8 : cwde ; iretd ; hlt ; jmp qword ptr [rsi]
0x0000000000192a08 : cwde ; ja 0x192a01 ; jmp rdx
0x00000000000edd1c : cwde ; mov eax, 3 ; syscall
0x000000000017c280 : cwde ; mov edi, 0xff500000 ; out dx, al ; call rax
0x000000000009fa34 : cwde ; nop dword ptr [rax] ; ret
0x00000000001a29b8 : cwde ; out 0xf7, al ; call qword ptr [rdx]
0x00000000001907c8 : cwde ; pop rax ; call qword ptr [rax]
0x00000000001074ff : cwde ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000017b440 : cwde ; push 0 ; add byte ptr [rax], al ; ret 0xffea
0x0000000000003bb1 : cwde ; ret
0x000000000017c2f0 : cwde ; ret 0
0x0000000000003cc5 : cwde ; retf
0x00000000001a1898 : cwde ; retf -9
0x00000000000023ba : cwde ; retf 0x7e0c
0x0000000000191778 : cwde ; sal dl, 1 ; call rsi
0x00000000001962e8 : cwde ; sbb ebp, esi ; jmp qword ptr [rsi]
0x000000000010bf0e : cwde ; shr rax, 4 ; ret
0x0000000000198078 : cwde ; xchg ebp, esi ; jmp qword ptr [rcx]
0x00000000000976b9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000956a1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000976ba : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000956a2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000081fbb : dec byte ptr [rax + 0x39] ; ret 0x2f74
0x00000000000ec925 : dec byte ptr [rax + 0x39] ; retf -0x76b8
0x000000000015235d : dec byte ptr [rax + 0x7f] ; jl 0x152382 ; cld ; vzeroupper ; ret
0x0000000000082261 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000c2a9c : dec byte ptr [rax - 0x77] ; fucompi st(0) ; retf
0x0000000000083f39 : dec byte ptr [rax - 0x77] ; ret
0x0000000000082906 : dec byte ptr [rax - 0x77] ; ret 0x1e8
0x0000000000082899 : dec byte ptr [rax - 0x77] ; ret 0x6ee8
0x00000000000741ba : dec byte ptr [rax - 0x7d] ; mov byte ptr [rcx], 0xe8 ; ret
0x000000000006adc7 : dec byte ptr [rcx + rcx*4 - 0x19] ; call 0x570c6
0x00000000000f207f : dec byte ptr [rcx + rcx*4 - 0x19] ; mov eax, 0x14 ; syscall
0x000000000007d36c : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x0000000000154e40 : dec dword ptr [rax + 0x21] ; retf -0x76b8
0x000000000004831e : dec dword ptr [rax + 0x21] ; retf 0x948
0x0000000000180207 : dec dword ptr [rax + 0x257] ; cmc ; stc ; call rax
0x00000000000310f7 : dec dword ptr [rax + 0x29] ; ret
0x000000000009783a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000957e2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000005bb68 : dec dword ptr [rax + 0x29] ; ret 0x8548
0x0000000000043ec1 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003b27f : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000c7d8e : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000000c36fc : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000c7c2a : dec dword ptr [rax + 0x39] ; mov byte ptr [rsi - 0x73], 0xc ; retf -0x108b
0x0000000000078388 : dec dword ptr [rax + 0x39] ; ret
0x000000000005ca25 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007679a : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000010942c : dec dword ptr [rax + 0x39] ; retf -0x78f1
0x00000000000ff14f : dec dword ptr [rax + 0x39] ; retf 0x877
0x00000000000bf143 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x394c
0x00000000000bf178 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000bd74a : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000f564f : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x00000000000f54dd : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x0000000000062434 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000001241d0 : dec dword ptr [rax + 0x63] ; clc ; mov eax, 3 ; syscall
0x00000000000b918b : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000003b0a2 : dec dword ptr [rax + 0x63] ; retf -0x74b8
0x00000000000b8c05 : dec dword ptr [rax + 0x63] ; retf -0x76bc
0x0000000000126d07 : dec dword ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x00000000000bb16c : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x0000000000093af9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000085094 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000037472 : dec dword ptr [rax + 0xf] ; ret
0x00000000000fdd1d : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000e1c88 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000081ee1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000f2eca : dec dword ptr [rax + 0xf] ; ret 0x8948
0x0000000000077145 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000012735b : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002c9a9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000000fdee2 : dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000000633f6 : dec dword ptr [rax + 1] ; ret
0x0000000000042550 : dec dword ptr [rax + 1] ; retf 0x1f0f
0x00000000000c2344 : dec dword ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; retf -0x8b8
0x000000000015526b : dec dword ptr [rax + 9] ; retf -0x17d
0x000000000015567a : dec dword ptr [rax + 9] ; retf -0x27d
0x00000000000ff41c : dec dword ptr [rax + 9] ; retf -0x7cb8
0x0000000000034c13 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008636f : dec dword ptr [rax - 0x39] ; ret
0x000000000008a086 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000eff21 : dec dword ptr [rax - 0x3f] ; call 0xffffffffc4070838
0x00000000000eff7a : dec dword ptr [rax - 0x3f] ; loopne 0xeffa7 ; or rax, rsi ; ret
0x00000000000b5633 : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x000000000016d99b : dec dword ptr [rax - 0x51] ; hlt ; push qword ptr [rdx - 0x3c] ; hlt ; call qword ptr [rdi]
0x000000000018060f : dec dword ptr [rax - 0x5ffffd90] ; push rcx ; cli ; jmp rax
0x000000000017e6b7 : dec dword ptr [rax - 0x5ffffe50] ; retf
0x000000000017d7ff : dec dword ptr [rax - 0x5ffffeb0] ; pop rcx ; call rax
0x000000000017df8f : dec dword ptr [rax - 0x6ffffe78] ; ret
0x000000000017c217 : dec dword ptr [rax - 0x6fffff44] ; jrcxz 0x17c215 ; call rax
0x00000000000e8ec4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000043dcb : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000000bdc9f : dec dword ptr [rax - 0x73] ; or byte ptr [r8 + 0x39], r9b ; ret
0x00000000000cb672 : dec dword ptr [rax - 0x73] ; ret
0x000000000016d787 : dec dword ptr [rax - 0x74] ; hlt ; jmp qword ptr [rbx + 0x22fff4a2]
0x00000000001151ef : dec dword ptr [rax - 0x75] ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x000000000010b049 : dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000106921 : dec dword ptr [rax - 0x75] ; and al, 0x28 ; mov edi, dword ptr [rax] ; call 0xe2c29
0x0000000000063c11 : dec dword ptr [rax - 0x75] ; cmp al, 0xcf ; jmp 0x63be1
0x0000000000071a38 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000121125 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000f8a1e : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000103bc7 : dec dword ptr [rax - 0x75] ; jl 0x103bf8 ; and al, ch ; salc ; retf
0x00000000000c7c77 : dec dword ptr [rax - 0x75] ; jl 0xc7ca7 ; jo 0xc7c08 ; ret 0x8d01
0x00000000000e02fd : dec dword ptr [rax - 0x75] ; jl 0xe032e ; adc al, ch ; clc ; retf -1
0x0000000000054b0a : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff740 ; call rax
0x0000000000123a49 : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x75], cl ; xor al, ch ; retf 0xb
0x0000000000115208 : dec dword ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x0000000000110381 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000d1d76 : dec dword ptr [rax - 0x77] ; enter -0x72b8, 0x14 ; retf 0x16eb
0x00000000000e79aa : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000829b4 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000120c0c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000011fcf9 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000f902e : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7d] ; ret
0x0000000000050c78 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rcx + rcx*4 - 0x16] ; call 0x6cf69
0x00000000000c011d : dec dword ptr [rax - 0x77] ; fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x00000000000ed815 : dec dword ptr [rax - 0x77] ; fsubp st(0) ; ret 0xf32e
0x00000000000325dd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfee1
0x00000000000631c8 : dec dword ptr [rax - 0x77] ; lea esi, dword ptr [rax - 0x7c000006] ; retf
0x000000000006315d : dec dword ptr [rax - 0x77] ; lea esi, dword ptr [rax - 0x9000006] ; ret
0x0000000000158dae : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x00000000000286f9 : dec dword ptr [rax - 0x77] ; ret
0x0000000000056918 : dec dword ptr [rax - 0x77] ; ret 0x12e9
0x00000000000e7803 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000e78fe : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000c3084 : dec dword ptr [rax - 0x77] ; ret 0x1ceb
0x0000000000023588 : dec dword ptr [rax - 0x77] ; ret 0x21e9
0x0000000000057221 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000004b4c1 : dec dword ptr [rax - 0x77] ; ret 0x294c
0x00000000000d9111 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x0000000000074eb3 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000007eda7 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000042844 : dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x000000000002b3bd : dec dword ptr [rax - 0x77] ; ret 0x42e9
0x00000000000350fb : dec dword ptr [rax - 0x77] ; ret 0x4577
0x0000000000034fa1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00000000000e71de : dec dword ptr [rax - 0x77] ; ret 0x7c77
0x000000000011ab54 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000105e6a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x000000000007d711 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002df7e : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000034353 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000004bb7e : dec dword ptr [rax - 0x77] ; ret 0x8944
0x0000000000055796 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000086bd6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000543aa : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000127631 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x0000000000066751 : dec dword ptr [rax - 0x77] ; ret 0xb6e8
0x0000000000055a2f : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000bc75c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00000000000e5037 : dec dword ptr [rax - 0x77] ; ret 0xbceb
0x0000000000084cf4 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000007e45c : dec dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000081e8e : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000010af8f : dec dword ptr [rax - 0x77] ; ret 0xcde9
0x000000000002e4a6 : dec dword ptr [rax - 0x77] ; ret 0xd3e9
0x0000000000067625 : dec dword ptr [rax - 0x77] ; ret 0xe2e8
0x0000000000068d3f : dec dword ptr [rax - 0x77] ; ret 0xede9
0x0000000000068d37 : dec dword ptr [rax - 0x77] ; ret 0xf5e9
0x00000000000eae6e : dec dword ptr [rax - 0x77] ; ret 0xff31
0x00000000000d8734 : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000246f9 : dec dword ptr [rax - 0x77] ; retf
0x00000000000c5d42 : dec dword ptr [rax - 0x77] ; retf -0x76b4
0x000000000004baa2 : dec dword ptr [rax - 0x77] ; retf -0x76b8
0x000000000005ff66 : dec dword ptr [rax - 0x77] ; retf 0x5be9
0x0000000000127c08 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax + 3], 1 ; or byte ptr [rax + 0x39], cl ; retf
0x00000000001578f2 : dec dword ptr [rax - 0x77] ; ror dword ptr [rax + 9], cl ; ret
0x000000000007d36d : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000b03ad : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000fd5af : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000082ea2 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; ret
0x000000000010dfb3 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 9
0x00000000000ed997 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0
0x0000000000142b4c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf -0xa
0x0000000000112bbf : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000e9780 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006bc5c : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006d677 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00000000000e8ca0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rsi + 0x48], 0x89 ; ret
0x00000000000edf36 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x00000000000e8c40 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x00000000000f1dff : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000085e80 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000124700 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001079e7 : dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x1079f7 ; ret
0x0000000000060fa5 : dec dword ptr [rax - 0x7d] ; jmp 0xffffffffcb3f57b5
0x0000000000031387 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000258ef : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000cf001 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000044461 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000c9be2 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000b291e : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x000000000005ec2f : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x000000000005eee3 : dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000005fcd2 : dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x0000000000049876 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000001126f8 : dec dword ptr [rax - 0x7d] ; ret 0xf01
0x00000000000e18d5 : dec dword ptr [rax - 0x7d] ; retf -0x7601
0x0000000000155c3b : dec dword ptr [rax - 0x7d] ; retf 0x41ff
0x000000000002a5a8 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000074968 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000132a1c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000017cc97 : dec dword ptr [rax - 0xffffefd] ; cmp al, 0xf0 ; jmp rax
0x000000000007b532 : dec dword ptr [rax - 9] ; ret 0xfbff
0x000000000007b522 : dec dword ptr [rax - 9] ; ret 0xfeff
0x000000000005be7b : dec dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000017d767 : dec dword ptr [rax] ; add qword ptr [r8], r8 ; adc byte ptr [rcx - 0xd], cl ; jmp qword ptr [rax]
0x000000000017d6df : dec dword ptr [rax] ; add qword ptr [rax], rax ; push rax ; xor al, 0xf3 ; jmp qword ptr [rax]
0x000000000017cadf : dec dword ptr [rax] ; cli ; add byte ptr [rax], al ; mov al, 0xf6 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017d547 : dec dword ptr [rax] ; cmp eax, 0x5ce00001 ; jmp qword ptr [rax]
0x000000000017bec7 : dec dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; nop ; mov ah, ch ; jmp qword ptr [rax]
0x000000000017ef67 : dec dword ptr [rax] ; fiadd dword ptr [rcx] ; add al, dl ; jg 0x17ef6e ; jmp qword ptr [rax]
0x000000000017dbd7 : dec dword ptr [rax] ; imul eax, dword ptr [rcx], 0 ; push rbp ; hlt ; jmp qword ptr [rax]
0x000000000017ed17 : dec dword ptr [rax] ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax - 9], bl ; jmp qword ptr [rax]
0x000000000017b6cf : dec dword ptr [rax] ; jp 0x17b6db ; add byte ptr [rax], ah ; and al, 0xeb ; jmp qword ptr [rax]
0x000000000017e47f : dec dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; push rax ; mov esi, dr0 ; jmp qword ptr [rax]
0x00000000001805bf : dec dword ptr [rax] ; outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; xor byte ptr [rsi - 6], cl ; jmp qword ptr [rax]
0x0000000000180287 : dec dword ptr [rax] ; pop rbx ; add al, byte ptr [rax] ; rol byte ptr [rbx], 0xfa ; jmp qword ptr [rax]
0x000000000018050f : dec dword ptr [rax] ; push 2 ; add al, dh ; cmp edi, edx ; jmp qword ptr [rax]
0x000000000017ee8f : dec dword ptr [rax] ; salc ; add dword ptr [rax], eax ; and byte ptr [rcx - 9], ch ; jmp qword ptr [rax]
0x000000000017caa7 : dec dword ptr [rax] ; stc ; add byte ptr [rax], al ; jo 0x17caaa ; out dx, eax ; jmp qword ptr [rax]
0x000000000017d237 : dec dword ptr [rax] ; sub byte ptr [rcx], al ; add al, al ; cmp cl, dh ; call rax
0x000000000017fc6f : dec dword ptr [rax] ; sub eax, 0x49200002 ; stc ; jmp qword ptr [rax]
0x000000000017bc77 : dec dword ptr [rax] ; xchg eax, edi ; add byte ptr [rax], al ; retf -0x15
0x0000000000180e97 : dec dword ptr [rax] ; xor dword ptr [rcx], eax ; add byte ptr [rax], dh ; outsd dx, dword ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000084cdd : dec dword ptr [rbp + 0x29] ; ret 0x8d4b
0x0000000000158ca6 : dec dword ptr [rbp + 9] ; retf -0x7bf1
0x00000000000e4393 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000043ecc : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x000000000003daf5 : dec dword ptr [rbp - 0x76b7caae] ; retf
0x000000000003b23c : dec dword ptr [rbp - 0x76b7e7ae] ; retf
0x000000000008a1c9 : dec dword ptr [rbp - 0x77] ; ret
0x00000000000a945d : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000122439 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x0000000000127e2c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000fdc7f : dec dword ptr [rbx + 0xa891] ; add bh, dh ; ret 0
0x000000000018780b : dec dword ptr [rbx + rax] ; add byte ptr [rax], al ; add al, 0xc4 ; retf 1
0x00000000000dfdff : dec dword ptr [rbx + rcx*4 + 0x14] ; and al, 0xe9 ; ret
0x00000000000a3dde : dec dword ptr [rbx + rcx*4 + 0x55] ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x00000000000a17ec : dec dword ptr [rbx + rcx*4 + 0x7d] ; add byte ptr [rax - 0x39], cl ; ret 0xfc01
0x00000000000a61bc : dec dword ptr [rbx + rcx*4 + 0x7d] ; add byte ptr [rax - 0x39], cl ; ret 0xff81
0x0000000000079d78 : dec dword ptr [rbx - 0x14f3db8c] ; ret
0x00000000000dd9e2 : dec dword ptr [rbx - 0x14f7dbbc] ; retf
0x00000000000706cc : dec dword ptr [rbx - 0x3b7cb7fe] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000016e7b3 : dec dword ptr [rbx] ; jl 0x16e7b1 ; call rcx
0x000000000016e7af : dec dword ptr [rbx] ; jl 0x16e7b1 ; dec dword ptr [rbx] ; jl 0x16e7b5 ; call rcx
0x0000000000156420 : dec dword ptr [rcx + 0x21] ; ret 0x8d49
0x0000000000157b19 : dec dword ptr [rcx + 0x29] ; retf 0x2148
0x0000000000051c99 : dec dword ptr [rcx + 0x29] ; retf 0x2948
0x000000000004bc35 : dec dword ptr [rcx + 0x39] ; ret
0x00000000000ce642 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000000d4d84 : dec dword ptr [rcx + 0x39] ; ret 0xe773
0x000000000006b314 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000058d65 : dec dword ptr [rcx + 0x63] ; mov edi, 0xfffb1085 ; jmp qword ptr [rax]
0x0000000000029d53 : dec dword ptr [rcx + 0x63] ; ret
0x00000000000e4d09 : dec dword ptr [rcx + 0x63] ; std ; mov eax, 3 ; syscall
0x00000000000d90a9 : dec dword ptr [rcx + 0xf] ; int1 ; mov eax, ecx ; syscall
0x000000000003f0a9 : dec dword ptr [rcx + 0xf] ; mov esi, 0x8349015b ; ret
0x00000000000db73f : dec dword ptr [rcx + 1] ; retf
0x000000000002b5b6 : dec dword ptr [rcx + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000154bc8 : dec dword ptr [rcx + 9] ; retf -0x17d
0x0000000000154df2 : dec dword ptr [rcx + 9] ; retf -0x27d
0x000000000007d5a0 : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x00000000000c3ca7 : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x207ae
0x00000000000f2227 : dec dword ptr [rcx + rcx*4 - 0x19] ; mov eax, 3 ; syscall
0x000000000007b5c4 : dec dword ptr [rcx + rcx*4 - 0x30] ; ret
0x00000000000e84b4 : dec dword ptr [rcx + rcx*4 - 0x39] ; xor eax, eax ; syscall
0x00000000000c3c6d : dec dword ptr [rcx + rcx*4 - 6] ; call 0x20716
0x000000000007f6c6 : dec dword ptr [rcx + rcx*4 - 9] ; call 0x7c1c6
0x000000000016b7e7 : dec dword ptr [rcx - 0x60001091] ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x00000000000e4a73 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000fa9df : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000db8af : dec dword ptr [rcx - 0x75] ; cmp ecx, dword ptr [rax - 0x7d] ; ret 0x481c
0x00000000000dc46c : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000012751e : dec dword ptr [rcx - 0x75] ; sub byte ptr [rax - 0x77], r9b ; ret 0xe281
0x00000000000823a8 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005f835 : dec dword ptr [rcx - 0x77] ; fucompi st(0) ; ret 0x1a4
0x0000000000043f65 : dec dword ptr [rcx - 0x77] ; ret
0x000000000008a318 : dec dword ptr [rcx - 0x77] ; ret 0x42eb
0x00000000000d60db : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000df1e7 : dec dword ptr [rcx - 0x77] ; ret 0x894c
0x0000000000051a43 : dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x000000000002a934 : dec dword ptr [rcx - 0x77] ; ret 0xb941
0x00000000000838e7 : dec dword ptr [rcx - 0x77] ; shr ebx, -0x69 ; xor eax, eax ; ret
0x000000000015772c : dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000ce5ce : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000000eff3d : dec dword ptr [rcx] ; clc ; ret
0x0000000000040b7c : dec dword ptr [rcx] ; ret
0x0000000000077d16 : dec dword ptr [rcx] ; retf -0x27f
0x0000000000058730 : dec dword ptr [rcx] ; retf -0x3ebf
0x000000000012753f : dec dword ptr [rcx] ; retf -0x57d
0x00000000000f340e : dec dword ptr [rcx] ; setbe al ; ret
0x000000000016d607 : dec dword ptr [rcx] ; xchg eax, edi ; hlt ; jmp rdi
0x000000000010d332 : dec dword ptr [rdi] ; add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000127529 : dec dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000005dae9 : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000077b92 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000002cfe6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2cf77 ; loopne 0x2cff7 ; ret
0x00000000000f3c5d : dec dword ptr [rdi] ; mov bh, 4 ; js 0xf3bee ; loopne 0xf3c6e ; ret
0x0000000000041c21 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000122190 : dec dword ptr [rdi] ; ret 0x3145
0x0000000000023ffb : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000038f69 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b8881 : dec dword ptr [rdi] ; ret 0x8349
0x00000000000dc026 : dec dword ptr [rdi] ; ret 0x8589
0x00000000001093c7 : dec dword ptr [rdi] ; ret 0xbe9
0x000000000002be80 : dec dword ptr [rdi] ; retf 0xd88
0x000000000012244d : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; retf
0x000000000010a599 : dec dword ptr [rdi] ; test ah, al ; or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x000000000010a5c4 : dec dword ptr [rdi] ; test ah, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000010ae6e : dec dword ptr [rdi] ; test al, ch ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x000000000003d19d : dec dword ptr [rdi] ; test al, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf -2
0x0000000000025dfb : dec dword ptr [rdi] ; test byte ptr [rax - 0x8fffffc], al ; ret 0
0x000000000010a754 : dec dword ptr [rdi] ; test byte ptr [rbx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000011de4a : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000025def : dec dword ptr [rdi] ; test byte ptr [rdx - 0x8fffffc], al ; ret 0
0x0000000000062a6f : dec dword ptr [rdi] ; test byte ptr [rip - 0x9ffffe1], dl ; ret
0x00000000000c5a19 : dec dword ptr [rdi] ; test ch, ch ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x000000000015593f : dec dword ptr [rdi] ; test dword ptr [rax], ebp ; add dword ptr [rax], eax ; add byte ptr [rcx + 1], cl ; ret
0x00000000001555fa : dec dword ptr [rdi] ; test dword ptr [rcx], eax ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000004103d : dec dword ptr [rdi] ; test dword ptr [rcx], edi ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000056ef5 : dec dword ptr [rdi] ; test dword ptr [rdi - 0x16000007], ecx ; jmp rax
0x0000000000154200 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004d07f : dec dword ptr [rdi] ; test edi, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000004ba1d : dec dword ptr [rdi] ; xchg byte ptr [rcx], ah ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000058a77 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ah ; or eax, 0x89480000 ; retf -0x76b8
0x000000000004ce49 : dec dword ptr [rdi] ; xchg byte ptr [rsi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000058362 : dec dword ptr [rdi] ; xchg dh, bl ; adc eax, 0x89480000 ; retf -0x76b8
0x00000000000a2ab4 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x00000000000d918a : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x0000000000070bab : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000073dae : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000ee02f : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000c143d : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000016de0f : dec dword ptr [rsi] ; cmp eax, 0x3d18fff5 ; cmc ; jmp qword ptr [rdx]
0x000000000016dd8f : dec dword ptr [rsi] ; cmp ebp, esi ; call rsp
0x000000000016dd8b : dec dword ptr [rsi] ; cmp ebp, esi ; dec dword ptr [rsi] ; cmp ebp, esi ; call rsp
0x000000000016dd4f : dec dword ptr [rsi] ; cmp ebp, esi ; lcall ptr [rax] ; cmp esi, ebp ; jmp qword ptr [rdx]
0x000000000016db9b : dec dword ptr [rsi] ; ret 0xfff4
0x000000000017ceaf : dec eax ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; xchg eax, esi ; jmp rax
0x000000000017f367 : dec eax ; add dword ptr [rax], eax ; loopne 0x17f38d ; clc ; jmp rax
0x000000000017d2ff : dec eax ; add dword ptr cs:[rax], eax ; nop ; jmp rax
0x000000000017d42f : dec eax ; add dword ptr ss:[rax], eax ; rol byte ptr [rbx - 0xe], 1 ; jmp rax
0x000000000017f6e7 : dec eax ; add eax, 0x58c00002 ; clc ; jmp rax
0x000000000017cb1f : dec eax ; cli ; add byte ptr [rax], al ; xor bh, dh ; out dx, eax ; jmp rax
0x000000000016ddf3 : dec eax ; cmp al, 0xf5 ; call rdx
0x000000000016dd33 : dec eax ; cmp dh, ch ; call rdx
0x000000000017d507 : dec eax ; cmp eax, dword ptr [rcx] ; add al, dl ; push rdi ; jmp rax
0x000000000016dccf : dec eax ; cmp ebp, esi ; call rdx
0x000000000017dc0f : dec eax ; imul eax, dword ptr [rcx], 0 ; nop ; push rsi ; hlt ; jmp rax
0x000000000017bfd7 : dec eax ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; jo 0x17bfbb ; in al, dx ; jmp rax
0x000000000017df97 : dec eax ; mov byte ptr [rcx], al ; add al, ah ; ret
0x0000000000180b07 : dec eax ; mov dword ptr [rax], eax ; add byte ptr [rax - 0x2b], dl ; cli ; jmp rax
0x0000000000180f37 : dec eax ; mov es, word ptr [rdx] ; add byte ptr [rax - 0x29], dl ; std ; jmp rax
0x00000000001801df : dec eax ; push rsi ; add al, byte ptr [rax] ; and cl, dh ; stc ; jmp rax
0x000000000017ea77 : dec eax ; ret
0x000000000017c2f7 : dec eax ; ret 0
0x0000000000180c5f : dec eax ; sub byte ptr [rcx], al ; add byte ptr [rax + 0x5d], al ; sti ; jmp rax
0x0000000000180d77 : dec eax ; sub eax, dword ptr [rcx] ; add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x000000000017d37f : dec eax ; xor dword ptr [rcx], eax ; add al, dh ; sub dh, dl ; jmp rax
0x000000000016b767 : dec ebx ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000004508d : dec ecx ; ret
0x000000000016d28b : dec esi ; hlt ; call rcx
0x0000000000097839 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000957e1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000000aa85d : dec qword ptr [r8 - 0x39] ; ret 0xffff
0x000000000008a085 : dec qword ptr [rax - 0x39] ; ret 0xffff
0x00000000000258ee : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000051c98 : dec qword ptr [rcx + 0x29] ; retf 0x2948
0x000000000017d1b5 : div al ; call rax
0x0000000000093cb2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000008a5d1 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000e5eb5 : div byte ptr [rcx] ; shr al, 0xb3 ; ret
0x000000000002e5bc : div byte ptr [rdi] ; add byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000002e5ab : div byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000e1c11 : div dword ptr [rdi - 0x14] ; ret
0x0000000000002e65 : div dword ptr [rsi + 0x10] ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000006c250 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007616c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff37f : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff47c : div ebx ; pop rbx ; pop rbp ; ret
0x000000000004eb05 : div ecx ; add eax, r8d ; ret
0x000000000009e00a : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006c24f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007616b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff37e : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff47b : div rbx ; pop rbx ; pop rbp ; ret
0x00000000000385d0 : enter -0x128b, -0x7c ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000026fc : enter -0x1ee6, -0x4c ; hlt ; out -0x21, eax ; syscall
0x000000000008a89e : enter -0x208c, -0xd ; ret
0x00000000001499f7 : enter -0x23b, -0x29 ; ret 0xc085
0x0000000000094131 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000116ce8 : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000ba18e : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000154374 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000b17bd : enter -0x67b8, 0xf ; retf
0x0000000000002c50 : enter -0x7042, -0x15 ; retf
0x00000000000d1d79 : enter -0x72b8, 0x14 ; retf 0x16eb
0x00000000000976b6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009569e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000097836 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000957de : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000001497d7 : enter -0x73b, 0x77 ; ret
0x0000000000033578 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000eaf51 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x00000000000f0086 : enter -0x76b4, 0x4c ; and al, 0xd0 ; syscall
0x0000000000116d16 : enter -0x76b8, 0x17 ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000794b4 : enter -0x76ff, 3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fd62d : enter -0x7cb8, 0x7c ; retf 0x1f8
0x000000000010ba56 : enter -0x7df1, -0x2d ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x0000000000199db8 : enter -0xa19, -1 ; ret
0x000000000014a114 : enter -2, -1 ; ret
0x0000000000078c14 : enter -4, -1 ; call rax
0x000000000017a0c5 : enter -4, 0x70 ; retf -4
0x00000000000821fc : enter 0, 0 ; call rax
0x0000000000119059 : enter 0, 0 ; jmp rcx
0x0000000000114566 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000000c34 : enter 0, 0 ; retf
0x0000000000164f90 : enter 0, 0 ; retf 0
0x00000000001620e8 : enter 0x10, 0 ; retf
0x0000000000180c60 : enter 0x128, 0 ; pop rbp ; sti ; jmp rax
0x0000000000180d78 : enter 0x12b, 0 ; and byte ptr [rsi], ah ; std ; call qword ptr [rax]
0x000000000017d300 : enter 0x12e, 0 ; nop ; jmp rax
0x000000000017d430 : enter 0x136, 0 ; rol byte ptr [rbx - 0xe], 1 ; jmp rax
0x000000000017d508 : enter 0x13b, 0 ; rcl byte ptr [rdi - 0xe], 1 ; jmp rax
0x000000000014d579 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000017dc10 : enter 0x16b, 0 ; nop ; push rsi ; hlt ; jmp rax
0x000000000017ea38 : enter 0x1c1, 0 ; add byte ptr [rdi + rsi*8], dl ; lcall ptr [rax] ; ret 1
0x000000000017efa8 : enter 0x1da, 0 ; nop ; test dh, bh ; jmp rax
0x000000000017f028 : enter 0x1dc, 0 ; push rax ; mov edi, dr0 ; jmp rax
0x000000000017f368 : enter 0x1f2, 0 ; loopne 0x17f38c ; clc ; jmp rax
0x000000000007aaca : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000010be19 : enter 0x2474, -0x73 ; add dword ptr [r8 - 0x77], ecx ; retf -0x3eb8
0x00000000001801e0 : enter 0x256, 0 ; and cl, dh ; stc ; jmp rax
0x00000000000336cc : enter 0x280f, -0x3f ; ret
0x000000000004538e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000180f38 : enter 0x28e, 0 ; push rax ; xlatb ; std ; jmp rax
0x000000000010f784 : enter 0x29, 0x64 ; mov rax, qword ptr [rax] ; ret
0x000000000014d90e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000008c33d : enter 0x31c3, -0x40 ; ret
0x0000000000080608 : enter 0x32e2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ece34 : enter 0x36e8, 0x33 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000542d8 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x000000000002d741 : enter 0x415d, 0x5c ; ret
0x000000000011b8c7 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x000000000011b824 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x000000000011b8f4 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000011c19b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x000000000011c07b : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000007e0ef : enter 0x4801, -0x77 ; ret 0x8b49
0x000000000007ca24 : enter 0x4801, 0x39 ; ret
0x00000000001002e6 : enter 0x577, -0x17 ; ret 0xf9fc
0x000000000005a166 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000082156 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000017b680 : enter 0x78, 0 ; rcr byte ptr [rsi], 0xeb ; jmp rax
0x000000000016a5bc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000370fd : enter 0x948, -0x30 ; ret
0x000000000017bd30 : enter 0x9a, 0 ; nop ; fsub st(3), st(0) ; jmp rax
0x00000000001618e8 : enter 0xa, 0 ; retf
0x000000000017bfd8 : enter 0xad, 0 ; jo 0x17bfba ; in al, dx ; jmp rax
0x0000000000161ce8 : enter 0xd, 0 ; retf
0x000000000017c4a8 : enter 0xd0, 0 ; mov al, 0x47 ; out dx, eax ; call qword ptr [rax]
0x00000000001503f6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000093491 : enter 0xf66, -0x15 ; ret
0x000000000014946c : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000336c8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x000000000017cb20 : enter 0xfa, 0 ; xor bh, dh ; out dx, eax ; jmp rax
0x0000000000165190 : enter 1, 0 ; retf 1
0x000000000017eb69 : enter 1, 0x50 ; xor bh, dh ; call rax
0x00000000001624a0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000165390 : enter 2, 0 ; retf 2
0x0000000000165590 : enter 3, 0 ; retf 3
0x0000000000165790 : enter 4, 0 ; retf 4
0x000000000009b0e4 : enter 5, 0 ; ret
0x0000000000165990 : enter 5, 0 ; retf 5
0x00000000000016e8 : enter 6, 0 ; retf 6
0x0000000000165d90 : enter 7, 0 ; retf 7
0x0000000000165f90 : enter 8, 0 ; retf 8
0x0000000000166190 : enter 9, 0 ; retf 9
0x0000000000112c15 : f2xm1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000018e925 : fadd dword ptr [rax] ; add al, ch ; or esi, ecx ; jmp rsi
0x000000000018e8f5 : fadd dword ptr [rax] ; add byte ptr [rax + 0xa], ch ; int1 ; call rdx
0x000000000006e35e : fadd dword ptr [rax] ; add byte ptr [rax], al ; call 0x7ae56
0x000000000006b0a7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000416b6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000eb364 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000fd635 : fadd dword ptr [rax] ; leave ; ret
0x00000000000a1236 : fadd dword ptr [rbp + 0x440f48c9] ; ret 0x8348
0x00000000001221b0 : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x00000000000cab8b : fadd dword ptr [rbx - 0x7bf0fe40] ; retf
0x00000000000c8766 : fadd dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000006ea80 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000052a7f : fadd dword ptr [rcx - 0x77] ; ret
0x00000000000b917a : fadd qword ptr [r9] ; ret
0x000000000000bbe0 : fadd qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 4
0x00000000000f1cb7 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000089cfc : fadd qword ptr [rcx - 0x77] ; retf
0x00000000000b917b : fadd qword ptr [rcx] ; ret
0x00000000001a1894 : fadd qword ptr [rdi] ; add al, byte ptr [rax] ; cwde ; retf -9
0x00000000001a54c4 : fadd qword ptr [rdi] ; add byte ptr [rax], al ; ret 3
0x0000000000199394 : fadd qword ptr [rdx - 0x4017ffff] ; cmc ; call rdx
0x0000000000191394 : fadd qword ptr [rdx] ; add dword ptr [rax], eax ; test al, 0xc1 ; jmp rbx
0x00000000001a52f4 : fadd qword ptr [rsi] ; add byte ptr [rax], al ; mov bh, 6 ; add byte ptr [rax], al ; retf 2
0x0000000000033114 : fadd st(0) ; add rsp, 8 ; ret
0x00000000000330b0 : fadd st(0) ; ret
0x0000000000154998 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000015174e : fadd st(3) ; ret
0x000000000018d828 : fadd st(4) ; cld ; call qword ptr [rax]
0x00000000000edf90 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000014ff41 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000cd1b6 : fbstp dword ptr [rbp + 0x27] ; call 0xc9475
0x000000000010fc7e : fbstp dword ptr [rbp - 0x11] ; pop rbx ; ret
0x000000000015929c : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dbe3 : fbstp dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x0000000000125e31 : fbstp dword ptr [rcx] ; shr al, 0xb7 ; retf
0x00000000000b07e4 : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000169bf8 : fcmovb st(0), st(3) ; ret
0x0000000000003563 : fcmove st(0), st(5) ; retf
0x000000000014da2b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000005605f : fcmovnb st(0), st(7) ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x000000000018eb88 : fcom dword ptr [rcx] ; int1 ; call qword ptr [rsi]
0x000000000019a494 : fcom qword ptr [rbx - 0x15e7ffff] ; clc ; jmp qword ptr [rsi]
0x0000000000196894 : fcom qword ptr [rdi + 1] ; add byte ptr [rax + 0x24], bl ; cmc ; jmp qword ptr [rsi]
0x000000000017dd5d : fcomi st(4) ; call qword ptr [rax]
0x00000000000c2b5b : fcomi st(5) ; dec dword ptr [rax - 0x77] ; ret
0x000000000017e005 : fcomi st(5) ; jmp qword ptr [rax]
0x00000000000e8c77 : fcomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000323ca : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029fb7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000346c8 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000030f3c : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000008281c : fcomp dword ptr [rbx - 0x3d] ; nop ; xor eax, eax ; ret
0x000000000016a979 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000000ebafb : fcomp dword ptr [rdx + 0x5b] ; ret
0x000000000018ae94 : fcomp qword ptr [rbp - 0x980000] ; out dx, al ; call qword ptr [rsi]
0x00000000000baa13 : fcomp qword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000168be0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000008a8a0 : fcompi st(3) ; ret
0x000000000017f235 : fcompi st(7) ; call qword ptr [rax]
0x00000000001a2319 : fcompi st(7) ; call qword ptr [rsi]
0x000000000017f22d : fcompi st(7) ; call rax
0x0000000000068a75 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000033ff3 : fdiv dword ptr [rdi] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000184594 : fdiv qword ptr [rax + rax] ; add byte ptr [rax], bh ; sub ebp, ebx ; call qword ptr [rcx]
0x0000000000198394 : fdiv qword ptr [rdx + 1] ; add al, bl ; mov dh, ch ; jmp qword ptr [rcx]
0x0000000000076160 : fdiv qword ptr [rip + 0x39480000] ; ret
0x0000000000105fc0 : fdiv qword ptr [rsi + rdi*8 - 0x763f7a01] ; ret
0x000000000016da38 : fdiv qword ptr [rsi - 0x4b75000c] ; hlt ; call qword ptr [rcx]
0x0000000000191ff8 : fdiv st(2) ; jmp rcx
0x0000000000180b95 : fdiv st(2), st(0) ; jmp qword ptr [rax]
0x00000000000ae864 : fdiv st(3) ; ret
0x00000000000dfdfd : fdiv st(4) ; dec dword ptr [rbx + rcx*4 + 0x14] ; and al, 0xe9 ; ret
0x000000000017dd3d : fdiv st(4) ; jmp qword ptr [rax]
0x0000000000195279 : fdiv st(4) ; jmp qword ptr [rcx]
0x0000000000042842 : fdiv st(5), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x000000000007ffa2 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000082625 : fdivp st(1) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b5678 : fdivp st(7) ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000e83ff : fdivr dword ptr [rax + 0x132] ; syscall
0x00000000000e2c9f : fdivr dword ptr [rax + 0x20] ; syscall
0x00000000000e834f : fdivr dword ptr [rax + 0xa2] ; syscall
0x00000000001164f3 : fdivr qword ptr [rax + 1] ; pop rbx ; ret
0x0000000000184994 : fdivr qword ptr [rax] ; add byte ptr [rax], al ; call 0x171834d6
0x000000000018cc94 : fdivr qword ptr [rbx - 0x7c080000] ; out dx, eax ; call qword ptr [rcx]
0x000000000016dcd8 : fdivr qword ptr [rcx] ; cmc ; jmp rsi
0x0000000000194b94 : fdivr qword ptr [rdx] ; add dword ptr [rax], eax ; sub byte ptr [rsi], bh ; stc ; call qword ptr [rax]
0x000000000016dd3c : fdivr qword ptr [rdx] ; cmc ; jmp rsi
0x0000000000191961 : fdivr st(2), st(0) ; jmp qword ptr [rcx]
0x0000000000167f35 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000017e045 : fdivr st(5), st(0) ; call qword ptr [rax]
0x000000000017e035 : fdivr st(5), st(0) ; jmp rax
0x000000000014228d : fdivr st(7) ; ret
0x000000000009856e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000017e07d : fdivrp st(5) ; call rax
0x000000000019d2e1 : fdivrp st(6) ; jmp qword ptr [rdi]
0x000000000018eb85 : fiadd dword ptr [rax] ; add al, bl ; adc ecx, esi ; call qword ptr [rsi]
0x000000000017c601 : fiadd dword ptr [rax] ; add byte ptr [rax + 0x7a], al ; out dx, eax ; jmp qword ptr [rax]
0x00000000000fdcb2 : fiadd dword ptr [rax] ; add eax, 0x450f4800 ; ret 0xf6c3
0x00000000000036b4 : fiadd dword ptr [rax] ; pop rsp ; ret 0xf84d
0x0000000000089556 : fiadd dword ptr [rbp + 0x38] ; retf -0x238e
0x00000000000e29d7 : fiadd dword ptr [rbx + 0x2e8247c] ; cmove eax, edx ; ret
0x0000000000069b42 : fiadd dword ptr [rbx] ; sub rdx, r12 ; syscall
0x0000000000154e01 : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000eb1a3 : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x00000000000fd43f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000017efb9 : fiadd dword ptr [rcx] ; add al, al ; test esi, edi ; call qword ptr [rax]
0x000000000017ef69 : fiadd dword ptr [rcx] ; add al, dl ; jg 0x17ef6c ; jmp qword ptr [rax]
0x00000000000b07f5 : fiadd dword ptr [rdi + rcx - 0x49] ; pop rdi ; adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000b6578 : fiadd word ptr [r9] ; ret
0x000000000018eecd : fiadd word ptr [rax] ; add al, ah ; sbb esi, ecx ; call qword ptr [rdx]
0x000000000018eee5 : fiadd word ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x00000000000435e4 : fiadd word ptr [rbx + 0x14d08c0] ; retf
0x0000000000126744 : fiadd word ptr [rcx + rcx*4 - 0x18] ; syscall
0x00000000001267fa : fiadd word ptr [rcx + rcx*4 - 0x40] ; syscall
0x000000000016b94c : fiadd word ptr [rcx - 0x7e3b0011] ; out dx, eax ; call qword ptr [rbx]
0x00000000000b6579 : fiadd word ptr [rcx] ; ret
0x0000000000058365 : ficom word ptr [rip - 0x76b80000] ; retf -0x76b8
0x00000000000c8a5d : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000083a21 : ficomp dword ptr [rbx + 0x5d] ; ret
0x000000000016a7c6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000159728 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000001ad0 : fidiv word ptr [rbx] ; retf
0x0000000000155269 : fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf -0x17d
0x0000000000084d8e : fidiv word ptr [rdi + 0x148fff9] ; ret
0x0000000000127cb5 : fidivr dword ptr [rax + 1] ; ret
0x0000000000126b37 : fidivr word ptr [rax + 1] ; syscall
0x0000000000002e50 : fild dword ptr [rax + 0x2d37b741] ; retf 0x4a9a
0x000000000017c621 : fild dword ptr [rax] ; add byte ptr [rax + 0x7b], ah ; out dx, eax ; jmp rax
0x00000000000dd5d5 : fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000010841b : fild dword ptr [rbx - 0x6bf0fe03] ; ret
0x00000000000836cc : fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x000000000004d056 : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000b0730 : fild dword ptr [rcx - 0x7d] ; ret
0x00000000000c56e5 : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xd008
0x00000000000e7046 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000004eaf8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000c3964 : fimul dword ptr [r8 - 0x77] ; retf 0x2948
0x0000000000088e15 : fimul dword ptr [rax + 0x29] ; ret 0x148
0x00000000000710fa : fimul dword ptr [rax + 0x39] ; ret
0x000000000003aaf2 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000144b46 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000533d9 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x00000000000772c4 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x00000000000af886 : fimul dword ptr [rax - 0x77] ; retf
0x00000000000c3965 : fimul dword ptr [rax - 0x77] ; retf 0x2948
0x0000000000071f18 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000b887e : fimul dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; ret 0x8349
0x00000000000b68d6 : fimul dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x48 ; ret 0x8349
0x0000000000030970 : fimul dword ptr [rax - 0x7d] ; ret
0x00000000001065cc : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000a2b95 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000001564a8 : fimul dword ptr [rcx + 0x21] ; ret 0x34e9
0x00000000001561df : fimul dword ptr [rcx + 0x21] ; ret 0x894c
0x0000000000156138 : fimul dword ptr [rcx + 0x21] ; ret 0xa7eb
0x00000000000829b7 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000082b93 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x00000000001165d6 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000e86ce : fimul dword ptr [rcx + rcx*4 - 0x39] ; mov eax, 3 ; syscall
0x0000000000141032 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a1f51
0x00000000001420b2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a2fd1
0x00000000000cf166 : fimul dword ptr [rdi] ; mov dh, 0x45 ; add byte ptr [rcx + 1], cl ; retf
0x0000000000034f93 : fimul word ptr [rax - 0x75] ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000000c8a27 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x0000000000120c0f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000754ee : fimul word ptr [rax - 0x77] ; ret
0x000000000005e4b9 : fimul word ptr [rax - 0x7d] ; ret
0x0000000000043abc : fimul word ptr [rbp + 0x11] ; retf
0x000000000007f4df : fimul word ptr [rbp - 0x77] ; ret 0xe889
0x00000000000c44f3 : fimul word ptr [rbx - 0x7cb7fbad] ; ret
0x000000000002463e : fimul word ptr [rcx + 0x39] ; ret 0x860f
0x000000000002b2a7 : fimul word ptr [rcx + 0x63] ; xor al, 0xb0 ; add rsi, r8 ; jmp rsi
0x0000000000082a9d : fimul word ptr [rcx + rcx*4 - 0x11] ; call rax
0x00000000000755c5 : fimul word ptr [rcx + rcx*4 - 0x11] ; mov eax, r12d ; syscall
0x00000000000f21f3 : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r10d ; syscall
0x00000000001253a7 : fimul word ptr [rcx + rcx*4 - 0x39] ; mov eax, r12d ; syscall
0x000000000011e3ee : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000011fcfc : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000009f8ae : fimul word ptr [rdx + 0xb] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000001a1e41 : fincstp ; call qword ptr [rdx]
0x00000000000e6869 : fistp qword ptr [rax + 0x10f] ; syscall
0x0000000000037e89 : fistp qword ptr [rax + 0x13e] ; syscall
0x00000000000eb2b9 : fistp qword ptr [rax + 0x1a] ; syscall
0x00000000000bf990 : fistp qword ptr [rax + 0x23] ; syscall
0x00000000000e2dde : fistp qword ptr [rax + 0x55] ; syscall
0x00000000000345be : fistp qword ptr [rax + 0x82] ; syscall
0x00000000000bf7f8 : fistp qword ptr [rax + 0xf7] ; syscall
0x000000000003279e : fistp qword ptr [rax + 3] ; syscall
0x00000000000e6799 : fistp qword ptr [rax + 7] ; syscall
0x00000000000c3c8c : fistp qword ptr [rbx + 1] ; call 0x20718
0x000000000006d9a6 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000701b0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000007724b : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x000000000011d538 : fistp word ptr [rbx - 0x17] ; imul esi, dword ptr [rdx], 0x5b90fff0 ; ret
0x0000000000113d03 : fistp word ptr [rbx - 0x17] ; sahf ; retf -0x10
0x000000000007b9c2 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000b8738 : fisttp dword ptr [rax + 0x39] ; ret
0x000000000005ad3c : fisttp dword ptr [rax + 0x63] ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x000000000003b096 : fisttp dword ptr [rax + 0x63] ; ret
0x000000000002fd74 : fisttp dword ptr [rax + 1] ; ret
0x000000000010fc7b : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x11] ; pop rbx ; ret
0x0000000000159725 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000044651 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000000f258e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2b9daa ; pop rbx ; ret
0x0000000000155abb : fisttp dword ptr [rax - 9] ; ror byte ptr [rdi + rcx + 0x45], 1 ; retf 0x20e9
0x0000000000084f81 : fisttp dword ptr [rbp + 0xf480001] ; ret 0xc3f3
0x000000000004466b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000000b17ca : fisttp dword ptr [rdi] ; retf 0xf41
0x0000000000042f54 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000034f0f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000080f9e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000149552 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000084e57 : fisttp qword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x0000000000039e90 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000a2957 : fisttp qword ptr [rax - 0x7d] ; ret 0x4c04
0x00000000000f74b2 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x00000000000f74b5 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x0000000000032d7c : fisttp word ptr [rax + 1] ; out dx, al ; mov eax, r8d ; syscall
0x000000000007ec80 : fisttp word ptr [rax + 9] ; retf -0x76b8
0x00000000000323da : fisttp word ptr [rax - 0x39] ; ret
0x000000000012788c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000003f06a : fisttp word ptr [rax - 0x77] ; ret
0x00000000000f91e3 : fisttp word ptr [rax - 0x77] ; ret 0x5d5b
0x000000000004d5e4 : fisttp word ptr [rax - 0x77] ; ret 0x8844
0x000000000008ae51 : fisttp word ptr [rax - 0x77] ; ret 0xe6e8
0x000000000004cec2 : fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x0000000000159429 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000f9031 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000446ef : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000011e6a2 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000050c7b : fisttp word ptr [rcx + rcx*4 - 0x16] ; call 0x6cf66
0x00000000000f7c5a : fisttp word ptr [rcx + rcx*4 - 6] ; mov rsi, r13 ; call r14
0x00000000000f7549 : fisttp word ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x000000000010d4fd : fisttp word ptr [rdi] ; test al, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003a91f : fisttp word ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x000000000014aabd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000d9148 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000150311 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d0620 : fisub dword ptr [rsi - 0x7f] ; loop 0xd062b ; add esi, esi ; ret
0x000000000012e4cf : fisub word ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x0000000000150011 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001580b2 : fld dword ptr [rbx - 0x76b7d731] ; ret 0x8341
0x00000000001a777c : fld dword ptr [rcx] ; add byte ptr [rax], al ; retf
0x0000000000001dd0 : fld dword ptr [rdx + 0x6b865524] ; retf
0x0000000000106733 : fld dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007d70b : fld dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000018ee3d : fld qword ptr [rax] ; add al, ah ; sbb esi, ecx ; call qword ptr [rdx]
0x000000000018ee0d : fld qword ptr [rax] ; add al, ah ; sbb esi, ecx ; jmp qword ptr [rax]
0x000000000018ee25 : fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x00000000000e68d7 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000168c21 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000032f7e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000014d712 : fld st(5) ; std ; xlatb ; retf -0x23b
0x000000000014d772 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000000393e : fld xword ptr [rsi + 0x7a697efd] ; retf -0x513c
0x0000000000033038 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000032f19 : fld xword ptr [rsp + 8] ; ret
0x0000000000033009 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000032fe7 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000b11dc : fldcw word ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000033ea9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000115383 : fldenv dword ptr [rdi + 0x29] ; add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x0000000000149590 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000aea59 : fldenv dword ptr [rsi + 0xf] ; jbe 0xaeab6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e049 : fldenv dword ptr [rsi + 0xf] ; je 0x8e0a6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e327 : fldenv dword ptr [rsi + 0xf] ; je 0x8e384 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000150391 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008df41 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000aee4c : fldenv dword ptr [rsi + 0xf] ; xlatb ; retf 0xf66
0x0000000000043b24 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000082092 : fmul dword ptr [rax + 0x21] ; ret
0x000000000015786c : fmul dword ptr [rax + 0x21] ; retf -0x76b8
0x00000000000b6586 : fmul dword ptr [rax + 0x39] ; ret
0x00000000000f76c7 : fmul dword ptr [rax + 1] ; retf
0x00000000000c1fd2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000009d557 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000187528 : fmul dword ptr [rax - 0x12] ; call qword ptr [rax]
0x0000000000072beb : fmul dword ptr [rax - 0x77] ; ret
0x0000000000024455 : fmul dword ptr [rax - 0x77] ; retf
0x000000000002a7e4 : fmul dword ptr [rax - 0x7b] ; leave ; je 0x2a7f2 ; call rcx
0x0000000000067f0e : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000156dcc : fmul dword ptr [rbp + 9] ; fmul dword ptr [rcx - 0x7b] ; ret 0x1d74
0x0000000000085c1d : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000111ed6 : fmul dword ptr [rcx + rcx*4 - 0xf] ; mov rdi, r13 ; call r12
0x0000000000156dcf : fmul dword ptr [rcx - 0x7b] ; ret 0x1d74
0x0000000000156a15 : fmul dword ptr [rdi] ; xchg eax, ebx ; ret 0xc031
0x00000000000f245f : fmul qword ptr [rax + 0x39] ; ret
0x00000000000c0120 : fmul qword ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x00000000000ec976 : fmul qword ptr [rax - 0x75] ; push rsi ; adc byte ptr [rcx - 0x77], cl ; retf
0x00000000000f754c : fmul qword ptr [rax - 0x77] ; ret
0x00000000000d5747 : fmul qword ptr [rax - 0x77] ; retf
0x00000000000bb80b : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000083368 : fmul qword ptr [rbx - 0x76b7ffce] ; and al, 8 ; call qword ptr [rdx]
0x0000000000187a9c : fmul qword ptr [rbx] ; add byte ptr [rax], al ; push rax ; pop rsp ; out dx, al ; jmp qword ptr [rbx]
0x000000000008b0f9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ef2f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000003e27c : fmul st(0) ; ret
0x000000000018dd94 : fmul st(4), st(0) ; add byte ptr [rax], al ; pop rax ; xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000003e1f4 : fmulp st(1) ; ret
0x000000000014d710 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf -0x23b
0x0000000000155678 : fnsave dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf -0x27d
0x000000000016d960 : fnstcw word ptr [rbx - 0x4584000c] ; hlt ; jmp qword ptr [rsi]
0x0000000000002576 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x00000000000330e6 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00000000000e2adf : fnstsw dword ptr [rax + 0x49] ; syscall
0x000000000016a46a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf -0x51ce
0x0000000000032365 : fpatan ; ret
0x000000000012e525 : frstor dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf -0x76b7
0x0000000000150111 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003303c : fscale ; fstp st(1) ; ret
0x00000000000a0123 : fst dword ptr [rbp + 0x39480030] ; ret
0x0000000000003b21 : fst dword ptr [rbx + 0x55f20b1c] ; jg 0x3b9a ; xchg eax, ebp ; retf 0x10bf
0x0000000000168907 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000086b8e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ec6da : fstp qword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000330e8 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000168c80 : fstp st(0) ; ret 0xde5d
0x000000000003303e : fstp st(1) ; ret
0x0000000000167e4b : fstp st(3), st(0) ; retf -0x147d
0x0000000000032f80 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003300d : fstp xword ptr [rdi] ; ret
0x0000000000001cb6 : fstp xword ptr [rip + 0xf9a7750] ; retf
0x0000000000021254 : fsub dword ptr [rcx + rax*2 - 0x77] ; add ebx, ebp ; ret 0x1f0f
0x0000000000034518 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000344e8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000196778 : fsub dword ptr [rdx] ; cmc ; jmp rdx
0x00000000000330e9 : fsub dword ptr [rip + 0x200] ; ret
0x0000000000150411 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000094514 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000018b594 : fsub qword ptr [rax + rax - 0x10ca7800] ; call qword ptr [rsi]
0x000000000016a238 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000009d69b : fsub qword ptr [rsi + 0xf] ; jmp 0x9d667
0x0000000000150211 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000935ac : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000018fc94 : fsub st(3), st(0) ; add byte ptr [rax], al ; sub dl, ch ; int1 ; call qword ptr [rax]
0x000000000017bd35 : fsub st(3), st(0) ; jmp rax
0x00000000001114eb : fsub st(3), st(0) ; mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000f1687 : fsubp st(0) ; ret
0x0000000000112988 : fsubp st(0) ; ret 0xf0dc
0x00000000000ed818 : fsubp st(0) ; ret 0xf32e
0x0000000000032f82 : fsubp st(1) ; ret
0x00000000000b12f5 : fsubr dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x4b7f
0x00000000000aac5b : fsubr qword ptr [rcx] ; ret
0x0000000000159754 : fsubr qword ptr [rdx + 0x25] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000183011 : fsubr st(2) ; call qword ptr [rdx]
0x0000000000191eb8 : fsubr st(2) ; jmp qword ptr [rcx]
0x0000000000199e38 : fsubr st(5) ; cmc ; call rsp
0x000000000019f694 : fsubr st(5), st(0) ; add dword ptr [rax], eax ; call 0x1419edfb
0x000000000017c930 : fsubr st(6) ; add byte ptr [rax], al ; nop ; leave ; out dx, eax ; call qword ptr [rax]
0x000000000016a958 : fucom st(5) ; loop 0x16a9b1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000000c39ff : fucomi st(0) ; jmp 0xc39d1
0x0000000000057006 : fucomi st(1) ; jmp rsi
0x00000000000e656f : fucomi st(1) ; retf
0x00000000000cdbe4 : fucomi st(1) ; retf -2
0x00000000000ec691 : fucomi st(3) ; retf -0x6f9a
0x000000000018a219 : fucomi st(6) ; call rcx
0x00000000001830c1 : fucomp st(2) ; call qword ptr [rdi]
0x000000000017bd3d : fucomp st(3) ; call qword ptr [rax]
0x000000000006c4ce : fucompi st(0) ; adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000e4528 : fucompi st(0) ; add al, dl ; dec dword ptr [rax + 0x39] ; ret
0x0000000000074eae : fucompi st(0) ; insb byte ptr [rdi], dx ; mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000bbe2d : fucompi st(0) ; mov ebp, 0x480006be ; mov eax, ebx ; call rax
0x0000000000107e32 : fucompi st(0) ; push -0x76000003 ; ret 0x8aeb
0x00000000000e90ca : fucompi st(0) ; push rax ; ret 0xfff9
0x00000000000f4d27 : fucompi st(0) ; ret
0x000000000005f838 : fucompi st(0) ; ret 0x1a4
0x00000000000325e0 : fucompi st(0) ; ret 0xfee1
0x00000000000e438e : fucompi st(0) ; ret 0xfff3
0x000000000006bcd7 : fucompi st(0) ; retf
0x00000000000d0f70 : fucompi st(0) ; retf -0xb
0x00000000000b31a6 : fucompi st(0) ; sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000010bf8f : fucompi st(0) ; stosd dword ptr [rdi], eax ; retf -0xe
0x00000000000e907f : fucompi st(0) ; wait ; ret 0xfff9
0x000000000017c1f5 : fucompi st(6) ; call rax
0x000000000002730f : fucompp ; retf
0x0000000000169f9e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001952f1 : fxtract ; jmp qword ptr [rcx]
0x0000000000148099 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c1440 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000be404 : hlt ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x00000000001956ac : hlt ; add dword ptr [r8], r8d ; adc al, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000148f99 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000edb0b : hlt ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001936ac : hlt ; and eax, 0xfc300001 ; jmp rdx
0x000000000017da06 : hlt ; call qword ptr [rax]
0x0000000000193f0a : hlt ; call qword ptr [rbx]
0x000000000016d792 : hlt ; call qword ptr [rcx]
0x000000000016d9a2 : hlt ; call qword ptr [rdi]
0x00000000001940fa : hlt ; call qword ptr [rdx]
0x000000000016d5ce : hlt ; call qword ptr [rip - 0x19000b68]
0x000000000016d2a6 : hlt ; call qword ptr [rsi]
0x000000000016dbce : hlt ; call rax
0x000000000016d28e : hlt ; call rcx
0x00000000001937d2 : hlt ; call rdi
0x0000000000194112 : hlt ; call rdx
0x00000000001a0dac : hlt ; cld ; add dword ptr [rax], eax ; nop ; test al, 0xf7 ; jmp qword ptr [rax]
0x000000000017e0cd : hlt ; cmc ; call qword ptr [rax]
0x0000000000022004 : hlt ; cmp byte ptr [rax], al ; ret
0x000000000008a84b : hlt ; cmp ecx, esi ; je 0x8a846 ; ret
0x000000000016d99a : hlt ; dec dword ptr [rax - 0x51] ; hlt ; push qword ptr [rdx - 0x3c] ; hlt ; call qword ptr [rdi]
0x000000000016d786 : hlt ; dec dword ptr [rax - 0x74] ; hlt ; jmp qword ptr [rbx + 0x22fff4a2]
0x00000000000d8733 : hlt ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000f1dfe : hlt ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000fe3f4 : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000017dbd6 : hlt ; dec dword ptr [rax] ; imul eax, dword ptr [rcx], 0 ; push rbp ; hlt ; jmp qword ptr [rax]
0x00000000000dfdfe : hlt ; dec dword ptr [rbx + rcx*4 + 0x14] ; and al, 0xe9 ; ret
0x00000000000dd9e1 : hlt ; dec dword ptr [rbx - 0x14f7dbbc] ; retf
0x000000000016d606 : hlt ; dec dword ptr [rcx] ; xchg eax, edi ; hlt ; jmp rdi
0x000000000016db9a : hlt ; dec dword ptr [rsi] ; ret 0xfff4
0x000000000017dc0e : hlt ; dec eax ; imul eax, dword ptr [rcx], 0 ; nop ; push rsi ; hlt ; jmp rax
0x000000000016d28a : hlt ; dec esi ; hlt ; call rcx
0x00000000000554af : hlt ; idiv bh ; call qword ptr [rax]
0x000000000016db96 : hlt ; inc dword ptr [rdi - 0x53] ; hlt ; dec dword ptr [rsi] ; ret 0xfff4
0x000000000016db66 : hlt ; inc dword ptr [rdx + rax*8 - 0xc] ; push qword ptr [rdx] ; ret 0xfff4
0x000000000016d9ae : hlt ; inc dword ptr [rsi + 0x54fff4b6] ; mov bh, 0xf4 ; jmp rbx
0x000000000016d3b2 : hlt ; jmp qword ptr [rax]
0x000000000016d78a : hlt ; jmp qword ptr [rbx + 0x22fff4a2]
0x0000000000193f8a : hlt ; jmp qword ptr [rcx]
0x0000000000193d3a : hlt ; jmp qword ptr [rdi]
0x000000000016d5b2 : hlt ; jmp qword ptr [rdx - 0x1b000b5c]
0x000000000016d78e : hlt ; jmp qword ptr [rdx]
0x000000000016d966 : hlt ; jmp qword ptr [rsi]
0x000000000016d97a : hlt ; jmp rax
0x000000000016d9b6 : hlt ; jmp rbx
0x000000000016d60a : hlt ; jmp rdi
0x000000000016d84e : hlt ; jmp rdx
0x000000000016d5d2 : hlt ; jmp rsi
0x000000000016d5b6 : hlt ; jmp rsp
0x0000000000154875 : hlt ; jne 0x154997 ; ret
0x0000000000154874 : hlt ; jne 0x154998 ; ret
0x00000000000da06e : hlt ; jne 0xda066 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000da06d : hlt ; jne 0xda067 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000010559e : hlt ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000017da76 : hlt ; ljmp ptr [rax + 0x162] ; hlt ; jmp qword ptr [rax]
0x000000000017d9de : hlt ; ljmp ptr [rax + 0x5c] ; add dword ptr [rax], eax ; ror byte ptr [rcx], 0xf4 ; jmp rax
0x000000000016d972 : hlt ; ljmp ptr [rbp + 0x54fff4b8] ; mov bh, 0xf4 ; jmp rax
0x00000000000648d0 : hlt ; loope 0x648d7 ; push rsi ; ret
0x000000000008abaa : hlt ; mov byte ptr [rdi + 4], al ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aaba : hlt ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000008a9ed : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000132e5a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012db0e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000bfd2f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000153e83 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000011051 : hlt ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a1cac : hlt ; or eax, dword ptr [rdx] ; add al, al ; sal edi, 1 ; call qword ptr [rdx]
0x0000000000002700 : hlt ; out -0x21, eax ; syscall
0x000000000017caad : hlt ; out dx, eax ; jmp qword ptr [rax]
0x0000000000196fac : hlt ; pop rsi ; add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x000000000019aeac : hlt ; popfq ; add dword ptr [rax], eax ; adc byte ptr [rsi], bh ; idiv bh ; retf
0x000000000017da5e : hlt ; push qword ptr [rax + 0x61] ; add dword ptr [rax], eax ; add byte ptr [rax], ch ; hlt ; jmp rax
0x000000000017dcce : hlt ; push qword ptr [rax - 0x5ffffe91] ; xchg eax, edx ; hlt ; jmp rax
0x000000000016d99e : hlt ; push qword ptr [rdx - 0x3c] ; hlt ; call qword ptr [rdi]
0x000000000016db6a : hlt ; push qword ptr [rdx] ; ret 0xfff4
0x000000000016d3ae : hlt ; push qword ptr [rsi + 0x63] ; hlt ; jmp qword ptr [rax]
0x000000000016d3aa : hlt ; push qword ptr [rsi + 0x63] ; hlt ; push qword ptr [rsi + 0x63] ; hlt ; jmp qword ptr [rax]
0x000000000017dd36 : hlt ; push rax ; jb 0x17dd45 ; add byte ptr [rax], dh ; fdiv st(4) ; jmp qword ptr [rax]
0x000000000007f658 : hlt ; ret
0x0000000000020ef8 : hlt ; ret 0
0x0000000000024380 : hlt ; retf
0x0000000000168e43 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000153e87 : hlt ; sub eax, edx ; ret
0x000000000016bb18 : hlt ; sub edi, 0xef77bdff ; call rcx
0x000000000016bb54 : hlt ; sub edi, 0xef81f4ff ; call rdi
0x0000000000003d99 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000cd0ab : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xcd04e ; pop rbx ; ret
0x000000000007b9e9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x000000000017b129 : idiv ah ; call qword ptr [rax - 0x1f000309]
0x000000000016e6fa : idiv bh ; adc ebx, dword ptr [rsi + rsi*8 - 1] ; sub byte ptr [rsi - 0xa], bl ; call qword ptr [rdi]
0x000000000017e436 : idiv bh ; and byte ptr [rdx - 0x785fffff], 0xf6 ; call qword ptr [rax]
0x00000000000554b0 : idiv bh ; call qword ptr [rax]
0x00000000000eae6c : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000006091d : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000045092 : idiv bh ; dec ecx ; ret
0x0000000000055b2b : idiv bh ; inc dword ptr [rcx] ; retf
0x0000000000049d5c : idiv bh ; jmp qword ptr [rax]
0x000000000016ae8d : idiv bh ; jmp rcx
0x000000000017e606 : idiv bh ; js 0x17e5be ; add dword ptr [rax], eax ; push rax ; ret 0xfff6
0x000000000017e39e : idiv bh ; mov al, 0x9f ; add dword ptr [rax], eax ; js 0x17e3a6 ; call rax
0x000000000017e69e : idiv bh ; mov al, 1 ; add byte ptr [rax], dl ; retf -0xa
0x000000000017e516 : idiv bh ; mov eax, 0x500001a8 ; mov bl, 0xf6 ; call rax
0x000000000017e956 : idiv bh ; mov eax, 0xc00001bc ; push rsi ; call rax
0x00000000000eb561 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x000000000017e60e : idiv bh ; nop ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; nop ; ret 0xfff6
0x00000000000bae4b : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000017e47e : idiv bh ; or byte ptr [rcx + rax - 0x973b000], ah ; jmp qword ptr [rax]
0x00000000000ebaf6 : idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000019aeb2 : idiv bh ; retf
0x000000000016e6fe : idiv bh ; sub byte ptr [rsi - 0xa], bl ; call qword ptr [rdi]
0x000000000016e7ce : idiv bh ; test eax, 0x1efff684 ; test dh, dh ; jmp rsp
0x000000000016ecd4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000000e2682 : idiv byte ptr [rax + 0x15] ; syscall
0x00000000000e2d9b : idiv byte ptr [rax + 0x55] ; syscall
0x00000000000fd42d : idiv byte ptr [rax + 0xe6] ; syscall
0x00000000000c13ff : idiv byte ptr [rax + 2] ; syscall
0x0000000000023ff6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000180215 : idiv cl ; call qword ptr [rax]
0x00000000000aae2e : idiv edi ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000ed305 : idiv edi ; add rsp, 0x408 ; ret
0x0000000000049dab : idiv edi ; call qword ptr [rax]
0x000000000017efb6 : idiv edi ; clc ; fiadd dword ptr [rcx] ; add al, al ; test esi, edi ; call qword ptr [rax]
0x000000000017eb26 : idiv edi ; clc ; mov dword ptr [rcx], 0xf72ed000 ; call qword ptr [rax]
0x00000000000557c8 : idiv edi ; dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000055794 : idiv edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000049874 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x000000000004508b : idiv edi ; dec ecx ; ret
0x000000000017efa6 : idiv edi ; enter 0x1da, 0 ; nop ; test dh, bh ; jmp rax
0x000000000017f026 : idiv edi ; enter 0x1dc, 0 ; push rax ; mov edi, dr0 ; jmp rax
0x0000000000089378 : idiv edi ; inc dword ptr [rbp - 0x77] ; retf
0x00000000000558c3 : idiv edi ; inc edi ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x000000000017eb16 : idiv edi ; jo 0x17eaea ; add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf7 ; jmp rax
0x0000000000055d1f : idiv edi ; lcall ptr [rax - 0x3a] ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000017ee4e : idiv edi ; mov ah, dl ; add dword ptr [rax], eax ; shl byte ptr [rbp - 9], 1 ; call rax
0x000000000017eb66 : idiv edi ; mov eax, 0x500001c8 ; xor bh, dh ; call rax
0x000000000016ef66 : idiv edi ; movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp qword ptr [rbp + 0x26fff700]
0x000000000016ef1e : idiv edi ; movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp qword ptr [rbp - 0x1d000900]
0x000000000016ef6a : idiv edi ; movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp qword ptr [rsi]
0x000000000016ef22 : idiv edi ; movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp rdx
0x000000000017ea4e : idiv edi ; nop ; ret 1
0x00000000000aadea : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000017efe6 : idiv edi ; or ah, bl ; add dword ptr [rax], eax ; push rax ; mov bh, dh ; jmp qword ptr [rax]
0x000000000017ed16 : idiv edi ; or bh, cl ; add dword ptr [rax], eax ; adc byte ptr [rax - 9], bl ; jmp qword ptr [rax]
0x000000000017ee8e : idiv edi ; or dh, dl ; add dword ptr [rax], eax ; and byte ptr [rcx - 9], ch ; jmp qword ptr [rax]
0x000000000017ef66 : idiv edi ; or dl, bl ; add dword ptr [rax], eax ; sar byte ptr [rdi - 9], 1 ; jmp qword ptr [rax]
0x000000000017ea46 : idiv edi ; pop rax ; ret 1
0x000000000017ec16 : idiv edi ; pop rax ; retf
0x000000000017ebd6 : idiv edi ; pop rax ; retf 1
0x00000000001a28da : idiv edi ; ret
0x000000000019da8a : idiv edi ; retf
0x000000000019e8aa : idiv edi ; retf 0
0x000000000017f22e : idiv edi ; shr ah, 1 ; add dword ptr [rax], eax ; sbb bh, 0xf7 ; call qword ptr [rax]
0x000000000017f1f6 : idiv edi ; shr dl, 1 ; add al, ah ; sal bh, cl ; call qword ptr [rax]
0x0000000000037116 : idiv esi ; ret
0x000000000017b12d : idiv esp ; jmp rax
0x000000000016ae8c : idiv r15b ; jmp rcx
0x000000000019e8a9 : idiv r15d ; retf 0
0x000000000017ebd5 : idiv rdi ; pop rax ; retf 1
0x0000000000037115 : idiv rsi ; ret
0x000000000017b128 : idiv spl ; call qword ptr [rax - 0x1f000309]
0x000000000008ae08 : imul al ; ret 0xf958
0x000000000002cc2f : imul al ; retf
0x000000000017cae5 : imul bh ; jmp qword ptr [rax]
0x000000000005f7f0 : imul cl ; ret
0x0000000000097d68 : imul cl ; ret 8
0x000000000016b3ed : imul dh ; call rcx
0x000000000016b3d1 : imul dh ; inc dword ptr [rsi + rsi*8] ; out dx, al ; jmp rsp
0x000000000016b35d : imul dh ; jmp rsp
0x00000000000be08c : imul dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000048cca : imul eax ; adc byte ptr [rcx - 3], bh ; dec dword ptr [rax + 0x29] ; ret
0x00000000000fa6c1 : imul eax ; cdq ; retf
0x00000000001044b6 : imul eax ; in al, dx ; ret 0xfff1
0x000000000007f6c9 : imul eax ; int1 ; retf -1
0x000000000004e98a : imul eax ; push rax ; sbb al, 0xfd ; dec dword ptr [rax + 0x29] ; ret
0x00000000000fffd8 : imul eax ; ret 0xf212
0x00000000000694d8 : imul eax ; ret 0xfb7d
0x00000000001099f8 : imul eax ; ret 0xfff4
0x0000000000086dcf : imul eax ; retf
0x0000000000074fef : imul eax ; stosd dword ptr [rdi], eax ; ret 0xfffa
0x00000000000da898 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0x9be9
0x00000000001529e1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000017dc11 : imul eax, dword ptr [rcx], 0 ; nop ; push rsi ; hlt ; jmp rax
0x000000000017dbd9 : imul eax, dword ptr [rcx], 0 ; push rbp ; hlt ; jmp qword ptr [rax]
0x000000000008dcd7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x000000000017db81 : imul eax, dword ptr [rcx], 0xf4502000 ; call rax
0x0000000000197ab5 : imul eax, dword ptr [rcx], 0xf566b800 ; jmp qword ptr [rcx]
0x000000000008d6d7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000154a12 : imul eax, edx ; shr rax, 0x38 ; ret
0x0000000000003091 : imul ebp, dword ptr [rsi], -0x74 ; int1 ; mov dr0, word ptr [rax] ; retf
0x000000000016b809 : imul ebp, edi, -1 ; out 0x6f, eax ; out dx, eax ; jmp rdi
0x00000000001586dc : imul ebp, esi, -1 ; dec dword ptr [rax - 0x77] ; retf -0x76b8
0x0000000000187f91 : imul ebp, esi, -1 ; pushfq ; add dword ptr [rax], eax ; add byte ptr [rsp], al ; ret
0x0000000000185d39 : imul ebx ; call qword ptr [rcx]
0x00000000001592de : imul ebx, dword ptr [rax], -0x18 ; ret
0x000000000003adc7 : imul ebx, dword ptr [rax], -0x47 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f7b65 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b736 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075904 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000865c4 : imul ecx, dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000f7b05 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e8d31 : imul ecx, dword ptr [rbx + 0x2c], 0 ; add rsp, 8 ; ret
0x0000000000077c73 : imul ecx, dword ptr [rbx + rsi], 0x58d4800 ; retf 0x3319
0x000000000012aee7 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000144eb7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x000000000008d3d7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000001a198b : imul ecx, dword ptr [rsi], 0x38 ; ret
0x000000000006bcd1 : imul ecx, edi, 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000017cb25 : imul edi ; jmp rax
0x00000000000f7a3f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017abb1 : imul edi, ebx, -1 ; nop ; insb byte ptr [rdi], dx ; sti ; call qword ptr [rax]
0x00000000000bd69b : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f7b35 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008cdd7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000001594d1 : imul edx, dword ptr [rbx + 0x25], 0 ; jne 0x1594bf ; pop rbx ; ret
0x00000000000bc4f3 : imul edx, dword ptr [rbx], 0x8948002f ; ret 0x8d48
0x000000000008cad7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000008c7d7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x00000000000c3081 : imul edx, ebp, -0xb ; dec dword ptr [rax - 0x77] ; ret 0x1ceb
0x0000000000002be4 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003b54 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000011d53b : imul esi, dword ptr [rdx], 0x5b90fff0 ; ret
0x0000000000045091 : imul esi, esi, -1 ; dec ecx ; ret
0x000000000016d2a1 : imul esi, esp, -1 ; mov ch, 0x68 ; hlt ; call qword ptr [rsi]
0x0000000000138904 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000159764 : imul esp, dword ptr [rip - 0x7cb800], 1 ; ja 0x159779 ; ret
0x0000000000098c6c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000154a11 : imul rax, rdx ; shr rax, 0x38 ; ret
0x000000000017bd4d : in al, -0x15 ; call qword ptr [rax]
0x000000000017b47d : in al, -0x16 ; jmp rax
0x000000000018ee9c : in al, -0x23 ; add byte ptr [rax], al ; loopne 0x18eec4 ; int1 ; call qword ptr [rdx]
0x00000000000c2049 : in al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f2654 : in al, -0x64 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000016b3ec : in al, -0xa ; out dx, al ; call rcx
0x000000000016b3d0 : in al, -0xa ; out dx, al ; inc dword ptr [rsi + rsi*8] ; out dx, al ; jmp rsp
0x000000000016b360 : in al, -0xa ; out dx, al ; jmp rsp
0x0000000000132e3a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000009de6e : in al, -0xd ; ret
0x000000000016ca85 : in al, -0xe ; call rax
0x000000000016ca81 : in al, -0xe ; jmp qword ptr [rax - 0x2f000d1c]
0x000000000016c5a5 : in al, -0xf ; call qword ptr [rax]
0x000000000016c595 : in al, -0xf ; inc edi ; in al, -0xf ; jmp rax
0x000000000016c599 : in al, -0xf ; jmp rax
0x000000000016c5b1 : in al, -0xf ; push qword ptr [rax] ; in eax, -0xf ; call rax
0x000000000005666d : in al, -1 ; push rsi ; ret 0xf10
0x000000000019099c : in al, -8 ; add byte ptr [rax], al ; mov al, 0xa0 ; jmp rsp
0x00000000001548a8 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000ba57d : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018229c : in al, 0x11 ; add byte ptr [rax], al ; jnp 0x182294 ; call qword ptr [rdx]
0x00000000000c8abb : in al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008a89b : in al, 0x41 ; cmp eax, ecx ; je 0x8a887 ; ret
0x000000000016a281 : in al, 0x4c ; pop rax ; retf
0x000000000019709c : in al, 0x5f ; add dword ptr [rax], eax ; jo 0x1970ed ; cmc ; jmp qword ptr [rdx]
0x000000000009893c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000009e226 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000011e100 : in al, 0x75 ; or eax, 0x5c415d5b ; ret
0x00000000000bfa52 : in al, 0x75 ; retf
0x000000000002cc32 : in al, 0xb ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000191e9c : in al, 0xd ; add dword ptr [rax], eax ; shr dl, 0xf2 ; jmp qword ptr [rcx]
0x0000000000061085 : in al, 0xf ; lahf ; ret 0x2941
0x00000000000997a8 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000001a76f8 : in al, 7 ; add byte ptr [rax], al ; ret
0x00000000001823a4 : in al, dx ; adc al, byte ptr [rax] ; add al, bh ; jl 0x18239c ; jmp qword ptr [rdi]
0x00000000000e25e6 : in al, dx ; adc al, ch ; ret
0x00000000000f8b56 : in al, dx ; adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x0000000000080219 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; insd dword ptr [rdi], dx ; retf 7
0x000000000006dec3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007eec4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x7dd
0x000000000006b294 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x919
0x0000000000040a37 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xb
0x000000000008048c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x7c7
0x00000000000f498c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x82
0x00000000000809c0 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; xchg eax, esi ; ret 7
0x000000000018fd55 : in al, dx ; add byte ptr [rax], al ; sbb bl, ch ; int1 ; jmp qword ptr [rbx]
0x00000000001954a4 : in al, dx ; add dword ptr [r8], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000017f231 : in al, dx ; add dword ptr [rax], eax ; sbb bh, 0xf7 ; call qword ptr [rax]
0x0000000000144210 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000159e96 : in al, dx ; call qword ptr [rax]
0x000000000018647a : in al, dx ; call qword ptr [rcx]
0x0000000000166a0e : in al, dx ; call qword ptr [rdi]
0x0000000000159e8e : in al, dx ; call rax
0x0000000000186592 : in al, dx ; call rdi
0x0000000000002d9c : in al, dx ; clc ; ret
0x000000000017a111 : in al, dx ; cld ; inc dword ptr [rax - 0x12] ; cld ; jmp qword ptr [rax]
0x0000000000180d3d : in al, dx ; cld ; jmp qword ptr [rax]
0x000000000017e0ad : in al, dx ; cmc ; call rax
0x0000000000194ea4 : in al, dx ; cmp eax, 0xd1480001 ; hlt ; jmp qword ptr [rcx]
0x000000000019b8a4 : in al, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], dl ; call qword ptr [rcx]
0x000000000002970f : in al, dx ; cwde ; add byte ptr [rax], al ; add al, ch ; push rdi ; retf
0x000000000017bec6 : in al, dx ; dec dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; nop ; mov ah, ch ; jmp qword ptr [rax]
0x000000000017bfd6 : in al, dx ; dec eax ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; jo 0x17bfbc ; in al, dx ; jmp rax
0x0000000000045469 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000017bf0e : in al, dx ; inc dword ptr [rax + 0x700000a8] ; xchg eax, ebp ; in al, dx ; call rax
0x00000000000c9e9d : in al, dx ; jl 0xc9ed9 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017bdae : in al, dx ; jmp qword ptr [rax]
0x0000000000166916 : in al, dx ; jmp qword ptr [rcx]
0x000000000018608a : in al, dx ; jmp qword ptr [rdx]
0x0000000000166b62 : in al, dx ; jmp qword ptr [rip + 0x17ffecb6]
0x000000000017bfde : in al, dx ; jmp rax
0x00000000001861d2 : in al, dx ; jmp rdi
0x0000000000125ceb : in al, dx ; js 0x125cf4 ; add byte ptr [rax], al ; syscall
0x000000000017bfa6 : in al, dx ; lcall ptr [rax - 0x54] ; add byte ptr [rax], al ; ror bh, 1 ; in al, dx ; call rax
0x0000000000166912 : in al, dx ; ljmp ptr [rsi] ; outsd dx, dword ptr [rsi] ; in al, dx ; jmp qword ptr [rcx]
0x00000000000e9b53 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000edb96 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000012db0a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008a5d3 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000011fec4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000008aa5a : in al, dx ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000013323a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000084edb : in al, dx ; or al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000008aee7 : in al, dx ; or al, ch ; add dl, byte ptr [rsi - 7] ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c9f86 : in al, dx ; or al, ch ; ret
0x0000000000123c0e : in al, dx ; or al, ch ; retf
0x000000000011763f : in al, dx ; or al, ch ; retf 0x8c
0x000000000006bd53 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000007ee17 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000144f34 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000122a0d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000008ae05 : in al, dx ; or byte ptr [rcx], dh ; imul al ; ret 0xf958
0x00000000000e23a2 : in al, dx ; or dh, dh ; ret 0x7540
0x000000000017bdc6 : in al, dx ; push qword ptr [rax + 0x300000a0] ; pop rbx ; in al, dx ; jmp qword ptr [rax]
0x0000000000166952 : in al, dx ; push qword ptr [rip + 0x10ffecb5] ; mov bl, 0xec ; call qword ptr [rax]
0x0000000000159498 : in al, dx ; push rbx ; ret
0x000000000008a79b : in al, dx ; ret
0x000000000018d3a4 : in al, dx ; ret 0
0x00000000001044b8 : in al, dx ; ret 0xfff1
0x000000000018dca4 : in al, dx ; retf
0x000000000016a46d : in al, dx ; retf -0x51ce
0x000000000019dba4 : in al, dx ; retf 1
0x00000000000da608 : in al, dx ; retf 9
0x00000000000f0252 : in al, dx ; sbb al, ch ; push rdi ; retf 0
0x00000000000ede3f : in al, dx ; sbb al, ch ; retf -0x32e
0x00000000000e2081 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018fdd1 : in al, dx ; sti ; jmp qword ptr [rbx]
0x000000000002951c : in al, dx ; sub byte ptr [rbx + rcx*4 + 0x35], cl ; retf
0x00000000000e848f : in al, dx ; test al, 0 ; add byte ptr [rax], al ; syscall
0x000000000019a3a4 : in al, dx ; xchg eax, edx ; add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000016a39e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x16a331 ; ret 0x48f
0x000000000016a39d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x16a332 ; ret 0x48f
0x00000000001169c3 : in al, dx ; xor dh, dh ; ret 0xc707
0x0000000000121a60 : in al, dx ; xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009fa32 : in eax, -0x15 ; cwde ; nop dword ptr [rax] ; ret
0x0000000000052f1f : in eax, -0x17 ; retf
0x0000000000168afa : in eax, -0x1b ; retf 0x2a91
0x000000000016a959 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000005375f : in eax, -0x21 ; loopne 0x536f0 ; ret 0xe680
0x0000000000132eba : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016caa1 : in eax, -0xe ; jmp qword ptr [rax]
0x000000000016ca9d : in eax, -0xe ; push rax ; in eax, -0xe ; jmp qword ptr [rax]
0x000000000016c5b5 : in eax, -0xf ; call rax
0x000000000016c5c9 : in eax, -0xf ; call rsp
0x000000000016c5cd : in eax, -0xf ; jmp rsp
0x0000000000066273 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000056a87 : in eax, -1 ; inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000169e21 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000c14d0 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x0000000000168aa3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000002261 : in eax, 0x2d ; pmuludq mm4, mm7 ; retf
0x000000000007d7c2 : in eax, 0x32 ; add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x0000000000048912 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000fd4a5 : in eax, 0x5d ; ret
0x00000000000ea4f7 : in eax, 0x61 ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000167d39 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000011a412 : in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x0000000000003b56 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000af523 : in eax, 0xf ; je 0xaf548 ; add rax, 2 ; ret
0x000000000005092b : in eax, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000041a25 : in eax, dx ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x0000000000051ea1 : in eax, dx ; add al, byte ptr [rcx] ; ret 0x2945
0x000000000018fdcd : in eax, dx ; add byte ptr [rax], al ; add ah, ch ; sti ; jmp qword ptr [rbx]
0x000000000017c909 : in eax, dx ; add byte ptr [rax], al ; add ch, 0xef ; jmp qword ptr [rax]
0x000000000018fdfd : in eax, dx ; add byte ptr [rax], al ; add dh, ch ; sti ; jmp rsi
0x0000000000063359 : in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000c5a1c : in eax, dx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x0000000000039e8c : in eax, dx ; add dword ptr [rcx - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000003f066 : in eax, dx ; add dword ptr [rcx - 0x77], ecx ; fisttp word ptr [rax - 0x77] ; ret
0x0000000000107afa : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073cc5 : in eax, dx ; call 0x207ab
0x000000000017c076 : in eax, dx ; call rax
0x0000000000071a36 : in eax, dx ; cli ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000199e39 : in eax, dx ; cmc ; call rsp
0x000000000017ddcd : in eax, dx ; hlt ; call qword ptr [rax]
0x000000000017ddbd : in eax, dx ; hlt ; call rax
0x000000000017c07e : in eax, dx ; jmp qword ptr [rax]
0x000000000017c0ce : in eax, dx ; jmp rax
0x0000000000158e82 : in eax, dx ; jne 0x158e71 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001592ef : in eax, dx ; jne 0x1592d1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ff449 : in eax, dx ; jne 0xff461 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009d5b2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000168065 : in eax, dx ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x1680d6 ; salc ; retf
0x000000000009cf79 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009cf8f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009cfb1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009cfcf : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009cfef : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009d015 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009d031 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009d051 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009d071 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009d097 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009d0b9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009d0d7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009d0f7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009d113 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009d133 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009d153 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009d173 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009d199 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009d1e9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009cebf : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009cedd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009cefd : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009cf1f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009cf3f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009cf5f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009cdf5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009ce07 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009ce1d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ce35 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009ce4b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ce5d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009ce7b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ce87 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009ce9d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009cde1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000012d91a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000002f6b2 : in eax, dx ; mov rdi, rbp ; mov eax, 3 ; syscall
0x00000000001332ba : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d3394 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000148aa0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000043e0b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000017c245 : in eax, dx ; out dx, al ; call qword ptr [rax]
0x00000000000f00fa : in eax, dx ; pop rax ; pop rdi ; call rax
0x000000000015972a : in eax, dx ; pop rbx ; ret
0x000000000006fdb2 : in eax, dx ; ret
0x0000000000168878 : in eax, dx ; retf
0x00000000000e18d3 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; retf -0x7601
0x000000000009d702 : in eax, dx ; sub rax, 1 ; ret
0x000000000008a8da : in eax, dx ; xor eax, eax ; ret
0x0000000000151fc8 : inc bl ; cmp dl, 1 ; jb 0x151fda ; mov byte ptr [rdi], cl ; ret
0x0000000000190f0d : inc byte ptr [rax] ; add byte ptr [rax - 0x55], dh ; call rdi
0x00000000000f0961 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010c154 : inc byte ptr [rax] ; retf 0x3b9a
0x00000000000426f9 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x0000000000154ac7 : inc byte ptr [rbx - 0x71f0ff02] ; syscall
0x0000000000029e16 : inc byte ptr [rbx] ; je 0x29e25 ; pop rbx ; ret
0x00000000000669b5 : inc byte ptr [rcx - 0x77] ; fisttp word ptr [rax - 0x77] ; ret
0x000000000017f589 : inc byte ptr [rcx] ; add byte ptr [rax], al ; clc ; call rax
0x00000000000c602e : inc byte ptr [rcx] ; add byte ptr [rax], al ; lea rax, qword ptr [rcx + rdx*8] ; jmp 0xc6004
0x0000000000075439 : inc byte ptr [rdx] ; je 0x7544f ; mov dword ptr [rdi], edx ; ret
0x000000000003b474 : inc dword ptr [r9 - 0x7d] ; clc ; adc byte ptr [rcx + 0xf], cl ; ret
0x000000000017a41b : inc dword ptr [rax + 0x10fffb3e] ; xor ebx, edi ; call rax
0x000000000017e0c7 : inc dword ptr [rax + 0x18f] ; hlt ; cmc ; call qword ptr [rax]
0x000000000017a4e7 : inc dword ptr [rax + 0x1c] ; sti ; call qword ptr [rax - 0x1f0004e3]
0x000000000016c657 : inc dword ptr [rax + 0x20fffbdb] ; retf
0x000000000017a53b : inc dword ptr [rax + 0x23] ; sti ; call qword ptr [rax - 0x1f0004dc]
0x000000000017e0a7 : inc dword ptr [rax + 0x3000018e] ; in al, dx ; cmc ; call rax
0x000000000017a3ff : inc dword ptr [rax + 0x31] ; sti ; inc dword ptr [rax] ; xor edi, ebx ; jmp rax
0x000000000017a3c3 : inc dword ptr [rax + 0x33] ; sti ; jmp qword ptr [rax]
0x000000000017a467 : inc dword ptr [rax + 0x34] ; sti ; jmp qword ptr [rax]
0x000000000017a44f : inc dword ptr [rax + 0x38] ; sti ; call qword ptr [rax]
0x0000000000180fcf : inc dword ptr [rax + 0x400000f1] ; loop 0x180fdc ; call rax
0x00000000001800a7 : inc dword ptr [rax + 0x4000024d] ; ret
0x000000000017a3bf : inc dword ptr [rax + 0x40fffb31] ; xor edi, ebx ; jmp qword ptr [rax]
0x000000000017a6b3 : inc dword ptr [rax + 0x48] ; sti ; call qword ptr [rax - 0x1f0004b7]
0x000000000017a707 : inc dword ptr [rax + 0x4f] ; sti ; call qword ptr [rax - 0x1f0004b0]
0x000000000017a567 : inc dword ptr [rax + 0x5d] ; sti ; jmp qword ptr [rax]
0x000000000017a68f : inc dword ptr [rax + 0x5f] ; sti ; call qword ptr [rax]
0x000000000017d83f : inc dword ptr [rax + 0x60000152] ; jo 0x17d842 ; call rax
0x000000000017d83e : inc dword ptr [rax + 0x60000152] ; jo 0x17d843 ; call rax
0x000000000016c787 : inc dword ptr [rax + 0x60] ; call qword ptr [rax - 0x1f000d9e]
0x000000000017bf0f : inc dword ptr [rax + 0x700000a8] ; xchg eax, ebp ; in al, dx ; call rax
0x000000000017c3b7 : inc dword ptr [rax + 0x700000ca] ; xor bh, ch ; call rax
0x00000000000ca015 : inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000010feb6 : inc dword ptr [rax + rax*8 - 0x7cb7608c] ; ret
0x00000000000fde15 : inc dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000017a8bf : inc dword ptr [rax + rdx*4 - 5] ; call rsp
0x000000000017c93f : inc dword ptr [rax - 0x11] ; add byte ptr [rax], al ; retf
0x000000000017a113 : inc dword ptr [rax - 0x12] ; cld ; jmp qword ptr [rax]
0x000000000017a0f3 : inc dword ptr [rax - 0x21] ; cld ; jmp qword ptr [rax]
0x000000000017b137 : inc dword ptr [rax - 0x2f000305] ; cld ; cld ; jmp qword ptr [rax]
0x000000000017a6c3 : inc dword ptr [rax - 0x2f0004b3] ; sti ; jmp qword ptr [rax]
0x000000000017a54b : inc dword ptr [rax - 0x2f0004d8] ; sub ebx, edi ; jmp qword ptr [rax]
0x000000000017a4f7 : inc dword ptr [rax - 0x2f0004df] ; and bh, bl ; jmp qword ptr [rax]
0x000000000017f90f : inc dword ptr [rax - 0x2ffffde9] ; ret 0xfff8
0x000000000017d0b7 : inc dword ptr [rax - 0x3ffffee2] ; mov ch, 0xf0 ; call rax
0x000000000017ac43 : inc dword ptr [rax - 0x4a] ; sti ; call rax
0x000000000017ae5b : inc dword ptr [rax - 0x4d] ; sti ; jmp rax
0x000000000004bf53 : inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000016caab : inc dword ptr [rax - 0x4f000d1a] ; out 0xf2, al ; jmp rax
0x000000000017a06b : inc dword ptr [rax - 0x54] ; cld ; push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000017a053 : inc dword ptr [rax - 0x5a] ; cld ; call qword ptr [rax]
0x000000000016ca7f : inc dword ptr [rax - 0x5f000d1c] ; in al, -0xe ; call rax
0x000000000016c50f : inc dword ptr [rax - 0x5f000ea8] ; pop rax ; int1 ; call rax
0x0000000000180ae7 : inc dword ptr [rax - 0x5ffffd74] ; sar edx, cl ; call rax
0x000000000017fbe7 : inc dword ptr [rax - 0x5ffffdd7] ; cmp al, 0xf9 ; call rax
0x000000000017e437 : inc dword ptr [rax - 0x5ffffe5e] ; xchg esi, esi ; call qword ptr [rax]
0x000000000017a923 : inc dword ptr [rax - 0x6d] ; sti ; call rax
0x000000000017bc97 : inc dword ptr [rax - 0x6fffff69] ; retf
0x000000000017a74b : inc dword ptr [rax - 0x71] ; sti ; call rax
0x00000000000c4638 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000005bbd2 : inc dword ptr [rax - 0x78] ; xor byte ptr [rcx - 0x7d], cl ; ret
0x000000000017a417 : inc dword ptr [rax - 0x7f0004c4] ; sti ; call qword ptr [rax]
0x000000000016c79b : inc dword ptr [rax - 0x7f000db9] ; ret 0xfffc
0x000000000017b3bf : inc dword ptr [rax - 0x7fffff9c] ; jle 0x17b3b9 ; jmp rax
0x000000000017decf : inc dword ptr [rax - 0x80] ; add dword ptr [rax], eax ; sal byte ptr [rcx], 0xf5 ; call rax
0x0000000000049dd9 : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x00000000000554d3 : inc dword ptr [rax - 0x92743] ; jmp qword ptr [rax]
0x000000000017b127 : inc dword ptr [rax - 0xa] ; cld ; call qword ptr [rax - 0x1f000309]
0x0000000000154ba3 : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0x86e9
0x00000000001575d6 : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8be9
0x00000000000483e6 : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; retf -0x46b8
0x000000000009f34b : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000e4ae8 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00000000000db684 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005cbe2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000a85eb : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000015488d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000150927 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000f09f1 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000190fd5 : inc dword ptr [rax] ; add byte ptr [rax], cl ; scasd eax, dword ptr [rdi] ; jmp rcx
0x0000000000032edc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000017f6b7 : inc dword ptr [rax] ; add eax, 0x57700002 ; clc ; jmp qword ptr [rax]
0x000000000017d7bf : inc dword ptr [rax] ; add qword ptr [r8], r8 ; push rcx ; jmp qword ptr [rax]
0x000000000017a46f : inc dword ptr [rax] ; cmp bl, bh ; call rax
0x000000000016ca57 : inc dword ptr [rax] ; jrcxz 0x16ca51 ; jmp qword ptr [rax]
0x000000000016ca56 : inc dword ptr [rax] ; jrcxz 0x16ca52 ; jmp qword ptr [rax]
0x000000000017a0fb : inc dword ptr [rax] ; jrcxz 0x17a0ff ; jmp rax
0x000000000016c7d7 : inc dword ptr [rax] ; loop 0x16c7db ; jmp rax
0x000000000017a07b : inc dword ptr [rax] ; mov al, 0xfc ; push rax ; mov al, 0xfc ; jmp rax
0x000000000017ae4b : inc dword ptr [rax] ; mov ch, 0xfb ; call qword ptr [rax + 0x20fffbb4]
0x000000000017a953 : inc dword ptr [rax] ; mov dr1, ebx ; call qword ptr [rax + 0x20fffb8d]
0x000000000017ac33 : inc dword ptr [rax] ; mov eax, 0xb790fffb ; sti ; jmp qword ptr [rax]
0x0000000000033bc1 : inc dword ptr [rax] ; or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x000000000016cd3e : inc dword ptr [rax] ; or byte ptr [rdx], dl ; lcall ptr [rax] ; adc dh, bl ; call rdi
0x0000000000100e90 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x000000000016cac3 : inc dword ptr [rax] ; out -0xe, eax ; call qword ptr [rax]
0x000000000017d8e7 : inc dword ptr [rax] ; push rsi ; add dword ptr [rax], eax ; add bl, dh ; jmp qword ptr [rax]
0x00000000000e9b01 : inc dword ptr [rax] ; ret
0x000000000017c2c7 : inc dword ptr [rax] ; ret 0
0x000000000017ec0f : inc dword ptr [rax] ; retf
0x000000000016c903 : inc dword ptr [rax] ; sal dl, cl ; call qword ptr [rax]
0x000000000017ab53 : inc dword ptr [rax] ; test bh, bl ; push qword ptr [rax - 0x7d] ; sti ; jmp rax
0x000000000017a73b : inc dword ptr [rax] ; xchg eax, ecx ; sti ; call qword ptr [rax + 0x20fffb90]
0x000000000016c647 : inc dword ptr [rax] ; xlatb ; sti ; jmp qword ptr [rax]
0x000000000017a487 : inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x000000000017a403 : inc dword ptr [rax] ; xor edi, ebx ; jmp rax
0x0000000000105d36 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8945
0x00000000000415e2 : inc dword ptr [rbp + 0x5b0974c0] ; ret
0x000000000016b5f3 : inc dword ptr [rbp - 0x280010f7] ; or ch, bh ; call rdi
0x0000000000037163 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x0000000000109abf : inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000109e61 : inc dword ptr [rbp - 0x76a18740] ; ret
0x000000000012869d : inc dword ptr [rbp - 0x76b18a40] ; ret
0x0000000000066f30 : inc dword ptr [rbp - 0x76df8b40] ; ret
0x0000000000088f12 : inc dword ptr [rbp - 0x77] ; ret 0x3845
0x0000000000087ec5 : inc dword ptr [rbp - 0x77] ; retf
0x000000000004a969 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x8f ; ret 2
0x0000000000052f1a : inc dword ptr [rbp - 0x7b] ; sal byte ptr [rbp - 0x1b], 0xe9 ; retf
0x00000000000ea4af : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000ea4fa : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000000b8732 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000118113 : inc dword ptr [rbx + rdi + 0x50] ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xffe9
0x000000000016c127 : inc dword ptr [rbx - 0x1c7b0011] ; out dx, eax ; call qword ptr [rdi]
0x0000000000031d5e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000057b80 : inc dword ptr [rbx - 0x4ef43] ; jmp qword ptr [rax]
0x000000000007f2a7 : inc dword ptr [rbx - 0x76b7f820] ; ret 0x8d48
0x000000000006218c : inc dword ptr [rbx - 0x79f0f608] ; retf 4
0x000000000010afdf : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x0000000000037a3a : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000009e008 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009df2f : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000c8992 : inc dword ptr [rcx + 0x39] ; ret
0x00000000000a8643 : inc dword ptr [rcx + 0x39] ; retf
0x000000000006464e : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x0000000000127b84 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x0000000000056a89 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000dc035 : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000004bea8 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000000b17e1 : inc dword ptr [rcx + 8] ; retf -0x76b8
0x00000000000f2185 : inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000000653a8 : inc dword ptr [rcx + rcx*4 - 2] ; call 0x61e66
0x00000000000661bf : inc dword ptr [rcx - 0x43] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x62469
0x00000000000fd09b : inc dword ptr [rcx - 0x47] ; retf 0
0x000000000003ad73 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x000000000003d684 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000a78a4 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x9066
0x0000000000053cc5 : inc dword ptr [rcx - 0x75] ; push rsi ; add al, 0x83 ; ret
0x000000000005f7ed : inc dword ptr [rcx - 0x77] ; imul cl ; ret
0x000000000002ad9b : inc dword ptr [rcx - 0x77] ; ret
0x0000000000027cf4 : inc dword ptr [rcx - 0x77] ; ret 0x848b
0x0000000000028da6 : inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000000cf390 : inc dword ptr [rcx - 0x77] ; retf
0x000000000004ce0b : inc dword ptr [rcx - 0x77] ; rol byte ptr [rcx], 1 ; retf -0x7277
0x0000000000089550 : inc dword ptr [rcx - 0x77] ; rol dword ptr [rbp - 0x77], 1 ; fiadd dword ptr [rbp + 0x38] ; retf -0x238e
0x0000000000058a34 : inc dword ptr [rcx - 0x77] ; ror dword ptr [rax - 0x3f], cl ; stc ; add al, byte ptr [rcx] ; retf -0x2fd7
0x000000000003b475 : inc dword ptr [rcx - 0x7d] ; clc ; adc byte ptr [rcx + 0xf], cl ; ret
0x0000000000053080 : inc dword ptr [rcx - 0x7d] ; ret
0x0000000000078155 : inc dword ptr [rcx - 0x7f] ; retf
0x0000000000109d76 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000017f5d9 : inc dword ptr [rcx] ; add byte ptr [rax + 0x45], al ; clc ; call rax
0x0000000000159769 : inc dword ptr [rcx] ; ja 0x159774 ; ret
0x00000000001a4314 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001a423e : inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x000000000004fa5b : inc dword ptr [rcx] ; ret
0x00000000000cab9c : inc dword ptr [rcx] ; ret 0x5589
0x000000000005567f : inc dword ptr [rcx] ; retf
0x00000000000b967b : inc dword ptr [rdi + rcx + 0x49] ; ret
0x000000000017adb7 : inc dword ptr [rdi + rsi*4 - 5] ; call rsp
0x000000000016db97 : inc dword ptr [rdi - 0x53] ; hlt ; dec dword ptr [rsi] ; ret 0xfff4
0x000000000017a143 : inc dword ptr [rdx + 0x5e] ; std ; call qword ptr [rdx]
0x0000000000188163 : inc dword ptr [rdx + 1] ; add byte ptr [rax], al ; add al, 0x28 ; ret 1
0x000000000016db67 : inc dword ptr [rdx + rax*8 - 0xc] ; push qword ptr [rdx] ; ret 0xfff4
0x000000000017acef : inc dword ptr [rdx - 0x48] ; sti ; call rdx
0x000000000017a7f7 : inc dword ptr [rdx - 0x6f] ; sti ; call rdx
0x000000000017a7e7 : inc dword ptr [rdx] ; xchg eax, ebx ; sti ; call qword ptr [rdx + 0x22fffb92]
0x000000000014b29d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000001876ab : inc dword ptr [rsi + 0x4000001] ; clc ; retf
0x000000000016d9af : inc dword ptr [rsi + 0x54fff4b6] ; mov bh, 0xf4 ; jmp rbx
0x000000000017a1d7 : inc dword ptr [rsi + 0x66] ; std ; jmp rsi
0x000000000016b3d3 : inc dword ptr [rsi + rsi*8] ; out dx, al ; jmp rsp
0x000000000017ac8b : inc dword ptr [rsi - 0x4b] ; sti ; call rsi
0x000000000017a793 : inc dword ptr [rsi - 0x72] ; sti ; call rsi
0x000000000016dda7 : inc dword ptr [rsi] ; cmp al, 0xf5 ; call qword ptr [rax]
0x000000000017ac7b : inc dword ptr [rsi] ; mov bh, 0xfb ; call qword ptr [rsi + 0x26fffbb6]
0x000000000017a783 : inc dword ptr [rsi] ; nop ; sti ; call qword ptr [rsi + 0x26fffb8f]
0x000000000017b147 : inc eax ; add ch, bh ; call qword ptr [rax]
0x000000000016c767 : inc eax ; call qword ptr [rax]
0x000000000016c707 : inc eax ; cmp esi, edx ; call rax
0x000000000017c5ff : inc eax ; fiadd dword ptr [rax] ; add byte ptr [rax + 0x7a], al ; out dx, eax ; jmp qword ptr [rax]
0x000000000016ca9b : inc eax ; in eax, -0xe ; push rax ; in eax, -0xe ; jmp qword ptr [rax]
0x0000000000180717 : inc eax ; jne 0x180725 ; add byte ptr [rax], ah ; pop rbx ; cli ; jmp rax
0x00000000001807b7 : inc eax ; js 0x1807c5 ; add al, ah ; cli ; call qword ptr [rax]
0x0000000000170863 : inc eax ; lodsb al, byte ptr [rsi] ; cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000170867 : inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000016ca4f : inc eax ; loop 0x16ca49 ; jmp rax
0x000000000016ca4e : inc eax ; loop 0x16ca4a ; jmp rax
0x000000000017c16f : inc eax ; mov eax, 0xd4b00000 ; out dx, al ; jmp rax
0x000000000017a0db : inc eax ; mov eax, 0xd5f0fffc ; cld ; call rax
0x000000000017ac23 : inc eax ; mov ecx, 0xb950fffb ; sti ; jmp rax
0x0000000000170843 : inc eax ; mov edx, edi ; call rax
0x000000000017e02f : inc eax ; mov word ptr [rcx], es ; add byte ptr [rax - 0x24], dh ; cmc ; jmp rax
0x000000000016cae7 : inc eax ; out -0xe, eax ; jmp rax
0x0000000000180257 : inc eax ; pop rcx ; add al, byte ptr [rax] ; nop ; std ; stc ; call qword ptr [rax]
0x000000000017a6d3 : inc eax ; push rdx ; sti ; call qword ptr [rax]
0x000000000017ea5f : inc eax ; ret 1
0x000000000016c61f : inc eax ; retf
0x000000000017c51f : inc eax ; rol dword ptr [rax], cl ; add byte ptr [rax + 0x51], dh ; out dx, eax ; jmp rax
0x000000000016c92f : inc eax ; sal dl, cl ; call rax
0x000000000016c8f3 : inc eax ; sal edx, 1 ; call rax
0x0000000000032ef9 : inc eax ; shr eax, 0x1f ; ret
0x000000000017a507 : inc eax ; sti ; call qword ptr [rax]
0x000000000017bd47 : inc eax ; wait ; add byte ptr [rax], al ; push rax ; in al, -0x15 ; call qword ptr [rax]
0x000000000017fcef : inc eax ; xor byte ptr [rdx], al ; add al, dl ; pop rdi ; stc ; call qword ptr [rax]
0x000000000016b593 : inc ebp ; or ch, bh ; call rdi
0x000000000014a23c : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000016ecd9 : inc ebx ; add dh, bh ; jmp rdi
0x00000000001255ba : inc ebx ; mov eax, 0xffffffff ; ret
0x0000000000034e3e : inc ebx ; mov eax, dword ptr [rip + 0x377346] ; ret
0x0000000000034e9c : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000072cfc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000154379 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000b2c7d : inc edi ; and byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000016c597 : inc edi ; in al, -0xf ; jmp rax
0x00000000000558c5 : inc edi ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x00000000000e8e89 : inc esi ; jmp qword ptr [r8]
0x000000000017ac6b : inc esi ; mov eax, 0xb856fffb ; sti ; jmp rsi
0x0000000000056f5a : inc esi ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000016b94f : inc esp ; sub edi, 0xef8313ff ; call qword ptr [rbx]
0x00000000000cab9b : inc qword ptr [rcx] ; ret 0x5589
0x0000000000187524 : insb byte ptr [rdi], dx ; add byte ptr fs:[rax], al ; fmul dword ptr [rax - 0x12] ; call qword ptr [rax]
0x00000000000c5a90 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000001456b4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000197d45 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; call 0x221972d6
0x0000000000195524 : insb byte ptr [rdi], dx ; add dword ptr [rax], r8d ; or dl, ah ; hlt ; call qword ptr [rax]
0x0000000000197624 : insb byte ptr [rdi], dx ; add dword ptr gs:[rax], eax ; js 0x197688 ; cmc ; call qword ptr [rax]
0x00000000000fdd00 : insb byte ptr [rdi], dx ; add eax, 0x450f4800 ; ret 0xf6c3
0x00000000000ab26e : insb byte ptr [rdi], dx ; add eax, 0xdf894801 ; call 0x127cf8
0x00000000000bb8b8 : insb byte ptr [rdi], dx ; and al, 0x30 ; mov rdi, rbx ; call r12
0x0000000000032f7b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003300a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000032fe8 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000033eaa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000033039 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000032f1a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000018e924 : insb byte ptr [rdi], dx ; fadd dword ptr [rax] ; add al, ch ; or esi, ecx ; jmp rsi
0x000000000018ee24 : insb byte ptr [rdi], dx ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x000000000016a95e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000198624 : insb byte ptr [rdi], dx ; jne 0x19862f ; add byte ptr [rax - 0x72], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000198b24 : insb byte ptr [rdi], dx ; jp 0x198b2f ; add al, bh ; sahf ; cmc ; call qword ptr [rdx]
0x000000000018c824 : insb byte ptr [rdi], dx ; mov bh, 0 ; add byte ptr [rax + 0x73], bh ; out dx, eax ; call qword ptr [rdx]
0x0000000000074eb0 : insb byte ptr [rdi], dx ; mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x0000000000001e81 : insb byte ptr [rdi], dx ; mov dl, 0xcd ; push r13 ; salc ; retf 0x559a
0x000000000018d824 : insb byte ptr [rdi], dx ; mov dword ptr [rax], 0xfcc4d800 ; call qword ptr [rax]
0x00000000001191b2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003708 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000e1633 : insb byte ptr [rdi], dx ; movsxd rdi, r14d ; mov eax, 3 ; syscall
0x0000000000196924 : insb byte ptr [rdi], dx ; pop rax ; add dword ptr [rax], eax ; call 0x27195e59
0x000000000018be7e : insb byte ptr [rdi], dx ; ret
0x000000000019d324 : insb byte ptr [rdi], dx ; ret 1
0x000000000019dc24 : insb byte ptr [rdi], dx ; retf
0x000000000018db24 : insb byte ptr [rdi], dx ; retf 0
0x0000000000043dce : insb byte ptr [rdi], dx ; retf 0x4df0
0x000000000018e124 : insb byte ptr [rdi], dx ; rol byte ptr [rax], 1 ; add byte ptr [rax], cl ; mov ch, 0xfb ; call qword ptr [rdi]
0x0000000000169d26 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x00000000001822f1 : insb byte ptr [rdi], dx ; std ; jmp qword ptr [rdi]
0x00000000001a0c24 : insb byte ptr [rdi], dx ; sti ; add dword ptr [rax], eax ; js 0x1a0bd3 ; idiv edi ; retf
0x000000000017abb5 : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax]
0x00000000001a2c51 : insb byte ptr [rdi], dx ; sti ; jmp qword ptr [rdx]
0x0000000000190724 : insb byte ptr [rdi], dx ; test byte ptr [rax], 0 ; mov byte ptr [rdx + rsi*8], ch ; call qword ptr [rdx]
0x000000000019a724 : insb byte ptr [rdi], dx ; xchg eax, esi ; add dword ptr [rax], eax ; sbb bh, ch ; sti ; jmp qword ptr [rsi]
0x000000000019a524 : insb byte ptr [rdi], dx ; xchg eax, esp ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000002372 : insb byte ptr [rdi], dx ; xor bl, al ; retf 0x23c4
0x000000000002f46b : insd dword ptr [rdi], dx ; adc al, 0xf ; retf -0x32f1
0x0000000000148320 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000039126 : insd dword ptr [rdi], dx ; add al, ch ; ret
0x00000000000872ef : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000149220 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017dc81 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; nop ; push 0xf4 ; jmp qword ptr [rax]
0x00000000000cf52a : insd dword ptr [rdi], dx ; cmp byte ptr [rcx - 0x1787dbb4], cl ; retf
0x00000000000ece33 : insd dword ptr [rdi], dx ; enter 0x36e8, 0x33 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000017dcad : insd dword ptr [rdi], dx ; hlt ; call qword ptr [rax]
0x000000000016a95f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bfc : insd dword ptr [rdi], dx ; ret 0x1bb7
0x0000000000168d0d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000000e043f : insd dword ptr [rdi], dx ; retf -1
0x00000000000bc0ff : insd dword ptr [rdi], dx ; retf 0xb
0x000000000008021f : insd dword ptr [rdi], dx ; retf 7
0x000000000017abf5 : insd dword ptr [rdi], dx ; sti ; call qword ptr [rax + 0x10fffb6e]
0x00000000001a2b51 : insd dword ptr [rdi], dx ; sti ; jmp qword ptr [rdx]
0x0000000000169c1f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000002c93 : int 0x80
0x00000000001147ff : int 0xc3
0x0000000000003564 : int 0xcb
0x0000000000180fd1 : int1 ; add byte ptr [rax], al ; loop 0x180fda ; call rax
0x0000000000190245 : int1 ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], al ; call rsi
0x00000000001901fd : int1 ; add byte ptr [rax], al ; rol byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x0000000000180b91 : int1 ; add dword ptr [rax], eax ; fdiv st(2), st(0) ; jmp qword ptr [rax]
0x000000000004eb06 : int1 ; add eax, r8d ; ret
0x000000000016c506 : int1 ; call qword ptr [rax]
0x000000000018ff4a : int1 ; call qword ptr [rcx]
0x000000000018ee42 : int1 ; call qword ptr [rdx]
0x000000000018ea7a : int1 ; call qword ptr [rsi]
0x000000000016c516 : int1 ; call rax
0x0000000000021e24 : int1 ; call rbx
0x000000000018e8fa : int1 ; call rdx
0x000000000016c5ca : int1 ; call rsp
0x00000000000da06b : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xda069 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000010b048 : int1 ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000017d236 : int1 ; dec dword ptr [rax] ; sub byte ptr [rcx], al ; add al, al ; cmp cl, dh ; call rax
0x0000000000003b53 : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000016c50e : int1 ; inc dword ptr [rax - 0x5f000ea8] ; pop rax ; int1 ; call rax
0x000000000016c61e : int1 ; inc eax ; retf
0x000000000016c596 : int1 ; inc edi ; in al, -0xf ; jmp rax
0x000000000017a2ac : int1 ; je 0x17a2af ; call qword ptr [rcx]
0x000000000017a2a8 : int1 ; je 0x17a2af ; push rcx ; je 0x17a2b3 ; call qword ptr [rcx]
0x000000000017a2cc : int1 ; je 0x17a2cf ; call qword ptr [rcx]
0x000000000017a2c8 : int1 ; je 0x17a2cf ; push rcx ; je 0x17a2d3 ; call qword ptr [rcx]
0x000000000008a84d : int1 ; je 0x8a844 ; ret
0x0000000000151f4b : int1 ; jl 0x151f9c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000151f6c : int1 ; jl 0x151fbd ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000151f7f : int1 ; jl 0x151fd0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000152054 : int1 ; jl 0x1520a5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001520ac : int1 ; jl 0x1520fd ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000152149 : int1 ; jl 0x15219a ; adc dword ptr [rsi + 7], edx ; ret
0x000000000016c512 : int1 ; jmp qword ptr [rax - 0x2f000ea8]
0x000000000016c50a : int1 ; jmp qword ptr [rax]
0x000000000018fd5a : int1 ; jmp qword ptr [rbx]
0x000000000018f802 : int1 ; jmp qword ptr [rcx]
0x000000000018ea62 : int1 ; jmp qword ptr [rdi]
0x000000000016c522 : int1 ; jmp rax
0x000000000009dfc5 : int1 ; jmp rcx
0x000000000018e92a : int1 ; jmp rsi
0x000000000016c5ce : int1 ; jmp rsp
0x000000000016c502 : int1 ; ljmp ptr [rax + 0x58] ; int1 ; call qword ptr [rax]
0x0000000000169be4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x0000000000003094 : int1 ; mov dr0, word ptr [rax] ; retf
0x0000000000034d76 : int1 ; mov eax, 1 ; ret
0x00000000000d90ad : int1 ; mov eax, ecx ; syscall
0x0000000000132cab : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e0df : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000115cda : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000111ed9 : int1 ; mov rdi, r13 ; call r12
0x0000000000153e53 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000c8544 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009e00b : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000fcc82 : int1 ; pop rdx ; pop r10 ; ret
0x000000000017d26e : int1 ; push qword ptr [rax + 0x7000012b] ; mov cl, dh ; jmp rax
0x000000000016c612 : int1 ; push qword ptr [rax - 0xf000e06] ; sti ; int1 ; call rax
0x000000000016c5b2 : int1 ; push qword ptr [rax] ; in eax, -0xf ; call rax
0x000000000016c51e : int1 ; push qword ptr [rax] ; pop rcx ; int1 ; jmp rax
0x000000000016c5c6 : int1 ; push qword ptr [rbp - 0x1a2b000f] ; int1 ; jmp rsp
0x0000000000108eec : int1 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016c51a : int1 ; push rax ; pop rax ; int1 ; push qword ptr [rax] ; pop rcx ; int1 ; jmp rax
0x000000000016c616 : int1 ; push rax ; sti ; int1 ; call rax
0x000000000000264f : int1 ; ret
0x000000000016a336 : int1 ; ret 0x5803
0x00000000000b1ff2 : int1 ; retf
0x000000000007f6cb : int1 ; retf -1
0x00000000001801e5 : int1 ; stc ; jmp rax
0x0000000000153e57 : int1 ; sub eax, edx ; ret
0x0000000000087046 : int1 ; xor eax, eax ; pop rbx ; ret
0x00000000000fc5ae : int1 ; xor eax, eax ; ret
0x00000000001a4ef8 : invd ; add byte ptr [rax], al ; retf
0x000000000017ed19 : iretd ; add dword ptr [rax], eax ; adc byte ptr [rax - 9], bl ; jmp qword ptr [rax]
0x000000000016c8b1 : iretd ; call qword ptr [rax]
0x000000000016c8a9 : iretd ; call rax
0x0000000000194d81 : iretd ; hlt ; call qword ptr [rcx]
0x0000000000194dd1 : iretd ; hlt ; jmp qword ptr [rcx]
0x0000000000194de9 : iretd ; hlt ; jmp qword ptr [rsi]
0x000000000017bfad : iretd ; in al, dx ; call rax
0x0000000000063c15 : iretd ; jmp 0x63bdd
0x000000000007cfdd : iretd ; mov eax, 3 ; syscall
0x000000000007cfb1 : iretd ; mov eax, r8d ; syscall
0x0000000000083199 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000b4355 : iretd ; mov qword ptr [rsp + 0x30], r9 ; call 0x205e8
0x00000000000b627e : iretd ; movsxd r9, dword ptr [rdx + r9*4] ; add rdx, r9 ; jmp rdx
0x00000000000d62e5 : iretd ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x0000000000100ab7 : ja 0x100aca ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000108eeb : ja 0x108ee7 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010b9f3 : ja 0x10b9f8 ; ret
0x000000000010bd99 : ja 0x10bdb0 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x0000000000113311 : ja 0x113364 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000115cfd : ja 0x115cee ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000120a67 : ja 0x120a83 ; ret
0x0000000000120bdf : ja 0x120c02 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000120dd0 : ja 0x120e00 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000128915 : ja 0x12890d ; xor eax, eax ; ret
0x000000000014de64 : ja 0x14deaa ; jb 0x14de76 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e351 : ja 0x14e388 ; jb 0x14e360 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000014f229 : ja 0x14f1f7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000151d23 : ja 0x151d27 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000152264 : ja 0x1522c2 ; jb 0x152276 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001528a9 : ja 0x1528ee ; jb 0x1528b8 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000015976b : ja 0x159772 ; ret
0x000000000016a3a4 : ja 0x16a32b ; ret 0x48f
0x000000000016b8fd : ja 0x16b8f0 ; call qword ptr [rbx]
0x000000000016bb1d : ja 0x16bb10 ; call rcx
0x000000000017abd1 : ja 0x17abd4 ; call qword ptr [rax + 0x10fffb78]
0x000000000017ac11 : ja 0x17ac10 ; call qword ptr [rax]
0x0000000000181771 : ja 0x181772 ; jmp qword ptr [rdx]
0x0000000000188419 : ja 0x18840b ; call qword ptr [rsi]
0x0000000000188418 : ja 0x18840c ; call qword ptr [rsi]
0x0000000000192a09 : ja 0x192a00 ; jmp rdx
0x000000000002cb4d : ja 0x2cb68 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000344d6 : ja 0x344e3 ; ret
0x0000000000034542 : ja 0x34553 ; ret
0x000000000003458c : ja 0x34592 ; ret
0x0000000000037e49 : ja 0x37e52 ; ret
0x0000000000003996 : ja 0x39f8 ; clc ; salc ; jb 0x3a1e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004413e : ja 0x44190 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004eaf7 : ja 0x4eade ; mov eax, r8d ; ret
0x000000000006918d : ja 0x6919b ; ret
0x00000000000691c6 : ja 0x691d3 ; ret
0x0000000000070b76 : ja 0x70b83 ; ret
0x0000000000075bb8 : ja 0x75bd1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076511 : ja 0x7651b ; ret
0x0000000000076d65 : ja 0x76d73 ; pop rbx ; ret
0x000000000007783e : ja 0x77845 ; ret
0x000000000007dec5 : ja 0x7de4c ; ret 0x837c
0x0000000000083973 : ja 0x83988 ; mov qword ptr [rdi], rdx ; mov rax, r8 ; ret
0x0000000000086b8d : ja 0x86b6f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098db7 : ja 0x98dbd ; ret
0x0000000000098dd3 : ja 0x98ddd ; mov dword ptr [rdi], ecx ; ret
0x0000000000098e14 : ja 0x98e23 ; mov qword ptr [rdi], rcx ; ret
0x0000000000098e99 : ja 0x98ead ; ret
0x0000000000098eef : ja 0x98f07 ; ret
0x0000000000098f71 : ja 0x98f8d ; ret
0x000000000009a3b7 : ja 0x9a3c1 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009a3d3 : ja 0x9a3e1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009a424 : ja 0x9a437 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009a509 : ja 0x9a521 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009a57f : ja 0x9a59b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009a601 : ja 0x9a621 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009c067 : ja 0x9c06d ; ret
0x000000000009c083 : ja 0x9c08d ; mov dword ptr [rdi], ecx ; ret
0x000000000009c0c4 : ja 0x9c0d3 ; mov qword ptr [rdi], rcx ; ret
0x000000000009c149 : ja 0x9c15d ; ret
0x000000000009c19f : ja 0x9c1b7 ; ret
0x000000000009c221 : ja 0x9c23d ; ret
0x000000000009cb37 : ja 0x9cb3d ; ret
0x000000000009cb53 : ja 0x9cb5d ; mov dword ptr [rdi], ecx ; ret
0x000000000009cb94 : ja 0x9cba3 ; mov qword ptr [rdi], rcx ; ret
0x000000000009cc19 : ja 0x9cc2d ; ret
0x000000000009cc6f : ja 0x9cc87 ; ret
0x000000000009ccf1 : ja 0x9cd0d ; ret
0x000000000009da64 : ja 0x9da95 ; jb 0x9da76 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009de83 : ja 0x9dea0 ; jb 0x9de8f ; mov byte ptr [rdi], cl ; ret
0x000000000009fc1c : ja 0x9fc2c ; mov eax, edi ; ret
0x00000000000aed39 : ja 0xaed59 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000b03ed : ja 0xb03fb ; ret
0x00000000000bb17d : ja 0xbb18b ; pop rbx ; ret
0x00000000000bc367 : ja 0xbc372 ; ret
0x00000000000bf626 : ja 0xbf632 ; ret
0x00000000000bf6c0 : ja 0xbf6ca ; ret
0x00000000000bf7b1 : ja 0xbf7ba ; ret
0x00000000000bf8d7 : ja 0xbf8e2 ; ret
0x00000000000bf957 : ja 0xbf962 ; ret
0x00000000000bfd2d : ja 0xbfd59 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000c0719 : ja 0xc0722 ; ret
0x00000000000c0789 : ja 0xc0792 ; ret
0x00000000000c09dd : ja 0xc09e2 ; ret
0x00000000000c0a51 : ja 0xc0a57 ; add byte ptr [rax], al ; syscall
0x00000000000c0a5d : ja 0xc0a62 ; ret
0x00000000000ca4de : ja 0xca4e9 ; jl 0xca4d5 ; ret
0x00000000000e10f1 : ja 0xe10fb ; xor eax, eax ; ret
0x00000000000e18ff : ja 0xe1908 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000e1c12 : ja 0xe1c03 ; ret
0x00000000000e1c58 : ja 0xe1c49 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1dfb : ja 0xe1e03 ; ret
0x00000000000e1e4a : ja 0xe1e53 ; ret
0x00000000000e1e9b : ja 0xe1ea3 ; ret
0x00000000000e1ef3 : ja 0xe1f03 ; ret
0x00000000000e1f57 : ja 0xe1f63 ; ret
0x00000000000e1fb0 : ja 0xe1fbb ; ret
0x00000000000e218f : ja 0xe219b ; ret
0x00000000000e2517 : ja 0xe2522 ; ret
0x00000000000e25ba : ja 0xe25c2 ; ret
0x00000000000e2653 : ja 0xe2663 ; ret
0x00000000000e2690 : ja 0xe269b ; ret
0x00000000000e2998 : ja 0xe29be ; ret
0x00000000000e2c3a : ja 0xe2c42 ; ret
0x00000000000e2da9 : ja 0xe2db2 ; ret
0x00000000000e65c3 : ja 0xe65d8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000e675a : ja 0xe6762 ; ret
0x00000000000e6d38 : ja 0xe6d43 ; ret
0x00000000000e6d8c : ja 0xe6d93 ; ret
0x00000000000e6e5d : ja 0xe6e62 ; ret
0x00000000000e6f00 : ja 0xe6f0a ; ret
0x00000000000e6fe3 : ja 0xe6fef ; ret
0x00000000000e7039 : ja 0xe7045 ; ret
0x00000000000e717c : ja 0xe71a3 ; ret
0x00000000000e72f4 : ja 0xe7302 ; ret
0x00000000000e74c6 : ja 0xe74d3 ; ret
0x00000000000e7507 : ja 0xe7513 ; ret
0x00000000000e7913 : ja 0xe7943 ; ret
0x00000000000e7a6d : ja 0xe7a72 ; ret
0x00000000000e7b0d : ja 0xe7b12 ; ret
0x00000000000e7ccb : ja 0xe7cd2 ; ret
0x00000000000e7d3b : ja 0xe7d42 ; ret
0x00000000000e7dbc : ja 0xe7dc2 ; ret
0x00000000000e7e5d : ja 0xe7e66 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000e7e6c : ja 0xe7e72 ; ret
0x00000000000e80dd : ja 0xe80e2 ; ret
0x00000000000e82ea : ja 0xe82f2 ; ret
0x00000000000e839a : ja 0xe83a2 ; ret
0x00000000000e844c : ja 0xe8453 ; ret
0x00000000000e8ec2 : ja 0xe8ec0 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000e97cd : ja 0xe97db ; ret
0x00000000000e9861 : ja 0xe986b ; ret
0x00000000000e9901 : ja 0xe990b ; ret
0x00000000000e9955 : ja 0xe9963 ; ret
0x00000000000e998d : ja 0xe999b ; ret
0x00000000000e99c0 : ja 0xe99cb ; ret
0x00000000000e9a59 : ja 0xe9a65 ; ret
0x00000000000eb27a : ja 0xeb282 ; ret
0x00000000000ed864 : ja 0xed873 ; ret
0x00000000000f0094 : ja 0xf00a3 ; ret
0x00000000000f0216 : ja 0xf0222 ; ret
0x00000000000f02c8 : ja 0xf02d3 ; ret
0x00000000000f0400 : ja 0xf040a ; ret
0x00000000000f04ad : ja 0xf04b2 ; ret
0x00000000000f0563 : ja 0xf0572 ; ret
0x00000000000f062d : ja 0xf0632 ; ret
0x00000000000f0dea : ja 0xf0df2 ; ret
0x00000000000f0ebc : ja 0xf0ec2 ; ret
0x00000000000f1023 : ja 0xf1032 ; ret
0x00000000000f10dd : ja 0xf10e2 ; ret
0x00000000000f119d : ja 0xf11a2 ; ret
0x00000000000f1243 : ja 0xf1252 ; ret
0x00000000000f12fd : ja 0xf1302 ; ret
0x00000000000f13a0 : ja 0xf13aa ; ret
0x00000000000f173d : ja 0xf1742 ; ret
0x00000000000f17df : ja 0xf17ea ; ret
0x00000000000f188f : ja 0xf189a ; ret
0x00000000000f19fd : ja 0xf1a02 ; ret
0x00000000000f1aa0 : ja 0xf1aaa ; ret
0x00000000000f1b53 : ja 0xf1b63 ; ret
0x00000000000f1b93 : ja 0xf1ba3 ; ret
0x00000000000f1bd0 : ja 0xf1bdb ; ret
0x00000000000f1c06 : ja 0xf1c13 ; ret
0x00000000000f1c64 : ja 0xf1c9b ; ret
0x00000000000f1cc3 : ja 0xf1cd3 ; ret
0x00000000000f1d03 : ja 0xf1d13 ; ret
0x00000000000f1d3d : ja 0xf1d4b ; ret
0x00000000000f1d76 : ja 0xf1d83 ; ret
0x00000000000f1db3 : ja 0xf1dc3 ; ret
0x00000000000f8c28 : ja 0xf8c22 ; ret
0x00000000000fd300 : ja 0xfd30b ; ret
0x00000000000fd385 : ja 0xfd35c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fd3ad : ja 0xfd3cd ; ret
0x00000000000ff102 : ja 0xff113 ; ret
0x00000000000ff0f3 : ja 0xff12b ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000ff1b2 : ja 0xff1c3 ; ret
0x00000000000ff1a3 : ja 0xff1db ; mov eax, 0x59 ; syscall
0x0000000000120b45 : jae 0x120b54 ; xor eax, eax ; ret
0x0000000000120b85 : jae 0x120b94 ; xor eax, eax ; ret
0x0000000000124ff0 : jae 0x124ff5 ; ret
0x0000000000125040 : jae 0x125045 ; ret
0x0000000000127a6c : jae 0x1279f9 ; retf -0x72b8
0x0000000000127cb4 : jae 0x127c97 ; mov eax, 1 ; ret
0x0000000000159497 : jae 0x159489 ; push rbx ; ret
0x000000000015952c : jae 0x15953b ; call qword ptr [rbx]
0x0000000000159cd7 : jae 0x159cf4 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000168962 : jae 0x168944 ; jo 0x1689e0 ; mov ebp, 0xfb67d10d ; ret
0x00000000001697fe : jae 0x1697d9 ; push rsi ; pop rdx ; je 0x1697ce ; ret 0xacfc
0x000000000016b8dd : jae 0x16b8d0 ; call qword ptr [rbx]
0x000000000017ac05 : jae 0x17ac08 ; call qword ptr [rax + 0x10fffb74]
0x000000000017b7a5 : jae 0x17b794 ; call rax
0x00000000001806a1 : jae 0x1806ab ; add al, ah ; push rdi ; cli ; call rax
0x0000000000187d15 : jae 0x187d2d ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000188415 : jae 0x18841d ; add byte ptr [rax + 0x77], cl ; out dx, al ; call qword ptr [rsi]
0x000000000018c7e1 : jae 0x18c7d4 ; call qword ptr [rax]
0x000000000018c829 : jae 0x18c81c ; call qword ptr [rdx]
0x00000000001983e5 : jae 0x1983ee ; add byte ptr [rax - 0x75], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001983fd : jae 0x198406 ; add byte ptr [rax - 0x75], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001983fc : jae 0x198407 ; add byte ptr [rax - 0x75], dh ; cmc ; jmp qword ptr [rcx]
0x000000000002bfea : jae 0x2c006 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000003450d : jae 0x34512 ; ret
0x00000000000349ed : jae 0x349f2 ; ret
0x0000000000034e6e : jae 0x34eab ; add byte ptr [rcx], bh ; ret 0x237f
0x0000000000043397 : jae 0x433a0 ; xor eax, eax ; ret
0x0000000000077798 : jae 0x777a5 ; movzx eax, byte ptr [rax] ; ret
0x000000000007aacb : jae 0x7aaf5 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b275 : jae 0x7b2b1 ; xor eax, dword ptr [rax] ; ret
0x000000000007c227 : jae 0x7c1de ; ret
0x000000000008342e : jae 0x8343e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b04cd : jae 0xb04d2 ; ret
0x00000000000b2b7d : jae 0xb2b82 ; ret
0x00000000000b2bad : jae 0xb2bb2 ; ret
0x00000000000bf57d : jae 0xbf582 ; ret
0x00000000000bf770 : jae 0xbf775 ; ret
0x00000000000bf84d : jae 0xbf852 ; ret
0x00000000000bfcde : jae 0xbfce3 ; ret
0x00000000000bfd6d : jae 0xbfd72 ; ret
0x00000000000c06d1 : jae 0xc06d7 ; add byte ptr [rax], al ; syscall
0x00000000000c06dd : jae 0xc06e2 ; ret
0x00000000000c087d : jae 0xc0882 ; ret
0x00000000000c08ad : jae 0xc08b2 ; ret
0x00000000000c090d : jae 0xc0912 ; ret
0x00000000000c093d : jae 0xc0942 ; ret
0x00000000000c096d : jae 0xc0972 ; ret
0x00000000000c099d : jae 0xc09a2 ; ret
0x00000000000d8f1d : jae 0xd8f22 ; ret
0x00000000000d8f4d : jae 0xd8f52 ; ret
0x00000000000d8f7d : jae 0xd8f82 ; ret
0x00000000000d8fad : jae 0xd8fb2 ; ret
0x00000000000d8fdd : jae 0xd8fe2 ; ret
0x00000000000d900d : jae 0xd9012 ; ret
0x00000000000d903d : jae 0xd9042 ; ret
0x00000000000d906d : jae 0xd9072 ; ret
0x00000000000e0c09 : jae 0xe0c41 ; ret
0x00000000000e0c69 : jae 0xe0ca1 ; ret
0x00000000000e1d5d : jae 0xe1d62 ; ret
0x00000000000e1ffd : jae 0xe2002 ; ret
0x00000000000e202d : jae 0xe2032 ; ret
0x00000000000e20fd : jae 0xe2102 ; ret
0x00000000000e212d : jae 0xe2132 ; ret
0x00000000000e21ed : jae 0xe21f2 ; ret
0x00000000000e221d : jae 0xe2222 ; ret
0x00000000000e2aed : jae 0xe2af2 ; ret
0x00000000000e2cad : jae 0xe2cb2 ; ret
0x00000000000e2cdd : jae 0xe2ce2 ; ret
0x00000000000e2d0d : jae 0xe2d12 ; ret
0x00000000000e2d3d : jae 0xe2d42 ; ret
0x00000000000e2d6d : jae 0xe2d72 ; ret
0x00000000000e2e2d : jae 0xe2e32 ; ret
0x00000000000e2e5d : jae 0xe2e62 ; ret
0x00000000000e367d : jae 0xe3682 ; ret
0x00000000000e36ad : jae 0xe36b2 ; ret
0x00000000000e36dd : jae 0xe36e2 ; ret
0x00000000000e3710 : jae 0xe3715 ; ret
0x00000000000e3dad : jae 0xe3db2 ; ret
0x00000000000e3de0 : jae 0xe3de5 ; ret
0x00000000000e3e0d : jae 0xe3e12 ; ret
0x00000000000e3e3d : jae 0xe3e42 ; ret
0x00000000000e3e6d : jae 0xe3e72 ; ret
0x00000000000e3ea0 : jae 0xe3ea5 ; ret
0x00000000000e3ecd : jae 0xe3ed2 ; ret
0x00000000000e3efd : jae 0xe3f02 ; ret
0x00000000000e3f2d : jae 0xe3f32 ; ret
0x00000000000e6824 : jae 0xe6877 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6d00 : jae 0xe6d05 ; ret
0x00000000000e753d : jae 0xe7542 ; ret
0x00000000000e784d : jae 0xe7852 ; ret
0x00000000000e7a2d : jae 0xe7a32 ; ret
0x00000000000e7ba9 : jae 0xe7be1 ; ret
0x00000000000e7c09 : jae 0xe7c41 ; ret
0x00000000000e7ffd : jae 0xe8002 ; ret
0x00000000000e809d : jae 0xe80a2 ; ret
0x00000000000e827d : jae 0xe8282 ; ret
0x00000000000e82ad : jae 0xe82b2 ; ret
0x00000000000e835d : jae 0xe8362 ; ret
0x00000000000e840d : jae 0xe8412 ; ret
0x00000000000e877d : jae 0xe8782 ; ret
0x00000000000e87ad : jae 0xe87b2 ; ret
0x00000000000e87dd : jae 0xe87e2 ; ret
0x00000000000eaf5f : jae 0xeaf64 ; ret
0x00000000000eb20d : jae 0xeb212 ; ret
0x00000000000eb23d : jae 0xeb242 ; ret
0x00000000000eb30d : jae 0xeb312 ; ret
0x00000000000eb33d : jae 0xeb342 ; ret
0x00000000000eb370 : jae 0xeb375 ; ret
0x00000000000eb39d : jae 0xeb3a2 ; ret
0x00000000000eb3cd : jae 0xeb3d2 ; ret
0x00000000000eb3fd : jae 0xeb402 ; ret
0x00000000000eb42d : jae 0xeb432 ; ret
0x00000000000ee150 : jae 0xee155 ; ret
0x00000000000ee17d : jae 0xee182 ; ret
0x00000000000ee1ad : jae 0xee1b2 ; ret
0x00000000000ee1e0 : jae 0xee1e5 ; ret
0x00000000000ee210 : jae 0xee215 ; ret
0x00000000000ee23d : jae 0xee242 ; ret
0x00000000000ee270 : jae 0xee275 ; ret
0x00000000000ee29d : jae 0xee2a2 ; ret
0x00000000000ee2cd : jae 0xee2d2 ; ret
0x00000000000ee300 : jae 0xee305 ; ret
0x00000000000ee32d : jae 0xee332 ; ret
0x00000000000ee360 : jae 0xee365 ; ret
0x00000000000efffd : jae 0xf0002 ; ret
0x00000000000f002d : jae 0xf0032 ; ret
0x00000000000f013d : jae 0xf0142 ; ret
0x00000000000f016d : jae 0xf0172 ; ret
0x00000000000f019d : jae 0xf01a2 ; ret
0x00000000000f01cd : jae 0xf01d2 ; ret
0x00000000000f02fd : jae 0xf0302 ; ret
0x00000000000f0380 : jae 0xf0385 ; ret
0x00000000000f03ad : jae 0xf03b2 ; ret
0x00000000000f06bd : jae 0xf06c2 ; ret
0x00000000000f06ed : jae 0xf06f2 ; ret
0x00000000000f0730 : jae 0xf0735 ; ret
0x00000000000f075d : jae 0xf0762 ; ret
0x00000000000f078d : jae 0xf0792 ; ret
0x00000000000f07bd : jae 0xf07c2 ; ret
0x00000000000f07ed : jae 0xf07f2 ; ret
0x00000000000f081d : jae 0xf0822 ; ret
0x00000000000f084d : jae 0xf0852 ; ret
0x00000000000f087d : jae 0xf0882 ; ret
0x00000000000f08ad : jae 0xf08b2 ; ret
0x00000000000f08e0 : jae 0xf08e5 ; ret
0x00000000000f090d : jae 0xf0912 ; ret
0x00000000000f0940 : jae 0xf0945 ; ret
0x00000000000f096d : jae 0xf0972 ; ret
0x00000000000f099d : jae 0xf09a2 ; ret
0x00000000000f09cd : jae 0xf09d2 ; ret
0x00000000000f09fd : jae 0xf0a02 ; ret
0x00000000000f0a2d : jae 0xf0a32 ; ret
0x00000000000f0a60 : jae 0xf0a65 ; ret
0x00000000000f0a90 : jae 0xf0a95 ; ret
0x00000000000f0abd : jae 0xf0ac2 ; ret
0x00000000000f0aed : jae 0xf0af2 ; ret
0x00000000000f0b20 : jae 0xf0b25 ; ret
0x00000000000f0b50 : jae 0xf0b55 ; ret
0x00000000000f0b80 : jae 0xf0b85 ; ret
0x00000000000f0bad : jae 0xf0bb2 ; ret
0x00000000000f0bdd : jae 0xf0be2 ; ret
0x00000000000f0c0d : jae 0xf0c12 ; ret
0x00000000000f0c3d : jae 0xf0c42 ; ret
0x00000000000f0c70 : jae 0xf0c75 ; ret
0x00000000000f0c9d : jae 0xf0ca2 ; ret
0x00000000000f0ccd : jae 0xf0cd2 ; ret
0x00000000000f0d00 : jae 0xf0d05 ; ret
0x00000000000f0d2d : jae 0xf0d32 ; ret
0x00000000000f0d60 : jae 0xf0d65 ; ret
0x00000000000f0d90 : jae 0xf0d95 ; ret
0x00000000000f0e7d : jae 0xf0e82 ; ret
0x00000000000f0f4d : jae 0xf0f52 ; ret
0x00000000000f0f7d : jae 0xf0f82 ; ret
0x00000000000f0fb0 : jae 0xf0fb5 ; ret
0x00000000000f0fdd : jae 0xf0fe2 ; ret
0x00000000000f1450 : jae 0xf1455 ; ret
0x00000000000f147d : jae 0xf1482 ; ret
0x00000000000f14ad : jae 0xf14b2 ; ret
0x00000000000f14e0 : jae 0xf14e5 ; ret
0x00000000000f1f5f : jae 0xf1fb6 ; mov edi, esp ; mov eax, 0x14 ; syscall
0x000000000010a6de : jae 0xffffffff8358a8ab ; ret 0x3904
0x000000000010b15f : jb 0x10b187 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000010bca8 : jb 0x10bc9b ; mov eax, 0xffffffff ; ret
0x000000000010bca7 : jb 0x10bc9c ; mov eax, 0xffffffff ; ret
0x0000000000115d01 : jb 0x115d25 ; ret
0x0000000000115cfb : jb 0x115d2d ; ja 0x115cf0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012c0ea : jb 0x12c0fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c23a : jb 0x12c24a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c38a : jb 0x12c39a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c4da : jb 0x12c4ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c62a : jb 0x12c63a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c77a : jb 0x12c78a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c8ca : jb 0x12c8da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ca1a : jb 0x12ca2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cb6a : jb 0x12cb7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ccba : jb 0x12ccca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ce0a : jb 0x12ce1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cf5a : jb 0x12cf6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d0aa : jb 0x12d0ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d1fa : jb 0x12d20a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d34a : jb 0x12d35a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012eaba : jb 0x12eaca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ec0a : jb 0x12ec1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ed5a : jb 0x12ed6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012eeaa : jb 0x12eeba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012effa : jb 0x12f00a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f14a : jb 0x12f15a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f29a : jb 0x12f2aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f3ea : jb 0x12f3fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f53a : jb 0x12f54a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f68a : jb 0x12f69a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f7da : jb 0x12f7ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f92a : jb 0x12f93a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fa7a : jb 0x12fa8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fbca : jb 0x12fbda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fd1a : jb 0x12fd2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014de66 : jb 0x14de74 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e353 : jb 0x14e35e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001518fe : jb 0x15190a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000151fb5 : jb 0x151fc4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000151fc0 : jb 0x151fd3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000151fcd : jb 0x151fd5 ; mov byte ptr [rdi], cl ; ret
0x0000000000152266 : jb 0x152274 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001528ab : jb 0x1528b6 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000015955b : jb 0x159551 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000159ce9 : jb 0x159ce8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000159e42 : jb 0x159e6e ; add byte ptr [rax + 0x39], cl ; ret
0x000000000016d9a0 : jb 0x16d969 ; hlt ; call qword ptr [rdi]
0x000000000017abc5 : jb 0x17abc4 ; call qword ptr [rax]
0x000000000017dd39 : jb 0x17dd42 ; add byte ptr [rax], dh ; fdiv st(4) ; jmp qword ptr [rax]
0x00000000001982cd : jb 0x1982d6 ; add al, dh ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000001982fd : jb 0x198306 ; add byte ptr [rax], ah ; mov dh, ch ; jmp qword ptr [rcx]
0x00000000001982fc : jb 0x198307 ; add byte ptr [rax], ah ; mov dh, ch ; jmp qword ptr [rcx]
0x0000000000198345 : jb 0x19834e ; add byte ptr [rax - 0x76], ch ; cmc ; call qword ptr [rsi]
0x0000000000198395 : jb 0x19839e ; add al, bl ; mov dh, ch ; jmp qword ptr [rcx]
0x000000000019e946 : jb 0x19e954 ; ret
0x000000000019e946 : jb 0x19e95a ; ret
0x0000000000001acd : jb 0x1b4c ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x0000000000001da9 : jb 0x1ddc ; retf
0x000000000002a55b : jb 0x2a59d ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000002be0 : jb 0x2b80 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002cb1e : jb 0x2cb2b ; ret
0x000000000002d977 : jb 0x2d969 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000399a : jb 0x3a1a ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000006f425 : jb 0x6f44b ; mov dword ptr [rcx], eax ; ret
0x000000000007096c : jb 0x70965 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007b3b1 : jb 0x7b396 ; mov byte ptr [rax + rsi], r10b ; ret
0x000000000008443b : jb 0x8444c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000085f55 : jb 0x85f5f ; sub cl, byte ptr [rax + 0x39] ; sal dword ptr [rbp - 0xd], 1 ; ret
0x000000000008600b : jb 0x8601c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000009ad3a : jb 0x9ad49 ; add byte ptr [rax], al ; ret
0x000000000009d9c4 : jb 0x9d9cd ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000009da66 : jb 0x9da74 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009da65 : jb 0x9da75 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009de85 : jb 0x9de8d ; mov byte ptr [rdi], cl ; ret
0x00000000000c0fed : jb 0xc0ff6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000cd0cd : jb 0xcd04d ; pop rbx ; ret
0x00000000000e7d2f : jb 0xe7d35 ; add byte ptr [rax], al ; syscall
0x00000000000f784b : jb 0xf785f ; mov eax, 1 ; ret
0x00000000000fc5ad : jb 0xfc5a4 ; xor eax, eax ; ret
0x00000000001079ec : jbe 0x1079f2 ; ret
0x0000000000109e5f : jbe 0x109e67 ; inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000115373 : jbe 0x115387 ; mov eax, 2 ; ret
0x0000000000120dcd : jbe 0x120de9 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000149947 : jbe 0x1499b8 ; add rax, rdi ; vzeroupper ; ret
0x000000000014e8f7 : jbe 0x14e968 ; add rax, rdi ; vzeroupper ; ret
0x000000000016a23c : jbe 0x16a20f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000016a23b : jbe 0x16a210 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000016b89d : jbe 0x16b890 ; call qword ptr [rbx]
0x000000000016d3b0 : jbe 0x16d418 ; hlt ; jmp qword ptr [rax]
0x000000000016d3ac : jbe 0x16d418 ; hlt ; push qword ptr [rsi + 0x63] ; hlt ; jmp qword ptr [rax]
0x000000000017ac0d : jbe 0x17ac10 ; call qword ptr [rax + 0x10fffb77]
0x000000000017b5d1 : jbe 0x17b5d9 ; add byte ptr [rax], ah ; sbb al, 0xeb ; call rax
0x000000000017ddb9 : jbe 0x17ddc2 ; add byte ptr [rax], al ; in eax, dx ; hlt ; call rax
0x00000000001986d5 : jbe 0x1986de ; add byte ptr [rax], bl ; nop ; cmc ; jmp qword ptr [rbx]
0x0000000000002e66 : jbe 0x2e80 ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000000387f : jbe 0x382a ; outsb dx, byte ptr [rsi] ; retf
0x00000000000437ab : jbe 0x43821 ; xor eax, eax ; ret
0x00000000000486ac : jbe 0x486a6 ; nop ; pop rbx ; ret
0x0000000000078729 : jbe 0x78774 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e146 : jbe 0x8e185 ; add rax, rdi ; ret
0x000000000008e156 : jbe 0x8e187 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e166 : jbe 0x8e187 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e176 : jbe 0x8e187 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000094149 : jbe 0x94143 ; ret 0xf10
0x0000000000095d69 : jbe 0x95d63 ; ret 0xf10
0x00000000000aea5c : jbe 0xaeab3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000aeb56 : jbe 0xaeb95 ; add rax, rdi ; ret
0x00000000000aeb66 : jbe 0xaeb97 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000aeb76 : jbe 0xaeb97 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000aeb86 : jbe 0xaeb97 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000afa60 : jbe 0xafa89 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c0961 : jbe 0xc0967 ; add byte ptr [rax], al ; syscall
0x00000000000e1b78 : jbe 0xe1b83 ; ret
0x00000000000e449a : jbe 0xe44b8 ; mov eax, ecx ; syscall
0x0000000000105c94 : je 0x105cc1 ; push -0x163876bf ; ret
0x0000000000107a06 : je 0x107a12 ; mov rdi, rbx ; call rax
0x0000000000107f9a : je 0x107fc7 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000010afe3 : je 0x10afdb ; pop rbx ; ret
0x000000000010f322 : je 0x10f32a ; ret
0x000000000010f381 : je 0x10f38a ; ret
0x000000000010f37b : je 0x10f38b ; cmp dword ptr [rdi + 0x10], 2 ; je 0x10f390 ; ret
0x000000000010f81c : je 0x10f82d ; mov eax, edx ; syscall
0x000000000010f8c4 : je 0x10f8f0 ; add rsp, 8 ; ret
0x000000000010f9f7 : je 0x10fa70 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010f9f6 : je 0x10fa71 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010fcda : je 0x10fcee ; mov rax, rbx ; pop rbx ; ret
0x000000000010fd2c : je 0x10fd3d ; mov qword ptr [rdi], rax ; ret
0x000000000010fd77 : je 0x10fd87 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010fdbd : je 0x10fdd9 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112bc3 : je 0x112bad ; xor eax, eax ; pop rbx ; ret
0x0000000000113403 : je 0x11340f ; mov rdi, rsp ; call rax
0x0000000000113879 : je 0x1138a6 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000113a74 : je 0x113a80 ; mov rdi, rbp ; call rax
0x0000000000113d28 : je 0x113d32 ; ret
0x00000000001148b5 : je 0x1148c1 ; mov rdi, r14 ; call rax
0x0000000000114e03 : je 0x114e14 ; xor eax, eax ; ret
0x0000000000115412 : je 0x11541e ; mov rdi, rbp ; call rdx
0x0000000000115857 : je 0x115954 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000115e66 : je 0x115e78 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119092 : je 0x1190a6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000119a4a : je 0x119a56 ; mov rdi, r12 ; call rax
0x0000000000119c2b : je 0x119c39 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011a4f4 : je 0x11a504 ; xor eax, eax ; ret
0x000000000011ac61 : je 0x11ac6d ; mov rdi, rbp ; call rax
0x000000000011ad20 : je 0x11ad2c ; mov rdi, r13 ; call rax
0x000000000011ada3 : je 0x11adb7 ; mov eax, 1 ; ret
0x000000000011b7cf : je 0x11b7dd ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000011be7b : je 0x11be87 ; mov rdi, r12 ; call rax
0x000000000011c1ef : je 0x11c1fd ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011dcfa : je 0x11dc88 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011dc7f : je 0x11dc8b ; pop rbx ; ret
0x000000000011dd23 : je 0x11dd36 ; add rsp, 8 ; ret
0x000000000011e7ab : je 0x11e7b2 ; ret
0x000000000011e88b : je 0x11e899 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011eed4 : je 0x11eee2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011f9f8 : je 0x11fa54 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011faf0 : je 0x11fb4c ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011ff5d : je 0x11ffb8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012001d : je 0x120078 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012068d : je 0x1206b8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000012075d : je 0x120788 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000120a31 : je 0x120a43 ; ret
0x0000000000121892 : je 0x1218bd ; or byte ptr [rax - 0x77], cl ; retf -0x76bc
0x0000000000122aa8 : je 0x122ab4 ; xor eax, eax ; ret
0x0000000000123cd5 : je 0x123ce4 ; xor eax, eax ; ret
0x0000000000127181 : je 0x127196 ; add rsp, 8 ; ret
0x0000000000143b43 : je 0x143b0d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000144815 : je 0x14481d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000144913 : je 0x1448dd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001457fa : je 0x145802 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145953 : je 0x14591d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000147523 : je 0x1474ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000149551 : je 0x149538 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000149be1 : je 0x149c48 ; and ch, al ; std ; xlatb ; ret
0x0000000000149ccf : je 0x149d36 ; and ch, al ; std ; xlatb ; ret
0x000000000014a025 : je 0x14a037 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000014a3a3 : je 0x14a36d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014ba33 : je 0x14b9fd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000150687 : je 0x150691 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001588b5 : je 0x1588f6 ; add rsp, 0x38 ; ret
0x0000000000158bfd : je 0x158c7e ; add rsp, 0x38 ; ret
0x0000000000159016 : je 0x15901c ; call rdx
0x000000000015912e : je 0x159139 ; call rax
0x0000000000159510 : je 0x159515 ; ret
0x0000000000167d6c : je 0x167d9a ; push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000168ac8 : je 0x168a93 ; xor al, 0xd8 ; ret
0x0000000000169802 : je 0x1697ca ; ret 0xacfc
0x000000000016db94 : je 0x16db61 ; hlt ; inc dword ptr [rdi - 0x53] ; hlt ; dec dword ptr [rsi] ; ret 0xfff4
0x000000000017a2ad : je 0x17a2ae ; call qword ptr [rcx]
0x000000000017a2a9 : je 0x17a2ae ; push rcx ; je 0x17a2b2 ; call qword ptr [rcx]
0x000000000017a2cd : je 0x17a2ce ; call qword ptr [rcx]
0x000000000017a2c9 : je 0x17a2ce ; push rcx ; je 0x17a2d2 ; call qword ptr [rcx]
0x000000000017abc9 : je 0x17abcc ; call qword ptr [rax + 0x10fffb75]
0x000000000017ac09 : je 0x17ac08 ; call qword ptr [rax]
0x000000000017b551 : je 0x17b559 ; add byte ptr [rax], dl ; sbb bl, ch ; call qword ptr [rax]
0x000000000017c5ed : je 0x17c5e0 ; jmp qword ptr [rax]
0x000000000018fc2c : je 0x18fc1e ; add byte ptr [rax], al ; push rax ; retf
0x000000000019402c : je 0x194064 ; add dword ptr [rax], eax ; xor byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x000000000019662c : je 0x19668a ; add dword ptr [rax], eax ; jo 0x19665a ; cmc ; jmp qword ptr [rcx]
0x000000000019802c : je 0x1980a4 ; add dword ptr [rax], eax ; push rax ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000019a32c : je 0x19a2c7 ; add dword ptr [rax], eax ; shl byte ptr [rbx], 0xf6 ; jmp qword ptr [rsi]
0x000000000019ff49 : je 0x19ff44 ; call qword ptr [rsi]
0x00000000001a3b2c : je 0x1a3b5f ; add al, byte ptr [rax] ; push rax ; cmp edi, eax ; call qword ptr [rdi]
0x0000000000001cc6 : je 0x1cf2 ; ret
0x0000000000021e1f : je 0x21e4b ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000024450 : je 0x2447e ; or byte ptr [rbp - 0x77], cl ; fmul dword ptr [rax - 0x77] ; retf
0x0000000000024567 : je 0x24596 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000024747 : je 0x24776 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000024ddc : je 0x24e0b ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024fba : je 0x24fe9 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025526 : je 0x25555 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000258b4 : je 0x258e3 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x000000000002618d : je 0x261bc ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000026e1a : je 0x26e49 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000027bde : je 0x27c0d ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000027fc0 : je 0x27fef ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000289f0 : je 0x28a1f ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000028d87 : je 0x28db6 ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000029e18 : je 0x29e23 ; pop rbx ; ret
0x0000000000029e13 : je 0x29e28 ; cmp esi, 3 ; je 0x29e28 ; pop rbx ; ret
0x000000000002a694 : je 0x2a69a ; call rax
0x000000000002a7e8 : je 0x2a7ee ; call rcx
0x000000000002b7eb : je 0x2b7f1 ; call rax
0x0000000000032f35 : je 0x32f5f ; call 0xffffffffe284f1c9
0x000000000003302c : je 0x32fcf ; ret
0x0000000000033675 : je 0x33664 ; ret
0x0000000000037f24 : je 0x37efc ; mov eax, 0xffffffff ; ret
0x00000000000415e5 : je 0x415f3 ; pop rbx ; ret
0x0000000000051bec : je 0x51c1a ; or byte ptr [rax + 0x29], cl ; ror byte ptr [rax + 0x29], 1 ; retf -0x8b8
0x00000000000642a7 : je 0x642ba ; call 0x20514
0x0000000000068a76 : je 0x68a98 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006929a : je 0x692a3 ; ret
0x000000000006b72b : je 0x6b77e ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006bb13 : je 0x6bb51 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bd17 : je 0x6bd31 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006bde7 : je 0x6be01 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006ce85 : je 0x6cea1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d5ec : je 0x6d5fe ; mov eax, esi ; syscall
0x000000000006e1f1 : je 0x6e205 ; mov eax, edx ; pop rbx ; ret
0x000000000006e5f7 : je 0x6e605 ; mov eax, esi ; pop rbx ; ret
0x000000000006e779 : je 0x6e785 ; mov eax, esi ; pop rbx ; ret
0x000000000006e933 : je 0x6e974 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f19d : je 0x6f1ae ; mov eax, r8d ; pop rbx ; ret
0x000000000006f340 : je 0x6f355 ; mov eax, edx ; pop rbx ; ret
0x000000000006f4d7 : je 0x6f4e5 ; mov eax, edx ; pop rbx ; ret
0x000000000006fe70 : je 0x6fec0 ; add esp, 0x20 ; pop rbx ; ret
0x000000000006fe6f : je 0x6fec1 ; add esp, 0x20 ; pop rbx ; ret
0x000000000006fe85 : je 0x6fed5 ; add esp, 0x20 ; pop rbx ; ret
0x000000000006fe84 : je 0x6fed6 ; add esp, 0x20 ; pop rbx ; ret
0x000000000007030c : je 0x70312 ; ret
0x0000000000070326 : je 0x70333 ; pop rbx ; ret
0x0000000000070f58 : je 0x70f67 ; mov eax, 0xffffffff ; ret
0x0000000000073973 : je 0x739a5 ; mov eax, edx ; pop rbx ; ret
0x0000000000073dba : je 0x73dc5 ; mov eax, edx ; pop rbx ; ret
0x0000000000073f09 : je 0x73f2d ; mov eax, edx ; pop rbx ; ret
0x0000000000074078 : je 0x740a5 ; mov eax, edx ; pop rbx ; ret
0x00000000000743b3 : je 0x743e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000074d9a : je 0x74da5 ; mov eax, edx ; pop rbx ; ret
0x000000000007543b : je 0x7544d ; mov dword ptr [rdi], edx ; ret
0x000000000007575c : je 0x7576f ; mov eax, 0xffffffff ; ret
0x0000000000075acc : je 0x75adf ; mov eax, 0xffffffff ; ret
0x0000000000075e58 : je 0x75e62 ; ret
0x0000000000075e83 : je 0x75e90 ; add rsp, 0x38 ; ret
0x0000000000076066 : je 0x76075 ; mov eax, edx ; pop rbx ; ret
0x000000000007658f : je 0x7659b ; pop rbx ; ret
0x0000000000079505 : je 0x79512 ; ret
0x0000000000079549 : je 0x79576 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079d7a : je 0x79da4 ; or al, 0xeb ; ret
0x000000000007b602 : je 0x7b46a ; ret
0x000000000007b542 : je 0x7b554 ; xor eax, eax ; ret
0x000000000007c017 : je 0x7c024 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c13c : je 0x7c142 ; call rax
0x000000000007c41f : je 0x7c425 ; call rax
0x000000000007fe56 : je 0x7fe67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000808c2 : je 0x808ef ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000081482 : je 0x814ae ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000081ac0 : je 0x81a4d ; retf 0x4c89
0x0000000000081abf : je 0x81a4e ; retf 0x4c89
0x0000000000081e59 : je 0x81e62 ; ret
0x0000000000081e9a : je 0x81ea9 ; mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x0000000000081eb2 : je 0x81ec7 ; mov eax, 0x16 ; ret
0x00000000000820c0 : je 0x82186 ; call rax
0x00000000000821fa : je 0x822ce ; call rax
0x0000000000082398 : je 0x823e8 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000082e58 : je 0x82e62 ; ret
0x0000000000083c65 : je 0x83c8d ; movsx eax, dl ; ret
0x0000000000083d72 : je 0x83d86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084a06 : je 0x84a31 ; xor byte ptr [rax + 1], cl ; ret
0x0000000000084e72 : je 0x84e3d ; ret
0x00000000000869c4 : je 0x869d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a82a : je 0x8a823 ; ret
0x000000000008a829 : je 0x8a824 ; ret
0x000000000008a84e : je 0x8a843 ; ret
0x000000000008a84a : je 0x8a847 ; cmp ecx, esi ; je 0x8a847 ; ret
0x000000000008a89f : je 0x8a883 ; ret
0x000000000008e04c : je 0x8e0a3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e32a : je 0x8e381 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e6ac : je 0x8e688 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000093651 : je 0x93669 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000093b44 : je 0x93b4f ; bsf eax, edx ; ret
0x0000000000093bed : je 0x93c06 ; bsf rax, rdx ; ret
0x0000000000093dbc : je 0x93de6 ; bsf rax, rdx ; ret
0x00000000000990b9 : je 0x9910a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009a746 : je 0x9a797 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009c62a : je 0x9c67b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009daf3 : je 0x9db14 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000009df15 : je 0x9df08 ; movzx eax, cl ; pop rbx ; ret
0x000000000009df3d : je 0x9df08 ; movzx eax, dl ; pop rbx ; ret
0x000000000009e492 : je 0x9e4a4 ; xor eax, eax ; ret
0x000000000009e48d : je 0x9e4b1 ; cmp eax, 2 ; je 0x9e4a9 ; xor eax, eax ; ret
0x000000000009e4dd : je 0x9e4c3 ; ret
0x000000000009e525 : je 0x9e503 ; ret
0x000000000009f2cf : je 0x9f2c1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f8ca : je 0x9f895 ; ret
0x000000000009f90b : je 0x9f912 ; ret
0x00000000000a038e : je 0xa03bd ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a062e : je 0xa065d ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000a08f6 : je 0xa0925 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000a0a08 : je 0xa0a15 ; test edx, edx ; jne 0xa0a07 ; ret
0x00000000000a0a07 : je 0xa0a16 ; test edx, edx ; jne 0xa0a08 ; ret
0x00000000000aeff6 : je 0xaf066 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000af509 : je 0xaf529 ; mov cl, dl ; and cl, 0xf ; je 0xaf539 ; ret
0x00000000000af510 : je 0xaf532 ; ret
0x00000000000af525 : je 0xaf546 ; add rax, 2 ; ret
0x00000000000b00ef : je 0xb011d ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000b61c3 : je 0xb621a ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000ba560 : je 0xba57e ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000bc35b : je 0xbc361 ; add byte ptr [rax], al ; syscall
0x00000000000bfa31 : je 0xbfa37 ; call rax
0x00000000000bfb5a : je 0xbfb63 ; call rdx
0x00000000000bfbcb : je 0xbfbd4 ; call rax
0x00000000000c0f0d : je 0xc0f5c ; mov eax, 0x20 ; ret
0x00000000000c0fc9 : je 0xc0ff9 ; mov eax, 1 ; ret
0x00000000000c8534 : je 0xc8544 ; xor eax, eax ; ret
0x00000000000c8a5c : je 0xc8a3e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9609 : je 0xc9633 ; or cl, ch ; retf -2
0x00000000000c9f60 : je 0xc9f6b ; ret
0x00000000000c9f5b : je 0xc9f78 ; cmp eax, 3 ; je 0xc9f70 ; ret
0x00000000000ca308 : je 0xca313 ; ret
0x00000000000ca4fa : je 0xca504 ; xor eax, eax ; ret
0x00000000000ca4f6 : je 0xca558 ; cmp al, 0x11 ; je 0xca508 ; xor eax, eax ; ret
0x00000000000ca624 : je 0xca638 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cab5f : je 0xcab89 ; or byte ptr [rcx], ch ; ret
0x00000000000ccf5a : je 0xccfb9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cd0b0 : je 0xcd049 ; pop rbx ; ret
0x00000000000cd0e2 : je 0xcd07d ; pop rbx ; ret
0x00000000000cd0dd : je 0xcd0a3 ; and ebx, 8 ; je 0xcd082 ; pop rbx ; ret
0x00000000000cd92a : je 0xcd8de ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cef52 : je 0xcef61 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d6777 : je 0xd67a2 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000000d7748 : je 0xd7784 ; xor eax, eax ; ret
0x00000000000d77a7 : je 0xd77b7 ; mov eax, 2 ; ret
0x00000000000d91cf : je 0xd9224 ; ret
0x00000000000d9ff2 : je 0xda043 ; ret
0x00000000000ddcf5 : je 0xddcd3 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e055e : je 0xe0868 ; call 0xdcfc8
0x00000000000e055d : je 0xe0869 ; call 0xdcfc9
0x00000000000e10ca : je 0xe10d3 ; ret
0x00000000000e5094 : je 0xe50d0 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000e6ac3 : je 0xe6add ; neg eax ; pop rbx ; ret
0x00000000000e6cc0 : je 0xe6cdd ; neg eax ; pop rbx ; ret
0x00000000000e7740 : je 0xe776a ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000e7efe : je 0xe7f05 ; ret
0x00000000000e9a83 : je 0xe9a8e ; mov qword ptr [rax], rdx ; ret
0x00000000000e9b52 : je 0xe9b47 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000eaf28 : je 0xeaf39 ; mov dword ptr [rip + 0x2c13f8], edi ; ret
0x00000000000ebff0 : je 0xebffb ; pop rbx ; ret
0x00000000000ed5be : je 0xed65e ; call rax
0x00000000000ed735 : je 0xed836 ; call rax
0x00000000000ee020 : je 0xee04e ; adc byte ptr [rcx + rcx*4 - 0x39], cl ; xor eax, eax ; syscall
0x00000000000f00f6 : je 0xf00fb ; ret
0x00000000000f25e4 : je 0xf25eb ; pop rbp ; ret
0x00000000000f29dd : je 0xf29ef ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000f29c7 : je 0xf29f0 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000f5561 : je 0xf5590 ; or byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000000f578b : je 0xf57a0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f8f25 : je 0xf8f34 ; xor eax, eax ; ret
0x00000000000fb5b3 : je 0xfb5c7 ; mov eax, 7 ; ret
0x00000000000fb5d1 : je 0xfb5f9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000fb5e0 : je 0xfb644 ; xor eax, eax ; pop rbx ; ret
0x00000000000fc62b : je 0xfc63b ; ret
0x00000000000fccd9 : je 0xfccde ; ret
0x00000000000fcd3d : je 0xfcd42 ; ret
0x00000000000fd15a : je 0xfd162 ; ret
0x00000000000fd342 : je 0xfd372 ; call rax
0x00000000000fd742 : je 0xfd75f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000fe8ac : je 0xfe8c0 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000ff1fc : je 0xff20e ; add rsp, 8 ; ret
0x00000000000ff7b0 : je 0xff7b7 ; ret
0x00000000000ffddc : je 0xffdf0 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000010c1a5 : jg 0x10c1ef ; mov eax, eax ; ret
0x0000000000119e52 : jg 0x119e9c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x119e68 ; ret
0x000000000011ea92 : jg 0x11eadc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11eaa8 ; ret
0x000000000012dcc9 : jg 0x12dd1c ; ret
0x000000000012dd10 : jg 0x12dd60 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000012dd15 : jg 0x12dd68 ; retf
0x000000000012dd4f : jg 0x12dd9a ; ret
0x000000000012dd8f : jg 0x12ddda ; retf
0x000000000012dec9 : jg 0x12df1c ; ret 0x894c
0x000000000012df10 : jg 0x12df60 ; mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x000000000012df15 : jg 0x12df68 ; retf -0x76b4
0x000000000012df4f : jg 0x12df9a ; ret 0x894c
0x000000000012df8b : jg 0x12dfd6 ; retf -0x76b4
0x0000000000130699 : jg 0x1306ec ; ret
0x00000000001306e0 : jg 0x130730 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000001306e5 : jg 0x130738 ; retf
0x000000000013071f : jg 0x13076a ; ret
0x000000000013075f : jg 0x1307aa ; retf
0x0000000000130899 : jg 0x1308ec ; ret 0x894c
0x00000000001308e0 : jg 0x130930 ; mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x00000000001308e5 : jg 0x130938 ; retf -0x76b4
0x000000000013091f : jg 0x13096a ; ret 0x894c
0x000000000013095b : jg 0x1309a6 ; retf -0x76b4
0x0000000000132c88 : jg 0x132cd9 ; loope 0x132c87 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132cff : jg 0x132d4a ; ret 0xff2
0x0000000000132d18 : jg 0x132d69 ; loop 0x132d17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132d8f : jg 0x132dda ; ret
0x0000000000132da8 : jg 0x132df9 ; jrcxz 0x132da7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132e38 : jg 0x132e89 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132eb8 : jg 0x132f09 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132f38 : jg 0x132f89 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132fb8 : jg 0x133009 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133115 : jg 0x133165 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000013311f : jg 0x13316a ; retf 0xff2
0x0000000000133195 : jg 0x1331e5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000013319f : jg 0x1331ea ; retf
0x0000000000133238 : jg 0x133289 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001332b8 : jg 0x133309 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133348 : jg 0x133399 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001333c8 : jg 0x133419 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000013343c : jg 0x133447 ; ret
0x0000000000133496 : jg 0x1334a9 ; ret
0x0000000000133491 : jg 0x1334e1 ; psllq mm1, qword ptr [rdi] ; jg 0x1334ae ; ret
0x0000000000133506 : jg 0x133519 ; ret
0x0000000000133576 : jg 0x133589 ; ret
0x0000000000133571 : jg 0x1335c1 ; or eax, 0xf7f0ff3 ; ret
0x00000000001335e6 : jg 0x1335f9 ; ret
0x00000000001335e1 : jg 0x133631 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133656 : jg 0x133669 ; ret
0x0000000000133651 : jg 0x1336a1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001336c6 : jg 0x1336d9 ; ret
0x00000000001336c1 : jg 0x133711 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133736 : jg 0x133749 ; ret
0x0000000000133731 : jg 0x133781 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001337a6 : jg 0x1337b9 ; ret
0x00000000001337a1 : jg 0x1337f1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133816 : jg 0x133829 ; ret
0x0000000000133886 : jg 0x133899 ; ret
0x00000000001338f6 : jg 0x133909 ; ret
0x00000000001338f1 : jg 0x133941 ; add eax, 0xf7f0ff3 ; ret
0x0000000000133966 : jg 0x133979 ; ret
0x0000000000133961 : jg 0x1339b1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001339d6 : jg 0x1339e9 ; ret
0x00000000001339d1 : jg 0x133a21 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133a46 : jg 0x133a59 ; ret
0x0000000000133a41 : jg 0x133a91 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133ab6 : jg 0x133ac9 ; ret
0x0000000000133ab1 : jg 0x133b01 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001357a8 : jg 0x1357f9 ; loope 0x1357a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013581f : jg 0x13586a ; ret 0xff2
0x0000000000135838 : jg 0x135889 ; loop 0x135837 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001358af : jg 0x1358fa ; ret
0x00000000001358c8 : jg 0x135919 ; jrcxz 0x1358c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135958 : jg 0x1359a9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001359d8 : jg 0x135a29 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135a58 : jg 0x135aa9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135ad8 : jg 0x135b29 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135c35 : jg 0x135c85 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000135c3f : jg 0x135c8a ; retf 0xff2
0x0000000000135cb5 : jg 0x135d05 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000135cbf : jg 0x135d0a ; retf
0x0000000000135d58 : jg 0x135da9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000135dd8 : jg 0x135e29 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000135e68 : jg 0x135eb9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000135ee8 : jg 0x135f39 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000135f5c : jg 0x135f67 ; ret
0x0000000000135fb6 : jg 0x135fc9 ; ret
0x0000000000135fb1 : jg 0x136001 ; psllq mm1, qword ptr [rdi] ; jg 0x135fce ; ret
0x0000000000136026 : jg 0x136039 ; ret
0x0000000000136096 : jg 0x1360a9 ; ret
0x0000000000136091 : jg 0x1360e1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000136106 : jg 0x136119 ; ret
0x0000000000136101 : jg 0x136151 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136176 : jg 0x136189 ; ret
0x0000000000136171 : jg 0x1361c1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001361e6 : jg 0x1361f9 ; ret
0x00000000001361e1 : jg 0x136231 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136256 : jg 0x136269 ; ret
0x0000000000136251 : jg 0x1362a1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001362c6 : jg 0x1362d9 ; ret
0x00000000001362c1 : jg 0x136311 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136336 : jg 0x136349 ; ret
0x00000000001363a6 : jg 0x1363b9 ; ret
0x0000000000136416 : jg 0x136429 ; ret
0x0000000000136411 : jg 0x136461 ; add eax, 0xf7f0ff3 ; ret
0x0000000000136486 : jg 0x136499 ; ret
0x0000000000136481 : jg 0x1364d1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001364f6 : jg 0x136509 ; ret
0x00000000001364f1 : jg 0x136541 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136566 : jg 0x136579 ; ret
0x0000000000136561 : jg 0x1365b1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001365d6 : jg 0x1365e9 ; ret
0x00000000001365d1 : jg 0x136621 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014de7a : jg 0x14de8b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000014e00b : jg 0x14e035 ; vzeroupper ; ret
0x000000000014e0b2 : jg 0x14e0bc ; vzeroupper ; ret
0x000000000014e13e : jg 0x14e168 ; vzeroupper ; ret
0x000000000014e1ce : jg 0x14e1d8 ; vzeroupper ; ret
0x000000000014e244 : jg 0x14e252 ; vzeroupper ; ret
0x000000000014e2a4 : jg 0x14e2b2 ; vzeroupper ; ret
0x000000000014e363 : jg 0x14e371 ; vzeroupper ; ret
0x00000000001518a4 : jg 0x1518b5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000001518b8 : jg 0x1518c9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000151d2a : jg 0x151d26 ; ret
0x0000000000151f97 : jg 0x151fa7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000151f8d : jg 0x151fad ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000152292 : jg 0x1522a3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000152476 : jg 0x1524a0 ; vzeroupper ; ret
0x0000000000152475 : jg 0x1524a1 ; vzeroupper ; ret
0x000000000015253c : jg 0x152546 ; vzeroupper ; ret
0x000000000015253b : jg 0x152547 ; vzeroupper ; ret
0x000000000015260f : jg 0x152639 ; vzeroupper ; ret
0x000000000015260e : jg 0x15263a ; vzeroupper ; ret
0x00000000001526e2 : jg 0x1526ec ; vzeroupper ; ret
0x00000000001526e1 : jg 0x1526ed ; vzeroupper ; ret
0x0000000000152765 : jg 0x152773 ; vzeroupper ; ret
0x0000000000152764 : jg 0x152774 ; vzeroupper ; ret
0x00000000001527d1 : jg 0x1527df ; vzeroupper ; ret
0x00000000001527d0 : jg 0x1527e0 ; vzeroupper ; ret
0x00000000001528bb : jg 0x1528c9 ; vzeroupper ; ret
0x00000000001528c9 : jg 0x1528d7 ; vzeroupper ; ret
0x0000000000154995 : jg 0x1549a4 ; neg eax ; ret
0x00000000001557b2 : jg 0x1557b9 ; add byte ptr [rax + 9], cl ; retf 0x25e9
0x00000000001588b2 : jg 0x1588bd ; add byte ptr [rcx + rdi + 0x48], dh ; add esp, 0x38 ; ret
0x000000000016db64 : jg 0x16db2f ; hlt ; inc dword ptr [rdx + rax*8 - 0xc] ; push qword ptr [rdx] ; ret 0xfff4
0x000000000016dbe4 : jg 0x16dba9 ; hlt ; call rax
0x000000000017ef6d : jg 0x17ef68 ; jmp qword ptr [rax]
0x0000000000180881 : jg 0x18088b ; add byte ptr [rax - 0x64], dl ; cli ; jmp rax
0x000000000018904d : jg 0x189055 ; add byte ptr [rax - 0x5c], ah ; out dx, al ; jmp rsp
0x0000000000001b0c : jg 0x1b69 ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x0000000000026854 : jg 0x267e5 ; sal dword ptr [rsi - 0x29], 0x2d ; ret 0
0x0000000000033028 : jg 0x33072 ; or eax, esi ; je 0x32fd3 ; ret
0x00000000000331bb : jg 0x3320d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000033673 : jg 0x3367a ; je 0x33666 ; ret
0x0000000000033915 : jg 0x33967 ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034536 : jg 0x3453c ; add byte ptr [rax], al ; syscall
0x0000000000037732 : jg 0x3777b ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000003b27 : jg 0x3b94 ; xchg eax, ebp ; retf 0x10bf
0x000000000004342b : jg 0x43499 ; xor eax, eax ; ret
0x00000000000435f7 : jg 0x434ff ; pop rbx ; pop rbp ; ret
0x0000000000045444 : jg 0x45451 ; ret 0x5488
0x0000000000049826 : jg 0x49853 ; retf -0x2fc7
0x0000000000075437 : jg 0x753c5 ; inc byte ptr [rdx] ; je 0x75451 ; mov dword ptr [rdi], edx ; ret
0x0000000000076502 : jg 0x7657b ; mov eax, 3 ; syscall
0x0000000000077832 : jg 0x778a8 ; xor eax, eax ; syscall
0x0000000000085e58 : jg 0x85e43 ; ret
0x0000000000098e86 : jg 0x98e91 ; ret
0x0000000000098e96 : jg 0x98ea4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000098eaa : jg 0x98eb9 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000098ec9 : jg 0x98ed7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098ed9 : jg 0x98ee7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000098ee9 : jg 0x98efa ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000098f0a : jg 0x98f19 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000098f2a : jg 0x98f39 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000098f4a : jg 0x98f59 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000098f6a : jg 0x98f7c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000098fad : jg 0x98fbf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000098fcd : jg 0x98fdf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000098feb : jg 0x98ffb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009900b : jg 0x9901b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009902b : jg 0x9903b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009904b : jg 0x9905b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000995d8 : jg 0x995e3 ; jne 0x99e98 ; ret
0x00000000000995fc : jg 0x99608 ; jne 0x99e98 ; ret
0x000000000009961f : jg 0x9962c ; jne 0x99e98 ; ret
0x000000000009963a : jg 0x99648 ; jne 0x99e98 ; ret
0x000000000009965d : jg 0x9966c ; jne 0x99e98 ; ret
0x0000000000099682 : jg 0x99692 ; jne 0x99e98 ; ret
0x00000000000996a0 : jg 0x996b1 ; jne 0x99e98 ; ret
0x00000000000996bc : jg 0x996ce ; jne 0x99e98 ; ret
0x00000000000996df : jg 0x996f2 ; jne 0x99e98 ; ret
0x0000000000099704 : jg 0x99718 ; jne 0x99e98 ; ret
0x0000000000099722 : jg 0x99737 ; jne 0x99e98 ; ret
0x0000000000099742 : jg 0x99758 ; jne 0x99e98 ; ret
0x0000000000099764 : jg 0x9977b ; jne 0x99e98 ; ret
0x0000000000099784 : jg 0x9979c ; jne 0x99e98 ; ret
0x00000000000997a4 : jg 0x997bd ; jne 0x99e98 ; ret
0x00000000000997be : jg 0x997d8 ; jne 0x99e98 ; ret
0x00000000000997e1 : jg 0x997fc ; jne 0x99e98 ; ret
0x0000000000099806 : jg 0x99822 ; jne 0x99e98 ; ret
0x0000000000099824 : jg 0x99841 ; jne 0x99e98 ; ret
0x0000000000099844 : jg 0x99862 ; jne 0x99e98 ; ret
0x0000000000099867 : jg 0x99886 ; jne 0x99e98 ; ret
0x0000000000099886 : jg 0x998a6 ; jne 0x99e98 ; ret
0x00000000000998a6 : jg 0x998c7 ; jne 0x99e98 ; ret
0x00000000000998c6 : jg 0x998e8 ; jne 0x99e98 ; ret
0x00000000000998e9 : jg 0x9990c ; jne 0x99e98 ; ret
0x000000000009991e : jg 0x99942 ; jne 0x99e98 ; ret
0x000000000009994c : jg 0x99971 ; jne 0x99e98 ; ret
0x000000000009997c : jg 0x999a2 ; jne 0x99e98 ; ret
0x00000000000999a8 : jg 0x999cf ; jne 0x99e98 ; ret
0x00000000000999d8 : jg 0x99a00 ; jne 0x99e98 ; ret
0x0000000000099a08 : jg 0x99a31 ; jne 0x99e98 ; ret
0x0000000000099a38 : jg 0x99a62 ; jne 0x99e98 ; ret
0x0000000000099b56 : jg 0x99b61 ; ret
0x0000000000099b69 : jg 0x99b77 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000099b7a : jg 0x99b89 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000099b99 : jg 0x99ba7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000099ba9 : jg 0x99bb7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000099bbc : jg 0x99bcd ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000099bda : jg 0x99be9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000099bfa : jg 0x99c09 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000099c1a : jg 0x99c29 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000099c3d : jg 0x99c4f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x0000000000099c7d : jg 0x99c8f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000099c9d : jg 0x99caf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000099cbb : jg 0x99ccb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000099cdb : jg 0x99ceb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000099cfb : jg 0x99d0b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000099d1b : jg 0x99d2b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000099e52 : jg 0x99e5d ; ret
0x0000000000099f86 : jg 0x99fba ; ret
0x000000000009a4f6 : jg 0x9a505 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009a506 : jg 0x9a518 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009a539 : jg 0x9a54b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009a559 : jg 0x9a56b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009a67f : jg 0x9a6df ; or eax, 0x1c478d48 ; ret
0x000000000009ac8b : jg 0x9ac96 ; jne 0x9b6b8 ; ret
0x000000000009acb0 : jg 0x9acbc ; jne 0x9b6b8 ; ret
0x000000000009acd3 : jg 0x9ace0 ; jne 0x9b6b8 ; ret
0x000000000009acee : jg 0x9acfc ; jne 0x9b6b8 ; ret
0x000000000009ad11 : jg 0x9ad20 ; jne 0x9b6b8 ; ret
0x000000000009ad36 : jg 0x9ad46 ; jne 0x9b6b8 ; ret
0x000000000009ad54 : jg 0x9ad65 ; jne 0x9b6b8 ; ret
0x000000000009ad70 : jg 0x9ad82 ; jne 0x9b6b8 ; ret
0x000000000009ad93 : jg 0x9ada6 ; jne 0x9b6b8 ; ret
0x000000000009adb8 : jg 0x9adcc ; jne 0x9b6b8 ; ret
0x000000000009ade6 : jg 0x9adfb ; jne 0x9b6b8 ; ret
0x000000000009ae06 : jg 0x9ae1c ; jne 0x9b6b8 ; ret
0x000000000009ae28 : jg 0x9ae3f ; jne 0x9b6b8 ; ret
0x000000000009ae58 : jg 0x9ae70 ; jne 0x9b6b8 ; ret
0x000000000009ae88 : jg 0x9aea1 ; jne 0x9b6b8 ; ret
0x000000000009aeb2 : jg 0x9aecc ; jne 0x9b6b8 ; ret
0x000000000009aed5 : jg 0x9aef0 ; jne 0x9b6b8 ; ret
0x000000000009aefa : jg 0x9af16 ; jne 0x9b6b8 ; ret
0x000000000009af28 : jg 0x9af45 ; jne 0x9b6b8 ; ret
0x000000000009af58 : jg 0x9af76 ; jne 0x9b6b8 ; ret
0x000000000009af8b : jg 0x9afaa ; jne 0x9b6b8 ; ret
0x000000000009afba : jg 0x9afda ; jne 0x9b6b8 ; ret
0x000000000009afea : jg 0x9b00b ; jne 0x9b6b8 ; ret
0x000000000009b01a : jg 0x9b03c ; jne 0x9b6b8 ; ret
0x000000000009b04d : jg 0x9b070 ; jne 0x9b6b8 ; ret
0x000000000009b082 : jg 0x9b0a6 ; jne 0x9b6b8 ; ret
0x000000000009b0b0 : jg 0x9b0d5 ; jne 0x9b6b8 ; ret
0x000000000009b0e0 : jg 0x9b106 ; jne 0x9b6b8 ; ret
0x000000000009b10c : jg 0x9b133 ; jne 0x9b6b8 ; ret
0x000000000009b13c : jg 0x9b164 ; jne 0x9b6b8 ; ret
0x000000000009b16c : jg 0x9b195 ; jne 0x9b6b8 ; ret
0x000000000009b19c : jg 0x9b1c6 ; jne 0x9b6b8 ; ret
0x000000000009b346 : jg 0x9b355 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009b359 : jg 0x9b36b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009b399 : jg 0x9b3ab ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009b3b9 : jg 0x9b3cb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009b4df : jg 0x9b53f ; or eax, 0x1d478d48 ; ret
0x000000000009b672 : jg 0x9b67d ; ret
0x000000000009b7a6 : jg 0x9b7de ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009b7a5 : jg 0x9b82d ; xor byte ptr [rax - 0x73], cl ; ret
0x000000000009c136 : jg 0x9c141 ; ret
0x000000000009c146 : jg 0x9c154 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009c15a : jg 0x9c169 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009c179 : jg 0x9c187 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c189 : jg 0x9c197 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009c199 : jg 0x9c1aa ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009c1ba : jg 0x9c1c9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009c1da : jg 0x9c1e9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009c1fa : jg 0x9c209 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009c21a : jg 0x9c22c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009c25d : jg 0x9c26f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009c27d : jg 0x9c28f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009c29b : jg 0x9c2ab ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009c2bb : jg 0x9c2cb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009c2db : jg 0x9c2eb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009c2fb : jg 0x9c30b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009cc06 : jg 0x9cc11 ; ret
0x000000000009cc16 : jg 0x9cc24 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009cc2a : jg 0x9cc39 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009cc49 : jg 0x9cc57 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cc59 : jg 0x9cc67 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009cc69 : jg 0x9cc7a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009cc8a : jg 0x9cc99 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009ccaa : jg 0x9ccb9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009ccca : jg 0x9ccd9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009ccea : jg 0x9ccfc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009cd2d : jg 0x9cd3f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009cd4d : jg 0x9cd5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009cd6b : jg 0x9cd7b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009cd8b : jg 0x9cd9b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009cdab : jg 0x9cdbb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009cdcb : jg 0x9cddb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009cf76 : jg 0x9cf86 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009d14f : jg 0x9d1b0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009d16f : jg 0x9d1d0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009d1e6 : jg 0x9d21f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009d1e5 : jg 0x9d26e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009dc34 : jg 0x9dc6c ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000009dd02 : jg 0x9dd3a ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000009dd8c : jg 0x9dd97 ; ret
0x000000000009ddec : jg 0x9ddf7 ; ret
0x000000000009de63 : jg 0x9deaf ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x000000000009ded0 : jg 0x9df0d ; ret 0x2b77
0x000000000009f265 : jg 0x9f26d ; neg eax ; ret
0x00000000000afe25 : jg 0xafe75 ; cmovle eax, edx ; pop rbx ; ret
0x00000000000ba857 : jg 0xba82a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bfec4 : jg 0xbfede ; test bh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c0054 : jg 0xc006e ; test cl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c01c4 : jg 0xc01de ; test cl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c0dac : jg 0xc0db2 ; add byte ptr [rax], al ; ret
0x00000000000c0dfb : jg 0xc0e05 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c1a14 : jg 0xc1a1a ; add cl, ch ; retf
0x00000000000da035 : jg 0xda054 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xda081 ; ret
0x00000000000e15dd : jg 0xe15ee ; mov eax, 3 ; syscall
0x00000000000e15fd : jg 0xe1617 ; mov edx, dword ptr [r15 + 0x1c] ; mov eax, ecx ; syscall
0x00000000000e16d2 : jg 0xe16e3 ; mov eax, 3 ; syscall
0x00000000000e767a : jg 0xe7669 ; ret
0x000000000010f817 : jge 0x10f822 ; cmp edi, 0xff ; je 0x10f832 ; mov eax, edx ; syscall
0x0000000000113c6c : jge 0x113c9d ; mov rsi, rbx ; call 0x206e7
0x0000000000119c2f : jge 0x119c43 ; call rax
0x000000000011e88f : jge 0x11e8a3 ; call rax
0x000000000011eed8 : jge 0x11eeec ; call rax
0x0000000000158db4 : jge 0x158dc8 ; call rbx
0x0000000000167dca : jge 0x167dab ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000169714 : jge 0x169785 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000017b7e5 : jge 0x17b7d4 ; call rax
0x000000000017f7bd : jge 0x17f7b9 ; call qword ptr [rax]
0x00000000000e2b82 : jge 0xe2bd4 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e63b2 : jge 0xe63f4 ; call 0xe2e54
0x00000000000ec766 : jge 0xec731 ; mov r14d, r15d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000edc56 : jge 0xedc07 ; mov eax, 3 ; syscall
0x00000000000edd1b : jge 0xedcbc ; mov eax, 3 ; syscall
0x00000000000f0781 : jge 0xf0787 ; add byte ptr [rax], al ; syscall
0x0000000000100dfb : jl 0x100e2a ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000103a1e : jl 0x103a48 ; xor al, ch ; retf 0x242
0x0000000000103bca : jl 0x103bf5 ; and al, ch ; salc ; retf
0x0000000000111922 : jl 0x111951 ; or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x0000000000112983 : jl 0x1129b0 ; sbb byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xf0dc
0x00000000001140f0 : jl 0x11411e ; add al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011a427 : jl 0x11a452 ; or byte ptr [rax + 0x63], cl ; ret
0x00000000001217bc : jl 0x1217e7 ; or byte ptr [rax - 0x77], cl ; retf -0x76b4
0x00000000001286a6 : jl 0x1286d5 ; sub byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x20 ; call r9
0x000000000015174b : jl 0x151754 ; neg eax ; ret
0x0000000000151824 : jl 0x151873 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000151860 : jl 0x1518af ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000151a5e : jl 0x151aad ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000151bc5 : jl 0x151c14 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000151d27 : jl 0x151d76 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000151f4c : jl 0x151f9b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000151f6d : jl 0x151fbc ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000151f80 : jl 0x151fcf ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000152055 : jl 0x1520a4 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000001520ad : jl 0x1520fc ; adc dword ptr [rsi + 3], edx ; ret
0x000000000015214a : jl 0x152199 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000152360 : jl 0x15237f ; cld ; vzeroupper ; ret
0x0000000000169912 : jl 0x169971 ; leave ; retf
0x000000000016e7a9 : jl 0x16e7a3 ; call rcx
0x000000000016e7b5 : jl 0x16e7af ; call rcx
0x000000000016e7b1 : jl 0x16e7af ; dec dword ptr [rbx] ; jl 0x16e7b3 ; call rcx
0x000000000017acdc : jl 0x17ac94 ; sti ; jmp qword ptr [rdx]
0x00000000001823a9 : jl 0x182397 ; jmp qword ptr [rdi]
0x0000000000193d34 : jl 0x193d69 ; add dword ptr [rax], eax ; pop rax ; cmp al, 0xf4 ; jmp qword ptr [rdi]
0x0000000000195334 : jl 0x19537f ; add dword ptr [rax], eax ; clc ; fxtract ; jmp qword ptr [rcx]
0x0000000000198134 : jl 0x1981ad ; add dword ptr [rax], eax ; pop rax ; mov ch, dh ; jmp qword ptr [rcx]
0x0000000000199e34 : jl 0x199dca ; add dword ptr [rax], eax ; fsubr st(5) ; cmc ; call rsp
0x000000000002552b : jl 0x25555 ; call r15
0x00000000000258b9 : jl 0x258e3 ; call r15
0x0000000000002627 : jl 0x25ba ; loop 0x2605 ; ret 0x23cb
0x0000000000025d2b : jl 0x25d59 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000025f77 : jl 0x25fa2 ; or byte ptr [rax + 0x29], cl ; retf -0x1f7d
0x0000000000026192 : jl 0x261bc ; call r15
0x0000000000026977 : jl 0x269a5 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000027be3 : jl 0x27c0d ; call r15
0x0000000000027fc5 : jl 0x27fef ; call r14
0x00000000000289f5 : jl 0x28a1f ; call r15
0x0000000000028d8c : jl 0x28db6 ; call r14
0x000000000003272c : jl 0x3275a ; or byte ptr [rax + 2], bh ; syscall
0x0000000000039dcc : jl 0x39df7 ; sub byte ptr [rcx - 0x77], al ; ret
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004f78a : jl 0x4f754 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000005d692 : jl 0x5d6c1 ; or byte ptr [rdi + rcx - 0x4a], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006a1e5 : jl 0x6a20f ; or al, ch ; ret
0x000000000007c5c4 : jl 0x7c590 ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000083f90 : jl 0x83f95 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000863fd : jl 0x86428 ; sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000008e61a : jl 0x8e685 ; add rax, rdi ; ret
0x000000000008e62a : jl 0x8e687 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e64a : jl 0x8e687 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e66a : jl 0x8e687 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000b6bb3 : jl 0xb6bde ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000b7d85 : jl 0xb7d9b ; add ebp, ecx ; ret 0xfff0
0x00000000000bbfc0 : jl 0xbbfee ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000c0901 : jl 0xc0907 ; add byte ptr [rax], al ; syscall
0x00000000000c7c7a : jl 0xc7ca4 ; jo 0xc7c05 ; ret 0x8d01
0x00000000000c9e9e : jl 0xc9ed8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca2c8 : jl 0xca2e7 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000ca4e0 : jl 0xca4d3 ; ret
0x00000000000cf24e : jl 0xcf279 ; sbb byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000d4da7 : jl 0xd4dd2 ; or byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000d633e : jl 0xd6368 ; jo 0xd6347 ; ret 0xc083
0x00000000000e0300 : jl 0xe032b ; adc al, ch ; clc ; retf -1
0x00000000000e62a7 : jl 0xe62af ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000000ec5b6 : jl 0xec5e4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000f00f4 : jl 0xf010d ; je 0xf00fd ; ret
0x00000000000f1682 : jl 0xf16af ; or byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0x00000000000fd480 : jl 0xfd4ae ; or byte ptr [rax + 0xe6], bh ; syscall
0x000000000011d9d8 : jle 0x11d9f0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001275b3 : jle 0x12753a ; ret 0x8380
0x00000000001494e6 : jle 0x149401 ; movsxd rax, ecx ; ret
0x000000000014972a : jle 0x14966b ; ret
0x0000000000167dc2 : jle 0x167d5b ; xlatb ; retf -0x5e15
0x0000000000169985 : jle 0x1699c0 ; pop rsp ; sbb ebp, ebx ; retf
0x000000000016b580 : jle 0x16b57d ; out dx, al ; call rdi
0x000000000016b95d : jle 0x16b950 ; call qword ptr [rbx]
0x000000000016e78d : jle 0x16e787 ; call rax
0x000000000016e7a5 : jle 0x16e79f ; call rcx
0x000000000017a1a0 : jle 0x17a20c ; std ; call qword ptr [rsi]
0x000000000017b3c5 : jle 0x17b3b3 ; jmp rax
0x0000000000193bc1 : jle 0x193bcf ; ret
0x0000000000029e62 : jle 0x29e75 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000000320c : jle 0x320a ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000003599 : jle 0x35cd ; retf -0x786e
0x0000000000093b8e : jle 0x93b98 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b1674 : jle 0xb1688 ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000000b441d : jle 0xb4466 ; mov r15, rbx ; call 0x206e7
0x00000000000c0e59 : jle 0xc0e5f ; add byte ptr [rax], al ; ret
0x00000000000d8732 : jle 0xd872d ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000f07b1 : jle 0xf07b7 ; add byte ptr [rax], al ; syscall
0x00000000000f7a5e : jle 0xf79f1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001190bf : jmp 0x119085
0x000000000011b7f7 : jmp 0x11b7c5
0x000000000011c217 : jmp 0x11c1e5
0x000000000014f798 : jmp 0x14f766
0x000000000014f816 : jmp 0x14f7e4
0x000000000014fca8 : jmp 0x14fc76
0x000000000014fd26 : jmp 0x14fcf4
0x0000000000150dc8 : jmp 0x150d96
0x0000000000150e46 : jmp 0x150e14
0x00000000001512d8 : jmp 0x1512a6
0x0000000000151356 : jmp 0x151324
0x0000000000169989 : jmp 0x169957
0x0000000000169ed6 : jmp 0x169ea4
0x0000000000181172 : jmp 0x19dc78
0x0000000000113d05 : jmp 0x207aa
0x0000000000002c53 : jmp 0x2c21
0x000000000002fa43 : jmp 0x2fa11
0x000000000000395b : jmp 0x3921
0x000000000000395f : jmp 0x392d
0x0000000000044791 : jmp 0x4475f
0x0000000000044c81 : jmp 0x44c4f
0x000000000005dd2f : jmp 0x5a812
0x000000000006012e : jmp 0x5cb6f
0x000000000005e118 : jmp 0x5e0de
0x00000000000656a7 : jmp 0x6210c
0x00000000000661c6 : jmp 0x62462
0x00000000000665b9 : jmp 0x6305f
0x0000000000067306 : jmp 0x6351e
0x0000000000063c16 : jmp 0x63bdc
0x0000000000064183 : jmp 0x64149
0x0000000000068366 : jmp 0x64e5d
0x0000000000066c61 : jmp 0x66c27
0x000000000006ad6b : jmp 0x6ad31
0x00000000000ecf59 : jmp 0x791f2
0x0000000000079d7d : jmp 0x79d43
0x0000000000081d01 : jmp 0x81ccf
0x00000000000825d5 : jmp 0x8259b
0x000000000008590e : jmp 0x858d4
0x0000000000093494 : jmp 0x9345a
0x00000000000936ac : jmp 0x93672
0x000000000009d55e : jmp 0x9d524
0x000000000009d62f : jmp 0x9d5f5
0x000000000009d69e : jmp 0x9d664
0x00000000000bb101 : jmp 0xbb0cf
0x00000000000c3a01 : jmp 0xc39cf
0x00000000000c6036 : jmp 0xc5ffc
0x00000000000cb102 : jmp 0xcb0c8
0x00000000000d12c2 : jmp 0xd1288
0x00000000000dd9e7 : jmp 0xdd9b5
0x00000000000e2a8a : jmp 0xe2a50
0x00000000000e6528 : jmp 0xe64f6
0x00000000000e767b : jmp 0xe7641
0x00000000000eb962 : jmp 0xeb928
0x00000000000f0606 : jmp 0xf05d4
0x00000000000f1176 : jmp 0xf1144
0x00000000000f143e : jmp 0xf140c
0x00000000000fac51 : jmp 0xfac1f
0x000000000011ab1b : jmp 0xffffffff895f6dab
0x000000000009f173 : jmp 0xffffffffc309f17c
0x0000000000044141 : jmp 0xffffffffc313ca96
0x00000000000883f6 : jmp 0xffffffffc33f8c3f
0x0000000000064075 : jmp 0xffffffffc3fd407d
0x0000000000060fa8 : jmp 0xffffffffcb3f57b2
0x00000000000af7b3 : jmp 0xffffffffcb943fbd
0x000000000016c61d : jmp 0xffffffffcbd7c617
0x00000000000e8e8b : jmp qword ptr [r8]
0x000000000017ab27 : jmp qword ptr [rax + 0x10fffb89]
0x000000000017b08f : jmp qword ptr [rax + 0x10fffbaa]
0x000000000016c6d3 : jmp qword ptr [rax + 0x10fffbf0]
0x000000000017b087 : jmp qword ptr [rax + 0x20fffbab]
0x000000000017b07f : jmp qword ptr [rax + 0x20fffbac]
0x000000000017b077 : jmp qword ptr [rax + 0x20fffbad]
0x000000000017b06f : jmp qword ptr [rax + 0x20fffbae]
0x000000000017ae63 : jmp qword ptr [rax + 0x20fffbb0]
0x000000000016f787 : jmp qword ptr [rax - 0x2f0005a9]
0x000000000016ca83 : jmp qword ptr [rax - 0x2f000d1c]
0x000000000016c8c3 : jmp qword ptr [rax - 0x2f000d30]
0x000000000016c513 : jmp qword ptr [rax - 0x2f000ea8]
0x000000000016e24b : jmp qword ptr [rax - 0x34000a7b]
0x000000000001d798 : jmp qword ptr [rax]
0x000000000016b8db : jmp qword ptr [rbp + 0x13ffef73]
0x000000000016b933 : jmp qword ptr [rbp + 0x13ffef79]
0x000000000016ef6b : jmp qword ptr [rbp + 0x26fff700]
0x000000000016ef23 : jmp qword ptr [rbp - 0x1d000900]
0x000000000016e6db : jmp qword ptr [rbx + 0x13fff651]
0x000000000016d78b : jmp qword ptr [rbx + 0x22fff4a2]
0x00000000000025a7 : jmp qword ptr [rbx]
0x0000000000110fa2 : jmp qword ptr [rcx]
0x000000000016a5c4 : jmp qword ptr [rdi]
0x000000000017aa17 : jmp qword ptr [rdx + 0x12fffb83]
0x000000000016d5b3 : jmp qword ptr [rdx - 0x1b000b5c]
0x000000000000b330 : jmp qword ptr [rdx]
0x0000000000166b63 : jmp qword ptr [rip + 0x17ffecb6]
0x000000000016b6e3 : jmp qword ptr [rsi]
0x0000000000001b66 : jmp r10
0x0000000000156a40 : jmp r15
0x000000000008aa48 : jmp r8
0x000000000012babd : jmp r9
0x0000000000021301 : jmp rax
0x000000000006f405 : jmp rbx
0x0000000000043507 : jmp rcx
0x00000000000621bc : jmp rdi
0x0000000000001b67 : jmp rdx
0x000000000002b2af : jmp rsi
0x0000000000002acd : jmp rsp
0x00000000001044b2 : jne 0x104467 ; mov rdi, r14 ; call 0x207af
0x0000000000107af9 : jne 0x107af0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b6d7 : jne 0x10b6bc ; ret
0x000000000010bbc4 : jne 0x10bc14 ; mov eax, r8d ; ret
0x000000000010bd53 : jne 0x10bd07 ; mov eax, 0xffffffff ; ret
0x000000000010dafd : jne 0x10da4a ; ret
0x000000000010f6ac : jne 0x10f6b2 ; ret
0x000000000010f6ec : jne 0x10f6e0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010fc7f : jne 0x10fc74 ; pop rbx ; ret
0x0000000000111925 : jne 0x111916 ; add rsp, 0x18 ; ret
0x0000000000114ebd : jne 0x114f08 ; mov dword ptr [rsi], 0 ; ret
0x00000000001156b5 : jne 0x1156c8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001157bd : jne 0x115757 ; xor eax, eax ; pop rbx ; ret
0x0000000000116492 : jne 0x116475 ; xor eax, eax ; pop rbx ; ret
0x00000000001164f2 : jne 0x1164d8 ; mov eax, 1 ; pop rbx ; ret
0x0000000000117414 : jne 0x117403 ; ret
0x0000000000119e58 : jne 0x119e62 ; ret
0x000000000011e101 : jne 0x11e116 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e807 : jne 0x11e7f3 ; pop rbx ; ret
0x000000000011ea98 : jne 0x11eaa2 ; ret
0x000000000011fec3 : jne 0x11feba ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000121072 : jne 0x121087 ; mov eax, 1 ; ret
0x00000000001210b2 : jne 0x1210c7 ; mov eax, 1 ; ret
0x00000000001257ec : jne 0x1257fd ; xor eax, eax ; pop rbx ; ret
0x0000000000127e01 : jne 0x127e16 ; add rsp, 0x38 ; ret
0x0000000000128e88 : jne 0x128e94 ; xor eax, eax ; ret
0x0000000000128eb8 : jne 0x128ec4 ; xor eax, eax ; ret
0x0000000000128ee8 : jne 0x128ef4 ; xor eax, eax ; ret
0x0000000000128f18 : jne 0x128f24 ; xor eax, eax ; ret
0x0000000000128f48 : jne 0x128f54 ; xor eax, eax ; ret
0x0000000000128f78 : jne 0x128f84 ; xor eax, eax ; ret
0x0000000000128faf : jne 0x128fce ; mov eax, 0x27 ; syscall
0x000000000013def1 : jne 0x13e4a6 ; ret
0x0000000000149933 : jne 0x149957 ; xor eax, eax ; vzeroupper ; ret
0x0000000000149fda : jne 0x149fe5 ; vzeroupper ; ret
0x000000000014a0d4 : jne 0x149fe6 ; ret
0x000000000014a21f : jne 0x149fe9 ; vzeroupper ; ret
0x000000000014dc33 : jne 0x14dc68 ; mov rax, r8 ; vzeroupper ; ret
0x000000000014e334 : jne 0x14e31c ; vzeroupper ; ret
0x000000000014e49a : jne 0x14e4a5 ; vzeroupper ; ret
0x000000000014e522 : jne 0x14e4a6 ; ret
0x000000000014e66f : jne 0x14e4a9 ; vzeroupper ; ret
0x000000000014e4c6 : jne 0x14e4ae ; ret
0x000000000014e8e3 : jne 0x14e907 ; xor eax, eax ; vzeroupper ; ret
0x00000000001508cd : jne 0x1508f7 ; xor eax, eax ; ret
0x000000000014fec1 : jne 0x1508fb ; xor eax, eax ; ret
0x000000000014fee9 : jne 0x150907 ; xor eax, eax ; ret
0x000000000015170d : jne 0x151737 ; xor eax, eax ; ret
0x00000000001514f1 : jne 0x15173b ; xor eax, eax ; ret
0x0000000000151741 : jne 0x15174a ; xor eax, eax ; ret
0x0000000000151517 : jne 0x15174e ; xor eax, eax ; ret
0x0000000000152887 : jne 0x152867 ; vzeroupper ; ret
0x00000000001529f5 : jne 0x152986 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001529c7 : jne 0x152986 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001529c6 : jne 0x152987 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000154154 : jne 0x154368 ; xor eax, eax ; ret
0x0000000000154359 : jne 0x154379 ; xor eax, eax ; ret
0x0000000000154201 : jne 0x15437d ; xor eax, eax ; ret
0x0000000000154371 : jne 0x15437e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000154986 : jne 0x154994 ; xor eax, eax ; ret
0x000000000015485d : jne 0x154996 ; ret
0x0000000000158e83 : jne 0x158e70 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015929d : jne 0x15928e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001592f0 : jne 0x1592d0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015942d : jne 0x15941d ; pop rbx ; ret
0x00000000001594d5 : jne 0x1594bb ; pop rbx ; ret
0x0000000000159648 : jne 0x159653 ; ret
0x0000000000159729 : jne 0x15971c ; pop rbx ; ret
0x0000000000159d26 : jne 0x159d33 ; pop rbx ; ret
0x0000000000167e37 : jne 0x167e01 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000169dcb : jne 0x169df2 ; retf 0x32dd
0x000000000016d289 : jne 0x16d285 ; dec esi ; hlt ; call rcx
0x000000000017abcd : jne 0x17abcc ; call qword ptr [rax]
0x000000000017b581 : jne 0x17b589 ; add al, dh ; sbb ch, bl ; jmp rax
0x000000000017b591 : jne 0x17b599 ; add byte ptr [rax], ah ; sbb ebp, ebx ; call qword ptr [rax]
0x000000000017cded : jne 0x17cde1 ; call qword ptr [rax]
0x0000000000180719 : jne 0x180723 ; add byte ptr [rax], ah ; pop rbx ; cli ; jmp rax
0x0000000000197454 : jne 0x197462 ; ret
0x000000000019860d : jne 0x198616 ; add byte ptr [rax - 0x72], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000198625 : jne 0x19862e ; add byte ptr [rax - 0x72], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a4241 : jne 0x1a424a ; retf
0x00000000001a44db : jne 0x1a44e4 ; retf
0x00000000001a7904 : jne 0x1a790f ; add byte ptr [rax], al ; ret
0x0000000000032364 : jne 0x32342 ; ret
0x0000000000033112 : jne 0x33128 ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000033ff8 : jne 0x34003 ; ret
0x0000000000034d75 : jne 0x34d6f ; mov eax, 1 ; ret
0x0000000000034dd7 : jne 0x34dc4 ; xor eax, eax ; ret
0x0000000000034e27 : jne 0x34e14 ; xor eax, eax ; ret
0x0000000000035cf3 : jne 0x35cfc ; mov rdi, qword ptr [r12] ; call r14
0x0000000000003597 : jne 0x3600 ; jle 0x35cf ; retf -0x786e
0x000000000003708c : jne 0x37058 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003713b : jne 0x37143 ; pop rbx ; ret
0x0000000000037e38 : jne 0x37e71 ; mov edx, edx ; mov eax, 0x13e ; syscall
0x0000000000038f51 : jne 0x38f96 ; add rsp, 8 ; ret
0x000000000003b831 : jne 0x3b876 ; add rsp, 8 ; ret
0x000000000003e101 : jne 0x3e146 ; add rsp, 8 ; ret
0x00000000000414be : jne 0x41497 ; ret
0x00000000000429a8 : jne 0x429a6 ; mov rax, rbx ; pop rbx ; ret
0x000000000004380f : jne 0x43804 ; xor eax, eax ; ret
0x0000000000043835 : jne 0x4381f ; mov eax, 1 ; ret
0x00000000000438ef : jne 0x438e4 ; xor eax, eax ; ret
0x0000000000043915 : jne 0x438ff ; mov eax, 1 ; ret
0x0000000000043bb7 : jne 0x43ba6 ; mov rax, rdx ; ret
0x000000000004422f : jne 0x44226 ; mov rax, rdx ; ret
0x00000000000457c1 : jne 0x45806 ; add rsp, 8 ; ret
0x0000000000048911 : jne 0x488fd ; mov rax, rsi ; ret
0x0000000000048995 : jne 0x48975 ; mov rax, rsi ; ret
0x0000000000068af1 : jne 0x68b06 ; mov rax, rbx ; pop rbx ; ret
0x000000000006fdb1 : jne 0x6fda3 ; ret
0x000000000007253c : jne 0x72543 ; pop rbx ; ret
0x0000000000076140 : jne 0x76156 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078373 : jne 0x78384 ; xor eax, eax ; ret
0x0000000000078ef1 : jne 0x78ee3 ; ret
0x0000000000079a8e : jne 0x79a83 ; ret
0x0000000000079cb9 : jne 0x79cc3 ; pop rbx ; ret
0x0000000000079de1 : jne 0x79da7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079e2c : jne 0x79e25 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007a6f6 : jne 0x7a6eb ; ret
0x000000000007b9ff : jne 0x7b9d1 ; neg rbx ; mov rdi, rbx ; call qword ptr [r14]
0x000000000007ba17 : jne 0x7ba47 ; xor edi, edi ; call qword ptr [r14]
0x00000000000804ec : jne 0x804b3 ; ret
0x000000000008069b : jne 0x806a3 ; ret
0x00000000000833b1 : jne 0x833a3 ; ret
0x000000000008345b : jne 0x83453 ; ret
0x00000000000840fe : jne 0x840c4 ; add rsp, 8 ; ret
0x0000000000084121 : jne 0x84136 ; add rsp, 8 ; ret
0x0000000000085f5b : jne 0x85f53 ; ret
0x0000000000086796 : jne 0x86781 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087045 : jne 0x8703d ; xor eax, eax ; pop rbx ; ret
0x0000000000087017 : jne 0x8704d ; mov rax, rdi ; pop rbx ; ret
0x00000000000883f5 : jne 0x883e5 ; or byte ptr [rdi], sil ; ret
0x000000000008a5d2 : jne 0x8a5c5 ; mov qword ptr [rdx], rcx ; ret
0x000000000008a68b : jne 0x8a680 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008a709 : jne 0x8a6f1 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000008a756 : jne 0x8a74b ; ret
0x000000000008a79a : jne 0x8a78b ; ret
0x000000000008a7f4 : jne 0x8a7d3 ; ret
0x000000000008a89a : jne 0x8a888 ; cmp r8d, ecx ; je 0x8a888 ; ret
0x000000000008a8d9 : jne 0x8a8cc ; xor eax, eax ; ret
0x000000000008a932 : jne 0x8a914 ; xor eax, eax ; ret
0x000000000008c5fc : jne 0x8c5e6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000008e0f7 : jne 0x8e154 ; xor eax, eax ; ret
0x000000000008e0c7 : jne 0x8e178 ; xor eax, eax ; ret
0x000000000008e59a : jne 0x8e614 ; xor eax, eax ; ret
0x000000000008e5c9 : jne 0x8e644 ; xor eax, eax ; ret
0x0000000000093cb3 : jne 0x93cbe ; xor rax, rax ; ret
0x00000000000995da : jne 0x99e96 ; ret
0x000000000009ac8d : jne 0x9b6b6 ; ret
0x000000000009d391 : jne 0x9d382 ; ret
0x000000000009d441 : jne 0x9d432 ; ret
0x000000000009d5b1 : jne 0x9d5a6 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000009d701 : jne 0x9d6f6 ; sub rax, 1 ; ret
0x000000000009de6d : jne 0x9de56 ; ret
0x000000000009e577 : jne 0x9e56b ; ret
0x000000000009f1e6 : jne 0x9f262 ; ret
0x000000000009f10f : jne 0x9f266 ; ret
0x000000000009f0ee : jne 0x9f268 ; xor eax, eax ; ret
0x000000000009f3d3 : jne 0x9f39b ; ret
0x000000000009f416 : jne 0x9f409 ; mov dword ptr [rsi + 4], 0 ; ret
0x000000000009f4e9 : jne 0x9f4d5 ; xor eax, eax ; ret
0x000000000009f5a6 : jne 0x9f59b ; ret
0x000000000009f5d8 : jne 0x9f5c3 ; ret
0x000000000009f6b3 : jne 0x9f683 ; ret
0x000000000009f69d : jne 0x9f693 ; ret
0x000000000009f76c : jne 0x9f764 ; xor eax, eax ; ret
0x000000000009f7c8 : jne 0x9f7a6 ; mov rax, rdi ; ret
0x000000000009f953 : jne 0x9f94b ; ret
0x000000000009f9ef : jne 0x9f9e6 ; sub rax, 4 ; ret
0x000000000009fa0e : jne 0x9fa20 ; ret
0x00000000000a0a0c : jne 0xa0a03 ; ret
0x00000000000a1611 : jne 0xa1656 ; add rsp, 8 ; ret
0x00000000000a3c11 : jne 0xa3c56 ; add rsp, 8 ; ret
0x00000000000a5fe1 : jne 0xa6026 ; add rsp, 8 ; ret
0x00000000000ac121 : jne 0xac166 ; add rsp, 8 ; ret
0x00000000000ae863 : jne 0xae840 ; ret
0x00000000000aeb07 : jne 0xaeb64 ; xor eax, eax ; ret
0x00000000000aead7 : jne 0xaeb88 ; xor eax, eax ; ret
0x00000000000aebc4 : jne 0xaebbb ; ret
0x00000000000aefdb : jne 0xaf036 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000af073 : jne 0xaf07e ; xor rax, rax ; ret
0x00000000000af30b : jne 0xaf2c6 ; mov rax, rdx ; ret
0x00000000000b1102 : jne 0xb1118 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b3389 : jne 0xb33a1 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000baa12 : jne 0xba9f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc358 : jne 0xbc38f ; mov eax, 0x74 ; syscall
0x00000000000bf8c8 : jne 0xbf8ff ; mov eax, 0x22 ; syscall
0x00000000000bf948 : jne 0xbf97f ; mov eax, 0x23 ; syscall
0x00000000000c0708 : jne 0xc0741 ; mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000c0778 : jne 0xc07b1 ; mov edi, edi ; mov eax, 0x6a ; syscall
0x00000000000c09d1 : jne 0xc09d7 ; add byte ptr [rax], al ; syscall
0x00000000000c0de1 : jne 0xc0dae ; ret
0x00000000000c0e27 : jne 0xc0db2 ; mov eax, 0x7d00 ; ret
0x00000000000c0ee9 : jne 0xc0f12 ; ret
0x00000000000c0f53 : jne 0xc0f16 ; mov eax, 0x40 ; ret
0x00000000000c0ff0 : jne 0xc0fcf ; xor eax, eax ; ret
0x00000000000c0fec : jne 0xc1068 ; add byte ptr [rax], al ; jne 0xc0fd3 ; xor eax, eax ; ret
0x00000000000c1d70 : jne 0xc1d4b ; xor eax, eax ; ret
0x00000000000c2038 : jne 0xc201c ; ret
0x00000000000c2048 : jne 0xc2035 ; mov eax, 1 ; ret
0x00000000000c456e : jne 0xc4560 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8543 : jne 0xc853e ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000c87ac : jne 0xc87b3 ; ret
0x00000000000c8a23 : jne 0xc8a19 ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000c8aba : jne 0xc8aa8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca01a : jne 0xca023 ; pop rbx ; ret
0x00000000000cd0fd : jne 0xcd04d ; pop rbx ; ret
0x00000000000cd0fc : jne 0xcd04e ; pop rbx ; ret
0x00000000000cd0aa : jne 0xcd0a9 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xcd04f ; pop rbx ; ret
0x00000000000cd1b7 : jne 0xcd1e4 ; call 0xc9474
0x00000000000da06f : jne 0xda065 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000da03b : jne 0xda07b ; ret
0x00000000000dc11b : jne 0xdc109 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e1117 : jne 0xe1129 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000e18dd : jne 0xe18e6 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000e2508 : jne 0xe253f ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000e2b81 : jne 0xe2c09 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e2d98 : jne 0xe2dd1 ; mov esi, esi ; mov eax, 0x55 ; syscall
0x00000000000e63af : jne 0xe63c8 ; mov edi, dword ptr [rbp + 0x3c] ; call 0xe2e57
0x00000000000e7dad : jne 0xe7db6 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000e8b66 : jne 0xe8b77 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e8c76 : jne 0xe8c58 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e8cd7 : jne 0xe8cb8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000eba37 : jne 0xeba60 ; sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec6d9 : jne 0xec6c0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ed855 : jne 0xed88f ; mov eax, 0x88 ; syscall
0x00000000000edb0a : jne 0xedb08 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ee3b7 : jne 0xee3ae ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f44cf : jne 0xf4487 ; mov rdi, r13 ; call 0x207af
0x00000000000f634c : jne 0xf637e ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000f7d37 : jne 0xf7d23 ; ret
0x00000000000faf2e : jne 0xfaf67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fb150 : jne 0xfb140 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fc625 : jne 0xfc639 ; cmp qword ptr [rdi], 0 ; je 0xfc641 ; ret
0x00000000000fc698 : jne 0xfc6a7 ; mov eax, 1 ; ret
0x00000000000fc6c8 : jne 0xfc6d4 ; xor eax, eax ; ret
0x00000000000fc6f8 : jne 0xfc704 ; xor eax, eax ; ret
0x00000000000fc728 : jne 0xfc734 ; xor eax, eax ; ret
0x00000000000fc758 : jne 0xfc764 ; xor eax, eax ; ret
0x00000000000fc788 : jne 0xfc794 ; xor eax, eax ; ret
0x00000000000fc7b8 : jne 0xfc7c4 ; xor eax, eax ; ret
0x00000000000fc7e8 : jne 0xfc7f4 ; xor eax, eax ; ret
0x00000000000fc818 : jne 0xfc824 ; xor eax, eax ; ret
0x00000000000fc848 : jne 0xfc854 ; xor eax, eax ; ret
0x00000000000fc878 : jne 0xfc884 ; xor eax, eax ; ret
0x00000000000fc8a8 : jne 0xfc8b4 ; xor eax, eax ; ret
0x00000000000fc8d8 : jne 0xfc8e4 ; xor eax, eax ; ret
0x00000000000fc908 : jne 0xfc914 ; xor eax, eax ; ret
0x00000000000fc938 : jne 0xfc944 ; xor eax, eax ; ret
0x00000000000fc968 : jne 0xfc974 ; xor eax, eax ; ret
0x00000000000fc998 : jne 0xfc9a4 ; xor eax, eax ; ret
0x00000000000fc9c8 : jne 0xfc9d4 ; xor eax, eax ; ret
0x00000000000fc9f8 : jne 0xfca04 ; xor eax, eax ; ret
0x00000000000fca28 : jne 0xfca34 ; xor eax, eax ; ret
0x00000000000fca58 : jne 0xfca64 ; xor eax, eax ; ret
0x00000000000fcab8 : jne 0xfcac4 ; xor eax, eax ; ret
0x00000000000fcae8 : jne 0xfcaf4 ; xor eax, eax ; ret
0x00000000000fcb18 : jne 0xfcb24 ; xor eax, eax ; ret
0x00000000000fcb48 : jne 0xfcb54 ; xor eax, eax ; ret
0x00000000000fcb78 : jne 0xfcb84 ; xor eax, eax ; ret
0x00000000000fcba8 : jne 0xfcbb4 ; xor eax, eax ; ret
0x00000000000fcbd8 : jne 0xfcbe4 ; xor eax, eax ; ret
0x00000000000fcc08 : jne 0xfcc14 ; xor eax, eax ; ret
0x00000000000fcc38 : jne 0xfcc44 ; xor eax, eax ; ret
0x00000000000fcc81 : jne 0xfcc79 ; pop rdx ; pop r10 ; ret
0x00000000000fcc72 : jne 0xfcc82 ; mov eax, 0xca ; syscall
0x00000000000fcd75 : jne 0xfcd83 ; ret
0x00000000000fcf84 : jne 0xfcf63 ; ret
0x00000000000fcfbf : jne 0xfcfb7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000fd117 : jne 0xfd0b7 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000fd39c : jne 0xfd3c1 ; xor edi, edi ; mov eax, 0xe3 ; syscall
0x00000000000fd614 : jne 0xfd5ff ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000fd643 : jne 0xfd63c ; xor eax, eax ; leave ; ret
0x00000000000fe0d4 : jne 0xfe07e ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000ff44a : jne 0xff460 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ff716 : jne 0xff6ca ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000015017e : jno 0x15018d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000151820 : jno 0x151829 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000151a5a : jno 0x151a63 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000151bc1 : jno 0x151bd2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000151d26 : jno 0x151daa ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000017abc1 : jno 0x17abc4 ; call qword ptr [rax + 0x10fffb72]
0x000000000017ac01 : jno 0x17ac00 ; call qword ptr [rax]
0x000000000017cdc5 : jno 0x17cdb9 ; jmp qword ptr [rax]
0x0000000000180641 : jno 0x18064b ; add byte ptr [rax + 0x54], dh ; cli ; call qword ptr [rax]
0x0000000000186cde : jno 0x186cec ; ret
0x0000000000186cde : jno 0x186cf2 ; ret
0x00000000001981c5 : jno 0x1981ce ; add al, ch ; mov ch, dh ; jmp qword ptr [rcx]
0x00000000001981dd : jno 0x1981e6 ; add byte ptr [rax], al ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000019823d : jno 0x198246 ; add byte ptr [rax - 0x77], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000198255 : jno 0x19825e ; add byte ptr [rax - 0x77], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001982b5 : jno 0x1982be ; add al, bl ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000001eba : jno 0x1e94 ; adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000000021ff : jno 0x224c ; ret 0x1dd4
0x0000000000003a03 : jno 0x3a4d ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000044034 : jno 0x44086 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000006f421 : jno 0x6f42f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000083b76 : jno 0x83b89 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000083b76 : jno 0x83b8b ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000a945b : jno 0xa945c ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b4c6a : jno 0xb4bf7 ; ret 0xe283
0x00000000000b4ef3 : jno 0xb4e80 ; ret 0xe283
0x00000000000b4f7a : jno 0xb4f07 ; ret 0xe283
0x00000000000b500a : jno 0xb4f97 ; ret 0xe283
0x00000000000b509a : jno 0xb5027 ; ret 0xe283
0x00000000000b5122 : jno 0xb50af ; ret 0xe283
0x00000000000b51f2 : jno 0xb517f ; ret 0xe283
0x00000000000b5282 : jno 0xb520f ; ret 0xe283
0x00000000000b5af5 : jno 0xb5aef ; ret
0x00000000000b5b5d : jno 0xb5b57 ; ret
0x00000000000b5bad : jno 0xb5ba7 ; ret
0x00000000000b5c8f : jno 0xb5c1c ; ret 0xe283
0x00000000000b5e18 : jno 0xb5da5 ; ret 0xe283
0x00000000000b6002 : jno 0xb5f8f ; ret 0xe283
0x00000000000e6522 : jno 0xe6591 ; or dword ptr [rbx + 0x64], 2 ; jmp 0xe64fc
0x00000000000e7cbf : jno 0xe7cc5 ; add byte ptr [rax], al ; syscall
0x00000000000f7ca6 : jno 0xf7caf ; cmovne eax, edx ; ret
0x00000000000f7ca5 : jno 0xf7cb0 ; cmovne eax, edx ; ret
0x00000000000fddcb : jno 0xfddcf ; stc ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000011b7d3 : jnp 0x11b83f ; call rax
0x000000000011c1f3 : jnp 0x11c24f ; call rax
0x0000000000168062 : jnp 0x1680b0 ; mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x1680d9 ; salc ; retf
0x00000000001687e5 : jnp 0x1687a2 ; ret
0x00000000001697e2 : jnp 0x169840 ; retf
0x0000000000169be9 : jnp 0x169c36 ; retf -0x6620
0x000000000016a849 : jnp 0x16a88a ; retf
0x000000000016d964 : jnp 0x16d923 ; hlt ; jmp qword ptr [rsi]
0x000000000017abdd : jnp 0x17abdc ; call rax
0x000000000017b711 : jnp 0x17b719 ; add al, ah ; cmp al, 0xeb ; call rax
0x000000000017c625 : jnp 0x17c618 ; jmp rax
0x000000000017e3fd : jnp 0x17e3f7 ; jmp qword ptr [rax]
0x000000000017fda5 : jnp 0x17fda2 ; jmp qword ptr [rax]
0x00000000001822a1 : jnp 0x18228f ; call qword ptr [rdx]
0x00000000001822a0 : jnp 0x182290 ; call qword ptr [rdx]
0x0000000000188c4d : jnp 0x188c55 ; add byte ptr [rax], dl ; cdq ; out dx, al ; call rdx
0x000000000018dcd9 : jnp 0x18dcd8 ; call qword ptr [rax]
0x00000000000429a5 : jnp 0x429b1 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000e7298 : jnp 0x481a96eb ; add esp, 0x18 ; ret
0x0000000000069a9e : jnp 0x69ab5 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006d199 : jnp 0x6d212 ; mov eax, 3 ; syscall
0x0000000000076d5b : jnp 0x76dcf ; syscall
0x000000000008667f : jnp 0x86687 ; add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x00000000000c1d61 : jnp 0xc1d75 ; xchg eax, esp ; ret 0xb60f
0x00000000000c3bd0 : jnp 0xc3bf6 ; call 0x205e4
0x00000000000ca017 : jnp 0xca082 ; add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x00000000000ebac1 : jnp 0xebb03 ; sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000f01c1 : jnp 0xf01c7 ; add byte ptr [rax], al ; syscall
0x000000000011dd63 : jns 0x11dd4f ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014a4f7 : jns 0x14a4d2 ; retf -0x152d
0x000000000014a647 : jns 0x14a622 ; retf -0x152d
0x000000000014a797 : jns 0x14a772 ; retf -0x152d
0x000000000014a8e7 : jns 0x14a8c2 ; retf -0x152d
0x000000000014aa37 : jns 0x14aa12 ; retf -0x152d
0x000000000014ab87 : jns 0x14ab62 ; retf -0x152d
0x000000000014acd7 : jns 0x14acb2 ; retf -0x152d
0x000000000014ae27 : jns 0x14ae02 ; retf -0x152d
0x000000000014af77 : jns 0x14af52 ; retf -0x152d
0x000000000014b0c7 : jns 0x14b0a2 ; retf -0x152d
0x000000000014b217 : jns 0x14b1f2 ; retf -0x152d
0x000000000014b367 : jns 0x14b342 ; retf -0x152d
0x000000000014b4b7 : jns 0x14b492 ; retf -0x152d
0x000000000014b607 : jns 0x14b5e2 ; retf -0x152d
0x000000000014b757 : jns 0x14b732 ; retf -0x152d
0x000000000014bbc7 : jns 0x14bba2 ; retf -0x152d
0x000000000014bd47 : jns 0x14bd22 ; retf -0x152d
0x000000000014bec7 : jns 0x14bea2 ; retf -0x152d
0x000000000014c047 : jns 0x14c022 ; retf -0x152d
0x000000000014c1c7 : jns 0x14c1a2 ; retf -0x152d
0x000000000014c347 : jns 0x14c322 ; retf -0x152d
0x000000000014c4c7 : jns 0x14c4a2 ; retf -0x152d
0x000000000014c647 : jns 0x14c622 ; retf -0x152d
0x000000000014c7c7 : jns 0x14c7a2 ; retf -0x152d
0x000000000014c947 : jns 0x14c922 ; retf -0x152d
0x000000000014cac7 : jns 0x14caa2 ; retf -0x152d
0x000000000014cc47 : jns 0x14cc22 ; retf -0x152d
0x000000000014cdc7 : jns 0x14cda2 ; retf -0x152d
0x000000000014cf47 : jns 0x14cf22 ; retf -0x152d
0x000000000014d0c7 : jns 0x14d0a2 ; retf -0x152d
0x0000000000151827 : jns 0x15182a ; ret
0x0000000000151a61 : jns 0x151a64 ; ret
0x0000000000151bc8 : jns 0x151bd3 ; ret
0x0000000000158bfe : jns 0x158c4d ; add esp, 0x38 ; ret
0x0000000000159e8d : jns 0x159e7d ; call rax
0x00000000001678ee : jns 0x167884 ; ret 0xf869
0x00000000001678ed : jns 0x167885 ; ret 0xf869
0x000000000016b935 : jns 0x16b928 ; call qword ptr [rbx]
0x000000000016d5cc : jns 0x16d564 ; hlt ; call qword ptr [rip - 0x19000b68]
0x000000000017ac15 : jns 0x17ac18 ; call qword ptr [rax + 0x10fffb7a]
0x000000000017d86d : jns 0x17d864 ; call rax
0x000000000017e3b5 : jns 0x17e3af ; jmp qword ptr [rax]
0x0000000000198a5d : jns 0x198a66 ; add byte ptr [rax - 0x65], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000001b2d : jns 0x1b38 ; ret
0x0000000000029464 : jns 0x29d4c66b ; ret
0x0000000000002c43 : jns 0x2c11 ; clc ; ret
0x00000000000032f7 : jns 0x32d2 ; ret 0x5a51
0x000000000000399b : jns 0x39ee ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000048ccd : jns 0x48cd1 ; dec dword ptr [rax + 0x29] ; ret
0x000000000007f6c3 : jns 0x7f6dd ; cli ; dec dword ptr [rcx + rcx*4 - 9] ; call 0x7c1c9
0x00000000000be403 : jns 0xbe3ff ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8d48
0x00000000000c0871 : jns 0xc0877 ; add byte ptr [rax], al ; syscall
0x00000000000c0deb : jns 0xc0da3 ; add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x00000000000ca33b : jns 0xca327 ; mov eax, 1 ; ret
0x00000000000e8814 : jns 0xe8822 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000011da70 : jns 0xffffffffc4952357 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000009ce76 : jns 0xffffffffed39d1dc ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ced8 : jns 0xffffffffed39d63e ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009cef8 : jns 0xffffffffed39d75e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000011a163 : jo 0x11a1c9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000168068 : jo 0x1680d3 ; salc ; retf
0x0000000000168964 : jo 0x1689de ; mov ebp, 0xfb67d10d ; ret
0x000000000016c6c0 : jo 0x16c6ae ; sti ; jmp rax
0x000000000016c758 : jo 0x16c71e ; cld ; push rax ; lahf ; cld ; jmp qword ptr [rax]
0x000000000016c764 : jo 0x16c7b7 ; inc eax ; call qword ptr [rax]
0x000000000016c764 : jo 0x16c7b8 ; inc eax ; call qword ptr [rax]
0x000000000016c8c0 : jo 0x16c898 ; jmp qword ptr [rax - 0x2f000d30]
0x000000000016c8c0 : jo 0x16c899 ; jmp qword ptr [rax - 0x2f000d30]
0x000000000017a050 : jo 0x179ffe ; cld ; inc dword ptr [rax - 0x5a] ; cld ; call qword ptr [rax]
0x000000000017a0a8 : jo 0x17a06a ; cld ; call qword ptr [rax]
0x000000000017a0c8 : jo 0x17a097 ; cld ; call qword ptr [rax]
0x000000000017a254 : jo 0x17a2be ; std ; call qword ptr [rax]
0x000000000017a504 : jo 0x17a532 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000017a5a0 : jo 0x17a602 ; sti ; push qword ptr [rax] ; pop rbx ; sti ; call qword ptr [rax]
0x000000000017a640 : jo 0x17a6a1 ; sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x000000000017a6d0 : jo 0x17a72a ; sti ; inc eax ; push rdx ; sti ; call qword ptr [rax]
0x000000000017a6e4 : jo 0x17a730 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000017ab58 : jo 0x17aae0 ; sti ; jmp rax
0x000000000017ab60 : jo 0x17aae7 ; sti ; call qword ptr [rax]
0x000000000017abfd : jo 0x17ac00 ; call qword ptr [rax + 0x10fffb71]
0x000000000017aba0 : jo 0x17ac0e ; sti ; call qword ptr [rax + 0x10fffb66]
0x000000000017b144 : jo 0x17b14c ; cld ; inc eax ; add ch, bh ; call qword ptr [rax]
0x000000000017bf14 : jo 0x17beae ; in al, dx ; call rax
0x000000000017bfdc : jo 0x17bfb6 ; in al, dx ; jmp rax
0x000000000017c3bc : jo 0x17c3f1 ; out dx, eax ; call rax
0x000000000017c424 : jo 0x17c465 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017c524 : jo 0x17c57a ; out dx, eax ; jmp rax
0x000000000017ca98 : jo 0x17ca99 ; add byte ptr [rax], al ; sal bl, 1 ; out dx, eax ; jmp rax
0x000000000017caac : jo 0x17caa5 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017d274 : jo 0x17d201 ; int1 ; jmp rax
0x000000000017d354 : jo 0x17d37f ; call rax
0x000000000017d354 : jo 0x17d380 ; call rax
0x000000000017d574 : jo 0x17d5e0 ; call rax
0x000000000017d574 : jo 0x17d5e1 ; call rax
0x000000000017d845 : jo 0x17d83c ; call rax
0x000000000017d834 : jo 0x17d89a ; jmp qword ptr [rax]
0x000000000017da60 : jo 0x17daca ; add dword ptr [rax], eax ; add byte ptr [rax], ch ; hlt ; jmp rax
0x000000000017dab4 : jo 0x17daee ; hlt ; call rax
0x000000000017dcac : jo 0x17dd1e ; hlt ; call qword ptr [rax]
0x000000000017e034 : jo 0x17e015 ; cmc ; jmp rax
0x000000000017eb18 : jo 0x17eae8 ; add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf7 ; jmp rax
0x000000000017eedd : jo 0x17eed8 ; call qword ptr [rax]
0x000000000017f460 : jo 0x17f460 ; add dword ptr [rax], eax ; shr byte ptr [rcx], 1 ; clc ; call rax
0x000000000017f6bc : jo 0x17f718 ; clc ; jmp qword ptr [rax]
0x000000000017fbf4 : jo 0x17fc39 ; stc ; jmp qword ptr [rax]
0x0000000000180644 : jo 0x18069d ; cli ; call qword ptr [rax]
0x0000000000180abc : jo 0x180a8d ; cli ; jmp rax
0x000000000018109c : jo 0x18108b ; std ; jmp rax
0x0000000000188b80 : jo 0x188b14 ; out dx, al ; jmp rcx
0x000000000018c3f1 : jo 0x18c3e4 ; jmp qword ptr [rcx]
0x000000000018c409 : jo 0x18c3fc ; jmp qword ptr [rcx]
0x0000000000190f10 : jo 0x190ebf ; call rdi
0x0000000000190f10 : jo 0x190ec0 ; call rdi
0x0000000000191550 : jo 0x19151d ; call rdi
0x0000000000191550 : jo 0x19151e ; call rdi
0x0000000000196630 : jo 0x196656 ; cmc ; jmp qword ptr [rcx]
0x00000000001970a0 : jo 0x1970e9 ; cmc ; jmp qword ptr [rdx]
0x00000000001980bd : jo 0x1980c6 ; add al, ah ; xchg ebp, esi ; jmp qword ptr [rcx]
0x0000000000198150 : jo 0x1980dd ; cmc ; jmp qword ptr [rcx]
0x00000000001980ed : jo 0x1980f6 ; add byte ptr [rax], dl ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000019811d : jo 0x198126 ; add byte ptr [rax - 0x78], al ; cmc ; jmp qword ptr [rcx]
0x000000000019811c : jo 0x198127 ; add byte ptr [rax - 0x78], al ; cmc ; jmp qword ptr [rcx]
0x0000000000198135 : jo 0x19813e ; add byte ptr [rax - 0x78], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019814d : jo 0x198156 ; add byte ptr [rax - 0x78], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000198400 : jo 0x198390 ; cmc ; jmp qword ptr [rcx]
0x0000000000198a60 : jo 0x198a00 ; cmc ; jmp qword ptr [rcx]
0x00000000001991c0 : jo 0x19917a ; cmc ; call rdi
0x000000000019e670 : jo 0x19e61e ; clc ; call qword ptr [rax]
0x00000000001a2fd0 : jo 0x1a303e ; sti ; jmp qword ptr [rdx]
0x00000000001a3b60 : jo 0x1a3ba0 ; clc ; call qword ptr [rax]
0x00000000000258eb : jo 0x25903 ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000027ff7 : jo 0x2800f ; mov dh, 0x42 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002d153 : jo 0x2d1a4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d152 : jo 0x2d1a5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000040bc6 : jo 0x40bd1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004254d : jo 0x424e2 ; push rax ; dec dword ptr [rax + 1] ; retf 0x1f0f
0x00000000000429b3 : jo 0x429c0 ; adc eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000006d19a : jo 0x6d15a ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000006d5e9 : jo 0x6d62b ; std ; je 0x6d601 ; mov eax, esi ; syscall
0x000000000006fe2a : jo 0x6fe42 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007389a : jo 0x73827 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000073899 : jo 0x73828 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000076503 : jo 0x764c3 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000077a34 : jo 0x77a85 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077a7f : jo 0x77ad0 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a0254 : jo 0xa02a2 ; mov edi, ebp ; call rbx
0x00000000000a07ce : jo 0xa0820 ; mov edi, esp ; call rbx
0x00000000000a1e7b : jo 0xa1e8f ; xchg eax, esp ; ret
0x00000000000a683b : jo 0xa684f ; xchg eax, esp ; ret
0x00000000000b0ffa : jo 0xb100b ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b53f8 : jo 0xb5385 ; ret 0x8166
0x00000000000c0931 : jo 0xc0937 ; add byte ptr [rax], al ; syscall
0x00000000000c7b48 : jo 0xc7b35 ; ret 0xfff2
0x00000000000c7c7c : jo 0xc7c03 ; ret 0x8d01
0x00000000000ca5de : jo 0xca604 ; xor eax, eax ; ret
0x00000000000d4df3 : jo 0xd4de5 ; xchg dword ptr [rax - 1], ebx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d6340 : jo 0xd6345 ; ret 0xc083
0x00000000000e7256 : jo 0xe727b ; ret
0x0000000000109abd : jp 0x109ac5 ; inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000115cdd : jp 0x115d3d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000119132 : jp 0x11913e ; ret
0x000000000011b862 : jp 0x11b86e ; ret
0x000000000011b87a : jp 0x11b886 ; ret
0x000000000011c0b2 : jp 0x11c0be ; ret
0x000000000011c0ca : jp 0x11c0d6 ; ret
0x000000000011c0fa : jp 0x11c106 ; ret
0x0000000000168af3 : jp 0x168aad ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000017ab20 : jp 0x17aaa7 ; sti ; jmp qword ptr [rax]
0x000000000017abd9 : jp 0x17abdc ; call qword ptr [rax - 0x2f000485]
0x000000000017ac19 : jp 0x17ac18 ; call qword ptr [rax]
0x000000000017b6d1 : jp 0x17b6d9 ; add byte ptr [rax], ah ; and al, 0xeb ; jmp qword ptr [rax]
0x000000000017c605 : jp 0x17c5f8 ; jmp qword ptr [rax]
0x000000000017c604 : jp 0x17c5f9 ; jmp qword ptr [rax]
0x0000000000188b7d : jp 0x188b85 ; add byte ptr [rax - 0x71], dh ; out dx, al ; jmp rcx
0x0000000000198b25 : jp 0x198b2e ; add al, bh ; sahf ; cmc ; call qword ptr [rdx]
0x00000000000025a5 : jp 0x2589 ; jmp qword ptr [rbx]
0x00000000000025a4 : jp 0x258a ; jmp qword ptr [rbx]
0x000000000002bfe8 : jp 0x2c02b ; jae 0x2c008 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003a02 : jp 0x3a7c ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000069bda : jp 0x69bf1 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006d5e8 : jp 0x6d662 ; cmp ebp, edi ; je 0x6d602 ; mov eax, esi ; syscall
0x00000000000af9b1 : jp 0xaf9c6 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000b56ba : jp 0xb56cc ; add byte ptr [rbp - 0x77], al ; retf -0x7ebf
0x00000000000f0191 : jp 0xf0197 ; add byte ptr [rax], al ; syscall
0x00000000000f5ed4 : jp 0xf5f06 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000fb5d5 : jp 0xfb62c ; mov rsi, rdx ; call rax
0x000000000011fc1f : jrcxz 0x11fc64 ; call rsi
0x0000000000132daa : jrcxz 0x132da5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132da9 : jrcxz 0x132da6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001358ca : jrcxz 0x1358c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001358c9 : jrcxz 0x1358c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000158e84 : jrcxz 0x158ed5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000167745 : jrcxz 0x16779f ; ret
0x000000000016990d : jrcxz 0x1698d0 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000016a469 : jrcxz 0x16a44d ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x000000000016c12d : jrcxz 0x16c120 ; call qword ptr [rdi]
0x000000000016c6b1 : jrcxz 0x16c6b0 ; jmp qword ptr [rax]
0x000000000016ca59 : jrcxz 0x16ca4f ; jmp qword ptr [rax]
0x000000000016ca6d : jrcxz 0x16ca63 ; call rax
0x000000000017a0fd : jrcxz 0x17a0fd ; jmp rax
0x000000000017c21d : jrcxz 0x17c20f ; call rax
0x0000000000180155 : jrcxz 0x180152 ; jmp rax
0x00000000001a2661 : jrcxz 0x1a265c ; jmp qword ptr [rbx]
0x0000000000001f6f : jrcxz 0x1f4d ; retf -0x41cb
0x0000000000001f3a : jrcxz 0x1fb7 ; retf 0x6321
0x00000000000026ee : jrcxz 0x268f ; retf
0x0000000000037f3d : jrcxz 0x37faa ; nop ; xor eax, eax ; ret
0x00000000000a954a : jrcxz 0xa94d7 ; ret 0xff25
0x00000000000c553b : jrcxz 0xc5547 ; add byte ptr [rbx - 0x7bf00005], al ; ret 4
0x00000000000ca33c : jrcxz 0xca2fc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000cd0e0 : jrcxz 0xcd0ef ; je 0xcd07f ; pop rbx ; ret
0x00000000000dc11c : jrcxz 0xdc16e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dc662 : jrcxz 0xdc6dd ; retf
0x00000000000fccd3 : jrcxz 0xfcc98 ; cmp r11d, 0xa ; je 0xfcce4 ; ret
0x00000000000fd3a1 : jrcxz 0xfd3a7 ; add byte ptr [rax], al ; syscall
0x00000000000fd3bc : jrcxz 0xfd3c2 ; add byte ptr [rax], al ; syscall
0x0000000000100e24 : js 0x100e39 ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000100ea4 : js 0x100eb7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000010f7d0 : js 0x10f7f5 ; mov eax, 3 ; syscall
0x000000000011a5cc : js 0x11a5df ; retf -0x37f1
0x000000000011a5cb : js 0x11a5e0 ; retf -0x37f1
0x00000000001255e3 : js 0x1255f8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000125cec : js 0x125cf3 ; add byte ptr [rax], al ; syscall
0x0000000000126609 : js 0x126624 ; mov eax, 3 ; syscall
0x0000000000159e95 : js 0x159e85 ; call qword ptr [rax]
0x00000000001697e1 : js 0x169861 ; pop rdx ; retf
0x000000000016e038 : js 0x16e07b ; cmc ; lcall ptr [rbp + 0x3a] ; cmc ; jmp qword ptr [rdx]
0x000000000017abd5 : js 0x17abd4 ; call qword ptr [rax]
0x000000000017d610 : js 0x17d65c ; add dword ptr [rax], eax ; and cl, 0xf2 ; jmp rax
0x000000000017dac8 : js 0x17db36 ; add dword ptr [rax], eax ; mov al, 0x3d ; hlt ; jmp rax
0x000000000017e3a5 : js 0x17e39f ; call rax
0x000000000017e3a4 : js 0x17e3a0 ; call rax
0x000000000017e608 : js 0x17e5bc ; add dword ptr [rax], eax ; push rax ; ret 0xfff6
0x00000000001807b9 : js 0x1807c3 ; add al, ah ; cli ; call qword ptr [rax]
0x0000000000180a88 : js 0x180a19 ; add al, byte ptr [rax] ; nop ; retf -6
0x0000000000180c00 : js 0x180c43 ; add al, byte ptr [rax] ; rcr ch, 1 ; cli ; jmp rax
0x0000000000180d50 : js 0x180d83 ; add dword ptr [rax], eax ; add byte ptr [rsi], 0xfd ; jmp qword ptr [rax]
0x000000000018a710 : js 0x18a71e ; ret
0x000000000018ab18 : js 0x18ab15 ; out dx, al ; call rsp
0x000000000018c0b8 : js 0x18c124 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018c828 : js 0x18c8a0 ; out dx, eax ; call qword ptr [rdx]
0x0000000000191df8 : js 0x191de6 ; jmp qword ptr [rcx]
0x0000000000191df8 : js 0x191de7 ; jmp qword ptr [rcx]
0x00000000001965e8 : js 0x19660d ; cmc ; jmp rdx
0x0000000000197628 : js 0x197684 ; cmc ; call qword ptr [rax]
0x0000000000198258 : js 0x1981e6 ; cmc ; jmp qword ptr [rcx]
0x0000000000198628 : js 0x1985bb ; cmc ; jmp qword ptr [rcx]
0x000000000019fa08 : js 0x19fa16 ; ret
0x00000000001a0c28 : js 0x1a0bcf ; idiv edi ; retf
0x00000000001a75a0 : js 0x1a75a9 ; add byte ptr [rax], al ; retf
0x0000000000001ace : js 0x1ac3 ; fidiv word ptr [rbx] ; retf
0x0000000000021442 : js 0x2144d ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000025bfc : js 0x25c06 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000002ab22 : js 0x2ab2d ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000002cdb1 : js 0x2cd3d ; loopne 0x2cdc4 ; movzx eax, ax ; ret
0x000000000002cdf1 : js 0x2cd7d ; loopne 0x2cdfe ; movzx eax, ax ; ret
0x000000000002ce91 : js 0x2ce1d ; loopne 0x2cea0 ; movzx eax, ax ; ret
0x000000000002cf71 : js 0x2cefa ; loopne 0x2cf7a ; ret
0x000000000002cfea : js 0x2cf73 ; loopne 0x2cff3 ; ret
0x000000000002cffa : js 0x2cf86 ; loopne 0x2d00d ; movzx eax, ax ; ret
0x000000000002d03a : js 0x2cfc6 ; loopne 0x2d047 ; movzx eax, ax ; ret
0x000000000002d0da : js 0x2d066 ; loopne 0x2d0e9 ; movzx eax, ax ; ret
0x000000000002d163 : js 0x2d1b4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d162 : js 0x2d1b5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000003009 : js 0x2fbf ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007389d : js 0x738ab ; ret
0x0000000000075e80 : js 0x75ebb ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x000000000007c478 : js 0x7c483 ; ret
0x0000000000083d20 : js 0x83d2a ; mov rbx, rax ; call 0x207a7
0x0000000000083ffb : js 0x83ff6 ; ret 0
0x0000000000084f04 : js 0x84ee0 ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000008511a : js 0x85115 ; ret 0
0x0000000000085161 : js 0x8515c ; ret 0
0x00000000000851a8 : js 0x851a3 ; ret 0
0x00000000000851ef : js 0x851ea ; ret 0
0x00000000000c0991 : js 0xc0997 ; add byte ptr [rax], al ; syscall
0x00000000000c1047 : js 0xc1053 ; ret
0x00000000000cf52f : js 0xcf51b ; retf
0x00000000000d0cfa : js 0xd0c81 ; ret 0x8901
0x00000000000d7744 : js 0xd777b ; add byte ptr [rax], al ; je 0xd7788 ; xor eax, eax ; ret
0x00000000000e0f35 : js 0xe0f51 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x00000000000e109c : js 0xe10ee ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e1b59 : js 0xe1bab ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e6521 : js 0xe659c ; or word ptr [rbx + 0x64], 2 ; jmp 0xe64fd
0x00000000000e79db : js 0xe79ad ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9a52 : js 0xe9a65 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000edef8 : js 0xedee5 ; ret 0xfffb
0x00000000000f31c8 : js 0xf3154 ; loopne 0xf31db ; movzx eax, ax ; ret
0x00000000000f32f8 : js 0xf3281 ; loopne 0xf3301 ; ret
0x00000000000f3388 : js 0xf3314 ; loopne 0xf3395 ; movzx eax, ax ; ret
0x00000000000f3688 : js 0xf3614 ; loopne 0xf3697 ; movzx eax, ax ; ret
0x00000000000f3b61 : js 0xf3aed ; loopne 0xf3b74 ; movzx eax, ax ; ret
0x00000000000f3c61 : js 0xf3bea ; loopne 0xf3c6a ; ret
0x00000000000f3ce1 : js 0xf3c6d ; loopne 0xf3cee ; movzx eax, ax ; ret
0x00000000000f3f61 : js 0xf3eed ; loopne 0xf3f70 ; movzx eax, ax ; ret
0x000000000009ce18 : js 0xffffffffed39d07e ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ce46 : js 0xffffffffed39d2ac ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ce98 : js 0xffffffffed39d6fe ; mov byte ptr [rdi + 9], ch ; ret
0x000000000017e3a1 : lahf ; add dword ptr [rax], eax ; js 0x17e3a3 ; call rax
0x000000000019b055 : lahf ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], al ; call qword ptr [rax]
0x000000000000308f : lahf ; clc ; imul ebp, dword ptr [rsi], -0x74 ; int1 ; mov dr0, word ptr [rax] ; retf
0x000000000016c75d : lahf ; cld ; jmp qword ptr [rax]
0x0000000000064074 : lahf ; jmp 0xffffffffc3fd407e
0x0000000000169e23 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000fe0d5 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000ccfc2 : lahf ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000014affd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000169712 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000000850c7 : lahf ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x000000000016b7ec : lahf ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x0000000000169f14 : lahf ; push -0x57d3205 ; call 0xffffffffab246a16
0x0000000000167f20 : lahf ; push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000000e0f3b : lahf ; rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000024bc1 : lahf ; ret
0x000000000005ba43 : lahf ; ret 0x2941
0x000000000007138e : lahf ; ret 0x3841
0x00000000000c8caa : lahf ; ret 0x7fe9
0x0000000000105cda : lahf ; ret 0x8545
0x000000000016767d : lahf ; ret 0x871e
0x000000000005d838 : lahf ; ret 0xd629
0x000000000005daeb : lahf ; ret 0xd729
0x00000000000eb673 : lahf ; ret 0xe883
0x000000000009dec9 : lahf ; ret 0xea81
0x0000000000020c1c : lahf ; ret 0xff31
0x00000000000665ba : lahf ; retf -1
0x000000000014b68d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000010979 : lar eax, word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000017f227 : lcall ptr [rax + 0x100001ec] ; fcompi st(7) ; call rax
0x000000000017f587 : lcall ptr [rax + 0x1fe] ; clc ; call rax
0x00000000000ebaf7 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000017f93f : lcall ptr [rax + 0x60000218] ; retf -8
0x00000000001805af : lcall ptr [rax + 0x6000026e] ; cli ; call rax
0x000000000017b43f : lcall ptr [rax + 0x6a] ; ret 0xffea
0x000000000017cf0f : lcall ptr [rax + 0x70000115] ; mov dh, al ; call rax
0x0000000000055d21 : lcall ptr [rax - 0x3a] ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000017bfa7 : lcall ptr [rax - 0x54] ; add byte ptr [rax], al ; ror bh, 1 ; in al, dx ; call rax
0x000000000017087b : lcall ptr [rax - 0x54] ; cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000016cd43 : lcall ptr [rax] ; adc dh, bl ; call rdi
0x000000000016dd53 : lcall ptr [rax] ; cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000170853 : lcall ptr [rax] ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; call rax
0x000000000017c2cf : lcall ptr [rax] ; ret 0
0x000000000017ea3f : lcall ptr [rax] ; ret 1
0x000000000016e03b : lcall ptr [rbp + 0x3a] ; cmc ; jmp qword ptr [rdx]
0x00000000000d3a5d : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000105555 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000e78cc : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000085265 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000158aec : lcall ptr [rbx + 0x41] ; pop rsi ; ret
0x00000000000bffdc : lcall ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000078570 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002984c : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a86d1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000035418 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000435fc : lcall ptr [rbx + 0x5d] ; ret
0x000000000016b6db : lcall ptr [rbx - 0x640010f7] ; or edi, ebp ; jmp qword ptr [rsi]
0x000000000006dffa : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000187f93 : lcall ptr [rcx + rax - 0x1bfc0000] ; ret
0x000000000016e7df : lcall ptr [rcx] ; test dh, dh ; call qword ptr [rsi]
0x000000000016b7eb : lcall ptr [rdi - 0x18001091] ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000016b89b : lcall ptr [rdi] ; jbe 0x16b892 ; call qword ptr [rbx]
0x000000000016e7d3 : lcall ptr [rsi] ; test dh, dh ; jmp rsp
0x000000000016e7db : lcall ptr [rsi] ; test dh, dh ; lcall ptr [rcx] ; test dh, dh ; call qword ptr [rsi]
0x0000000000133436 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000077b94 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000001557df : lds r9d, ptr [r9 + 0xf] ; ror byte ptr [r9 + 0xf], cl ; ret
0x000000000007097f : lea eax, dword ptr [r8 - 1] ; ret
0x000000000010baec : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000ae828 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000da083 : lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x000000000008e124 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008e134 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000008e604 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008e104 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000ba952 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000070980 : lea eax, dword ptr [rax - 1] ; ret
0x00000000000e7841 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010bc70 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000011579b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x000000000010eecf : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000018a38c : lea eax, dword ptr [rbx] ; mov es, word ptr [rdx] ; add bl, byte ptr [rdx + 0xa] ; ret
0x000000000010baed : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x00000000000c6033 : lea eax, dword ptr [rcx + rdx*8] ; jmp 0xc5fff
0x0000000000093a0d : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000009d5b4 : lea eax, dword ptr [rcx - 1] ; ret
0x0000000000199e35 : lea eax, dword ptr [rcx] ; add al, bl ; in eax, dx ; cmc ; call rsp
0x0000000000084f82 : lea eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000017e079 : lea eax, dword ptr [rcx] ; add byte ptr [rax - 0x22], ah ; cmc ; call rax
0x000000000009a50c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000009a521 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000009a53f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000009a55f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000009a582 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009a5a1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009a5c1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000009a5e1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000009a604 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000009a629 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000009a647 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000009a667 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000009a683 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000009a6a3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000009a6c3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000009a6e3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000009b543 : lea eax, dword ptr [rdi + 0x20] ; ret
0x000000000009b7a9 : lea eax, dword ptr [rdi + 0x40] ; ret
0x000000000009a45d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000009a47d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000009a49f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000009a4bf : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000009a4df : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000009a4f9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000009a3a7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000009a3ba : lea eax, dword ptr [rdi + 2] ; ret
0x000000000009a3c5 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000009a3d8 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000009a3ed : lea eax, dword ptr [rdi + 5] ; ret
0x000000000009a40b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000009a417 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000009a42a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000010b190 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009a43f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008e159 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008e169 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008e063 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000014d835 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000093657 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000014943a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000008ab30 : lea eax, dword ptr [rdi + rdx - 1] ; ret
0x000000000010bf40 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000002cb05 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000093909 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000aeece : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000af031 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000af051 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000af041 : lea eax, dword ptr [rdi - 8] ; ret
0x000000000009a393 : lea eax, dword ptr [rdi] ; ret
0x000000000014074d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000014076d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000014078f : lea eax, dword ptr [rdx + 0xc] ; ret
0x00000000001407af : lea eax, dword ptr [rdx + 0xd] ; ret
0x00000000001407cf : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000014065f : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000140687 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000014069d : lea eax, dword ptr [rdx + 2] ; ret
0x00000000001406b5 : lea eax, dword ptr [rdx + 3] ; ret
0x00000000001406cb : lea eax, dword ptr [rdx + 4] ; ret
0x00000000001406dd : lea eax, dword ptr [rdx + 5] ; ret
0x00000000001406fb : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000140607 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000014070d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000014072d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000007096e : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009df9c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000140675 : lea eax, dword ptr [rdx] ; ret
0x000000000002bff9 : lea eax, dword ptr [rip + 0x145200] ; ret
0x0000000000021171 : lea eax, dword ptr [rip + 0x14fbd4] ; ret
0x0000000000021181 : lea eax, dword ptr [rip + 0x151a01] ; ret
0x00000000000eba6b : lea eax, dword ptr [rip + 0x2c390f] ; pop rbp ; pop r12 ; ret
0x0000000000049729 : lea eax, dword ptr [rip + 0x300] ; add rax, rdx ; jmp rax
0x0000000000068ab4 : lea eax, dword ptr [rip + 0x345d46] ; pop rbx ; pop rbp ; ret
0x0000000000112c71 : lea eax, dword ptr [rip + 0x5e588] ; ret
0x000000000009f8c4 : lea eax, dword ptr [rip + 0xaeac6] ; je 0x9f89b ; ret
0x0000000000084e6c : lea eax, dword ptr [rip + 0xc505e] ; je 0x84e43 ; ret
0x0000000000055088 : lea eax, dword ptr [rip - 0x304] ; add rax, rdx ; jmp rax
0x000000000010bd9e : lea eax, dword ptr [rsi + 8] ; ret
0x00000000001a321a : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000ab26d : lea ebp, dword ptr [rbp + rax + 1] ; mov rdi, rbx ; call 0x127cf9
0x00000000000bb8b7 : lea ebp, dword ptr [rsp + 0x30] ; mov rdi, rbx ; call r12
0x00000000000e4389 : lea ebx, dword ptr [rax + 0x13] ; mov rdi, rbx ; call 0x205e8
0x00000000000baa0f : lea ebx, dword ptr [rax + 1] ; jne 0xba9f9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000429c1 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x0000000000083ccf : lea ebx, dword ptr [rax + 1] ; mov rdi, rbx ; call 0x207a8
0x0000000000167f31 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000009fbb2 : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000009fcde : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000a00c5 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000084ff5 : lea ecx, dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000012bb20 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x0000000000098c4e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000035d35 : lea ecx, dword ptr [rdi + rax] ; mov qword ptr [rsp + 0x10], r9 ; call r14
0x000000000013df56 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x13e4a9 ; ret
0x000000000013e254 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x13e4a9 ; ret
0x000000000013e274 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x13e4a9 ; ret
0x000000000013e294 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x13e4a9 ; ret
0x000000000013e2b6 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x13e4a9 ; ret
0x000000000013e2d6 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x13e4a9 ; ret
0x000000000013e2f6 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x13e4a9 ; ret
0x000000000013e14c : lea ecx, dword ptr [rdx + 1] ; jne 0x13e4a9 ; ret
0x000000000013e16e : lea ecx, dword ptr [rdx + 2] ; jne 0x13e4a9 ; ret
0x000000000013e194 : lea ecx, dword ptr [rdx + 3] ; jne 0x13e4a9 ; ret
0x000000000013e1ac : lea ecx, dword ptr [rdx + 4] ; jne 0x13e4a9 ; ret
0x000000000006e6c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000013e1d2 : lea ecx, dword ptr [rdx + 5] ; jne 0x13e4a9 ; ret
0x000000000013e1f4 : lea ecx, dword ptr [rdx + 6] ; jne 0x13e4a9 ; ret
0x000000000013e212 : lea ecx, dword ptr [rdx + 7] ; jne 0x13e4a9 ; ret
0x000000000013deee : lea ecx, dword ptr [rdx + 8] ; jne 0x13e4a9 ; ret
0x000000000013e234 : lea ecx, dword ptr [rdx + 9] ; jne 0x13e4a9 ; ret
0x00000000000f3ad7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000072d84 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000001140d8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000072e60 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000113f19 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000a0063 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000009fcd9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009fbad : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000011456b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000abd1f : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000a051a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000011db6f : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a07cb : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000a0251 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000021441 : lea edi, dword ptr [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000083d1f : lea edi, dword ptr [rax + 1] ; mov rbx, rax ; call 0x207a8
0x000000000011418f : lea edi, dword ptr [rax + rax + 0x4c8d4c00] ; and al, 0x18 ; call qword ptr [rax]
0x0000000000119c2e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x000000000011c1f2 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x000000000011b7d2 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000119095 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x00000000000997bd : lea edi, dword ptr [rdi + 0x10] ; jne 0x99e99 ; ret
0x000000000009aeb1 : lea edi, dword ptr [rdi + 0x10] ; jne 0x9b6b9 ; ret
0x00000000000997e0 : lea edi, dword ptr [rdi + 0x11] ; jne 0x99e99 ; ret
0x000000000009aed4 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9b6b9 ; ret
0x0000000000099805 : lea edi, dword ptr [rdi + 0x12] ; jne 0x99e99 ; ret
0x000000000009aef9 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9b6b9 ; ret
0x0000000000099823 : lea edi, dword ptr [rdi + 0x13] ; jne 0x99e99 ; ret
0x000000000009af27 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9b6b9 ; ret
0x0000000000099843 : lea edi, dword ptr [rdi + 0x14] ; jne 0x99e99 ; ret
0x000000000009af57 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9b6b9 ; ret
0x0000000000099866 : lea edi, dword ptr [rdi + 0x15] ; jne 0x99e99 ; ret
0x000000000009af8a : lea edi, dword ptr [rdi + 0x15] ; jne 0x9b6b9 ; ret
0x0000000000099885 : lea edi, dword ptr [rdi + 0x16] ; jne 0x99e99 ; ret
0x000000000009afb9 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9b6b9 ; ret
0x00000000000998a5 : lea edi, dword ptr [rdi + 0x17] ; jne 0x99e99 ; ret
0x000000000009afe9 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9b6b9 ; ret
0x00000000000998c5 : lea edi, dword ptr [rdi + 0x18] ; jne 0x99e99 ; ret
0x000000000009b019 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9b6b9 ; ret
0x00000000000998e8 : lea edi, dword ptr [rdi + 0x19] ; jne 0x99e99 ; ret
0x000000000009b04c : lea edi, dword ptr [rdi + 0x19] ; jne 0x9b6b9 ; ret
0x000000000009991d : lea edi, dword ptr [rdi + 0x1a] ; jne 0x99e99 ; ret
0x000000000009b081 : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9b6b9 ; ret
0x000000000009994b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x99e99 ; ret
0x000000000009b0af : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9b6b9 ; ret
0x000000000009997b : lea edi, dword ptr [rdi + 0x1c] ; jne 0x99e99 ; ret
0x000000000009b0df : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9b6b9 ; ret
0x00000000000999a7 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x99e99 ; ret
0x000000000009b10b : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9b6b9 ; ret
0x00000000000999d7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x99e99 ; ret
0x000000000009b13b : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9b6b9 ; ret
0x0000000000099a07 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x99e99 ; ret
0x000000000009b16b : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9b6b9 ; ret
0x0000000000099a37 : lea edi, dword ptr [rdi + 0x20] ; jne 0x99e99 ; ret
0x000000000009b19b : lea edi, dword ptr [rdi + 0x20] ; jne 0x9b6b9 ; ret
0x0000000000099703 : lea edi, dword ptr [rdi + 0xa] ; jne 0x99e99 ; ret
0x000000000009adb7 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9b6b9 ; ret
0x0000000000099721 : lea edi, dword ptr [rdi + 0xb] ; jne 0x99e99 ; ret
0x000000000009ade5 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9b6b9 ; ret
0x0000000000099741 : lea edi, dword ptr [rdi + 0xc] ; jne 0x99e99 ; ret
0x000000000009ae05 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9b6b9 ; ret
0x0000000000099763 : lea edi, dword ptr [rdi + 0xd] ; jne 0x99e99 ; ret
0x000000000009ae27 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9b6b9 ; ret
0x0000000000099783 : lea edi, dword ptr [rdi + 0xe] ; jne 0x99e99 ; ret
0x000000000009ae57 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9b6b9 ; ret
0x00000000000997a3 : lea edi, dword ptr [rdi + 0xf] ; jne 0x99e99 ; ret
0x000000000009ae87 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9b6b9 ; ret
0x00000000000995d7 : lea edi, dword ptr [rdi + 1] ; jne 0x99e99 ; ret
0x000000000009ac8a : lea edi, dword ptr [rdi + 1] ; jne 0x9b6b9 ; ret
0x00000000000995fb : lea edi, dword ptr [rdi + 2] ; jne 0x99e99 ; ret
0x000000000009acaf : lea edi, dword ptr [rdi + 2] ; jne 0x9b6b9 ; ret
0x000000000009961e : lea edi, dword ptr [rdi + 3] ; jne 0x99e99 ; ret
0x000000000009acd2 : lea edi, dword ptr [rdi + 3] ; jne 0x9b6b9 ; ret
0x0000000000099639 : lea edi, dword ptr [rdi + 4] ; jne 0x99e99 ; ret
0x000000000009aced : lea edi, dword ptr [rdi + 4] ; jne 0x9b6b9 ; ret
0x000000000009965c : lea edi, dword ptr [rdi + 5] ; jne 0x99e99 ; ret
0x000000000009ad10 : lea edi, dword ptr [rdi + 5] ; jne 0x9b6b9 ; ret
0x0000000000099681 : lea edi, dword ptr [rdi + 6] ; jne 0x99e99 ; ret
0x000000000009ad35 : lea edi, dword ptr [rdi + 6] ; jne 0x9b6b9 ; ret
0x000000000009969f : lea edi, dword ptr [rdi + 7] ; jne 0x99e99 ; ret
0x000000000009ad53 : lea edi, dword ptr [rdi + 7] ; jne 0x9b6b9 ; ret
0x00000000000996bb : lea edi, dword ptr [rdi + 8] ; jne 0x99e99 ; ret
0x000000000009ad6f : lea edi, dword ptr [rdi + 8] ; jne 0x9b6b9 ; ret
0x00000000000996de : lea edi, dword ptr [rdi + 9] ; jne 0x99e99 ; ret
0x000000000009ad92 : lea edi, dword ptr [rdi + 9] ; jne 0x9b6b9 ; ret
0x000000000006777e : lea edi, dword ptr [rip + 0x109d32] ; call 0xf3a18
0x000000000004c60b : lea edi, dword ptr [rip + 0x13f] ; add rax, rdi ; jmp rax
0x0000000000029733 : lea edi, dword ptr [rip + 0x14b4f7] ; mov eax, ecx ; syscall
0x000000000004c5a2 : lea edi, dword ptr [rip + 0x1a8] ; add rax, rdi ; jmp rax
0x0000000000108691 : lea edi, dword ptr [rip + 0x2a8185] ; call rax
0x000000000004c3ea : lea edi, dword ptr [rip + 0x360] ; add rax, rdi ; jmp rax
0x00000000000edd98 : lea edi, dword ptr [rip + 0x850d2] ; mov eax, ebx ; syscall
0x00000000000edca7 : lea edi, dword ptr [rip + 0x851b8] ; mov eax, ebx ; syscall
0x00000000000eafd4 : lea edi, dword ptr [rip + 0x85d82] ; mov eax, ecx ; syscall
0x00000000000fd617 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000e1ce5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x00000000000e1d2d : lea edi, dword ptr [rsp + 0xc] ; mov eax, 0x135 ; syscall
0x000000000007a6fb : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000001079e5 : lea edx, dword ptr [rax - 1] ; cmp rdx, 0xfd ; jbe 0x1079f9 ; ret
0x0000000000034e79 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x377306], edx ; ret
0x000000000012bbf4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000008a698 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000070a9d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000008afa6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000000f38b3 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012bfe8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000011d421 : lea edx, dword ptr [rip + 0x29f9] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000083203 : lea esi, dword ptr [r10] ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000627f0 : lea esi, dword ptr [rax - 0x7c000006] ; retf
0x0000000000063160 : lea esi, dword ptr [rax - 0x9000006] ; ret
0x00000000000a0944 : lea esi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000070872 : lea esi, dword ptr [rbx] ; add byte ptr [rax + 0x29], cl ; retf -0x76b8
0x000000000006f420 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002f5a : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000008314c : lea esi, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000031baa : lea esi, dword ptr [rip + 0x134d90] ; add rdx, rsi ; jmp rdx
0x0000000000040c37 : lea esi, dword ptr [rip + 0x193] ; call rax
0x000000000012647f : lea esi, dword ptr [rip + 0x28adbb] ; xor eax, eax ; syscall
0x000000000012623d : lea esi, dword ptr [rip + 0x28affd] ; mov eax, r14d ; syscall
0x000000000006d27a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007a174 : lea esi, dword ptr [rip - 0x189a] ; call rax
0x000000000007a63c : lea esi, dword ptr [rip - 0x1d62] ; call rax
0x000000000006d573 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x0000000000078c12 : lea esi, dword ptr [rip - 0x338] ; call rax
0x0000000000078e5a : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000009d9cf : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000ee01f : lea esi, dword ptr [rsp + 0x10] ; mov rdi, r8 ; xor eax, eax ; syscall
0x0000000000115bb5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000011ffcd : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000100a50 : lea esi, dword ptr [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000363c2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000aafb1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000008afa5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000012bb1f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000072d83 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000001140d7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000072e5f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000113f18 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000a0062 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009fcd8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000009fbac : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000011456a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000abd1e : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000a0519 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000011db6e : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a07ca : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000a0250 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000c1009 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008e123 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008e133 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008e603 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008e103 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000ba951 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011579a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000c6032 : lea rax, qword ptr [rcx + rdx*8] ; jmp 0xc6000
0x0000000000093a0c : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000009d5b3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000009a50b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009a520 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009a53e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009a55e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009a581 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009a5a0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009a5c0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009a5e0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009a603 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009a628 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009a646 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009a666 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009a682 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009a6a2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009a6c2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009a6e2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009b542 : lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009b7a8 : lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009a45c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009a47c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009a49e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009a4be : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009a4de : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009a4f8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009a3a6 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000009a3b9 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000009a3c4 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000009a3d7 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000009a3ec : lea rax, qword ptr [rdi + 5] ; ret
0x000000000009a40a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000009a416 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000009a429 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000009a43e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008e158 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e168 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e062 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000014d834 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000093656 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000149439 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000008ab2f : lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000010bf3f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000002cb04 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000093908 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000aeecd : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000af030 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000af050 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000af040 : lea rax, qword ptr [rdi - 8] ; ret
0x000000000009a392 : lea rax, qword ptr [rdi] ; ret
0x000000000014074c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000014076c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000014078e : lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001407ae : lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000001407ce : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000014065e : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000140686 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000014069c : lea rax, qword ptr [rdx + 2] ; ret
0x00000000001406b4 : lea rax, qword ptr [rdx + 3] ; ret
0x00000000001406ca : lea rax, qword ptr [rdx + 4] ; ret
0x00000000001406dc : lea rax, qword ptr [rdx + 5] ; ret
0x00000000001406fa : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000140606 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000014070c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000014072c : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000140674 : lea rax, qword ptr [rdx] ; ret
0x000000000002bff8 : lea rax, qword ptr [rip + 0x145200] ; ret
0x0000000000021170 : lea rax, qword ptr [rip + 0x14fbd4] ; ret
0x0000000000021180 : lea rax, qword ptr [rip + 0x151a01] ; ret
0x0000000000068ab3 : lea rax, qword ptr [rip + 0x345d46] ; pop rbx ; pop rbp ; ret
0x0000000000112c70 : lea rax, qword ptr [rip + 0x5e588] ; ret
0x00000000000af009 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x00000000000bb8b6 : lea rbp, qword ptr [rsp + 0x30] ; mov rdi, rbx ; call r12
0x00000000000e4388 : lea rbx, qword ptr [rax + 0x13] ; mov rdi, rbx ; call 0x205e9
0x00000000000429c0 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x0000000000083cce : lea rbx, qword ptr [rax + 1] ; mov rdi, rbx ; call 0x207a9
0x0000000000098c4d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000009fbb1 : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009fcdd : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000a00c4 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000006e6c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000f3ad6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000083d1e : lea rdi, qword ptr [rax + 1] ; mov rbx, rax ; call 0x207a9
0x0000000000119c2d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011c1f1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011b7d1 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000119094 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000006777d : lea rdi, qword ptr [rip + 0x109d32] ; call 0xf3a19
0x0000000000029732 : lea rdi, qword ptr [rip + 0x14b4f7] ; mov eax, ecx ; syscall
0x0000000000108690 : lea rdi, qword ptr [rip + 0x2a8185] ; call rax
0x00000000000edd97 : lea rdi, qword ptr [rip + 0x850d2] ; mov eax, ebx ; syscall
0x00000000000edca6 : lea rdi, qword ptr [rip + 0x851b8] ; mov eax, ebx ; syscall
0x00000000000eafd3 : lea rdi, qword ptr [rip + 0x85d82] ; mov eax, ecx ; syscall
0x00000000000fd616 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000e1ce4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x000000000012bbf3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f38b2 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000012bfe7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000040c36 : lea rsi, qword ptr [rip + 0x193] ; call rax
0x000000000012647e : lea rsi, qword ptr [rip + 0x28adbb] ; xor eax, eax ; syscall
0x000000000006d279 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007a173 : lea rsi, qword ptr [rip - 0x189a] ; call rax
0x000000000007a63b : lea rsi, qword ptr [rip - 0x1d62] ; call rax
0x000000000006d572 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x0000000000078c11 : lea rsi, qword ptr [rip - 0x338] ; call rax
0x0000000000078e59 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000009d9ce : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000115bb4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000011ffcc : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000363c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012b787 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018da1d : leave ; add byte ptr [rax], al ; add al, 0xf0 ; jmp qword ptr [rbx]
0x000000000007f9c3 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000017c3a1 : leave ; add byte ptr [rax], al ; sub al, 0xef ; call rax
0x0000000000145457 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003491b : leave ; add edi, esi ; ret 0
0x0000000000033481 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000293f4 : leave ; call r15
0x0000000000191551 : leave ; call rdi
0x000000000017f93d : leave ; clc ; lcall ptr [rax + 0x60000218] ; retf -8
0x0000000000002c4c : leave ; clc ; ret
0x000000000009d876 : leave ; cmove rax, rdx ; ret
0x0000000000149471 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000007aa97 : leave ; cmp eax, 0x33 ; add byte ptr [rax], al ; ret
0x000000000017e69d : leave ; idiv bh ; mov al, 1 ; add byte ptr [rax], dl ; retf -0xa
0x000000000002a7e7 : leave ; je 0x2a7ef ; call rcx
0x0000000000069299 : leave ; je 0x692a4 ; ret
0x000000000008a974 : leave ; jmp rcx
0x000000000010dafc : leave ; jne 0x10da4b ; ret
0x000000000008a799 : leave ; jne 0x8a78c ; ret
0x000000000008a8d8 : leave ; jne 0x8a8cd ; xor eax, eax ; ret
0x000000000009d390 : leave ; jne 0x9d383 ; ret
0x000000000009d440 : leave ; jne 0x9d433 ; ret
0x000000000009d700 : leave ; jne 0x9d6f7 ; sub rax, 1 ; ret
0x000000000009f69c : leave ; jne 0x9f694 ; ret
0x00000000000af30a : leave ; jne 0xaf2c7 ; mov rax, rdx ; ret
0x00000000000f7d36 : leave ; jne 0xf7d24 ; ret
0x0000000000149438 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000098571 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000009e574 : leave ; mov dword ptr [rdx], ecx ; jne 0x9e56e ; ret
0x00000000000b36d6 : leave ; movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x0000000000021ea0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000017c935 : leave ; out dx, eax ; call qword ptr [rax]
0x000000000002d7b1 : leave ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x000000000003e1f5 : leave ; ret
0x0000000000082643 : leave ; ret 0x32
0x0000000000169914 : leave ; retf
0x00000000001668c9 : leave ; retf -0x3335
0x00000000001680e1 : leave ; retf 0x6ee8
0x00000000000a005f : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000198c3f : les r8d, ptr [r13 - 0x3f] ; ret 0xc044
0x0000000000078861 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x000000000017da77 : ljmp ptr [rax + 0x162] ; hlt ; jmp qword ptr [rax]
0x00000000001800df : ljmp ptr [rax + 0x4f] ; add al, byte ptr [rax] ; xor cl, dl ; stc ; call rax
0x000000000016c503 : ljmp ptr [rax + 0x58] ; int1 ; call qword ptr [rax]
0x000000000017d9df : ljmp ptr [rax + 0x5c] ; add dword ptr [rax], eax ; ror byte ptr [rcx], 0xf4 ; jmp rax
0x000000000017bae7 : ljmp ptr [rax + 0x6000008f] ; mov ch, 0xeb ; jmp rax
0x000000000016b7df : ljmp ptr [rax + 0x6b] ; out dx, eax ; jmp rdi
0x0000000000180b2f : ljmp ptr [rax + 7] ; add dword ptr [rax], eax ; loopne 0x180b14 ; cli ; call rax
0x000000000016b3af : ljmp ptr [rax - 0x1b00110a] ; imul dh ; jmp rsp
0x000000000017c39f : ljmp ptr [rax - 0x37] ; add byte ptr [rax], al ; sub al, 0xef ; call rax
0x000000000017e617 : ljmp ptr [rax - 0x3ffffe53] ; ret 0xfff6
0x000000000017ffb7 : ljmp ptr [rax - 0x5ffffdb9] ; stosd dword ptr [rdi], eax ; stc ; jmp rax
0x000000000017fbaf : ljmp ptr [rax - 0x5ffffdd9] ; sub ecx, edi ; jmp rax
0x000000000017c5e7 : ljmp ptr [rax - 0x5fffff27] ; je 0x17c5e6 ; jmp qword ptr [rax]
0x00000000001804df : ljmp ptr [rax - 0x7ffffd98] ; cmp dl, bh ; jmp rax
0x000000000017fa07 : ljmp ptr [rax - 0x7ffffde2] ; out dx, eax ; clc ; jmp rax
0x000000000017deef : ljmp ptr [rax - 0xffffe7f] ; push rax ; cmc ; jmp rax
0x000000000016b5d7 : ljmp ptr [rax - 2] ; out dx, al ; call rdi
0x000000000016b59f : ljmp ptr [rax - 4] ; out dx, al ; call rdi
0x000000000017ebcf : ljmp ptr [rax] ; retf 1
0x000000000016d973 : ljmp ptr [rbp + 0x54fff4b8] ; mov bh, 0xf4 ; jmp rax
0x000000000016b5ef : ljmp ptr [rbx - 0x7a0010f7] ; or edi, ebp ; call rdi
0x000000000016e7cf : ljmp ptr [rcx + 0x1efff684] ; test dh, dh ; jmp rsp
0x000000000016ecd5 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000154ac5 : ljmp ptr [rcx] ; inc byte ptr [rbx - 0x71f0ff02] ; syscall
0x000000000017a9df : ljmp ptr [rdx + rax*4 - 0x75ad0005] ; sti ; call rdx
0x0000000000085f56 : ljmp ptr [rdx] ; cmp rcx, rdx ; jne 0x85f58 ; ret
0x000000000017af9f : ljmp ptr [rsi + 0x54fffba8] ; mov al, 0xfb ; call rsp
0x0000000000166913 : ljmp ptr [rsi] ; outsd dx, dword ptr [rsi] ; in al, dx ; jmp qword ptr [rcx]
0x000000000014f6ce : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009f86a : lock add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000017f2e9 : lock add dword ptr [rax], eax ; loopne 0x17f308 ; clc ; call rax
0x0000000000187215 : lock add dword ptr [rdx], eax ; ret
0x00000000000e6e30 : lock and byte ptr [rax - 0x77], cl ; ret
0x0000000000112c16 : lock dec dword ptr [rax - 0x77] ; ret
0x000000000017cc96 : lock dec dword ptr [rax - 0xffffefd] ; cmp al, 0xf0 ; jmp rax
0x000000000011a8eb : lock dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000017d0b6 : lock inc dword ptr [rax - 0x3ffffee2] ; mov ch, 0xf0 ; call rax
0x000000000012869c : lock inc dword ptr [rbp - 0x76b18a40] ; ret
0x0000000000123cd0 : lock sub dword ptr [rdi + 0x18], 1 ; je 0x123ce9 ; xor eax, eax ; ret
0x0000000000144550 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000cb480 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x9d78b37], al ; ret
0x0000000000153e00 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000115440 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000000000018bd45 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; call 0x2818acad
0x000000000017bfa9 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ror bh, 1 ; in al, dx ; call rax
0x0000000000191264 : lodsb al, byte ptr [rsi] ; add dword ptr [rcx], eax ; add byte ptr [rax - 0x47], bl ; call rsi
0x0000000000195e64 : lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; cmp byte ptr [rcx], dl ; cmc ; call qword ptr [rbx]
0x000000000010693e : lodsb al, byte ptr [rsi] ; and al, 0x22 ; add al, byte ptr [rax] ; add al, ch ; xlatb ; ret 0xfffd
0x000000000012159a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017a06d : lodsb al, byte ptr [rsi] ; cld ; push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000170865 : lodsb al, byte ptr [rsi] ; cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000170869 : lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000169806 : lodsb al, byte ptr [rsi] ; loop 0x1697d3 ; retf
0x00000000001044b3 : lodsb al, byte ptr [rsi] ; mov rdi, r14 ; call 0x207ae
0x0000000000144b74 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000191b64 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rcx] ; add al, bh ; loope 0x191b64 ; jmp qword ptr [rcx]
0x000000000016a5bd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000017c80d : lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x00000000000cd92b : lodsb al, byte ptr [rsi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018c0d6 : lodsb al, byte ptr [rsi] ; ret
0x000000000019d364 : lodsb al, byte ptr [rsi] ; ret 1
0x0000000000068f1b : lodsb al, byte ptr [rsi] ; retf
0x000000000019db64 : lodsb al, byte ptr [rsi] ; retf 1
0x000000000017ffc5 : lodsb al, byte ptr [rsi] ; stc ; call qword ptr [rax]
0x000000000017ae89 : lodsb al, byte ptr [rsi] ; sti ; call qword ptr [rax + 0x10fffbab]
0x000000000017ae85 : lodsb al, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000017b085 : lodsb al, byte ptr [rsi] ; sti ; jmp qword ptr [rax + 0x20fffbab]
0x000000000017b081 : lodsb al, byte ptr [rsi] ; sti ; jmp qword ptr [rax]
0x000000000017af05 : lodsb al, byte ptr [rsi] ; sti ; jmp rdx
0x000000000019a464 : lodsb al, byte ptr [rsi] ; xchg eax, ebx ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000168066 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x1680d5 ; salc ; retf
0x0000000000167e3b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000000a13e6 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d0c61 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000734cf : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017bfd9 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; jo 0x17bfb9 ; in al, dx ; jmp rax
0x00000000000c7807 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000017e611 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; nop ; ret 0xfff6
0x000000000017e609 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; push rax ; ret 0xfff6
0x000000000017a071 : lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000016db99 : lodsd eax, dword ptr [rsi] ; hlt ; dec dword ptr [rsi] ; ret 0xfff4
0x000000000017d5b5 : lodsd eax, dword ptr [rsi] ; jmp qword ptr [rax]
0x00000000000e366f : lodsd eax, dword ptr [rsi] ; mov eax, 0x5c ; syscall
0x000000000016d974 : lodsd eax, dword ptr [rsi] ; mov eax, 0xb754fff4 ; hlt ; jmp rax
0x0000000000169be5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf -0x6620
0x00000000001486e0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ad11f : lodsd eax, dword ptr [rsi] ; or eax, 0x83480000 ; ret
0x00000000000441a2 : lodsd eax, dword ptr [rsi] ; ret
0x00000000000b205f : lodsd eax, dword ptr [rsi] ; retf
0x000000000017ae81 : lodsd eax, dword ptr [rsi] ; sti ; call qword ptr [rax + 0x10fffbac]
0x000000000017ae7d : lodsd eax, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000017b07d : lodsd eax, dword ptr [rsi] ; sti ; jmp qword ptr [rax + 0x20fffbac]
0x000000000017b079 : lodsd eax, dword ptr [rsi] ; sti ; jmp qword ptr [rax]
0x000000000017aefd : lodsd eax, dword ptr [rsi] ; sti ; jmp rdx
0x0000000000126482 : lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; xor eax, eax ; syscall
0x00000000000a13e5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011d586 : loop 0x11d518 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011d719 : loop 0x11d6ab ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000132d1a : loop 0x132d15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132d19 : loop 0x132d16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013583a : loop 0x135835 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000135839 : loop 0x135836 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000169807 : loop 0x1697d2 ; retf
0x000000000016a95a : loop 0x16a9af ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000016c7d9 : loop 0x16c7d9 ; jmp rax
0x000000000016ca4d : loop 0x16ca47 ; inc eax ; loop 0x16ca4b ; jmp rax
0x000000000016ca51 : loop 0x16ca47 ; jmp rax
0x000000000016ca55 : loop 0x16ca4f ; inc dword ptr [rax] ; jrcxz 0x16ca53 ; jmp qword ptr [rax]
0x0000000000180fd5 : loop 0x180fd6 ; call rax
0x0000000000180fd4 : loop 0x180fd7 ; call rax
0x0000000000195491 : loop 0x195489 ; jmp qword ptr [rcx]
0x00000000001954a9 : loop 0x1954a1 ; jmp qword ptr [rcx]
0x0000000000195529 : loop 0x195521 ; call qword ptr [rax]
0x0000000000002629 : loop 0x2603 ; ret 0x23cb
0x0000000000002c5a : loop 0x2c6d ; retf
0x00000000000370f9 : loop 0x37123 ; mov rax, rcx ; or rax, rdx ; ret
0x000000000004a297 : loop 0x4a283 ; ret
0x000000000005f17b : loop 0x5f181 ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000064650 : loop 0x645d8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000069b02 : loop 0x69a94 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000073764 : loop 0x7376b ; mov eax, edx ; ret
0x0000000000073864 : loop 0x7386b ; mov eax, edx ; ret
0x0000000000078386 : loop 0x7838c ; dec dword ptr [rax + 0x39] ; ret
0x0000000000080609 : loop 0x80645 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000842ed : loop 0x84301 ; add cl, ch ; retf -2
0x000000000008c5fd : loop 0x8c635 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000998aa : loop 0x998b5 ; add byte ptr [rax], al ; ret
0x000000000009df85 : loop 0x9df9f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x000000000009f34a : loop 0x9f353 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000009fa09 : loop 0x9fa16 ; mov rax, rdi ; jne 0x9fa25 ; ret
0x00000000000a024f : loop 0xa02a6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000a0518 : loop 0xa056f ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000ab464 : loop 0xab49a ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000adc0c : loop 0xadc12 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c24c6 : loop 0xc244d ; retf -0x7bf0
0x00000000000c368f : loop 0xc3681 ; or ecx, edi ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d0623 : loop 0xd0628 ; add esi, esi ; ret
0x00000000000d087d : loop 0xd08aa ; retf -0x2d7b
0x00000000000d9e02 : loop 0xd9e15 ; retf 0x5089
0x00000000000e043a : loop 0xe048a ; mov esi, ebp ; call 0xdceb6
0x0000000000115b61 : loope 0x115b5e ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000011905e : loope 0x118ff3 ; ret
0x0000000000128dd0 : loope 0x128dbc ; retf -0x517
0x0000000000132c8a : loope 0x132c85 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000132c89 : loope 0x132c86 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001357aa : loope 0x1357a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001357a9 : loope 0x1357a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013e2bb : loope 0x13e2c2 ; add byte ptr [rax], al ; ret
0x0000000000152b2b : loope 0x152b35 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001594d6 : loope 0x159535 ; ret
0x0000000000169911 : loope 0x169993 ; pop rdx ; leave ; retf
0x000000000016bb89 : loope 0x16bb7c ; jmp qword ptr [rax]
0x000000000016f2e9 : loope 0x16f2f3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000017a0f9 : loope 0x17a0fd ; inc dword ptr [rax] ; jrcxz 0x17a101 ; jmp rax
0x000000000017c9d5 : loope 0x17c9c8 ; jmp qword ptr [rax]
0x000000000017d615 : loope 0x17d60b ; jmp rax
0x0000000000191b31 : loope 0x191b27 ; jmp qword ptr [rdx]
0x0000000000191b69 : loope 0x191b5f ; jmp qword ptr [rcx]
0x0000000000195479 : loope 0x195471 ; jmp qword ptr [rcx]
0x0000000000199c49 : loope 0x199c42 ; jmp qword ptr [rcx]
0x0000000000199c48 : loope 0x199c43 ; jmp qword ptr [rcx]
0x00000000000026fe : loope 0x26b9 ; hlt ; out -0x21, eax ; syscall
0x00000000000325db : loope 0x325e2 ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfee1
0x0000000000043836 : loope 0x437f6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000043916 : loope 0x438d6 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000044037 : loope 0x44089 ; mov dword ptr [rdi], ecx ; ret
0x0000000000044068 : loope 0x440bb ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000000440dd : loope 0x44130 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000005fbf3 : loope 0x5fbf9 ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000648d1 : loope 0x648d6 ; push rsi ; ret
0x0000000000073661 : loope 0x73636 ; mov dword ptr [rdi], ecx ; ret
0x000000000009d289 : loope 0x9d2f8 ; nop dword ptr [rax + rax] ; ret
0x000000000009dfc7 : loope 0x9df88 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009e4de : loope 0x9e4d5 ; ret
0x00000000000af50e : loope 0xaf523 ; je 0xaf534 ; ret
0x00000000000bb76d : loope 0xbb6fa ; ret 0xf631
0x00000000000be08b : loope 0xbe08a ; add byte ptr cs:[rax - 0x77], cl ; ret 0x9ce9
0x00000000000c9063 : loope 0xc906a ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; retf
0x00000000000cd069 : loope 0xcd06e ; add esi, esi ; ret
0x00000000000e843d : loope 0xe8444 ; mov eax, 0xa9 ; syscall
0x00000000000f3073 : loope 0xf3009 ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000fe3dc : loope 0xfe42f ; mov edx, ebp ; mov rsi, r12 ; call 0x7ae59
0x000000000010b194 : loopne 0x10b193 ; add eax, 0x10 ; ret
0x000000000010b6d8 : loopne 0x10b6cf ; ret
0x000000000010bf0b : loopne 0x10bf18 ; cdqe ; shr rax, 4 ; ret
0x000000000010fdc1 : loopne 0x10fe23 ; pop rbp ; pop r12 ; ret
0x000000000010fe2c : loopne 0x10fe72 ; pop rsp ; ret
0x0000000000111cbb : loopne 0x111cc8 ; sub eax, 1 ; pop r13 ; pop r14 ; ret
0x000000000011d490 : loopne 0x11d49d ; sub eax, 1 ; add rsp, 0x18 ; ret
0x000000000011dde7 : loopne 0x11ddf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000121451 : loopne 0x1214c1 ; nop dword ptr [rax + rax] ; ret
0x000000000012c041 : loopne 0x12c058 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c040 : loopne 0x12c059 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c191 : loopne 0x12c1a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c190 : loopne 0x12c1a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c2e1 : loopne 0x12c2f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c2e0 : loopne 0x12c2f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c431 : loopne 0x12c448 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c430 : loopne 0x12c449 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c581 : loopne 0x12c598 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c580 : loopne 0x12c599 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c6d1 : loopne 0x12c6e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c6d0 : loopne 0x12c6e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c821 : loopne 0x12c838 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c820 : loopne 0x12c839 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c96f : loopne 0x12c986 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c96e : loopne 0x12c987 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cac1 : loopne 0x12cad8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cac0 : loopne 0x12cad9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cc11 : loopne 0x12cc28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cc10 : loopne 0x12cc29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cd61 : loopne 0x12cd78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cd60 : loopne 0x12cd79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ceb1 : loopne 0x12cec8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ceb0 : loopne 0x12cec9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d001 : loopne 0x12d018 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d000 : loopne 0x12d019 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d151 : loopne 0x12d168 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d150 : loopne 0x12d169 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d2a1 : loopne 0x12d2b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d2a0 : loopne 0x12d2b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ea11 : loopne 0x12ea28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ea10 : loopne 0x12ea29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012eb61 : loopne 0x12eb78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012eb60 : loopne 0x12eb79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ecb1 : loopne 0x12ecc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ecb0 : loopne 0x12ecc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ee01 : loopne 0x12ee18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ee00 : loopne 0x12ee19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ef51 : loopne 0x12ef68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ef50 : loopne 0x12ef69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f0a1 : loopne 0x12f0b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f0a0 : loopne 0x12f0b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f1f1 : loopne 0x12f208 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f1f0 : loopne 0x12f209 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f33f : loopne 0x12f356 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f33e : loopne 0x12f357 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f491 : loopne 0x12f4a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f490 : loopne 0x12f4a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f5e1 : loopne 0x12f5f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f5e0 : loopne 0x12f5f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f731 : loopne 0x12f748 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f730 : loopne 0x12f749 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f881 : loopne 0x12f898 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f880 : loopne 0x12f899 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f9d1 : loopne 0x12f9e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f9d0 : loopne 0x12f9e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fb21 : loopne 0x12fb38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fb20 : loopne 0x12fb39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fc71 : loopne 0x12fc88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fc70 : loopne 0x12fc89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156d56 : loopne 0x156d6a ; xchg eax, edx ; ret
0x0000000000158abe : loopne 0x158acb ; sub rax, 1 ; pop rbx ; pop r14 ; ret
0x0000000000167f34 : loopne 0x167f14 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000016c099 : loopne 0x16c08c ; call qword ptr [rdi]
0x000000000016c644 : loopne 0x16c622 ; sti ; inc dword ptr [rax] ; xlatb ; sti ; jmp qword ptr [rax]
0x000000000016ca54 : loopne 0x16ca3f ; inc dword ptr [rax] ; jrcxz 0x16ca54 ; jmp qword ptr [rax]
0x000000000016cab4 : loopne 0x16ca9e ; call qword ptr [rax]
0x000000000016cab4 : loopne 0x16ca9f ; call qword ptr [rax]
0x000000000016f784 : loopne 0x16f7e4 ; cli ; jmp qword ptr [rax - 0x2f0005a9]
0x000000000017086c : loopne 0x17081d ; cli ; jmp rax
0x0000000000170870 : loopne 0x170825 ; cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000017a084 : loopne 0x17a03a ; cld ; call rax
0x000000000017a250 : loopne 0x17a2bd ; std ; push qword ptr [rax + 0x65] ; std ; call qword ptr [rax]
0x000000000017a3d0 : loopne 0x17a40d ; sti ; call rax
0x000000000017a594 : loopne 0x17a5fb ; sti ; jmp rax
0x000000000017a598 : loopne 0x17a601 ; sti ; jmp rax
0x000000000017a634 : loopne 0x17a69a ; sti ; jmp rax
0x000000000017a638 : loopne 0x17a6a0 ; sti ; jmp rax
0x000000000017ab5c : loopne 0x17aae7 ; sti ; push qword ptr [rax - 0x7e] ; sti ; call qword ptr [rax]
0x000000000017ae60 : loopne 0x17ae11 ; sti ; jmp qword ptr [rax + 0x20fffbb0]
0x000000000017bf84 : loopne 0x17bf2d ; in al, dx ; call qword ptr [rax]
0x000000000017c268 : loopne 0x17c22f ; add byte ptr [rax], al ; push rax ; sti ; out dx, al ; jmp qword ptr [rax]
0x000000000017c6d9 : loopne 0x17c6e1 ; add byte ptr [rax], al ; xchg eax, ebx ; out dx, eax ; jmp qword ptr [rax]
0x000000000017c86c : loopne 0x17c821 ; out dx, eax ; call qword ptr [rax]
0x000000000017c908 : loopne 0x17c8fe ; add byte ptr [rax], al ; add ch, 0xef ; jmp qword ptr [rax]
0x000000000017ceb8 : loopne 0x17ced4 ; add dword ptr [rax], eax ; push rax ; xchg eax, esi ; call qword ptr [rax]
0x000000000017d57c : loopne 0x17d506 ; jmp qword ptr [rax]
0x000000000017d57c : loopne 0x17d507 ; jmp qword ptr [rax]
0x000000000017d54c : loopne 0x17d5ac ; jmp qword ptr [rax]
0x000000000017d54c : loopne 0x17d5ad ; jmp qword ptr [rax]
0x000000000017d5f4 : loopne 0x17d5ca ; call qword ptr [rax]
0x000000000017d5f4 : loopne 0x17d5cb ; call qword ptr [rax]
0x000000000017d618 : loopne 0x17d664 ; add dword ptr [rax], eax ; cmp cl, 0xf2 ; call qword ptr [rax]
0x000000000017dcd8 : loopne 0x17dd50 ; add dword ptr [rax], eax ; mov al, 0x93 ; hlt ; call qword ptr [rax]
0x000000000017e69c : loopne 0x17e670 ; idiv bh ; mov al, 1 ; add byte ptr [rax], dl ; retf -0xa
0x000000000017f29c : loopne 0x17f2b3 ; clc ; jmp rax
0x000000000017f2ec : loopne 0x17f305 ; clc ; call rax
0x000000000017f36c : loopne 0x17f388 ; clc ; jmp rax
0x000000000017f990 : loopne 0x17f9b3 ; add al, byte ptr [rax] ; and ch, dl ; clc ; call qword ptr [rax]
0x000000000017f9ec : loopne 0x17f9d9 ; clc ; call rax
0x000000000017fa3c : loopne 0x17fa3e ; clc ; call rax
0x00000000001806a4 : loopne 0x180700 ; cli ; call rax
0x00000000001807bc : loopne 0x180827 ; cli ; call qword ptr [rax]
0x00000000001808c8 : loopne 0x180851 ; add al, byte ptr [rax] ; loopne 0x180873 ; cli ; call qword ptr [rax]
0x00000000001808cc : loopne 0x18086f ; cli ; call qword ptr [rax]
0x00000000001809f0 : loopne 0x180980 ; add al, byte ptr [rax] ; and cl, al ; cli ; call qword ptr [rax]
0x0000000000180acc : loopne 0x180a9d ; cli ; jmp qword ptr [rax]
0x0000000000180b34 : loopne 0x180b0f ; cli ; call rax
0x0000000000180dfc : loopne 0x180e30 ; std ; call rax
0x0000000000185450 : loopne 0x185488 ; cli ; jmp qword ptr [rcx]
0x000000000018a321 : loopne 0x18a313 ; jmp qword ptr [rsi]
0x000000000018a341 : loopne 0x18a333 ; jmp qword ptr [rsi]
0x000000000018a401 : loopne 0x18a40f ; ret
0x000000000018af10 : loopne 0x18af14 ; out dx, al ; call qword ptr [rdx]
0x000000000018ee10 : loopne 0x18ee30 ; int1 ; jmp qword ptr [rax]
0x000000000018ee40 : loopne 0x18ee60 ; int1 ; call qword ptr [rdx]
0x000000000018ee70 : loopne 0x18ee90 ; int1 ; call qword ptr [rdx]
0x000000000018eea0 : loopne 0x18eec0 ; int1 ; call qword ptr [rdx]
0x000000000018eed0 : loopne 0x18eef0 ; int1 ; call qword ptr [rdx]
0x000000000018ef00 : loopne 0x18ef20 ; int1 ; call qword ptr [rdx]
0x0000000000191a60 : loopne 0x191a41 ; jmp qword ptr [rcx]
0x0000000000191a60 : loopne 0x191a42 ; jmp qword ptr [rcx]
0x00000000001920e0 : loopne 0x1920e0 ; call qword ptr [rax]
0x00000000001920e0 : loopne 0x1920e1 ; call qword ptr [rax]
0x0000000000195320 : loopne 0x1952fe ; hlt ; jmp qword ptr [rcx]
0x0000000000195680 : loopne 0x19566c ; hlt ; jmp qword ptr [rcx]
0x0000000000196050 : loopne 0x196069 ; cmc ; jmp qword ptr [rcx]
0x0000000000196e20 : loopne 0x196e64 ; cmc ; call qword ptr [rax]
0x0000000000197040 : loopne 0x197088 ; cmc ; jmp qword ptr [rcx]
0x00000000001980c0 : loopne 0x19804c ; cmc ; jmp qword ptr [rcx]
0x00000000001a2389 : loopne 0x1a2384 ; call qword ptr [rcx]
0x000000000002cdb3 : loopne 0x2cdc2 ; movzx eax, ax ; ret
0x000000000002cdf3 : loopne 0x2cdfc ; movzx eax, ax ; ret
0x000000000002ce93 : loopne 0x2ce9e ; movzx eax, ax ; ret
0x000000000002cf73 : loopne 0x2cf78 ; ret
0x000000000002cfec : loopne 0x2cff1 ; ret
0x000000000002cffc : loopne 0x2d00b ; movzx eax, ax ; ret
0x000000000002d03c : loopne 0x2d045 ; movzx eax, ax ; ret
0x000000000002cfc3 : loopne 0x2d046 ; ret
0x000000000002d0dc : loopne 0x2d0e7 ; movzx eax, ax ; ret
0x000000000002d97b : loopne 0x2d9dd ; pop rbp ; pop r12 ; ret
0x00000000000330e7 : loopne 0x330ce ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000033805 : loopne 0x33811 ; ret
0x0000000000034bd4 : loopne 0x34c24 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003812b : loopne 0x3811a ; ret 0x9066
0x000000000003812a : loopne 0x3811b ; ret 0x9066
0x000000000003830b : loopne 0x382fa ; ret 0x9066
0x000000000003830a : loopne 0x382fb ; ret 0x9066
0x00000000000384fb : loopne 0x384ea ; ret 0x9066
0x00000000000384fa : loopne 0x384eb ; ret 0x9066
0x0000000000041a22 : loopne 0x41a3c ; test ch, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x0000000000043b5d : loopne 0x43b66 ; sub eax, 1 ; ret
0x000000000004575b : loopne 0x4574a ; ret 0x9066
0x000000000004575a : loopne 0x4574b ; ret 0x9066
0x0000000000053761 : loopne 0x536ee ; ret 0xe680
0x000000000005421d : loopne 0x5428b ; nop ; mov qword ptr [rdi], rcx ; ret
0x000000000005f3d3 : loopne 0x5f3d9 ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000061e4d : loopne 0x61ebb ; nop ; mov qword ptr [rdi], rcx ; ret
0x000000000006a65d : loopne 0x6a6cb ; nop ; mov qword ptr [rdi], rcx ; ret
0x000000000006b4b7 : loopne 0x6b51e ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bd1c : loopne 0x6bd22 ; add byte ptr [rax], al ; jmp rax
0x000000000006bd58 : loopne 0x6bd5e ; add byte ptr [rax], al ; call rax
0x000000000006bdaa : loopne 0x6bdb0 ; add byte ptr [rax], al ; call rax
0x000000000006bdec : loopne 0x6bdf2 ; add byte ptr [rax], al ; jmp rax
0x000000000006bdf1 : loopne 0x6be62 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000075908 : loopne 0x7596a ; pop rbp ; pop r12 ; ret
0x0000000000075eb6 : loopne 0x75ebb ; ret
0x0000000000075ec6 : loopne 0x75ecb ; ret
0x00000000000794c1 : loopne 0x794ca ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000080b01 : loopne 0x80b07 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000082b13 : loopne 0x82b79 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000086797 : loopne 0x867ed ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008679a : loopne 0x867fc ; pop rbp ; pop r12 ; ret
0x00000000000999ac : loopne 0x999b6 ; add byte ptr [rax], al ; ret
0x000000000009dfbd : loopne 0x9dfd7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a0090 : loopne 0xa00d6 ; pop rsp ; ret
0x00000000000b5631 : loopne 0xb563b ; dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000c0b00 : loopne 0xc0b66 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000c4472 : loopne 0xc44d4 ; pop rbp ; pop r12 ; ret
0x00000000000c4572 : loopne 0xc45d4 ; pop rbp ; pop r12 ; ret
0x00000000000c871e : loopne 0xc8729 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ccfad : loopne 0xccfb3 ; ret
0x00000000000ccfd9 : loopne 0xccfe2 ; add eax, 8 ; ret
0x00000000000cd099 : loopne 0xcd09f ; pop rbx ; ret
0x00000000000cef83 : loopne 0xcef97 ; ret
0x00000000000d339d : loopne 0xd340e ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000d3a83 : loopne 0xd3aea ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000da095 : loopne 0xda0a8 ; ret
0x00000000000dda27 : loopne 0xdda8d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e1c5c : loopne 0xe1cbe ; pop rbp ; pop r12 ; ret
0x00000000000e8aac : loopne 0xe8b0e ; pop rbp ; pop r12 ; ret
0x00000000000eb87a : loopne 0xeb88a ; add byte ptr [rsi + 0xf], ah ; push rsp ; retf
0x00000000000eb960 : loopne 0xeb966 ; jmp 0xeb92a
0x00000000000ee0ce : loopne 0xee134 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eff7d : loopne 0xeffa4 ; or rax, rsi ; ret
0x00000000000f31ae : loopne 0xf31b4 ; ret
0x00000000000f31ca : loopne 0xf31d9 ; movzx eax, ax ; ret
0x00000000000f323e : loopne 0xf3244 ; ret
0x00000000000f32de : loopne 0xf32e4 ; ret
0x00000000000f32fa : loopne 0xf32ff ; ret
0x00000000000f336e : loopne 0xf3374 ; ret
0x00000000000f338a : loopne 0xf3393 ; movzx eax, ax ; ret
0x00000000000f33fe : loopne 0xf3404 ; ret
0x00000000000f348e : loopne 0xf3494 ; ret
0x00000000000f352e : loopne 0xf3534 ; ret
0x00000000000f35ce : loopne 0xf35d4 ; ret
0x00000000000f366e : loopne 0xf3674 ; ret
0x00000000000f368a : loopne 0xf3695 ; movzx eax, ax ; ret
0x00000000000f36fe : loopne 0xf3704 ; ret
0x00000000000f3799 : loopne 0xf379f ; ret
0x00000000000f382e : loopne 0xf3834 ; ret
0x00000000000f3a0a : loopne 0xf3a10 ; ret
0x00000000000f3b50 : loopne 0xf3b56 ; ret
0x00000000000f3b63 : loopne 0xf3b72 ; movzx eax, ax ; ret
0x00000000000f3bd0 : loopne 0xf3bd6 ; ret
0x00000000000f3c50 : loopne 0xf3c56 ; ret
0x00000000000f3c63 : loopne 0xf3c68 ; ret
0x00000000000f3cd0 : loopne 0xf3cd6 ; ret
0x00000000000f3ce3 : loopne 0xf3cec ; movzx eax, ax ; ret
0x00000000000f3d50 : loopne 0xf3d56 ; ret
0x00000000000f3dd0 : loopne 0xf3dd6 ; ret
0x00000000000f3e50 : loopne 0xf3e56 ; ret
0x00000000000f3ed0 : loopne 0xf3ed6 ; ret
0x00000000000f3f50 : loopne 0xf3f56 ; ret
0x00000000000f3f63 : loopne 0xf3f6e ; movzx eax, ax ; ret
0x00000000000f3fd0 : loopne 0xf3fd6 ; ret
0x00000000000f404d : loopne 0xf4053 ; ret
0x00000000000f40d0 : loopne 0xf40d6 ; ret
0x00000000000f427a : loopne 0xf4280 ; ret
0x00000000000fa19f : loopne 0xfa199 ; ret 0x7508
0x00000000000fa4fc : loopne 0xfa501 ; dec dword ptr [rcx] ; ret
0x00000000000fa55c : loopne 0xfa561 ; dec dword ptr [rcx] ; ret
0x00000000000fc60b : loopne 0xfc610 ; ret
0x00000000000fcd38 : loopne 0xfcd4d ; cmp eax, 4 ; je 0xfcd47 ; ret
0x00000000000fcf09 : loopne 0xfcf1c ; pop rbp ; pop r12 ; ret
0x00000000000fd615 : loopne 0xfd667 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x000000000018116c : mov ah, 0 ; add byte ptr [rax], al ; adc dh, bh ; jmp 0x19dc7e
0x00000000001190f7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000f0ab1 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x000000000016794a : mov ah, 0x13 ; ret
0x0000000000182f6c : mov ah, 0x1e ; add byte ptr [rax], al ; push rax ; ret
0x00000000000a90c4 : mov ah, 0x24 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019826c : mov ah, 0x71 ; add dword ptr [rax], eax ; nop ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000017a8bc : mov ah, 0x90 ; sti ; inc dword ptr [rax + rdx*4 - 5] ; call rsp
0x0000000000167df0 : mov ah, 0xa5 ; ret
0x000000000019b86c : mov ah, 0xa7 ; add dword ptr [rax], eax ; rcl byte ptr [rdx - 0xa], 1 ; call qword ptr [rdx]
0x000000000017adb4 : mov ah, 0xb7 ; sti ; inc dword ptr [rdi + rsi*4 - 5] ; call rsp
0x000000000019e66c : mov ah, 0xd5 ; add dword ptr [rax], eax ; jo 0x19e622 ; clc ; call qword ptr [rax]
0x000000000018ee6c : mov ah, 0xdd ; add byte ptr [rax], al ; loopne 0x18ee94 ; int1 ; call qword ptr [rdx]
0x000000000016c5c8 : mov ah, 0xe5 ; int1 ; call rsp
0x000000000010847c : mov ah, 0xe9 ; ret 0xfffd
0x000000000017b43d : mov ah, 0xea ; lcall ptr [rax + 0x6a] ; ret 0xffea
0x000000000016694d : mov ah, 0xec ; call qword ptr [rax]
0x000000000017c89d : mov ah, 0xef ; jmp qword ptr [rax]
0x000000000017d0a5 : mov ah, 0xf0 ; jmp qword ptr [rax]
0x000000000016da3d : mov ah, 0xf4 ; call qword ptr [rcx]
0x00000000000026ff : mov ah, 0xf4 ; out -0x21, eax ; syscall
0x000000000017ac55 : mov ah, 0xfb ; call qword ptr [rax]
0x000000000017ae51 : mov ah, 0xfb ; jmp qword ptr [rax]
0x000000000017ad15 : mov ah, 0xfb ; jmp rdx
0x0000000000187374 : mov ah, 4 ; add byte ptr [rax], al ; call 0xffffffffe41861c8
0x0000000000167744 : mov ah, bl ; push rsi ; ret
0x000000000017becd : mov ah, ch ; jmp qword ptr [rax]
0x000000000017ee50 : mov ah, dl ; add dword ptr [rax], eax ; shl byte ptr [rbp - 9], 1 ; call rax
0x00000000000f0841 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x000000000017da04 : mov al, 0x10 ; hlt ; call qword ptr [rax]
0x000000000008513c : mov al, 0x14 ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000180364 : mov al, 0x1f ; cli ; jmp qword ptr [rax]
0x0000000000002930 : mov al, 0x1f ; retf
0x000000000017fb20 : mov al, 0x23 ; add al, byte ptr [rax] ; or byte ptr [rsi], 0xf9 ; call rax
0x000000000011564c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x0000000000115604 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000017d314 : mov al, 0x26 ; call qword ptr [rax]
0x00000000000f4604 : mov al, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000017d270 : mov al, 0x2b ; add dword ptr [rax], eax ; jo 0x17d205 ; int1 ; jmp rax
0x000000000017d3ac : mov al, 0x2d ; call qword ptr [rax]
0x00000000000c0dec : mov al, 0x2e ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000016c704 : mov al, 0x39 ; inc eax ; cmp esi, edx ; call rax
0x00000000000c71e2 : mov al, 0x39 ; retf
0x000000000017dacc : mov al, 0x3d ; hlt ; jmp rax
0x000000000017f5a4 : mov al, 0x42 ; clc ; jmp qword ptr [rax]
0x0000000000197010 : mov al, 0x43 ; cmc ; jmp qword ptr [rcx]
0x000000000017c4ac : mov al, 0x47 ; out dx, eax ; call qword ptr [rax]
0x000000000011c069 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000c112e : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000b82c9 : mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000121448 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000010dbbd : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x000000000017db5c : mov al, 0x4b ; hlt ; call qword ptr [rax]
0x000000000002b2ab : mov al, 0x4c ; add esi, eax ; jmp rsi
0x000000000017d798 : mov al, 0x4d ; add dword ptr [rax], eax ; sbb cl, byte ptr [rbx - 0xd] ; call qword ptr [rax]
0x0000000000194110 : mov al, 0x50 ; hlt ; call rdx
0x000000000018076c : mov al, 0x5d ; cli ; call qword ptr [rax]
0x000000000017c5ac : mov al, 0x5d ; out dx, eax ; call qword ptr [rax]
0x0000000000180328 : mov al, 0x5e ; add al, byte ptr [rax] ; sbb byte ptr [rdx], 0xfa ; call rax
0x0000000000182620 : mov al, 0x6a ; std ; call qword ptr [rcx]
0x0000000000001da8 : mov al, 0x72 ; retf
0x000000000000387d : mov al, 0x85 ; jbe 0x382c ; outsb dx, byte ptr [rsi] ; retf
0x0000000000198090 : mov al, 0x87 ; cmc ; jmp qword ptr [rcx]
0x0000000000170840 : mov al, 0x89 ; cli ; inc eax ; mov edx, edi ; call rax
0x000000000017a748 : mov al, 0x8f ; sti ; inc dword ptr [rax - 0x71] ; sti ; call rax
0x000000000017dcdc : mov al, 0x93 ; hlt ; call qword ptr [rax]
0x000000000017e3a0 : mov al, 0x9f ; add dword ptr [rax], eax ; js 0x17e3a4 ; call rax
0x000000000017bdc8 : mov al, 0xa0 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0x14], bl ; jmp qword ptr [rax]
0x00000000001909a0 : mov al, 0xa0 ; jmp rsp
0x000000000017b050 : mov al, 0xaa ; sti ; jmp qword ptr [rax]
0x000000000017b068 : mov al, 0xaf ; sti ; jmp qword ptr [rax]
0x000000000017ae58 : mov al, 0xb3 ; sti ; inc dword ptr [rax - 0x4d] ; sti ; jmp rax
0x000000000017ac40 : mov al, 0xb6 ; sti ; inc dword ptr [rax - 0x4a] ; sti ; call rax
0x000000000017c240 : mov al, 0xbd ; add byte ptr [rax], al ; adc ch, ch ; out dx, al ; call qword ptr [rax]
0x000000000014d4cf : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000016c868 : mov al, 0xcd ; call rax
0x000000000016c888 : mov al, 0xce ; call rax
0x000000000016c8a8 : mov al, 0xcf ; call rax
0x000000000016c8f0 : mov al, 0xd1 ; inc eax ; sal edx, 1 ; call rax
0x000000000016c92c : mov al, 0xd2 ; inc eax ; sal dl, cl ; call rax
0x000000000016c950 : mov al, 0xd3 ; call rax
0x000000000017c174 : mov al, 0xd4 ; out dx, al ; jmp rax
0x000000000017c5a0 : mov al, 0xd6 ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x11], bl ; call rax
0x00000000000dfdfc : mov al, 0xd8 ; hlt ; dec dword ptr [rbx + rcx*4 + 0x14] ; and al, 0xe9 ; ret
0x00000000001952f0 : mov al, 0xd9 ; hlt ; jmp qword ptr [rcx]
0x000000000017e004 : mov al, 0xdb ; cmc ; jmp qword ptr [rax]
0x0000000000180bf4 : mov al, 0xdd ; cli ; call qword ptr [rax]
0x000000000016ca6c : mov al, 0xe3 ; call rax
0x000000000016c6b0 : mov al, 0xe3 ; sti ; jmp qword ptr [rax]
0x000000000016cab0 : mov al, 0xe6 ; jmp rax
0x0000000000195650 : mov al, 0xe7 ; hlt ; jmp qword ptr [rcx]
0x000000000016cb08 : mov al, 0xe8 ; call rax
0x000000000016cb28 : mov al, 0xe9 ; call rax
0x0000000000089375 : mov al, 0xe9 ; stosd dword ptr [rdi], eax ; idiv edi ; inc dword ptr [rbp - 0x77] ; retf
0x0000000000169bf6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000017f298 : mov al, 0xef ; add dword ptr [rax], eax ; loopne 0x17f2b7 ; clc ; jmp rax
0x000000000017c86d : mov al, 0xef ; call qword ptr [rax]
0x000000000018dfc1 : mov al, 0xf0 ; call rsp
0x0000000000180bb0 : mov al, 0xf2 ; add dword ptr [rax], eax ; add ch, bl ; cli ; call rax
0x00000000000e8a23 : mov al, 0xf3 ; ret
0x000000000017cae4 : mov al, 0xf6 ; out dx, eax ; jmp qword ptr [rax]
0x000000000016c614 : mov al, 0xfa ; int1 ; push rax ; sti ; int1 ; call rax
0x000000000017ae69 : mov al, 0xfb ; call qword ptr [rax + 0x10fffbaf]
0x000000000017afa5 : mov al, 0xfb ; call rsp
0x000000000017ae65 : mov al, 0xfb ; jmp qword ptr [rax]
0x000000000017a081 : mov al, 0xfc ; jmp rax
0x000000000017a07d : mov al, 0xfc ; push rax ; mov al, 0xfc ; jmp rax
0x000000000017e6b1 : mov al, 1 ; add al, dh ; retf -0xa
0x000000000017e6a1 : mov al, 1 ; add byte ptr [rax], dl ; retf -0xa
0x00000000000999dc : mov al, 4 ; add byte ptr [rax], al ; ret
0x000000000017f768 : mov al, 8 ; add al, byte ptr [rax] ; adc byte ptr [rdi - 8], ah ; call qword ptr [rax]
0x00000000000995dc : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000189ae5 : mov al, byte ptr [rax] ; add al, ch ; ret
0x0000000000189acd : mov al, byte ptr [rax] ; add al, dh ; ret
0x0000000000000760 : mov al, byte ptr [rax] ; add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x000000000000f228 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e2021 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000009594b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000095979 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000959fd : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000084f1f : mov al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x0000000000140670 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000095925 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000180a91 : mov al, byte ptr [rdx] ; add al, ah ; retf -6
0x0000000000180a99 : mov al, byte ptr [rdx] ; add byte ptr [rax], ah ; retf
0x0000000000180aa1 : mov al, byte ptr [rdx] ; add byte ptr [rax], dh ; retf
0x0000000000180a79 : mov al, byte ptr [rdx] ; add byte ptr [rax], dh ; retf -6
0x0000000000002e6b : mov al, byte ptr [rsi - 0x73] ; ret 0xc1bb
0x0000000000084f1e : mov al, byte ptr cs:[rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x48c3
0x00000000000c6a80 : mov al, ch ; retf 0x35b
0x000000000017cee5 : mov al, dh ; jmp qword ptr [rax]
0x0000000000095935 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000018c7dd : mov bh, 0 ; add byte ptr [rax + 0x73], ah ; out dx, eax ; call qword ptr [rax]
0x000000000018c825 : mov bh, 0 ; add byte ptr [rax + 0x73], bh ; out dx, eax ; call qword ptr [rdx]
0x000000000011021d : mov bh, 0 ; add byte ptr [rax], al ; call 0x2cce6
0x0000000000133a51 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000169c80 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x00000000000297f6 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x2276
0x0000000000031ddd : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000001529c8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x0000000000169f58 : mov bh, 0x4e ; retf -0x6283
0x00000000000b07f8 : mov bh, 0x5f ; adc byte ptr [rcx], ch ; ret 0x428d
0x000000000002cb07 : mov bh, 0x8b ; add al, 0x10 ; ret
0x000000000010693d : mov bh, 0xac ; and al, 0x22 ; add al, byte ptr [rax] ; add al, ch ; xlatb ; ret 0xfffd
0x0000000000002c48 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x0000000000168c24 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002cdb6 : mov bh, 0xc0 ; ret
0x0000000000100e7c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000001668c6 : mov bh, 0xc8 ; leave ; retf -0x3335
0x000000000017d0dd : mov bh, 0xf0 ; call rax
0x000000000016d979 : mov bh, 0xf4 ; jmp rax
0x000000000016d9b5 : mov bh, 0xf4 ; jmp rbx
0x0000000000084d8f : mov bh, 0xf9 ; dec dword ptr [rax + 1] ; ret
0x000000000017ac7d : mov bh, 0xfb ; call qword ptr [rsi + 0x26fffbb6]
0x000000000017adb9 : mov bh, 0xfb ; call rsp
0x000000000017adb5 : mov bh, 0xfb ; inc dword ptr [rdi + rsi*4 - 5] ; call rsp
0x000000000017ac39 : mov bh, 0xfb ; jmp qword ptr [rax]
0x00000000000f1933 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000e154a : mov bh, 4 ; and al, 0x89 ; ret 0xe283
0x000000000002cdaf : mov bh, 4 ; js 0x2cd3f ; loopne 0x2cdc6 ; movzx eax, ax ; ret
0x000000000002cdef : mov bh, 4 ; js 0x2cd7f ; loopne 0x2ce00 ; movzx eax, ax ; ret
0x000000000002ce8f : mov bh, 4 ; js 0x2ce1f ; loopne 0x2cea2 ; movzx eax, ax ; ret
0x000000000002cf6f : mov bh, 4 ; js 0x2cefc ; loopne 0x2cf7c ; ret
0x000000000002cfe8 : mov bh, 4 ; js 0x2cf75 ; loopne 0x2cff5 ; ret
0x000000000002cff8 : mov bh, 4 ; js 0x2cf88 ; loopne 0x2d00f ; movzx eax, ax ; ret
0x000000000002d038 : mov bh, 4 ; js 0x2cfc8 ; loopne 0x2d049 ; movzx eax, ax ; ret
0x000000000002d0d8 : mov bh, 4 ; js 0x2d068 ; loopne 0x2d0eb ; movzx eax, ax ; ret
0x00000000000f31c6 : mov bh, 4 ; js 0xf3156 ; loopne 0xf31dd ; movzx eax, ax ; ret
0x00000000000f32f6 : mov bh, 4 ; js 0xf3283 ; loopne 0xf3303 ; ret
0x00000000000f3386 : mov bh, 4 ; js 0xf3316 ; loopne 0xf3397 ; movzx eax, ax ; ret
0x00000000000f3686 : mov bh, 4 ; js 0xf3616 ; loopne 0xf3699 ; movzx eax, ax ; ret
0x00000000000f3b5f : mov bh, 4 ; js 0xf3aef ; loopne 0xf3b76 ; movzx eax, ax ; ret
0x00000000000f3c5f : mov bh, 4 ; js 0xf3bec ; loopne 0xf3c6c ; ret
0x00000000000f3cdf : mov bh, 4 ; js 0xf3c6f ; loopne 0xf3cf0 ; movzx eax, ax ; ret
0x00000000000f3f5f : mov bh, 4 ; js 0xf3eef ; loopne 0xf3f72 ; movzx eax, ax ; ret
0x00000000001a52f8 : mov bh, 6 ; add byte ptr [rax], al ; retf 2
0x000000000016a333 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000e10b1 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000074eb1 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000017a9e5 : mov bh, bl ; call rdx
0x000000000017ab25 : mov bh, bl ; jmp qword ptr [rax + 0x10fffb89]
0x000000000017efed : mov bh, dh ; jmp qword ptr [rax]
0x0000000000170859 : mov bh, dl ; call rax
0x0000000000170855 : mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; call rax
0x000000000018c405 : mov bl, 0 ; add byte ptr [rax + 0x70], ch ; out dx, eax ; jmp qword ptr [rcx]
0x000000000018c3ed : mov bl, 0 ; add byte ptr [rax + 0x70], dl ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000f0b74 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x00000000001542be : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000169fbb : mov bl, 0x29 ; retf -0x40b5
0x00000000000af30c : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000001b13 : mov bl, 0x5a ; ret 0x2a63
0x0000000000169d03 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000169fa0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000166959 : mov bl, 0xec ; call qword ptr [rax]
0x000000000017c895 : mov bl, 0xef ; call rax
0x000000000008569d : mov bl, 0xf ; test dword ptr [rax + rax - 0x76b80000], esi ; ret 0xf748
0x000000000017e51d : mov bl, 0xf6 ; call rax
0x0000000000003bad : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000085263 : mov bl, 0xf9 ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001809a5 : mov bl, 0xfa ; jmp rax
0x000000000017ace1 : mov bl, 0xfb ; call qword ptr [rdx + 0x22fffbb9]
0x000000000017ae59 : mov bl, 0xfb ; inc dword ptr [rax - 0x4d] ; sti ; jmp rax
0x000000000018e111 : mov bl, 0xfb ; jmp qword ptr [rdi]
0x000000000017acdd : mov bl, 0xfb ; jmp qword ptr [rdx]
0x000000000017ae5d : mov bl, 0xfb ; jmp rax
0x00000000001a7288 : mov bl, 3 ; add byte ptr [rax], al ; ret 1
0x000000000017ab35 : mov bl, bh ; call qword ptr [rax + 0x10fffb87]
0x000000000017ab31 : mov bl, bh ; call qword ptr [rax]
0x000000000018ff48 : mov bl, bh ; int1 ; call qword ptr [rcx]
0x0000000000132a62 : mov bl, byte ptr [rax + 0x39480027] ; retf 0x377
0x000000000004ee33 : mov bl, byte ptr [rax - 0x76fffff1] ; ret 0xe680
0x000000000017ac8c : mov bpl, 0xfb ; call rsi
0x0000000000198120 : mov bpl, sil ; jmp qword ptr [rcx]
0x0000000000167921 : mov bx, 0xf32d ; retf
0x000000000010dbc1 : mov byte ptr [r11], 0 ; ret
0x000000000004151f : mov byte ptr [r8 + rdx], 0 ; ret
0x000000000007553c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e9afe : mov byte ptr [r8 - 1], 0 ; ret
0x000000000010fbae : mov byte ptr [rax + 0x18], 0 ; add rsp, 8 ; ret
0x0000000000057e58 : mov byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000012243c : mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000017c218 : mov byte ptr [rax + rax - 0x111c7000], bh ; call rax
0x000000000016578c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x0000000000041520 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007b3b4 : mov byte ptr [rax + rsi], dl ; ret
0x000000000007b3b3 : mov byte ptr [rax + rsi], r10b ; ret
0x0000000000022903 : mov byte ptr [rax - 0x39], cl ; ret
0x000000000007553d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000084e22 : mov byte ptr [rax - 0x77000000], ch ; retf -0x1d7f
0x00000000000736fe : mov byte ptr [rax - 0x77000000], cl ; retf -0x76b3
0x00000000000e9aff : mov byte ptr [rax - 1], 0 ; ret
0x00000000001a3e88 : mov byte ptr [rax - 8], al ; jmp qword ptr [rsi]
0x000000000018d6fd : mov byte ptr [rax], 0 ; adc cl, dl ; out dx, eax ; jmp qword ptr [rax]
0x0000000000032ac6 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000f8bae : mov byte ptr [rax], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000021416 : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000021444 : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000f8b8f : mov byte ptr [rax], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ecf3e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000159cac : mov byte ptr [rax], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001144e4 : mov byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000347d4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000011e6f7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ed858 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000025de5 : mov byte ptr [rax], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000738e6 : mov byte ptr [rax], bh ; mov eax, edx ; ret
0x000000000005a320 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005a321 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098572 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000738e5 : mov byte ptr [rax], dil ; mov eax, edx ; ret
0x0000000000084ff4 : mov byte ptr [rbp + 0xf48000c], cl ; ret 0xf6c3
0x00000000000a7a7c : mov byte ptr [rbx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e8816 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000010dbc2 : mov byte ptr [rbx], 0 ; ret
0x00000000000261ef : mov byte ptr [rbx], cl ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000003006 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000c8797 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0xf631
0x000000000013e333 : mov byte ptr [rcx + 2], dl ; ret
0x000000000013e352 : mov byte ptr [rcx + 4], dl ; ret
0x000000000013e393 : mov byte ptr [rcx + 8], dl ; ret
0x00000000000f7e81 : mov byte ptr [rcx + rcx*4 - 0x3e], 0xf7 ; shr byte ptr [rcx], 1 ; retf -0x113f
0x00000000001808e0 : mov byte ptr [rcx - 0x5ccffffe], al ; cli ; jmp rax
0x00000000000ec1bd : mov byte ptr [rcx - 0x75], 0x45 ; add byte ptr [rcx], bh ; ret
0x0000000000030c8c : mov byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000019b058 : mov byte ptr [rcx - 0xa], al ; call qword ptr [rax]
0x000000000008a69b : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000008a5e0 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000008a71a : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000010b172 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000c99c3 : mov byte ptr [rcx], 0x39 ; ret 0xe37c
0x000000000002c3e4 : mov byte ptr [rcx], 0x83 ; ret
0x00000000000741bd : mov byte ptr [rcx], 0xe8 ; ret
0x0000000000196648 : mov byte ptr [rcx], ah ; cmc ; jmp qword ptr [rcx]
0x000000000017df99 : mov byte ptr [rcx], al ; add al, ah ; ret
0x000000000008505d : mov byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000017df89 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001a4387 : mov byte ptr [rcx], al ; retf 2
0x000000000013e310 : mov byte ptr [rcx], dl ; ret
0x000000000009cf7a : mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009b35b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000099b6b : mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009cf8b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009a508 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000098e98 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009cf90 : mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009cfb2 : mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009cfd0 : mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009cff0 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009a57e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000098eee : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009b3e1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000099bc1 : mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009d011 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009d016 : mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009d032 : mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009d052 : mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009d072 : mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009b463 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000099c43 : mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009d093 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009a600 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000098f70 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009d098 : mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009d0ba : mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009d0d8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009d0f8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009d114 : mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009d134 : mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009d154 : mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009d174 : mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000099d45 : mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009d195 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009d19a : mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009d1ea : mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009cec0 : mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009cede : mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009cefe : mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009cf20 : mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009cf40 : mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009cf60 : mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009cdf6 : mov byte ptr [rdi + 1], ch ; ret
0x000000000010b9f2 : mov byte ptr [rdi + 1], dh ; ret
0x000000000010b9f1 : mov byte ptr [rdi + 1], sil ; ret
0x000000000010bbc0 : mov byte ptr [rdi + 2], 0 ; jne 0x10bc18 ; mov eax, r8d ; ret
0x000000000008ab7d : mov byte ptr [rdi + 2], al ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aa9d : mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x000000000009ce08 : mov byte ptr [rdi + 2], ch ; ret
0x000000000009a3b6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000098db6 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000180208 : mov byte ptr [rdi + 2], dl ; add byte ptr [rax], al ; cmc ; stc ; call rax
0x000000000009b1e9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000008a9d0 : mov byte ptr [rdi + 2], dl ; ret
0x000000000009ce19 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ce1e : mov byte ptr [rdi + 3], ch ; ret
0x000000000008abab : mov byte ptr [rdi + 4], al ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aabb : mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x000000000009ce36 : mov byte ptr [rdi + 4], ch ; ret
0x000000000009a3d2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000098dd2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009b217 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000008a9ee : mov byte ptr [rdi + 4], dl ; ret
0x000000000009ce47 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ce4c : mov byte ptr [rdi + 5], ch ; ret
0x000000000008abcc : mov byte ptr [rdi + 6], al ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aadc : mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x000000000009ce5e : mov byte ptr [rdi + 6], ch ; ret
0x000000000008aa0f : mov byte ptr [rdi + 6], dl ; ret
0x000000000009ce7c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000c8480 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000c8441 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000c84b0 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000c84d7 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000c8520 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000c850d : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000c8470 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000c8450 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009ce88 : mov byte ptr [rdi + 8], ch ; ret
0x0000000000098e13 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000009b269 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000099ae9 : mov byte ptr [rdi + 8], dl ; ret
0x000000000009ce99 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009ce9e : mov byte ptr [rdi + 9], ch ; ret
0x000000000010bbd6 : mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000169fb5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf -0x40b5
0x0000000000193f08 : mov byte ptr [rdi - 0xc], cl ; call qword ptr [rbx]
0x0000000000193f48 : mov byte ptr [rdi - 0xc], cl ; call qword ptr [rsi]
0x0000000000193f88 : mov byte ptr [rdi - 0xc], cl ; jmp qword ptr [rcx]
0x000000000011740e : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x117409 ; ret
0x000000000012d66b : mov byte ptr [rdi - 1], dl ; ret
0x000000000008ab50 : mov byte ptr [rdi], 0 ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aa78 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000021419 : mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; ret
0x0000000000021447 : mov byte ptr [rdi], 0 ; ret
0x00000000000c84a0 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x0000000000186088 : mov byte ptr [rdi], ah ; in al, dx ; jmp qword ptr [rdx]
0x00000000000c84f9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000009cde2 : mov byte ptr [rdi], ch ; ret
0x000000000009da6b : mov byte ptr [rdi], cl ; ret
0x000000000014e355 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000008a9a9 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x000000000009a390 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000098d90 : mov byte ptr [rdi], dh ; ret
0x000000000009b1c2 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000099a62 : mov byte ptr [rdi], dl ; ret
0x000000000009cdf2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000008a9a8 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000986fa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000140699 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000009594e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000001406c7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000009597c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000098690 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000095a00 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000190728 : mov byte ptr [rdx + rsi*8], ch ; call qword ptr [rdx]
0x0000000000105508 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000edf91 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000180a01 : mov byte ptr [rdx], al ; add al, ah ; ret
0x0000000000180a19 : mov byte ptr [rdx], al ; add byte ptr [rax - 0x3c], al ; cli ; call rax
0x0000000000140672 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000095927 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000006f5aa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x0000000000075eea : mov byte ptr [rdx], bh ; ret
0x000000000006f5a9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000075ee9 : mov byte ptr [rdx], dil ; ret
0x0000000000107b88 : mov byte ptr [rip + 0x2a8c19], 1 ; pop rbx ; ret
0x000000000002bfa8 : mov byte ptr [rip + 0x381bef], dl ; ret
0x00000000000024b4 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000010beeb : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x000000000010beea : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x0000000000085e54 : mov byte ptr [rsi + rdx + 1], al ; jg 0x85e47 ; ret
0x00000000000c7c2d : mov byte ptr [rsi - 0x73], 0xc ; retf -0x108b
0x0000000000048993 : mov byte ptr [rsi], al ; jne 0x48977 ; mov rax, rsi ; ret
0x000000000004890f : mov byte ptr [rsi], dl ; jne 0x488ff ; mov rax, rsi ; ret
0x000000000007d901 : mov byte ptr [rsp + 0x30], bl ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x00000000000ce393 : mov byte ptr [rsp + 0x38], 0xa ; call 0xca687
0x00000000000e716b : mov byte ptr [rsp - 0x15], al ; mov eax, 0x10 ; syscall
0x0000000000159cab : mov byte ptr fs:[rax], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000062d36 : mov ch, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000732af : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006c4f7 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000124fe4 : mov ch, 0 ; add byte ptr [rax], al ; syscall
0x00000000000026e6 : mov ch, 0x24 ; retf 0x54da
0x0000000000167742 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000075e54 : mov ch, 0x33 ; add byte ptr [rax], al ; je 0x75e66 ; ret
0x0000000000168a83 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000169716 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000000c9d15 : mov ch, 0x44 ; mov dword ptr [rdi + 0x2c], ecx ; mov dword ptr [rdi + 0x30], r9d ; ret
0x000000000016d2a4 : mov ch, 0x68 ; hlt ; call qword ptr [rsi]
0x000000000016b7d8 : mov ch, 0x6f ; out dx, eax ; jmp rdi
0x0000000000084f67 : mov ch, 0x92 ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000169e1f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000016b608 : mov ch, 0xa ; out dx, eax ; call rdi
0x000000000016a7ca : mov ch, 0xab ; ret
0x0000000000080697 : mov ch, 0xbb ; xor al, byte ptr [rax] ; jne 0x806a7 ; ret
0x00000000000d60ab : mov ch, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000000a09d7 : mov ch, 0xe8 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000017baed : mov ch, 0xeb ; jmp rax
0x0000000000166955 : mov ch, 0xec ; call qword ptr [rax]
0x000000000017d0bd : mov ch, 0xf0 ; call rax
0x00000000001991c1 : mov ch, 0xf5 ; call rdi
0x000000000017ae4d : mov ch, 0xfb ; call qword ptr [rax + 0x20fffbb4]
0x000000000018e129 : mov ch, 0xfb ; call qword ptr [rdi]
0x000000000017ac8d : mov ch, 0xfb ; call rsi
0x000000000017ac89 : mov ch, 0xfb ; inc dword ptr [rsi - 0x4b] ; sti ; call rsi
0x0000000000187704 : mov ch, 1 ; add byte ptr [rax], al ; add al, 0xae ; retf
0x0000000000001b70 : mov ch, 4 ; retf
0x0000000000150246 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001980f1 : mov ch, dh ; jmp qword ptr [rcx]
0x000000000017c079 : mov cl, 0 ; add byte ptr [rax + 0x62], al ; in eax, dx ; jmp qword ptr [rax]
0x000000000000db60 : mov cl, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000f0901 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x00000000000f25de : mov cl, 0x15 ; pop rsp ; popfq ; sub eax, dword ptr [rax] ; je 0xf25f1 ; pop rbp ; ret
0x0000000000003c6c : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000bcbdf : mov cl, 0x35 ; retf
0x000000000016a221 : mov cl, 0x3f ; retf
0x0000000000002c49 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x000000000007dcd1 : mov cl, 0x7d ; or byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000000ba87e : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000127790 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000017a085 : mov cl, 0xfc ; call rax
0x00000000000618bd : mov cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000002bd0a : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000114f11 : mov cl, byte ptr [rax + 1] ; retf -0x1d01
0x00000000000852ae : mov cl, byte ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000000383d : mov cl, byte ptr [rbp + 2] ; ret
0x0000000000090d75 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000043503 : mov cl, byte ptr [rcx + rax - 0x2f] ; jmp rcx
0x00000000000b6282 : mov cl, byte ptr [rcx + rax - 0x36] ; jmp rdx
0x000000000008afa4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000169bf2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000014a054 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000151900 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000017d275 : mov cl, dh ; jmp rax
0x00000000000af50b : mov cl, dl ; and cl, 0xf ; je 0xaf537 ; ret
0x00000000000f2746 : mov cs, ebp ; sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000442b9 : mov cs, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000169eac : mov cs, edi ; ret 0x8b36
0x00000000000d62e9 : mov cs, word ptr [rax + 1] ; int1 ; jmp rcx
0x0000000000084eb7 : mov cs, word ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000007cf88 : mov cs, word ptr [rdi] ; add byte ptr [rax + 2], bh ; syscall
0x000000000014ab0e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000098db0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000125034 : mov dh, 0 ; add byte ptr [rax], al ; syscall
0x00000000000777bd : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000784fe : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075f13 : mov dh, 0 ; ret
0x0000000000073e80 : mov dh, 0x10 ; mov eax, edx ; ret
0x0000000000073fe5 : mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000008a0a0 : mov dh, 0x14 ; adc byte ptr [rax + rcx*4 + 0x14], al ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000088e7d : mov dh, 0x14 ; adc eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x0000000000089ada : mov dh, 0x14 ; add eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x00000000000c715b : mov dh, 0x14 ; and al, 0x39 ; ret 0x840f
0x0000000000089946 : mov dh, 0x14 ; or eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x0000000000133ac1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008e834 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000032360 : mov dh, 0x17 ; test dl, dl ; jne 0x32346 ; ret
0x00000000000c1d6c : mov dh, 0x17 ; test dl, dl ; jne 0xc1d4f ; xor eax, eax ; ret
0x00000000000c71e0 : mov dh, 0x34 ; mov al, 0x39 ; retf
0x0000000000115452 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000010bd34 : mov dh, 0x42 ; add dword ptr [rbp + 0x75020254], ecx ; ret
0x0000000000027ff9 : mov dh, 0x42 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d3b2f : mov dh, 0x42 ; or byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000041c23 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cf168 : mov dh, 0x45 ; add byte ptr [rcx + 1], cl ; retf
0x0000000000053574 : mov dh, 0x46 ; or eax, 0x8118e383 ; ret
0x0000000000153e91 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000153e81 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000153e51 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000153e71 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000153e61 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000258ed : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000127b87 : mov dh, 0x4b ; add al, 0x89 ; retf -0x1540
0x0000000000168be2 : mov dh, 0x4e ; ret 0x474c
0x000000000010bcdd : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000c45fe : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c45f1 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006aa89 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008aa0b : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008a9ea : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x000000000008a9cc : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x000000000010b205 : mov dh, 0x55 ; add dh, dh ; ret
0x0000000000153e95 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000153e85 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000153e55 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000054e12 : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000153e65 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000010e72c : mov dh, 0x6b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d62d1 : mov dh, 0x7a ; xor byte ptr [rax + 0x63], cl ; cmp byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x000000000017a790 : mov dh, 0x8e ; sti ; inc dword ptr [rsi - 0x72] ; sti ; call rsi
0x00000000000850f6 : mov dh, 0xb ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000017ac88 : mov dh, 0xb5 ; sti ; inc dword ptr [rsi - 0x4b] ; sti ; call rsi
0x00000000000832b5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000008949d : mov dh, 0xc ; add eax, dword ptr [rbp + 0x38] ; retf -0x78f1
0x00000000000881c3 : mov dh, 0xc ; sbb dword ptr [rcx + 0x38], eax ; retf -0x2e8c
0x0000000000115ba8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012065c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011572d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126138 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x00000000000d918f : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000ae826 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c1007 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000033f2d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006a070 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000005a9b1 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e3fd5 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006916d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006913a : mov dh, 0xc0 ; neg eax ; ret
0x000000000011a6f5 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00000000001167ab : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000ba58c : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000034c5c : mov dh, 0xc0 ; ret
0x000000000009df18 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000009df40 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007872c : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100e6e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000075ee3 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x000000000006f5ae : mov dh, 0xc7 ; ret
0x0000000000169e24 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000b36d5 : mov dh, 0xc9 ; movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x00000000000b627d : mov dh, 0xcf ; movsxd r9, dword ptr [rdx + r9*4] ; add rdx, r9 ; jmp rdx
0x00000000000d62e4 : mov dh, 0xcf ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x00000000000b620b : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000005a76e : mov dh, 0xd2 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000008e85a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000005ad3b : mov dh, 0xdb ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000009da69 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x000000000008c351 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014a064 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000166a0d : mov dh, 0xec ; call qword ptr [rdi]
0x0000000000166b61 : mov dh, 0xec ; jmp qword ptr [rip + 0x17ffecb6]
0x00000000000d3393 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x000000000007b306 : mov dh, 0xf ; xor eax, dword ptr [rax] ; ret
0x000000000017d0c5 : mov dh, 0xf0 ; jmp qword ptr [rax]
0x000000000018f801 : mov dh, 0xf1 ; jmp qword ptr [rcx]
0x0000000000031dd8 : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x000000000017ad01 : mov dh, 0xfb ; call qword ptr [rdx]
0x000000000017ac45 : mov dh, 0xfb ; call rax
0x000000000017ac41 : mov dh, 0xfb ; inc dword ptr [rax - 0x4a] ; sti ; call rax
0x000000000017ac81 : mov dh, 0xfb ; jmp qword ptr [rsi]
0x000000000017ae41 : mov dh, 0xfb ; jmp rax
0x0000000000078511 : mov dh, 2 ; ret
0x00000000000d3d14 : mov dh, 4 ; and cl, ch ; retf -2
0x00000000000ccf84 : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000014a061 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e831 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008c354 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000017cf15 : mov dh, al ; call rax
0x000000000006bc38 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000009e4dc : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000198349 : mov dh, ch ; call qword ptr [rsi]
0x000000000016e391 : mov dh, ch ; call rax
0x0000000000198301 : mov dh, ch ; jmp qword ptr [rcx]
0x000000000017adb8 : mov dil, 0xfb ; call rsp
0x00000000000f0b44 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003b58 : mov dl, 0x1e ; ret
0x0000000000131081 : mov dl, 0x27 ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x0000000000033c4a : mov dl, 0x2c ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000000000001f6d : mov dl, 0x3a ; jrcxz 0x1f4f ; retf -0x41cb
0x00000000000b8263 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x00000000001114ed : mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016b894 : mov dl, 0x82 ; out dx, eax ; call qword ptr [rbx]
0x000000000017a7f4 : mov dl, 0x91 ; sti ; inc dword ptr [rdx - 0x6f] ; sti ; call rdx
0x000000000012817a : mov dl, 0x98 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000186058 : mov dl, 0xa ; ret
0x0000000000085bea : mov dl, 0xa9 ; stc ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000017acec : mov dl, 0xb8 ; sti ; inc dword ptr [rdx - 0x48] ; sti ; call rdx
0x0000000000001e82 : mov dl, 0xcd ; push r13 ; salc ; retf 0x559a
0x000000000007c228 : mov dl, 0xf3 ; ret
0x000000000019cc01 : mov dl, 0xf6 ; call qword ptr [rdi]
0x000000000005ff64 : mov dl, 0xff ; dec dword ptr [rax - 0x77] ; retf 0x5be9
0x00000000000f38b5 : mov dl, 3 ; add al, 0xa ; ret
0x0000000000195398 : mov dl, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000099a83 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000099aa2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000099ae3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000012d6f0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000009b1c0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000099a60 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000009cdf0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000198611 : mov dr0, ebp ; jmp qword ptr [rcx]
0x0000000000003095 : mov dr0, word ptr [rax] ; retf
0x000000000017a955 : mov dr1, ebx ; call qword ptr [rax + 0x20fffb8d]
0x000000000017a795 : mov dr1, ebx ; call rsi
0x000000000017a791 : mov dr1, ebx ; inc dword ptr [rsi - 0x72] ; sti ; call rsi
0x0000000000082ea0 : mov dr1, esi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; ret
0x000000000016a23e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000000af9af : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000007c043 : mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x0000000000114ebe : mov dword ptr [r14], 0 ; ret
0x00000000000e7254 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000e724f : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x000000000010bd45 : mov dword ptr [r8], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x0000000000037733 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x000000000010bce4 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000fd2e0 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000001518f6 : mov dword ptr [r9 - 2], ecx ; ret
0x00000000001518e1 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000010f8c1 : mov dword ptr [rax + 0x10], edx ; je 0x10f8f3 ; add rsp, 8 ; ret
0x000000000006fde9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006fe29 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000703c9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000753a9 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000ca5ab : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000ca5dd : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000e7255 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000e7250 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x000000000006fded : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000070467 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000000692ab : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x0000000000159d3f : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000079b4b : mov dword ptr [rax + 8], 0 ; ret
0x00000000000b1274 : mov dword ptr [rax + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0ff9 : mov dword ptr [rax + 8], esi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007dd04 : mov dword ptr [rax + rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000041bfb : mov dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ca4da : mov dword ptr [rax - 4], edx ; cmp esi, dword ptr [rdi + 4] ; jl 0xca4d9 ; ret
0x000000000012113d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000010dc62 : mov dword ptr [rax], 0 ; ret
0x00000000000e7e28 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000000ec0e8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000afaa8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000128868 : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x00000000000325a0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x000000000007ecd8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000018d89d : mov dword ptr [rax], 0xefd56000 ; call qword ptr [rbx]
0x000000000018d825 : mov dword ptr [rax], 0xfcc4d800 ; call qword ptr [rax]
0x00000000000e7934 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000bb0e0 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000021888 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x0000000000189ab5 : mov dword ptr [rax], eax ; add al, bh ; ret
0x0000000000180b09 : mov dword ptr [rax], eax ; add byte ptr [rax - 0x2b], dl ; cli ; jmp rax
0x000000000009f1d3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e1ff1 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000d90f4 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x000000000010bd46 : mov dword ptr [rax], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000000eb0b9 : mov dword ptr [rax], ebp ; mov eax, 3 ; syscall
0x0000000000061ea5 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e6ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000dcfa9 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x0000000000080676 : mov dword ptr [rax], edi ; ret
0x00000000000effd1 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000656a5 : mov dword ptr [rax], edx ; jmp 0x6210e
0x000000000009f951 : mov dword ptr [rax], edx ; jne 0x9f94d ; ret
0x000000000010baea : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000037734 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000d914a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x000000000010bce5 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002ca73 : mov dword ptr [rax], edx ; ret
0x0000000000070aa1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000002d98 : mov dword ptr [rax], esp ; mov eax, 0xf3f8ec1c ; ret
0x00000000000d90f3 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000c3d87 : mov dword ptr [rbp - 0x1a8], eax ; call 0x207b0
0x00000000000edb9c : mov dword ptr [rbp - 0x40], esp ; syscall
0x00000000000edb98 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000000641a0 : mov dword ptr [rbp - 0x558], edx ; call 0x70488
0x00000000000665b3 : mov dword ptr [rbp - 0x568], eax ; jmp 0x63065
0x0000000000067870 : mov dword ptr [rbp - 0x5e8], edx ; call 0xf3aa8
0x0000000000060128 : mov dword ptr [rbp - 0x5f8], eax ; jmp 0x5cb75
0x00000000000f2180 : mov dword ptr [rbp - 0x6d0], eax ; mov eax, r10d ; syscall
0x00000000000fb9fd : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000fc293 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r14 ; call rax
0x00000000000fc552 : mov dword ptr [rbp - 0x80], eax ; call r9
0x00000000000fba03 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000fbffa : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000fc3e8 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000fbf9c : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000fbb1b : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000821f7 : mov dword ptr [rbp], eax ; je 0x822d1 ; call rax
0x000000000012689d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000407b1 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010b01f : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000afd86 : mov dword ptr [rbp], ebx ; call r12
0x0000000000084dc1 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000111fd8 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003706a : mov dword ptr [rbp], edx ; call rax
0x000000000006ea82 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ea81 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029e51 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000076557 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000127db6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000076fe9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000f7b34 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000120db5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000127d6e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000f7b64 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074ac5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000120e09 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d766b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b133a : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000753d5 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000c9e28 : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000830e9 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00000000000c9e27 : mov dword ptr [rbx + 0x30], r8d ; xor eax, eax ; pop rbx ; ret
0x00000000000830e8 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000c8b30 : mov dword ptr [rbx + 0x34], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033f2f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000008319e : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x00000000000791db : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000077a32 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006fe6e : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000029e67 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000f7b04 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000349c8 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000073fe1 : mov dword ptr [rbx + 8], edx ; movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x000000000008342d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec0d2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001a4704 : mov dword ptr [rbx], eax ; add byte ptr [rax], al ; retf
0x0000000000120fd3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000794b6 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000127f71 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011dcaf : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000ec072 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000011d4e7 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011d1d6 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000e5097 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006bec1 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b3d1 : mov dword ptr [rbx], ecx ; add rsp, 0x10 ; ret
0x00000000000703cc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000830e6 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000061ea3 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003465e : mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x0000000000081e9d : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000008319b : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000119114 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x000000000011b8c8 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x000000000011b825 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x000000000011b8f5 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000013e372 : mov dword ptr [rcx + 3], edx ; ret
0x000000000009f3d0 : mov dword ptr [rcx + 4], eax ; jne 0x9f39e ; ret
0x000000000013e363 : mov dword ptr [rcx + 4], edx ; ret
0x000000000009f3cf : mov dword ptr [rcx + 4], r8d ; jne 0x9f39f ; ret
0x000000000013e3d4 : mov dword ptr [rcx + 5], edx ; ret
0x000000000013e3e4 : mov dword ptr [rcx + 6], edx ; ret
0x000000000013e3b3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000013e3a4 : mov dword ptr [rcx + 8], edx ; ret
0x000000000008a971 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000000f209f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x00000000001518f7 : mov dword ptr [rcx - 2], ecx ; ret
0x00000000001518e2 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000001518d1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000009f5a0 : mov dword ptr [rcx], 0 ; jne 0x9f5a1 ; ret
0x00000000000d6773 : mov dword ptr [rcx], 0x24748b48 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000002b9cd : mov dword ptr [rcx], 0x89480000 ; ret 0x8b41
0x00000000000c2034 : mov dword ptr [rcx], 0xdf75d284 ; ret
0x000000000019d855 : mov dword ptr [rcx], 0xf6f99800 ; jmp qword ptr [rcx]
0x000000000017eb19 : mov dword ptr [rcx], 0xf72e8000 ; jmp rax
0x000000000017eb29 : mov dword ptr [rcx], 0xf72ed000 ; call qword ptr [rax]
0x00000000000c1d5d : mov dword ptr [rcx], 0xf7bfa80 ; xchg eax, esp ; ret 0xb60f
0x0000000000061081 : mov dword ptr [rcx], 0xfe48545 ; lahf ; ret 0x2941
0x0000000000031275 : mov dword ptr [rcx], 0xfef364e8 ; dec dword ptr [rax + 0x29] ; ret
0x00000000000311e5 : mov dword ptr [rcx], 0xfef3f4e8 ; dec dword ptr [rax + 0x29] ; ret
0x00000000000ca6f2 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009f5d6 : mov dword ptr [rcx], eax ; jne 0x9f5c5 ; ret
0x000000000003451a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006f427 : mov dword ptr [rcx], eax ; ret
0x00000000000733fe : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006f281 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000010bd29 : mov dword ptr [rcx], edi ; ret
0x000000000013e331 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000013e350 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000013e391 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000013e370 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000013e3b1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000013e3c1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000013e3d1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e3e1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e3f1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e401 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000007f801 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000013e360 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000013e3a1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000010bce8 : mov dword ptr [rcx], edx ; ret
0x000000000009f5d5 : mov dword ptr [rcx], r8d ; jne 0x9f5c6 ; ret
0x00000000000e1b5b : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e1b92 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000009a51d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009b37d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009a55b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009b3bb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009a5dd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009b43d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000098eeb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000099bbe : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000098f6d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000441ef : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009cfad : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009cfeb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009d06d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000099c40 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x0000000000098fb0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000098fd0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000098f91 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e1b80 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x000000000009a643 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009b4a3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000098fb3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009d0d3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000120aa0 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x00000000000790d3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000075777 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000009a625 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009b485 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009a663 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009b4c3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000098f95 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009d0b5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009d0f3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000120b32 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x0000000000120a66 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000011655e : mov dword ptr [rdi + 0x20], ecx ; ret
0x000000000011c0dc : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000120be1 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000c9d17 : mov dword ptr [rdi + 0x2c], ecx ; mov dword ptr [rdi + 0x30], r9d ; ret
0x00000000000c9d16 : mov dword ptr [rdi + 0x2c], r9d ; mov dword ptr [rdi + 0x30], r9d ; ret
0x00000000000c9d1b : mov dword ptr [rdi + 0x30], ecx ; ret
0x00000000000c9d1a : mov dword ptr [rdi + 0x30], r9d ; ret
0x000000000011c094 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x000000000002112d : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x0000000000079103 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007b1fd : mov dword ptr [rdi + 0x58], ecx ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000034b99 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000e109e : mov dword ptr [rdi + 0x80], edx ; ret
0x000000000010b1bf : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009a59d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009b3fd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000098f0d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000009d02d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009a53b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009b39b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009a5bd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009b41d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000098ecb : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cfcb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009d04d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000133905 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133748 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000001339e8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000133895 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001336d8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000037df3 : mov dword ptr [rdi + 2], edx ; ret
0x000000000009a407 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009b247 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000133825 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133668 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098df7 : mov dword ptr [rdi + 3], edx ; ret
0x000000000009ce77 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000008ab2c : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aa5c : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007b1ea : mov dword ptr [rdi + 4], eax ; ret
0x0000000000037ded : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000008a98c : mov dword ptr [rdi + 4], edx ; add rax, rdi ; ret
0x000000000009a3e9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009b229 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001335f8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098de9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000009ce59 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000e10f0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009a49b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009b2eb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000133588 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098e5b : mov dword ptr [rdi + 5], edx ; ret
0x000000000009cf1b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009a4bb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009b30b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000133518 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098e6b : mov dword ptr [rdi + 6], edx ; ret
0x000000000009cf3b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009a459 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009b2a9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009a4db : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009b32b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001334a8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098e39 : mov dword ptr [rdi + 7], edx ; ret
0x000000000009ced9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009cf5b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e9a68 : mov dword ptr [rdi + 8], 0 ; ret
0x0000000000083988 : mov dword ptr [rdi + 8], 0 ; xor eax, eax ; ret
0x00000000000454de : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000116d1b : mov dword ptr [rdi + 8], eax ; pop rbx ; ret
0x00000000000790d7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000073e7c : mov dword ptr [rdi + 8], ecx ; movzx edx, byte ptr [rax] ; mov eax, edx ; ret
0x0000000000044174 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000009b28b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009a479 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009b2c9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009a43b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000439e4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000037714 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000075f0f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x0000000000037705 : mov dword ptr [rdi + 8], edx ; ret
0x000000000009cebb : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009cef9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000e6fe2 : mov dword ptr [rdi + 8], esi ; ret
0x000000000010be38 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x000000000010be33 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000009de9b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x000000000009da95 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000009de93 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000014e375 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000009da85 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000009de8b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da77 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000012d3b5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d3f3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000440df : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000012d73c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132f58 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012d91c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132ed8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012db0c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132e58 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012dcdd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132dc9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012dedd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132d39 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e0dd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132ca9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000099d80 : mov dword ptr [rdi - 1], edx ; ret
0x000000000012dabd : mov dword ptr [rdi - 2], ecx ; ret
0x000000000012d8d5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000012dab9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000012de99 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000012d56f : mov dword ptr [rdi - 4], edx ; ret
0x000000000012de96 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e096 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e296 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004406a : mov dword ptr [rdi - 8], ecx ; ret
0x000000000012d3f7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000012d56c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d668 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012d5b4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132fd8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000037210 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000cb5ef : mov dword ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000008a9d9 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x000000000008ab3e : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x00000000000e9a55 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004882b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x000000000010fd2f : mov dword ptr [rdi], eax ; ret
0x0000000000044064 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000004416e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000037718 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000053406 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009a3d5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009a427 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000008ab90 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000009a3b4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000098db4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009b1e7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000099a87 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009b215 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000099aa5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009b267 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000099ae7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009a405 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009b245 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000098df5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009a457 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009b2a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000098e37 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009a477 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009b2c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000098e47 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000151fb7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000098e58 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000098e68 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000098e78 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008aaa8 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000098de6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000098e28 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000151fc3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000033486 : mov dword ptr [rdi], ecx ; ret
0x000000000014e36f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000008a9b1 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x000000000009a3a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009b1d4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009a3c2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009b202 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009a414 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009b254 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000099da0 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000099de1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000099e01 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000099e11 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000010dc5f : mov dword ptr [rdi], edx ; mov qword ptr [rax], 0 ; ret
0x0000000000099e21 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000099e31 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000116d18 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000083976 : mov dword ptr [rdi], edx ; mov rax, r8 ; ret
0x0000000000099db0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000099df1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000337e6 : mov dword ptr [rdi], edx ; ret
0x000000000009ce04 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009ce32 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009ce84 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000330a5 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000008ab61 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x00000000001518df : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000452cd : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000838c1 : mov dword ptr [rdi], esi ; mov eax, 1 ; ret
0x00000000001518ce : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000008aa81 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000001518f3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000452f3 : mov dword ptr [rdi], esi ; ret
0x00000000000e10d1 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x000000000012bfd2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000008a9d8 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x000000000011c19c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006bc37 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00000000000765b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000006f27e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006f424 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000115d00 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000007c4b2 : mov dword ptr [rdx + 0x40], ecx ; add byte ptr [rax + rsi], 1 ; ret
0x0000000000115cdc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000115ce0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00000000001191b0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x000000000011c07c : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000000af9b0 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000001406f7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000959bc : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001406d9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009599e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000014078b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000140709 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000013c3b9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001407ab : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000140729 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000013c3c9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000140749 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x00000000001407cb : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000095a40 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000140769 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000014065b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000095a22 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000006924b : mov dword ptr [rdx + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000ca650 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000119131 : mov dword ptr [rdx + 8], edi ; ret
0x000000000010dbfe : mov dword ptr [rdx + rax*8], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c534 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00000000000bb0ff : mov dword ptr [rdx], eax ; jmp 0xbb0d1
0x0000000000140684 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000001406b2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000140604 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000e2a83 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0xe2a57
0x0000000000076d7a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000344ea : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000452cf : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000045525 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000bcc8d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000037e5a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000095939 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000bc472 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002d23d : mov dword ptr [rdx], eax ; ret
0x000000000007417c : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000008443e : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x000000000009e575 : mov dword ptr [rdx], ecx ; jne 0x9e56d ; ret
0x00000000000d8e47 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000008a5d5 : mov dword ptr [rdx], ecx ; ret
0x00000000000ec4a0 : mov dword ptr [rdx], edi ; pop rbx ; pop rbp ; ret
0x00000000000d6deb : mov dword ptr [rdx], edi ; ret
0x00000000000bcae3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000bcbad : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011912e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000085447 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bcc8c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001594cf : mov dword ptr [rip + 0x25536b], ebx ; jne 0x1594c1 ; pop rbx ; ret
0x000000000012896a : mov dword ptr [rip + 0x285f88], esi ; xor eax, eax ; ret
0x00000000000fd5b8 : mov dword ptr [rip + 0x2b2c82], eax ; pop rbp ; ret
0x00000000000f2590 : mov dword ptr [rip + 0x2b9daa], ebx ; pop rbx ; ret
0x00000000000eaf2a : mov dword ptr [rip + 0x2c13f8], edi ; ret
0x0000000000080695 : mov dword ptr [rip + 0x32bbb5], eax ; jne 0x806a9 ; ret
0x000000000007b314 : mov dword ptr [rip + 0x330fae], eax ; ret
0x000000000007b304 : mov dword ptr [rip + 0x330fb6], eax ; ret
0x000000000007b2f2 : mov dword ptr [rip + 0x330fb8], edx ; ret
0x000000000007b2b4 : mov dword ptr [rip + 0x330fbe], eax ; ret
0x000000000007b28e : mov dword ptr [rip + 0x330fcc], eax ; ret
0x000000000007b2a4 : mov dword ptr [rip + 0x330fd6], eax ; ret
0x000000000007b25e : mov dword ptr [rip + 0x331004], eax ; ret
0x000000000007b23d : mov dword ptr [rip + 0x331049], eax ; ret
0x000000000007b273 : mov dword ptr [rip + 0x333673], eax ; ret
0x0000000000034e8b : mov dword ptr [rip + 0x3772fb], eax ; mov eax, edx ; ret
0x0000000000034e7c : mov dword ptr [rip + 0x377306], edx ; ret
0x000000000002bc7d : mov dword ptr [rip + 0x381ea5], eax ; mov eax, ecx ; syscall
0x0000000000020828 : mov dword ptr [rip + 0x390bfa], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000d7984 : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000037d16 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003767e : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000ca66c : mov dword ptr [rsi + 0x18], edx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000037682 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000738e2 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rax], dil ; mov eax, edx ; ret
0x0000000000075ee6 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000ca66f : mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x00000000000e6e33 : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000709c5 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e65c6 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000e100f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x0000000000037d60 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000037da7 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000009f418 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000d7967 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000114ea1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000d7980 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000aebc1 : mov dword ptr [rsi + rcx], edx ; jne 0xaebbe ; ret
0x00000000000eab0e : mov dword ptr [rsi + rdi*8 + 0x58bffff], edi ; retf
0x0000000000151fc6 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000151fb9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000114ebf : mov dword ptr [rsi], 0 ; ret
0x0000000000114f50 : mov dword ptr [rsi], 0xa ; ret
0x0000000000114f40 : mov dword ptr [rsi], 0xb ; ret
0x0000000000114f70 : mov dword ptr [rsi], 0xc ; ret
0x0000000000114f60 : mov dword ptr [rsi], 8 ; ret
0x0000000000123cf0 : mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x000000000007b4d4 : mov dword ptr [rsi], eax ; mov rax, r10 ; ret
0x000000000007577b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000010b1c3 : mov dword ptr [rsi], edi ; ret
0x0000000000100dd1 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000037736 : mov dword ptr [rsi], edx ; ret
0x0000000000032f15 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000007c044 : mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x0000000000035d39 : mov dword ptr [rsp + 0x10], ecx ; call r14
0x000000000007d977 : mov dword ptr [rsp + 0x10], edx ; call rdi
0x000000000007d8b1 : mov dword ptr [rsp + 0x10], edx ; xor edi, edi ; call qword ptr [rax]
0x000000000007d972 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], rdx ; call rdi
0x000000000007f5df : mov dword ptr [rsp + 0x18], edx ; call 0x7b846
0x000000000007d5a2 : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000d3d9c : mov dword ptr [rsp + 0x28], edi ; add rax, rdx ; jmp rax
0x0000000000047dbb : mov dword ptr [rsp + 0x28], edx ; call 0x43fe6
0x000000000007d906 : mov dword ptr [rsp + 0x28], edx ; call rax
0x0000000000047dba : mov dword ptr [rsp + 0x28], r10d ; call 0x43fe7
0x000000000011a616 : mov dword ptr [rsp + 0x2c], eax ; call 0x116836
0x00000000000b4357 : mov dword ptr [rsp + 0x30], ecx ; call 0x205e6
0x00000000000477f7 : mov dword ptr [rsp + 0x38], ebx ; call 0x44256
0x0000000000114957 : mov dword ptr [rsp + 0x94], eax ; call 0xf1389
0x00000000000f0281 : mov dword ptr [rsp + 0xc], eax ; call 0xfcd16
0x000000000006e35b : mov dword ptr [rsp + 0xd8], eax ; call 0x7ae59
0x0000000000083150 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000120edc : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x0000000000071d7f : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x00000000000a7d43 : mov dword ptr [rsp + 8], edx ; call 0x43fe6
0x00000000000a75ac : mov dword ptr [rsp + 8], edx ; mov ecx, r15d ; call 0x43fe9
0x0000000000047581 : mov dword ptr [rsp + 8], r10d ; call 0x43fe7
0x0000000000032fe3 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000045466 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000f0088 : mov dword ptr [rsp - 0x30], ecx ; syscall
0x00000000000f0083 : mov dword ptr [rsp - 0x38], eax ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000000e89f4 : mov dword ptr [rsp - 0x48], 0x18 ; syscall
0x0000000000033ea5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000000820bd : mov dword ptr [rsp], eax ; je 0x82189 ; call rax
0x00000000000ed9dc : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x00000000000823aa : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076aab : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x00000000000debde : mov dword ptr [rsp], edx ; call 0x6adf5
0x00000000000e7e27 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000ec0e7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000afaa7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000128867 : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x000000000007ecd7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000bb0df : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000021887 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000eb0b8 : mov dword ptr fs:[rax], ebp ; mov eax, 3 ; syscall
0x00000000000d9149 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000d90f2 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000109f00 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034519 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006c533 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00000000000bb0fe : mov dword ptr fs:[rdx], eax ; jmp 0xbb0d2
0x00000000000e2a82 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0xe2a58
0x0000000000076d79 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000344e9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000bcae2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000bcbac : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000009da84 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000012d8d0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000098da0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000e68e6 : mov eax, 0 ; cmova eax, edx ; ret
0x00000000000f1976 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00000000000ca38c : mov eax, 0 ; cmove eax, esi ; ret
0x00000000001137c4 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000009dff2 : mov eax, 0x10 ; pop rbx ; ret
0x00000000000e716f : mov eax, 0x10 ; syscall
0x000000000017f638 : mov eax, 0x10000202 ; push rax ; clc ; call rax
0x00000000000bb0bd : mov eax, 0x101 ; syscall
0x00000000000e2210 : mov eax, 0x102 ; syscall
0x00000000000e1f4a : mov eax, 0x103 ; syscall
0x00000000000e3703 : mov eax, 0x104 ; syscall
0x00000000000e9948 : mov eax, 0x105 ; syscall
0x00000000000e1fa3 : mov eax, 0x106 ; syscall
0x00000000000e3ef0 : mov eax, 0x107 ; syscall
0x00000000000691b9 : mov eax, 0x108 ; syscall
0x00000000000e3dd3 : mov eax, 0x109 ; syscall
0x00000000000e3e30 : mov eax, 0x10a ; syscall
0x00000000000e3e93 : mov eax, 0x10b ; syscall
0x00000000000e2182 : mov eax, 0x10c ; syscall
0x00000000000e27f3 : mov eax, 0x10d ; syscall
0x00000000000e81ba : mov eax, 0x10e ; syscall
0x00000000000e6816 : mov eax, 0x10f ; syscall
0x00000000000e0bfc : mov eax, 0x11 ; syscall
0x00000000000f0bd0 : mov eax, 0x110 ; syscall
0x00000000000f0556 : mov eax, 0x113 ; syscall
0x00000000000f03f3 : mov eax, 0x114 ; syscall
0x00000000000e6e50 : mov eax, 0x115 ; syscall
0x00000000000f04a0 : mov eax, 0x116 ; syscall
0x00000000000e6d2b : mov eax, 0x118 ; syscall
0x00000000000f0209 : mov eax, 0x119 ; syscall
0x00000000000f0c30 : mov eax, 0x11b ; syscall
0x00000000000e6ef3 : mov eax, 0x11d ; syscall
0x00000000000e6ab0 : mov eax, 0x11d ; xor esi, esi ; syscall
0x00000000000f0c63 : mov eax, 0x11e ; syscall
0x00000000000f0c90 : mov eax, 0x11f ; syscall
0x00000000000e0c5c : mov eax, 0x12 ; syscall
0x00000000000f1730 : mov eax, 0x120 ; syscall
0x00000000000f02bb : mov eax, 0x121 ; syscall
0x00000000000f02f0 : mov eax, 0x122 ; syscall
0x00000000000f08a0 : mov eax, 0x123 ; syscall
0x00000000000e2d00 : mov eax, 0x124 ; syscall
0x00000000000e2d60 : mov eax, 0x125 ; syscall
0x00000000000f09c0 : mov eax, 0x126 ; syscall
0x00000000000e7b9c : mov eax, 0x127 ; syscall
0x00000000000e7bfc : mov eax, 0x128 ; syscall
0x00000000000f17d2 : mov eax, 0x12b ; syscall
0x00000000000f0cc0 : mov eax, 0x12c ; syscall
0x00000000000f0723 : mov eax, 0x12d ; syscall
0x00000000000f0373 : mov eax, 0x12e ; syscall
0x00000000000e74b7 : mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000000f0cf3 : mov eax, 0x12f ; syscall
0x00000000000e7a60 : mov eax, 0x13 ; syscall
0x00000000000f0620 : mov eax, 0x130 ; syscall
0x00000000000f07e0 : mov eax, 0x131 ; syscall
0x00000000000e8400 : mov eax, 0x132 ; syscall
0x00000000000f1882 : mov eax, 0x133 ; syscall
0x00000000000f0d20 : mov eax, 0x134 ; syscall
0x000000000017d3f0 : mov eax, 0x135 ; call rax
0x00000000000e1d31 : mov eax, 0x135 ; syscall
0x00000000000f0d53 : mov eax, 0x136 ; syscall
0x00000000000f0d83 : mov eax, 0x137 ; syscall
0x0000000000037e3c : mov eax, 0x13e ; syscall
0x00000000000e780d : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000e7b00 : mov eax, 0x14 ; syscall
0x00000000000e2683 : mov eax, 0x15 ; syscall
0x00000000000e1b73 : mov eax, 0x16 ; jbe 0xe1b88 ; ret
0x0000000000081e54 : mov eax, 0x16 ; je 0x81e67 ; ret
0x00000000000e10c5 : mov eax, 0x16 ; je 0xe10d8 ; ret
0x0000000000081ea8 : mov eax, 0x16 ; ret
0x00000000000e2d30 : mov eax, 0x16 ; syscall
0x000000000017dae0 : mov eax, 0x166 ; hlt ; call rax
0x00000000000e80d0 : mov eax, 0x17 ; syscall
0x000000000017ddb8 : mov eax, 0x176 ; in eax, dx ; hlt ; call rax
0x00000000000d8fd0 : mov eax, 0x18 ; syscall
0x00000000000f0a83 : mov eax, 0x19 ; syscall
0x00000000000eb26d : mov eax, 0x1a ; syscall
0x00000000000eb330 : mov eax, 0x1b ; syscall
0x00000000000e1ba8 : mov eax, 0x1c ; syscall
0x00000000000f1d69 : mov eax, 0x1d ; syscall
0x00000000000f1cf6 : mov eax, 0x1e ; syscall
0x00000000000f1da6 : mov eax, 0x1f ; syscall
0x00000000000c0f2a : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x000000000009dfeb : mov eax, 0x20 ; pop rbx ; ret
0x00000000000c0f0f : mov eax, 0x20 ; ret
0x00000000000e2ca0 : mov eax, 0x20 ; syscall
0x000000000002cf97 : mov eax, 0x200 ; ret
0x000000000017b5d0 : mov eax, 0x20000076 ; sbb al, 0xeb ; call rax
0x000000000017b7a0 : mov eax, 0x20000080 ; jae 0x17b799 ; call rax
0x0000000000180a98 : mov eax, 0x2000028a ; retf
0x000000000016db78 : mov eax, 0x20fff4a8 ; ret 0xfff4
0x00000000000e2cd0 : mov eax, 0x21 ; syscall
0x00000000000bf8ca : mov eax, 0x22 ; syscall
0x00000000000bf94a : mov eax, 0x23 ; syscall
0x00000000000b2b70 : mov eax, 0x24 ; syscall
0x00000000000bf840 : mov eax, 0x25 ; syscall
0x00000000000b2ba0 : mov eax, 0x26 ; syscall
0x00000000000c0670 : mov eax, 0x27 ; syscall
0x00000000000e6cf3 : mov eax, 0x28 ; syscall
0x00000000000f14a0 : mov eax, 0x29 ; syscall
0x00000000000f0eaf : mov eax, 0x2a ; syscall
0x00000000000f0ddd : mov eax, 0x2b ; syscall
0x00000000000f1236 : mov eax, 0x2c ; syscall
0x00000000000f1016 : mov eax, 0x2d ; syscall
0x00000000000f12f0 : mov eax, 0x2e ; syscall
0x00000000000f1190 : mov eax, 0x2f ; syscall
0x000000000009dfe4 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000f1470 : mov eax, 0x30 ; syscall
0x000000000016c5b0 : mov eax, 0x30fff1e4 ; in eax, -0xf ; call rax
0x00000000000f0e70 : mov eax, 0x31 ; syscall
0x00000000000f0fd0 : mov eax, 0x32 ; syscall
0x00000000000f0f70 : mov eax, 0x33 ; syscall
0x00000000000f0f40 : mov eax, 0x34 ; syscall
0x00000000000f14d3 : mov eax, 0x35 ; syscall
0x00000000000f1443 : mov eax, 0x36 ; syscall
0x00000000000f0fa3 : mov eax, 0x37 ; syscall
0x0000000000040a9f : mov eax, 0x38 ; syscall
0x00000000000bfcd1 : mov eax, 0x3a ; syscall
0x00000000000bfd60 : mov eax, 0x3b ; syscall
0x00000000000f0102 : mov eax, 0x3c ; syscall
0x00000000000bf619 : mov eax, 0x3d ; syscall
0x0000000000040dd9 : mov eax, 0x3e ; mov rbx, rdi ; syscall
0x0000000000034500 : mov eax, 0x3e ; syscall
0x00000000000bf570 : mov eax, 0x3f ; syscall
0x000000000009dfdd : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c0f55 : mov eax, 0x40 ; ret
0x00000000000f1bf9 : mov eax, 0x40 ; syscall
0x000000000017f5d8 : mov eax, 0x400001ff ; clc ; call rax
0x00000000000f1bc3 : mov eax, 0x41 ; syscall
0x00000000000f1c57 : mov eax, 0x42 ; syscall
0x00000000000f1d30 : mov eax, 0x43 ; syscall
0x00000000000f1b46 : mov eax, 0x44 ; syscall
0x00000000000f19f0 : mov eax, 0x45 ; syscall
0x0000000000167d3b : mov eax, 0x45155e93 ; ret 0x591c
0x00000000000f1a93 : mov eax, 0x46 ; syscall
0x00000000000f1b86 : mov eax, 0x47 ; syscall
0x00000000000e298b : mov eax, 0x48 ; syscall
0x00000000000e2ae0 : mov eax, 0x49 ; syscall
0x00000000000e82dd : mov eax, 0x4a ; syscall
0x00000000000e838d : mov eax, 0x4b ; syscall
0x00000000000e9980 : mov eax, 0x4c ; syscall
0x00000000000e99b3 : mov eax, 0x4d ; syscall
0x00000000000e2ee3 : mov eax, 0x4f ; syscall
0x00000000000e2e20 : mov eax, 0x50 ; syscall
0x000000000017c1f0 : mov eax, 0x500000bb ; fucompi st(6) ; call rax
0x000000000017e518 : mov eax, 0x500001a8 ; mov bl, 0xf6 ; call rax
0x000000000017eb68 : mov eax, 0x500001c8 ; xor bh, dh ; call rax
0x00000000000e2e50 : mov eax, 0x51 ; syscall
0x0000000000069180 : mov eax, 0x52 ; syscall
0x00000000000e21e0 : mov eax, 0x53 ; syscall
0x00000000000e3f20 : mov eax, 0x54 ; syscall
0x00000000000e2d9c : mov eax, 0x55 ; syscall
0x00000000000e3da0 : mov eax, 0x56 ; syscall
0x00000000000e3ec0 : mov eax, 0x57 ; syscall
0x00000000000e3e00 : mov eax, 0x58 ; syscall
0x00000000000e3e60 : mov eax, 0x59 ; syscall
0x00000000000e20f0 : mov eax, 0x5a ; syscall
0x00000000000e2120 : mov eax, 0x5b ; syscall
0x00000000000e3670 : mov eax, 0x5c ; syscall
0x00000000000e36a0 : mov eax, 0x5d ; syscall
0x00000000000e36d0 : mov eax, 0x5e ; syscall
0x00000000000e20e0 : mov eax, 0x5f ; syscall
0x000000000009dfd6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000b03e0 : mov eax, 0x60 ; syscall
0x000000000017fda0 : mov eax, 0x60000237 ; jnp 0x17fda7 ; jmp qword ptr [rax]
0x00000000000e7530 : mov eax, 0x62 ; syscall
0x00000000000f0ba0 : mov eax, 0x63 ; syscall
0x0000000000003594 : mov eax, 0x637514da ; jle 0x35d2 ; retf -0x786e
0x00000000000bf5a0 : mov eax, 0x64 ; syscall
0x00000000000c0690 : mov eax, 0x66 ; syscall
0x00000000000f0a20 : mov eax, 0x67 ; syscall
0x00000000000c06b0 : mov eax, 0x68 ; syscall
0x00000000000c070c : mov eax, 0x69 ; syscall
0x00000000000c077c : mov eax, 0x6a ; syscall
0x00000000000c06a0 : mov eax, 0x6b ; syscall
0x00000000000c06c0 : mov eax, 0x6c ; syscall
0x00000000000c08a0 : mov eax, 0x6d ; syscall
0x00000000000c0680 : mov eax, 0x6e ; syscall
0x00000000000c08d0 : mov eax, 0x6f ; syscall
0x00000000000c0930 : mov eax, 0x70 ; syscall
0x00000000000e7cbe : mov eax, 0x71 ; syscall
0x00000000000e7d2e : mov eax, 0x72 ; syscall
0x00000000000c06d0 : mov eax, 0x73 ; syscall
0x00000000000bc35a : mov eax, 0x74 ; syscall
0x00000000000e18dc : mov eax, 0x75 ; mov rdi, rdx ; syscall
0x00000000000c09d0 : mov eax, 0x75 ; syscall
0x00000000000c0960 : mov eax, 0x76 ; syscall
0x00000000000e18fe : mov eax, 0x77 ; mov rdi, rdx ; syscall
0x00000000000c0a50 : mov eax, 0x77 ; syscall
0x00000000000c0990 : mov eax, 0x78 ; syscall
0x00000000000c0870 : mov eax, 0x79 ; syscall
0x00000000000f0190 : mov eax, 0x7a ; syscall
0x00000000000f01c0 : mov eax, 0x7b ; syscall
0x00000000000c0900 : mov eax, 0x7c ; syscall
0x00000000000f0780 : mov eax, 0x7d ; syscall
0x00000000000c0e29 : mov eax, 0x7d00 ; ret
0x00000000000c0e58 : mov eax, 0x7e ; ret
0x00000000000f07b0 : mov eax, 0x7e ; syscall
0x00000000000c0dfa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000c0dab : mov eax, 0x7f ; ret
0x0000000000034535 : mov eax, 0x7f ; syscall
0x000000000016db60 : mov eax, 0x7ffff4a8 ; sal ah, 0xff ; ret 0xfff4
0x000000000010c1a1 : mov eax, 0x7fffffff ; mov eax, r8d ; ret
0x000000000009dfcf : mov eax, 0x80 ; pop rbx ; ret
0x000000000017d868 : mov eax, 0x80000153 ; jns 0x17d869 ; call rax
0x00000000000351ad : mov eax, 0x81 ; syscall
0x000000000003457f : mov eax, 0x82 ; syscall
0x00000000000349e0 : mov eax, 0x83 ; syscall
0x000000000006102d : mov eax, 0x83000000 ; ret 0x4830
0x00000000000e1d50 : mov eax, 0x84 ; syscall
0x00000000000e1ee6 : mov eax, 0x85 ; syscall
0x00000000000f0c00 : mov eax, 0x86 ; syscall
0x00000000000f03a0 : mov eax, 0x87 ; syscall
0x00000000000ed857 : mov eax, 0x88 ; syscall
0x00000000000e1ff0 : mov eax, 0x89 ; syscall
0x000000000006f534 : mov eax, 0x8900009c ; ret 0x95eb
0x0000000000030eea : mov eax, 0x89480037 ; ret 0x8948
0x0000000000084cf2 : mov eax, 0x8948fff9 ; ret 0xc031
0x00000000000d0194 : mov eax, 0x89ffffd7 ; ret
0x00000000000e2020 : mov eax, 0x8a ; syscall
0x0000000000072851 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e7840 : mov eax, 0x8d ; syscall
0x00000000000d8f10 : mov eax, 0x8e ; syscall
0x00000000000d8f40 : mov eax, 0x8f ; syscall
0x00000000000d8f70 : mov eax, 0x90 ; syscall
0x000000000017dc80 : mov eax, 0x9000016d ; push 0xf4 ; jmp qword ptr [rax]
0x00000000001800b0 : mov eax, 0x9000024d ; ret
0x00000000000d8fa0 : mov eax, 0x91 ; syscall
0x00000000000d9000 : mov eax, 0x92 ; syscall
0x00000000000d9030 : mov eax, 0x93 ; syscall
0x00000000000d9060 : mov eax, 0x94 ; syscall
0x00000000000eb390 : mov eax, 0x95 ; syscall
0x00000000000eb3c0 : mov eax, 0x96 ; syscall
0x00000000000eb3f0 : mov eax, 0x97 ; syscall
0x00000000000eb420 : mov eax, 0x98 ; syscall
0x00000000000e8770 : mov eax, 0x99 ; syscall
0x00000000000f06e0 : mov eax, 0x9a ; syscall
0x00000000000f0ae0 : mov eax, 0x9b ; syscall
0x00000000000f0b13 : mov eax, 0x9d ; syscall
0x00000000000f06b0 : mov eax, 0x9e ; syscall
0x00000000000f0750 : mov eax, 0x9f ; syscall
0x00000000001074e3 : mov eax, 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb230 : mov eax, 0xa ; syscall
0x000000000017d750 : mov eax, 0xa000014c ; call rax
0x000000000017dc58 : mov eax, 0xa000016c ; pop rbp ; hlt ; call rax
0x00000000000e82a0 : mov eax, 0xa1 ; syscall
0x0000000000003210 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000e8350 : mov eax, 0xa2 ; syscall
0x00000000000e8270 : mov eax, 0xa3 ; syscall
0x00000000000b04c0 : mov eax, 0xa4 ; syscall
0x00000000000f0a53 : mov eax, 0xa5 ; syscall
0x00000000000f0130 : mov eax, 0xa6 ; syscall
0x00000000000e87a0 : mov eax, 0xa7 ; syscall
0x00000000000e87d0 : mov eax, 0xa8 ; syscall
0x00000000000e843f : mov eax, 0xa9 ; syscall
0x00000000000e7ff0 : mov eax, 0xaa ; syscall
0x00000000000e8090 : mov eax, 0xab ; syscall
0x00000000000f0020 : mov eax, 0xac ; syscall
0x00000000000efff0 : mov eax, 0xad ; syscall
0x00000000000f0810 : mov eax, 0xae ; syscall
0x00000000000f0933 : mov eax, 0xaf ; syscall
0x00000000000eb200 : mov eax, 0xb ; syscall
0x00000000000f0840 : mov eax, 0xb0 ; syscall
0x000000000017b7e0 : mov eax, 0xb0000081 ; jge 0x17b7d9 ; call rax
0x000000000017d1b0 : mov eax, 0xb0000124 ; div al ; call rax
0x00000000000f0900 : mov eax, 0xb1 ; syscall
0x00000000000f0b43 : mov eax, 0xb2 ; syscall
0x00000000000f0b73 : mov eax, 0xb3 ; syscall
0x00000000000f0ab0 : mov eax, 0xb4 ; syscall
0x0000000000124fe3 : mov eax, 0xb5 ; syscall
0x0000000000125033 : mov eax, 0xb6 ; syscall
0x000000000016d975 : mov eax, 0xb754fff4 ; hlt ; jmp rax
0x000000000017ac35 : mov eax, 0xb790fffb ; sti ; jmp qword ptr [rax]
0x000000000011923f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000017aced : mov eax, 0xb842fffb ; sti ; call rdx
0x000000000017ac6d : mov eax, 0xb856fffb ; sti ; jmp rsi
0x000000000017ae29 : mov eax, 0xb880fffb ; sti ; call qword ptr [rax]
0x000000000016dbc8 : mov eax, 0xb8fff4a8 ; test al, 0xf4 ; call rax
0x000000000016db74 : mov eax, 0xb8fff4a8 ; test al, 0xf4 ; jmp qword ptr [rax]
0x00000000000341ab : mov eax, 0xba ; syscall
0x00000000000f0160 : mov eax, 0xbb ; syscall
0x00000000000ee353 : mov eax, 0xbc ; syscall
0x00000000000ee2f3 : mov eax, 0xbd ; syscall
0x00000000000ee1d3 : mov eax, 0xbe ; syscall
0x00000000000ee203 : mov eax, 0xbf ; syscall
0x00000000000cb0fd : mov eax, 0xc ; jmp 0xcb0cd
0x00000000000c8b61 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000c9e50 : mov eax, 0xc ; pop rbx ; ret
0x00000000000c9e30 : mov eax, 0xc ; ret
0x00000000000ee263 : mov eax, 0xc0 ; syscall
0x000000000017d478 : mov eax, 0xc0000137 ; call rax
0x000000000017e958 : mov eax, 0xc00001bc ; push rsi ; call rax
0x00000000000edb9a : mov eax, 0xc065894c ; syscall
0x00000000000ee143 : mov eax, 0xc1 ; syscall
0x00000000000ee230 : mov eax, 0xc2 ; syscall
0x00000000000ee290 : mov eax, 0xc3 ; syscall
0x00000000000ee170 : mov eax, 0xc4 ; syscall
0x00000000000ee320 : mov eax, 0xc5 ; syscall
0x00000000000ee2c0 : mov eax, 0xc6 ; syscall
0x00000000000ee1a0 : mov eax, 0xc7 ; syscall
0x00000000000a056a : mov eax, 0xc7490030 ; ret 0xffff
0x00000000000b0320 : mov eax, 0xc9 ; syscall
0x0000000000100dc0 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000100d59 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00000000000fcc74 : mov eax, 0xca ; syscall
0x000000000017d5a8 : mov eax, 0xd0000140 ; stosb byte ptr [rdi], al ; call rax
0x000000000017db18 : mov eax, 0xd0000167 ; hlt ; call rax
0x000000000017c171 : mov eax, 0xd4b00000 ; out dx, al ; jmp rax
0x000000000017c580 : mov eax, 0xd5 ; pop rcx ; out dx, eax ; call rax
0x00000000000f0870 : mov eax, 0xd5 ; syscall
0x000000000017a0dd : mov eax, 0xd5f0fffc ; cld ; call rax
0x00000000000eb363 : mov eax, 0xd8 ; syscall
0x00000000000f1cb6 : mov eax, 0xdc ; syscall
0x00000000000e68d6 : mov eax, 0xdd ; syscall
0x00000000000341dd : mov eax, 0xe ; syscall
0x000000000011dde6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017b710 : mov eax, 0xe000007b ; cmp al, 0xeb ; call rax
0x000000000017f2e8 : mov eax, 0xe00001f0 ; adc al, 0xf8 ; call rax
0x00000000001806a0 : mov eax, 0xe0000273 ; push rdi ; cli ; call rax
0x00000000000fd3a0 : mov eax, 0xe3 ; syscall
0x00000000000ba57c : mov eax, 0xe4 ; syscall
0x00000000000c14cf : mov eax, 0xe5 ; syscall
0x00000000000fd42e : mov eax, 0xe6 ; syscall
0x00000000000f08d3 : mov eax, 0xe9 ; syscall
0x00000000000341bb : mov eax, 0xea ; syscall
0x00000000000e97c0 : mov eax, 0xeb ; syscall
0x00000000000d9fed : mov eax, 0xf ; je 0xda048 ; ret
0x0000000000034251 : mov eax, 0xf ; syscall
0x000000000017f7b8 : mov eax, 0xf000020c ; jge 0x17f7be ; call qword ptr [rax]
0x000000000007b2f4 : mov eax, 0xf300330f ; ret
0x0000000000002d9a : mov eax, 0xf3f8ec1c ; ret
0x00000000000bf7a4 : mov eax, 0xf7 ; syscall
0x000000000017cf30 : mov eax, 0xf9000116 ; mov eax, dr0 ; call rax
0x00000000000c0e4f : mov eax, 0xfa ; ret
0x00000000000c0e70 : mov eax, 0xfc17 ; ret
0x00000000000f0990 : mov eax, 0xfd ; syscall
0x00000000000c0ddc : mov eax, 0xfde8 ; jne 0xc0db3 ; ret
0x00000000000f0960 : mov eax, 0xfe ; syscall
0x00000000000f09f0 : mov eax, 0xff ; syscall
0x00000000000c0e60 : mov eax, 0xfffa ; ret
0x00000000000bf5ec : mov eax, 0xfffffff2 ; ret
0x0000000000158ae7 : mov eax, 0xfffffffe ; pop rbx ; pop r14 ; ret
0x000000000010b310 : mov eax, 0xffffffff ; add rsp, 0x10 ; ret
0x00000000000e1d1a : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x0000000000083ca2 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x0000000000070b71 : mov eax, 0xffffffff ; ja 0x70b88 ; ret
0x000000000006ad66 : mov eax, 0xffffffff ; jmp 0x6ad36
0x00000000000e2a85 : mov eax, 0xffffffff ; jmp 0xe2a55
0x00000000000f0600 : mov eax, 0xffffffff ; jmp 0xf05da
0x00000000000f1170 : mov eax, 0xffffffff ; jmp 0xf114a
0x00000000000f1438 : mov eax, 0xffffffff ; jmp 0xf1412
0x00000000000c0139 : mov eax, 0xffffffff ; leave ; ret
0x00000000000e78c8 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000367ee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e54c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003260e : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000029990 : mov eax, 0xffffffff ; ret
0x00000000001588e0 : mov eax, 1 ; add rsp, 0x38 ; ret
0x00000000000e8f1e : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000154990 : mov eax, 1 ; jg 0x1549a9 ; neg eax ; ret
0x000000000009f260 : mov eax, 1 ; jg 0x9f272 ; neg eax ; ret
0x0000000000151746 : mov eax, 1 ; jl 0x151759 ; neg eax ; ret
0x0000000000057eb3 : mov eax, 1 ; jmp rax
0x00000000000c1042 : mov eax, 1 ; js 0xc1058 ; ret
0x0000000000116558 : mov eax, 1 ; mov qword ptr [rdi + 0x20], rcx ; ret
0x00000000000452ed : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000083125 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000079a42 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023264 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000007037f : mov eax, 1 ; pop rbx ; ret
0x0000000000034d77 : mov eax, 1 ; ret
0x00000000000e25ad : mov eax, 1 ; syscall
0x00000000000454e1 : mov eax, 2 ; ret
0x000000000002120b : mov eax, 2 ; syscall
0x00000000000fd2d6 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000bb017 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000076d54 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x00000000000af581 : mov eax, 3 ; ret
0x00000000000297b4 : mov eax, 3 ; syscall
0x00000000000af591 : mov eax, 4 ; ret
0x00000000000e1dee : mov eax, 4 ; syscall
0x00000000000ddccc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000af5a1 : mov eax, 5 ; ret
0x00000000000e1e3d : mov eax, 5 ; syscall
0x00000000000af5b1 : mov eax, 6 ; ret
0x00000000000e1e8e : mov eax, 6 ; syscall
0x00000000000fb25c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000af5c1 : mov eax, 7 ; ret
0x00000000000e674d : mov eax, 7 ; syscall
0x000000000009dfc8 : mov eax, 8 ; pop rbx ; ret
0x00000000000e2646 : mov eax, 8 ; syscall
0x00000000000eb1aa : mov eax, 9 ; movsxd r10, r10d ; syscall
0x00000000000e0eb7 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb13c : mov eax, 9 ; syscall
0x000000000017cf35 : mov eax, dr0 ; call rax
0x00000000000fc54e : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000002fa3f : mov eax, dword ptr [r15 + 4] ; jmp 0x2fa15
0x000000000003258a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000127f31 : mov eax, dword ptr [rax + 0x10] ; jmp rax
0x00000000000ee3e1 : mov eax, dword ptr [rax + 0x150] ; ret
0x0000000000127cdf : mov eax, dword ptr [rax + 0x160] ; jmp rax
0x00000000000f2970 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f29aa : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000010f6a7 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x10f6b7 ; ret
0x00000000000e7ef8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xe7f0b ; ret
0x0000000000072553 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000fc5b9 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000f3077 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000ee12c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000001207fd : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x000000000011b774 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012080d : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000072d14 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000011c014 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000037196 : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000079a88 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x79a89 ; ret
0x000000000002c02e : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000011fed5 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000ee3ba : mov eax, dword ptr [rax + 8] ; ret
0x00000000000833ab : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x833a9 ; ret
0x000000000002cf95 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d157 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cabf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002cb08 : mov eax, dword ptr [rax + rdx] ; ret
0x00000000000f3a04 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002a68e : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2a6a0 ; call rax
0x000000000011feca : mov eax, dword ptr [rax] ; jmp rax
0x000000000002c02c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002cf6c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000037193 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010f789 : mov eax, dword ptr [rax] ; ret
0x000000000007c137 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7c147 ; call rax
0x000000000007c41a : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7c42a ; call rax
0x0000000000001ac9 : mov eax, dword ptr [rbp + 0x7872a51b] ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000000ec76c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000022882 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x000000000007922d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000753d1 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000079769 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000fba00 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000cd9b7 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115c81 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000011dc7a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x11dc90 ; pop rbx ; ret
0x00000000000959b9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000013c3b6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000013c3c6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000095a3d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000095a5d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000f7ec8 : mov eax, dword ptr [rcx + 8] ; sub eax, dword ptr [rdx + 8] ; ret
0x0000000000145aba : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000147392 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000003258b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000199c45 : mov eax, dword ptr [rcx] ; add byte ptr [rax - 0x1f], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001406b0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001191c0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000095965 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000140601 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000013c2d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000140681 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000095936 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000070a1f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007a710 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007a738 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000159d21 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x159d38 ; pop rbx ; ret
0x00000000000fcd70 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0xfcd88 ; ret
0x00000000000bfbc5 : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbda ; call rax
0x0000000000120dd3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x0000000000120a01 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000114e9e : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000bb601 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000159128 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x15913f ; call rax
0x000000000009f1e0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0x9f268 ; ret
0x000000000009f1f5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0x9f268 ; ret
0x0000000000114ef7 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120d50 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000075411 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000009f200 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9f268 ; ret
0x000000000009f21b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0x9f268 ; ret
0x000000000009f230 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0x9f268 ; ret
0x000000000009f245 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0x9f268 ; ret
0x000000000009f250 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9f268 ; ret
0x0000000000114f2f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000075301 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000072d11 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000ccfc8 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007a9b1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000073898 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x738b0 ; ret
0x000000000002fa40 : mov eax, dword ptr [rdi + 4] ; jmp 0x2fa14
0x00000000000e10e0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000e6f90 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000115bb1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000001207f9 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000120809 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000011fed1 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000011fec6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000011e3e9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011ffb1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000009f6ad : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0x9f689 ; ret
0x0000000000075370 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000075340 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000011c100 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007b271 : mov eax, dword ptr [rdi] ; mov dword ptr [rip + 0x333673], eax ; ret
0x000000000007a6ff : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000007b311 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x330fae], rax ; ret
0x000000000007b301 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x330fb6], rax ; ret
0x000000000007b2b1 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x330fbe], rax ; ret
0x000000000007b2a1 : mov eax, dword ptr [rdi] ; mov qword ptr [rip + 0x330fd6], rax ; ret
0x00000000000fcd85 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000bb710 : mov eax, dword ptr [rdi] ; ret
0x0000000000075eb0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000075ec0 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000119e54 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x119e66 ; ret
0x0000000000119e53 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x119e67 ; ret
0x000000000011ea94 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11eaa6 ; ret
0x000000000011ea93 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11eaa7 ; ret
0x000000000009f768 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x9f768 ; xor eax, eax ; ret
0x00000000000da071 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000002cf23 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000009e4d7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x9e4c9 ; ret
0x0000000000090d76 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000115388 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002bfed : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000180ab9 : mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x34], dh ; cli ; jmp rax
0x00000000000724d0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000705bf : mov eax, dword ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d6de8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000006e6cc : mov eax, dword ptr [rdx] ; ret
0x000000000007a6f1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7a6f0 ; ret
0x0000000000125864 : mov eax, dword ptr [rip + 0x287ca6] ; call qword ptr [rax]
0x0000000000125261 : mov eax, dword ptr [rip + 0x2882a9] ; call qword ptr [rax]
0x0000000000109071 : mov eax, dword ptr [rip + 0x2a4901] ; ret
0x00000000000f3071 : mov eax, dword ptr [rip + 0x2b8de1] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008066f : mov eax, dword ptr [rip + 0x32b85b] ; mov qword ptr [rax], rdi ; ret
0x000000000007d994 : mov eax, dword ptr [rip + 0x32e426] ; xor edi, edi ; call qword ptr [rax]
0x000000000007d7bf : mov eax, dword ptr [rip + 0x32e5fb] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007a991 : mov eax, dword ptr [rip + 0x332c89] ; ret
0x0000000000034e50 : mov eax, dword ptr [rip + 0x377332] ; ret
0x0000000000034e40 : mov eax, dword ptr [rip + 0x377346] ; ret
0x000000000002ca6c : mov eax, dword ptr [rip + 0x37f36e] ; mov qword ptr [rax], rdx ; ret
0x00000000000296f1 : mov eax, dword ptr [rip + 0x3842f9] ; ret
0x0000000000022011 : mov eax, dword ptr [rip + 0x38f419] ; ret
0x0000000000022001 : mov eax, dword ptr [rip + 0x38f439] ; ret
0x00000000000d928e : mov eax, dword ptr [rsi + 0x14] ; ret
0x00000000000fc54f : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000002d151 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d161 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000ca5d9 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000002c009 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000f6f7b : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bbfc4 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000127e76 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x000000000002106a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000025d2f : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000106923 : mov eax, dword ptr [rsp + 0x28] ; mov edi, dword ptr [rax] ; call 0xe2c27
0x0000000000106923 : mov eax, dword ptr [rsp + 0x28] ; mov edi, dword ptr [rax] ; call 0xe2c28
0x00000000000345d9 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bf91b : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000127e2d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000aae44 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002d672 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000dd9e3 : mov eax, dword ptr [rsp + 8] ; jmp 0xdd9b9
0x00000000000bfa2a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xbfa3e ; call rax
0x0000000000033d76 : mov eax, dword ptr [rsp - 0x10] ; shr rax, 0x3f ; ret
0x00000000000e8a20 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000bf8b0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f30d3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000f3134 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000000341e5 : mov eax, eax ; add rsp, 0x90 ; ret
0x000000000010bbd4 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000002171a : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000051350 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000006f1a0 : mov eax, eax ; pop rbx ; ret
0x000000000004eafa : mov eax, eax ; ret
0x000000000014f164 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000032d81 : mov eax, eax ; syscall
0x000000000014dc01 : mov eax, eax ; vzeroupper ; ret
0x00000000000841f0 : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000083a1d : mov eax, ebp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x000000000011d087 : mov eax, ebp ; mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000b0a01 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f97c : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c275 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006b315 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004e782 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000772c9 : mov eax, ebp ; syscall
0x0000000000043b23 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000011da71 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008534a : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbe34 : mov eax, ebx ; call rax
0x00000000000edf8f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000111ed5 : mov eax, ebx ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000029fb6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000346c7 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000030f3b : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003751f : mov eax, ebx ; pop rbx ; ret
0x00000000000ebafa : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000edcad : mov eax, ebx ; syscall
0x00000000000439e7 : mov eax, ecx ; adc eax, eax ; ret
0x00000000000489f2 : mov eax, ecx ; add rsp, 0x28 ; ret
0x00000000000eaf50 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000370fc : mov eax, ecx ; or rax, rdx ; ret
0x00000000000542d7 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002d740 : mov eax, ecx ; pop rbp ; pop r12 ; ret
0x0000000000082155 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008228a : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000000325a7 : mov eax, ecx ; ret
0x0000000000029739 : mov eax, ecx ; syscall
0x00000000000fdfd1 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002cfc0 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000100e26 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000100e00 : mov eax, edi ; bswap eax ; ret
0x0000000000038f86 : mov eax, edi ; cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000037111 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000009fa0c : mov eax, edi ; jne 0x9fa22 ; ret
0x00000000000e9afc : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000002187b : mov eax, edi ; neg eax ; ret
0x000000000008aec5 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011035b : mov eax, edi ; pop rbx ; pop rbp ; ret
0x000000000008701a : mov eax, edi ; pop rbx ; ret
0x000000000002188e : mov eax, edi ; ret
0x0000000000100e10 : mov eax, edi ; ror ax, 8 ; ret
0x00000000000370a2 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000100aba : mov eax, edi ; sar rax, 6 ; ret
0x0000000000100ea6 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000afb38 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000e8907 : mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000068ba0 : mov eax, edx ; add rsp, 0x98 ; ret
0x000000000010c0bd : mov eax, edx ; add rsp, 8 ; movsxd rdx, esi ; ret
0x00000000000432b3 : mov eax, edx ; add rsp, 8 ; ret
0x00000000000f7e95 : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000087336 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000d91cd : mov eax, edx ; je 0xd9226 ; ret
0x000000000010bd48 : mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x000000000010bd26 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x000000000008ab11 : mov eax, edx ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x00000000000bc8ef : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006dffc : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005321b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006c085 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000080794 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b730 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000446f5 : mov eax, edx ; pop rbx ; ret
0x0000000000021e6d : mov eax, edx ; ret
0x0000000000032ee1 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000cd093 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00000000000210e2 : mov eax, edx ; syscall
0x00000000000bcc8f : mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000115e11 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bc475 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000487da : mov eax, esi ; cmovae rax, rdi ; ret
0x0000000000033fe6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000008392f : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe8af : mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000007fa2b : mov eax, esi ; pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000113d89 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fe571 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036ce4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000069473 : mov eax, esi ; pop rbx ; ret
0x0000000000048914 : mov eax, esi ; ret
0x000000000006d5ee : mov eax, esi ; syscall
0x000000000010fe2b : mov eax, esp ; pop r12 ; ret
0x000000000006b4b6 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002d97a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000755ca : mov eax, esp ; syscall
0x000000000016c098 : mov eax, fs ; out dx, eax ; call qword ptr [rdi]
0x000000000002b6ec : mov eax, r10d ; syscall
0x000000000010fe2a : mov eax, r12d ; pop r12 ; ret
0x00000000000e1c5a : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000755c9 : mov eax, r12d ; syscall
0x000000000006f97b : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ddb65 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000772c8 : mov eax, r13d ; syscall
0x0000000000126243 : mov eax, r14d ; syscall
0x000000000010bbd3 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000005134f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006f19f : mov eax, r8d ; pop rbx ; ret
0x000000000004eaf9 : mov eax, r8d ; ret
0x0000000000032d80 : mov eax, r8d ; syscall
0x0000000000124f98 : mov eax, r9d ; ret
0x0000000000034642 : mov eax, r9d ; syscall
0x000000000018b2ab : mov ebp, 0x380e0a01 ; ret
0x00000000000e8e39 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000008e5f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008e601 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000008e5e1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000bbe2f : mov ebp, 0x480006be ; mov eax, ebx ; call rax
0x00000000000eb55f : mov ebp, 0x48fff68a ; mov eax, ebx ; pop rbx ; ret
0x0000000000149da1 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x0000000000169c34 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x000000000005a98c : mov ebp, 0x870f2b3c ; ret
0x000000000016c759 : mov ebp, 0x9ff0fffc ; cld ; jmp qword ptr [rax]
0x000000000016b54c : mov ebp, 0xbdffef0a ; or ch, bh ; call rdi
0x0000000000161f84 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000001668bd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000016b4c8 : mov ebp, 0xd7ffef09 ; or ch, bh ; call rdi
0x000000000016b550 : mov ebp, 0xd7ffef0a ; or ch, bh ; call rdi
0x000000000008e661 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000149dd1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008e641 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008e621 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000017c241 : mov ebp, 0xed100000 ; out dx, al ; call qword ptr [rax]
0x00000000000035ca : mov ebp, 0xef5aa220 ; nop ; retf -0x1612
0x00000000000852d2 : mov ebp, 0xf48000a ; ret 0xc3f3
0x000000000008e707 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x000000000008e537 : mov ebp, 0xf80148c0 ; ret
0x0000000000149c90 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000093afc : mov ebp, 0xf80148c6 ; ret
0x0000000000168966 : mov ebp, 0xfb67d10d ; ret
0x0000000000054b0d : mov ebp, 0xfffff740 ; call rax
0x0000000000049478 : mov ebp, 0xfffff758 ; call rax
0x000000000004d06f : mov ebp, 0xfffffae0 ; or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000c26f3 : mov ebp, 0xfffffcf8 ; call r15
0x00000000000c3cf7 : mov ebp, 0xfffffe18 ; call 0x207af
0x00000000000db9ba : mov ebp, 0xfffffe68 ; call rbx
0x00000000000661c1 : mov ebp, 2 ; jmp 0x62467
0x000000000016e38d : mov ebp, dr0 ; jmp qword ptr [rax]
0x0000000000001bf9 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000ec30a : mov ebp, eax ; call rax
0x0000000000033fec : mov ebp, ecx ; jmp rdx
0x000000000007b9ed : mov ebp, edx ; call qword ptr [r14]
0x00000000001981e1 : mov ebp, esi ; jmp qword ptr [rcx]
0x00000000000fd4a4 : mov ebp, esp ; pop rbp ; ret
0x0000000000169984 : mov ebx, 0x1b5c347e ; jmp 0x16995c
0x0000000000002d6e : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x0000000000080698 : mov ebx, 0x3750032 ; ret
0x0000000000133197 : mov ebx, 0x46f00ff2 ; retf
0x00000000000fddb1 : mov ebx, 0x48000543 ; cmovne eax, edx ; ret
0x000000000012dcf4 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000012dd12 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000001f37 : mov ebx, 0x79e33a1c ; retf 0x6321
0x000000000018cbd5 : mov ebx, 0x82080000 ; out dx, eax ; call qword ptr [rax]
0x000000000018cc95 : mov ebx, 0x83f80000 ; out dx, eax ; call qword ptr [rcx]
0x000000000007552e : mov ebx, 0x89000000 ; ret 0x348
0x0000000000003709 : mov ebx, 0x952a6c41 ; ret
0x00000000000c8ca3 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x7fe9
0x00000000000fccd4 : mov ebx, 0xafb8341 ; je 0xfcce3 ; ret
0x000000000016d961 : mov ebx, 0xba7bfff4 ; hlt ; jmp qword ptr [rsi]
0x000000000017a0a5 : mov ebx, 0xbd70fffc ; cld ; call qword ptr [rax]
0x00000000001668bb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000119096 : mov ebx, 0xc8 ; call rax
0x000000000017c1f1 : mov ebx, 0xdf500000 ; out dx, al ; call rax
0x00000000000c3c8d : mov ebx, 1 ; call 0x20717
0x000000000004c668 : mov ebx, 1 ; jmp rax
0x000000000005dd2a : mov ebx, 2 ; jmp 0x5a817
0x000000000017a921 : mov ebx, dr1 ; inc dword ptr [rax - 0x6d] ; sti ; call rax
0x00000000000c0122 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000169fa4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000083d23 : mov ebx, eax ; call 0x207a4
0x00000000001157bb : mov ebx, eax ; jne 0x115759 ; xor eax, eax ; pop rbx ; ret
0x000000000010dbbf : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000000e7607 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c8a81 : mov ebx, eax ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000017b8bd : mov ebx, ebp ; call rax
0x0000000000001cb5 : mov ebx, ebx ; cmp eax, 0xf9a7750 ; retf
0x000000000017ab2d : mov ebx, edi ; call qword ptr [rax + 0x10fffb88]
0x000000000017ab29 : mov ebx, edi ; call qword ptr [rax]
0x00000000000f024e : mov ebx, edi ; sub rsp, 0x18 ; call 0xfccb8
0x0000000000040ddf : mov ebx, edi ; syscall
0x000000000002b7e6 : mov ebx, edi ; test rax, rax ; je 0x2b7f6 ; call rax
0x00000000000c8a4f : mov ebx, edx ; mov rdi, rbp ; mov rsi, rbx ; call r12
0x0000000000113496 : mov ebx, esi ; sub rsp, 8 ; call 0x11fee8
0x00000000000bb693 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000003419f : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x0000000000085183 : mov ecx, 0x48000b35 ; cmovne eax, edx ; ret
0x0000000000167e39 : mov ecx, 0x5b92ac50 ; retf
0x0000000000001da5 : mov ecx, 0x72b02084 ; retf
0x000000000016990e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000029deb : mov ecx, 0x90ffff69 ; ret
0x000000000017ac25 : mov ecx, 0xb950fffb ; sti ; jmp rax
0x00000000000e78f0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000002f36a : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000190244 : mov ecx, dr0 ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], al ; call rsi
0x0000000000003093 : mov ecx, dr0 ; mov dr0, word ptr [rax] ; retf
0x000000000002a7e2 : mov ecx, dword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x2a7f4 ; call rcx
0x000000000005e112 : mov ecx, dword ptr [rbp - 0x6c0] ; jmp 0x5e0e4
0x0000000000113317 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00000000001518dc : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000120b40 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x120b59 ; xor eax, eax ; ret
0x0000000000120b80 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x120b99 ; xor eax, eax ; ret
0x0000000000043426 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000012bb1e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000072ceb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000090d73 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000009f699 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0x9f697 ; ret
0x00000000000437a6 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000169dc4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x169df9 ; retf 0x32dd
0x000000000012de93 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e093 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012e293 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000098dd0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000098e11 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000133903 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133893 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133823 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000133745 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001336d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133665 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001335f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133585 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133515 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001334a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001339e5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000098db1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000119585 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000001286aa : mov ecx, dword ptr [rsp + 0x20] ; call r9
0x000000000011938d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x0000000000114b1d : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000eaf53 : mov ecx, dword ptr [rsp + 8] ; syscall
0x000000000008a5e4 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000008a96c : mov ecx, eax ; movsxd r9, dword ptr [rcx + r9*4] ; add rcx, r9 ; jmp rcx
0x0000000000114f0c : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000008a5f6 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000073031 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000a0632 : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x00000000000db300 : mov ecx, ebp ; mov rdx, qword ptr [r12] ; mov rsi, r15 ; call rbx
0x00000000000a6f0f : mov ecx, ebx ; mov rsi, rdi ; call 0x43997
0x00000000000a75b1 : mov ecx, edi ; call 0x43fe4
0x00000000000a08fd : mov ecx, edi ; call rbx
0x00000000000ab287 : mov ecx, edi ; mov rdx, r13 ; mov rsi, r14 ; call rbx
0x00000000000f31a9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000799c0 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000009da52 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000113d3b : mov ecx, edx ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000111fc3 : mov ecx, edx ; xor edx, edx ; call rax
0x00000000000799fa : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000021e23 : mov ecx, esi ; call rbx
0x0000000000111ed8 : mov ecx, esi ; mov rdi, r13 ; call r12
0x00000000000a75b0 : mov ecx, r15d ; call 0x43fe5
0x0000000000113cb0 : mov edi, 0x100 ; call 0x207a7
0x00000000000f8744 : mov edi, 0x2000004 ; call rax
0x00000000000edea0 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000677e4 : mov edi, 0x2e ; call 0xf3aa7
0x0000000000188aba : mov edi, 0x41380e0a ; ret
0x000000000005ee53 : mov edi, 0x8348ffff ; ret 0xb908
0x0000000000042f4f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00000000000613c1 : mov edi, 0x89000002 ; ret 0x348
0x000000000006bd57 : mov edi, 0xe0 ; call rax
0x000000000006bd1b : mov edi, 0xe0 ; jmp rax
0x0000000000085019 : mov edi, 0xf48000a ; ret 0xc3f3
0x000000000017c281 : mov edi, 0xff500000 ; out dx, al ; call rax
0x0000000000058d68 : mov edi, 0xfffb1085 ; jmp qword ptr [rax]
0x00000000000e22a8 : mov edi, 0xffffff9c ; syscall
0x00000000000bb0f9 : mov edi, 0xffffffff ; mov dword ptr fs:[rdx], eax ; jmp 0xbb0d7
0x00000000000e5390 : mov edi, 1 ; call 0xe1e37
0x0000000000066c5c : mov edi, 1 ; jmp 0x66c2c
0x0000000000003d8a : mov edi, cs ; retf
0x000000000017f02d : mov edi, dr0 ; jmp rax
0x00000000000fccf9 : mov edi, dword ptr [0x300] ; call 0x128fa9
0x0000000000106927 : mov edi, dword ptr [rax] ; call 0xe2c23
0x0000000000106927 : mov edi, dword ptr [rax] ; call 0xe2c24
0x00000000000abd24 : mov edi, dword ptr [rax] ; call r14
0x0000000000113c6b : mov edi, dword ptr [rbp + 0x28] ; mov rsi, rbx ; call 0x206e8
0x00000000000e63b1 : mov edi, dword ptr [rbp + 0x3c] ; call 0xe2e55
0x00000000000db9b9 : mov edi, dword ptr [rbp - 0x198] ; call rbx
0x00000000000c3cf6 : mov edi, dword ptr [rbp - 0x1e8] ; call 0x207b0
0x00000000000c26f2 : mov edi, dword ptr [rbp - 0x308] ; call r15
0x0000000000049477 : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000054b0c : mov edi, dword ptr [rbp - 0x8c0] ; call rax
0x00000000000c3bcf : mov edi, dword ptr [rbx + 0x20] ; call 0x205e5
0x00000000000e15fc : mov edi, dword ptr [rdi + 0x10] ; mov edx, dword ptr [r15 + 0x1c] ; mov eax, ecx ; syscall
0x0000000000119e51 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x119e69 ; ret
0x000000000011ea91 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11eaa9 ; ret
0x000000000004342a : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006bd56 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006bd1a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000063c13 : mov edi, dword ptr [rdi + rcx*8] ; jmp 0x63bdf
0x000000000002b424 : mov edi, dword ptr [rdi] ; syscall
0x00000000000fb5d4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000168c26 : mov edi, dword ptr [rdx] ; ret
0x00000000000b441c : mov edi, dword ptr [rsi + 0x40] ; mov r15, rbx ; call 0x206e8
0x00000000000e02ff : mov edi, dword ptr [rsp + 0x10] ; call 0xdce06
0x00000000000ec5b5 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000e0325 : mov edi, dword ptr [rsp + 0x10] ; xor esi, esi ; call 0xdce08
0x00000000000bbfbf : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000241d4 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002496e : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025210 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x0000000000024b63 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000024de0 : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000002456b : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000026976 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026191 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000025d2a : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000027fc4 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x000000000002552a : mov edi, dword ptr [rsp + 0x48] ; call r15
0x0000000000114b39 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x000000000007979b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000fd47f : mov edi, dword ptr [rsp + 8] ; mov eax, 0xe6 ; syscall
0x000000000003272b : mov edi, dword ptr [rsp + 8] ; mov eax, 2 ; syscall
0x00000000000350ee : mov edi, dword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x00000000000eda37 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000079256 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000035cf6 : mov edi, dword ptr [rsp] ; call r14
0x0000000000034f95 : mov edi, dword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000011d08d : mov edi, eax ; call qword ptr [r10]
0x00000000000824f7 : mov edi, eax ; call rax
0x0000000000068364 : mov edi, eax ; jmp 0x64e5f
0x000000000004890d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x48901 ; mov rax, rsi ; ret
0x00000000000bf901 : mov edi, eax ; mov eax, 0x22 ; syscall
0x00000000000f0100 : mov edi, eax ; mov eax, 0x3c ; syscall
0x00000000000e1ee4 : mov edi, eax ; mov eax, 0x85 ; syscall
0x00000000000341a9 : mov edi, eax ; mov eax, 0xba ; syscall
0x00000000000e86b3 : mov edi, eax ; mov eax, 1 ; syscall
0x00000000000c1448 : mov edi, eax ; mov eax, 3 ; syscall
0x00000000000ee040 : mov edi, eax ; mov eax, r12d ; syscall
0x0000000000034640 : mov edi, eax ; mov eax, r9d ; syscall
0x0000000000113314 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000ed95e : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x0000000000037f00 : mov edi, eax ; sub rsi, r8 ; mov eax, r10d ; syscall
0x00000000000e84b6 : mov edi, eax ; xor eax, eax ; syscall
0x000000000011fc1b : mov edi, ebp ; add rbx, r12 ; call r14
0x0000000000158db0 : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x00000000000f44d2 : mov edi, ebp ; call 0x207ac
0x0000000000047d70 : mov edi, ebp ; call 0x43fe4
0x00000000001269d7 : mov edi, ebp ; call 0xe2cd3
0x00000000001269d7 : mov edi, ebp ; call 0xe2cd4
0x00000000000fade0 : mov edi, ebp ; call 0xf7844
0x000000000011585e : mov edi, ebp ; call qword ptr [rbx]
0x00000000000c8a29 : mov edi, ebp ; call r12
0x000000000011387d : mov edi, ebp ; call r14
0x000000000002df33 : mov edi, ebp ; call rax
0x00000000000a0256 : mov edi, ebp ; call rbx
0x0000000000120c11 : mov edi, ebp ; call rcx
0x0000000000115415 : mov edi, ebp ; call rdx
0x00000000001140d5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000113f16 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000f027f : mov edi, ebp ; mov dword ptr [rsp + 0xc], eax ; call 0xfcd18
0x00000000000e2ee1 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x00000000000297b2 : mov edi, ebp ; mov eax, 3 ; syscall
0x00000000000eb13a : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000002f8a7 : mov edi, ebp ; mov eax, r10d ; syscall
0x00000000000755c7 : mov edi, ebp ; mov eax, r12d ; syscall
0x000000000002287f : mov edi, ebp ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000119582 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000011938a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c8a52 : mov edi, ebp ; mov rsi, rbx ; call r12
0x00000000000afd1d : mov edi, ebp ; sub rsp, 8 ; call r12
0x0000000000114d6d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000073cc1 : mov edi, ebp ; xor r13d, r13d ; call 0x207af
0x0000000000032d7b : mov edi, ebx ; add rsi, rbp ; mov eax, r8d ; syscall
0x00000000000ab272 : mov edi, ebx ; call 0x127cf4
0x00000000000e438d : mov edi, ebx ; call 0x205e4
0x00000000000b4420 : mov edi, ebx ; call 0x206e4
0x00000000000e4527 : mov edi, ebx ; call 0x20734
0x0000000000083cd3 : mov edi, ebx ; call 0x207a4
0x000000000010bf8e : mov edi, ebx ; call 0x38a44
0x00000000000fe9df : mov edi, ebx ; call 0x4b3f4
0x00000000000e9033 : mov edi, ebx ; call 0x85324
0x000000000007ba05 : mov edi, ebx ; call qword ptr [r14]
0x00000000000c1f85 : mov edi, ebx ; call qword ptr [r15]
0x0000000000115c88 : mov edi, ebx ; call qword ptr [rax]
0x00000000000296a7 : mov edi, ebx ; call r12
0x00000000000221a7 : mov edi, ebx ; call r14
0x000000000006a871 : mov edi, ebx ; call r8
0x000000000006a518 : mov edi, ebx ; call rax
0x000000000010fc7d : mov edi, ebx ; jne 0x10fc76 ; pop rbx ; ret
0x000000000015929b : mov edi, ebx ; jne 0x159290 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd1b5 : mov edi, ebx ; jne 0xcd1e6 ; call 0xc9476
0x00000000000ce391 : mov edi, ebx ; mov byte ptr [rsp + 0x38], 0xa ; call 0xca689
0x00000000000e6868 : mov edi, ebx ; mov eax, 0x10f ; syscall
0x0000000000037e88 : mov edi, ebx ; mov eax, 0x13e ; syscall
0x00000000000eb2b8 : mov edi, ebx ; mov eax, 0x1a ; syscall
0x00000000000bf98f : mov edi, ebx ; mov eax, 0x23 ; syscall
0x00000000000e2ddd : mov edi, ebx ; mov eax, 0x55 ; syscall
0x00000000000345bd : mov edi, ebx ; mov eax, 0x82 ; syscall
0x00000000000bf7f7 : mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000003279d : mov edi, ebx ; mov eax, 3 ; syscall
0x00000000000e6798 : mov edi, ebx ; mov eax, 7 ; syscall
0x000000000012788b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000050c7a : mov edi, ebx ; mov rdx, r13 ; call 0x6cf67
0x00000000000f7c59 : mov edi, ebx ; mov rdx, r15 ; mov rsi, r13 ; call r14
0x0000000000113d02 : mov edi, ebx ; pop rbx ; jmp 0x207ad
0x000000000006d9a5 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000000701af : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007724a : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000159428 : mov edi, ebx ; test rdi, rdi ; jne 0x159422 ; pop rbx ; ret
0x000000000007cfdc : mov edi, ecx ; mov eax, 3 ; syscall
0x000000000007cfb0 : mov edi, ecx ; mov eax, r8d ; syscall
0x0000000000083198 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000b4354 : mov edi, ecx ; mov qword ptr [rsp + 0x30], r9 ; call 0x205e9
0x00000000000fadc2 : mov edi, edi ; call 0xf7844
0x000000000011e3f0 : mov edi, edi ; call qword ptr [rax]
0x000000000011fcfe : mov edi, edi ; call r14
0x0000000000071d84 : mov edi, edi ; call rax
0x00000000000c070a : mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000c077a : mov edi, edi ; mov eax, 0x6a ; syscall
0x00000000000e7cbc : mov edi, edi ; mov eax, 0x71 ; syscall
0x00000000000e7d2c : mov edi, edi ; mov eax, 0x72 ; syscall
0x00000000000c09ce : mov edi, edi ; mov eax, 0x75 ; syscall
0x00000000000c0a4e : mov edi, edi ; mov eax, 0x77 ; syscall
0x00000000000bf7a2 : mov edi, edi ; mov eax, 0xf7 ; syscall
0x00000000000326d6 : mov edi, edi ; mov eax, 2 ; syscall
0x0000000000125e55 : mov edi, edi ; mov eax, 3 ; syscall
0x000000000002b615 : mov edi, edi ; mov eax, ecx ; syscall
0x000000000007d59f : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000829b3 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000f3c5c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000073034 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000000fcd88 : mov edi, edx ; jmp rax
0x0000000000048991 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x48979 ; mov rax, rsi ; ret
0x00000000000bfd21 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000bfd31 : mov edi, edx ; mov eax, r8d ; syscall
0x00000000000e18e2 : mov edi, edx ; syscall
0x0000000000023bdb : mov edi, esi ; call 0x205f4
0x00000000001044b5 : mov edi, esi ; call 0x207ac
0x0000000000074fee : mov edi, esi ; call 0x212a4
0x000000000007f6c8 : mov edi, esi ; call 0x7c1c4
0x000000000007d7c6 : mov edi, esi ; call qword ptr [rax]
0x00000000001148b8 : mov edi, esi ; call rax
0x000000000007f5dc : mov edi, esi ; mov qword ptr [rsp + 0x18], r10 ; call 0x7b849
0x0000000000114b1a : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000023ce3 : mov edi, esp ; call 0x20734
0x00000000000c3ca9 : mov edi, esp ; call 0x207ac
0x000000000006adc9 : mov edi, esp ; call 0x570c4
0x0000000000035dfd : mov edi, esp ; call r14
0x0000000000082b98 : mov edi, esp ; call rax
0x0000000000072d89 : mov edi, esp ; call rbx
0x000000000011fe11 : mov edi, esp ; call rdx
0x00000000000f1f61 : mov edi, esp ; mov eax, 0x14 ; syscall
0x00000000000f1e7e : mov edi, esp ; mov eax, 1 ; syscall
0x00000000000f2285 : mov edi, esp ; mov eax, 2 ; syscall
0x000000000002b4b9 : mov edi, esp ; mov eax, 3 ; syscall
0x000000000002b6ea : mov edi, esp ; mov eax, r10d ; syscall
0x00000000000a08fa : mov edi, esp ; mov r9, r15 ; call rbx
0x00000000000f816c : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000002b6a2 : mov edi, esp ; xor eax, eax ; syscall
0x00000000000bf5b9 : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000007f397 : mov edx, 0x11d7 ; call 0x7b627
0x000000000007f3e2 : mov edx, 0x121f ; call 0x7b627
0x000000000007f3b6 : mov edx, 0x1243 ; call 0x7b627
0x00000000000765b6 : mov edx, 0x130 ; pop rbx ; ret
0x00000000000e0a8e : mov edx, 0x18c ; call 0x2cce7
0x0000000000133117 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000012def4 : mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x000000000012df12 : mov edx, 0x4f7f0ff3 ; retf -0x76b4
0x000000000018cb6d : mov edx, 0x81c00000 ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000001b0e : mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x00000000000e3772 : mov edx, 0x85ffffe6 ; ror byte ptr [rdi], 0x88 ; ret 1
0x00000000000a028f : mov edx, 0x86 ; call 0x2cce7
0x00000000000e4a71 : mov edx, 0x8d49fff3 ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000011021c : mov edx, 0xb7 ; call 0x2cce7
0x00000000001101fd : mov edx, 0xb9 ; call 0x2cce7
0x0000000000023ff7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000000f5d98 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x00000000001204bf : mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000004c81c : mov edx, 1 ; jmp rax
0x000000000004b905 : mov edx, 1 ; xor esi, esi ; jmp rax
0x0000000000120ca4 : mov edx, 5 ; call 0x2d6b7
0x0000000000021e68 : mov edx, 8 ; mov eax, edx ; ret
0x00000000000e15ff : mov edx, dword ptr [r15 + 0x1c] ; mov eax, ecx ; syscall
0x00000000000753a5 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000bfb54 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb69 ; call rdx
0x0000000000021067 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000fbf99 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000fbe70 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000fbb18 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000fbff7 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000fc3e5 : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000014738f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000145abd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000e1600 : mov edx, dword ptr [rdi + 0x1c] ; mov eax, ecx ; syscall
0x0000000000073266 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000000fcd81 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000014e4c2 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x14e4b2 ; ret
0x000000000009fd65 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000083455 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x83459 ; ret
0x0000000000159010 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x159022 ; call rdx
0x00000000000fbf17 : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000ca5a7 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x0000000000098df2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000098de3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000098e33 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ae85d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xae846 ; ret
0x0000000000098e43 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000012d8d1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000012dc90 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d521 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009a3c0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009b200 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000098dc0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000009ce30 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009a411 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009b251 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000098e01 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009a3a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009b1d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000098da1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000f8740 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00000000000f863c : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000113c31 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000010c023 : mov edx, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000f00e6 : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x00000000000db303 : mov edx, dword ptr [rsp] ; mov rsi, r15 ; call rbx
0x000000000006e1ef : mov edx, eax ; je 0x6e207 ; mov eax, edx ; pop rbx ; ret
0x00000000000f8173 : mov edx, eax ; jmp rcx
0x00000000000e8317 : mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000000e83c7 : mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000000e2c67 : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000732b3 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000000ed9e0 : mov edx, eax ; mov eax, r12d ; syscall
0x000000000002b69f : mov edx, eax ; mov rdi, r12 ; xor eax, eax ; syscall
0x000000000010c105 : mov edx, eax ; ret
0x000000000012822e : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000839c5 : mov edx, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000050c7d : mov edx, ebp ; call 0x6cf64
0x00000000000fc3ec : mov edx, ebp ; call rax
0x00000000000824f4 : mov edx, ebp ; mov rdi, r8 ; call rax
0x00000000000a0392 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x00000000000fe3de : mov edx, ebp ; mov rsi, r12 ; call 0x7ae57
0x00000000001166db : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ab28a : mov edx, ebp ; mov rsi, r14 ; call rbx
0x00000000000fbb1f : mov edx, ebx ; call rax
0x0000000000159727 : mov edx, ebx ; jne 0x15971e ; pop rbx ; ret
0x00000000001165d5 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000829b6 : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000082b92 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000772c3 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000083a20 : mov edx, ebx ; pop rbx ; pop rbp ; ret
0x00000000000e3701 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x00000000000e1fa1 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x00000000000e3dd1 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x00000000000e3e91 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000000e0bfa : mov edx, ecx ; mov eax, 0x11 ; syscall
0x00000000000f0c61 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x00000000000e0c5a : mov edx, ecx ; mov eax, 0x12 ; syscall
0x00000000000e7b9a : mov edx, ecx ; mov eax, 0x127 ; syscall
0x00000000000e7bfa : mov edx, ecx ; mov eax, 0x128 ; syscall
0x00000000000f0721 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x00000000000f0371 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x00000000000f0cf1 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x00000000000f0d51 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000000f0d81 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000000f0a81 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000000e6cf1 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x00000000000f14d1 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x00000000000f1441 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000000f0fa1 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000bf761 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x00000000000f0b11 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x00000000000f0a51 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x00000000000f0931 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x00000000000f0b41 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x00000000000f0b71 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x0000000000124fe1 : mov edx, ecx ; mov eax, 0xb5 ; syscall
0x0000000000125031 : mov edx, ecx ; mov eax, 0xb6 ; syscall
0x00000000000ee351 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x00000000000ee2f1 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x00000000000ee1d1 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x00000000000ee201 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x00000000000ee261 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x00000000000ee141 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x00000000000eb361 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000000f08d1 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x00000000000477f4 : mov edx, ecx ; mov qword ptr [rsp + 0x38], r11 ; call 0x44259
0x00000000000c3c6f : mov edx, edi ; call 0x20714
0x000000000018dca9 : mov edx, edi ; call qword ptr [rax]
0x0000000000170845 : mov edx, edi ; call rax
0x0000000000170841 : mov edx, edi ; inc eax ; mov edx, edi ; call rax
0x00000000000f7c5c : mov edx, edi ; mov rsi, r13 ; call r14
0x00000000001052ff : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000009dda8 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000037e3a : mov edx, edx ; mov eax, 0x13e ; syscall
0x00000000000fbfa0 : mov edx, esi ; call rax
0x00000000000e6aae : mov edx, esi ; mov eax, 0x11d ; xor esi, esi ; syscall
0x00000000000e6cb0 : mov edx, esi ; xor esi, esi ; syscall
0x00000000000fbffe : mov edx, esp ; call rax
0x00000000000e0439 : mov edx, esp ; mov rsi, rbp ; call 0xdceb7
0x00000000000d8f11 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000189f4d : mov es, word ptr [rax] ; add byte ptr [rax], dl ; shr esi, cl ; call qword ptr [rax]
0x00000000000f3ad9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000199fb5 : mov es, word ptr [rcx] ; add byte ptr [rax - 0xe], ch ; cmc ; jmp qword ptr [rcx]
0x000000000017e0a9 : mov es, word ptr [rcx] ; add byte ptr [rax], dh ; in al, dx ; cmc ; call rax
0x000000000018a38e : mov es, word ptr [rdx] ; add bl, byte ptr [rdx + 0xa] ; ret
0x0000000000180f39 : mov es, word ptr [rdx] ; add byte ptr [rax - 0x29], dl ; std ; jmp rax
0x0000000000004cb0 : mov es, word ptr [rip] ; add byte ptr [rax], al ; ret
0x00000000000a2d47 : mov es, word ptr [rsi + rax + 0x568d0000] ; retf
0x000000000009b01e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000f7c11 : mov esi, 0x14be0f41 ; and al, 0x39 ; ret 0xb575
0x0000000000031c09 : mov esi, 0x24448b48 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000008a886 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x0000000000081fb9 : mov esi, 0x3948feda ; ret 0x2f74
0x00000000000c7c28 : mov esi, 0x3948ff50 ; mov byte ptr [rsi - 0x73], 0xc ; retf -0x108b
0x000000000004c42d : mov esi, 0x3d8d48c2 ; retf 0x11ea
0x00000000000aef6e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000169be6 : mov esi, 0x497b96cc ; retf -0x6620
0x0000000000169c83 : mov esi, 0x6400fd4c ; retf 0xf64
0x0000000000167d6a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000008a8b1 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000008a771 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000f7d33 : mov esi, 0x75c9840a ; out -0xd, eax ; ret
0x000000000008a8d5 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000000fcd58 : mov esi, 0x80 ; syscall
0x0000000000126988 : mov esi, 0x80002 ; mov eax, ecx ; syscall
0x000000000005f345 : mov esi, 0x8348ffff ; ret 0xbe08
0x000000000003f0ac : mov esi, 0x8349015b ; ret
0x000000000008a7ee : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x000000000008225f : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000bd8fc : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000840ff : mov esi, 0x8c48348 ; ret
0x00000000000ecf54 : mov esi, 0xa ; jmp 0x791f7
0x000000000003d06e : mov esi, 0xbe0f0055 ; ret 0x8348
0x000000000008a92d : mov esi, 0xc0844507 ; jne 0x8a919 ; xor eax, eax ; ret
0x00000000001668be : mov esi, 0xc2c1c0bf ; ret
0x00000000000f7ab0 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000016dccc : mov esi, 0xc8fff539 ; cmp ebp, esi ; call rdx
0x000000000016dd30 : mov esi, 0xc8fff53a ; cmp dh, ch ; call rdx
0x000000000016ddf0 : mov esi, 0xc8fff53c ; cmp al, 0xf5 ; call rdx
0x000000000008a795 : mov esi, 0xc984070c ; jne 0x8a790 ; ret
0x0000000000003d87 : mov esi, 0xcf8cb236 ; retf
0x000000000008a751 : mov esi, 0xd2840714 ; jne 0x8a750 ; ret
0x000000000009dec4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000008a825 : mov esi, 0xf2390714 ; je 0x8a828 ; ret
0x0000000000002c51 : mov esi, 0xf8cbeb8f ; ret
0x000000000017c261 : mov esi, 0xf9f00000 ; out dx, al ; jmp rax
0x000000000017c269 : mov esi, 0xfb500000 ; out dx, al ; jmp qword ptr [rax]
0x00000000001053f6 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x00000000000d97e0 : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000004c878 : mov esi, 1 ; jmp rax
0x000000000006a86b : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006a512 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000ec355 : mov esi, 2 ; jmp rax
0x00000000000ec36b : mov esi, 3 ; jmp rax
0x0000000000126782 : mov esi, 7 ; xor eax, eax ; call 0xe29f9
0x000000000017e485 : mov esi, dr0 ; jmp qword ptr [rax]
0x000000000016a467 : mov esi, dr1 ; jrcxz 0x16a44f ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x00000000000ee98e : mov esi, dword ptr [rax - 0x17000000] ; retf
0x0000000000035cf2 : mov esi, dword ptr [rbp] ; mov rdi, qword ptr [r12] ; call r14
0x0000000000083369 : mov esi, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000bb01d : mov esi, dword ptr [rdx] ; syscall
0x00000000001269d1 : mov esi, dword ptr [rip + 0x285a39] ; mov edi, ebp ; call 0xe2cd9
0x00000000000625c7 : mov esi, dword ptr [rip + 0x349993] ; call rax
0x000000000005a907 : mov esi, dword ptr [rip + 0x351653] ; call rax
0x000000000005a253 : mov esi, dword ptr [rip + 0x351d07] ; call rax
0x0000000000057347 : mov esi, dword ptr [rip + 0x354c13] ; call rax
0x000000000004e6db : mov esi, dword ptr [rip + 0x35d87f] ; call rax
0x000000000004b67f : mov esi, dword ptr [rip + 0x3608db] ; call rax
0x00000000000437aa : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000009da83 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000113c36 : mov esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000113878 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000011c392 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call r12
0x0000000000080cc1 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000021e1e : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000000808c1 : mov esi, dword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b00ee : mov esi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000081481 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000024b5e : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000079d79 : mov esi, dword ptr [rsp + 0xc] ; jmp 0x79d47
0x00000000000f8641 : mov esi, dword ptr [rsp + 8] ; call rax
0x0000000000107f99 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000bb01c : mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000113c8b : mov esi, eax ; call 0x206c4
0x0000000000064181 : mov esi, eax ; jmp 0x6414b
0x00000000000e53e8 : mov esi, eax ; mov edi, 1 ; call 0xe1e39
0x000000000012778f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000e043c : mov esi, ebp ; call 0xdceb4
0x00000000000f7c5f : mov esi, ebp ; call r14
0x00000000000829b9 : mov esi, ebp ; call rax
0x00000000001983e9 : mov esi, ebp ; jmp qword ptr [rcx]
0x0000000000047db8 : mov esi, ebp ; mov dword ptr [rsp + 0x28], r10d ; call 0x43fe9
0x00000000000772c6 : mov esi, ebp ; mov eax, r13d ; syscall
0x00000000000e538e : mov esi, ebp ; mov edi, 1 ; call 0xe1e39
0x00000000000bf7f5 : mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x0000000000035dfa : mov esi, ebp ; mov rdi, r12 ; call r14
0x0000000000082b95 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000047d6d : mov esi, ebp ; mov rdi, r13 ; call 0x43fe7
0x00000000000c142e : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000008239b : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000fd376 : mov esi, ebp ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x00000000000e2554 : mov esi, ebp ; movsxd rdi, ebx ; xor eax, eax ; syscall
0x0000000000113c6f : mov esi, ebx ; call 0x206e4
0x00000000000c8a55 : mov esi, ebx ; call r12
0x0000000000126b36 : mov esi, ebx ; mov eax, 1 ; syscall
0x0000000000034ef1 : mov esi, ebx ; mov eax, ecx ; syscall
0x0000000000126743 : mov esi, ebx ; mov eax, r13d ; syscall
0x00000000001267f9 : mov esi, ebx ; mov eax, r8d ; syscall
0x00000000000350eb : mov esi, ebx ; mov rdi, qword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x0000000000034f92 : mov esi, ebx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000f21f2 : mov esi, ebx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000082a9c : mov esi, ebx ; mov rdi, r13 ; call rax
0x00000000000755c4 : mov esi, ebx ; mov rdi, r13 ; mov eax, r12d ; syscall
0x000000000011e3ed : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011fcfb : mov esi, ebx ; mov rdi, r15 ; call r14
0x00000000001253a6 : mov esi, ebx ; mov rdi, r8 ; mov eax, r12d ; syscall
0x000000000011d08a : mov esi, ebx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000c8a26 : mov esi, ebx ; mov rdi, rbp ; call r12
0x0000000000120c0e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000002b2a6 : mov esi, ebx ; movsxd rsi, dword ptr [r8 + rsi*4] ; add rsi, r8 ; jmp rsi
0x00000000000ba578 : mov esi, ebx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x000000000006d1e1 : mov esi, ecx ; mov eax, r8d ; syscall
0x000000000002b6e7 : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x000000000002f8a4 : mov esi, ecx ; mov rdi, rbp ; mov eax, r10d ; syscall
0x00000000000fe9dc : mov esi, ecx ; mov rdi, rbx ; call 0x4b3f7
0x00000000000a6f12 : mov esi, edi ; call 0x43994
0x00000000000653aa : mov esi, edi ; call 0x61e64
0x00000000000db307 : mov esi, edi ; call rbx
0x00000000000e74b5 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000000ec769 : mov esi, edi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000e22a5 : mov esi, edi ; mov rdi, -0x64 ; syscall
0x000000000006adc6 : mov esi, edi ; mov rdi, r12 ; call 0x570c7
0x00000000000ba563 : mov esi, edi ; xor edi, edi ; call rax
0x0000000000119bca : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00000000000fb5d8 : mov esi, edx ; call rax
0x00000000000f7a5f : mov esi, edx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e1dec : mov esi, edx ; mov eax, 4 ; syscall
0x00000000000e1e3b : mov esi, edx ; mov eax, 5 ; syscall
0x00000000000e1e8c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000001bf7 : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000b82c4 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000ab28d : mov esi, esi ; call rbx
0x00000000000e2d9a : mov esi, esi ; mov eax, 0x55 ; syscall
0x00000000000e7cba : mov esi, esi ; mov edi, edi ; mov eax, 0x71 ; syscall
0x00000000000e7d2a : mov esi, esi ; mov edi, edi ; mov eax, 0x72 ; syscall
0x00000000000c09cc : mov esi, esi ; mov edi, edi ; mov eax, 0x75 ; syscall
0x00000000000c0a4c : mov esi, esi ; mov edi, edi ; mov eax, 0x77 ; syscall
0x00000000000bf7a0 : mov esi, esi ; mov edi, edi ; mov eax, 0xf7 ; syscall
0x0000000000049474 : mov esi, esi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x00000000000eda34 : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x00000000000ab402 : mov esi, esi ; mov rdi, r12 ; call rbx
0x0000000000105302 : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000011c064 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000e77f5 : mov esi, esi ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000000c1129 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001190e4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000b825e : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x00000000000fe3e1 : mov esi, esp ; call 0x7ae54
0x000000000011ffb5 : mov esi, esp ; call qword ptr [rax]
0x0000000000194421 : mov esi, esp ; call rdi
0x00000000001165d8 : mov esi, esp ; mov rdi, rbp ; call rax
0x0000000000115c85 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000701ac : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000000387b : mov esi, fs ; mov al, 0x85 ; jbe 0x382e ; outsb dx, byte ptr [rsi] ; retf
0x000000000018ff44 : mov esi, gs ; add byte ptr [rax], al ; mov bl, bh ; int1 ; call qword ptr [rcx]
0x00000000000653a9 : mov esi, r15d ; call 0x61e65
0x0000000000197d74 : mov esp, 0x1800016c ; test dh, ch ; jmp qword ptr [rcx]
0x0000000000197e74 : mov esp, 0x2800016d ; test esi, ebp ; jmp qword ptr [rcx]
0x000000000018e6d9 : mov esp, 0x41280e0a ; ret
0x0000000000085097 : mov esp, 0x440f48c7 ; ret 0xc083
0x000000000011e6a1 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000008e101 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008e131 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008e121 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000186474 : mov esp, 0x48000053 ; scasd eax, dword ptr [rdi] ; in al, dx ; call qword ptr [rcx]
0x0000000000195274 : mov esp, 0x68000141 ; fdiv st(4) ; jmp qword ptr [rcx]
0x00000000000cd0de : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x000000000019a374 : mov esp, 0x8000192 ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000019d074 : mov esp, 0x80001bf ; retf
0x0000000000062532 : mov esp, 0x85fffffa ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000010dfd3 : mov esp, 0x8824 ; add al, ch ; retf -0xed9
0x0000000000066e5e : mov esp, 0x89fffffa ; ret
0x0000000000079de2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000114190 : mov esp, 0x8d4c0000 ; and al, 0x18 ; call qword ptr [rax]
0x0000000000191774 : mov esp, 0x98000106 ; sal dl, 1 ; call rsi
0x0000000000198074 : mov esp, 0x9800016f ; xchg ebp, esi ; jmp qword ptr [rcx]
0x0000000000194f74 : mov esp, 0xa800013e ; sal esp, 1 ; jmp qword ptr [rcx]
0x0000000000196374 : mov esp, 0xb8000152 ; sbb esi, ebp ; jmp qword ptr [rbx]
0x0000000000085086 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000994d5 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x0000000000191f74 : mov esp, 0xc800010e ; jmp qword ptr [rdi]
0x000000000019a074 : mov esp, 0xc800018f ; clc ; cmc ; call qword ptr [rdx]
0x0000000000093ca3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000196774 : mov esp, 0xd8000156 ; and dh, ch ; jmp rdx
0x000000000017c219 : mov esp, 0xe3900000 ; out dx, al ; call rax
0x0000000000001ecc : mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x0000000000195474 : mov esp, 0xf8000143 ; loope 0x195476 ; jmp qword ptr [rcx]
0x000000000008e1eb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008e111 : mov esp, 0xf80148c0 ; ret
0x00000000001499c2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x000000000016d789 : mov esp, dr0 ; jmp qword ptr [rbx + 0x22fff4a2]
0x000000000011037d : mov esp, dword ptr [rsi - 0x70] ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000033fe9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000000c011f : mov esp, ebx ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000005dd28 : mov esp, edx ; mov ebx, 2 ; jmp 0x5a819
0x00000000000ec307 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000007b9e8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x000000000018e544 : mov esp, ss ; add byte ptr [rax], al ; or ch, bh ; sti ; call qword ptr [rbx]
0x000000000017c0dd : mov gs, ebp ; jmp qword ptr [rax]
0x0000000000168064 : mov gs, ebp ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x1680d7 ; salc ; retf
0x0000000000182581 : mov gs, edx ; jmp rdi
0x0000000000168063 : mov gs, r13d ; lodsb al, byte ptr [rsi] ; xchg eax, edi ; jo 0x1680d8 ; salc ; retf
0x00000000000038cd : mov gs, word ptr [rbx] ; retf 0x707d
0x00000000001078d7 : mov gs, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000010b3d0 : mov qword ptr [r11], rcx ; add rsp, 0x10 ; ret
0x00000000000823a9 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcfa8 : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000001518d0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000010bce7 : mov qword ptr [r9], r10 ; ret
0x000000000010bd28 : mov qword ptr [r9], rdi ; ret
0x000000000006fde8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006fe28 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000703c8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000753a8 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000ca5aa : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000ca5dc : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000006fdec : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000070466 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000159d3e : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000079b4a : mov qword ptr [rax + 8], 0 ; ret
0x00000000000b0ff8 : mov qword ptr [rax + 8], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e7933 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000010dc61 : mov qword ptr [rax], 0 ; ret
0x000000000010bae9 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000006e6c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000080675 : mov qword ptr [rax], rdi ; ret
0x000000000002ca72 : mov qword ptr [rax], rdx ; ret
0x0000000000070aa0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000edb9b : mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000000edb97 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x00000000000665b2 : mov qword ptr [rbp - 0x568], rax ; jmp 0x63066
0x00000000000fc292 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r14 ; call rax
0x00000000000afd85 : mov qword ptr [rbp], rbx ; call r12
0x0000000000037069 : mov qword ptr [rbp], rdx ; call rax
0x0000000000029e50 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000076556 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000127db5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000076fe8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000127d6d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000074ac4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000120e08 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d766a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000b1339 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000753d4 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008319d : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000791da : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000008342c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec0d1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000127f70 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011dcae : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000e5096 : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000830e5 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000081e9c : mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000008319a : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000119113 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000013e3d3 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e3e3 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e3f3 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e403 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000ca6f1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000733fd : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000013e390 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000013e3b0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000013e3c0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000013e3d0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000013e3e0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000013e3f0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000013e400 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000013e3a0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013e380 : mov qword ptr [rcx], rdx ; ret
0x00000000000e1b5a : mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000441ee : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009a5dc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009b43c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000098f6c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000098f4c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009d06c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000099c3f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x0000000000098faf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000098fcf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000098f90 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000790d2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000075776 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000120a65 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000011655d : mov qword ptr [rdi + 0x20], rcx ; ret
0x000000000011c0db : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000011c093 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x0000000000079102 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000034b98 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000e109d : mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000009a59c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009b3fc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000098f0c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009d02c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009a5bc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009b41c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000098f2c : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009d04c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000133747 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001336d7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000133667 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001335f7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009a49a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009b2ea : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000133587 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098e5a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000009cf1a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009a4ba : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009b30a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000133517 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098e6a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000009cf3a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009a4da : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009b32a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001334a7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000098e7a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000009cf5a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e9a67 : mov qword ptr [rdi + 8], 0 ; ret
0x00000000000439e3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000044173 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000000454dd : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000116d1a : mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x00000000000790d6 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000073e7b : mov qword ptr [rdi + 8], rcx ; movzx edx, byte ptr [rax] ; mov eax, edx ; ret
0x0000000000037713 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000075f0e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000037704 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000e9a57 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000010be37 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000009de8a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x000000000009da76 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000012d3b4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d3f2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000440de : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000012d73b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132f57 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012d91b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132ed7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012db0b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132e57 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012dcdc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132dc8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012dedc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132d38 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012e0dc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000132ca8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000099dc0 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000044069 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000012d3b8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000012d3f6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000012d56b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d667 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012d5b3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000132fd7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000053405 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044038 : mov qword ptr [rdi], r9 ; ret
0x000000000008ab3d : mov qword ptr [rdi], rax ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x00000000000e9a54 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004882a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000010fd2e : mov qword ptr [rdi], rax ; ret
0x0000000000037717 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000009a426 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000099ae6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000098e36 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000098e46 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000098e57 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000098e67 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000098e77 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000098e27 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000054220 : mov qword ptr [rdi], rcx ; ret
0x000000000014e36e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000009a413 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009b253 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000099de0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000099e00 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000099e10 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000099e20 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000099e30 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000116d17 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 8], rax ; pop rbx ; ret
0x0000000000083975 : mov qword ptr [rdi], rdx ; mov rax, r8 ; ret
0x0000000000099df0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008a68f : mov qword ptr [rdi], rdx ; ret
0x000000000009ce83 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000838c0 : mov qword ptr [rdi], rsi ; mov eax, 1 ; ret
0x00000000001518cd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000452f2 : mov qword ptr [rdi], rsi ; ret
0x000000000006bc36 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00000000000765b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000006f27d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006f423 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000115cff : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000007c4b1 : mov qword ptr [rdx + 0x40], rcx ; add byte ptr [rax + rsi], 1 ; ret
0x0000000000115cdb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000115cdf : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014078a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013c3fa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001407aa : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000013c41a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001407ca : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000013c43a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006924a : mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000014065a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000013c32a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000119130 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000010dbfd : mov qword ptr [rdx + rax*8], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140603 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001191fa : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013c2d3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002d23c : mov qword ptr [rdx], rax ; ret
0x000000000007417b : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008443d : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008a5d4 : mov qword ptr [rdx], rcx ; ret
0x00000000000ec49f : mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000000d6dea : mov qword ptr [rdx], rdi ; ret
0x000000000011912d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000128969 : mov qword ptr [rip + 0x285f88], rsi ; xor eax, eax ; ret
0x00000000000fd5b7 : mov qword ptr [rip + 0x2b2c82], rax ; pop rbp ; ret
0x00000000000f258f : mov qword ptr [rip + 0x2b9daa], rbx ; pop rbx ; ret
0x000000000007b313 : mov qword ptr [rip + 0x330fae], rax ; ret
0x000000000007b303 : mov qword ptr [rip + 0x330fb6], rax ; ret
0x000000000007b2f1 : mov qword ptr [rip + 0x330fb8], rdx ; ret
0x000000000007b2b3 : mov qword ptr [rip + 0x330fbe], rax ; ret
0x000000000007b28d : mov qword ptr [rip + 0x330fcc], rax ; ret
0x000000000007b2a3 : mov qword ptr [rip + 0x330fd6], rax ; ret
0x000000000007b25d : mov qword ptr [rip + 0x331004], rax ; ret
0x000000000002bc7c : mov qword ptr [rip + 0x381ea5], rax ; mov eax, ecx ; syscall
0x00000000000d7983 : mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000114ede : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000037d15 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000ca66b : mov qword ptr [rsi + 0x18], rdx ; mov dword ptr [rsi + 0x38], eax ; xor eax, eax ; ret
0x0000000000037681 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000738e1 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rax], dil ; mov eax, edx ; ret
0x0000000000075ee5 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000e6e32 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000709c4 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e100e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000d7966 : mov qword ptr [rsi + 8], 0 ; ret
0x0000000000114eae : mov qword ptr [rsi + 8], rax ; ret
0x00000000000d797f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000007b4d3 : mov qword ptr [rsi], rax ; mov rax, r10 ; ret
0x000000000007577a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000010b1c2 : mov qword ptr [rsi], rdi ; ret
0x0000000000100dd0 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000035d38 : mov qword ptr [rsp + 0x10], r9 ; call r14
0x000000000007d976 : mov qword ptr [rsp + 0x10], rdx ; call rdi
0x000000000007d8b0 : mov qword ptr [rsp + 0x10], rdx ; xor edi, edi ; call qword ptr [rax]
0x000000000007f5de : mov qword ptr [rsp + 0x18], r10 ; call 0x7b847
0x000000000007d5a1 : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000d3d9b : mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x000000000007d905 : mov qword ptr [rsp + 0x28], rdx ; call rax
0x00000000000b4356 : mov qword ptr [rsp + 0x30], r9 ; call 0x205e7
0x00000000000477f6 : mov qword ptr [rsp + 0x38], r11 ; call 0x44257
0x00000000000a7d42 : mov qword ptr [rsp + 8], r10 ; call 0x43fe7
0x000000000008314f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000120edb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000071d7e : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x00000000000f0087 : mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000000debdd : mov qword ptr [rsp], r10 ; call 0x6adf6
0x0000000000076aaa : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000011dc5e : mov qword ptr fs:[rax], rdx ; ret
0x0000000000037068 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000011dcad : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002d23b : mov qword ptr fs:[rdx], rax ; ret
0x000000000009da75 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000e3700 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x00000000000e3dd0 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x00000000000e3e90 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000000e0bf9 : mov r10, rcx ; mov eax, 0x11 ; syscall
0x00000000000f0c60 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x00000000000e0c59 : mov r10, rcx ; mov eax, 0x12 ; syscall
0x00000000000e7b99 : mov r10, rcx ; mov eax, 0x127 ; syscall
0x00000000000e7bf9 : mov r10, rcx ; mov eax, 0x128 ; syscall
0x00000000000f0720 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000000f0370 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x00000000000f0cf0 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000000f0d50 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000000f0d80 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000f0a80 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000e6cf0 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000f14d0 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x00000000000f1440 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000000f0fa0 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000bf760 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x00000000000f0b10 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x00000000000f0a50 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x00000000000f0930 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x00000000000f0b40 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000f0b70 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x0000000000124fe0 : mov r10, rcx ; mov eax, 0xb5 ; syscall
0x0000000000125030 : mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000ee350 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x00000000000ee2f0 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x00000000000ee1d0 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x00000000000ee200 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000ee260 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000000ee140 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000eb360 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000000f08d0 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x0000000000133116 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000012df11 : mov r10d, 0x4f7f0ff3 ; retf -0x76b4
0x000000000010dbbe : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x0000000000133196 : mov r11d, 0x46f00ff2 ; retf
0x000000000012dd11 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000004c667 : mov r11d, 1 ; jmp rax
0x000000000007b9e7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x00000000000ec306 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000007b9ec : mov r13, rdx ; call qword ptr [r14]
0x000000000005a98b : mov r13d, 0x870f2b3c ; ret
0x00000000000661c0 : mov r13d, 2 ; jmp 0x62468
0x0000000000113c8a : mov r14, rax ; call 0x206c5
0x0000000000064180 : mov r14d, eax ; jmp 0x6414c
0x00000000000ec768 : mov r14d, r15d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000b441f : mov r15, rbx ; call 0x206e5
0x00000000000b441e : mov r15, rbx ; call 0x206e6
0x0000000000068363 : mov r15d, eax ; jmp 0x64e60
0x00000000000eaf4f : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000e9afb : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000010c1a0 : mov r8d, 0x7fffffff ; mov eax, r8d ; ret
0x0000000000057eb2 : mov r8d, 1 ; jmp rax
0x00000000001286a9 : mov r9, qword ptr [rsp + 0x20] ; call r9
0x00000000000eaf52 : mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000021e22 : mov r9, r14 ; call rbx
0x00000000000a08fc : mov r9, r15 ; call rbx
0x00000000000ab286 : mov r9, r15 ; mov rdx, r13 ; mov rsi, r14 ; call rbx
0x00000000000bf5eb : mov rax, -0xe ; ret
0x00000000000f05ff : mov rax, -1 ; jmp 0xf05db
0x00000000000f116f : mov rax, -1 ; jmp 0xf114b
0x00000000000f1437 : mov rax, -1 ; jmp 0xf1413
0x00000000000340d6 : mov rax, -1 ; ret
0x0000000000034250 : mov rax, 0xf ; syscall
0x00000000000af560 : mov rax, 1 ; ret
0x00000000000af570 : mov rax, 2 ; ret
0x00000000000af580 : mov rax, 3 ; ret
0x00000000000af590 : mov rax, 4 ; ret
0x00000000000af5a0 : mov rax, 5 ; ret
0x00000000000af5b0 : mov rax, 6 ; ret
0x00000000000af5c0 : mov rax, 7 ; ret
0x0000000000127f30 : mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000ee3e0 : mov rax, qword ptr [rax + 0x150] ; ret
0x0000000000127cde : mov rax, qword ptr [rax + 0x160] ; jmp rax
0x00000000000f296f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f29a9 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000072552 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000fc5b8 : mov rax, qword ptr [rax + 0x30] ; ret
0x00000000001207fc : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000011b773 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012080c : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000072d13 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000011c013 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ee3d8 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000011fed4 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000ee3b9 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002a68d : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2a6a1 ; call rax
0x000000000002cfb4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002cabe : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000011fec9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002c02b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000037192 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010f788 : mov rax, qword ptr [rax] ; ret
0x000000000007c136 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7c148 ; call rax
0x000000000007c419 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7c42b ; call rax
0x00000000000ec76b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000022881 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000007922c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000753d0 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000079768 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000011dc79 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x11dc91 ; pop rbx ; ret
0x000000000013c2d0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000bfbc4 : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xbfbdb ; call rax
0x0000000000120dd2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000120a00 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bb600 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000159127 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x159140 ; call rax
0x0000000000114ef6 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000075410 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000114f2e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000075300 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000072d10 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007a9b0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000115bb0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000001207f8 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000120808 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000011fed0 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000011fec5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000011ffb0 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000007b270 : mov rax, qword ptr [rdi] ; mov dword ptr [rip + 0x333673], eax ; ret
0x000000000007a6fe : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000fcd84 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002cf52 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000115387 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002bfec : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000d6de7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007a6f0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7a6f1 ; ret
0x0000000000125863 : mov rax, qword ptr [rip + 0x287ca6] ; call qword ptr [rax]
0x0000000000125260 : mov rax, qword ptr [rip + 0x2882a9] ; call qword ptr [rax]
0x0000000000109070 : mov rax, qword ptr [rip + 0x2a4901] ; ret
0x000000000007d993 : mov rax, qword ptr [rip + 0x32e426] ; xor edi, edi ; call qword ptr [rax]
0x000000000007a990 : mov rax, qword ptr [rip + 0x332c89] ; ret
0x00000000000296f0 : mov rax, qword ptr [rip + 0x3842f9] ; ret
0x0000000000022010 : mov rax, qword ptr [rip + 0x38f419] ; ret
0x0000000000022000 : mov rax, qword ptr [rip + 0x38f439] ; ret
0x000000000002c008 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000bbfc3 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000127e75 : mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x0000000000021069 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000025d2e : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000106922 : mov rax, qword ptr [rsp + 0x28] ; mov edi, dword ptr [rax] ; call 0xe2c28
0x0000000000106922 : mov rax, qword ptr [rsp + 0x28] ; mov edi, dword ptr [rax] ; call 0xe2c29
0x000000000002d671 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000033d75 : mov rax, qword ptr [rsp - 0x10] ; shr rax, 0x3f ; ret
0x00000000000e8a1f : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000f30d2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000f3133 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000010f787 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000084440 : mov rax, r10 ; pop rbx ; ret
0x000000000007b4d6 : mov rax, r10 ; ret
0x0000000000085449 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d979 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c274 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007fa2a : mov rax, r14 ; pop rbx ; pop r14 ; pop r15 ; ret
0x000000000007fe05 : mov rax, r8 ; ret
0x000000000014dc00 : mov rax, r8 ; vzeroupper ; ret
0x00000000000489f1 : mov rax, r9 ; add rsp, 0x28 ; ret
0x00000000000841ef : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000083a1c : mov rax, rbp ; mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x0000000000075870 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bb15 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a630 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000085349 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbe33 : mov rax, rbx ; call rax
0x00000000000edf8e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000029fb5 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bf57 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000030f3a : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003751e : mov rax, rbx ; pop rbx ; ret
0x00000000000ebaf9 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000370fb : mov rax, rcx ; or rax, rdx ; ret
0x000000000002d73f : mov rax, rcx ; pop rbp ; pop r12 ; ret
0x0000000000082154 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082289 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000325a6 : mov rax, rcx ; ret
0x00000000000fdfd0 : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000037110 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009fa0b : mov rax, rdi ; jne 0x9fa23 ; ret
0x000000000008aec4 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011035a : mov rax, rdi ; pop rbx ; pop rbp ; ret
0x0000000000087019 : mov rax, rdi ; pop rbx ; ret
0x000000000004882d : mov rax, rdi ; ret
0x0000000000100ab9 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000afb37 : mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000007f803 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000087335 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000bb2a2 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000080793 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000446f4 : mov rax, rdx ; pop rbx ; ret
0x0000000000043bb9 : mov rax, rdx ; ret
0x00000000000bc474 : mov rax, rsi ; add rsp, 8 ; ret
0x00000000000487d9 : mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000036ce3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000006dcce : mov rax, rsi ; pop rbx ; ret
0x0000000000048913 : mov rax, rsi ; ret
0x0000000000033feb : mov rbp, r9 ; jmp rdx
0x00000000000ec309 : mov rbp, rax ; call rax
0x00000000000fd4a3 : mov rbp, rsp ; pop rbp ; ret
0x00000000000c0121 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000083d22 : mov rbx, rax ; call 0x207a5
0x00000000001157ba : mov rbx, rax ; jne 0x11575a ; xor eax, eax ; pop rbx ; ret
0x00000000000e7606 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000040dde : mov rbx, rdi ; syscall
0x000000000002b7e5 : mov rbx, rdi ; test rax, rax ; je 0x2b7f7 ; call rax
0x0000000000113495 : mov rbx, rsi ; sub rsp, 8 ; call 0x11fee9
0x00000000000bb692 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000002a7e1 : mov rcx, qword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x2a7f5 ; call rcx
0x0000000000113316 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000098e10 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000119584 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000011938c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000114b1c : mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000073030 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000a0631 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000111ed7 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008a5e3 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000008a5f5 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000a6f0e : mov rcx, rbx ; mov rsi, rdi ; call 0x43998
0x000000000009da51 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000111fc2 : mov rcx, rdx ; xor edx, edx ; call rax
0x00000000000e22a7 : mov rdi, -0x64 ; syscall
0x0000000000035cf5 : mov rdi, qword ptr [r12] ; call r14
0x0000000000113c6a : mov rdi, qword ptr [r13 + 0x28] ; mov rsi, rbx ; call 0x206e9
0x00000000000b441b : mov rdi, qword ptr [r14 + 0x40] ; mov r15, rbx ; call 0x206e9
0x00000000000abd23 : mov rdi, qword ptr [rax] ; call r14
0x00000000000db9b8 : mov rdi, qword ptr [rbp - 0x198] ; call rbx
0x00000000000c3cf5 : mov rdi, qword ptr [rbp - 0x1e8] ; call 0x207b1
0x00000000000c26f1 : mov rdi, qword ptr [rbp - 0x308] ; call r15
0x0000000000049476 : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000054b0b : mov rdi, qword ptr [rbp - 0x8c0] ; call rax
0x00000000000c3bce : mov rdi, qword ptr [rbx + 0x20] ; call 0x205e6
0x0000000000043429 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006bd55 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006bd19 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000063c12 : mov rdi, qword ptr [rdi + rcx*8] ; jmp 0x63be0
0x000000000002b423 : mov rdi, qword ptr [rdi] ; syscall
0x00000000000fb5d3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000e02fe : mov rdi, qword ptr [rsp + 0x10] ; call 0xdce07
0x00000000000e0324 : mov rdi, qword ptr [rsp + 0x10] ; xor esi, esi ; call 0xdce09
0x00000000000241d3 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000002496d : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002520f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000024b62 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000024ddf : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002456a : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026190 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000027fc3 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000025529 : mov rdi, qword ptr [rsp + 0x48] ; call r15
0x0000000000114b38 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000350ed : mov rdi, qword ptr [rsp + 8] ; mov eax, ecx ; syscall
0x00000000000eda36 : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000079255 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000034f94 : mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x0000000000023ce2 : mov rdi, r12 ; call 0x20735
0x00000000000c3ca8 : mov rdi, r12 ; call 0x207ad
0x000000000006adc8 : mov rdi, r12 ; call 0x570c5
0x0000000000035dfc : mov rdi, r12 ; call r14
0x0000000000082b97 : mov rdi, r12 ; call rax
0x0000000000072d88 : mov rdi, r12 ; call rbx
0x00000000000f1f60 : mov rdi, r12 ; mov eax, 0x14 ; syscall
0x00000000000f1e7d : mov rdi, r12 ; mov eax, 1 ; syscall
0x000000000002b4b8 : mov rdi, r12 ; mov eax, 3 ; syscall
0x000000000002b6e9 : mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000000a08f9 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000002b6a1 : mov rdi, r12 ; xor eax, eax ; syscall
0x00000000000f44d1 : mov rdi, r13 ; call 0x207ad
0x0000000000047d6f : mov rdi, r13 ; call 0x43fe5
0x00000000000faddf : mov rdi, r13 ; call 0xf7845
0x0000000000107f9d : mov rdi, r13 ; call r12
0x000000000002df32 : mov rdi, r13 ; call rax
0x00000000000eb139 : mov rdi, r13 ; mov eax, 9 ; syscall
0x00000000000755c6 : mov rdi, r13 ; mov eax, r12d ; syscall
0x000000000002287e : mov rdi, r13 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000073cc0 : mov rdi, r13 ; xor r13d, r13d ; call 0x207b0
0x0000000000023bda : mov rdi, r14 ; call 0x205f5
0x00000000001044b4 : mov rdi, r14 ; call 0x207ad
0x000000000007f6c7 : mov rdi, r14 ; call 0x7c1c5
0x000000000007d7c5 : mov rdi, r14 ; call qword ptr [rax]
0x00000000001148b7 : mov rdi, r14 ; call rax
0x0000000000114b19 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000fadc1 : mov rdi, r15 ; call 0xf7845
0x000000000011e3ef : mov rdi, r15 ; call qword ptr [rax]
0x000000000011fcfd : mov rdi, r15 ; call r14
0x0000000000071d83 : mov rdi, r15 ; call rax
0x00000000000326d5 : mov rdi, r15 ; mov eax, 2 ; syscall
0x0000000000125e54 : mov rdi, r15 ; mov eax, 3 ; syscall
0x000000000002b614 : mov rdi, r15 ; mov eax, ecx ; syscall
0x000000000007d59e : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000829b2 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000073033 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000824f6 : mov rdi, r8 ; call rax
0x00000000000e1ee3 : mov rdi, r8 ; mov eax, 0x85 ; syscall
0x00000000000e86b2 : mov rdi, r8 ; mov eax, 1 ; syscall
0x00000000000c1447 : mov rdi, r8 ; mov eax, 3 ; syscall
0x00000000000ee03f : mov rdi, r8 ; mov eax, r12d ; syscall
0x000000000003463f : mov rdi, r8 ; mov eax, r9d ; syscall
0x0000000000037eff : mov rdi, r8 ; sub rsi, r8 ; mov eax, r10d ; syscall
0x00000000000e84b5 : mov rdi, r8 ; xor eax, eax ; syscall
0x000000000007cfdb : mov rdi, r9 ; mov eax, 3 ; syscall
0x000000000007cfaf : mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000011d08c : mov rdi, rax ; call qword ptr [r10]
0x00000000000f00ff : mov rdi, rax ; mov eax, 0x3c ; syscall
0x00000000000341a8 : mov rdi, rax ; mov eax, 0xba ; syscall
0x0000000000113313 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000ed95d : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000011fc1a : mov rdi, rbp ; add rbx, r12 ; call r14
0x0000000000158daf : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x000000000011585d : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000c8a28 : mov rdi, rbp ; call r12
0x000000000011387c : mov rdi, rbp ; call r14
0x0000000000081485 : mov rdi, rbp ; call rax
0x00000000000a0255 : mov rdi, rbp ; call rbx
0x0000000000120c10 : mov rdi, rbp ; call rcx
0x0000000000115414 : mov rdi, rbp ; call rdx
0x00000000001140d4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000113f15 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000e2ee0 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x00000000000297b1 : mov rdi, rbp ; mov eax, 3 ; syscall
0x000000000002f8a6 : mov rdi, rbp ; mov eax, r10d ; syscall
0x0000000000119581 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000119389 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c8a51 : mov rdi, rbp ; mov rsi, rbx ; call r12
0x00000000000afd1c : mov rdi, rbp ; sub rsp, 8 ; call r12
0x0000000000114d6c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000032d7a : mov rdi, rbx ; add rsi, rbp ; mov eax, r8d ; syscall
0x00000000000ab271 : mov rdi, rbx ; call 0x127cf5
0x00000000000e438c : mov rdi, rbx ; call 0x205e5
0x00000000000e4526 : mov rdi, rbx ; call 0x20735
0x0000000000083cd2 : mov rdi, rbx ; call 0x207a5
0x000000000010bf8d : mov rdi, rbx ; call 0x38a45
0x00000000000fe9de : mov rdi, rbx ; call 0x4b3f5
0x00000000000e9032 : mov rdi, rbx ; call 0x85325
0x000000000007ba04 : mov rdi, rbx ; call qword ptr [r14]
0x00000000000c1f84 : mov rdi, rbx ; call qword ptr [r15]
0x0000000000115c87 : mov rdi, rbx ; call qword ptr [rax]
0x00000000000296a6 : mov rdi, rbx ; call r12
0x00000000000221a6 : mov rdi, rbx ; call r14
0x000000000006a870 : mov rdi, rbx ; call r8
0x000000000006a517 : mov rdi, rbx ; call rax
0x000000000010fc7c : mov rdi, rbx ; jne 0x10fc77 ; pop rbx ; ret
0x000000000015929a : mov rdi, rbx ; jne 0x159291 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd1b4 : mov rdi, rbx ; jne 0xcd1e7 ; call 0xc9477
0x00000000000e6867 : mov rdi, rbx ; mov eax, 0x10f ; syscall
0x0000000000037e87 : mov rdi, rbx ; mov eax, 0x13e ; syscall
0x00000000000eb2b7 : mov rdi, rbx ; mov eax, 0x1a ; syscall
0x00000000000bf98e : mov rdi, rbx ; mov eax, 0x23 ; syscall
0x00000000000e2ddc : mov rdi, rbx ; mov eax, 0x55 ; syscall
0x00000000000345bc : mov rdi, rbx ; mov eax, 0x82 ; syscall
0x000000000003279c : mov rdi, rbx ; mov eax, 3 ; syscall
0x00000000000e6797 : mov rdi, rbx ; mov eax, 7 ; syscall
0x000000000012788a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000050c79 : mov rdi, rbx ; mov rdx, r13 ; call 0x6cf68
0x0000000000113d01 : mov rdi, rbx ; pop rbx ; jmp 0x207ae
0x000000000006d9a4 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000701ae : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000077249 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000fcd87 : mov rdi, rdx ; jmp rax
0x00000000000bfd20 : mov rdi, rdx ; mov eax, esi ; syscall
0x00000000000bfd30 : mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000e18e1 : mov rdi, rdx ; syscall
0x0000000000074fed : mov rdi, rsi ; call 0x212a5
0x0000000000113405 : mov rdi, rsp ; call rax
0x000000000011fe10 : mov rdi, rsp ; call rdx
0x00000000000f2284 : mov rdi, rsp ; mov eax, 2 ; syscall
0x00000000000db302 : mov rdx, qword ptr [r12] ; mov rsi, r15 ; call rbx
0x00000000000753a4 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000bfb53 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xbfb6a ; call rdx
0x0000000000021066 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000015900f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x159023 ; call rdx
0x000000000012d520 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000098e00 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000010c022 : mov rdx, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000fbffd : mov rdx, r12 ; call rax
0x00000000000e0438 : mov rdx, r12 ; mov rsi, rbp ; call 0xdceb8
0x0000000000050c7c : mov rdx, r13 ; call 0x6cf65
0x00000000000fc3eb : mov rdx, r13 ; call rax
0x00000000000824f3 : mov rdx, r13 ; mov rdi, r8 ; call rax
0x00000000000a0391 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000001166da : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ab289 : mov rdx, r13 ; mov rsi, r14 ; call rbx
0x00000000000fbf9f : mov rdx, r14 ; call rax
0x00000000000c3c6e : mov rdx, r15 ; call 0x20715
0x00000000000f7c5b : mov rdx, r15 ; mov rsi, r13 ; call r14
0x00000000001052fe : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000002b69e : mov rdx, r8 ; mov rdi, r12 ; xor eax, eax ; syscall
0x00000000000f8172 : mov rdx, rax ; jmp rcx
0x00000000000ed9df : mov rdx, rax ; mov eax, r12d ; syscall
0x000000000010c104 : mov rdx, rax ; ret
0x00000000000839c4 : mov rdx, rbp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fe3dd : mov rdx, rbp ; mov rsi, r12 ; call 0x7ae58
0x00000000000fbb1e : mov rdx, rbx ; call rax
0x0000000000159726 : mov rdx, rbx ; jne 0x15971f ; pop rbx ; ret
0x00000000001165d4 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000829b5 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000082b91 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000772c2 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000083a1f : mov rdx, rbx ; pop rbx ; pop rbp ; ret
0x00000000000e1fa0 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000018dca8 : mov rdx, rdi ; call qword ptr [rax]
0x000000000009dda7 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000e6caf : mov rdx, rsi ; xor esi, esi ; syscall
0x0000000000035cf1 : mov rsi, qword ptr [r13] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000625c6 : mov rsi, qword ptr [rip + 0x349993] ; call rax
0x000000000005a906 : mov rsi, qword ptr [rip + 0x351653] ; call rax
0x000000000005a252 : mov rsi, qword ptr [rip + 0x351d07] ; call rax
0x0000000000057346 : mov rsi, qword ptr [rip + 0x354c13] ; call rax
0x000000000004e6da : mov rsi, qword ptr [rip + 0x35d87f] ; call rax
0x000000000004b67e : mov rsi, qword ptr [rip + 0x3608db] ; call rax
0x00000000000437a9 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000113c35 : mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000113877 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000011c391 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call r12
0x0000000000021e1d : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000000808c0 : mov rsi, qword ptr [rsp + 0x18] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000081480 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000f8640 : mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000107f98 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000fe3e0 : mov rsi, r12 ; call 0x7ae55
0x00000000001165d7 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000f7c5e : mov rsi, r13 ; call r14
0x00000000000829b8 : mov rsi, r13 ; call rax
0x0000000000035df9 : mov rsi, r13 ; mov rdi, r12 ; call r14
0x0000000000082b94 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000047d6c : mov rsi, r13 ; mov rdi, r13 ; call 0x43fe8
0x00000000000ab28c : mov rsi, r14 ; call rbx
0x00000000000ab401 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x0000000000105301 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000db306 : mov rsi, r15 ; call rbx
0x000000000006adc5 : mov rsi, r15 ; mov rdi, r12 ; call 0x570c8
0x000000000006d1e0 : mov rsi, r9 ; mov eax, r8d ; syscall
0x000000000002b6e6 : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x000000000002f8a3 : mov rsi, r9 ; mov rdi, rbp ; mov eax, r10d ; syscall
0x00000000000fe9db : mov rsi, r9 ; mov rdi, rbx ; call 0x4b3f8
0x000000000012778e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000e043b : mov rsi, rbp ; call 0xdceb5
0x00000000000772c5 : mov rsi, rbp ; mov eax, r13d ; syscall
0x00000000000c142d : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000008239a : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000fd375 : mov rsi, rbp ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x00000000000e2553 : mov rsi, rbp ; movsxd rdi, ebx ; xor eax, eax ; syscall
0x0000000000113c6e : mov rsi, rbx ; call 0x206e5
0x00000000000c8a54 : mov rsi, rbx ; call r12
0x0000000000126b35 : mov rsi, rbx ; mov eax, 1 ; syscall
0x0000000000034ef0 : mov rsi, rbx ; mov eax, ecx ; syscall
0x0000000000126742 : mov rsi, rbx ; mov eax, r13d ; syscall
0x00000000001267f8 : mov rsi, rbx ; mov eax, r8d ; syscall
0x0000000000034f91 : mov rsi, rbx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000f21f1 : mov rsi, rbx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000082a9b : mov rsi, rbx ; mov rdi, r13 ; call rax
0x00000000000755c3 : mov rsi, rbx ; mov rdi, r13 ; mov eax, r12d ; syscall
0x000000000011e3ec : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011fcfa : mov rsi, rbx ; mov rdi, r15 ; call r14
0x00000000001253a5 : mov rsi, rbx ; mov rdi, r8 ; mov eax, r12d ; syscall
0x000000000011d089 : mov rsi, rbx ; mov rdi, rax ; call qword ptr [r10]
0x00000000000c8a25 : mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000120c0d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000a6f11 : mov rsi, rdi ; call 0x43995
0x00000000000ba562 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000119bc9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000fb5d7 : mov rsi, rdx ; call rax
0x00000000000e1deb : mov rsi, rdx ; mov eax, 4 ; syscall
0x00000000000e1e3a : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000000e1e8b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000011ffb4 : mov rsi, rsp ; call qword ptr [rax]
0x0000000000115c84 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000016d788 : mov rsp, dr0 ; jmp qword ptr [rbx + 0x22fff4a2]
0x0000000000033fe8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000c011e : mov rsp, rbx ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000017ac44 : mov sil, 0xfb ; call rax
0x00000000000e7253 : mov word ptr [r8 + 0x21], si ; ret
0x00000000001518f5 : mov word ptr [r9 - 2], cx ; ret
0x000000000018bd44 : mov word ptr [rax + rax - 0x10a51800], gs ; jmp qword ptr [rdi]
0x0000000000186544 : mov word ptr [rax + rax], ss ; cwde ; retf
0x0000000000121c15 : mov word ptr [rax - 0x39], cs ; ret
0x0000000000099600 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000199c44 : mov word ptr [rbx - 0x1eb7ffff], cs ; cmc ; jmp qword ptr [rcx]
0x000000000018ac44 : mov word ptr [rbx - 0x4480000], ds ; out dx, al ; jmp qword ptr [rbx]
0x000000000013e362 : mov word ptr [rcx + 4], dx ; ret
0x000000000013e3a3 : mov word ptr [rcx + 8], dx ; ret
0x0000000000197d44 : mov word ptr [rcx + rax], gs ; call 0x221972d7
0x000000000013e330 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000013e320 : mov word ptr [rcx], dx ; ret
0x000000000017e041 : mov word ptr [rcx], es ; add al, dl ; fdivr st(5), st(0) ; call qword ptr [rax]
0x000000000017e031 : mov word ptr [rcx], es ; add byte ptr [rax - 0x24], dh ; cmc ; jmp rax
0x00000000000e0a8f : mov word ptr [rcx], es ; add byte ptr [rax], al ; call 0x2cce6
0x000000000009a51c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009b37c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000098eac : mov word ptr [rdi + 0x10], cx ; ret
0x000000000009cfac : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009a624 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009b484 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000098f94 : mov word ptr [rdi + 0x18], cx ; ret
0x000000000009d0b4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000001339e7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000198044 : mov word ptr [rdi + 1], gs ; add byte ptr [rax - 0x79], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000037df2 : mov word ptr [rdi + 2], dx ; ret
0x000000000008ab2b : mov word ptr [rdi + 4], ax ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aa5b : mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x000000000008a98b : mov word ptr [rdi + 4], dx ; add rax, rdi ; ret
0x000000000009a3e8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009b228 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000098de8 : mov word ptr [rdi + 4], dx ; ret
0x000000000009ce58 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009b28a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009a43a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000098e2a : mov word ptr [rdi + 8], dx ; ret
0x000000000009ceba : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009de9a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x000000000009da94 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000012dabc : mov word ptr [rdi - 2], cx ; ret
0x000000000012d8d4 : mov word ptr [rdi - 2], dx ; ret
0x000000000012dab8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000098db3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000099a86 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000151fc2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000009de9f : mov word ptr [rdi], cx ; ret
0x000000000014e384 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x000000000008a9b0 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000009a3a3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009b1d3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000098da3 : mov word ptr [rdi], dx ; ret
0x000000000009ce03 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000008ab60 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + rdx - 1] ; ret
0x000000000008aa80 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001518f2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000009da99 : mov word ptr [rdi], si ; ret
0x00000000000e10d0 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000001191af : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000198344 : mov word ptr [rdx + 1], dr0 ; add byte ptr [rax - 0x76], ch ; cmc ; call qword ptr [rsi]
0x0000000000197b44 : mov word ptr [rdx + 1], gs ; add byte ptr [rax + 0x67], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001406d8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009599d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000095a21 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000002371 : mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000140683 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000095938 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f29cc : mov word ptr [rdx], ax ; ret
0x00000000001a3462 : mov word ptr [rdx], cs ; ret
0x000000000019ca4f : mov word ptr [rdx], es ; add ah, byte ptr [rcx + 0xa] ; ret
0x000000000018d22b : mov word ptr [rdx], es ; push rdx ; ret
0x0000000000107b8b : mov word ptr [rdx], gs ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000000e65c5 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000037d5f : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000037da6 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000018af44 : mov word ptr [rsi - 0x180000], ds ; out dx, al ; call qword ptr [rdx]
0x0000000000051a40 : mov word ptr [rsi - 1], gs ; dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x0000000000151fc5 : mov word ptr [rsi - 2], cx ; ret
0x00000000000e10b3 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000018c0d0 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; lodsb al, byte ptr [rsi] ; ret
0x00000000001a3448 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; pop rsp ; add dword ptr [rdx], ecx ; ret
0x0000000000186238 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret
0x0000000000195818 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; add ecx, dword ptr fs:[rdx] ; ret
0x0000000000191cc0 : mov word ptr [rsi], es ; add qword ptr [rdi], 0x76 ; ret
0x0000000000193f44 : mov word ptr [rsi], gs ; add dword ptr [rax], eax ; mov byte ptr [rdi - 0xc], cl ; call qword ptr [rsi]
0x0000000000032fe2 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000033ea4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000009da93 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000014e007 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000067952 : movabs al, byte ptr [0x840fc08548000000] ; ret
0x000000000006341a : movabs al, byte ptr [0x840fc08548000000] ; retf
0x00000000000637d7 : movabs al, byte ptr [0x840fc08548000000] ; retf 0x1f
0x0000000000055db1 : movabs al, byte ptr [0x840fc08548000000] ; retf 0xb
0x0000000000040874 : movabs al, byte ptr [0x948f20948001390] ; retf -0x76b8
0x000000000017f94c : movabs al, byte ptr [0xb000021928fff8ca] ; retf
0x000000000017ebf0 : movabs al, byte ptr [0xb8fff74ec00001ca] ; retf 1
0x000000000017ec30 : movabs al, byte ptr [0xb8fff750d00001cb] ; retf
0x0000000000050778 : movabs al, byte ptr [0xe8c08949c07d8b48] ; retf
0x000000000017f1cc : movabs al, byte ptr [0xf00001e978fff7ca] ; retf -9
0x000000000004a5b5 : movabs al, byte ptr [0xfff740bd83000000] ; call qword ptr [rax]
0x00000000000372da : movabs byte ptr [0x5b00068ccee80037], al ; ret
0x00000000000f71fa : movabs byte ptr [0x8948c08548fff295], al ; ret
0x0000000000003b83 : movabs byte ptr [0xd0bd63067c9a2d95], al ; retf 0x6e33
0x0000000000169d23 : movabs byte ptr [0xd900432ac06c5d01], al ; retf -0x156f
0x0000000000169981 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000002d0d : movabs dword ptr [0x1ad04fca8653d0e9], eax ; retf 0x2217
0x00000000000cd0cb : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x000000000011c6f9 : movabs dword ptr [0x8948c08548fff040], eax ; ret
0x00000000000bb919 : movabs dword ptr [0x8948c08548fffff8], eax ; ret
0x0000000000002647 : movabs dword ptr [0xf19a27a8585af87c], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x0000000000167dc7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x000000000016867a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000003333f : movapd xmm0, xmm1 ; ret
0x0000000000033340 : movaps xmm0, xmm1 ; ret
0x000000000012c042 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012c03e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012c0ec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000337e3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000003325a : movd mm0, eax ; ret
0x0000000000033259 : movd mm0, rax ; ret
0x000000000003333c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x00000000000336ca : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000332cf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000033646 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003333b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000332ce : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000337e2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000003361c : movd xmm0, eax ; ret
0x00000000000336c9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000033645 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000033980 : movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x0000000000033bd3 : movdqa xmm0, xmmword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000098e80 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009a6dd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009b53d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000099d40 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009904d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009b7a3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000099f83 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000001336bf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013364f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001335df : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013356f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a67d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009b4dd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000098fed : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000001334ff : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a69d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009b4fd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009900d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000013348f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a6bd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009b51d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009902d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000133aaf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133a3f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001339cf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013395f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001338ef : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013387f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013380f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013379f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013372f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009de0d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000132c1b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000132c8b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000099e40 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x000000000009b344 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009a4f4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000099b67 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000098e94 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000098ed7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000098ec7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098f48 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000098f08 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000098f28 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000098ea8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000099049 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000098fe9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000099009 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000099029 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000098e84 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009cf74 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000133494 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000095a82 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000095aa2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000095ac2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009590c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000958b6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000095a83 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000095aa3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000095ac3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009590d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000958b7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000eb95b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0xeb92f
0x00000000000eb95c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0xeb92e
0x0000000000098e81 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000033981 : movq mm0, qword ptr [rsp - 0x18] ; ret
0x0000000000033d40 : movq mm0, qword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000033bd4 : movq mm0, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x000000000009a6de : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009b53e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000099d41 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009904e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000009d16e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009b7a4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000099f84 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000009d1e4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000001336c0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133650 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001335e0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133570 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a67e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009b4de : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000098fee : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000009d10e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x0000000000133500 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a69e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009b4fe : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009900e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000009d12e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000133490 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a6be : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009b51e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009902e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000009d14e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000133ab0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133a40 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001339d0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133960 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001338f0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133880 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133810 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001337a0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000133730 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009dd85 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009de0e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000132c1c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000132c8c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001333c7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133347 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001332b7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133237 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001331b7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133137 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001330b7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133037 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000132fb7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000132f37 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000132eb7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000132e37 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000132da7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000132d17 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000132c87 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000099e41 : movq qword ptr [rdi - 1], mm0 ; ret
0x000000000009b345 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009a4f5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000099b68 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000098e95 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000098ee8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000099bbb : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000098ed8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000098ec8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098f49 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000098f09 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000098f29 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000098ea9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009904a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000098fea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009900a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009902a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000098e85 : movq qword ptr [rdi], mm0 ; ret
0x000000000009cf75 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000133495 : movq qword ptr [rdi], mm1 ; ret
0x0000000000033258 : movq xmm0, rax ; ret
0x000000000003333a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000332cd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000019b575 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xa], cl ; call qword ptr [rax]
0x000000000017e481 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; push rax ; mov esi, dr0 ; jmp qword ptr [rax]
0x000000000019b58d : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; xor byte ptr [rbp - 0xa], cl ; call qword ptr [rax]
0x0000000000194f5c : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr ds:[rax], eax ; nop ; sal esp, 1 ; jmp qword ptr [rcx]
0x0000000000189164 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rax] ; add al, bl ; test al, 0xee ; jmp rdx
0x000000000017f89d : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x000000000009d9d5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000016d605 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; dec dword ptr [rcx] ; xchg eax, edi ; hlt ; jmp rdi
0x000000000016d5b1 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rdx - 0x1b000b5c]
0x000000000016d5b5 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp rsp
0x000000000017bf85 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; call qword ptr [rax]
0x0000000000168aa2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000198a5c : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x198a67 ; add byte ptr [rax - 0x65], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000edff8 : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rax], r8b ; sub rsp, 0x60 ; syscall
0x000000000019195c : movsb byte ptr [rdi], byte ptr [rsi] ; or byte ptr [rcx], al ; add byte ptr [rax], dl ; fdivr st(2), st(0) ; jmp qword ptr [rcx]
0x0000000000189051 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rsp
0x0000000000196f5c : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsi ; add dword ptr [rax], eax ; rol byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000197b5c : movsb byte ptr [rdi], byte ptr [rsi] ; push 1 ; add byte ptr [rax + 0x67], ah ; cmc ; jmp qword ptr [rcx]
0x000000000005ea97 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018dc5c : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001a3b5c : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, byte ptr [rdx] ; add byte ptr [rax + 0x3b], dh ; clc ; call qword ptr [rax]
0x0000000000167985 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000019975c : movsb byte ptr [rdi], byte ptr [rsi] ; xchg byte ptr [rcx], al ; add byte ptr [rax - 0x30], dl ; cmc ; call rsi
0x00000000000fde38 : movsb byte ptr [rdi], byte ptr [rsi] ; xor dword ptr [rbx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000016ef68 : movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp qword ptr [rbp + 0x26fff700]
0x000000000016ef20 : movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp qword ptr [rbp - 0x1d000900]
0x000000000016ef6c : movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp qword ptr [rsi]
0x000000000016ef24 : movsd dword ptr [rdi], dword ptr [rsi] ; add bh, dh ; jmp rdx
0x000000000017a051 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x5a] ; cld ; call qword ptr [rax]
0x0000000000169f9d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000016a335 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000016b8dc : movsd dword ptr [rdi], dword ptr [rsi] ; jae 0x16b8d1 ; call qword ptr [rbx]
0x0000000000001acc : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4d ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000016b934 : movsd dword ptr [rdi], dword ptr [rsi] ; jns 0x16b929 ; call qword ptr [rbx]
0x0000000000169bf1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000008a5f4 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000077d7d : movsd dword ptr [rdi], dword ptr [rsi] ; movsxd rdi, r12d ; mov eax, 3 ; syscall
0x0000000000003880 : movsd dword ptr [rdi], dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; retf
0x0000000000044092 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000030c1f : movsd dword ptr [rdi], dword ptr [rsi] ; sal byte ptr [rdi], 1 ; add byte ptr [rcx - 0x77], cl ; ret 0x49e9
0x00000000000f22d2 : movsd dword ptr [rdi], dword ptr [rsi] ; sbb byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000168681 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000000332d2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003329b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000afba8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000045423 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000127795 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000033649 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000033630 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000158d54 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000000453dd : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000f7aaf : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000083c67 : movsx eax, dl ; ret
0x000000000008a794 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x8a791 ; ret
0x000000000008a8d4 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x8a8d1 ; xor eax, eax ; ret
0x00000000000f7d32 : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xf7d28 ; ret
0x000000000008a824 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x8a829 ; ret
0x000000000008a750 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x8a751 ; ret
0x00000000000f7d31 : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xf7d29 ; ret
0x00000000000eb1af : movsxd r10, r10d ; syscall
0x0000000000156a39 : movsxd r12, dword ptr [r15 + r12*4] ; add r15, r12 ; jmp r15
0x000000000008ab13 : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000008afa1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013109b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000012bb1b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000008a96e : movsxd r9, dword ptr [rcx + r9*4] ; add rcx, r9 ; jmp rcx
0x00000000000b627f : movsxd r9, dword ptr [rdx + r9*4] ; add rdx, r9 ; jmp rdx
0x000000000008aa41 : movsxd rax, dword ptr [r8 + rdx*4] ; add r8, rax ; jmp r8
0x0000000000057e55 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdi ; jmp rax
0x00000000000621b5 : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x000000000006a072 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000002171c : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000009def7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x00000000000375ba : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000149554 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000149418 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014966d : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00000000001494ed : movsxd rax, ecx ; ret
0x000000000017b765 : movsxd rbp, ebx ; call qword ptr [rax]
0x00000000000038ca : movsxd rbx, ebp ; clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x0000000000149594 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000043500 : movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x00000000000994ba : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000014f30d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000098c49 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000011c066 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000114f0e : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000d62e6 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rcx, rsi ; jmp rcx
0x0000000000149409 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000149470 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149437 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000e15db : movsxd rdi, dword ptr [r15 + 8] ; mov eax, 3 ; syscall
0x00000000000edc54 : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x00000000000edd19 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x000000000006d197 : movsxd rdi, dword ptr [rbx + 0x70] ; mov eax, 3 ; syscall
0x0000000000076d59 : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000076500 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000077830 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000010a220 : movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x00000000000e328d : movsxd rdi, dword ptr [rsp] ; mov eax, 0x101 ; syscall
0x00000000000e3347 : movsxd rdi, dword ptr [rsp] ; mov eax, 3 ; syscall
0x0000000000128fbe : movsxd rdi, eax ; mov eax, 0x3e ; syscall
0x0000000000121660 : movsxd rdi, eax ; mov eax, 3 ; syscall
0x000000000017a185 : movsxd rdi, ebp ; call qword ptr [rcx]
0x00000000000e246e : movsxd rdi, ebp ; mov eax, 0x101 ; syscall
0x000000000002f3e3 : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000017a699 : movsxd rdi, ebx ; call qword ptr [rax]
0x000000000017a639 : movsxd rdi, ebx ; jmp rax
0x00000000000e7332 : movsxd rdi, ebx ; mov eax, 0x10 ; syscall
0x00000000000e8213 : movsxd rdi, ebx ; mov eax, 0x10e ; syscall
0x00000000000f05c2 : movsxd rdi, ebx ; mov eax, 0x113 ; syscall
0x00000000000f0446 : movsxd rdi, ebx ; mov eax, 0x114 ; syscall
0x00000000000e6e9f : movsxd rdi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f04ef : movsxd rdi, ebx ; mov eax, 0x116 ; syscall
0x00000000000f026e : movsxd rdi, ebx ; mov eax, 0x119 ; syscall
0x00000000000e6f46 : movsxd rdi, ebx ; mov eax, 0x11d ; syscall
0x00000000000f177f : movsxd rdi, ebx ; mov eax, 0x120 ; syscall
0x00000000000f182d : movsxd rdi, ebx ; mov eax, 0x12b ; syscall
0x00000000000e7aa7 : movsxd rdi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f0667 : movsxd rdi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f18d5 : movsxd rdi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e7b47 : movsxd rdi, ebx ; mov eax, 0x14 ; syscall
0x00000000000e8127 : movsxd rdi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f0ef7 : movsxd rdi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f0e27 : movsxd rdi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f1296 : movsxd rdi, ebx ; mov eax, 0x2c ; syscall
0x00000000000f1076 : movsxd rdi, ebx ; mov eax, 0x2d ; syscall
0x00000000000f1337 : movsxd rdi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f11d7 : movsxd rdi, ebx ; mov eax, 0x2f ; syscall
0x00000000000bf702 : movsxd rdi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f1a3f : movsxd rdi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f1aef : movsxd rdi, ebx ; mov eax, 0x46 ; syscall
0x00000000000e25f7 : movsxd rdi, ebx ; mov eax, 1 ; syscall
0x00000000000bb08f : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x00000000000fd379 : movsxd rdi, ebx ; mov eax, ecx ; syscall
0x00000000000e8315 : movsxd rdi, ebx ; mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000000e83c5 : movsxd rdi, ebx ; mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000000e2c65 : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000e2557 : movsxd rdi, ebx ; xor eax, eax ; syscall
0x00000000000e1f48 : movsxd rdi, ecx ; mov eax, 0x103 ; syscall
0x0000000000121b7a : movsxd rdi, ecx ; mov eax, 3 ; syscall
0x00000000000d90a8 : movsxd rdi, edi ; cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x00000000000e72e5 : movsxd rdi, edi ; mov eax, 0x10 ; syscall
0x00000000000bb0bb : movsxd rdi, edi ; mov eax, 0x101 ; syscall
0x00000000000e9946 : movsxd rdi, edi ; mov eax, 0x105 ; syscall
0x00000000000691b7 : movsxd rdi, edi ; mov eax, 0x108 ; syscall
0x00000000000e2180 : movsxd rdi, edi ; mov eax, 0x10c ; syscall
0x00000000000e27f1 : movsxd rdi, edi ; mov eax, 0x10d ; syscall
0x00000000000e81b8 : movsxd rdi, edi ; mov eax, 0x10e ; syscall
0x00000000000f0554 : movsxd rdi, edi ; mov eax, 0x113 ; syscall
0x00000000000f03f1 : movsxd rdi, edi ; mov eax, 0x114 ; syscall
0x00000000000e6e4e : movsxd rdi, edi ; mov eax, 0x115 ; syscall
0x00000000000f049e : movsxd rdi, edi ; mov eax, 0x116 ; syscall
0x00000000000e6d29 : movsxd rdi, edi ; mov eax, 0x118 ; syscall
0x00000000000f0207 : movsxd rdi, edi ; mov eax, 0x119 ; syscall
0x00000000000e6ef1 : movsxd rdi, edi ; mov eax, 0x11d ; syscall
0x00000000000f172e : movsxd rdi, edi ; mov eax, 0x120 ; syscall
0x00000000000f17d0 : movsxd rdi, edi ; mov eax, 0x12b ; syscall
0x00000000000e7a5e : movsxd rdi, edi ; mov eax, 0x13 ; syscall
0x00000000000f061e : movsxd rdi, edi ; mov eax, 0x130 ; syscall
0x00000000000f1880 : movsxd rdi, edi ; mov eax, 0x133 ; syscall
0x00000000000e7afe : movsxd rdi, edi ; mov eax, 0x14 ; syscall
0x00000000000e80ce : movsxd rdi, edi ; mov eax, 0x17 ; syscall
0x00000000000f1d67 : movsxd rdi, edi ; mov eax, 0x1d ; syscall
0x00000000000f1cf4 : movsxd rdi, edi ; mov eax, 0x1e ; syscall
0x00000000000f1da4 : movsxd rdi, edi ; mov eax, 0x1f ; syscall
0x00000000000f0ead : movsxd rdi, edi ; mov eax, 0x2a ; syscall
0x00000000000f0ddb : movsxd rdi, edi ; mov eax, 0x2b ; syscall
0x00000000000f1234 : movsxd rdi, edi ; mov eax, 0x2c ; syscall
0x00000000000f1014 : movsxd rdi, edi ; mov eax, 0x2d ; syscall
0x00000000000f12ee : movsxd rdi, edi ; mov eax, 0x2e ; syscall
0x00000000000f118e : movsxd rdi, edi ; mov eax, 0x2f ; syscall
0x00000000000bf6b1 : movsxd rdi, edi ; mov eax, 0x3d ; syscall
0x00000000000f1bf7 : movsxd rdi, edi ; mov eax, 0x40 ; syscall
0x00000000000f1bc1 : movsxd rdi, edi ; mov eax, 0x41 ; syscall
0x00000000000f1c55 : movsxd rdi, edi ; mov eax, 0x42 ; syscall
0x00000000000f1b44 : movsxd rdi, edi ; mov eax, 0x44 ; syscall
0x00000000000f19ee : movsxd rdi, edi ; mov eax, 0x45 ; syscall
0x00000000000f1a91 : movsxd rdi, edi ; mov eax, 0x46 ; syscall
0x00000000000f1b84 : movsxd rdi, edi ; mov eax, 0x47 ; syscall
0x00000000000e2989 : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x00000000000e82db : movsxd rdi, edi ; mov eax, 0x4a ; syscall
0x00000000000e838b : movsxd rdi, edi ; mov eax, 0x4b ; syscall
0x00000000000e99b1 : movsxd rdi, edi ; mov eax, 0x4d ; syscall
0x00000000000f1cb4 : movsxd rdi, edi ; mov eax, 0xdc ; syscall
0x00000000000e68d4 : movsxd rdi, edi ; mov eax, 0xdd ; syscall
0x00000000000344c7 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x00000000000fd3b9 : movsxd rdi, edi ; mov eax, 0xe3 ; syscall
0x00000000000fd2f1 : movsxd rdi, edi ; mov eax, 0xe5 ; syscall
0x00000000000341b9 : movsxd rdi, edi ; mov eax, 0xea ; syscall
0x00000000000e25ab : movsxd rdi, edi ; mov eax, 1 ; syscall
0x000000000002bd27 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x00000000000e2644 : movsxd rdi, edi ; mov eax, 8 ; syscall
0x000000000002d155 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000034348 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000002cfe5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e250b : movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000fd2c4 : movsxd rdi, edx ; syscall
0x000000000006d3c1 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x00000000000351ab : movsxd rdi, esp ; mov eax, 0x81 ; syscall
0x0000000000077d7f : movsxd rdi, esp ; mov eax, 3 ; syscall
0x00000000000351aa : movsxd rdi, r12d ; mov eax, 0x81 ; syscall
0x0000000000077d7e : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x00000000000e4d0a : movsxd rdi, r13d ; mov eax, 3 ; syscall
0x000000000006d3c0 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000002bd26 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000012165f : movsxd rdi, r8d ; mov eax, 3 ; syscall
0x00000000000e1f47 : movsxd rdi, r9d ; mov eax, 0x103 ; syscall
0x000000000012bbef : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000c497e : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d3395 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x000000000005ad3d : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002d7f1 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000081cd7 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x000000000005ab45 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000c112b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000005a770 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000b36d7 : movsxd rdx, dword ptr [rdi + rcx*4] ; add rdx, rdi ; jmp rdx
0x0000000000077da1 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x00000000000f20c2 : movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x00000000000eb26b : movsxd rdx, edx ; mov eax, 0x1a ; syscall
0x00000000000e1ba6 : movsxd rdx, edx ; mov eax, 0x1c ; syscall
0x00000000000e674b : movsxd rdx, edx ; mov eax, 7 ; syscall
0x000000000010bbd1 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000eb1b0 : movsxd rdx, edx ; syscall
0x000000000010c0c4 : movsxd rdx, esi ; ret
0x000000000002b2a8 : movsxd rsi, dword ptr [r8 + rsi*4] ; add rsi, r8 ; jmp rsi
0x000000000009df87 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000b82c6 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000009dfbf : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000031dda : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00000000000b8260 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x0000000000110dd0 : movsxd rsi, ebp ; mov eax, 0x81 ; syscall
0x000000000019fa31 : movsxd rsi, edi ; call qword ptr [rdi]
0x000000000017d56d : movsxd rsi, edx ; jmp qword ptr [rax]
0x000000000017d565 : movsxd rsi, edx ; push rax ; cmp eax, 0x63d00001 ; jmp qword ptr [rax]
0x00000000000e2681 : movsxd rsi, esi ; mov eax, 0x15 ; syscall
0x00000000000fd42c : movsxd rsi, esi ; mov eax, 0xe6 ; syscall
0x0000000000153e1c : movsxd rsi, esi ; ret 0x7520
0x000000000016d3b1 : movsxd rsi, esp ; jmp qword ptr [rax]
0x000000000016d3ad : movsxd rsi, esp ; push qword ptr [rsi + 0x63] ; hlt ; jmp qword ptr [rax]
0x00000000000e6faa : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000037a69 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000afba9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000453de : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000045424 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000009dbaf : movups xmmword ptr [r11], xmm4 ; ret
0x000000000009dc36 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000037bf1 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009dc37 : movups xmmword ptr [rbx], xmm0 ; ret
0x000000000009dbb0 : movups xmmword ptr [rbx], xmm4 ; ret
0x000000000009dbab : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000009dbaa : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000009dc32 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000009d972 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000009db19 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000009daf6 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000009d96f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000332d3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003329c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000033631 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000158d55 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000115ba7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012065b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011572c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126137 : movzx eax, al ; add rsp, 8 ; ret
0x00000000000d918e : movzx eax, al ; cmova eax, edx ; ret
0x00000000000ae825 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000c1006 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000033f2c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000e3fd4 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006916c : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000069139 : movzx eax, al ; neg eax ; ret
0x000000000011a6f4 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000001167aa : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000ba58b : movzx eax, al ; pop rbx ; ret
0x0000000000034c5b : movzx eax, al ; ret
0x000000000002cdb5 : movzx eax, ax ; ret
0x000000000006f5ad : movzx eax, bh ; ret
0x000000000007872a : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000777bc : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000784fd : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075f12 : movzx eax, byte ptr [rax] ; ret
0x00000000000da090 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000008c338 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000014a060 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008e830 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008c353 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000078510 : movzx eax, byte ptr [rdx] ; ret
0x000000000007872b : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009df17 : movzx eax, cl ; pop rbx ; ret
0x0000000000100e6d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x000000000006f5ac : movzx eax, dil ; ret
0x000000000009df3f : movzx eax, dl ; pop rbx ; ret
0x0000000000100e7b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000100e6c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002cf6e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e10b0 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000009d38a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x9d389 ; ret
0x000000000009d43a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x9d439 ; ret
0x00000000001501c4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000009da68 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008c350 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014a063 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000f1932 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000073e7f : movzx edx, byte ptr [rax] ; mov eax, edx ; ret
0x0000000000073fe4 : movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x000000000003235f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x32347 ; ret
0x00000000000c1d6b : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xc1d50 ; xor eax, eax ; ret
0x000000000008c511 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000143bcf : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000149fe8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000008c3a3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000153e44 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000153ea4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000153e94 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000153e84 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000153e74 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000153e64 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000153e54 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001333e0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000014ff77 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000153e2b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000133ac0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008e833 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008aa0a : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008a9e9 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x000000000008a9cb : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x000000000008e859 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000133360 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000133a50 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000e3d94 : movzx rax, al ; ret
0x0000000000001da3 : mul byte ptr [rax] ; mov ecx, 0x72b02084 ; retf
0x0000000000093947 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000033361 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000000336ef : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000033360 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000000336ee : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000011d123 : neg eax ; add rsp, 0x18 ; ret
0x000000000011d44a : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034517 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000014e4af : neg eax ; or eax, 1 ; vzeroupper ; ret
0x00000000000c8765 : neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e3fd7 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006916f : neg eax ; pop rbx ; ret
0x000000000002187d : neg eax ; ret
0x00000000000826c1 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000007ba02 : neg ebx ; mov rdi, rbx ; call qword ptr [r14]
0x000000000007ba01 : neg rbx ; mov rdi, rbx ; call qword ptr [r14]
0x0000000000031bac : nop ; adc r8, qword ptr [r8] ; add rdx, rsi ; jmp rdx
0x000000000017e96c : nop ; add bh, dh ; jmp qword ptr [rax]
0x000000000010dff8 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000132b17 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000b0090 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3934245c], cl ; ret
0x00000000000211c3 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000055df5 : nop ; add byte ptr [rax], al ; add byte ptr [rbx - 0x90b43], al ; call qword ptr [rax]
0x000000000014f62c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000243c5 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000084e12 : nop ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e806d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b5a45 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0xf40
0x00000000000ba191 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000018b4fe : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x0000000000187d17 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000008aa44 : nop ; add r8, rax ; jmp r8
0x000000000004c818 : nop ; add rax, rdi ; mov edx, 1 ; jmp rax
0x000000000005ab48 : nop ; add rax, rdx ; jmp rax
0x000000000009df8a : nop ; add rax, rsi ; jmp rax
0x00000000000aae4f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000068a7f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021fef : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075c7f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000017a540 : nop ; and al, 0xfb ; jmp rax
0x00000000001a3510 : nop ; and eax, edi ; jmp qword ptr [rcx]
0x000000000007365f : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000019a300 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008e5cf : nop ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000127e7f : nop ; call qword ptr [rax]
0x00000000001986d9 : nop ; cmc ; jmp qword ptr [rbx]
0x0000000000197b90 : nop ; cmc ; jmp qword ptr [rcx]
0x000000000017a49c : nop ; cmp eax, 0x3020fffb ; sti ; jmp rax
0x0000000000184b80 : nop ; cmp ebx, ebp ; call qword ptr [rax]
0x000000000017a498 : nop ; cmp edi, ebx ; call qword ptr [rax + 0x20fffb3d]
0x000000000017bd34 : nop ; fsub st(3), st(0) ; jmp rax
0x000000000017b12c : nop ; idiv esp ; jmp rax
0x000000000017ddcc : nop ; in eax, dx ; hlt ; call qword ptr [rax]
0x00000000001822f0 : nop ; insb byte ptr [rdi], dx ; std ; jmp qword ptr [rdi]
0x000000000017abb4 : nop ; insb byte ptr [rdi], dx ; sti ; call qword ptr [rax]
0x000000000017ac10 : nop ; ja 0x17ac11 ; call qword ptr [rax]
0x000000000017abc4 : nop ; jb 0x17abc5 ; call qword ptr [rax]
0x000000000017ac08 : nop ; je 0x17ac09 ; call qword ptr [rax]
0x0000000000180880 : nop ; jg 0x18088c ; add byte ptr [rax - 0x64], dl ; cli ; jmp rax
0x000000000017d304 : nop ; jmp rax
0x000000000017abcc : nop ; jne 0x17abcd ; call qword ptr [rax]
0x000000000017cdec : nop ; jne 0x17cde2 ; call qword ptr [rax]
0x000000000017ac00 : nop ; jno 0x17ac01 ; call qword ptr [rax]
0x000000000017abdc : nop ; jnp 0x17abdd ; call rax
0x0000000000109abc : nop ; jp 0x109ac6 ; inc dword ptr [rbp - 0x769b8740] ; ret
0x000000000017ac18 : nop ; jp 0x17ac19 ; call qword ptr [rax]
0x000000000017c21c : nop ; jrcxz 0x17c210 ; call rax
0x000000000017abd4 : nop ; js 0x17abd5 ; call qword ptr [rax]
0x000000000017c934 : nop ; leave ; out dx, eax ; call qword ptr [rax]
0x000000000017ae84 : nop ; lodsb al, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000017e610 : nop ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; nop ; ret 0xfff6
0x000000000017ae7c : nop ; lodsd eax, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000017b43c : nop ; mov ah, 0xea ; lcall ptr [rax + 0x6a] ; ret 0xffea
0x000000000017d0a4 : nop ; mov ah, 0xf0 ; jmp qword ptr [rax]
0x000000000017ae50 : nop ; mov ah, 0xfb ; jmp qword ptr [rax]
0x000000000017becc : nop ; mov ah, ch ; jmp qword ptr [rax]
0x0000000000180a90 : nop ; mov al, byte ptr [rdx] ; add al, ah ; retf -6
0x000000000017ac38 : nop ; mov bh, 0xfb ; jmp qword ptr [rax]
0x000000000019e420 : nop ; mov bl, 0xfb ; jmp qword ptr [rdx]
0x000000000017ab30 : nop ; mov bl, bh ; call qword ptr [rax]
0x00000000000d339f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000017d0c4 : nop ; mov dh, 0xf0 ; jmp qword ptr [rax]
0x000000000012d6ef : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000fd2df : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000012d8cf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f0c8f : nop ; mov eax, 0x11f ; syscall
0x00000000000f0d1f : nop ; mov eax, 0x134 ; syscall
0x00000000000eb2ff : nop ; mov eax, 0x1c ; syscall
0x00000000000f146f : nop ; mov eax, 0x30 ; syscall
0x00000000000f0e6f : nop ; mov eax, 0x31 ; syscall
0x00000000000f0fcf : nop ; mov eax, 0x32 ; syscall
0x00000000000f0f3f : nop ; mov eax, 0x34 ; syscall
0x00000000000f1d2f : nop ; mov eax, 0x43 ; syscall
0x00000000000e3ebf : nop ; mov eax, 0x57 ; syscall
0x00000000000e3dff : nop ; mov eax, 0x58 ; syscall
0x00000000000e20df : nop ; mov eax, 0x5f ; syscall
0x00000000000f0b9f : nop ; mov eax, 0x63 ; syscall
0x00000000000f039f : nop ; mov eax, 0x87 ; syscall
0x00000000000e1fef : nop ; mov eax, 0x89 ; syscall
0x00000000000eb38f : nop ; mov eax, 0x95 ; syscall
0x00000000000e876f : nop ; mov eax, 0x99 ; syscall
0x00000000000f06af : nop ; mov eax, 0x9e ; syscall
0x00000000000f074f : nop ; mov eax, 0x9f ; syscall
0x00000000000f08ff : nop ; mov eax, 0xb1 ; syscall
0x00000000000f0aaf : nop ; mov eax, 0xb4 ; syscall
0x00000000000c9e2f : nop ; mov eax, 0xc ; ret
0x00000000000ee22f : nop ; mov eax, 0xc2 ; syscall
0x00000000000ee28f : nop ; mov eax, 0xc3 ; syscall
0x00000000000ee16f : nop ; mov eax, 0xc4 ; syscall
0x00000000000ee31f : nop ; mov eax, 0xc5 ; syscall
0x00000000000f095f : nop ; mov eax, 0xfe ; syscall
0x00000000000c0e5f : nop ; mov eax, 0xfffa ; ret
0x000000000002998f : nop ; mov eax, 0xffffffff ; ret
0x000000000009fd6f : nop ; mov eax, 1 ; ret
0x000000000011ee5f : nop ; mov eax, 2 ; ret
0x00000000000fc54d : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x00000000000fb9ff : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000009f1ff : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9f269 ; ret
0x000000000009f24f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9f269 ; ret
0x00000000000e6f8f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000075eaf : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000717af : nop ; mov eax, dword ptr [rdx] ; ret
0x00000000000f3adf : nop ; mov eax, edi ; ret
0x0000000000100e0f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x0000000000034e9f : nop ; mov eax, edx ; ret
0x0000000000198270 : nop ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000000e78ef : nop ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000012dc8f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009a3bf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000017c260 : nop ; mov esi, 0xf9f00000 ; out dx, al ; jmp rax
0x000000000005421f : nop ; mov qword ptr [rdi], rcx ; ret
0x00000000000f0d7f : nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000f0a7f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000e6cef : nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000f0b3f : nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000f0b6f : nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x0000000000124fdf : nop ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000012502f : nop ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000ee1ff : nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000ee13f : nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x000000000007540f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000752ff : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000011fecf : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000011ffaf : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000010906f : nop ; mov rax, qword ptr [rip + 0x2a4901] ; ret
0x00000000000c446f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a8df : nop ; mov rax, rdi ; ret
0x00000000000fc295 : nop ; mov rdx, r14 ; call rax
0x000000000008147f : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000008a9af : nop ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000008aa7f : nop ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000e10cf : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000098e7f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007782f : nop ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x00000000000e267f : nop ; movsxd rsi, esi ; mov eax, 0x15 ; syscall
0x00000000000e10af : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000017a740 : nop ; nop ; sti ; jmp qword ptr [rax]
0x000000000017c2cc : nop ; or ch, bh ; lcall ptr [rax] ; ret 0
0x000000000017f7d8 : nop ; or eax, 0x81400002 ; clc ; call rax
0x000000000009282d : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017b478 : nop ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; in al, -0x16 ; jmp rax
0x000000000017fd54 : nop ; outsb dx, byte ptr [rsi] ; stc ; jmp rax
0x000000000017abf8 : nop ; outsb dx, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000017abbc : nop ; outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x00000000000337ff : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001907e0 : nop ; pop rax ; call qword ptr [rax]
0x00000000000486af : nop ; pop rbx ; ret
0x000000000017b328 : nop ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 0x16], ah ; call rax
0x000000000017dc84 : nop ; push 0xf4 ; jmp qword ptr [rax]
0x000000000017a70c : nop ; push rax ; sti ; jmp rax
0x0000000000180150 : nop ; push rdx ; add al, byte ptr [rax] ; adc bl, ah ; stc ; jmp rax
0x000000000017f6ac : nop ; push rsi ; clc ; jmp rax
0x000000000017dc14 : nop ; push rsi ; hlt ; jmp rax
0x000000000017d7ec : nop ; push rsi ; jmp rax
0x0000000000020dcf : nop ; ret
0x000000000000300e : nop ; ret 0x5bdb
0x000000000017bbcc : nop ; ret 0xffeb
0x000000000017e614 : nop ; ret 0xfff6
0x000000000017ea50 : nop ; ret 1
0x000000000017bc9c : nop ; retf
0x00000000000035cf : nop ; retf -0x1612
0x0000000000180a8c : nop ; retf -6
0x00000000000021ee : nop ; retf 0x3844
0x0000000000194f60 : nop ; sal esp, 1 ; jmp qword ptr [rcx]
0x000000000017ae74 : nop ; scasb al, byte ptr [rdi] ; sti ; call qword ptr [rax]
0x000000000017ae6c : nop ; scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rax]
0x000000000018025c : nop ; std ; stc ; call qword ptr [rax]
0x000000000017a5d8 : nop ; sti ; call qword ptr [rax + 0x20fffb66]
0x000000000017aba4 : nop ; sti ; call qword ptr [rax]
0x000000000017a785 : nop ; sti ; call qword ptr [rsi + 0x26fffb8f]
0x000000000017a8c1 : nop ; sti ; call rsp
0x000000000017a8bd : nop ; sti ; inc dword ptr [rax + rdx*4 - 5] ; call rsp
0x000000000017a5dc : nop ; sti ; jmp qword ptr [rax]
0x000000000017a6b8 : nop ; sti ; jmp rax
0x000000000017ae8c : nop ; stosd dword ptr [rdi], eax ; sti ; call qword ptr [rax]
0x0000000000190740 : nop ; sub al, 0xf2 ; call rsp
0x000000000017e12c : nop ; sub dh, dh ; jmp qword ptr [rax]
0x000000000007a73f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001a0db0 : nop ; test al, 0xf7 ; jmp qword ptr [rax]
0x000000000017efac : nop ; test dh, bh ; jmp rax
0x00000000001809a0 : nop ; test dword ptr [rdx], eax ; add byte ptr [rax - 0x4d], ah ; cli ; jmp rax
0x000000000017ab48 : nop ; test edi, ebx ; call qword ptr [rax]
0x000000000007836f : nop ; test rdx, rdx ; jne 0x78388 ; xor eax, eax ; ret
0x00000000000af06f : nop ; test rsi, rsi ; jne 0xaf082 ; xor rax, rax ; ret
0x000000000017ab40 : nop ; xchg bl, bh ; call qword ptr [rax]
0x000000000017ab38 : nop ; xchg ebx, edi ; call qword ptr [rax]
0x00000000000ba87f : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e0f3f : nop ; xor eax, eax ; pop rbx ; ret
0x0000000000037f3f : nop ; xor eax, eax ; ret
0x000000000011037f : nop ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000023cdf : nop ; xor esi, esi ; mov rdi, r12 ; call 0x20738
0x0000000000023cde : nop ; xor esi, esi ; mov rdi, r12 ; call 0x20739
0x000000000010fbfb : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000128138 : nop dword ptr [rax + rax] ; call rcx
0x00000000000ccfc3 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000070b7b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000f5c23 : nop dword ptr [rax + rax] ; mov eax, edx ; ret
0x0000000000098dbb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000127f2b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000fc5b3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000325ab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009a02b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000113d0b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000048a53 : nop dword ptr [rax + rax] ; ret
0x000000000003726b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000036a03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009f26b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000000355f : nop dword ptr [rax - 0x80] ; fcmove st(0), st(5) ; retf
0x00000000000692b5 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000af52c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000080ccc : nop dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000159625 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000159cd9 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000330ac : nop dword ptr [rax] ; fadd st(0) ; ret
0x000000000008aaa4 : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000f02ec : nop dword ptr [rax] ; mov eax, 0x122 ; syscall
0x00000000000344fc : nop dword ptr [rax] ; mov eax, 0x3e ; syscall
0x000000000006917d : nop dword ptr [rax] ; mov eax, 0x52 ; syscall
0x00000000000e21dc : nop dword ptr [rax] ; mov eax, 0x53 ; syscall
0x00000000000e752c : nop dword ptr [rax] ; mov eax, 0x62 ; syscall
0x00000000000c0e55 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000349dc : nop dword ptr [rax] ; mov eax, 0x83 ; syscall
0x00000000000e1d4c : nop dword ptr [rax] ; mov eax, 0x84 ; syscall
0x00000000000e783c : nop dword ptr [rax] ; mov eax, 0x8d ; syscall
0x00000000000effec : nop dword ptr [rax] ; mov eax, 0xad ; syscall
0x00000000000b031c : nop dword ptr [rax] ; mov eax, 0xc9 ; syscall
0x00000000000e97bd : nop dword ptr [rax] ; mov eax, 0xeb ; syscall
0x0000000000034e94 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000833b5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x00000000000bb70d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x000000000007249d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002cfbd : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000006e254 : nop dword ptr [rax] ; mov eax, edi ; ret
0x0000000000099a8d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000dcfa5 : nop dword ptr [rax] ; mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000000000c1dac : nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000006bd6d : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x0000000000080b3c : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000015984c : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aadec : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000115d95 : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002b181 : nop dword ptr [rax] ; ret
0x00000000000cd09d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000034d7d : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000014eddd : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000099a47 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000128137 : nop word ptr [rax + rax] ; call rcx
0x0000000000070b7a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000f5c22 : nop word ptr [rax + rax] ; mov eax, edx ; ret
0x00000000000325aa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009a02a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000113d0a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000048a52 : nop word ptr [rax + rax] ; ret
0x000000000003726a : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000036a02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009f26a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000b2c5e : not eax ; add eax, 0x16e ; ret
0x0000000000121041 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000ccfaa : not eax ; and eax, 2 ; ret
0x0000000000032ea0 : not eax ; and eax, edx ; ret
0x0000000000128803 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000021ea1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000338cd : not edx ; and eax, edx ; ret
0x0000000000128802 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000018dac8 : or ah, al ; sti ; call rsp
0x000000000017efe8 : or ah, bl ; add dword ptr [rax], eax ; push rax ; mov bh, dh ; jmp qword ptr [rax]
0x00000000000f9e43 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000144b47 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148759 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144b75 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000cb0fe : or al, 0 ; add byte ptr [rax], al ; jmp 0xcb0cc
0x00000000000e794a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000e78f1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000c8b62 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000c9e51 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c9e31 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000007ecda : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000038f4e : or al, 0 ; add byte ptr [rbp + 0x3d], dh ; add rsp, 8 ; ret
0x000000000012ad78 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009f908 : or al, 0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000066a63 : or al, 0 ; add dh, dh ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x0000000000020ef5 : or al, 0 ; call 0x2d1f4
0x0000000000083afb : or al, 0 ; cmovne rax, rdx ; ret
0x0000000000084e70 : or al, 0 ; je 0x84e3f ; ret
0x00000000000346c5 : or al, 0 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009def5 : or al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x0000000000085e52 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x85e49 ; ret
0x000000000008c336 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000db9b6 : or al, 0x24 ; mov rdi, qword ptr [rbp - 0x198] ; call rbx
0x0000000000076aac : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000011a53b : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c5def : or al, 0x39 ; ret 0xef7c
0x00000000001956c4 : or al, 0x46 ; add dword ptr [rax], eax ; sub al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000bf722 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000345dc : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000bf9ae : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000375be : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000bc32b : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127e30 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000006f0b3 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000b1103 : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b1c1 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000010fcdb : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000010b6d3 : or al, 0x4c ; cmp edx, eax ; jne 0x10b6c0 ; ret
0x00000000000ba603 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000083d73 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000001ebd : or al, 0x5c ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000af9b2 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00000000000fcf0a : or al, 0x5d ; pop r12 ; ret
0x000000000008a98a : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; add rax, rdi ; ret
0x00000000001981c4 : or al, 0x71 ; add dword ptr [rax], eax ; call 0x2219775c
0x000000000010a54a : or al, 0x75 ; retf
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000994bc : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000081ac6 : or al, 0x83 ; retf -0x76fe
0x000000000004fc2c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000005339c : or al, 0x85 ; sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000008a970 : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x00000000001008ab : or al, 0x89 ; ret 0x6ae9
0x0000000000043502 : or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000000b6281 : or al, 0x8a ; add rdx, r9 ; jmp rdx
0x0000000000114f10 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000008afa3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000090d74 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013109d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000012bb1d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000f3ad8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000d62e8 : or al, 0x8e ; add rcx, rsi ; jmp rcx
0x000000000014f30f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000098c4b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000019a4c4 : or al, 0x94 ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000002c2e : or al, 0xaf ; xbegin 0xfffffffff8c6f032 ; ret
0x000000000012bb21 : or al, 0xb ; jmp r9
0x0000000000098c4f : or al, 0xb ; jmp rcx
0x000000000011c068 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x0000000000121447 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000011c07e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018dac4 : or al, 0xca ; add byte ptr [rax], al ; or ah, al ; sti ; call rsp
0x000000000002a7e3 : or al, 0xd8 ; test rcx, rcx ; je 0x2a7f3 ; call rcx
0x00000000000b97ef : or al, 0xe9 ; retf
0x0000000000079d7c : or al, 0xeb ; ret
0x000000000017c2f5 : or al, 0xef ; dec eax ; ret 0
0x000000000002f478 : or al, 0xf ; retf -0x2d77
0x00000000001150d7 : or al, 0xf ; retf -0x2e77
0x000000000011a695 : or al, 0xf ; retf 0x5089
0x000000000009f155 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000099743 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000001335e3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000034543 : or al, 0xf3 ; ret
0x000000000006aa8b : or al, 0xf6 ; ret 0xf04
0x0000000000054e14 : or al, 0xf6 ; ret 0xf08
0x00000000001907c4 : or al, 0xf7 ; add byte ptr [rax], al ; cwde ; pop rax ; call qword ptr [rax]
0x00000000001a1760 : or al, 0xf7 ; call rax
0x0000000000191d7d : or al, 1 ; add byte ptr [rax - 0x17], dl ; jmp qword ptr [rcx]
0x00000000000e1a92 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000e2183 : or al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000e1b82 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000000971 : or al, 1 ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x000000000017f7b9 : or al, 2 ; add al, dh ; jge 0x17f7bd ; call qword ptr [rax]
0x000000000018780c : or al, 3 ; add byte ptr [rax], al ; add al, 0xc4 ; retf 1
0x0000000000099980 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000035d36 : or al, 7 ; mov qword ptr [rsp + 0x10], r9 ; call r14
0x000000000008a796 : or al, 7 ; test cl, cl ; jne 0x8a78f ; ret
0x00000000000a29ed : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf -2
0x000000000005017f : or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0x14eb
0x0000000000143d1d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146931 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143d41 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000051c0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000101a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3d
0x00000000000ecf55 : or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x791f6
0x000000000010bf89 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x38a49
0x00000000001074e4 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114f52 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000eb231 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008d3d8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000005811b : or al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x408d
0x0000000000083b2a : or al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000009f8c8 : or al, byte ptr [rax] ; je 0x9f897 ; ret
0x00000000000c4f1c : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000c497c : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000c1499 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000009f69a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000006d31d : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x000000000010d726 : or al, byte ptr [rcx - 0x7d] ; ret
0x0000000000191b65 : or al, byte ptr [rcx] ; add al, bh ; loope 0x191b63 ; jmp qword ptr [rcx]
0x00000000000e3e31 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000013d8 : or al, byte ptr [rip + 0x50d0000] ; add byte ptr [rax], al ; syscall
0x000000000014c877 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008aee8 : or al, ch ; add dl, byte ptr [rsi - 7] ; dec dword ptr [rax + 0x39] ; ret
0x00000000001024a3 : or al, ch ; jmp rdx
0x0000000000047585 : or al, ch ; push rbp ; retf -1
0x0000000000047483 : or al, ch ; push rdi ; retf
0x0000000000029cd7 : or al, ch ; ret
0x00000000000d9dd8 : or al, ch ; ret 0xf469
0x00000000001099bf : or al, ch ; retf
0x0000000000031740 : or al, ch ; retf -3
0x0000000000117640 : or al, ch ; retf 0x8c
0x00000000000f13e0 : or al, ch ; retf 0xb8
0x00000000000adc09 : or al, ch ; xchg eax, ecx ; loop 0xadc15 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a7d46 : or al, ch ; xchg eax, esp ; ret 0xfff9
0x0000000000194dd0 : or bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000017f5a0 : or bh, bh ; add dword ptr [rax], eax ; mov al, 0x42 ; clc ; jmp qword ptr [rax]
0x0000000000120887 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001a3ff9 : or bh, bl ; call rax
0x0000000000083ca1 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000007575d : or bh, byte ptr [rax - 1] ; ret
0x00000000000aacaf : or bh, byte ptr [rcx] ; ret
0x000000000018b229 : or bh, ch ; jmp rdx
0x000000000017ed18 : or bh, cl ; add dword ptr [rax], eax ; adc byte ptr [rax - 9], bl ; jmp qword ptr [rax]
0x00000000000d0604 : or bh, dh ; ret
0x00000000000ea57f : or bh, dh ; ret 0xfc07
0x0000000000123cee : or bl, al ; mov dword ptr [rsi], eax ; mov eax, 0xffffffff ; ret
0x0000000000112b7e : or bl, al ; mov eax, 1 ; ret
0x00000000000f7ecd : or bl, al ; nop ; mov eax, 1 ; ret
0x000000000010bf43 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000010bda0 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000000869c5 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d8e48 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000006a5ff : or bl, ch ; ret 0x538b
0x00000000000dd9e6 : or bl, ch ; retf
0x0000000000100dfd : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00000000001337a3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002cb1f : or bl, dh ; ret
0x00000000000c84d8 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000c8451 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000003254d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000007e0f6 : or byte ptr [r11 + r9*4 + 0x58], cl ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000095a1f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c8442 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000c850e : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000073e7d : or byte ptr [r15], r9b ; mov dh, 0x10 ; mov eax, edx ; ret
0x00000000000bdca2 : or byte ptr [r8 + 0x39], r9b ; ret
0x00000000000cd002 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000454df : or byte ptr [r8 + 2], r15b ; ret
0x00000000000c8521 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ca2c4 : or byte ptr [r8 - 0x75], r9b ; jl 0xca2eb ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000001207fa : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000959fe : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000000c6a7b : or byte ptr [r8 - 0x77], 0x55 ; mov al, ch ; retf 0x35b
0x000000000013c328 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000115c82 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000003795a : or byte ptr [r8 - 0x77], cl ; retf
0x000000000011e3ea : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000036a3a : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000c2cea : or byte ptr [r8 - 0x7d], r9b ; ret 0x4808
0x000000000014ca52 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004ebfb : or byte ptr [r8], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x68e8
0x00000000000edfcc : or byte ptr [r8], r8b ; mov rax, rbx ; pop rbx ; ret
0x0000000000095a5e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000001234ec : or byte ptr [r9], dil ; ret 0x4e75
0x00000000000c84b1 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000c8471 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000001137c3 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x00000000000836c9 : or byte ptr [rax + 0x19], cl ; fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x00000000000af883 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000025f79 : or byte ptr [rax + 0x29], cl ; retf -0x1f7d
0x00000000000375f8 : or byte ptr [rax + 0x29], cl ; retf -0x3eb8
0x0000000000051bee : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax + 0x29], 1 ; retf -0x8b8
0x0000000000116cb6 : or byte ptr [rax + 0x31], cl ; ret 0xe281
0x00000000000f00e9 : or byte ptr [rax + 0x38], bh ; syscall
0x000000000007aac7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000040982 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000081fb1 : or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000007dcd3 : or byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000007e032 : or byte ptr [rax + 0x39], cl ; ret 0xa74
0x000000000003531a : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x0000000000128911 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x000000000007c5c6 : or byte ptr [rax + 0x39], cl ; retf
0x00000000000c2cef : or byte ptr [rax + 0x39], cl ; retf -0x38b8
0x00000000000704b2 : or byte ptr [rax + 0x39], cl ; retf -0x7df1
0x00000000000f544e : or byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x000000000017bda8 : or byte ptr [rax + 0x54d00000], ah ; in al, dx ; jmp qword ptr [rax]
0x000000000011a429 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000cd003 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x000000000010c0c2 : or byte ptr [rax + 0x63], cl ; salc ; ret
0x0000000000190baa : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x000000000019e94a : or byte ptr [rax + 0xb], cl ; ret
0x0000000000193bcd : or byte ptr [rax + 0xb], dl ; ret
0x00000000000fd482 : or byte ptr [rax + 0xe6], bh ; syscall
0x00000000000afe46 : or byte ptr [rax + 0xf], 0x4d ; ret 0xc35b
0x00000000000c597b : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x0000000000100e6b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000b1b89 : or byte ptr [rax + 0xf], cl ; retf -0x76b8
0x0000000000023263 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000002fa30 : or byte ptr [rax + 1], cl ; ret
0x00000000000454e0 : or byte ptr [rax + 2], bh ; ret
0x000000000003272e : or byte ptr [rax + 2], bh ; syscall
0x00000000000e15de : or byte ptr [rax + 3], bh ; syscall
0x00000000000fb25b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000bd8fd : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000c8522 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d2c6d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000033bc3 : or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000111ad9 : or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000013e4b7 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf -0x7cb8
0x000000000007bf83 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000000f30d1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000f3132 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000ca2c5 : or byte ptr [rax - 0x75], cl ; jl 0xca2ea ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000001207fb : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006bd54 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000114f2d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011c012 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000123a4d : or byte ptr [rax - 0x75], cl ; xor al, ch ; retf 0xb
0x00000000000959ff : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x00000000000c6a7c : or byte ptr [rax - 0x77], 0x55 ; mov al, ch ; retf 0x35b
0x00000000000fbb1d : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000110359 : or byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop rbp ; ret
0x0000000000095910 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000100ab8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000030f39 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000011e3eb : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000705a9 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000f1684 : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0x00000000000cf24b : or byte ptr [rax - 0x77], cl ; jl 0xcf27c ; sbb byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000ca5db : or byte ptr [rax - 0x77], cl ; jo 0xca607 ; xor eax, eax ; ret
0x000000000013c329 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000115c83 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000114d6b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000b3c40 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000cb175 : or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x0000000000116f43 : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x000000000012068f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000ddcbb : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000d4da9 : or byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000117367 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000036a3b : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000ec4d6 : or byte ptr [rax - 0x77], cl ; ret 0xe083
0x00000000000e9b0f : or byte ptr [rax - 0x77], cl ; ret 0xf88
0x000000000010c103 : or byte ptr [rax - 0x77], cl ; ret 0xfc3
0x000000000003795b : or byte ptr [rax - 0x77], cl ; retf
0x00000000001217be : or byte ptr [rax - 0x77], cl ; retf -0x76b4
0x00000000000fd054 : or byte ptr [rax - 0x77], cl ; retf -0x76b7
0x0000000000121894 : or byte ptr [rax - 0x77], cl ; retf -0x76bc
0x00000000000dc548 : or byte ptr [rax - 0x77], cl ; retf -0x7cf1
0x00000000000ca5da : or byte ptr [rax - 0x77], r9b ; jo 0xca608 ; xor eax, eax ; ret
0x00000000000ec4d5 : or byte ptr [rax - 0x77], r9b ; ret 0xe083
0x00000000000d644b : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rbp*2 + 0x48], 0x89 ; ret 0x77e9
0x00000000000833ad : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000083457 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000009b879 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x000000000007ee18 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000442e7 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000d925b : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c63e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000000c2ceb : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000088ee8 : or byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000026f3f : or byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000533c2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000110a46 : or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000001010c2 : or byte ptr [rax - 0x7d], cl ; ret 0x901
0x00000000001098cb : or byte ptr [rax - 0x7d], cl ; ret 0xe841
0x000000000006e54b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000071f15 : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000143f7c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007ddbf : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xe972
0x00000000001a759d : or byte ptr [rax], al ; add byte ptr [rax + 3], bh ; add byte ptr [rax], al ; retf
0x00000000000dac45 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000046cb2 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x0000000000143f7d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146ad1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143fa1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000b0537 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x0000000000079b4d : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000016f77c : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 6], bl ; jmp rax
0x00000000000805e6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000001b198 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rcx]
0x000000000001d790 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rax]
0x00000000000059a0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001e828 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x170e
0x000000000001d688 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000001ca10 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1718
0x0000000000011460 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b
0x0000000000005172 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000fb9a : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000e6812 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x00000000000f02b7 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x0000000000034531 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003457b : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x0000000000043386 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000021e69 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000034eec : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x0000000000034343 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000009dfc9 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114f62 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e2647 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000018d39e : or byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret 0
0x000000000008d558 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001a66b5 : or byte ptr [rax], al ; add byte ptr [rcx + 5], cl ; add byte ptr [rax], al ; ret 4
0x00000000000804e6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x804b9 ; ret
0x0000000000058098 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x408d
0x000000000004ebfc : or byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x68e8
0x000000000007faf3 : or byte ptr [rax], al ; add cl, ch ; retf -3
0x00000000000f9c64 : or byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x0000000000073654 : or byte ptr [rax], al ; add rsp, 0x80 ; ret
0x00000000000e868c : or byte ptr [rax], al ; mov eax, 2 ; syscall
0x00000000000edcab : or byte ptr [rax], al ; mov eax, ebx ; syscall
0x00000000000eafd8 : or byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000048828 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000edfcd : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000002b612 : or byte ptr [rax], al ; mov rdi, r15 ; mov eax, ecx ; syscall
0x00000000000e9030 : or byte ptr [rax], al ; mov rdi, rbx ; call 0x85327
0x00000000000df49a : or byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000011d180 : or byte ptr [rax], al ; setne al ; add rsp, 0x78 ; ret
0x00000000000edffa : or byte ptr [rax], al ; sub rsp, 0x60 ; syscall
0x00000000000ceb65 : or byte ptr [rax], bh ; ret 0x860f
0x00000000000cead8 : or byte ptr [rax], bh ; ret 0x870f
0x0000000000196218 : or byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x000000000017d238 : or byte ptr [rax], ch ; add dword ptr [rax], eax ; sar byte ptr [rax], 0xf1 ; call rax
0x000000000009cebd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009cefb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009ce9b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000689fb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014b04e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000edff9 : or byte ptr [rax], r8b ; sub rsp, 0x60 ; syscall
0x0000000000043e0c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000010bc6f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x0000000000199f9c : or byte ptr [rbp + 0xb], cl ; ret
0x000000000017d768 : or byte ptr [rbp + 1], cl ; add byte ptr [rax], dl ; jmp qword ptr [rax]
0x00000000000435e7 : or byte ptr [rbp + 1], cl ; retf
0x000000000017d8b0 : or byte ptr [rbp + 1], dl ; add al, al ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rax]
0x00000000001800a8 : or byte ptr [rbp + 2], 0 ; ret
0x0000000000158c27 : or byte ptr [rbp + 9], cl ; ret
0x00000000000cab98 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x0000000000185028 : or byte ptr [rbp - 0x15], ch ; call rax
0x0000000000111924 : or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x00000000000ae862 : or byte ptr [rbp - 0x28], dh ; ret
0x00000000000cb66f : or byte ptr [rbp - 0x72b700be], cl ; ret
0x000000000009f7b9 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000736fb : or byte ptr [rbp - 0x75], cl ; mov byte ptr [rax - 0x77000000], cl ; retf -0x76b3
0x00000000000cb171 : or byte ptr [rbp - 0x75], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x0000000000024452 : or byte ptr [rbp - 0x77], cl ; fmul dword ptr [rax - 0x77] ; retf
0x00000000000bfa4f : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; retf
0x000000000017a6c4 : or byte ptr [rbp - 5], 0xff ; ror byte ptr [rsi - 5], 1 ; jmp qword ptr [rax]
0x0000000000003d9f : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00000000000cd9b6 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x0000000000115e2b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x000000000002362b : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008342f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000021ff3 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000eca34 : or byte ptr [rbx + 0x94801e1], al ; retf -0x76b8
0x00000000000ecb33 : or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x00000000000ecbec : or byte ptr [rbx + 0x94801e2], al ; retf -0x76b8
0x000000000017dbd8 : or byte ptr [rbx + 1], ch ; add byte ptr [rax + 0x55], al ; hlt ; jmp qword ptr [rax]
0x0000000000180288 : or byte ptr [rbx + 2], bl ; add al, al ; add edi, edx ; jmp qword ptr [rax]
0x000000000018276d : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x0000000000185a6b : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x000000000003254e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000007e0f7 : or byte ptr [rbx + rcx*4 + 0x58], cl ; or byte ptr [rcx - 0xa], al ; ret
0x00000000000ed994 : or byte ptr [rbx + rsi*8], ch ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000004e837 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00000000000705be : or byte ptr [rbx - 0x3b7cb7fe], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000122a0e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000ca3ee : or byte ptr [rbx - 0x76bbfb83], cl ; retf -0x76b4
0x000000000006b381 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000019b8a8 : or byte ptr [rbx - 0xa], dl ; call qword ptr [rcx]
0x00000000000fcd54 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000004525b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000007f678 : or byte ptr [rcx + 0x39], cl ; ret 0x860f
0x00000000000c9061 : or byte ptr [rcx + 0x3ffe1], al ; add byte ptr [rcx], bh ; retf
0x000000000006c084 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000006d808 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000126e95 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000d6bdb : or byte ptr [rcx + 0x63], cl ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000001a32bf : or byte ptr [rcx + 0xb], al ; pop rcx ; ret
0x0000000000186ce2 : or byte ptr [rcx + 0xb], cl ; ret
0x00000000000392ed : or byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000004d074 : or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000043b1b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000446f0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000017e480 : or byte ptr [rcx + rax - 0x973b000], ah ; jmp qword ptr [rax]
0x00000000001237e3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000107f9c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000071d82 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000000a75af : or byte ptr [rcx + rcx*4 - 7], al ; call 0x43fe6
0x000000000018c158 : or byte ptr [rcx - 0x11], ch ; call rax
0x0000000000043b22 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000011805c : or byte ptr [rcx - 0x3f7cb7f0], cl ; add al, 0x89 ; retf 0x3944
0x00000000000f2049 : or byte ptr [rcx - 0x6bf73], cl ; dec dword ptr [rax + 0x63] ; retf -0x74b8
0x000000000007553a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000002f468 : or byte ptr [rcx - 0x75], al ; insd dword ptr [rdi], dx ; adc al, 0xf ; retf -0x32f1
0x00000000000ecba4 : or byte ptr [rcx - 0x75], cl ; add byte ptr [rbx + 0x94801e0], al ; ret 0x8949
0x00000000000cab5c : or byte ptr [rcx - 0x75], cl ; je 0xcab8c ; or byte ptr [rcx], ch ; ret
0x0000000000095a5f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000001096b4 : or byte ptr [rcx - 0x77], al ; ret
0x00000000000d3b31 : or byte ptr [rcx - 0x77], al ; ret 0x8341
0x000000000003efde : or byte ptr [rcx - 0x77], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000031ac6 : or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x0000000000116b36 : or byte ptr [rcx - 0x77], cl ; retf
0x00000000000f31a8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf31ba ; ret
0x00000000000f3238 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf324a ; ret
0x00000000000f32d8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf32ea ; ret
0x00000000000f3368 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf337a ; ret
0x00000000000f33f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf340a ; ret
0x00000000000f3488 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf349a ; ret
0x00000000000f3528 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf353a ; ret
0x00000000000f35c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf35da ; ret
0x00000000000f3668 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf367a ; ret
0x00000000000f36f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf370a ; ret
0x00000000000f3793 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf37a5 ; ret
0x00000000000f3828 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf383a ; ret
0x00000000000f3b4a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3b5c ; ret
0x00000000000f3bca : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3bdc ; ret
0x00000000000f3c4a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3c5c ; ret
0x00000000000f3cca : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3cdc ; ret
0x00000000000f3d4a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3d5c ; ret
0x00000000000f3dca : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3ddc ; ret
0x00000000000f3e4a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3e5c ; ret
0x00000000000f3eca : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3edc ; ret
0x00000000000f3f4a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3f5c ; ret
0x00000000000f3fca : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf3fdc ; ret
0x00000000000f4047 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf4059 ; ret
0x00000000000f40ca : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0xf40dc ; ret
0x000000000007f557 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003f6fb : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000008934e : or byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000087ea1 : or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x00000000000d7cea : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x000000000007e0fb : or byte ptr [rcx - 0xa], al ; ret
0x0000000000127539 : or byte ptr [rcx - 0xfff1e], al ; dec dword ptr [rcx] ; retf -0x57d
0x00000000000e1aa2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003471e : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000691ba : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e1b94 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019195d : or byte ptr [rcx], al ; add byte ptr [rax], dl ; fdivr st(2), st(0) ; jmp qword ptr [rcx]
0x00000000000e4495 : or byte ptr [rcx], al ; add byte ptr [rcx + 3], cl ; jbe 0xe44bd ; mov eax, ecx ; syscall
0x00000000000c84f7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000c8472 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000ae85f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x00000000001230e2 : or byte ptr [rcx], bh ; ret 0x2175
0x00000000001234ed : or byte ptr [rcx], bh ; ret 0x4e75
0x0000000000121622 : or byte ptr [rcx], bh ; retf -0x7af1
0x00000000000c84b2 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000aad2d : or byte ptr [rcx], ch ; ret
0x00000000000bb117 : or byte ptr [rcx], cl ; add byte ptr [rax + 2], bh ; syscall
0x00000000000eff25 : or byte ptr [rcx], cl ; clc ; ret
0x00000000000c8e12 : or byte ptr [rcx], cl ; retf -0x76bf
0x0000000000180e98 : or byte ptr [rcx], dh ; add dword ptr [rax], eax ; xor byte ptr [rdi - 3], ch ; jmp qword ptr [rax]
0x000000000008ae06 : or byte ptr [rcx], dh ; imul al ; ret 0xf958
0x00000000000fd510 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000002310e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000d6eab : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007a77f : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000042a88 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001230e1 : or byte ptr [rcx], dil ; ret 0x2175
0x000000000016a5be : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000190e94 : or byte ptr [rdi + 0xb], al ; add ch, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000188632 : or byte ptr [rdi + 0xb], al ; push rsp ; ret
0x00000000001974e4 : or byte ptr [rdi + 0xb], al ; ret
0x0000000000083972 : or byte ptr [rdi + 0xb], dh ; mov qword ptr [rdi], rdx ; mov rax, r8 ; ret
0x0000000000186051 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xab20202], al ; ret
0x0000000000066c5b : or byte ptr [rdi + 1], bh ; jmp 0x66c2d
0x0000000000180488 : or byte ptr [rdi + 2], ah ; add byte ptr [rax + 0x35], al ; cli ; jmp qword ptr [rax]
0x00000000001805c0 : or byte ptr [rdi + 2], ch ; add byte ptr [rax], dh ; cli ; jmp qword ptr [rax]
0x000000000005d694 : or byte ptr [rdi + rcx - 0x4a], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005ba34 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000017bec8 : or byte ptr [rdi - 0x77700000], ah ; in al, dx ; jmp qword ptr [rax]
0x000000000017e0c8 : or byte ptr [rdi - 0xbffffff], 0xf5 ; call qword ptr [rax]
0x000000000005a4f7 : or byte ptr [rdi], 0x85 ; ret 0
0x00000000000273d2 : or byte ptr [rdi], 0x85 ; sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002cdb4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000442b7 : or byte ptr [rdi], cl ; mov cs, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000075f11 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000073e7e : or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; ret
0x0000000000073fe3 : or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x00000000000f0338 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001167a9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000040ed8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001150c3 : or byte ptr [rdi], cl ; retf -0x2e77
0x000000000012c0eb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000042e3f : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x00000000000210aa : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000883f8 : or byte ptr [rdi], dh ; ret
0x00000000000883f7 : or byte ptr [rdi], sil ; ret
0x0000000000183212 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x000000000017d6e0 : or byte ptr [rdx + 1], cl ; add byte ptr [rax + 0x34], dl ; jmp qword ptr [rax]
0x0000000000180510 : or byte ptr [rdx + 2], ch ; add al, dh ; cmp edi, edx ; jmp qword ptr [rax]
0x0000000000190248 : or byte ptr [rdx + rsi*8], al ; call rsi
0x000000000017f769 : or byte ptr [rdx], al ; add byte ptr [rax], dl ; clc ; call qword ptr [rax]
0x00000000000c8452 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x000000000017b6d0 : or byte ptr [rdx], bh ; add byte ptr [rax], ah ; and al, 0xeb ; jmp qword ptr [rax]
0x00000000000c84d9 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x000000000016cd40 : or byte ptr [rdx], dl ; lcall ptr [rax] ; adc dh, bl ; call rdi
0x00000000000e6f92 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000e6f91 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000a821e : or byte ptr [rip + 0x358d4800], cl ; ret 0xc91
0x000000000017fc70 : or byte ptr [rip + 0x49200002], ch ; stc ; jmp qword ptr [rax]
0x000000000017d548 : or byte ptr [rip + 0x5ce00001], bh ; jmp qword ptr [rax]
0x00000000000c8545 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000098611 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000cd0e1 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x000000000019a378 : or byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000017e0a8 : or byte ptr [rsi - 0x13cfffff], 0xf5 ; call rax
0x0000000000095a20 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000017fb24 : or byte ptr [rsi], 0xf9 ; call rax
0x0000000000000973 : or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000000c850f : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000c8443 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x00000000000aac54 : or byte ptr [rsp + rax + 0x75db8500], cl ; fsubr qword ptr [rcx] ; ret
0x00000000001a759c : or byte ptr ds:[rax], al ; add byte ptr [rax + 3], bh ; add byte ptr [rax], al ; retf
0x0000000000003d9e : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000016b4cd : or ch, bh ; call rdi
0x000000000017c2c5 : or ch, bh ; inc dword ptr [rax] ; ret 0
0x000000000016b591 : or ch, bh ; inc ebp ; or ch, bh ; call rdi
0x000000000017c2cd : or ch, bh ; lcall ptr [rax] ; ret 0
0x000000000016b5d5 : or ch, bh ; ljmp ptr [rax - 2] ; out dx, al ; call rdi
0x000000000016b59d : or ch, bh ; ljmp ptr [rax - 4] ; out dx, al ; call rdi
0x000000000018e548 : or ch, bh ; sti ; call qword ptr [rbx]
0x0000000000183a39 : or ch, bl ; jmp qword ptr [rcx]
0x0000000000086841 : or ch, bl ; ret 0x1f0f
0x00000000000fb323 : or ch, byte ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000001a4316 : or ch, byte ptr [rdi + 5] ; ret
0x000000000017caa8 : or cl, bh ; add byte ptr [rax], al ; jo 0x17caa9 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017fab5 : or cl, bh ; call qword ptr [rax]
0x000000000003303b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000af637 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x00000000000297f8 : or cl, byte ptr [rax + 0x39] ; ret 0x2276
0x000000000009f4e5 : or cl, byte ptr [rax + 0x39] ; sal byte ptr [rbp - 0x1b], 1 ; xor eax, eax ; ret
0x0000000000121b78 : or cl, byte ptr [rax + 0x63] ; stc ; mov eax, 3 ; syscall
0x00000000000784ec : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000772f6 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000d76f6 : or cl, byte ptr [rax - 0x77] ; ret 0x31e8
0x00000000000b4ca7 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000142d2c : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf -0xb
0x000000000006d7e7 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008453a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d3adf : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x0000000000069b04 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000007b434 : or cl, byte ptr [rbp + 0x39] ; ret
0x00000000000ccba4 : or cl, byte ptr [rbp + 0x63] ; ret
0x0000000000100ea5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x0000000000122d8f : or cl, byte ptr [rcx + 0x39] ; ret
0x000000000012165e : or cl, byte ptr [rcx + 0x63] ; clc ; mov eax, 3 ; syscall
0x00000000000dc7ad : or cl, byte ptr [rcx + 0x63] ; cld ; mov eax, 3 ; syscall
0x000000000012235d : or cl, byte ptr [rcx + 0x63] ; std ; mov eax, 3 ; syscall
0x00000000000f96df : or cl, byte ptr [rcx - 0x7d] ; ret 0x4801
0x00000000000d91cc : or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x0000000000100e25 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x000000000013e256 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000122a11 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000034497 : or cl, ch ; ret
0x00000000000c960b : or cl, ch ; retf -2
0x0000000000002c4b : or cl, cl ; clc ; ret
0x000000000009d875 : or cl, cl ; cmove rax, rdx ; ret
0x000000000011fc71 : or dh, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000169fa2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001336c3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000ed865 : or dh, bl ; ret
0x0000000000169dca : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000001a4240 : or dh, byte ptr [rbp + 5] ; retf
0x000000000009e576 : or dh, byte ptr [rbp - 0x11] ; ret
0x000000000017c420 : or dh, cl ; add byte ptr [rax], al ; jo 0x17c469 ; out dx, eax ; jmp qword ptr [rax]
0x000000000018e8f9 : or dh, cl ; call rdx
0x000000000010f9da : or dh, dh ; ret 0x7401
0x00000000000e23a3 : or dh, dh ; ret 0x7540
0x0000000000115454 : or dh, dh ; ret 0x8802
0x000000000017ee90 : or dh, dl ; add dword ptr [rax], eax ; and byte ptr [rcx - 9], ch ; jmp qword ptr [rax]
0x000000000017c3b8 : or dl, 0 ; add byte ptr [rax + 0x30], dh ; out dx, eax ; call rax
0x0000000000195528 : or dl, ah ; hlt ; call qword ptr [rax]
0x000000000017cae0 : or dl, bh ; add byte ptr [rax], al ; mov al, 0xf6 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017ef68 : or dl, bl ; add dword ptr [rax], eax ; sar byte ptr [rdi - 9], 1 ; jmp qword ptr [rax]
0x00000000000024b3 : or dword ptr [rax + 0x41001835], 0xffffffdd ; out 0xa9, al ; ret 0xbd07
0x000000000002be93 : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x00000000000d9ed4 : or dword ptr [rax + 8], 0x2000 ; ret
0x000000000012a647 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000119093 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x00000000000f605b : or dword ptr [rax - 0x76b7ffd5], ebx ; ret 0x8d48
0x00000000000aa805 : or dword ptr [rax - 0x7d], 0x394801c0 ; ret 0xf175
0x0000000000021576 : or dword ptr [rax - 0x7d], 0x834801c2 ; ret
0x00000000000f7669 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc348be79
0x00000000000f909f : or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000088df3 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000009893e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000039acd : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000003d1a1 : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf -2
0x0000000000157933 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax + 9], cl ; ret
0x0000000000143ead : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeff : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143e07 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000062a0 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x0000000000011052 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000071937 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002188a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000eb1ab : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x00000000000e0eb8 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb13d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000092a7e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010a59d : or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x0000000000097b65 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000566f1 : or dword ptr [rax], eax ; add dh, al ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000000bb118 : or dword ptr [rax], eax ; mov eax, 2 ; syscall
0x00000000000e0a8c : or dword ptr [rax], eax ; mov edx, 0x18c ; call 0x2cce9
0x00000000000d48ec : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d17a4 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000166f37 : or dword ptr [rax], ecx ; retf
0x0000000000169713 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000150746 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000000f29de : or dword ptr [rbx + 0x28901c0], eax ; ret
0x00000000001156b6 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000853c8 : or dword ptr [rbx + 0x49000000], 0xffffff89 ; retf -0x46bf
0x00000000000f6f26 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e6524 : or dword ptr [rbx + 0x64], 2 ; jmp 0xe64fa
0x00000000000dc1fb : or dword ptr [rbx - 0x7af0f508], eax ; retf 9
0x00000000000acaa4 : or dword ptr [rbx - 0x7bf09a07], eax ; ret
0x00000000000c4fe4 : or dword ptr [rbx - 0x7bf0a105], eax ; ret 7
0x0000000000084051 : or dword ptr [rbx], 0 ; cmovne rax, rdx ; ret
0x000000000006bd63 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077000 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007af28 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000007b8ed : or dword ptr [rbx], esi ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000043f5c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x0000000000083c18 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000006f19e : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x00000000000377a4 : or dword ptr [rcx - 0x7d], 0xfffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000c7e70 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000001919ed : or dword ptr [rcx], eax ; add byte ptr [rax - 0x23], dl ; call qword ptr [rdx]
0x00000000000e3dd4 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000023b4 : or dword ptr [rdi + 0x2735a120], 0xffffff98 ; retf 0x7e0c
0x00000000000ca570 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x00000000001287e3 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006bd70 : or dword ptr [rdi], 0x20 ; ret
0x00000000000e7047 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000034bd6 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001053fb : or dword ptr [rdi], ecx ; ret
0x000000000010522a : or dword ptr [rdi], ecx ; retf
0x000000000013e236 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000058117 : or dword ptr [rdi], ecx ; xchg byte ptr [rsi], dl ; or al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x408d
0x00000000000a4b12 : or dword ptr [rdi], ecx ; xchg dword ptr [rsi], edx ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003f942 : or dword ptr [rdi], ecx ; xchg eax, edi ; ret 0xd284
0x0000000000083bc2 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x00000000000eb62a : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000046f29 : or dword ptr [rdi], ecx ; xchg edi, esp ; add al, 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000ebbaa : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000169f6e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf -0x4466
0x00000000001a7900 : or dword ptr [rdx], eax ; add byte ptr [rax], al ; jne 0x1a7913 ; add byte ptr [rax], al ; ret
0x000000000014c96f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e743a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000331fb : or eax, 0x146460 ; orpd xmm0, xmm1 ; ret
0x0000000000002dad : or eax, 0x1954b385 ; retf 0x172
0x000000000009a681 : or eax, 0x1c478d48 ; ret
0x000000000009b4e1 : or eax, 0x1d478d48 ; ret
0x000000000013e2b8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000e73f1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000a821f : or eax, 0x358d4800 ; ret 0xc91
0x00000000000a8317 : or eax, 0x358d4800 ; retf 0xc90
0x0000000000127e02 : or eax, 0x38c48348 ; ret
0x0000000000093652 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000b338a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000012846f : or eax, 0x48fffffb ; add esp, 0x28 ; ret
0x0000000000068af2 : or eax, 0x5bd88948 ; ret
0x000000000011e102 : or eax, 0x5c415d5b ; ret
0x0000000000099765 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x0000000000053576 : or eax, 0x8118e383 ; ret
0x000000000017f7d9 : or eax, 0x81400002 ; clc ; call rax
0x00000000000ad120 : or eax, 0x83480000 ; ret
0x0000000000144a57 : or eax, 0x83480000 ; ret 0x4910
0x00000000001465f1 : or eax, 0x83480000 ; ret 0xe910
0x0000000000144a85 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000ea0bd : or eax, 0x834820eb ; ret
0x00000000000a028d : or eax, 0x86ba00 ; add byte ptr [rax], al ; call 0x2cce9
0x000000000009ae29 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000003742f : or eax, 0x89000004 ; ret 0x3d83
0x0000000000058a7b : or eax, 0x89480000 ; retf -0x76b8
0x000000000008d0d8 : or eax, 0x894d0000 ; retf
0x000000000006c37a : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000084122 : or eax, 0x8c48348 ; ret
0x00000000000af192 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000161cd9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000161ce5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000169f53 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x0000000000191df5 : or eax, 0xea780001 ; jmp qword ptr [rcx]
0x0000000000191e0d : or eax, 0xea900001 ; jmp qword ptr [rcx]
0x0000000000191e85 : or eax, 0xeaa80001 ; jmp qword ptr [rcx]
0x0000000000191e9d : or eax, 0xeac00001 ; jmp qword ptr [rcx]
0x0000000000191eb5 : or eax, 0xead80001 ; jmp qword ptr [rcx]
0x0000000000169bf3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000016b35a : or eax, 0xeef6d100 ; jmp rsp
0x0000000000133573 : or eax, 0xf7f0ff3 ; ret
0x000000000003451d : or eax, 0xffffffff ; ret
0x000000000007b1e7 : or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000014a029 : or eax, 1 ; ret
0x000000000014e4b1 : or eax, 1 ; vzeroupper ; ret
0x000000000007b1e4 : or eax, 2 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000018b897 : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x000000000007e2cc : or eax, dword ptr [rax + rax] ; add byte ptr [rax + 0x39], cl ; ret 0xeb72
0x0000000000187a9d : or eax, dword ptr [rax] ; add byte ptr [rax + 0x5c], dl ; out dx, al ; jmp qword ptr [rbx]
0x000000000004ce4d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x00000000000a4b16 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000143c4d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146791 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143c71 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019d3f4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000000060ba : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000019db5c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf 1
0x0000000000114f42 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000eb201 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008d258 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009f927 : or eax, dword ptr [rax] ; cmove rax, rdx ; ret
0x0000000000083b77 : or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000089948 : or eax, dword ptr [rbp + 0x38] ; retf -0x7df1
0x0000000000029e14 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000001928e4 : or eax, dword ptr [rbx + 0xa] ; ret
0x0000000000192ed8 : or eax, dword ptr [rbx] ; ret 0xa01
0x0000000000193475 : or eax, dword ptr [rbx] ; retf
0x00000000000e3e94 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000004eaed : or eax, dword ptr [rdx + rdx*8 - 0x41f0f18c] ; retf -0x30c7
0x00000000001a1cad : or eax, dword ptr [rdx] ; add al, al ; sal edi, 1 ; call qword ptr [rdx]
0x000000000018a3ff : or eax, dword ptr [rdx] ; loopne 0x18a411 ; ret
0x00000000001a3460 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x00000000001928cc : or eax, dword ptr [rdx] ; ret
0x0000000000185a6d : or eax, dword ptr [rdx] ; retf 0xe0a
0x00000000001928dd : or eax, dword ptr [rsi + 0xa] ; ret
0x000000000018b898 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001975ff : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x00000000000336c7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000033577 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000100e70 : or eax, edi ; bswap eax ; ret
0x00000000000eff26 : or eax, edi ; ret
0x00000000000414b9 : or eax, edx ; cmp ecx, 0x24 ; jne 0x4149c ; ret
0x0000000000033475 : or eax, edx ; movq xmm0, rax ; ret
0x00000000000370ff : or eax, edx ; ret
0x000000000003302a : or eax, esi ; je 0x32fd1 ; ret
0x00000000000eff80 : or eax, esi ; ret
0x000000000007a734 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000018b4fb : or ebp, dword ptr [rdx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x000000000006bebf : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000719d8 : or ebp, eax ; retf -0x513
0x0000000000125b83 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x00000000000f909d : or ebp, ebx ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f578c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000133733 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000006918e : or ebx, esi ; ret
0x00000000000e5a9c : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000006e050 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000a4b01 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ea1b7 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000007af29 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000009f1f4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009f244 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000001928c5 : or ecx, dword ptr [rbx + 0xa] ; ret
0x000000000010dbfc : or ecx, dword ptr [rcx + rcx*4 + 0x24] ; ret 0x5d5b
0x0000000000110c5b : or ecx, dword ptr [rcx + rcx*4 + 0x34] ; ret 0xfae9
0x00000000000ce5e5 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x000000000010b203 : or ecx, dword ptr [rdi] ; mov dh, 0x55 ; add dh, dh ; ret
0x00000000001150b3 : or ecx, dword ptr [rdi] ; retf -0x2d7b
0x0000000000099723 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000c3691 : or ecx, edi ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c0ddb : or edi, dword ptr [rax + 0xfde8] ; jne 0xc0db4 ; ret
0x00000000000f784c : or edi, dword ptr [rax + 1] ; ret
0x0000000000115374 : or edi, dword ptr [rax + 2] ; ret
0x00000000000fb5b4 : or edi, dword ptr [rax + 7] ; ret
0x000000000002082b : or edi, dword ptr [rcx] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000fb966 : or edi, dword ptr [rcx] ; ret 0xf7e
0x00000000000ec49d : or edi, eax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x000000000016b4c9 : or edi, ebp ; call rdi
0x000000000016b765 : or edi, ebp ; dec ebx ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000016b6e1 : or edi, ebp ; jmp qword ptr [rsi]
0x000000000015952d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009d287 : or edi, edi ; loope 0x9d2fa ; nop dword ptr [rax + rax] ; ret
0x000000000018c5fc : or edx, dword ptr [r14 + rcx + 0x28] ; ret
0x000000000019ca60 : or edx, dword ptr [rcx + 0xa] ; ret
0x000000000018c5fd : or edx, dword ptr [rsi + rcx + 0x28] ; ret
0x0000000000002d8b : or edx, ebp ; clc ; ret
0x00000000000852fb : or esi, 0xf48000c ; ret 0xf6c3
0x000000000019f682 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x0000000000187d14 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000007c080 : or esi, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007ddd3 : or esi, dword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001134a4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000019f683 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000000e6fde : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000cfc71 : or esi, ebp ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000195c21 : or esi, ebp ; jmp rcx
0x0000000000133653 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e1ef4 : or esi, ebx ; ret
0x000000000018e929 : or esi, ecx ; jmp rsi
0x00000000000c87aa : or esi, edx ; jne 0xc87b5 ; ret
0x0000000000003b24 : or esi, edx ; push rbp ; jg 0x3b97 ; xchg eax, ebp ; retf 0x10bf
0x00000000000f7ca3 : or esi, esi ; jno 0xf7cb2 ; cmovne eax, edx ; ret
0x00000000000fa16b : or esi, esi ; ret 0xf08
0x00000000000c87a9 : or esi, r10d ; jne 0xc87b6 ; ret
0x000000000006bd64 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077001 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000018ff0e : or esp, dword ptr [rcx + 0xa] ; ret
0x0000000000003007 : or esp, dword ptr [rdx] ; js 0x2fc1 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000e65c4 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000017d9e5 : or esp, esi ; jmp rax
0x00000000000d9ed3 : or qword ptr [rax + 8], 0x2000 ; ret
0x00000000000377a3 : or qword ptr [rcx - 0x7d], 0xfffffffffffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000ca56f : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x00000000001287e2 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000034bd5 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000013e235 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000019ca5f : or r10d, dword ptr [rcx + 0xa] ; ret
0x00000000001337a2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133732 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000018ff0d : or r12d, dword ptr [r9 + 0xa] ; ret
0x000000000011fc70 : or r14b, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000001336c2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000133652 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001a345f : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00000000001928cb : or r8d, dword ptr [r10] ; ret
0x0000000000193474 : or r8d, dword ptr [r11] ; retf
0x00000000001975fe : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x000000000018a3fe : or r8d, dword ptr [rdx] ; loopne 0x18a412 ; ret
0x0000000000185a6c : or r8d, dword ptr [rdx] ; retf 0xe0a
0x0000000000033029 : or r8d, esi ; je 0x32fd2 ; ret
0x00000000001928c4 : or r9, qword ptr [rbx + 0xa] ; ret
0x00000000000297f7 : or r9b, byte ptr [r8 + 0x39] ; ret 0x2276
0x000000000013e2b7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000003451c : or rax, 0xffffffffffffffff ; ret
0x00000000001a2016 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014c752 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144cd7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009f8af : or rax, qword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000001928e3 : or rax, qword ptr [rbx + 0xa] ; ret
0x0000000000192ed7 : or rax, qword ptr [rbx] ; ret 0xa01
0x00000000001928dc : or rax, qword ptr [rsi + 0xa] ; ret
0x00000000000414b8 : or rax, rdx ; cmp ecx, 0x24 ; jne 0x4149d ; ret
0x0000000000033474 : or rax, rdx ; movq xmm0, rax ; ret
0x00000000000370fe : or rax, rdx ; ret
0x00000000000eff7f : or rax, rsi ; ret
0x00000000000ec49c : or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x0000000000115453 : or sil, sil ; ret 0x8802
0x00000000000e6523 : or word ptr [rbx + 0x64], 2 ; jmp 0xe64fb
0x0000000000033200 : orpd xmm0, xmm1 ; ret
0x0000000000033201 : orps xmm0, xmm1 ; ret
0x00000000000335de : orps xmm0, xmm3 ; ret
0x000000000018a4c1 : out -0x12, eax ; call qword ptr [rdx]
0x00000000000c3caa : out -0x18, eax ; clc ; retf -0xb
0x0000000000103ba6 : out -0x18, eax ; hlt ; retf
0x000000000006ad2a : out -0x18, eax ; nop ; ret
0x00000000000c42e3 : out -0x18, eax ; push rdi ; ret
0x000000000011cadf : out -0x18, eax ; ret
0x0000000000119e98 : out -0x18, eax ; ret 0xffc5
0x00000000000b2daf : out -0x18, eax ; retf
0x0000000000023ce4 : out -0x18, eax ; retf -1
0x00000000000657b0 : out -0x18, eax ; retf 0xac
0x0000000000101fd8 : out -0x18, eax ; xchg eax, edx ; rol dword ptr [rax], cl ; add cl, ch ; ret 0xfffc
0x0000000000002701 : out -0x21, eax ; syscall
0x0000000000168aa0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000f1f62 : out -0x48, eax ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000f2286 : out -0x48, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f1e7f : out -0x48, eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000002b4ba : out -0x48, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000850f5 : out -0x4a, eax ; or eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000346bf : out -0x77, eax ; ret
0x00000000000da58e : out -0x77, eax ; retf -0x35cf
0x000000000002cfd3 : out -0x80, eax ; sete al ; ret
0x000000000017e86d : out -0xa, eax ; jmp qword ptr [rax]
0x000000000019d4d1 : out -0xa, eax ; jmp qword ptr [rdi]
0x000000000016a7c8 : out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000195621 : out -0xc, eax ; jmp qword ptr [rcx]
0x0000000000132fba : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000f7d38 : out -0xd, eax ; ret
0x000000000016cac5 : out -0xe, eax ; call qword ptr [rax]
0x000000000016cae5 : out -0xe, eax ; inc eax ; out -0xe, eax ; jmp rax
0x000000000016cac9 : out -0xe, eax ; jmp qword ptr [rax]
0x000000000016cae9 : out -0xe, eax ; jmp rax
0x0000000000066515 : out -1, eax ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000fd42f : out 0, al ; add byte ptr [rax], al ; syscall
0x000000000018f7fd : out 0, eax ; add byte ptr [rax - 0x4a], ah ; int1 ; jmp qword ptr [rcx]
0x000000000017c809 : out 0, eax ; add byte ptr [rax], dl ; lodsb al, byte ptr [rsi] ; out dx, eax ; call qword ptr [rax]
0x0000000000100e79 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000035dfe : out 0x41, eax ; call rsi
0x0000000000156a3f : out 0x41, eax ; jmp rdi
0x00000000000e1c59 : out 0x44, al ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b6eb : out 0x44, eax ; mov eax, edx ; syscall
0x00000000000fb151 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000023252 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001165d9 : out 0x48, al ; mov edi, ebp ; call rax
0x0000000000115c86 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000701ad : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e246c : out 0x48, al ; movsxd rdi, ebp ; mov eax, 0x101 ; syscall
0x00000000000e8211 : out 0x48, al ; movsxd rdi, ebx ; mov eax, 0x10e ; syscall
0x00000000000f05c0 : out 0x48, al ; movsxd rdi, ebx ; mov eax, 0x113 ; syscall
0x00000000000f1294 : out 0x48, al ; movsxd rdi, ebx ; mov eax, 0x2c ; syscall
0x00000000000f1074 : out 0x48, al ; movsxd rdi, ebx ; mov eax, 0x2d ; syscall
0x000000000009f2d0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043bb8 : out 0x48, eax ; mov eax, edx ; ret
0x00000000000f20c0 : out 0x48, eax ; movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x00000000000e9afa : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000002d978 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a08fb : out 0x4d, eax ; mov ecx, edi ; call rbx
0x00000000000f816d : out 0x5b, eax ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000011e808 : out 0x5b, eax ; ret
0x000000000017a1a8 : out 0x5e, al ; std ; jmp rsi
0x000000000017a1ac : out 0x5f, al ; std ; jmp rsi
0x000000000016b7b8 : out 0x6f, eax ; out dx, eax ; call qword ptr [rbx]
0x000000000016b7f8 : out 0x6f, eax ; out dx, eax ; dec ebx ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000016b76c : out 0x6f, eax ; out dx, eax ; jmp rdi
0x000000000016b7dc : out 0x6f, eax ; out dx, eax ; ljmp ptr [rax + 0x6b] ; out dx, eax ; jmp rdi
0x00000000001697e0 : out 0x78, al ; jnp 0x169842 ; retf
0x0000000000084eb6 : out 0x8e, al ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000e902e : out 0x9c, al ; or byte ptr [rax], al ; mov rdi, rbx ; call 0x85329
0x00000000000024ba : out 0xa9, al ; ret 0xbd07
0x000000000000387c : out 0xb0, al ; test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x0000000000167d71 : out 0xb3, al ; retf 0xe80
0x0000000000055951 : out 0xc7, al ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x0000000000084d8c : out 0xe8, al ; fidiv word ptr [rdi + 0x148fff9] ; ret
0x000000000011fc6e : out 0xe8, al ; or r14b, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c0821 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x000000000016cab5 : out 0xf2, al ; call qword ptr [rax]
0x000000000016cac1 : out 0xf2, al ; inc dword ptr [rax] ; out -0xe, eax ; call qword ptr [rax]
0x000000000016cab1 : out 0xf2, al ; jmp rax
0x0000000000132f3a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000085e59 : out 0xf3, al ; ret
0x000000000019d4b9 : out 0xf6, al ; call rcx
0x00000000001a29b9 : out 0xf7, al ; call qword ptr [rdx]
0x000000000017f24d : out 0xf7, al ; call rax
0x00000000001a2a01 : out 0xf7, al ; jmp qword ptr [rcx]
0x00000000000a52e4 : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000005ec2d : out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x000000000000e4c0 : out 1, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000010bd9c : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000010bf3d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000021131 : out 4, eax ; add rdi, rbp ; call rax
0x00000000001065f4 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000115859 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000018fed5 : out dx, al ; add byte ptr [rax], al ; clc ; cli ; int1 ; jmp rcx
0x000000000018ff45 : out dx, al ; add byte ptr [rax], al ; mov bl, bh ; int1 ; call qword ptr [rcx]
0x000000000017c931 : out dx, al ; add byte ptr [rax], al ; nop ; leave ; out dx, eax ; call qword ptr [rax]
0x000000000018ff8d : out dx, al ; add byte ptr [rax], al ; sar bl, 1 ; int1 ; jmp qword ptr [rcx]
0x000000000003f95e : out dx, al ; add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x000000000010b9ef : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x10b9fc ; ret
0x0000000000087043 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000010b9ec : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x10b9ff ; ret
0x00000000000e043d : out dx, al ; call 0xdceb3
0x000000000017c246 : out dx, al ; call qword ptr [rax]
0x000000000018713a : out dx, al ; call qword ptr [rcx]
0x000000000018a4c2 : out dx, al ; call qword ptr [rdx]
0x000000000018841a : out dx, al ; call qword ptr [rsi]
0x00000000000f7c60 : out dx, al ; call r14
0x00000000000829ba : out dx, al ; call rax
0x000000000018980a : out dx, al ; call rbx
0x000000000016b3ee : out dx, al ; call rcx
0x000000000016b542 : out dx, al ; call rdi
0x0000000000188c52 : out dx, al ; call rdx
0x000000000018887a : out dx, al ; call rsi
0x00000000001892f2 : out dx, al ; call rsp
0x000000000017a115 : out dx, al ; cld ; jmp qword ptr [rax]
0x000000000017c216 : out dx, al ; dec dword ptr [rax - 0x6fffff44] ; jrcxz 0x17c216 ; call rax
0x000000000018780a : out dx, al ; dec dword ptr [rbx + rax] ; add byte ptr [rax], al ; add al, 0xc4 ; retf 1
0x0000000000169bf7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000003b55 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000188162 : out dx, al ; inc dword ptr [rdx + 1] ; add byte ptr [rax], al ; add al, 0x28 ; ret 1
0x00000000001876aa : out dx, al ; inc dword ptr [rsi + 0x4000001] ; clc ; retf
0x000000000016b3d2 : out dx, al ; inc dword ptr [rsi + rsi*8] ; out dx, al ; jmp rsp
0x000000000017c16e : out dx, al ; inc eax ; mov eax, 0xd4b00000 ; out dx, al ; jmp rax
0x0000000000109e5e : out dx, al ; jbe 0x109e68 ; inc dword ptr [rbp - 0x76a18740] ; ret
0x000000000017c26e : out dx, al ; jmp qword ptr [rax]
0x0000000000187aa2 : out dx, al ; jmp qword ptr [rbx]
0x0000000000186fc2 : out dx, al ; jmp qword ptr [rcx]
0x0000000000187b12 : out dx, al ; jmp qword ptr [rdi]
0x000000000018884a : out dx, al ; jmp qword ptr [rdx]
0x000000000018a322 : out dx, al ; jmp qword ptr [rsi]
0x000000000017c176 : out dx, al ; jmp rax
0x000000000018737a : out dx, al ; jmp rbx
0x0000000000188b82 : out dx, al ; jmp rcx
0x000000000018916a : out dx, al ; jmp rdx
0x0000000000189892 : out dx, al ; jmp rsi
0x000000000016b35e : out dx, al ; jmp rsp
0x0000000000187f92 : out dx, al ; lcall ptr [rcx + rax - 0x1bfc0000] ; ret
0x000000000016b3ae : out dx, al ; ljmp ptr [rax - 0x1b00110a] ; imul dh ; jmp rsp
0x0000000000047db9 : out dx, al ; mov dword ptr [rsp + 0x28], r10d ; call 0x43fe8
0x000000000000320f : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000772c7 : out dx, al ; mov eax, r13d ; syscall
0x0000000000032d7f : out dx, al ; mov eax, r8d ; syscall
0x00000000000e538f : out dx, al ; mov edi, 1 ; call 0xe1e38
0x00000000000bf7f6 : out dx, al ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000012d73a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000035dfb : out dx, al ; mov rdi, r12 ; call r14
0x0000000000082b96 : out dx, al ; mov rdi, r12 ; call rax
0x0000000000047d6e : out dx, al ; mov rdi, r13 ; call 0x43fe6
0x0000000000125df6 : out dx, al ; mov rdi, r8 ; mov eax, 1 ; syscall
0x00000000000c142f : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000008239c : out dx, al ; mov rdi, rbx ; call rax
0x00000000000e6866 : out dx, al ; mov rdi, rbx ; mov eax, 0x10f ; syscall
0x0000000000037e86 : out dx, al ; mov rdi, rbx ; mov eax, 0x13e ; syscall
0x00000000000eb2b6 : out dx, al ; mov rdi, rbx ; mov eax, 0x1a ; syscall
0x00000000000e6796 : out dx, al ; mov rdi, rbx ; mov eax, 7 ; syscall
0x000000000013334a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000e6e9d : out dx, al ; movsxd rdi, ebx ; mov eax, 0x115 ; syscall
0x00000000000f04ed : out dx, al ; movsxd rdi, ebx ; mov eax, 0x116 ; syscall
0x00000000000f177d : out dx, al ; movsxd rdi, ebx ; mov eax, 0x120 ; syscall
0x00000000000f182b : out dx, al ; movsxd rdi, ebx ; mov eax, 0x12b ; syscall
0x00000000000e7aa5 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x13 ; syscall
0x00000000000f0665 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x130 ; syscall
0x00000000000f18d3 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e7b45 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x14 ; syscall
0x00000000000e8125 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x17 ; syscall
0x00000000000f0ef5 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x2a ; syscall
0x00000000000f0e25 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x2b ; syscall
0x00000000000f1335 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x2e ; syscall
0x00000000000f11d5 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x2f ; syscall
0x00000000000bf700 : out dx, al ; movsxd rdi, ebx ; mov eax, 0x3d ; syscall
0x00000000000f1a3d : out dx, al ; movsxd rdi, ebx ; mov eax, 0x45 ; syscall
0x00000000000f1aed : out dx, al ; movsxd rdi, ebx ; mov eax, 0x46 ; syscall
0x00000000000e25f5 : out dx, al ; movsxd rdi, ebx ; mov eax, 1 ; syscall
0x00000000000fd377 : out dx, al ; movsxd rdi, ebx ; mov eax, ecx ; syscall
0x00000000000e2555 : out dx, al ; movsxd rdi, ebx ; xor eax, eax ; syscall
0x00000000000021ed : out dx, al ; nop ; retf 0x3844
0x000000000009f429 : out dx, al ; nop word ptr [rax + rax] ; ret
0x0000000000083afa : out dx, al ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000014adae : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000169f52 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf -0x6283
0x00000000001697df : out dx, al ; out 0x78, al ; jnp 0x169843 ; retf
0x000000000017c23e : out dx, al ; push qword ptr [rax + 0x100000bd] ; in eax, dx ; out dx, al ; call qword ptr [rax]
0x0000000000187702 : out dx, al ; push qword ptr [rbp + 0x4000001] ; scasb al, byte ptr [rdi] ; retf
0x00000000000ca4e1 : out dx, al ; ret
0x000000000005ca6e : out dx, al ; retf
0x00000000000028d9 : out dx, al ; retf 0x182c
0x000000000018fe01 : out dx, al ; sti ; jmp rsi
0x00000000000aed3d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000eb62d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017c941 : out dx, eax ; add byte ptr [rax], al ; retf
0x000000000019000d : out dx, eax ; add byte ptr [rax], al ; sar bl, 1 ; int1 ; call qword ptr [rcx]
0x00000000000b5636 : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x000000000017f2a9 : out dx, eax ; add dword ptr [rax], eax ; adc edi, eax ; call qword ptr [rax]
0x000000000017f299 : out dx, eax ; add dword ptr [rax], eax ; loopne 0x17f2b6 ; clc ; jmp rax
0x000000000011fc1c : out dx, eax ; add rbx, r12 ; call r14
0x0000000000158db1 : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call rbx
0x0000000000070892 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000708ea : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44d3 : out dx, eax ; call 0x207ab
0x0000000000047d71 : out dx, eax ; call 0x43fe3
0x00000000001269d8 : out dx, eax ; call 0xe2cd2
0x00000000001269d8 : out dx, eax ; call 0xe2cd3
0x00000000000fade1 : out dx, eax ; call 0xf7843
0x000000000017c2fe : out dx, eax ; call qword ptr [rax]
0x000000000011585f : out dx, eax ; call qword ptr [rbx]
0x000000000018cc9a : out dx, eax ; call qword ptr [rcx]
0x000000000016c09a : out dx, eax ; call qword ptr [rdi]
0x000000000018c82a : out dx, eax ; call qword ptr [rdx]
0x000000000018b59a : out dx, eax ; call qword ptr [rsi]
0x00000000000c8a2a : out dx, eax ; call r12
0x000000000011387e : out dx, eax ; call r14
0x0000000000021135 : out dx, eax ; call rax
0x00000000000a0257 : out dx, eax ; call rbx
0x0000000000120c12 : out dx, eax ; call rcx
0x000000000016b4ca : out dx, eax ; call rdi
0x0000000000115416 : out dx, eax ; call rdx
0x000000000016b972 : out dx, eax ; call rsi
0x000000000016b8fa : out dx, eax ; call rsp
0x000000000017fa0d : out dx, eax ; clc ; jmp rax
0x000000000016a845 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000017cade : out dx, eax ; dec dword ptr [rax] ; cli ; add byte ptr [rax], al ; mov al, 0xf6 ; out dx, eax ; jmp qword ptr [rax]
0x000000000017caa6 : out dx, eax ; dec dword ptr [rax] ; stc ; add byte ptr [rax], al ; jo 0x17caab ; out dx, eax ; jmp qword ptr [rax]
0x000000000015641f : out dx, eax ; dec dword ptr [rcx + 0x21] ; ret 0x8d49
0x000000000016b7e6 : out dx, eax ; dec dword ptr [rcx - 0x60001091] ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000017cb1e : out dx, eax ; dec eax ; cli ; add byte ptr [rax], al ; xor bh, dh ; out dx, eax ; jmp rax
0x000000000017c2f6 : out dx, eax ; dec eax ; ret 0
0x000000000016b766 : out dx, eax ; dec ebx ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x0000000000001acf : out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000017c3b6 : out dx, eax ; inc dword ptr [rax + 0x700000ca] ; xor bh, ch ; call rax
0x000000000017c93e : out dx, eax ; inc dword ptr [rax - 0x11] ; add byte ptr [rax], al ; retf
0x000000000017c2c6 : out dx, eax ; inc dword ptr [rax] ; ret 0
0x000000000016b5f2 : out dx, eax ; inc dword ptr [rbp - 0x280010f7] ; or ch, bh ; call rdi
0x000000000016c126 : out dx, eax ; inc dword ptr [rbx - 0x1c7b0011] ; out dx, eax ; call qword ptr [rdi]
0x000000000017c5fe : out dx, eax ; inc eax ; fiadd dword ptr [rax] ; add byte ptr [rax + 0x7a], al ; out dx, eax ; jmp qword ptr [rax]
0x000000000017c51e : out dx, eax ; inc eax ; rol dword ptr [rax], cl ; add byte ptr [rax + 0x51], dh ; out dx, eax ; jmp rax
0x000000000016b592 : out dx, eax ; inc ebp ; or ch, bh ; call rdi
0x000000000016b94e : out dx, eax ; inc esp ; sub edi, 0xef8313ff ; call qword ptr [rbx]
0x000000000016bb8a : out dx, eax ; jmp qword ptr [rax]
0x000000000016b8da : out dx, eax ; jmp qword ptr [rbp + 0x13ffef73]
0x000000000016b932 : out dx, eax ; jmp qword ptr [rbp + 0x13ffef79]
0x000000000018c3f2 : out dx, eax ; jmp qword ptr [rcx]
0x000000000018bd4a : out dx, eax ; jmp qword ptr [rdi]
0x000000000018c0ba : out dx, eax ; jmp qword ptr [rdx]
0x000000000016b6e2 : out dx, eax ; jmp qword ptr [rsi]
0x000000000017c46e : out dx, eax ; jmp rax
0x000000000016b76a : out dx, eax ; jmp rdi
0x000000000018b22a : out dx, eax ; jmp rdx
0x000000000018b70a : out dx, eax ; jmp rsp
0x000000000017c2ce : out dx, eax ; lcall ptr [rax] ; ret 0
0x000000000016b6da : out dx, eax ; lcall ptr [rbx - 0x640010f7] ; or edi, ebp ; jmp qword ptr [rsi]
0x000000000016b7ea : out dx, eax ; lcall ptr [rdi - 0x18001091] ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000016b89a : out dx, eax ; lcall ptr [rdi] ; jbe 0x16b893 ; call qword ptr [rbx]
0x00000000001140d6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000113f17 : out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000016b7de : out dx, eax ; ljmp ptr [rax + 0x6b] ; out dx, eax ; jmp rdi
0x000000000017c39e : out dx, eax ; ljmp ptr [rax - 0x37] ; add byte ptr [rax], al ; sub al, 0xef ; call rax
0x000000000017c5e6 : out dx, eax ; ljmp ptr [rax - 0x5fffff27] ; je 0x17c5e7 ; jmp qword ptr [rax]
0x000000000016b5d6 : out dx, eax ; ljmp ptr [rax - 2] ; out dx, al ; call rdi
0x000000000016b59e : out dx, eax ; ljmp ptr [rax - 4] ; out dx, al ; call rdi
0x000000000016b5ee : out dx, eax ; ljmp ptr [rbx - 0x7a0010f7] ; or edi, ebp ; call rdi
0x00000000000852ad : out dx, eax ; mov cl, byte ptr [rax + rax] ; cmovne rax, rdx ; ret
0x00000000000f0280 : out dx, eax ; mov dword ptr [rsp + 0xc], eax ; call 0xfcd17
0x00000000000e2ee2 : out dx, eax ; mov eax, 0x4f ; syscall
0x00000000000297b3 : out dx, eax ; mov eax, 3 ; syscall
0x00000000000eb13b : out dx, eax ; mov eax, 9 ; syscall
0x00000000000da070 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000002f8a8 : out dx, eax ; mov eax, r10d ; syscall
0x00000000000755c8 : out dx, eax ; mov eax, r12d ; syscall
0x000000000012d56a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d666 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012d5b2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000ee3b8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000022880 : out dx, eax ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000044230 : out dx, eax ; mov rax, rdx ; ret
0x00000000000fcfc0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000119583 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000011938b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c8a53 : out dx, eax ; mov rsi, rbx ; call r12
0x00000000001333ca : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000035ce : out dx, eax ; nop ; retf -0x1612
0x000000000014aead : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000028d8 : out dx, eax ; out dx, al ; retf 0x182c
0x000000000015955c : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000010fc80 : out dx, eax ; pop rbx ; ret
0x000000000014f793 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14f76b
0x000000000014f811 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14f7e9
0x000000000014fca3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14fc7b
0x000000000014fd21 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14fcf9
0x0000000000150dc3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x150d9b
0x0000000000150e41 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x150e19
0x00000000001512d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1512ab
0x0000000000151351 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x151329
0x000000000017c59e : out dx, eax ; push qword ptr [rax + 0x100000d6] ; pop rbp ; out dx, eax ; call rax
0x000000000017c88e : out dx, eax ; push qword ptr [rax + 0x200000ea] ; mov bl, 0xef ; call rax
0x000000000017ca96 : out dx, eax ; push qword ptr [rax - 8] ; add byte ptr [rax], al ; sal bl, 1 ; out dx, eax ; jmp rax
0x000000000016b606 : out dx, eax ; push qword ptr [rbp - 0x280010f6] ; or ch, bh ; call rdi
0x000000000014f393 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014f3a8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014f3bd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016bb16 : out dx, eax ; push rsp ; sub edi, 0xef77bdff ; call rcx
0x000000000016bb52 : out dx, eax ; push rsp ; sub edi, 0xef81f4ff ; call rdi
0x000000000009e578 : out dx, eax ; ret
0x000000000009d4d3 : out dx, eax ; ret 0xf66
0x0000000000169f1b : out dx, eax ; retf -0x54f3
0x000000000009d4b6 : out dx, eax ; retf 0x4466
0x000000000008af4a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000001508ac : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000150895 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015087e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014f33a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c6d1 : out dx, eax ; sti ; jmp qword ptr [rax + 0x10fffbf0]
0x000000000019a729 : out dx, eax ; sti ; jmp qword ptr [rsi]
0x0000000000122aa3 : out dx, eax ; sub byte ptr [rax], al ; test eax, eax ; je 0x122ab9 ; xor eax, eax ; ret
0x000000000016b824 : out dx, eax ; sub edi, 0xef8313ff ; call qword ptr [rbx]
0x000000000009f9f0 : out dx, eax ; sub rax, 4 ; ret
0x00000000000afd1e : out dx, eax ; sub rsp, 8 ; call r12
0x0000000000158bd5 : out dx, eax ; xor byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xe781
0x0000000000114d6e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000043810 : out dx, eax ; xor eax, eax ; ret
0x0000000000073cc2 : out dx, eax ; xor r13d, r13d ; call 0x207ae
0x0000000000145efe : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017b479 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; in al, -0x16 ; jmp rax
0x00000000000b2c61 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000001529ee : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000197fb5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; xchg ch, dh ; jmp qword ptr [rcx]
0x000000000017dca9 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; jo 0x17dd21 ; hlt ; call qword ptr [rax]
0x00000000001494ae : outsb dx, byte ptr [rsi] ; cmp byte ptr [rdx], al ; add byte ptr [rax + 0x63], cl ; retf -0x7cb8
0x00000000000336cb : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000016a3a3 : outsb dx, byte ptr [rsi] ; ja 0x16a32c ; ret 0x48f
0x0000000000196f17 : outsb dx, byte ptr [rsi] ; ret
0x0000000000003882 : outsb dx, byte ptr [rsi] ; retf
0x000000000003ce86 : outsb dx, byte ptr [rsi] ; retf 0x13
0x000000000003340b : outsb dx, byte ptr [rsi] ; retf 0xff2
0x0000000000033778 : outsb dx, byte ptr [rsi] ; retf 0xff3
0x00000000001680e4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000169718 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000017fd55 : outsb dx, byte ptr [rsi] ; stc ; jmp rax
0x000000000017abb9 : outsb dx, byte ptr [rsi] ; sti ; call qword ptr [rax + 0x10fffb6f]
0x000000000017abf9 : outsb dx, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x00000000000d816c : outsb dx, byte ptr [rsi] ; sub al, 0x5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bbf5a : outsb dx, byte ptr [rsi] ; sub eax, 0x8948002f ; ret
0x000000000004ebb8 : outsd dx, dword ptr [rsi] ; adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000005155a : outsd dx, dword ptr [rsi] ; adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000033d41 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000033bd5 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x28 ; ret
0x00000000001805c1 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; xor byte ptr [rsi - 6], cl ; jmp qword ptr [rax]
0x0000000000198075 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000019808d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; mov al, 0x87 ; cmc ; jmp qword ptr [rcx]
0x000000000017dcd9 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; mov al, 0x93 ; hlt ; call qword ptr [rax]
0x000000000019802d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; push rax ; xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000010f9f8 : outsd dx, dword ptr [rsi] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000033982 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; ret
0x000000000008b0f8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008ef2e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000166915 : outsd dx, dword ptr [rsi] ; in al, dx ; jmp qword ptr [rcx]
0x0000000000166911 : outsd dx, dword ptr [rsi] ; in al, dx ; ljmp ptr [rsi] ; outsd dx, dword ptr [rsi] ; in al, dx ; jmp qword ptr [rcx]
0x000000000012dcf2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000012def2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf -0x74b4
0x0000000000188161 : outsd dx, dword ptr [rsi] ; out dx, al ; inc dword ptr [rdx + 1] ; add byte ptr [rax], al ; add al, 0x28 ; ret 1
0x000000000016b7b9 : outsd dx, dword ptr [rsi] ; out dx, eax ; call qword ptr [rbx]
0x000000000016b7f9 : outsd dx, dword ptr [rsi] ; out dx, eax ; dec ebx ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000016b769 : outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x000000000016b7dd : outsd dx, dword ptr [rsi] ; out dx, eax ; ljmp ptr [rax + 0x6b] ; out dx, eax ; jmp rdi
0x00000000001506ad : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000015074d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000150272 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x00000000001502f2 : outsd dx, dword ptr [rsi] ; push rdi ; retf -0x354e
0x000000000009394a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000009394f : outsd dx, dword ptr [rsi] ; ret
0x0000000000033dc2 : outsd dx, dword ptr [rsi] ; ret 0x27e8
0x0000000000033d99 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000004f454 : outsd dx, dword ptr [rsi] ; ret 0x2be
0x0000000000053832 : outsd dx, dword ptr [rsi] ; ret 0x37e8
0x0000000000168aa6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000004ec01 : outsd dx, dword ptr [rsi] ; ret 0x68e8
0x000000000004ebdb : outsd dx, dword ptr [rsi] ; ret 0x850f
0x00000000000515d7 : outsd dx, dword ptr [rsi] ; ret 0x8948
0x000000000012dea7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000051af2 : outsd dx, dword ptr [rsi] ; ret 0x8d4c
0x0000000000033e3f : outsd dx, dword ptr [rsi] ; ret 0xaae8
0x00000000000535c8 : outsd dx, dword ptr [rsi] ; ret 0xc1e8
0x0000000000150752 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000535f8 : outsd dx, dword ptr [rsi] ; ret 0xf1e8
0x000000000004ebbc : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000033ad4 : outsd dx, dword ptr [rsi] ; retf
0x000000000012df72 : outsd dx, dword ptr [rsi] ; retf -0x74b4
0x000000000004ebc0 : outsd dx, dword ptr [rsi] ; retf 0x290f
0x00000000001458a9 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000005155e : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000014f78a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x0000000000123cd2 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rcx], al ; je 0x123ce7 ; xor eax, eax ; ret
0x0000000000180e9d : outsd dx, dword ptr [rsi] ; std ; jmp qword ptr [rax]
0x000000000017abbd : outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x0000000000166914 : outsd dx, dword ptr cs:[rsi] ; in al, dx ; jmp qword ptr [rcx]
0x0000000000168aa5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000143b42 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000af524 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000af50f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000143b41 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000169ea5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000169ea6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000008e525 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x000000000014e356 : pextrw edi, mm0, 0x77 ; ret
0x00000000000334c1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000033801 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000008e533 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000008e0f2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x8e159 ; xor eax, eax ; ret
0x000000000008e595 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x8e619 ; xor eax, eax ; ret
0x000000000008e5c4 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x8e649 ; xor eax, eax ; ret
0x00000000000aeb02 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaeb69 ; xor eax, eax ; ret
0x00000000000334c0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000033800 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000002263 : pmuludq mm4, mm7 ; retf
0x00000000000d8f41 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000eb19a : pop qword ptr [rcx - 0x77] ; retf -0x76b7
0x000000000019a075 : pop qword ptr [rcx] ; add al, cl ; clc ; cmc ; call qword ptr [rdx]
0x000000000017e0c9 : pop qword ptr [rcx] ; add byte ptr [rax], al ; hlt ; cmc ; call qword ptr [rax]
0x00000000001936f1 : pop qword ptr [rdx] ; add bl, byte ptr [rbp + 0x41380e0a] ; ret
0x00000000000fcc84 : pop r10 ; ret
0x000000000016a32f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000701b3 : pop r12 ; jmp rax
0x00000000000ecf52 : pop r12 ; mov esi, 0xa ; jmp 0x791f9
0x00000000000ec353 : pop r12 ; mov esi, 2 ; jmp rax
0x00000000000ec369 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000000f8170 : pop r12 ; mov rdx, rax ; jmp rcx
0x000000000006dbe8 : pop r12 ; pop r13 ; jmp rax
0x0000000000080f8b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021544 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020a16 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0b02 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000020927 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001204ed : pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000aafb5 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000020f02 : pop r12 ; pop r13 ; ret
0x00000000000a86d4 : pop r12 ; pop r14 ; ret
0x00000000000363c6 : pop r12 ; pop rbp ; ret
0x00000000000211c9 : pop r12 ; ret
0x00000000000afcfd : pop r12 ; sub r8, rdx ; add rax, r8 ; ret
0x00000000000fdd87 : pop r13 ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x000000000006dbea : pop r13 ; jmp rax
0x000000000003e276 : pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003e1ee : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000080f8d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021546 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020a18 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0b04 : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000020929 : pop r13 ; pop r14 ; ret
0x00000000001204ef : pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000aafb7 : pop r13 ; pop rbp ; ret
0x0000000000020f04 : pop r13 ; ret
0x00000000001204bd : pop r14 ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003e278 : pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003e1f0 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000080f8f : pop r14 ; pop r15 ; jmp rax
0x0000000000021548 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020a1a : pop r14 ; pop r15 ; ret
0x00000000000c0b06 : pop r14 ; pop rbp ; ret
0x000000000002092b : pop r14 ; ret
0x00000000001204f1 : pop r14 ; xor eax, eax ; jmp rcx
0x000000000003e27a : pop r15 ; fmul st(0) ; ret
0x000000000003e1f2 : pop r15 ; fmulp st(1) ; ret
0x0000000000080f91 : pop r15 ; jmp rax
0x000000000002154a : pop r15 ; pop rbp ; ret
0x0000000000020a1c : pop r15 ; ret
0x000000000011b8f6 : pop r8 ; mov eax, 1 ; ret
0x000000000007b1fe : pop r8 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000116516 : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000001798df : pop r9 ; clc ; ret 0x6e1f
0x00000000000d9e1b : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000e438a : pop rax ; adc ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfff3
0x000000000011c02e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000196925 : pop rax ; add dword ptr [rax], eax ; call 0x27195e58
0x00000000000baa10 : pop rax ; add dword ptr [rbp - 0x24], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023cec : pop rax ; add dword ptr [rcx], esi ; test byte ptr [rax - 0x77], 0xdf ; call 0x20739
0x00000000000e59f6 : pop rax ; add ecx, dword ptr [rcx + 0xf10244c] ; xchg eax, esp ; ret 0x8440
0x0000000000196898 : pop rax ; and al, 0xf5 ; jmp qword ptr [rsi]
0x00000000001a34d8 : pop rax ; and eax, edi ; call qword ptr [rax]
0x0000000000196618 : pop rax ; and ebp, esi ; jmp qword ptr [rcx]
0x000000000017d51d : pop rax ; call qword ptr [rax]
0x000000000011c1f4 : pop rax ; call rax
0x000000000017f6ed : pop rax ; clc ; jmp rax
0x000000000016f781 : pop rax ; cli ; jmp rax
0x00000000001976b9 : pop rax ; cmc ; jmp rax
0x00000000000ca4f7 : pop rax ; cmp al, 0x11 ; je 0xca507 ; xor eax, eax ; ret
0x0000000000193d38 : pop rax ; cmp al, 0xf4 ; jmp qword ptr [rdi]
0x00000000000fde14 : pop rax ; inc dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000016c505 : pop rax ; int1 ; call qword ptr [rax]
0x000000000016c515 : pop rax ; int1 ; call rax
0x000000000016c511 : pop rax ; int1 ; jmp qword ptr [rax - 0x2f000ea8]
0x000000000016c501 : pop rax ; int1 ; ljmp ptr [rax + 0x58] ; int1 ; call qword ptr [rax]
0x000000000016c51d : pop rax ; int1 ; push qword ptr [rax] ; pop rcx ; int1 ; jmp rax
0x000000000011c036 : pop rax ; jmp rcx
0x000000000017bfa8 : pop rax ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ror bh, 1 ; in al, dx ; call rax
0x000000000017087c : pop rax ; lodsb al, byte ptr [rsi] ; cli ; inc eax ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000198138 : pop rax ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000011b8f7 : pop rax ; mov eax, 1 ; ret
0x000000000002cf94 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002cf22 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000003d86 : pop rax ; mov esi, 0xcf8cb236 ; retf
0x00000000001983e8 : pop rax ; mov esi, ebp ; jmp qword ptr [rcx]
0x0000000000115cde : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000ebaf8 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000d0603 : pop rax ; or bh, dh ; ret
0x00000000000edfcb : pop rax ; or byte ptr [r8], r8b ; mov rax, rbx ; pop rbx ; ret
0x00000000000cb66e : pop rax ; or byte ptr [rbp - 0x72b700be], cl ; ret
0x000000000007e0fa : pop rax ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000097b64 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000007b1ff : pop rax ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000002082e : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000116517 : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000f00fb : pop rax ; pop rdi ; call rax
0x0000000000127d71 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000037198 : pop rax ; ret
0x000000000007f5e4 : pop rax ; ret 0xffff
0x000000000017ea48 : pop rax ; ret 1
0x000000000016a283 : pop rax ; retf
0x000000000017ebd8 : pop rax ; retf 1
0x000000000017f958 : pop rax ; sbb dword ptr [rdx], eax ; add al, dl ; retf
0x0000000000194b58 : pop rax ; stc ; call qword ptr [rax]
0x000000000017a641 : pop rax ; sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x00000000001844e8 : pop rax ; sub ch, bl ; call qword ptr [rcx]
0x0000000000001ebf : pop rax ; xchg eax, edi ; retf 0x20f4
0x000000000018dd98 : pop rax ; xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000002ffb6 : pop rbp ; add al, 0xeb ; ret 0x8b48
0x000000000012116a : pop rbp ; add byte ptr [rbp - 0x179f8a25], al ; sti ; retf
0x0000000000084dc2 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000071186 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000196e85 : pop rbp ; add dword ptr [rax], eax ; cwde ; cmc ; call qword ptr [rdx]
0x0000000000196e1d : pop rbp ; add dword ptr [rax], eax ; loopne 0x196e67 ; cmc ; call qword ptr [rax]
0x0000000000196e1c : pop rbp ; add dword ptr [rax], eax ; loopne 0x196e68 ; cmc ; call qword ptr [rax]
0x000000000017da01 : pop rbp ; add dword ptr [rax], eax ; mov al, 0x10 ; hlt ; call qword ptr [rax]
0x00000000000fdd88 : pop rbp ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000115e2d : pop rbp ; add eax, edx ; ret
0x00000000000c0123 : pop rbp ; clc ; leave ; ret
0x000000000018076d : pop rbp ; cli ; call qword ptr [rax]
0x000000000018075d : pop rbp ; cli ; jmp rax
0x000000000016e03c : pop rbp ; cmp dh, ch ; jmp qword ptr [rdx]
0x00000000000fa9dd : pop rbp ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x000000000017dc5d : pop rbp ; hlt ; call rax
0x000000000016c785 : pop rbp ; inc dword ptr [rax + 0x60] ; call qword ptr [rax - 0x1f000d9e]
0x0000000000169d25 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000006d9a8 : pop rbp ; jmp rax
0x00000000001137b5 : pop rbp ; jmp rcx
0x0000000000114d72 : pop rbp ; jmp rdx
0x000000000011a8ea : pop rbp ; lock dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012243b : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000007c042 : pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x0000000000168680 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000000eafd7 : pop rbp ; or byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000017c5ad : pop rbp ; out dx, eax ; call qword ptr [rax]
0x000000000017c5a5 : pop rbp ; out dx, eax ; call rax
0x00000000000701b2 : pop rbp ; pop r12 ; jmp rax
0x00000000000ec352 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000ec368 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000000f816f : pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000006dbe7 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000080f8a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020a15 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000020926 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001204ec : pop rbp ; pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x0000000000020f01 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a86d3 : pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000211c8 : pop rbp ; pop r12 ; ret
0x00000000000afcfc : pop rbp ; pop r12 ; sub r8, rdx ; add rax, r8 ; ret
0x0000000000114116 : pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003e277 : pop rbp ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003e1ef : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000080f8e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000021547 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020a19 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000c0b05 : pop rbp ; pop r14 ; pop rbp ; ret
0x000000000002092a : pop rbp ; pop r14 ; ret
0x00000000001204f0 : pop rbp ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000aafb8 : pop rbp ; pop rbp ; ret
0x0000000000043b28 : pop rbp ; pop rbx ; ret
0x0000000000020830 : pop rbp ; ret
0x00000000000fe88f : pop rbp ; retf
0x00000000000f2a7f : pop rbp ; retf 0x2b
0x000000000017a141 : pop rbp ; std ; inc dword ptr [rdx + 0x5e] ; std ; call qword ptr [rdx]
0x0000000000056f58 : pop rbp ; std ; inc esi ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000017a589 : pop rbp ; sti ; call qword ptr [rax]
0x000000000017a64d : pop rbp ; sti ; call rax
0x000000000017a68d : pop rbp ; sti ; inc dword ptr [rax + 0x5f] ; sti ; call qword ptr [rax]
0x000000000017a569 : pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000180c65 : pop rbp ; sti ; jmp rax
0x000000000017a5a9 : pop rbp ; sti ; push rax ; pop rsi ; sti ; call rax
0x000000000012580d : pop rbp ; sub byte ptr [rax], al ; ret
0x00000000000a008d : pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000077740 : pop rbp ; sub rax, rdx ; pop r12 ; ret
0x0000000000068ab7 : pop rbp ; xor al, 0 ; pop rbx ; pop rbp ; ret
0x00000000000d6fa1 : pop rbp ; xor byte ptr [rbx + 0x634801c3], al ; retf
0x00000000000fb5e1 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x0000000000004de1 : pop rbx ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000221a3 : pop rbx ; adc byte ptr [rax], al ; mov rdi, rbx ; call r14
0x0000000000180289 : pop rbx ; add al, byte ptr [rax] ; rol byte ptr [rbx], 0xfa ; jmp qword ptr [rax]
0x000000000003f0ad : pop rbx ; add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000167678 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009df6c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000009df9f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000fcf07 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000007c239 : pop rbx ; cdq ; str word ptr [rax - 0x7d] ; ret 0x3110
0x000000000018071d : pop rbx ; cli ; jmp rax
0x0000000000167676 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000000230d : pop rbx ; cmp byte ptr [rdi], cl ; salc ; ret
0x000000000006c24e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017bdcd : pop rbx ; in al, dx ; jmp qword ptr [rax]
0x0000000000113d04 : pop rbx ; jmp 0x207ab
0x0000000000079234 : pop rbx ; jmp rax
0x00000000000c8b60 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000100d58 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x00000000000e78c7 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000083124 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000c84a2 : pop rbx ; mov eax, 1 ; ret
0x00000000000ddccb : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000037195 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000009e00c : pop rbx ; mov eax, eax ; ret
0x000000000006dffb : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005321a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000073fe7 : pop rbx ; mov eax, edx ; ret
0x00000000000fe8ae : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000006f97a : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005134e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000799f9 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000008a71d : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000002d73e : pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x000000000011a6f3 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000cb170 : pop rbx ; or byte ptr [rbp - 0x75], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x00000000000c0b01 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000aafb4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000363c5 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000007fa2d : pop rbx ; pop r14 ; pop r15 ; ret
0x0000000000158a98 : pop rbx ; pop r14 ; ret
0x0000000000115e2c : pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006d9a7 : pop rbx ; pop rbp ; jmp rax
0x00000000001137b4 : pop rbx ; pop rbp ; jmp rcx
0x0000000000114d71 : pop rbx ; pop rbp ; jmp rdx
0x00000000000701b1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ec351 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000000ec367 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000000f816e : pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000006dbe6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000020925 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000020f00 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a86d2 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000211c7 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114115 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000002082f : pop rbx ; pop rbp ; ret
0x00000000000a008c : pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x000000000007773f : pop rbx ; pop rbp ; sub rax, rdx ; pop r12 ; ret
0x00000000000bae49 : pop rbx ; pop rcx ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000029e1a : pop rbx ; ret
0x000000000016a960 : pop rbx ; ret 0x6f9
0x0000000000167e3d : pop rbx ; retf
0x00000000000e77dc : pop rbx ; sar eax, 0x1f ; ret
0x0000000000116518 : pop rbx ; sete al ; movzx eax, al ; ret
0x000000000017a5a5 : pop rbx ; sti ; call qword ptr [rax]
0x000000000017a565 : pop rbx ; sti ; inc dword ptr [rax + 0x5d] ; sti ; jmp qword ptr [rax]
0x000000000017a585 : pop rbx ; sti ; push qword ptr [rax] ; pop rbp ; sti ; call qword ptr [rax]
0x000000000017a5c5 : pop rbx ; sti ; push rax ; pop rsp ; sti ; call rax
0x0000000000003011 : pop rbx ; sub edi, esi ; retf 0x54f7
0x0000000000001d49 : pop rbx ; test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf -0x6dda
0x0000000000085266 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000799c2 : pop rbx ; xor edx, edx ; jmp rax
0x000000000008a70b : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000180259 : pop rcx ; add al, byte ptr [rax] ; nop ; std ; stc ; call qword ptr [rax]
0x000000000012b8f7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000011403e : pop rcx ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090f64 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000371a3 : pop rcx ; and eax, 0x39480037 ; ret
0x000000000017d805 : pop rcx ; call rax
0x0000000000179680 : pop rcx ; clc ; ret 0x6e1f
0x00000000000336f0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00000000000bae4a : pop rcx ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000aade9 : pop rcx ; idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000017ebd4 : pop rcx ; idiv rdi ; pop rax ; retf 1
0x000000000016c509 : pop rcx ; int1 ; jmp qword ptr [rax]
0x000000000016c521 : pop rcx ; int1 ; jmp rax
0x0000000000144dc7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017c585 : pop rcx ; out dx, eax ; call rax
0x000000000012195f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eba3b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d8e4a : pop rcx ; pop rbx ; ret
0x000000000019dff6 : pop rcx ; ret
0x00000000000eb6e2 : pop rcx ; retf
0x00000000000eb8f2 : pop rcx ; retf -0x3c7d
0x00000000000fade3 : pop rcx ; retf -1
0x000000000007b9be : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x000000000017a5c1 : pop rcx ; sti ; call qword ptr [rax]
0x000000000017a5e1 : pop rcx ; sti ; jmp rax
0x000000000017a5a1 : pop rcx ; sti ; push qword ptr [rax] ; pop rbx ; sti ; call qword ptr [rax]
0x00000000000b07f9 : pop rdi ; adc byte ptr [rcx], ch ; ret 0x428d
0x000000000012c0e8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000180361 : pop rdi ; add al, byte ptr [rax] ; mov al, 0x1f ; cli ; jmp qword ptr [rax]
0x000000000017b329 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 0x16], ah ; call rax
0x00000000000e21d2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000196ff5 : pop rdi ; add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rcx]
0x000000000019709d : pop rdi ; add dword ptr [rax], eax ; jo 0x1970ec ; cmc ; jmp qword ptr [rdx]
0x000000000019703d : pop rdi ; add dword ptr [rax], eax ; loopne 0x19708b ; cmc ; jmp qword ptr [rcx]
0x000000000019700d : pop rdi ; add dword ptr [rax], eax ; mov al, 0x43 ; cmc ; jmp qword ptr [rcx]
0x000000000014b53d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149be2 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x00000000000f00fc : pop rdi ; call rax
0x000000000003e27b : pop rdi ; fmul st(0) ; ret
0x000000000003e1f3 : pop rdi ; fmulp st(1) ; ret
0x000000000012db09 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d919 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000169c1e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000080f92 : pop rdi ; jmp rax
0x0000000000168be1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000000bfcd0 : pop rdi ; mov eax, 0x3a ; syscall
0x000000000012d739 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d569 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d665 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012d5b1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000002154b : pop rdi ; pop rbp ; ret
0x0000000000020a1d : pop rdi ; ret
0x0000000000104325 : pop rdi ; ret 0x2a
0x00000000000639ad : pop rdi ; retf
0x0000000000001c2e : pop rdi ; retf 0x49f2
0x000000000017fcf5 : pop rdi ; stc ; call qword ptr [rax]
0x000000000017a149 : pop rdi ; std ; call qword ptr [rdx]
0x000000000017a1ad : pop rdi ; std ; jmp rsi
0x000000000017a691 : pop rdi ; sti ; call qword ptr [rax]
0x000000000012896d : pop rdi ; sub byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ba855 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001452c6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000000cabfe : pop rdx ; cmc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000003b52 : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000169801 : pop rdx ; je 0x1697cb ; ret 0xacfc
0x0000000000169913 : pop rdx ; leave ; retf
0x000000000016a7c7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x000000000018bd49 : pop rdx ; out dx, eax ; jmp qword ptr [rdi]
0x00000000000035cd : pop rdx ; out dx, eax ; nop ; retf -0x1612
0x00000000000fcc83 : pop rdx ; pop r10 ; ret
0x00000000000ebafc : pop rdx ; pop rbx ; ret
0x00000000000d8e49 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000fcca9 : pop rdx ; pop rsi ; ret
0x0000000000001b96 : pop rdx ; ret
0x0000000000001b14 : pop rdx ; ret 0x2a63
0x00000000001697e3 : pop rdx ; retf
0x00000000000ed50a : pop rdx ; retf 8
0x000000000017a645 : pop rdx ; sti ; call qword ptr [rax]
0x000000000016a330 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001269d4 : pop rdx ; sub byte ptr [rax], al ; mov edi, ebp ; call 0xe2cd6
0x00000000001269d4 : pop rdx ; sub byte ptr [rax], al ; mov edi, ebp ; call 0xe2cd7
0x00000000000af005 : pop rdx ; test al, 0xf0 ; jne 0xaf039 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014f794 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14f76a
0x000000000014f812 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14f7e8
0x000000000014fca4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14fc7a
0x000000000014fd22 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x14fcf8
0x0000000000150dc4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x150d9a
0x0000000000150e42 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x150e18
0x00000000001512d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1512aa
0x0000000000151352 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x151328
0x000000000014b43e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000180329 : pop rsi ; add al, byte ptr [rax] ; sbb byte ptr [rdx], 0xfa ; call rax
0x000000000017b301 : pop rsi ; add byte ptr [rax], al ; rcr byte ptr [rsi - 0x16], 1 ; call qword ptr [rax]
0x000000000002e4b7 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000196fad : pop rsi ; add dword ptr [rax], eax ; push rax ; cmc ; jmp qword ptr [rcx]
0x0000000000196f5d : pop rsi ; add dword ptr [rax], eax ; rol byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000010beec : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000001204be : pop rsi ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x0000000000187b11 : pop rsi ; out dx, al ; jmp qword ptr [rdi]
0x000000000003e279 : pop rsi ; pop r15 ; fmul st(0) ; ret
0x000000000003e1f1 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000080f90 : pop rsi ; pop r15 ; jmp rax
0x0000000000021549 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000020a1b : pop rsi ; pop r15 ; ret
0x00000000000c0b07 : pop rsi ; pop rbp ; ret
0x0000000000084e6e : pop rsi ; push rax ; or al, 0 ; je 0x84e41 ; ret
0x000000000002092c : pop rsi ; ret
0x00000000000eb8bb : pop rsi ; ret 0xcdbb
0x00000000000f289e : pop rsi ; retf
0x000000000000248f : pop rsi ; retf -0x75c1
0x00000000000656a8 : pop rsi ; retf -1
0x00000000000e4545 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e4522 : pop rsi ; sbb byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; call 0x20739
0x000000000017a145 : pop rsi ; std ; call qword ptr [rdx]
0x000000000017a1a5 : pop rsi ; std ; jmp rsi
0x000000000017a62d : pop rsi ; sti ; call qword ptr [rax]
0x000000000017a5ad : pop rsi ; sti ; call rax
0x00000000001204f2 : pop rsi ; xor eax, eax ; jmp rcx
0x0000000000146110 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a2314 : pop rsp ; adc al, byte ptr [rdx] ; add al, bh ; fcompi st(7) ; call qword ptr [rsi]
0x00000000001455c4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000c411c : pop rsp ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000001a1418 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx + rax + 2], ah ; add byte ptr [rax], dh ; ret 0xfff7
0x000000000017d9e1 : pop rsp ; add dword ptr [rax], eax ; ror byte ptr [rcx], 0xf4 ; jmp rax
0x00000000001a344e : pop rsp ; add dword ptr [rdx], ecx ; ret
0x0000000000146e10 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000007d902 : pop rsp ; and al, 0x30 ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x00000000000477f8 : pop rsp ; and al, 0x38 ; call 0x44255
0x00000000000afba5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000017f735 : pop rsp ; clc ; jmp qword ptr [rax]
0x000000000017d545 : pop rsp ; dec dword ptr [rax] ; cmp eax, 0x5ce00001 ; jmp qword ptr [rax]
0x000000000016e6fd : pop rsp ; idiv bh ; sub byte ptr [rsi - 0xa], bl ; call qword ptr [rdi]
0x0000000000188414 : pop rsp ; jae 0x18841e ; add byte ptr [rax + 0x77], cl ; out dx, al ; call qword ptr [rsi]
0x000000000017d54d : pop rsp ; jmp qword ptr [rax]
0x00000000000701b4 : pop rsp ; jmp rax
0x0000000000115b60 : pop rsp ; loope 0x115b5f ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000ecf53 : pop rsp ; mov esi, 0xa ; jmp 0x791f8
0x00000000000ec354 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000000ec36a : pop rsp ; mov esi, 3 ; jmp rax
0x00000000000f8171 : pop rsp ; mov rdx, rax ; jmp rcx
0x00000000000c8764 : pop rsp ; neg eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000143fa0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000187aa1 : pop rsp ; out dx, al ; jmp qword ptr [rbx]
0x000000000006dbe9 : pop rsp ; pop r13 ; jmp rax
0x000000000003e275 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000003e1ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000080f8c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021545 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020a17 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c0b03 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000020928 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001204ee : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000aafb6 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000020f03 : pop rsp ; pop r13 ; ret
0x00000000000a86d5 : pop rsp ; pop r14 ; ret
0x0000000000001ebe : pop rsp ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000363c7 : pop rsp ; pop rbp ; ret
0x00000000000f25e0 : pop rsp ; popfq ; sub eax, dword ptr [rax] ; je 0xf25ef ; pop rbp ; ret
0x0000000000197b14 : pop rsp ; push 1 ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000196614 : pop rsp ; push rbp ; add dword ptr [rax], eax ; pop rax ; and ebp, esi ; jmp qword ptr [rcx]
0x0000000000196214 : pop rsp ; push rcx ; add dword ptr [rax], eax ; or byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000038e0 : pop rsp ; ret
0x0000000000003219 : pop rsp ; ret 0x52c0
0x00000000000036b6 : pop rsp ; ret 0xf84d
0x000000000018dc14 : pop rsp ; retf
0x0000000000043a09 : pop rsp ; retf 0x4df0
0x000000000019db14 : pop rsp ; retf 1
0x0000000000169987 : pop rsp ; sbb ebp, ebx ; retf
0x000000000017a5c9 : pop rsp ; sti ; call rax
0x000000000017a629 : pop rsp ; sti ; push qword ptr [rax] ; pop rsi ; sti ; call qword ptr [rax]
0x000000000017a649 : pop rsp ; sti ; push rax ; pop rbp ; sti ; call rax
0x00000000000afcfe : pop rsp ; sub r8, rdx ; add rax, r8 ; ret
0x0000000000199614 : pop rsp ; test dword ptr [rcx], eax ; add byte ptr [rax - 0x35], ch ; cmc ; call rdi
0x0000000000067781 : popfq ; adc byte ptr [rax], al ; call 0xf3a15
0x000000000007422f : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018adbd : popfq ; add byte ptr [rax], al ; sar ah, 0xee ; jmp qword ptr [rax]
0x000000000019aead : popfq ; add dword ptr [rax], eax ; adc byte ptr [rsi], bh ; idiv bh ; retf
0x000000000017a029 : popfq ; cld ; jmp qword ptr [rax]
0x000000000016990c : popfq ; jrcxz 0x1698d1 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000000f9e42 : popfq ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006449f : popfq ; ret
0x00000000000b134c : popfq ; ret 0x3949
0x00000000000b1307 : popfq ; ret 0xb60f
0x00000000000026ef : popfq ; retf
0x000000000016a6c2 : popfq ; retf -0x21b1
0x00000000001477f0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f25e1 : popfq ; sub eax, dword ptr [rax] ; je 0xf25ee ; pop rbp ; ret
0x00000000000f2593 : popfq ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000d9437 : psadbw mm0, qword ptr [rax + rcx*2 + 1] ; and byte ptr [rax - 0x77], cl ; retf -0x118b
0x0000000000133492 : psllq mm1, qword ptr [r15] ; jg 0x1334ad ; ret
0x0000000000135fb2 : psllq mm1, qword ptr [r15] ; jg 0x135fcd ; ret
0x0000000000133493 : psllq mm1, qword ptr [rdi] ; jg 0x1334ac ; ret
0x0000000000135fb3 : psllq mm1, qword ptr [rdi] ; jg 0x135fcc ; ret
0x0000000000098ec6 : psllq mm1, qword ptr [rdi] ; jg 0x98eda ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098ec5 : psllq mm1, qword ptr [rdi] ; jg 0x98edb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000098f27 : psllq mm1, qword ptr [rdi] ; jg 0x98f3c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000099b96 : psllq mm1, qword ptr [rdi] ; jg 0x99baa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000099b95 : psllq mm1, qword ptr [rdi] ; jg 0x99bab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000099bf7 : psllq mm1, qword ptr [rdi] ; jg 0x99c0c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009c176 : psllq mm1, qword ptr [rdi] ; jg 0x9c18a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c175 : psllq mm1, qword ptr [rdi] ; jg 0x9c18b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009c1d7 : psllq mm1, qword ptr [rdi] ; jg 0x9c1ec ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009cc46 : psllq mm1, qword ptr [rdi] ; jg 0x9cc5a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cc45 : psllq mm1, qword ptr [rdi] ; jg 0x9cc5b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009cca7 : psllq mm1, qword ptr [rdi] ; jg 0x9ccbc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b278c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x000000000007f6c4 : psubd mm7, mm7 ; mov rdi, r14 ; call 0x7c1c8
0x00000000000fad97 : push -0x16000001 ; retf -5
0x0000000000067e11 : push -0x16000005 ; ret 0xffe9
0x0000000000105c96 : push -0x163876bf ; ret
0x000000000007faf2 : push -0x16fffff8 ; retf -3
0x000000000016b808 : push -0x18001095 ; outsd dx, dword ptr [rsi] ; out dx, eax ; jmp rdi
0x0000000000180b30 : push -0x1ffffef9 ; salc ; cli ; call rax
0x000000000016b5d8 : push -0x28001102 ; or ch, bh ; call rdi
0x000000000016b5a0 : push -0x28001104 ; or ch, bh ; call rdi
0x000000000017d9e0 : push -0x3ffffea4 ; or esp, esi ; jmp rax
0x0000000000169f15 : push -0x57d3205 ; call 0xffffffffab246a15
0x0000000000002c61 : push -0x7329150 ; ret
0x00000000000c9604 : push -0x74b73681 ; je 0xc9638 ; or cl, ch ; retf -2
0x0000000000107e34 : push -0x76000003 ; ret 0x8aeb
0x00000000000f2967 : push -0x76fa74b8 ; retf
0x000000000002ad96 : push -0x77d0000 ; inc dword ptr [rcx - 0x77] ; ret
0x000000000005ad87 : push -0x7c000006 ; ret 0x8908
0x00000000001529d4 : push -0x9ffffff ; ret 0x7501
0x00000000000aeff7 : push -0xfb872b8 ; ret
0x000000000017b441 : push 0 ; add byte ptr [rax], al ; ret 0xffea
0x00000000000c077d : push 0 ; add byte ptr [rax], al ; syscall
0x0000000000187b0d : push 0 ; add byte ptr [rax], dl ; pop rsi ; out dx, al ; jmp qword ptr [rdi]
0x000000000017bc90 : push 0x10000097 ; retf
0x000000000007b224 : push 0x1003310 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000016c504 : push 0x10fff158 ; pop rcx ; int1 ; jmp qword ptr [rax]
0x0000000000169715 : push 0x1b6e41b5 ; std ; retf
0x0000000000159755 : push 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001800e0 : push 0x3000024f ; sar ecx, 1 ; call rax
0x00000000000ad14f : push 0x30ba ; add byte ptr [rcx], ch ; ret 0x8548
0x00000000001804e1 : push 0x38800002 ; cli ; jmp rax
0x000000000017d575 : push 0x3ed0fff2 ; add dword ptr [rax], eax ; loopne 0x17d50d ; jmp qword ptr [rax]
0x000000000017c3a0 : push 0x400000c9 ; sub al, 0xef ; call rax
0x0000000000192b6e : push 0x41180e0a ; ret
0x00000000001a1ffa : push 0x41380e0a ; ret
0x000000000017db59 : push 0x4bb00001 ; hlt ; call qword ptr [rax]
0x00000000000d7b53 : push 0x5c415d5b ; pop r13 ; ret
0x000000000017c620 : push 0x600000db ; jnp 0x17c61d ; jmp rax
0x000000000017aba9 : push 0x6990fffb ; sti ; call qword ptr [rax]
0x000000000016a3a2 : push 0x6e ; ja 0x16a32d ; ret 0x48f
0x0000000000078a9f : push 0x74c98548 ; and byte ptr [rax + 0x39], cl ; retf
0x0000000000079a8a : push 0x75c08548 ; ret
0x0000000000167f21 : push 0xa2 ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000167d6e : push 0xaf ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000001686e4 : push 0xd0 ; retf -0x18d2
0x000000000018b4fc : push 0xe ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; push rcx ; ret
0x000000000017dc85 : push 0xf4 ; jmp qword ptr [rax]
0x00000000000b17b8 : push 0xf41c80f ; enter -0x67b8, 0xf ; retf
0x000000000017abed : push 0xfb ; call qword ptr [rax + 0x10fffb6b]
0x00000000001a2ee9 : push 0xfb ; jmp qword ptr [rdx]
0x0000000000182621 : push 0xfd ; call qword ptr [rcx]
0x0000000000074966 : push 0xfd ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000169c82 : push 0xfd4cbe ; retf 0xf64
0x0000000000086b8b : push 0xff ; ja 0x86b71 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000197acd : push 1 ; add al, dl ; cmc ; jmp qword ptr [rcx]
0x0000000000197b5d : push 1 ; add byte ptr [rax + 0x67], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000197b45 : push 1 ; add byte ptr [rax + 0x67], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000197b15 : push 1 ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000180511 : push 2 ; add al, dh ; cmp edi, edx ; jmp qword ptr [rax]
0x000000000011b78e : push 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000099922 : push 5 ; add byte ptr [rax], al ; ret
0x000000000000fb99 : push 8 ; add byte ptr [rax], al ; retf
0x000000000004eb01 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000017c23f : push qword ptr [rax + 0x100000bd] ; in eax, dx ; out dx, al ; call qword ptr [rax]
0x000000000017c59f : push qword ptr [rax + 0x100000d6] ; pop rbp ; out dx, eax ; call rax
0x000000000017f767 : push qword ptr [rax + 0x10000208] ; clc ; call qword ptr [rax]
0x000000000017d797 : push qword ptr [rax + 0x1a00014d] ; call qword ptr [rax]
0x000000000017c88f : push qword ptr [rax + 0x200000ea] ; mov bl, 0xef ; call rax
0x000000000017a503 : push qword ptr [rax + 0x25] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000017bdc7 : push qword ptr [rax + 0x300000a0] ; pop rbx ; in al, dx ; jmp qword ptr [rax]
0x000000000017e39f : push qword ptr [rax + 0x4000019f] ; js 0x17e3a5 ; call rax
0x000000000017ae57 : push qword ptr [rax + 0x40fffbb3] ; mov bl, 0xfb ; jmp rax
0x000000000017ac3f : push qword ptr [rax + 0x40fffbb6] ; mov dh, 0xfb ; call rax
0x000000000017a6e3 : push qword ptr [rax + 0x43] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000016c763 : push qword ptr [rax + 0x4b] ; inc eax ; call qword ptr [rax]
0x000000000017a0af : push qword ptr [rax + 0x50fffcc0] ; ret 0xfffc
0x000000000017a6cf : push qword ptr [rax + 0x51] ; sti ; inc eax ; push rdx ; sti ; call qword ptr [rax]
0x000000000017a63f : push qword ptr [rax + 0x58] ; sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x000000000017a59f : push qword ptr [rax + 0x59] ; sti ; push qword ptr [rax] ; pop rbx ; sti ; call qword ptr [rax]
0x000000000017da5f : push qword ptr [rax + 0x61] ; add dword ptr [rax], eax ; add byte ptr [rax], ch ; hlt ; jmp rax
0x000000000017a253 : push qword ptr [rax + 0x65] ; std ; call qword ptr [rax]
0x000000000017ab9f : push qword ptr [rax + 0x65] ; sti ; call qword ptr [rax + 0x10fffb66]
0x000000000017d26f : push qword ptr [rax + 0x7000012b] ; mov cl, dh ; jmp rax
0x0000000000070325 : push qword ptr [rax + rcx + 0x5b] ; ret
0x000000000017a8bb : push qword ptr [rax + rdx*4 - 0x6fbb0005] ; sti ; call rsp
0x000000000016c6bf : push qword ptr [rax - 0x17] ; sti ; jmp rax
0x000000000016caaf : push qword ptr [rax - 0x1f000d1a] ; out 0xf2, al ; call qword ptr [rax]
0x000000000017f297 : push qword ptr [rax - 0x1ffffe11] ; adc bh, al ; jmp rax
0x000000000016c8bf : push qword ptr [rax - 0x30] ; jmp qword ptr [rax - 0x2f000d30]
0x000000000017a0c7 : push qword ptr [rax - 0x36] ; cld ; call qword ptr [rax]
0x000000000017eb17 : push qword ptr [rax - 0x39] ; add dword ptr [rax], eax ; sub byte ptr [rsi], 0xf7 ; jmp rax
0x000000000017083f : push qword ptr [rax - 0x3f000577] ; mov edx, edi ; call rax
0x000000000016c92b : push qword ptr [rax - 0x3f000d2e] ; sal dl, cl ; call rax
0x000000000016c8ef : push qword ptr [rax - 0x3f000d2f] ; sal edx, 1 ; call rax
0x000000000016c703 : push qword ptr [rax - 0x3f000dc7] ; cmp esi, edx ; call rax
0x000000000017a0a7 : push qword ptr [rax - 0x43] ; cld ; call qword ptr [rax]
0x000000000016c757 : push qword ptr [rax - 0x43] ; cld ; push rax ; lahf ; cld ; jmp qword ptr [rax]
0x000000000017a04f : push qword ptr [rax - 0x5b] ; cld ; inc dword ptr [rax - 0x5a] ; cld ; call qword ptr [rax]
0x000000000017dccf : push qword ptr [rax - 0x5ffffe91] ; xchg eax, edx ; hlt ; jmp rax
0x000000000017ab57 : push qword ptr [rax - 0x7d] ; sti ; jmp rax
0x000000000017ab5f : push qword ptr [rax - 0x7e] ; sti ; call qword ptr [rax]
0x0000000000180327 : push qword ptr [rax - 0x7ffffda2] ; sbb bh, dl ; call rax
0x000000000016c613 : push qword ptr [rax - 0xf000e06] ; sti ; int1 ; call rax
0x000000000017b57f : push qword ptr [rax - 0xfffff8b] ; sbb ch, bl ; jmp rax
0x000000000017b143 : push qword ptr [rax - 1] ; cld ; inc eax ; add ch, bh ; call qword ptr [rax]
0x000000000017ca97 : push qword ptr [rax - 8] ; add byte ptr [rax], al ; sal bl, 1 ; out dx, eax ; jmp rax
0x000000000017f45f : push qword ptr [rax - 9] ; add dword ptr [rax], eax ; shr byte ptr [rcx], 1 ; clc ; call rax
0x000000000016c5b3 : push qword ptr [rax] ; in eax, -0xf ; call rax
0x000000000009856f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000017a06f : push qword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000170857 : push qword ptr [rax] ; mov bh, dl ; call rax
0x000000000016c6cf : push qword ptr [rax] ; out dx, eax ; sti ; jmp qword ptr [rax + 0x10fffbf0]
0x000000000017a587 : push qword ptr [rax] ; pop rbp ; sti ; call qword ptr [rax]
0x000000000017a5a3 : push qword ptr [rax] ; pop rbx ; sti ; call qword ptr [rax]
0x000000000016c51f : push qword ptr [rax] ; pop rcx ; int1 ; jmp rax
0x000000000017a643 : push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x000000000017a62b : push qword ptr [rax] ; pop rsi ; sti ; call qword ptr [rax]
0x0000000000154358 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000187703 : push qword ptr [rbp + 0x4000001] ; scasb al, byte ptr [rdi] ; retf
0x0000000000079548 : push qword ptr [rbp + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000b1101 : push qword ptr [rbp + 0xc] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007253b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000149fd9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000079a2d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000006b501 : push qword ptr [rbp + rbp*4 - 0x77] ; ret 0xe283
0x0000000000127180 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000639a9 : push qword ptr [rbp + rcx - 0x18] ; pop rdi ; retf
0x000000000011adde : push qword ptr [rbp + rcx - 0x18] ; ret 0xf059
0x00000000000bb75e : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x000000000004422e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009f9ee : push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x0000000000107af8 : push qword ptr [rbp - 0x13] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f6eb : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015942c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000043bb6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000016c5c7 : push qword ptr [rbp - 0x1a2b000f] ; int1 ; jmp rsp
0x00000000000fb14f : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016b607 : push qword ptr [rbp - 0x280010f6] ; or ch, bh ; call rdi
0x0000000000079de0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fd642 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000e0c08 : push qword ptr [rbx + 0x34] ; ret
0x000000000003450c : push qword ptr [rbx + 1] ; ret
0x0000000000043396 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000000719d6 : push qword ptr [rbx + rcx - 0x18] ; retf -0x513
0x00000000000dd5d3 : push qword ptr [rcx] ; fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000ec68f : push qword ptr [rcx] ; fucomi st(3) ; retf -0x6f9a
0x00000000000cb0c4 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000003f91b : push qword ptr [rcx] ; rol byte ptr [rcx - 0x7d], cl ; clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8349
0x0000000000073da8 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000d53a9 : push qword ptr [rcx] ; ror byte ptr [rcx + 1], cl ; ret
0x00000000000debda : push qword ptr [rcx] ; ror byte ptr [rcx + rcx*4 + 0x14], 0x24 ; call 0x6adf9
0x000000000004eb02 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000fd3ac : push qword ptr [rdi + 0x1b] ; ret
0x00000000000e2997 : push qword ptr [rdi + 0x21] ; ret
0x00000000000e717b : push qword ptr [rdi + 0x22] ; ret
0x00000000000f1c63 : push qword ptr [rdi + 0x32] ; ret
0x00000000000e72f3 : push qword ptr [rdi + 0xa] ; ret
0x00000000000e1ef2 : push qword ptr [rdi + 0xb] ; ret
0x0000000000034541 : push qword ptr [rdi + 0xc] ; ret
0x00000000000c09dc : push qword ptr [rdi + 1] ; ret
0x000000000003458b : push qword ptr [rdi + 2] ; ret
0x00000000000e1dfa : push qword ptr [rdi + 3] ; ret
0x00000000000e1e49 : push qword ptr [rdi + 4] ; ret
0x0000000000037e48 : push qword ptr [rdi + 5] ; ret
0x00000000000bf6bf : push qword ptr [rdi + 6] ; ret
0x00000000000bc366 : push qword ptr [rdi + 7] ; ret
0x00000000000344d5 : push qword ptr [rdi + 8] ; ret
0x0000000000076d64 : push qword ptr [rdi + 9] ; pop rbx ; ret
0x000000000006918c : push qword ptr [rdi + 9] ; ret
0x00000000000d77a6 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f29c6 : push qword ptr [rdi + rbx - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000017adb3 : push qword ptr [rdi + rsi*4 - 0x48bb0005] ; sti ; call rsp
0x0000000000086b8c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd384 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017a7f3 : push qword ptr [rdx + 0x42fffb91] ; xchg eax, ecx ; sti ; call rdx
0x000000000016d99f : push qword ptr [rdx - 0x3c] ; hlt ; call qword ptr [rdi]
0x000000000016db6b : push qword ptr [rdx] ; ret 0xfff4
0x000000000017aa13 : push qword ptr [rdx] ; test bh, bl ; jmp qword ptr [rdx + 0x12fffb83]
0x0000000000166953 : push qword ptr [rip + 0x10ffecb5] ; mov bl, 0xec ; call qword ptr [rax]
0x000000000017a78f : push qword ptr [rsi + 0x46fffb8e] ; mov dr1, ebx ; call rsi
0x000000000017ac87 : push qword ptr [rsi + 0x46fffbb5] ; mov ch, 0xfb ; call rsi
0x000000000016d3af : push qword ptr [rsi + 0x63] ; hlt ; jmp qword ptr [rax]
0x000000000016d3ab : push qword ptr [rsi + 0x63] ; hlt ; push qword ptr [rsi + 0x63] ; hlt ; jmp qword ptr [rax]
0x0000000000108611 : push r11 ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011b826 : push r12 ; mov eax, 1 ; ret
0x000000000011db6c : push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000001e84 : push r13 ; salc ; retf 0x559a
0x000000000011db6a : push r14 ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000791dc : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ea1bf : push r8 ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000167dcc : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000011523a : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000001150ec : push rax ; adc al, 0xf ; retf -0x2e77
0x000000000007b4a3 : push rax ; adc byte ptr [rax + 0x39], cl ; retf -0x78f1
0x0000000000082330 : push rax ; adc byte ptr [rax + 3], cl ; push rax ; sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x0000000000115231 : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000006fdea : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007a741 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001150e1 : push rax ; adc byte ptr [rdi], cl ; retf -0x2e77
0x000000000010f8c2 : push rax ; adc byte ptr [rsp + 0x48], dh ; add esp, 8 ; ret
0x000000000011cd59 : push rax ; adc dh, dh ; ret 0x7401
0x000000000007d4dd : push rax ; adc dh, dh ; ret 0xf0f
0x000000000009316d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000791dd : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000075f0c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000b146c : push rax ; add dword ptr [rax], esi ; add byte ptr [rax + 0x39], cl ; ret 0x940f
0x000000000002c7b1 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000008a010 : push rax ; add dword ptr [rcx - 0x77], ecx ; ret 0x8941
0x0000000000028bf7 : push rax ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000085be7 : push rax ; add eax, ebp ; mov dl, 0xa9 ; stc ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000120889 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000120677 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000019a3c0 : push rax ; and al, 0xf6 ; jmp qword ptr [rsi]
0x0000000000113cff : push rax ; and byte ptr [rax - 0x77], cl ; fistp word ptr [rbx - 0x17] ; sahf ; retf -0x10
0x00000000001259a1 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000021ea8 : push rax ; call rbx
0x000000000017f63d : push rax ; clc ; call rax
0x00000000000ca4db : push rax ; cld ; cmp esi, dword ptr [rdi + 4] ; jl 0xca4d8 ; ret
0x0000000000196fb0 : push rax ; cmc ; jmp qword ptr [rcx]
0x000000000017def5 : push rax ; cmc ; jmp rax
0x000000000017d498 : push rax ; cmp byte ptr [rcx], al ; add al, al ; jmp rax
0x00000000000e7251 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x000000000017d567 : push rax ; cmp eax, 0x63d00001 ; jmp qword ptr [rax]
0x00000000001a3b30 : push rax ; cmp edi, eax ; call qword ptr [rdi]
0x00000000001a3c50 : push rax ; cmp edi, eax ; call rcx
0x00000000000c7c29 : push rax ; dec dword ptr [rax + 0x39] ; mov byte ptr [rsi - 0x73], 0xc ; retf -0x108b
0x000000000003b0a1 : push rax ; dec dword ptr [rax + 0x63] ; retf -0x74b8
0x000000000004254f : push rax ; dec dword ptr [rax + 1] ; retf 0x1f0f
0x00000000001079e6 : push rax ; dec dword ptr [rax - 0x7d] ; cli ; std ; jbe 0x1079f8 ; ret
0x000000000017c1f4 : push rax ; fucompi st(6) ; call rax
0x000000000017dabc : push rax ; hlt ; call qword ptr [rax]
0x00000000001940a9 : push rax ; hlt ; call qword ptr [rdi]
0x00000000001940f9 : push rax ; hlt ; call qword ptr [rdx]
0x000000000017db85 : push rax ; hlt ; call rax
0x0000000000194111 : push rax ; hlt ; call rdx
0x0000000000194001 : push rax ; hlt ; jmp qword ptr [rcx]
0x00000000000558c2 : push rax ; idiv edi ; inc edi ; test esi, esp ; idiv bh ; call qword ptr [rax]
0x000000000017ec15 : push rax ; idiv edi ; pop rax ; retf
0x000000000017bd4c : push rax ; in al, -0x15 ; call qword ptr [rax]
0x000000000017b47c : push rax ; in al, -0x16 ; jmp rax
0x000000000016ca9f : push rax ; in eax, -0xe ; jmp qword ptr [rax]
0x0000000000180b8f : push rax ; int1 ; add dword ptr [rax], eax ; fdiv st(2), st(0) ; jmp qword ptr [rax]
0x000000000016c8af : push rax ; iretd ; call qword ptr [rax]
0x000000000017dd37 : push rax ; jb 0x17dd44 ; add byte ptr [rax], dh ; fdiv st(4) ; jmp qword ptr [rax]
0x000000000016d288 : push rax ; jne 0x16d286 ; dec esi ; hlt ; call rcx
0x000000000018c3f0 : push rax ; jo 0x18c3e5 ; jmp qword ptr [rcx]
0x000000000016c75b : push rax ; lahf ; cld ; jmp qword ptr [rax]
0x0000000000072d82 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000167e3a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000018a320 : push rax ; loopne 0x18a314 ; jmp qword ptr [rsi]
0x000000000017a07f : push rax ; mov al, 0xfc ; jmp rax
0x000000000017efec : push rax ; mov bh, dh ; jmp qword ptr [rax]
0x000000000017e51c : push rax ; mov bl, 0xf6 ; call rax
0x000000000017ae40 : push rax ; mov dh, 0xfb ; jmp rax
0x000000000019cc00 : push rax ; mov dl, 0xf6 ; call qword ptr [rdi]
0x000000000017ae27 : push rax ; mov eax, 0xb880fffb ; sti ; call qword ptr [rax]
0x000000000017f02c : push rax ; mov edi, dr0 ; jmp rax
0x000000000017e484 : push rax ; mov esi, dr0 ; jmp qword ptr [rax]
0x000000000011c016 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000027fc2 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000025528 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r15
0x00000000000fb5d6 : push rax ; mov rsi, rdx ; call rax
0x0000000000084e6f : push rax ; or al, 0 ; je 0x84e40 ; ret
0x00000000001150d6 : push rax ; or al, 0xf ; retf -0x2e77
0x0000000000111ad8 : push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000007bf82 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000000edd9b : push rax ; or byte ptr [rax], al ; mov eax, ebx ; syscall
0x00000000000ecbeb : push rax ; or byte ptr [rbx + 0x94801e2], al ; retf -0x76b8
0x00000000001150c2 : push rax ; or byte ptr [rdi], cl ; retf -0x2e77
0x0000000000143eac : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016cabf : push rax ; out 0xf2, al ; inc dword ptr [rax] ; out -0xe, eax ; call qword ptr [rax]
0x0000000000187809 : push rax ; out dx, al ; dec dword ptr [rbx + rax] ; add byte ptr [rax], al ; add al, 0xc4 ; retf 1
0x00000000001798de : push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000016c51b : push rax ; pop rax ; int1 ; push qword ptr [rax] ; pop rcx ; int1 ; jmp rax
0x000000000017a64b : push rax ; pop rbp ; sti ; call rax
0x000000000017a68c : push rax ; pop rbp ; sti ; inc dword ptr [rax + 0x5f] ; sti ; call qword ptr [rax]
0x0000000000004de0 : push rax ; pop rbx ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000009fb0d : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017a584 : push rax ; pop rbx ; sti ; push qword ptr [rax] ; pop rbp ; sti ; call qword ptr [rax]
0x000000000017a5c0 : push rax ; pop rcx ; sti ; call qword ptr [rax]
0x000000000017a5ab : push rax ; pop rsi ; sti ; call rax
0x0000000000187aa0 : push rax ; pop rsp ; out dx, al ; jmp qword ptr [rbx]
0x000000000017a5c7 : push rax ; pop rsp ; sti ; call rax
0x000000000017a628 : push rax ; pop rsp ; sti ; push qword ptr [rax] ; pop rsi ; sti ; call qword ptr [rax]
0x0000000000180884 : push rax ; pushfq ; cli ; jmp rax
0x00000000000e90c4 : push rax ; pushfq ; or byte ptr [rax], al ; mov rdi, rbx ; call 0x85329
0x0000000000009730 : push rax ; ret
0x000000000017e60c : push rax ; ret 0xfff6
0x00000000000e90cc : push rax ; ret 0xfff9
0x000000000017a0b4 : push rax ; ret 0xfffc
0x000000000016a6e0 : push rax ; retf
0x00000000000477fc : push rax ; retf -1
0x0000000000180a84 : push rax ; retf -6
0x000000000017c3b0 : push rax ; retf 0
0x000000000000cbf8 : push rax ; retf 0xf
0x00000000000b61c4 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000199760 : push rax ; sal ch, 1 ; call rsi
0x000000000016c937 : push rax ; sal dl, cl ; call qword ptr [rax]
0x000000000016c8ff : push rax ; sal edx, 1 ; inc dword ptr [rax] ; sal dl, cl ; call qword ptr [rax]
0x000000000016c957 : push rax ; sal edx, cl ; call qword ptr [rax]
0x000000000004e98c : push rax ; sbb al, 0xfd ; dec dword ptr [rax + 0x29] ; ret
0x0000000000082334 : push rax ; sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x0000000000071b62 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x418b
0x000000000007a736 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000703ca : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001150f7 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x0000000000118116 : push rax ; sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xffe9
0x00000000000fc605 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000e0d11 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000017a220 : push rax ; std ; jmp rax
0x000000000016c617 : push rax ; sti ; int1 ; call rax
0x000000000017a43c : push rax ; sti ; jmp rax
0x000000000017c26c : push rax ; sti ; out dx, al ; jmp qword ptr [rax]
0x00000000000ea1c0 : push rax ; sub al, 0 ; add rsp, 8 ; ret
0x000000000017d2e7 : push rax ; sub eax, 0x25400001 ; call qword ptr [rax]
0x00000000000fc723 : push rax ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc739 ; xor eax, eax ; ret
0x00000000000fc753 : push rax ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc769 ; xor eax, eax ; ret
0x00000000000fc783 : push rax ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc799 ; xor eax, eax ; ret
0x00000000000fc7b3 : push rax ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc7c9 ; xor eax, eax ; ret
0x00000000000fc7e3 : push rax ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc7f9 ; xor eax, eax ; ret
0x000000000017ae97 : push rax ; test eax, 0xa960fffb ; sti ; call rsi
0x000000000000ca00 : push rax ; test eax, 8 ; add byte ptr [rax], al ; ret
0x000000000017a730 : push rax ; xchg eax, edx ; sti ; jmp rax
0x000000000017cebc : push rax ; xchg eax, esi ; call qword ptr [rax]
0x000000000017bbc8 : push rax ; xchg eax, esp ; add byte ptr [rax], al ; nop ; ret 0xffeb
0x0000000000198030 : push rax ; xchg ebp, esi ; jmp qword ptr [rcx]
0x0000000000180f3c : push rax ; xlatb ; std ; jmp rax
0x000000000017d6e4 : push rax ; xor al, 0xf3 ; jmp qword ptr [rax]
0x000000000017eb6c : push rax ; xor bh, dh ; call rax
0x00000000000e5a9f : push rax ; xor byte ptr [rax + 1], cl ; retf -0x76b8
0x0000000000167dcd : push rax ; xor byte ptr [rcx], ah ; retf
0x00000000000e6e2d : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000003e2d1 : push rbp ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x000000000011f9f9 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000d2dde : push rbp ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000010b206 : push rbp ; add dh, dh ; ret
0x000000000011f9f4 : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x11fa58 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000011faec : push rbp ; add dword ptr [rax - 0x78], eax ; je 0x11fb50 ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000124a88 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000019662d : push rbp ; add dword ptr [rax], eax ; jo 0x196659 ; cmc ; jmp qword ptr [rcx]
0x00000000001965e5 : push rbp ; add dword ptr [rax], eax ; js 0x196610 ; cmc ; jmp rdx
0x0000000000196645 : push rbp ; add dword ptr [rax], eax ; mov byte ptr [rcx], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000196615 : push rbp ; add dword ptr [rax], eax ; pop rax ; and ebp, esi ; jmp qword ptr [rcx]
0x00000000001008ca : push rbp ; and byte ptr [rcx], ch ; retf 0x3ae9
0x0000000000074c0a : push rbp ; and byte ptr [rcx], ch ; retf 0x55e9
0x00000000000cb0c2 : push rbp ; cmc ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006d7c1 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000017dbdd : push rbp ; hlt ; jmp qword ptr [rax]
0x0000000000001cc5 : push rbp ; je 0x1cf3 ; ret
0x0000000000003b26 : push rbp ; jg 0x3b95 ; xchg eax, ebp ; retf 0x10bf
0x0000000000003b25 : push rbp ; jg 0x3b96 ; xchg eax, ebp ; retf 0x10bf
0x000000000011db6d : push rbp ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000c6a7f : push rbp ; mov al, ch ; retf 0x35b
0x00000000000fc294 : push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000002f477 : push rbp ; or al, 0xf ; retf -0x2d77
0x0000000000148938 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000083b29 : push rbp ; or al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000fbb1c : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000002f467 : push rbp ; or byte ptr [rcx - 0x75], al ; insd dword ptr [rdi], dx ; adc al, 0xf ; retf -0x32f1
0x00000000000cab5b : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xcab8d ; or byte ptr [rcx], ch ; ret
0x000000000017c545 : push rbp ; out dx, eax ; call rax
0x00000000000bb690 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000000026f1 : push rbp ; retf
0x0000000000047587 : push rbp ; retf -1
0x0000000000028187 : push rbp ; retf 0x14
0x00000000000edc22 : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x0000000000001e85 : push rbp ; salc ; retf 0x559a
0x00000000000fbf9a : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x000000000002f4a2 : push rbp ; sbb byte ptr [rdi], cl ; retf -0x2d77
0x0000000000002622 : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x25bf ; loop 0x260a ; ret 0x23cb
0x00000000000fb961 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00000000000fd4a0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000083101 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000011520b : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000a8949 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000186475 : push rbx ; add byte ptr [rax], al ; scasq rax, qword ptr [rdi] ; in al, dx ; call qword ptr [rcx]
0x00000000000edf81 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000c45ff : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c45f2 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011522c : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000001594d2 : push rbx ; and eax, 0x5be17500 ; ret
0x0000000000002073 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000152265 : push rbx ; jb 0x152275 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000029e12 : push rbx ; je 0x29e29 ; cmp esi, 3 ; je 0x29e29 ; pop rbx ; ret
0x00000000000c101d : push rbx ; je 0xc0ffa ; mov eax, 1 ; ret
0x00000000000c101c : push rbx ; je 0xc0ffb ; mov eax, 1 ; ret
0x00000000000aefdc : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000bb691 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000099f82 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006aa8a : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000073fe2 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x0000000000003d9c : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000020d18 : push rbx ; push rdi ; rol byte ptr [rcx + 0x21], 1 ; ret 0xe783
0x000000000002c948 : push rbx ; ret
0x000000000011521f : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000083105 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000074ac6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f9e0a : push rbx ; sbb dh, dh ; ret 0x7508
0x0000000000108612 : push rbx ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000000c9dfd : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000115235 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000e848c : push rbx ; sub rsp, 0xa8 ; syscall
0x0000000000002d10 : push rbx ; xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x00000000001697fc : push rbx ; xchg eax, edx ; jae 0x1697db ; push rsi ; pop rdx ; je 0x1697d0 ; ret 0xacfc
0x000000000011523d : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000119115 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000cd5dd : push rcx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf -0x76bb
0x00000000001861cd : push rcx ; add byte ptr [rax], al ; xor byte ptr [rsp + rbp*8], ch ; jmp rdi
0x00000000000af7af : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcb943fc1
0x00000000001961fd : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax], bl ; cmc ; call qword ptr [rsi]
0x000000000017d831 : push rcx ; add dword ptr [rax], eax ; jo 0x17d89d ; jmp qword ptr [rax]
0x0000000000196215 : push rcx ; add dword ptr [rax], eax ; or byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x000000000008a699 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000008a718 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000011ff5e : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000168a85 : push rcx ; call qword ptr [rsi]
0x0000000000180615 : push rcx ; cli ; jmp rax
0x000000000017a2ab : push rcx ; je 0x17a2b0 ; call qword ptr [rcx]
0x000000000017a2a7 : push rcx ; je 0x17a2b0 ; push rcx ; je 0x17a2b4 ; call qword ptr [rcx]
0x000000000017a2cb : push rcx ; je 0x17a2d0 ; call qword ptr [rcx]
0x000000000017a2c7 : push rcx ; je 0x17a2d0 ; push rcx ; je 0x17a2d4 ; call qword ptr [rcx]
0x0000000000151a5d : push rcx ; jl 0x151aae ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000151bc4 : push rcx ; jl 0x151c15 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000017d7c5 : push rcx ; jmp qword ptr [rax]
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x0000000000083ffa : push rcx ; js 0x83ff7 ; ret 0
0x000000000013e4b6 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf -0x7cb8
0x00000000000edcaa : push rcx ; or byte ptr [rax], al ; mov eax, ebx ; syscall
0x0000000000116d3d : push rcx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000017c525 : push rcx ; out dx, eax ; jmp rax
0x000000000018b503 : push rcx ; ret
0x000000000010f413 : push rcx ; retf 0x29
0x000000000017a6d1 : push rcx ; sti ; inc eax ; push rdx ; sti ; call qword ptr [rax]
0x00000000000ea035 : push rcx ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d6de4 : push rcx ; sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000fc6c3 : push rcx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc6d9 ; xor eax, eax ; ret
0x00000000000fc6f3 : push rcx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc709 ; xor eax, eax ; ret
0x000000000009d012 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009b3e2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000081fac : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000009d170 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009ce48 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ce5a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008a98d : push rdi ; add al, 0x48 ; add eax, edi ; ret
0x000000000009a3ea : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009b22a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00000000001335f9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000002cb1c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x0000000000180211 : push rdi ; add al, byte ptr [rax] ; adc dh, dh ; stc ; call qword ptr [rax]
0x00000000000aa283 : push rdi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000180209 : push rdi ; add al, byte ptr [rax] ; add ch, dh ; stc ; call rax
0x000000000009ce1a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000196895 : push rdi ; add dword ptr [rax], eax ; pop rax ; and al, 0xf5 ; jmp qword ptr [rsi]
0x000000000009a49c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009b2ec : push rdi ; add eax, 0xd478d48 ; ret
0x000000000009ce78 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000f195a : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x000000000017f6bd : push rdi ; clc ; jmp qword ptr [rax]
0x000000000012d3f8 : push rdi ; clc ; ret
0x0000000000003997 : push rdi ; clc ; salc ; jb 0x3a1d ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000012d570 : push rdi ; cld ; ret
0x000000000016f789 : push rdi ; cli ; call rax
0x000000000016f785 : push rdi ; cli ; jmp qword ptr [rax - 0x2f0005a9]
0x000000000012e097 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000197629 : push rdi ; cmc ; call qword ptr [rax]
0x0000000000197551 : push rdi ; cmc ; call qword ptr [rdx]
0x0000000000132ed9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000011c095 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000bfcd8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xbfce9 ; ret
0x0000000000154e3e : push rdi ; dec dword ptr [rax + 0x21] ; retf -0x76b8
0x0000000000157b17 : push rdi ; dec dword ptr [rcx + 0x29] ; retf 0x2148
0x000000000017d505 : push rdi ; dec eax ; cmp eax, dword ptr [rcx] ; add al, dl ; push rdi ; jmp rax
0x0000000000132e59 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000132caa : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000017d50d : push rdi ; jmp rax
0x0000000000079104 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000132d3a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000010b1c0 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000081fb0 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000009cebc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009cefa : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009ce9a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000ae861 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000004525a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000043b1a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001237e2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000043b21 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000121621 : push rdi ; or byte ptr [rcx], bh ; retf -0x7af1
0x0000000000075f10 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000010f9d9 : push rdi ; or dh, dh ; ret 0x7401
0x000000000009a680 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000009b4e0 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000c42e5 : push rdi ; ret
0x000000000015074e : push rdi ; ret 0xff3
0x0000000000038850 : push rdi ; ret 0xffef
0x0000000000029715 : push rdi ; retf
0x00000000001502f3 : push rdi ; retf -0x354e
0x00000000000e0565 : push rdi ; retf -1
0x00000000000f0255 : push rdi ; retf 0
0x000000000011483f : push rdi ; retf 5
0x0000000000020d19 : push rdi ; rol byte ptr [rcx + 0x21], 1 ; ret 0xe783
0x0000000000120b33 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x0000000000121d1b : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x000000000012e297 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012daba : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000012de97 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000011c0dd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000120a92 : push rdi ; sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000120ac2 : push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000002f473 : push rdi ; sub byte ptr [rcx - 0x75], al ; push rbp ; or al, 0xf ; retf -0x2d77
0x00000000000ecf3c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d150 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009394b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008e0f8 : push rdi ; xor eax, eax ; ret
0x000000000002bffc : push rdx ; adc al, 0 ; ret
0x0000000000180151 : push rdx ; add al, byte ptr [rax] ; adc bl, ah ; stc ; jmp rax
0x00000000000261fc : push rdx ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000007b03a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000001962e5 : push rdx ; add dword ptr [rax], eax ; cwde ; sbb ebp, esi ; jmp qword ptr [rsi]
0x00000000001962cd : push rdx ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf5 ; jmp qword ptr [rsi]
0x000000000010bcde : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000085119 : push rdx ; js 0x85116 ; ret 0
0x0000000000085160 : push rdx ; js 0x8515d ; ret 0
0x00000000000851a7 : push rdx ; js 0x851a4 ; ret 0
0x00000000000851ee : push rdx ; js 0x851eb ; ret 0
0x000000000017ad14 : push rdx ; mov ah, 0xfb ; jmp rdx
0x000000000017a9e4 : push rdx ; mov bh, bl ; call rdx
0x0000000000001b0d : push rdx ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x0000000000066a62 : push rdx ; or al, 0 ; add dh, dh ; ret
0x0000000000083456 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000018d22d : push rdx ; ret
0x00000000000826b6 : push rdx ; ret 0x32
0x000000000003b23e : push rdx ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000017a6d5 : push rdx ; sti ; call qword ptr [rax]
0x00000000000e9e6b : push rdx ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec979 : push rsi ; adc byte ptr [rcx - 0x77], cl ; retf
0x000000000014f394 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000027f06 : push rsi ; adc dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x415e
0x00000000001520a9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x152100 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000001231ef : push rsi ; add al, 0x75 ; sbb ebp, ecx ; retf
0x0000000000053cc8 : push rsi ; add al, 0x83 ; ret
0x00000000001801e1 : push rsi ; add al, byte ptr [rax] ; and cl, dh ; stc ; jmp rax
0x0000000000133891 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000e4a76 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000017d8e9 : push rsi ; add dword ptr [rax], eax ; add bl, dh ; jmp qword ptr [rax]
0x0000000000196775 : push rsi ; add dword ptr [rax], eax ; fsub dword ptr [rdx] ; cmc ; jmp rdx
0x0000000000133901 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000098e55 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000133821 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000098df3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000014f3a9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017e95d : push rsi ; call rax
0x000000000017f6ad : push rsi ; clc ; jmp rax
0x000000000012d522 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012dc91 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d8c5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012daa5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012dc85 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012d6e5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016a3a0 : push rsi ; cli ; push 0x6e ; ja 0x16a32f ; ret 0x48f
0x0000000000153e96 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000017dc25 : push rsi ; hlt ; call qword ptr [rax]
0x000000000017dc15 : push rsi ; hlt ; jmp rax
0x0000000000153e86 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000010b047 : push rsi ; int1 ; dec dword ptr [rax - 0x75] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000153e56 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000000fb5b2 : push rsi ; je 0xfb5c8 ; mov eax, 7 ; ret
0x000000000016f035 : push rsi ; jmp rax
0x00000000000e109b : push rsi ; js 0xe10ef ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e1b58 : push rsi ; js 0xe1bac ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000054e13 : push rsi ; or al, 0xf6 ; ret 0xf08
0x00000000000375f7 : push rsi ; or byte ptr [rax + 0x29], cl ; retf -0x3eb8
0x00000000000cb174 : push rsi ; or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x00000000000ecb32 : push rsi ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x0000000000116b35 : push rsi ; or byte ptr [rcx - 0x77], cl ; retf
0x00000000000ae85e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x0000000000169800 : push rsi ; pop rdx ; je 0x1697cc ; ret 0xacfc
0x000000000011db6b : push rsi ; push r13 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000335df : push rsi ; ret
0x00000000000d063f : push rsi ; ret 0x7420
0x00000000000e41ff : push rsi ; ret 0xf02
0x0000000000064e14 : push rsi ; ret 0xf0a
0x000000000005666f : push rsi ; ret 0xf10
0x000000000016dbac : push rsi ; ret 0xfff4
0x000000000003d5ac : push rsi ; retf
0x0000000000034a86 : push rsi ; retf 0x37
0x0000000000116bd3 : push rsi ; sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000000ca66d : push rsi ; sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x000000000008aeeb : push rsi ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e9b66 : push rsi ; sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000dc46f : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000153e66 : push rsi ; sub eax, edx ; ret
0x0000000000167dc8 : push rsi ; xchg eax, ebp ; jge 0x167dad ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000017a778 : push rsi ; xchg eax, ecx ; sti ; jmp rsi
0x00000000000e65c7 : push rsi ; xor ax, ax ; ret
0x000000000014f3be : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001008e9 : push rsp ; add byte ptr [rax], al ; add al, ch ; out dx, al ; ret
0x0000000000186545 : push rsp ; add byte ptr [rax], al ; cwde ; retf
0x00000000000e71cf : push rsp ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000019653d : push rsp ; add dword ptr [rax], eax ; adc byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000002b5e8 : push rsp ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x000000000019657d : push rsp ; add dword ptr [rax], eax ; sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x00000000000ccf5b : push rsp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d978 : push rsp ; and al, 0x10 ; call rdi
0x00000000000f8741 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000000f863d : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000007d8b2 : push rsp ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x000000000008aa0c : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000008a99a : push rsp ; and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000007f5e0 : push rsp ; and al, 0x18 ; call 0x7b845
0x0000000000113c32 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000007d5a3 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000ab3fe : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x0000000000047dbc : push rsp ; and al, 0x28 ; call 0x43fe5
0x000000000007d907 : push rsp ; and al, 0x28 ; call rax
0x00000000000e8904 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x000000000003397d : push rsp ; and al, 0xf0 ; movdqa xmm0, xmmword ptr [rsp - 0x18] ; ret
0x000000000008a9eb : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000045420 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000008a9cd : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000453da : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010c024 : push rsp ; and al, 8 ; add rsp, 0x28 ; ret
0x00000000000a7d44 : push rsp ; and al, 8 ; call 0x43fe5
0x00000000000f00e7 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x00000000000a75ad : push rsp ; and al, 8 ; mov ecx, r15d ; call 0x43fe8
0x000000000007d242 : push rsp ; and eax, 0x950f4100 ; ret
0x0000000000180645 : push rsp ; cli ; call qword ptr [rax]
0x000000000018ee0c : push rsp ; fld qword ptr [rax] ; add al, ah ; sbb esi, ecx ; jmp qword ptr [rax]
0x000000000017bdad : push rsp ; in al, dx ; jmp qword ptr [rax]
0x0000000000190f0c : push rsp ; inc byte ptr [rax] ; add byte ptr [rax - 0x55], dh ; call rdi
0x000000000017d4d5 : push rsp ; jmp rax
0x000000000019860c : push rsp ; jne 0x198617 ; add byte ptr [rax - 0x72], ah ; cmc ; jmp qword ptr [rcx]
0x00000000000c0e26 : push rsp ; jne 0xc0db3 ; mov eax, 0x7d00 ; ret
0x000000000008e62b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000017afa4 : push rsp ; mov al, 0xfb ; call rsp
0x000000000016d978 : push rsp ; mov bh, 0xf4 ; jmp rax
0x000000000016d9b4 : push rsp ; mov bh, 0xf4 ; jmp rbx
0x000000000011b827 : push rsp ; mov eax, 1 ; ret
0x0000000000148639 : push rsp ; or eax, 0x894d0000 ; retf
0x0000000000191e0c : push rsp ; or eax, 0xea900001 ; jmp qword ptr [rcx]
0x000000000019000c : push rsp ; out dx, eax ; add byte ptr [rax], al ; sar bl, 1 ; int1 ; call qword ptr [rcx]
0x000000000019700c : push rsp ; pop rdi ; add dword ptr [rax], eax ; mov al, 0x43 ; cmc ; jmp qword ptr [rcx]
0x0000000000187b0c : push rsp ; push 0 ; add byte ptr [rax], dl ; pop rsi ; out dx, al ; jmp qword ptr [rdi]
0x00000000000e848b : push rsp ; push rbx ; sub rsp, 0xa8 ; syscall
0x00000000000335d9 : push rsp ; ret
0x00000000000f3164 : push rsp ; ret 0x8940
0x00000000000d49df : push rsp ; retf
0x000000000018db0c : push rsp ; retf 0
0x0000000000043ed2 : push rsp ; retf 0x45f8
0x00000000000439a0 : push rsp ; retf 0x48f8
0x000000000018e10c : push rsp ; rol byte ptr [rax], 1 ; add al, dh ; mov bl, 0xfb ; jmp qword ptr [rdi]
0x000000000018af0c : push rsp ; sahf ; add byte ptr [rax], al ; loopne 0x18af18 ; out dx, al ; call qword ptr [rdx]
0x000000000017a719 : push rsp ; sti ; call rax
0x000000000006b312 : push rsp ; sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000016bb17 : push rsp ; sub edi, 0xef77bdff ; call rcx
0x000000000016bb53 : push rsp ; sub edi, 0xef81f4ff ; call rdi
0x0000000000169fca : push rsp ; syscall
0x0000000000084d48 : push rsp ; test dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000017a8a4 : push rsp ; xchg eax, ebx ; sti ; jmp rsp
0x0000000000145dd0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000003e3d8 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000187f94 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rsp], al ; ret
0x00000000001a42eb : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x00000000000243c3 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000274d3 : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000253aa : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x4801
0x0000000000056916 : pushfq ; cld ; dec dword ptr [rax - 0x77] ; ret 0x12e9
0x0000000000180885 : pushfq ; cli ; jmp rax
0x0000000000194b54 : pushfq ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x3e], bl ; stc ; call qword ptr [rax]
0x000000000018ee54 : pushfq ; fld qword ptr [rax] ; add al, ch ; sbb esi, ecx ; call qword ptr [rax]
0x000000000018fd54 : pushfq ; in al, dx ; add byte ptr [rax], al ; sbb bl, ch ; int1 ; jmp qword ptr [rbx]
0x0000000000198254 : pushfq ; jno 0x19825f ; add byte ptr [rax - 0x77], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019b054 : pushfq ; lahf ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], al ; call qword ptr [rax]
0x000000000019d854 : pushfq ; mov dword ptr [rcx], 0xf6f99800 ; jmp qword ptr [rcx]
0x0000000000146ad0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e902f : pushfq ; or byte ptr [rax], al ; mov rdi, rbx ; call 0x85328
0x0000000000144a84 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000018db54 : pushfq ; retf 0
0x000000000009f4fb : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f2662 : pushfq ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f2655 : pushfq ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000019a554 : pushfq ; xchg eax, esp ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000016c9a8 : rcl ah, 0xf2 ; call rax
0x000000000016c640 : rcl ah, 0xfb ; jmp rax
0x000000000016c9ac : rcl ah, 1 ; jmp rax
0x000000000000236f : rcl bh, 1 ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x000000000017c520 : rcl bl, 0 ; add byte ptr [rax + 0x51], dh ; out dx, eax ; jmp rax
0x000000000016c954 : rcl bl, 1 ; push rax ; sal edx, cl ; call qword ptr [rax]
0x00000000000b5a44 : rcl byte ptr [rax + 0x41000001], 0x39 ; ret 0xf40
0x0000000000091eed : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000002d0f : rcl byte ptr [rbx - 0x7a], 1 ; retf -0x2fb1
0x000000000017f898 : rcl byte ptr [rbx], 1 ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x0000000000180210 : rcl byte ptr [rdi + 2], 1 ; add byte ptr [rax], dl ; idiv cl ; call qword ptr [rax]
0x000000000017d50c : rcl byte ptr [rdi - 0xe], 1 ; jmp rax
0x000000000016a111 : rcl byte ptr [rdi], cl ; retf
0x00000000000e9e6a : rcl byte ptr [rdx + 0x2c], cl ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000017a72c : rcl byte ptr [rdx - 0x6daf0005], 0xfb ; jmp rax
0x000000000019b870 : rcl byte ptr [rdx - 0xa], 1 ; call qword ptr [rdx]
0x0000000000001ebb : rcl byte ptr [rip + 0x42585c0c], 1 ; xchg eax, edi ; retf 0x20f4
0x000000000016c8f4 : rcl cl, 0xf2 ; call rax
0x00000000001a1cb0 : rcl cl, 0xf7 ; call qword ptr [rdx]
0x000000000016c8f8 : rcl cl, 1 ; jmp rax
0x000000000017c5a8 : rcl dh, 1 ; add byte ptr [rax], al ; mov al, 0x5d ; out dx, eax ; call qword ptr [rax]
0x000000000016c930 : rcl dl, 0xf2 ; call rax
0x000000000016c934 : rcl dl, 1 ; push rax ; sal dl, cl ; call qword ptr [rax]
0x00000000000e0d10 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000169c3a : rcl dword ptr [rsi + 0x27], cl ; retf -0x3f02
0x00000000001697ff : rcl dword ptr [rsi + 0x5a], cl ; je 0x1697cd ; ret 0xacfc
0x0000000000169c39 : rcl qword ptr [r14 + 0x27], cl ; retf -0x3f02
0x00000000001697fb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x1697d1 ; ret 0xacfc
0x000000000017e044 : rcr ah, 1 ; cmc ; call qword ptr [rax]
0x000000000016c7d4 : rcr bh, 0xfc ; inc dword ptr [rax] ; loop 0x16c7de ; jmp rax
0x0000000000032f7f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000002d13 : rcr byte ptr [r10], 1 ; retf 0x2217
0x00000000001393ad : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012580c : rcr byte ptr [rbp + 0x28], 1 ; add bl, dh ; ret
0x00000000000f6f60 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000051351 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000bc8f0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006dffd : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000005321c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000043b27 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000c0858 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000158b26 : rcr byte ptr [rbx + 0x41], 0x5e ; ret
0x0000000000072df1 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000023110 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000af8d9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000002995b : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000bc93c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006c086 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000080795 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000006b731 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006dbe5 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x000000000017bd48 : rcr byte ptr [rbx - 0x1bb00000], 0xeb ; call qword ptr [rax]
0x00000000000c9e2c : rcr byte ptr [rbx - 0x3d], 0x90 ; mov eax, 0xc ; ret
0x00000000000e0f3c : rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x00000000000f57c8 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000917fd : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000180258 : rcr byte ptr [rcx + 2], 0 ; nop ; std ; stc ; call qword ptr [rax]
0x000000000003af6d : rcr byte ptr [rcx], 0x3d ; xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x0000000000169c1d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000017fcf4 : rcr byte ptr [rdi - 7], 1 ; call qword ptr [rax]
0x00000000000e8c09 : rcr byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000002d14 : rcr byte ptr [rdx], 1 ; retf 0x2217
0x000000000017b304 : rcr byte ptr [rsi - 0x16], 1 ; call qword ptr [rax]
0x000000000017b684 : rcr byte ptr [rsi], 0xeb ; jmp rax
0x000000000017d0c0 : rcr byte ptr [rsi], 1 ; add dword ptr [rax], eax ; nop ; mov dh, 0xf0 ; jmp qword ptr [rax]
0x0000000000180c04 : rcr ch, 1 ; cli ; jmp rax
0x000000000019d2e0 : rcr dh, 0xf6 ; jmp qword ptr [rdi]
0x000000000017c600 : rcr dl, 0 ; add byte ptr [rax + 0x7a], al ; out dx, eax ; jmp qword ptr [rax]
0x000000000011a8e9 : rcr dword ptr [rbp - 0x10], cl ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000002d73d : rcr dword ptr [rbx + 0x48], -0x77 ; enter 0x415d, 0x5c ; ret
0x0000000000043b59 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000169f71 : rcr dword ptr [rcx], cl ; retf -0x4466
0x000000000007b2f5 : rdpmc ; add bl, dh ; ret
0x000000000009d9d4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000009d9c6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000127794 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009ddaa : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000010bc08 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007ff3d : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000034aea : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x0000000000000c2c : ret 0
0x000000000009a72a : ret 0x10
0x000000000002c110 : ret 0x100
0x00000000000007bf : ret 0x102
0x000000000006aa3f : ret 0x107
0x0000000000031ac9 : ret 0x1074
0x000000000008a16c : ret 0x1076
0x0000000000069d90 : ret 0x1077
0x000000000001e1a1 : ret 0x11
0x000000000007e082 : ret 0x110
0x000000000005ce05 : ret 0x1146
0x0000000000043afc : ret 0x114d
0x000000000008396c : ret 0x1172
0x00000000000cec46 : ret 0x1176
0x0000000000033d5a : ret 0x120c
0x000000000004aabb : ret 0x1269
0x000000000005691b : ret 0x12e9
0x00000000000944aa : ret 0x13
0x00000000000ea133 : ret 0x1374
0x00000000000ff42a : ret 0x1376
0x00000000000b84c3 : ret 0x144
0x0000000000089919 : ret 0x1474
0x000000000008e669 : ret 0x147c
0x000000000005c366 : ret 0x148
0x00000000000aa953 : ret 0x1489
0x00000000000cabcf : ret 0x148b
0x00000000000489ed : ret 0x149
0x000000000007c953 : ret 0x14c
0x0000000000151e1c : ret 0x14d
0x000000000002815a : ret 0x1510
0x00000000000a0563 : ret 0x1572
0x0000000000088e48 : ret 0x1574
0x0000000000033610 : ret 0x1575
0x00000000000d97e6 : ret 0x1589
0x00000000000f1587 : ret 0x1674
0x00000000000ff277 : ret 0x1676
0x0000000000024322 : ret 0x1689
0x00000000000c742f : ret 0x16eb
0x000000000008c66a : ret 0x17
0x000000000001e830 : ret 0x170e
0x00000000000ccb42 : ret 0x1774
0x00000000000b5a36 : ret 0x1775
0x000000000010c0f6 : ret 0x1776
0x00000000000e7806 : ret 0x1777
0x0000000000024b90 : ret 0x1789
0x00000000000c5cfe : ret 0x17eb
0x0000000000151d59 : ret 0x180f
0x000000000008e165 : ret 0x1876
0x00000000001555ed : ret 0x18e9
0x00000000000b06ff : ret 0x190
0x000000000005f83a : ret 0x1a4
0x00000000000875f3 : ret 0x1a74
0x0000000000039562 : ret 0x1a75
0x000000000016a17a : ret 0x1ad4
0x000000000016890d : ret 0x1b49
0x00000000000f1962 : ret 0x1b72
0x00000000000855da : ret 0x1b8
0x000000000010d5c1 : ret 0x1b9
0x000000000010e900 : ret 0x1ba
0x00000000000cb178 : ret 0x1bb
0x0000000000001bfd : ret 0x1bb7
0x00000000000b1abf : ret 0x1be
0x00000000000805ef : ret 0x1bf
0x0000000000003533 : ret 0x1bf9
0x00000000000e7901 : ret 0x1c77
0x00000000000c3087 : ret 0x1ceb
0x0000000000163db0 : ret 0x1d4
0x0000000000164548 : ret 0x1d5
0x000000000011c52a : ret 0x1d74
0x0000000000002201 : ret 0x1dd4
0x0000000000082909 : ret 0x1e8
0x0000000000086f9c : ret 0x1ee8
0x000000000002125a : ret 0x1f0f
0x000000000010b15e : ret 0x1f72
0x000000000009f803 : ret 0x1f74
0x00000000000811ee : ret 0x1f76
0x000000000002c9f2 : ret 0x200
0x000000000009b94d : ret 0x2074
0x000000000010f057 : ret 0x2075
0x0000000000033178 : ret 0x2148
0x0000000000155ee8 : ret 0x2149
0x000000000002b91d : ret 0x2174
0x00000000001230e4 : ret 0x2175
0x000000000002358b : ret 0x21e9
0x000000000009b8db : ret 0x2275
0x00000000000297fb : ret 0x2276
0x0000000000098938 : ret 0x2288
0x000000000010f070 : ret 0x233c
0x00000000001508b2 : ret 0x2373
0x0000000000034e72 : ret 0x237f
0x000000000000262b : ret 0x23cb
0x0000000000005870 : ret 0x24
0x000000000000281c : ret 0x244f
0x0000000000080885 : ret 0x2475
0x0000000000006980 : ret 0x25
0x0000000000078a15 : ret 0x2501
0x00000000001595a6 : ret 0x2555
0x000000000008a8b8 : ret 0x2574
0x0000000000008420 : ret 0x26
0x0000000000158291 : ret 0x2677
0x000000000008a778 : ret 0x2774
0x0000000000033dc3 : ret 0x27e8
0x0000000000125839 : ret 0x28
0x000000000000054f : ret 0x2800
0x0000000000094645 : ret 0x280f
0x000000000010ecb0 : ret 0x2875
0x000000000008e155 : ret 0x2876
0x000000000010e792 : ret 0x2889
0x0000000000125b92 : ret 0x28be
0x00000000000b4823 : ret 0x28f5
0x000000000010fb54 : ret 0x29
0x0000000000033d9a : ret 0x290f
0x000000000003b224 : ret 0x2941
0x000000000002fe7c : ret 0x2944
0x0000000000051ea4 : ret 0x2945
0x0000000000042d68 : ret 0x2948
0x00000000000d9743 : ret 0x2949
0x000000000004b4c4 : ret 0x294c
0x0000000000044214 : ret 0x2973
0x00000000001093a4 : ret 0x2974
0x0000000000080adb : ret 0x2975
0x00000000000758ea : ret 0x2976
0x00000000000d9114 : ret 0x2977
0x00000000001188d2 : ret 0x2986
0x00000000001186c2 : ret 0x2988
0x000000000011859a : ret 0x2989
0x000000000011143a : ret 0x29f9
0x00000000000ffd3a : ret 0x2a
0x0000000000001b15 : ret 0x2a63
0x000000000014f85a : ret 0x2a8
0x00000000001032a2 : ret 0x2a8b
0x0000000000050620 : ret 0x2ae8
0x00000000000f805a : ret 0x2b3e
0x00000000000238f5 : ret 0x2b48
0x00000000000fa9e6 : ret 0x2b49
0x00000000000297f2 : ret 0x2b72
0x000000000007ff7a : ret 0x2b75
0x000000000009ded2 : ret 0x2b77
0x0000000000116a4b : ret 0x2b8
0x00000000000f4e92 : ret 0x2ba8
0x00000000000f5d59 : ret 0x2bba
0x000000000004f455 : ret 0x2be
0x00000000000fa59f : ret 0x2be8
0x0000000000156ecd : ret 0x2be9
0x000000000000f368 : ret 0x2c
0x000000000010eca9 : ret 0x2c3c
0x00000000000e0ca2 : ret 0x2cb1
0x00000000000e2a5a : ret 0x2ced
0x000000000010b150 : ret 0x2d72
0x000000000000b0a8 : ret 0x2e
0x00000000000b15fe : ret 0x2f
0x00000000000bac5a : ret 0x2f2d
0x0000000000081fbe : ret 0x2f74
0x0000000000037728 : ret 0x3039
0x0000000000001b8c : ret 0x306a
0x00000000000d45e4 : ret 0x30f
0x000000000007c23f : ret 0x3110
0x00000000000df58f : ret 0x3145
0x0000000000116f46 : ret 0x3149
0x00000000000d76f9 : ret 0x31e8
0x000000000007ffd7 : ret 0x32
0x00000000000830a2 : ret 0x328e
0x00000000001632a8 : ret 0x33
0x0000000000116bd0 : ret 0x334c
0x0000000000116dd8 : ret 0x334d
0x00000000000e1f42 : ret 0x3375
0x000000000006d462 : ret 0x3413
0x000000000008e649 : ret 0x347c
0x000000000002fcce : ret 0x348
0x0000000000028bfd : ret 0x349
0x00000000000605a2 : ret 0x34b8
0x00000000001564ab : ret 0x34e9
0x00000000000e1ee0 : ret 0x3575
0x00000000000395b8 : ret 0x357e
0x0000000000009db8 : ret 0x36
0x000000000004304a : ret 0x36e7
0x00000000000dd546 : ret 0x36eb
0x000000000000cd58 : ret 0x37
0x0000000000156ba5 : ret 0x375
0x0000000000149976 : ret 0x3776
0x0000000000053833 : ret 0x37e8
0x00000000000df463 : ret 0x37e9
0x0000000000169a5a : ret 0x3827
0x000000000007138f : ret 0x3841
0x0000000000087a7b : ret 0x3845
0x000000000008e145 : ret 0x3876
0x00000000001680e6 : ret 0x38ae
0x000000000006c4d6 : ret 0x38b
0x00000000000205d2 : ret 0x38ba
0x0000000000065bc6 : ret 0x3901
0x00000000000d34c2 : ret 0x3902
0x00000000000d688d : ret 0x3904
0x00000000000cc8d6 : ret 0x3920
0x000000000008a7d6 : ret 0x3941
0x00000000000ebc6a : ret 0x3944
0x00000000000cb967 : ret 0x3945
0x0000000000039ccc : ret 0x3948
0x000000000002bd20 : ret 0x3949
0x000000000007afc8 : ret 0x394c
0x000000000003284d : ret 0x394d
0x00000000000a9e46 : ret 0x39e9
0x000000000000f9e9 : ret 0x3a
0x000000000009d382 : ret 0x3a01
0x000000000015089b : ret 0x3a73
0x00000000000db736 : ret 0x3a74
0x00000000000c5de9 : ret 0x3b01
0x000000000009db61 : ret 0x3b48
0x00000000000b2d85 : ret 0x3b8
0x00000000001568a4 : ret 0x3be9
0x00000000000e922a : ret 0x3c01
0x0000000000109d46 : ret 0x3c72
0x000000000009b8c1 : ret 0x3c75
0x00000000000101a8 : ret 0x3d
0x000000000003e740 : ret 0x3d7e
0x0000000000022e82 : ret 0x3d83
0x0000000000042847 : ret 0x3dbe
0x000000000004f407 : ret 0x3ee9
0x000000000000e4c8 : ret 0x3f
0x000000000006f0ab : ret 0x3f7
0x0000000000156012 : ret 0x3fef
0x00000000000cef5a : ret 0x4001
0x000000000002b5fe : ret 0x4002
0x00000000000009f5 : ret 0x4021
0x0000000000107dc3 : ret 0x4078
0x000000000005809d : ret 0x408d
0x0000000000023350 : ret 0x4101
0x000000000010bce2 : ret 0x4102
0x00000000000a1c19 : ret 0x4104
0x000000000004d53a : ret 0x4108
0x000000000007eb2c : ret 0x4117
0x00000000000f94be : ret 0x4128
0x000000000008a6c3 : ret 0x4153
0x00000000000257fc : ret 0x415e
0x00000000000e3135 : ret 0x4164
0x0000000000023ffe : ret 0x41c3
0x00000000000e7bc9 : ret 0x41e8
0x000000000010dba7 : ret 0x4201
0x0000000000115465 : ret 0x4203
0x00000000000b05a4 : ret 0x4240
0x000000000008c54a : ret 0x4266
0x00000000000b07fc : ret 0x428d
0x000000000002b3c0 : ret 0x42e9
0x000000000008a31b : ret 0x42eb
0x0000000000075b9a : ret 0x4376
0x0000000000029fd3 : ret 0x4389
0x00000000000aa3c9 : ret 0x43e9
0x0000000000026bbf : ret 0x4401
0x00000000000d677c : ret 0x4404
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x00000000000cead4 : ret 0x4422
0x0000000000025d3b : ret 0x445f
0x000000000003c728 : ret 0x4489
0x0000000000032e80 : ret 0x448b
0x0000000000039da2 : ret 0x44c7
0x00000000000ccea6 : ret 0x4504
0x000000000002fcf7 : ret 0x4508
0x00000000000ff6f7 : ret 0x4510
0x00000000000350fe : ret 0x4577
0x00000000000bf17f : ret 0x4589
0x000000000006c638 : ret 0x45f6
0x0000000000087e7a : ret 0x4601
0x00000000000533a3 : ret 0x4675
0x000000000010f2af : ret 0x46c7
0x00000000000fb4b6 : ret 0x46e9
0x000000000008a834 : ret 0x474
0x0000000000168be4 : ret 0x474c
0x0000000000021579 : ret 0x4801
0x00000000000d85d7 : ret 0x4802
0x000000000006c641 : ret 0x4803
0x0000000000026491 : ret 0x4804
0x00000000000f3f82 : ret 0x4805
0x00000000000f3e82 : ret 0x4806
0x00000000000e119d : ret 0x4807
0x000000000002f59f : ret 0x4808
0x000000000002b934 : ret 0x4809
0x000000000002e629 : ret 0x480a
0x00000000000f3b02 : ret 0x480b
0x0000000000050808 : ret 0x480f
0x00000000000450b6 : ret 0x4810
0x000000000002081e : ret 0x4811
0x000000000011d5c1 : ret 0x4812
0x00000000000f1fad : ret 0x4814
0x00000000000db8b5 : ret 0x481c
0x00000000000493b2 : ret 0x481e
0x00000000000493d6 : ret 0x4820
0x0000000000061032 : ret 0x4830
0x0000000000067ea3 : ret 0x4840
0x00000000000bfabc : ret 0x4864
0x00000000000ff325 : ret 0x4875
0x00000000000f8069 : ret 0x48b
0x0000000000083f97 : ret 0x48c3
0x000000000003761e : ret 0x48d
0x000000000016a3a6 : ret 0x48f
0x00000000000214c9 : ret 0x4901
0x0000000000032a8c : ret 0x4903
0x000000000009f7b4 : ret 0x4908
0x00000000000b2921 : ret 0x4909
0x0000000000143c52 : ret 0x4910
0x00000000000801e6 : ret 0x4920
0x00000000000ba829 : ret 0x4948
0x0000000000033244 : ret 0x4975
0x0000000000030c25 : ret 0x49e9
0x000000000000399f : ret 0x49ec
0x00000000000ceccc : ret 0x4a74
0x00000000000cd8ed : ret 0x4a8b
0x00000000000e8318 : ret 0x4ab8
0x0000000000121919 : ret 0x4ae9
0x000000000000fdb8 : ret 0x4b
0x00000000000ec24f : ret 0x4b01
0x00000000000e83c8 : ret 0x4bb8
0x0000000000025b81 : ret 0x4c01
0x000000000010bae7 : ret 0x4c02
0x00000000000a295a : ret 0x4c04
0x000000000002591e : ret 0x4c08
0x000000000010b6b2 : ret 0x4c0c
0x000000000007fb85 : ret 0x4c10
0x00000000000ce5d1 : ret 0x4c20
0x00000000000b37cd : ret 0x4c80
0x0000000000025a37 : ret 0x4c88
0x0000000000024edc : ret 0x4d01
0x00000000000f21c9 : ret 0x4d02
0x00000000000990c2 : ret 0x4d10
0x00000000000f7ce9 : ret 0x4d64
0x0000000000022da0 : ret 0x4d74
0x000000000000b900 : ret 0x4e
0x0000000000169e07 : ret 0x4e27
0x00000000001234ef : ret 0x4e75
0x0000000000073370 : ret 0x4e8b
0x0000000000034fa4 : ret 0x4f77
0x00000000001a42f0 : ret 0x503
0x0000000000150884 : ret 0x5173
0x00000000000577c9 : ret 0x51ff
0x0000000000027a1a : ret 0x52
0x000000000000321a : ret 0x52c0
0x000000000006ac02 : ret 0x5389
0x000000000006a601 : ret 0x538b
0x00000000000d9e28 : ret 0x5408
0x000000000007b571 : ret 0x5475
0x000000000002b1e9 : ret 0x5476
0x000000000008e629 : ret 0x547c
0x0000000000045446 : ret 0x5488
0x00000000000349a6 : ret 0x5489
0x0000000000106d56 : ret 0x54e8
0x0000000000007370 : ret 0x55
0x000000000016806c : ret 0x5508
0x00000000000311ff : ret 0x5525
0x0000000000002496 : ret 0x5576
0x00000000000cab9e : ret 0x5589
0x000000000009b8a7 : ret 0x5675
0x0000000000021ef8 : ret 0x56e9
0x00000000000c8aa9 : ret 0x574
0x00000000000ff132 : ret 0x577
0x0000000000149956 : ret 0x5776
0x000000000016a338 : ret 0x5803
0x000000000003620b : ret 0x589
0x0000000000167d40 : ret 0x591c
0x00000000000cecd1 : ret 0x5974
0x00000000001181aa : ret 0x5a
0x00000000000032f9 : ret 0x5a51
0x0000000000168aa7 : ret 0x5ae4
0x000000000001886c : ret 0x5b
0x00000000000d6db9 : ret 0x5ba
0x000000000000300f : ret 0x5bdb
0x00000000000030c9 : ret 0x5cbe
0x00000000000028b8 : ret 0x5d52
0x00000000000f91e6 : ret 0x5d5b
0x00000000000b2842 : ret 0x5e9
0x0000000000073719 : ret 0x6075
0x00000000000004b9 : ret 0x6080
0x0000000000156bb5 : ret 0x60e9
0x0000000000081fb4 : ret 0x6174
0x0000000000002769 : ret 0x617e
0x000000000016a7d2 : ret 0x62c1
0x00000000000533d3 : ret 0x6348
0x0000000000075562 : ret 0x6349
0x00000000000cd54b : ret 0x634c
0x00000000000cebf8 : ret 0x634d
0x00000000000aecba : ret 0x6375
0x00000000000841cf : ret 0x63be
0x000000000008e619 : ret 0x647c
0x00000000000a8075 : ret 0x65e8
0x000000000009e2c7 : ret 0x65e9
0x00000000000c97b4 : ret 0x6601
0x000000000008e6c9 : ret 0x6610
0x000000000010e0f4 : ret 0x662
0x000000000008e0d1 : ret 0x6620
0x000000000000286b : ret 0x6642
0x00000000000840a0 : ret 0x66c3
0x000000000008443a : ret 0x672
0x00000000000e4a86 : ret 0x674
0x0000000000149946 : ret 0x6776
0x0000000000167d5f : ret 0x67b2
0x000000000004ec02 : ret 0x68e8
0x000000000010da22 : ret 0x68e9
0x00000000000b05a1 : ret 0x6948
0x00000000001008ad : ret 0x6ae9
0x0000000000003da2 : ret 0x6bba
0x000000000009f761 : ret 0x6c74
0x0000000000047e45 : ret 0x6d7e
0x0000000000179683 : ret 0x6e1f
0x000000000008289c : ret 0x6ee8
0x000000000016a961 : ret 0x6f9
0x00000000000618cd : ret 0x6fe9
0x0000000000064409 : ret 0x70e9
0x0000000000079a31 : ret 0x7401
0x0000000000081305 : ret 0x7402
0x00000000000eb181 : ret 0x7404
0x0000000000070ba3 : ret 0x7408
0x000000000006bb21 : ret 0x7420
0x000000000004fc32 : ret 0x7450
0x00000000000b908c : ret 0x748d
0x00000000000bdd47 : ret 0x7500
0x0000000000094137 : ret 0x7501
0x000000000009413c : ret 0x7502
0x0000000000094141 : ret 0x7504
0x0000000000094146 : ret 0x7508
0x00000000001529ab : ret 0x7510
0x00000000001529b8 : ret 0x7520
0x00000000000cc4c3 : ret 0x7540
0x00000000000c988f : ret 0x7580
0x000000000014f772 : ret 0x7677
0x00000000000b597d : ret 0x76c
0x00000000000238e9 : ret 0x774
0x0000000000043e2a : ret 0x777
0x0000000000051293 : ret 0x77e9
0x0000000000045692 : ret 0x78e8
0x0000000000002f5c : ret 0x793b
0x0000000000067544 : ret 0x7973
0x00000000000c0ed9 : ret 0x7974
0x00000000000d6bcd : ret 0x7a80
0x00000000001077db : ret 0x7a8d
0x0000000000024a08 : ret 0x7b8
0x0000000000033795 : ret 0x7c7
0x00000000000e71e1 : ret 0x7c77
0x000000000004fdc9 : ret 0x7ce9
0x000000000007eeca : ret 0x7dd
0x000000000008e071 : ret 0x7e20
0x00000000001498ac : ret 0x7e40
0x00000000000e567f : ret 0x7e73
0x00000000000b00da : ret 0x7e74
0x00000000000d0d0c : ret 0x7ee8
0x000000000008b0fc : ret 0x7f10
0x00000000000c8cab : ret 0x7fe9
0x00000000000002e0 : ret 0x80
0x000000000008c2d9 : ret 0x8000
0x0000000000032acc : ret 0x8001
0x00000000000b2ac2 : ret 0x8010
0x00000000000e9202 : ret 0x8041
0x00000000000994fd : ret 0x8072
0x00000000001065f7 : ret 0x8080
0x0000000000003958 : ret 0x80fc
0x00000000000d1059 : ret 0x813b
0x0000000000116a81 : ret 0x8141
0x00000000000416d6 : ret 0x8148
0x0000000000156e6a : ret 0x8149
0x000000000003306f : ret 0x8166
0x00000000000e16bf : ret 0x8189
0x00000000000e0c89 : ret 0x81e8
0x000000000007b423 : ret 0x820f
0x0000000000074bf1 : ret 0x82eb
0x0000000000026f42 : ret 0x8301
0x000000000010cce1 : ret 0x8303
0x00000000000cea4a : ret 0x8304
0x000000000005cf59 : ret 0x8308
0x0000000000037fc6 : ret 0x830f
0x000000000008e541 : ret 0x8340
0x0000000000020afc : ret 0x8341
0x0000000000021abb : ret 0x8348
0x000000000003dbdb : ret 0x8349
0x000000000007dec7 : ret 0x837c
0x00000000001275b5 : ret 0x8380
0x000000000006d3b3 : ret 0x8389
0x000000000010bd13 : ret 0x8401
0x000000000003bc56 : ret 0x840f
0x00000000000e59fe : ret 0x8440
0x000000000009e22e : ret 0x8444
0x0000000000027cf7 : ret 0x848b
0x00000000000d45ad : ret 0x84c6
0x00000000000533c5 : ret 0x8504
0x0000000000021edc : ret 0x850f
0x0000000000149e31 : ret 0x8520
0x00000000000411e1 : ret 0x8539
0x0000000000027ae1 : ret 0x8545
0x000000000002df81 : ret 0x8548
0x0000000000042f57 : ret 0x854d
0x000000000004c150 : ret 0x8589
0x0000000000050930 : ret 0x858b
0x0000000000024641 : ret 0x860f
0x0000000000154ba8 : ret 0x86e9
0x000000000007fa92 : ret 0x870
0x0000000000034356 : ret 0x870f
0x000000000016767e : ret 0x871e
0x000000000003d066 : ret 0x875
0x000000000008e175 : ret 0x876
0x00000000000832ba : ret 0x8801
0x0000000000115456 : ret 0x8802
0x00000000000887a9 : ret 0x880f
0x000000000004d5e7 : ret 0x8844
0x00000000000025f4 : ret 0x88ad
0x0000000000024cf2 : ret 0x8901
0x000000000005ad8c : ret 0x8908
0x00000000000f3165 : ret 0x8940
0x00000000000492ab : ret 0x8941
0x000000000004bb81 : ret 0x8944
0x0000000000087a42 : ret 0x8945
0x000000000002388c : ret 0x8948
0x0000000000021a48 : ret 0x8949
0x000000000002b5bc : ret 0x894c
0x000000000002332f : ret 0x894d
0x00000000000446eb : ret 0x894e
0x0000000000037de0 : ret 0x8966
0x0000000000002597 : ret 0x8a4c
0x0000000000107e39 : ret 0x8aeb
0x000000000009f697 : ret 0x8b04
0x000000000002cade : ret 0x8b05
0x00000000000ce5e8 : ret 0x8b10
0x0000000000169eae : ret 0x8b36
0x000000000002b9d3 : ret 0x8b41
0x0000000000028da9 : ret 0x8b48
0x0000000000071fae : ret 0x8b49
0x000000000004466e : ret 0x8b4a
0x000000000003ab3f : ret 0x8b4c
0x00000000000d8193 : ret 0x8b4d
0x000000000006c3d8 : ret 0x8b64
0x00000000000c3446 : ret 0x8ba
0x00000000001575db : ret 0x8be9
0x00000000000b49eb : ret 0x8c0f
0x000000000000385a : ret 0x8cba
0x00000000000ecea2 : ret 0x8d0
0x000000000008971b : ret 0x8d01
0x0000000000069b07 : ret 0x8d04
0x0000000000050607 : ret 0x8d0f
0x000000000004c5de : ret 0x8d41
0x0000000000020fb8 : ret 0x8d48
0x0000000000024cd2 : ret 0x8d49
0x0000000000043c18 : ret 0x8d4a
0x0000000000084ce0 : ret 0x8d4b
0x0000000000043ab5 : ret 0x8d4c
0x0000000000096192 : ret 0x8d4d
0x000000000004efe7 : ret 0x8d4e
0x0000000000123b98 : ret 0x8d8b
0x000000000011744a : ret 0x8e
0x0000000000027e20 : ret 0x8e0f
0x000000000006529a : ret 0x8e5
0x00000000001564d7 : ret 0x8e9
0x00000000000dd52f : ret 0x8f0f
0x000000000006f3a8 : ret 0x8feb
0x00000000001010c5 : ret 0x901
0x000000000003812d : ret 0x9066
0x000000000002c9ad : ret 0x90c3
0x0000000000124d45 : ret 0x90f3
0x000000000006b29a : ret 0x919
0x00000000000760cc : ret 0x91eb
0x000000000019b309 : ret 0x92
0x0000000000082268 : ret 0x93be
0x00000000000848e8 : ret 0x940f
0x000000000003a922 : ret 0x941
0x0000000000033b63 : ret 0x948
0x00000000001564ce : ret 0x949
0x00000000000339dc : ret 0x94c
0x00000000000fc201 : ret 0x952b
0x000000000002f3f7 : ret 0x953d
0x0000000000168cd3 : ret 0x9576
0x000000000006f539 : ret 0x95eb
0x00000000000e3f5f : ret 0x970f
0x00000000000f5455 : ret 0x9848
0x000000000009b8f5 : ret 0x9874
0x000000000003e7c8 : ret 0x9a74
0x0000000000122d97 : ret 0x9ae9
0x00000000000da89e : ret 0x9be9
0x00000000000bbc51 : ret 0x9ce9
0x000000000010c118 : ret 0x9ceb
0x00000000000994e0 : ret 0x9d72
0x00000000000a1548 : ret 0x9e74
0x00000000000b0a58 : ret 0x9eb
0x00000000000f76ec : ret 0x9ee8
0x0000000000040931 : ret 0x9f74
0x00000000000d8c8c : ret 0x9fe9
0x00000000001618e0 : ret 0xa
0x0000000000192eda : ret 0xa01
0x000000000004f53a : ret 0xa0e8
0x00000000000870da : ret 0xa0e9
0x0000000000039638 : ret 0xa274
0x00000000000d3b57 : ret 0xa3e8
0x00000000001689c3 : ret 0xa514
0x0000000000113618 : ret 0xa578
0x0000000000060f05 : ret 0xa5e8
0x0000000000047010 : ret 0xa67f
0x000000000007e035 : ret 0xa74
0x00000000000c645f : ret 0xa76
0x000000000015613b : ret 0xa7eb
0x0000000000033e40 : ret 0xaae8
0x00000000000c6b49 : ret 0xabe
0x0000000000168e47 : ret 0xac65
0x0000000000169804 : ret 0xacfc
0x00000000000cd30c : ret 0xaeb
0x000000000011528c : ret 0xaee8
0x000000000009e2b2 : ret 0xaf0f
0x0000000000081721 : ret 0xafe9
0x00000000000060b9 : ret 0xb
0x00000000000621c3 : ret 0xb373
0x00000000000f7c18 : ret 0xb575
0x000000000002e071 : ret 0xb60f
0x0000000000066754 : ret 0xb6e8
0x0000000000116cef : ret 0xb70f
0x00000000000e453d : ret 0xb74
0x0000000000075c3c : ret 0xb76
0x00000000000b5d8e : ret 0xb77d
0x00000000000a5723 : ret 0xb7e8
0x0000000000033593 : ret 0xb8
0x00000000000331b1 : ret 0xb848
0x000000000005ec32 : ret 0xb908
0x000000000002a937 : ret 0xb941
0x0000000000168d0e : ret 0xb9b9
0x00000000001589ba : ret 0xba48
0x0000000000003215 : ret 0xba88
0x00000000000bc5e3 : ret 0xbb
0x000000000007027d : ret 0xbb7e
0x0000000000043f52 : ret 0xbc41
0x00000000000e503a : ret 0xbceb
0x00000000000024bc : ret 0xbd07
0x00000000001119af : ret 0xbd74
0x00000000000619ea : ret 0xbd8b
0x000000000005eee6 : ret 0xbe08
0x0000000000168a64 : ret 0xbe57
0x00000000001093ca : ret 0xbe9
0x000000000011527c : ret 0xbee8
0x0000000000154fd8 : ret 0xbee9
0x000000000005fcd5 : ret 0xbf08
0x00000000000ad433 : ret 0xc
0x000000000008c199 : ret 0xc000
0x000000000003e2d5 : ret 0xc001
0x000000000003e28a : ret 0xc002
0x000000000002e813 : ret 0xc031
0x0000000000198c44 : ret 0xc044
0x000000000011364a : ret 0xc069
0x000000000008508a : ret 0xc083
0x00000000000ea12c : ret 0xc084
0x000000000003b0b2 : ret 0xc085
0x000000000004550b : ret 0xc129
0x00000000000585c8 : ret 0xc141
0x0000000000033427 : ret 0xc148
0x0000000000024cdd : ret 0xc149
0x000000000003464d : ret 0xc189
0x0000000000002e6e : ret 0xc1bb
0x00000000000535c9 : ret 0xc1e8
0x0000000000157a08 : ret 0xc1e9
0x00000000000a1be1 : ret 0xc220
0x0000000000042e42 : ret 0xc221
0x0000000000037624 : ret 0xc229
0x00000000000377c0 : ret 0xc269
0x00000000000b7445 : ret 0xc26b
0x00000000000804eb : ret 0xc275
0x0000000000051e8e : ret 0xc283
0x0000000000150754 : ret 0xc2b2
0x0000000000037168 : ret 0xc35b
0x00000000000804ed : ret 0xc3f3
0x00000000000e4af0 : ret 0xc3f6
0x00000000001668c2 : ret 0xc4c3
0x0000000000168618 : ret 0xc4ff
0x0000000000149911 : ret 0xc540
0x00000000000d4b68 : ret 0xc579
0x00000000000e9455 : ret 0xc6
0x00000000000c04c5 : ret 0xc610
0x00000000000f753a : ret 0xc641
0x00000000000d042b : ret 0xc683
0x0000000000036044 : ret 0xc6e8
0x00000000001169c6 : ret 0xc707
0x0000000000058229 : ret 0xc71e
0x00000000000e4a7a : ret 0xc72
0x000000000010f077 : ret 0xc74
0x000000000010bd1b : ret 0xc741
0x00000000000357e7 : ret 0xc748
0x00000000000aed11 : ret 0xc75
0x00000000000cec4b : ret 0xc76
0x00000000000ae613 : ret 0xc7e8
0x000000000003af76 : ret 0xc801
0x00000000000881d5 : ret 0xc829
0x00000000000dc048 : ret 0xc889
0x00000000000a8224 : ret 0xc91
0x0000000000098891 : ret 0xc9ff
0x00000000000ab302 : ret 0xca09
0x00000000001495ff : ret 0xca39
0x00000000000ae34a : ret 0xca7
0x00000000000da865 : ret 0xca83
0x0000000000081e91 : ret 0xcb8
0x00000000001680aa : ret 0xcca7
0x000000000016a18d : ret 0xcd11
0x00000000000994b0 : ret 0xcd72
0x00000000000eb8bc : ret 0xcdbb
0x000000000010af92 : ret 0xcde9
0x00000000000308b1 : ret 0xce80
0x0000000000149e3d : ret 0xce89
0x000000000007399c : ret 0xceeb
0x0000000000161ce0 : ret 0xd
0x00000000000c56eb : ret 0xd008
0x00000000000d3480 : ret 0xd009
0x00000000000b00ab : ret 0xd021
0x00000000000c0cf2 : ret 0xd029
0x0000000000042714 : ret 0xd084
0x000000000003120e : ret 0xd089
0x00000000000f7e84 : ret 0xd0f7
0x00000000000da561 : ret 0xd101
0x00000000000d61cf : ret 0xd108
0x00000000000b8fa5 : ret 0xd129
0x00000000000b0067 : ret 0xd138
0x00000000000cb923 : ret 0xd141
0x0000000000083722 : ret 0xd148
0x0000000000032555 : ret 0xd231
0x00000000000210ad : ret 0xd284
0x0000000000038238 : ret 0xd2e8
0x000000000008a6d0 : ret 0xd308
0x0000000000040130 : ret 0xd329
0x00000000000b0271 : ret 0xd338
0x0000000000154c56 : ret 0xd348
0x00000000000d3e7e : ret 0xd373
0x000000000002e4a9 : ret 0xd3e9
0x00000000000ab380 : ret 0xd472
0x00000000000d8c04 : ret 0xd4e9
0x0000000000034f12 : ret 0xd521
0x00000000000d8b33 : ret 0xd539
0x000000000000089a : ret 0xd5a4
0x000000000005d839 : ret 0xd629
0x00000000000c88ea : ret 0xd639
0x000000000005daec : ret 0xd729
0x000000000011b399 : ret 0xd739
0x000000000006e1f0 : ret 0xd74
0x00000000000b644c : ret 0xd801
0x000000000009e2b7 : ret 0xd889
0x0000000000169c25 : ret 0xd8f
0x00000000000a305f : ret 0xd929
0x00000000000fcec4 : ret 0xd975
0x0000000000071c69 : ret 0xd9e9
0x0000000000074096 : ret 0xd9eb
0x0000000000053cfa : ret 0xda29
0x00000000000fcf83 : ret 0xda75
0x0000000000032e91 : ret 0xdaf7
0x00000000000dd4ba : ret 0xdb31
0x0000000000025431 : ret 0xdb85
0x00000000000abde1 : ret 0xdc00
0x0000000000169d06 : ret 0xdcd9
0x0000000000024678 : ret 0xdd77
0x0000000000168c82 : ret 0xde5d
0x00000000000724b5 : ret 0xde74
0x000000000011fc27 : ret 0xde77
0x00000000000416ad : ret 0xde8
0x0000000000167a11 : ret 0xde9e
0x00000000000cd334 : ret 0xdeeb
0x00000000000b01ba : ret 0xdf89
0x0000000000073f21 : ret 0xdfeb
0x000000000008c059 : ret 0xe000
0x0000000000152969 : ret 0xe074
0x000000000010b6d6 : ret 0xe075
0x00000000000ec4d9 : ret 0xe083
0x0000000000190a01 : ret 0xe0a
0x000000000011538a : ret 0xe0ff
0x00000000000492d9 : ret 0xe183
0x00000000000e0c29 : ret 0xe1e8
0x00000000000f8174 : ret 0xe1ff
0x0000000000020e68 : ret 0xe281
0x0000000000027030 : ret 0xe283
0x0000000000038428 : ret 0xe2e8
0x0000000000021722 : ret 0xe2ff
0x00000000000d0132 : ret 0xe375
0x00000000000c99c6 : ret 0xe37c
0x00000000000028a3 : ret 0xe3d
0x000000000002e4db : ret 0xe4e9
0x00000000000868c0 : ret 0xe575
0x000000000004ee39 : ret 0xe680
0x000000000008ae54 : ret 0xe6e8
0x0000000000169e26 : ret 0xe71f
0x00000000000d4d87 : ret 0xe773
0x00000000000ced16 : ret 0xe775
0x00000000000c6306 : ret 0xe777
0x0000000000158bdc : ret 0xe781
0x0000000000020d1e : ret 0xe783
0x000000000006d222 : ret 0xe8
0x0000000000031165 : ret 0xe801
0x00000000001098ce : ret 0xe841
0x00000000000fdfc5 : ret 0xe875
0x000000000005052d : ret 0xe87f
0x00000000000b08b3 : ret 0xe883
0x000000000007f4e2 : ret 0xe889
0x00000000000c0be2 : ret 0xe8b8
0x00000000000b00d5 : ret 0xe8c1
0x000000000002e4bd : ret 0xe901
0x000000000002e612 : ret 0xe902
0x00000000000af9c1 : ret 0xe907
0x0000000000098926 : ret 0xe908
0x0000000000145c36 : ret 0xe910
0x0000000000049879 : ret 0xe920
0x00000000000a5511 : ret 0xe929
0x0000000000168187 : ret 0xe970
0x000000000007ddc4 : ret 0xe972
0x000000000003957c : ret 0xe974
0x0000000000051a8c : ret 0xe975
0x000000000002bc51 : ret 0xe9e8
0x0000000000041a2b : ret 0xea75
0x000000000009deca : ret 0xea81
0x000000000004eb47 : ret 0xeac0
0x00000000000c8844 : ret 0xeac1
0x00000000000aabbd : ret 0xeb01
0x000000000002fce1 : ret 0xeb04
0x0000000000143c76 : ret 0xeb10
0x000000000007e2d2 : ret 0xeb72
0x00000000000f6cfa : ret 0xeb73
0x000000000008a3e1 : ret 0xeb77
0x000000000016a938 : ret 0xec2
0x00000000000aa6bb : ret 0xec77
0x00000000000cd471 : ret 0xec7f
0x0000000000068d42 : ret 0xede9
0x00000000000232af : ret 0xee75
0x00000000000f1676 : ret 0xee9
0x00000000000f93a4 : ret 0xeeb
0x000000000016b600 : ret 0xef07
0x000000000016a5da : ret 0xef32
0x000000000004456e : ret 0xef75
0x0000000000088f8d : ret 0xef77
0x00000000000c5df1 : ret 0xef7c
0x000000000012aa8e : ret 0xf
0x000000000008bf19 : ret 0xf000
0x0000000000031cb1 : ret 0xf001
0x0000000000025a2f : ret 0xf01
0x00000000000e40a2 : ret 0xf02
0x0000000000048a23 : ret 0xf039
0x000000000002b5ed : ret 0xf04
0x000000000011ade2 : ret 0xf059
0x000000000003531d : ret 0xf075
0x0000000000026475 : ret 0xf08
0x00000000000b342e : ret 0xf089
0x0000000000064e16 : ret 0xf0a
0x000000000011298a : ret 0xf0dc
0x000000000007d4e0 : ret 0xf0f
0x0000000000056671 : ret 0xf10
0x00000000000aa80c : ret 0xf175
0x0000000000128914 : ret 0xf177
0x000000000008e71c : ret 0xf188
0x00000000000535f9 : ret 0xf1e8
0x000000000006ce6c : ret 0xf20
0x0000000000083c49 : ret 0xf201
0x00000000000fffda : ret 0xf212
0x000000000010b0b0 : ret 0xf221
0x00000000000f8de2 : ret 0xf279
0x000000000010725a : ret 0xf312
0x00000000000ef11a : ret 0xf315
0x00000000000ed81a : ret 0xf32e
0x00000000001129ea : ret 0xf375
0x0000000000054e6a : ret 0xf40
0x000000000003928a : ret 0xf41
0x00000000000a68e2 : ret 0xf44
0x000000000010cd94 : ret 0xf45
0x00000000000d9dda : ret 0xf469
0x0000000000039d10 : ret 0xf48
0x00000000000d751a : ret 0xf490
0x00000000000d73da : ret 0xf493
0x0000000000024cce : ret 0xf4c
0x00000000000cd006 : ret 0xf53
0x00000000000f648a : ret 0xf5d9
0x00000000000802ba : ret 0xf5e
0x0000000000068d3a : ret 0xf5e9
0x00000000000b4cad : ret 0xf601
0x00000000000bb76f : ret 0xf631
0x000000000004ebbd : ret 0xf66
0x00000000000e9ae9 : ret 0xf683
0x00000000000267e3 : ret 0xf685
0x00000000000b800a : ret 0xf686
0x0000000000084ebd : ret 0xf6c3
0x00000000000b237a : ret 0xf6e2
0x0000000000157402 : ret 0xf6e9
0x00000000000c49aa : ret 0xf718
0x0000000000042f45 : ret 0xf741
0x00000000000338f1 : ret 0xf748
0x0000000000043e14 : ret 0xf749
0x00000000000f619a : ret 0xf756
0x00000000000b5d1a : ret 0xf76f
0x00000000000f7e12 : ret 0xf789
0x00000000000fb968 : ret 0xf7e
0x0000000000025deb : ret 0xf800
0x00000000000eceaa : ret 0xf81d
0x00000000000036b7 : ret 0xf84d
0x00000000001678f0 : ret 0xf869
0x00000000000e9b12 : ret 0xf88
0x00000000000a1e78 : ret 0xf883
0x00000000000b8ffc : ret 0xf889
0x000000000014d356 : ret 0xf8c5
0x0000000000050f33 : ret 0xf8e9
0x000000000003a7b5 : ret 0xf929
0x000000000008ae0a : ret 0xf958
0x000000000010ecd0 : ret 0xf980
0x00000000000a6d1a : ret 0xf9d2
0x00000000001002ea : ret 0xf9fc
0x00000000000b6da7 : ret 0xfa29
0x000000000003aca5 : ret 0xfa81
0x00000000000293f9 : ret 0xfa83
0x0000000000031222 : ret 0xfac1
0x00000000000c88ac : ret 0xfad1
0x0000000000110c5f : ret 0xfae9
0x00000000000bba9a : ret 0xfafd
0x00000000000694da : ret 0xfb7d
0x00000000000d3401 : ret 0xfb83
0x000000000017aa10 : ret 0xfb84
0x000000000017aa08 : ret 0xfb85
0x000000000017aa00 : ret 0xfb86
0x000000000017a9f8 : ret 0xfb87
0x000000000017a9f0 : ret 0xfb88
0x000000000017a818 : ret 0xfb8d
0x000000000017af20 : ret 0xfba8
0x000000000017af18 : ret 0xfba9
0x000000000017ad10 : ret 0xfbb4
0x000000000007b535 : ret 0xfbff
0x000000000008bc99 : ret 0xfc00
0x000000000003ba13 : ret 0xfc01
0x000000000003b9c2 : ret 0xfc02
0x00000000000ea581 : ret 0xfc07
0x0000000000083c69 : ret 0xfc3
0x00000000000580e2 : ret 0xfc86
0x0000000000117a5a : ret 0xfcb1
0x00000000000e07be : ret 0xfce8
0x000000000009e190 : ret 0xfd83
0x000000000010776a : ret 0xfda6
0x000000000008bb59 : ret 0xfe00
0x000000000010cfaa : ret 0xfe3f
0x00000000000ba50a : ret 0xfe53
0x000000000009e1b1 : ret 0xfe83
0x00000000000325e2 : ret 0xfee1
0x000000000007b525 : ret 0xfeff
0x000000000008ba19 : ret 0xff00
0x000000000004086f : ret 0xff2
0x00000000000a954c : ret 0xff25
0x000000000014a0a9 : ret 0xff2d
0x000000000008c47a : ret 0xff3
0x0000000000020c1d : ret 0xff31
0x000000000009b8a4 : ret 0xff48
0x00000000000d46ba : ret 0xff5f
0x000000000008b8d9 : ret 0xff80
0x0000000000039133 : ret 0xff81
0x00000000000390e2 : ret 0xff82
0x0000000000154d97 : ret 0xff85
0x00000000000724ae : ret 0xffb8
0x0000000000066644 : ret 0xffba
0x000000000003e1b9 : ret 0xffbf
0x000000000008b799 : ret 0xffc0
0x0000000000119e9a : ret 0xffc5
0x0000000000022a4a : ret 0xffdc
0x000000000007ef01 : ret 0xffdf
0x000000000008b659 : ret 0xffe0
0x0000000000063f11 : ret 0xffe3
0x000000000004dc4a : ret 0xffe6
0x0000000000067e16 : ret 0xffe9
0x000000000017b445 : ret 0xffea
0x000000000017bbcd : ret 0xffeb
0x00000000000dfce5 : ret 0xffed
0x000000000003ff5e : ret 0xffee
0x00000000000305d7 : ret 0xffef
0x000000000008b519 : ret 0xfff0
0x00000000001044b9 : ret 0xfff1
0x00000000000c7b4a : ret 0xfff2
0x00000000000301d7 : ret 0xfff3
0x00000000000a4fcb : ret 0xfff4
0x00000000000b435d : ret 0xfff6
0x00000000001a1421 : ret 0xfff7
0x000000000008b3d9 : ret 0xfff8
0x00000000000a7d49 : ret 0xfff9
0x0000000000074ff2 : ret 0xfffa
0x00000000000642ab : ret 0xfffb
0x0000000000032ad6 : ret 0xfffc
0x0000000000029c48 : ret 0xfffd
0x0000000000036223 : ret 0xfffe
0x000000000002c9a5 : ret 0xffff
0x0000000000000e08 : ret 1
0x0000000000000fd8 : ret 2
0x000000000000119c : ret 3
0x0000000000025401 : ret 4
0x00000000000998ca : ret 5
0x00000000000016d4 : ret 6
0x0000000000007af0 : ret 7
0x0000000000001a2c : ret 8
0x000000000004bd8a : ret 9
0x0000000000000766 : retf
0x0000000000113c73 : retf -0x10
0x000000000016b8f0 : retf -0x107e
0x00000000000707d6 : retf -0x108b
0x000000000016b920 : retf -0x1091
0x00000000000a5980 : retf -0x11
0x00000000000f7e88 : retf -0x113f
0x00000000000bd91f : retf -0x118b
0x00000000000325da : retf -0x11f
0x00000000000d94a8 : retf -0x128b
0x00000000000d52c9 : retf -0x138c
0x000000000014a147 : retf -0x13b
0x00000000000534fc : retf -0x1401
0x000000000016a641 : retf -0x1441
0x0000000000167e4d : retf -0x147d
0x000000000017bc75 : retf -0x15
0x00000000000b575b : retf -0x1509
0x0000000000085db0 : retf -0x1518
0x000000000008b071 : retf -0x152d
0x0000000000127b8b : retf -0x1540
0x0000000000169d2c : retf -0x156f
0x00000000000ff5c3 : retf -0x158b
0x000000000005910b : retf -0x16
0x000000000006e0f9 : retf -0x1601
0x00000000000035d0 : retf -0x1612
0x00000000000f08d2 : retf -0x1648
0x00000000000ff50c : retf -0x168b
0x0000000000154bcb : retf -0x17d
0x000000000005f7ea : retf -0x18
0x00000000001686e6 : retf -0x18d2
0x0000000000049a77 : retf -0x1989
0x00000000000b3c4f : retf -0x198b
0x00000000000cf008 : retf -0x1a8b
0x0000000000168d7c : retf -0x1b6a
0x000000000008a899 : retf -0x1b8b
0x00000000000b6285 : retf -0x1d01
0x0000000000026e74 : retf -0x1d7d
0x0000000000033740 : retf -0x1d7f
0x000000000004b312 : retf -0x1e7
0x00000000000cc032 : retf -0x1e7d
0x000000000014e333 : retf -0x1e8b
0x000000000016879e : retf -0x1eae
0x0000000000025f7c : retf -0x1f7d
0x0000000000168cf3 : retf -0x2081
0x00000000000315ae : retf -0x208b
0x000000000016a6c3 : retf -0x21b1
0x000000000006647c : retf -0x22
0x0000000000089559 : retf -0x238e
0x000000000014d716 : retf -0x23b
0x00000000001065d2 : retf -0x241
0x0000000000022a12 : retf -0x25
0x00000000000a9481 : retf -0x2618
0x0000000000152886 : retf -0x268b
0x00000000000eb362 : retf -0x2748
0x0000000000154df5 : retf -0x27d
0x0000000000077d18 : retf -0x27f
0x00000000001153ee : retf -0x2877
0x00000000000c8815 : retf -0x28c7
0x00000000000b5f88 : retf -0x2a
0x00000000000d74b7 : retf -0x2b1
0x000000000003fc50 : retf -0x2cd7
0x0000000000119779 : retf -0x2cff
0x000000000002f47a : retf -0x2d77
0x00000000000d087f : retf -0x2d7b
0x00000000000ab304 : retf -0x2d7c
0x00000000000ba17d : retf -0x2d95
0x000000000009e019 : retf -0x2dcf
0x00000000000869b9 : retf -0x2e18
0x0000000000168a26 : retf -0x2e35
0x000000000004fc02 : retf -0x2e77
0x00000000000881c8 : retf -0x2e8c
0x0000000000068e20 : retf -0x2eb8
0x0000000000032e9f : retf -0x2f09
0x0000000000002d12 : retf -0x2fb1
0x0000000000049828 : retf -0x2fc7
0x0000000000058a3d : retf -0x2fd7
0x0000000000064d92 : retf -0x30
0x000000000004eaf4 : retf -0x30c7
0x00000000000ede42 : retf -0x32e
0x000000000002f46e : retf -0x32f1
0x00000000001668ca : retf -0x3335
0x00000000000cc272 : retf -0x35
0x00000000001502f4 : retf -0x354e
0x00000000000da590 : retf -0x35cf
0x00000000000ebc51 : retf -0x3627
0x000000000014d843 : retf -0x367b
0x0000000000032df3 : retf -0x36f1
0x0000000000063f33 : retf -0x3777
0x000000000011a5ce : retf -0x37f1
0x0000000000020cc8 : retf -0x3801
0x0000000000034133 : retf -0x38b8
0x000000000011ff31 : retf -0x398b
0x00000000000eb8f3 : retf -0x3c7d
0x00000000000b06fd : retf -0x3d97
0x00000000000ee142 : retf -0x3e48
0x00000000000939ae : retf -0x3eb7
0x00000000000333c2 : retf -0x3eb8
0x00000000000585ce : retf -0x3ebf
0x0000000000169c3d : retf -0x3f02
0x00000000000ee262 : retf -0x3f48
0x00000000000e6ee8 : retf -0x3f7b
0x0000000000088855 : retf -0x3f7d
0x0000000000077ceb : retf -0x3fcf
0x00000000000ee202 : retf -0x4048
0x0000000000169fbd : retf -0x40b5
0x0000000000003b0e : retf -0x40eb
0x00000000000ee1d2 : retf -0x4148
0x0000000000071b6a : retf -0x418b
0x0000000000001f71 : retf -0x41cb
0x00000000000ee2f2 : retf -0x4248
0x00000000000ee352 : retf -0x4348
0x00000000000542ca : retf -0x4415
0x0000000000169f73 : retf -0x4466
0x000000000017adfc : retf -0x44a
0x000000000017afe8 : retf -0x451
0x00000000000027a6 : retf -0x4567
0x000000000015805c : retf -0x45bf
0x0000000000048314 : retf -0x46b8
0x00000000000853cf : retf -0x46bf
0x000000000017a904 : retf -0x471
0x0000000000125032 : retf -0x4948
0x000000000008e9f2 : retf -0x49f1
0x0000000000124fe2 : retf -0x4a48
0x0000000000168c69 : retf -0x4ae6
0x00000000000f0b72 : retf -0x4c48
0x00000000000f0b42 : retf -0x4d48
0x00000000000f0932 : retf -0x5048
0x00000000000719da : retf -0x513
0x0000000000003944 : retf -0x513c
0x0000000000128dd2 : retf -0x517
0x000000000016a46e : retf -0x51ce
0x00000000000efae2 : retf -0x522
0x00000000000d9273 : retf -0x52d
0x000000000004ef5d : retf -0x53f
0x000000000005fb42 : retf -0x54
0x0000000000169f1c : retf -0x54f3
0x00000000000faf06 : retf -0x5780
0x0000000000127541 : retf -0x57d
0x00000000001153f8 : retf -0x57f
0x00000000000f0a52 : retf -0x5a48
0x00000000000eef22 : retf -0x5bc
0x0000000000003429 : retf -0x5c0a
0x0000000000169e4b : retf -0x5d02
0x0000000000082931 : retf -0x5e15
0x000000000016a865 : retf -0x5fe0
0x00000000001003a2 : retf -0x603
0x00000000000b00d2 : retf -0x61f1
0x00000000000f0b12 : retf -0x6248
0x0000000000169f5a : retf -0x6283
0x000000000014a40f : retf -0x63b
0x0000000000048b5a : retf -0x6415
0x0000000000169beb : retf -0x6620
0x00000000000de9b5 : retf -0x680
0x00000000000a7af7 : retf -0x68c3
0x0000000000105270 : retf -0x6a15
0x0000000000001e70 : retf -0x6a7e
0x0000000000158c9e : retf -0x6af1
0x000000000016984e : retf -0x6c5e
0x0000000000001be8 : retf -0x6c6a
0x00000000000d8582 : retf -0x6d7
0x0000000000001d4d : retf -0x6dda
0x00000000001496bc : retf -0x6f8b
0x000000000008dfdd : retf -0x6f9a
0x0000000000149601 : retf -0x70f1
0x0000000000025f6e : retf -0x71f1
0x000000000004ce10 : retf -0x7277
0x000000000007b37e : retf -0x72b4
0x0000000000144804 : retf -0x72b6
0x000000000004022c : retf -0x72b7
0x0000000000034071 : retf -0x72b8
0x00000000001136d6 : retf -0x73f
0x000000000012def9 : retf -0x74b4
0x0000000000035ef5 : retf -0x74b7
0x0000000000033873 : retf -0x74b8
0x00000000000876cb : retf -0x74ba
0x0000000000023dea : retf -0x74bf
0x0000000000128214 : retf -0x74f8
0x0000000000003e1b : retf -0x7536
0x0000000000002490 : retf -0x75c1
0x00000000000e18d8 : retf -0x7601
0x00000000000243a9 : retf -0x76b3
0x0000000000029d10 : retf -0x76b4
0x000000000002ee4f : retf -0x76b7
0x000000000002e5c1 : retf -0x76b8
0x0000000000020d09 : retf -0x76bb
0x000000000002fe76 : retf -0x76bc
0x000000000002fe2c : retf -0x76bf
0x000000000007274f : retf -0x76e0
0x0000000000081ac8 : retf -0x76fe
0x00000000000ca935 : retf -0x77bf
0x00000000000d14e5 : retf -0x77c0
0x0000000000083bbf : retf -0x77d
0x00000000000af6b0 : retf -0x77f1
0x000000000000359b : retf -0x786e
0x000000000007b4a7 : retf -0x78f1
0x000000000008def9 : retf -0x79f1
0x00000000000945cb : retf -0x7ab8
0x000000000002da7a : retf -0x7abb
0x0000000000048522 : retf -0x7af1
0x0000000000021a7e : retf -0x7af8
0x00000000001577cf : retf -0x7b
0x0000000000168ef0 : retf -0x7b7f
0x00000000000c24c8 : retf -0x7bf0
0x0000000000063be4 : retf -0x7bf1
0x00000000000962a5 : retf -0x7cb7
0x0000000000021f9b : retf -0x7cb8
0x0000000000026d37 : retf -0x7cbf
0x00000000000dc54b : retf -0x7cf1
0x0000000000039ccf : retf -0x7df1
0x00000000000d2f6f : retf -0x7e17
0x00000000000b2cd7 : retf -0x7e9a
0x00000000001328da : retf -0x7eb8
0x00000000000b56bf : retf -0x7ebf
0x0000000000109391 : retf -0x7efe
0x000000000014959c : retf -0x7f8b
0x00000000000007c7 : retf -0x7ffd
0x00000000000da867 : retf -0x7ffe
0x0000000000051a6d : retf -0x8b8
0x00000000000b5b12 : retf -0x955
0x00000000000f96a7 : retf -0x9bf
0x000000000010bdd6 : retf -0x9cf
0x0000000000142b52 : retf -0xa
0x00000000000c9fda : retf -0xa99
0x000000000016de58 : retf -0xac3
0x000000000016de94 : retf -0xac5
0x00000000000da612 : retf -0xada
0x00000000000a723c : retf -0xb
0x000000000016d96c : retf -0xb45
0x0000000000120422 : retf -0xb57
0x00000000000300cf : retf -0xc
0x000000000015846b : retf -0xd
0x00000000000d6002 : retf -0xd6
0x00000000000f93bb : retf -0xd8b
0x00000000001245a2 : retf -0xdff
0x000000000010bf92 : retf -0xe
0x000000000010d8e9 : retf -0xe18
0x000000000014a33d : retf -0xe3b
0x000000000010dcda : retf -0xed6
0x000000000010dfda : retf -0xed9
0x000000000011b3e2 : retf -0xede
0x00000000000303cf : retf -0xf
0x00000000000c7ac1 : retf -0xf77
0x00000000000c72d3 : retf -0xf8b
0x0000000000023bdf : retf -1
0x0000000000035959 : retf -2
0x0000000000028afe : retf -3
0x00000000000272c3 : retf -4
0x0000000000028d2f : retf -5
0x00000000000719ed : retf -6
0x0000000000055891 : retf -7
0x00000000000a0296 : retf -8
0x00000000000fe3e5 : retf -9
0x0000000000004cc8 : retf 0
0x0000000000006788 : retf 0x10
0x00000000001151f4 : retf 0x1089
0x0000000000003b2a : retf 0x10bf
0x000000000000f6e9 : retf 0x11
0x0000000000043a2d : retf 0x114d
0x0000000000059fb9 : retf 0x1174
0x00000000000e0bfb : retf 0x11b8
0x000000000004c432 : retf 0x11ea
0x000000000004b3b9 : retf 0x1260
0x000000000003bed2 : retf 0x12b2
0x00000000000e0c5b : retf 0x12b8
0x00000000000028e4 : retf 0x12c5
0x000000000003ce5e : retf 0x13
0x000000000002a0f2 : retf 0x1301
0x000000000009b8ea : retf 0x1373
0x000000000008a7e0 : retf 0x1374
0x000000000003b65a : retf 0x1399
0x000000000003e492 : retf 0x13b2
0x0000000000028188 : retf 0x14
0x00000000000861d4 : retf 0x148
0x000000000002414c : retf 0x1489
0x0000000000025a02 : retf 0x149
0x00000000000857b1 : retf 0x14c
0x0000000000050184 : retf 0x14eb
0x0000000000087df8 : retf 0x1574
0x000000000008c742 : retf 0x16
0x000000000011608c : retf 0x1689
0x00000000000d1d7d : retf 0x16eb
0x000000000001ca18 : retf 0x1718
0x0000000000002db2 : retf 0x172
0x0000000000029806 : retf 0x1772
0x00000000000028da : retf 0x182c
0x000000000005eb21 : retf 0x19
0x000000000004516d : retf 0x194d
0x0000000000089c2d : retf 0x1975
0x00000000000f0a82 : retf 0x19b8
0x00000000000b3c35 : retf 0x1a74
0x0000000000011468 : retf 0x1b
0x00000000000d6513 : retf 0x1b9
0x00000000000aaad5 : retf 0x1ba
0x000000000008446c : retf 0x1bb
0x00000000000bcbcc : retf 0x1be
0x00000000000c2252 : retf 0x1bf
0x0000000000187281 : retf 0x1cf
0x0000000000005e88 : retf 0x1d
0x0000000000163de8 : retf 0x1d4
0x0000000000164588 : retf 0x1d5
0x00000000000f0c62 : retf 0x1eb8
0x00000000000637e0 : retf 0x1f
0x0000000000042553 : retf 0x1f0f
0x00000000000c0ec9 : retf 0x1f74
0x00000000000fd631 : retf 0x1f8
0x000000000008947d : retf 0x2075
0x0000000000155ac2 : retf 0x20e9
0x0000000000001ec2 : retf 0x20f4
0x00000000000483d8 : retf 0x2148
0x0000000000156aec : retf 0x2149
0x0000000000002d16 : retf 0x2217
0x0000000000002294 : retf 0x2281
0x000000000015801e : retf 0x2377
0x0000000000002375 : retf 0x23c4
0x0000000000162df8 : retf 0x24
0x0000000000103a22 : retf 0x242
0x00000000000c0ee8 : retf 0x2475
0x0000000000159642 : retf 0x2581
0x00000000001557b7 : retf 0x25e9
0x000000000015555e : retf 0x2777
0x00000000000e7b9b : retf 0x27b8
0x000000000012bfd9 : retf 0x280f
0x0000000000126c42 : retf 0x2857
0x0000000000128f42 : retf 0x2888
0x00000000000e6cf2 : retf 0x28b8
0x0000000000083a12 : retf 0x28e8
0x000000000010f374 : retf 0x29
0x000000000004ebc1 : retf 0x290f
0x00000000000476af : retf 0x2941
0x000000000003a71c : retf 0x2948
0x00000000000a0644 : retf 0x294c
0x00000000001189ca : retf 0x2985
0x000000000011363e : retf 0x298d
0x0000000000112632 : retf 0x2997
0x000000000010f3b2 : retf 0x29e5
0x00000000001090aa : retf 0x2a48
0x000000000014fa52 : retf 0x2a6
0x0000000000108852 : retf 0x2a7f
0x000000000007b406 : retf 0x2a8
0x0000000000168afc : retf 0x2a91
0x00000000000ef3c9 : retf 0x2b
0x00000000000fcb42 : retf 0x2b4c
0x00000000000fc842 : retf 0x2b4f
0x0000000000026d0b : retf 0x2bb
0x00000000000eec8a : retf 0x2bd1
0x00000000000ee48a : retf 0x2bd9
0x00000000000e8d42 : retf 0x2c8a
0x0000000000167f7a : retf 0x2c90
0x00000000000e7a52 : retf 0x2c9d
0x00000000000e118a : retf 0x2cac
0x000000000009b8d0 : retf 0x2d73
0x00000000000f0722 : retf 0x2db8
0x00000000000333d0 : retf 0x2de9
0x00000000000bf3a1 : retf 0x2e
0x0000000000036c75 : retf 0x2e66
0x00000000000f0372 : retf 0x2eb8
0x00000000000c029a : retf 0x2ebb
0x00000000000b2130 : retf 0x2f
0x00000000000c0a42 : retf 0x2f0d
0x00000000000ff0f2 : retf 0x2f77
0x00000000000f0cf2 : retf 0x2fb8
0x00000000000b1926 : retf 0x2ffc
0x00000000000eb1a6 : retf 0x3140
0x00000000000fcfc9 : retf 0x3145
0x00000000001328f6 : retf 0x3148
0x0000000000169d65 : retf 0x3159
0x0000000000020aaf : retf 0x31ff
0x000000000007f849 : retf 0x32
0x000000000008668a : retf 0x3257
0x000000000007e782 : retf 0x32da
0x0000000000169dcd : retf 0x32dd
0x00000000000062a8 : retf 0x33
0x0000000000077c7a : retf 0x3319
0x0000000000116b32 : retf 0x334c
0x0000000000116d3a : retf 0x334d
0x00000000000c95d1 : retf 0x337e
0x0000000000168683 : retf 0x33e6
0x000000000005f3e5 : retf 0x34
0x000000000006f051 : retf 0x3427
0x000000000005b5f0 : retf 0x348
0x000000000005062c : retf 0x349
0x0000000000084bee : retf 0x34c
0x000000000004f3c9 : retf 0x35
0x000000000005447a : retf 0x3551
0x00000000000c6a82 : retf 0x35b
0x00000000000f14d2 : retf 0x35b8
0x000000000000b258 : retf 0x36
0x0000000000168bb1 : retf 0x3617
0x00000000000f0d52 : retf 0x36b8
0x0000000000030d4e : retf 0x37
0x0000000000039b9a : retf 0x3722
0x00000000001328d2 : retf 0x377
0x00000000000373b2 : retf 0x3771
0x00000000000fd023 : retf 0x3774
0x00000000000f0d82 : retf 0x37b8
0x00000000000021ef : retf 0x3844
0x0000000000087caf : retf 0x3845
0x0000000000002dd6 : retf 0x385b
0x00000000000205c2 : retf 0x38ba
0x0000000000023876 : retf 0x38db
0x0000000000006a40 : retf 0x39
0x00000000000cb1ca : retf 0x3941
0x0000000000118064 : retf 0x3944
0x0000000000026d51 : retf 0x3948
0x0000000000074b90 : retf 0x3949
0x00000000000994dd : retf 0x394c
0x00000000000990a4 : retf 0x394d
0x0000000000043b84 : retf 0x3973
0x000000000001f349 : retf 0x3a
0x00000000000a9d26 : retf 0x3ae9
0x0000000000051c6f : retf 0x3b76
0x000000000010c113 : retf 0x3b9a
0x0000000000026e82 : retf 0x3bb
0x00000000000297e0 : retf 0x3d76
0x000000000008053d : retf 0x3d83
0x000000000016a1c6 : retf 0x3d8a
0x00000000000bf762 : retf 0x3db8
0x0000000000167a5b : retf 0x3ec
0x0000000000155ba0 : retf 0x41ff
0x0000000000000321 : retf 0x4244
0x000000000008c52c : retf 0x4266
0x00000000000aa02f : retf 0x42e9
0x000000000009d4b7 : retf 0x4466
0x0000000000128460 : retf 0x4489
0x000000000011a571 : retf 0x448b
0x00000000000d1412 : retf 0x44c7
0x0000000000030915 : retf 0x44f6
0x0000000000010310 : retf 0x45
0x0000000000043ed3 : retf 0x45f8
0x00000000000db12b : retf 0x45ff
0x0000000000063e56 : retf 0x46
0x000000000006267a : retf 0x468b
0x000000000009b8b6 : retf 0x4773
0x00000000000082e8 : retf 0x48
0x000000000006ab56 : retf 0x4800
0x000000000007e765 : retf 0x4801
0x000000000012893a : retf 0x4802
0x00000000000e4fd9 : retf 0x4808
0x00000000000e67e5 : retf 0x4853
0x0000000000042fe7 : retf 0x4857
0x00000000000ddbb4 : retf 0x4864
0x0000000000033407 : retf 0x4866
0x00000000000263eb : retf 0x4880
0x00000000000439a1 : retf 0x48f8
0x000000000007eced : retf 0x4901
0x00000000000aad22 : retf 0x493
0x0000000000001c2f : retf 0x49f2
0x0000000000028212 : retf 0x4a
0x0000000000002e56 : retf 0x4a9a
0x00000000000b12fa : retf 0x4b7f
0x00000000000e3702 : retf 0x4b8
0x00000000000270ca : retf 0x4bb
0x000000000000e738 : retf 0x4c
0x00000000000afd5a : retf 0x4c01
0x0000000000081ac2 : retf 0x4c89
0x0000000000126f79 : retf 0x4d9
0x00000000000439f8 : retf 0x4de8
0x0000000000043a0a : retf 0x4df0
0x0000000000043a1c : retf 0x4df8
0x0000000000158783 : retf 0x4dff
0x00000000000cba46 : retf 0x4e8
0x000000000006fbcd : retf 0x5077
0x00000000000c8c3b : retf 0x5088
0x00000000000d9e04 : retf 0x5089
0x00000000000e7786 : retf 0x5389
0x00000000000e8176 : retf 0x5441
0x000000000004092b : retf 0x5489
0x00000000000026e8 : retf 0x54da
0x0000000000003014 : retf 0x54f7
0x0000000000001e88 : retf 0x559a
0x0000000000074c0d : retf 0x55e9
0x00000000001002a2 : retf 0x577
0x000000000009fa70 : retf 0x57e9
0x00000000000265cb : retf 0x587e
0x0000000000070ec2 : retf 0x58e8
0x00000000000098d8 : retf 0x59
0x00000000000d070c : retf 0x59e9
0x0000000000027106 : retf 0x5bb
0x000000000005ff69 : retf 0x5be9
0x0000000000086b36 : retf 0x5d5b
0x00000000000f778a : retf 0x60e8
0x000000000009b89c : retf 0x6173
0x0000000000001f3c : retf 0x6321
0x00000000000691b2 : retf 0x6348
0x00000000000a76e6 : retf 0x6349
0x0000000000033fc8 : retf 0x6411
0x000000000012c0c3 : retf 0x6601
0x000000000012c213 : retf 0x6602
0x000000000012c363 : retf 0x6603
0x000000000012c4b3 : retf 0x6604
0x000000000012c603 : retf 0x6605
0x000000000012c753 : retf 0x6606
0x000000000012c8a3 : retf 0x6607
0x000000000012c9f3 : retf 0x6608
0x000000000012cb43 : retf 0x6609
0x000000000012cc93 : retf 0x660a
0x000000000012cde3 : retf 0x660b
0x000000000012cf33 : retf 0x660c
0x000000000012d083 : retf 0x660d
0x000000000012d1d3 : retf 0x660e
0x000000000012d323 : retf 0x660f
0x0000000000070cb4 : retf 0x66e8
0x00000000001581cd : retf 0x66e9
0x00000000001328f1 : retf 0x676
0x000000000016a0e5 : retf 0x67ca
0x0000000000109817 : retf 0x68d
0x0000000000074282 : retf 0x6b
0x00000000000e1fa2 : retf 0x6b8
0x0000000000003677 : retf 0x6b85
0x00000000000272d6 : retf 0x6bb
0x00000000000f787f : retf 0x6be8
0x0000000000003b8c : retf 0x6e33
0x0000000000085a94 : retf 0x6e8
0x00000000001680e2 : retf 0x6ee8
0x0000000000033b66 : retf 0x6f74
0x00000000000038cf : retf 0x707d
0x0000000000169fa6 : retf 0x7272
0x000000000010165e : retf 0x728
0x000000000000253c : retf 0x736c
0x0000000000042f1a : retf 0x74ff
0x000000000016977f : retf 0x76a5
0x0000000000071d74 : retf 0x775
0x000000000003b122 : retf 0x777
0x000000000009fa50 : retf 0x77e9
0x00000000000450a6 : retf 0x77f
0x00000000000fa454 : retf 0x798
0x0000000000168602 : retf 0x79f5
0x00000000000f6431 : retf 0x7ad
0x0000000000080492 : retf 0x7c7
0x00000000000023bb : retf 0x7e0c
0x0000000000030abc : retf 0x7ee8
0x0000000000089c76 : retf 0x7f75
0x000000000010522f : retf 0x7f80
0x00000000000f4992 : retf 0x82
0x0000000000043cf1 : retf 0x877
0x00000000000ee5b2 : retf 0x88f
0x0000000000117642 : retf 0x8c
0x0000000000033908 : retf 0x948
0x000000000009b8a1 : retf 0x94c
0x000000000003a331 : retf 0x977
0x00000000000533e0 : retf 0x97e
0x00000000000e3dd2 : retf 0x9b8
0x000000000018ce24 : retf 0xa03
0x00000000000c6b50 : retf 0xabe
0x00000000000657b2 : retf 0xac
0x0000000000004a09 : retf 0xb
0x00000000000d6264 : retf 0xb75
0x0000000000038f61 : retf 0xb8
0x00000000000abfd2 : retf 0xbb1
0x00000000000e3e92 : retf 0xbb8
0x0000000000029832 : retf 0xc19
0x00000000000ae642 : retf 0xc6a
0x0000000000051c8d : retf 0xc7
0x00000000000a831c : retf 0xc90
0x0000000000144a56 : retf 0xd
0x000000000016a137 : retf 0xd39
0x0000000000120a30 : retf 0xd74
0x000000000002be83 : retf 0xd88
0x0000000000144956 : retf 0xe
0x0000000000185a6f : retf 0xe0a
0x0000000000167d73 : retf 0xe80
0x00000000000500e0 : retf 0xeeb
0x000000000008ad12 : retf 0xef2
0x00000000000060e0 : retf 0xf
0x00000000001312fc : retf 0xf01
0x000000000013147c : retf 0xf02
0x00000000001315fc : retf 0xf03
0x000000000013177c : retf 0xf04
0x00000000001318fc : retf 0xf05
0x0000000000131a7c : retf 0xf06
0x0000000000131bfc : retf 0xf07
0x0000000000131d7c : retf 0xf08
0x0000000000131efc : retf 0xf09
0x000000000013207c : retf 0xf0a
0x00000000001321fc : retf 0xf0b
0x000000000013237c : retf 0xf0c
0x00000000001324fc : retf 0xf0d
0x000000000013267c : retf 0xf0e
0x00000000001327fc : retf 0xf0f
0x0000000000155578 : retf 0xf40
0x000000000003d611 : retf 0xf41
0x00000000000d53f7 : retf 0xf44
0x0000000000038e5e : retf 0xf45
0x000000000004bef7 : retf 0xf48
0x00000000000515d0 : retf 0xf4c
0x0000000000169c88 : retf 0xf64
0x0000000000033775 : retf 0xf66
0x000000000007d37a : retf 0xf92
0x000000000003340c : retf 0xff2
0x0000000000033779 : retf 0xff3
0x0000000000010980 : retf 1
0x0000000000027e89 : retf 2
0x00000000000c48f4 : retf 3
0x000000000000bb70 : retf 4
0x0000000000114840 : retf 5
0x00000000000016ec : retf 6
0x0000000000001894 : retf 7
0x0000000000001a3c : retf 8
0x00000000000da5e3 : retf 9
0x000000000017bbe4 : rol ah, 0xeb ; call rax
0x000000000017f90c : rol al, 0xf8 ; inc dword ptr [rax - 0x2ffffde9] ; ret 0xfff8
0x000000000016c848 : rol bh, 0xf2 ; jmp rax
0x000000000009d445 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000009e00e : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000e9f6c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000008a8dc : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000008e0ce : rol bl, 0x83 ; ret 0x6620
0x000000000009fd6d : rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000af31b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000070a3c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008e85d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000009dbad : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000083bbb : rol byte ptr [r9 - 0x77], 1 ; retf -0x77d
0x0000000000037137 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000f7eb9 : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000008c452 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000014997b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000093df2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000017d5b0 : rol byte ptr [rax + 1], 1 ; add byte ptr [rax], ah ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rax]
0x00000000000e7991 : rol byte ptr [rax + rax*8 - 0x74b7c58c], 5 ; retf
0x0000000000001368 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000165780 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000702a1 : rol byte ptr [rax + rcx*2], 0x39 ; ret 0xf075
0x0000000000024490 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000010bee9 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000009f94d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x00000000001147fa : rol byte ptr [rax], 0 ; add al, ch ; int 0xc3
0x00000000000e07a6 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000253ac : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0x4801
0x000000000014f67d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018d175 : rol byte ptr [rax], 0 ; call 0xffffffffcc18c11a
0x000000000017b148 : rol byte ptr [rax], 0xfd ; call qword ptr [rax]
0x000000000018e10d : rol byte ptr [rax], 1 ; add al, dh ; mov bl, 0xfb ; jmp qword ptr [rdi]
0x00000000000b05b8 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006946f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000000ed627 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000baea0 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003443c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000018e125 : rol byte ptr [rax], 1 ; add byte ptr [rax], cl ; mov ch, 0xfb ; call qword ptr [rdi]
0x000000000018e335 : rol byte ptr [rax], cl ; add al, cl ; cli ; sti ; call rsp
0x000000000002fe23 : rol byte ptr [rbp + 0x1148bff], 0x74 ; add cl, byte ptr [rdi] ; retf -0x76bf
0x00000000000840fb : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x000000000008e312 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000020d15 : rol byte ptr [rbp + rcx*4 + 0x53], 1 ; push rdi ; rol byte ptr [rcx + 0x21], 1 ; ret 0xe783
0x0000000000105d39 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8945
0x00000000000ec767 : rol byte ptr [rbp - 0x77], 0xfe ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000019b2b0 : rol byte ptr [rbp - 0xa], 1 ; jmp rdi
0x000000000017db1c : rol byte ptr [rbp - 0xc], 1 ; call rax
0x0000000000149da2 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x00000000000dc014 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8341
0x00000000000dbd70 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b41
0x0000000000043b5b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000000414ba : rol byte ptr [rbx - 0x2b8adb07], 1 ; ret
0x00000000000edc23 : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000ccfd7 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x0000000000105224 : rol byte ptr [rbx - 0x47ca817], 1 ; or dword ptr [rdi], ecx ; retf
0x00000000000f340c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000070ba8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002cfd1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000dc545 : rol byte ptr [rbx - 0x76b7f707], 1 ; retf -0x7cf1
0x00000000000a56f1 : rol byte ptr [rbx - 0x7bf0c008], 1 ; retf
0x000000000017d434 : rol byte ptr [rbx - 0xe], 1 ; jmp rax
0x00000000000af582 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000109d72 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000001151d1 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x000000000018028c : rol byte ptr [rbx], 0xfa ; jmp qword ptr [rax]
0x000000000010fe26 : rol byte ptr [rcx + 0x21], 0xc4 ; mov eax, r12d ; pop r12 ; ret
0x0000000000020d1b : rol byte ptr [rcx + 0x21], 1 ; ret 0xe783
0x0000000000077743 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x000000000009dec1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000105d3b : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8945
0x0000000000086fe3 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000009dbae : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000008a7d2 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000008a88b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000290db : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000009f3ce : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0x9f3a0 ; ret
0x000000000004159f : rol byte ptr [rcx + rcx*4 - 0x10], 0xf ; ret
0x00000000000c24c3 : rol byte ptr [rcx + rcx*4 - 0x1e], 0x83 ; retf -0x7bf0
0x000000000010bbd2 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000002ffb3 : rol byte ptr [rcx - 0x75], 0x5d ; add al, 0xeb ; ret 0x8b48
0x0000000000083bbc : rol byte ptr [rcx - 0x77], 1 ; retf -0x77d
0x000000000003f91d : rol byte ptr [rcx - 0x7d], cl ; clc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8349
0x0000000000083c42 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000af562 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d70d0 : rol byte ptr [rcx], 0x39 ; ret
0x000000000004380a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x43809 ; xor eax, eax ; ret
0x00000000000438ea : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x438e9 ; xor eax, eax ; ret
0x000000000009e263 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x00000000000f29ca : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000cef57 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002a38a : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000f29e0 : rol byte ptr [rcx], 0x89 ; add al, bl ; nop dword ptr [rax] ; ret
0x00000000000d89c0 : rol byte ptr [rcx], 0x89 ; add edi, dword ptr [rcx] ; retf -0x7bf1
0x000000000006ce67 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000041a1a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000ebc67 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x000000000009e2c3 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x65e9
0x000000000009e2ae : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000c87a6 : rol byte ptr [rcx], 0xf6 ; or esi, r10d ; jne 0xc87b9 ; ret
0x000000000004ce0e : rol byte ptr [rcx], 1 ; retf -0x7277
0x000000000019e34d : rol byte ptr [rcx], cl ; add al, al ; sub dh, bh ; call qword ptr [rbx]
0x00000000000e1c0c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f37dd : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001809e8 : rol byte ptr [rdi - 0x40fffffe], 0xfa ; jmp rax
0x00000000000ccb52 : rol byte ptr [rdi - 0x75], 4 ; test byte ptr [rbp + 0x39], al ; ret 0xe975
0x00000000000af5c2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000196f60 : rol byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000af572 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000021ea6 : rol byte ptr [rdx], 0x50 ; call rbx
0x0000000000190200 : rol byte ptr [rdx], 0xf2 ; jmp qword ptr [rcx]
0x000000000017fa84 : rol byte ptr [rdx], 0xf9 ; jmp qword ptr [rax]
0x00000000000b2c5f : rol byte ptr [rip + 0x16e], 1 ; ret
0x00000000000f36ad : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000001809c8 : rol byte ptr [rsi - 0x43dffffe], 0xfa ; call qword ptr [rax]
0x00000000000af5b2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000013a5ad : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000bbcc1 : rol byte ptr [rsi], 0 ; call r14
0x000000000016c7e4 : rol ch, 0xf2 ; call rax
0x0000000000194af0 : rol ch, 1 ; hlt ; call qword ptr [rsi]
0x000000000016c7e8 : rol ch, 1 ; jmp rax
0x000000000014a4f5 : rol ch, 1 ; jns 0x14a4d4 ; retf -0x152d
0x000000000014a645 : rol ch, 1 ; jns 0x14a624 ; retf -0x152d
0x000000000014a795 : rol ch, 1 ; jns 0x14a774 ; retf -0x152d
0x000000000014a8e5 : rol ch, 1 ; jns 0x14a8c4 ; retf -0x152d
0x000000000014aa35 : rol ch, 1 ; jns 0x14aa14 ; retf -0x152d
0x000000000014ab85 : rol ch, 1 ; jns 0x14ab64 ; retf -0x152d
0x000000000014acd5 : rol ch, 1 ; jns 0x14acb4 ; retf -0x152d
0x000000000014ae25 : rol ch, 1 ; jns 0x14ae04 ; retf -0x152d
0x000000000014af75 : rol ch, 1 ; jns 0x14af54 ; retf -0x152d
0x000000000014b0c5 : rol ch, 1 ; jns 0x14b0a4 ; retf -0x152d
0x000000000014b215 : rol ch, 1 ; jns 0x14b1f4 ; retf -0x152d
0x000000000014b365 : rol ch, 1 ; jns 0x14b344 ; retf -0x152d
0x000000000014b4b5 : rol ch, 1 ; jns 0x14b494 ; retf -0x152d
0x000000000014b605 : rol ch, 1 ; jns 0x14b5e4 ; retf -0x152d
0x000000000014b755 : rol ch, 1 ; jns 0x14b734 ; retf -0x152d
0x000000000014bbc5 : rol ch, 1 ; jns 0x14bba4 ; retf -0x152d
0x000000000014bd45 : rol ch, 1 ; jns 0x14bd24 ; retf -0x152d
0x000000000014bec5 : rol ch, 1 ; jns 0x14bea4 ; retf -0x152d
0x000000000014c045 : rol ch, 1 ; jns 0x14c024 ; retf -0x152d
0x000000000014c1c5 : rol ch, 1 ; jns 0x14c1a4 ; retf -0x152d
0x000000000014c345 : rol ch, 1 ; jns 0x14c324 ; retf -0x152d
0x000000000014c4c5 : rol ch, 1 ; jns 0x14c4a4 ; retf -0x152d
0x000000000014c645 : rol ch, 1 ; jns 0x14c624 ; retf -0x152d
0x000000000014c7c5 : rol ch, 1 ; jns 0x14c7a4 ; retf -0x152d
0x000000000014c945 : rol ch, 1 ; jns 0x14c924 ; retf -0x152d
0x000000000014cac5 : rol ch, 1 ; jns 0x14caa4 ; retf -0x152d
0x000000000014cc45 : rol ch, 1 ; jns 0x14cc24 ; retf -0x152d
0x000000000014cdc5 : rol ch, 1 ; jns 0x14cda4 ; retf -0x152d
0x000000000014cf45 : rol ch, 1 ; jns 0x14cf24 ; retf -0x152d
0x000000000014d0c5 : rol ch, 1 ; jns 0x14d0a4 ; retf -0x152d
0x00000000001499ff : rol ch, 1 ; std ; xlatb ; ret
0x000000000014d776 : rol ch, cl ; std ; xlatb ; ret
0x000000000014da1f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000001668c0 : rol cl, 0xc2 ; ret
0x0000000000180084 : rol cl, 0xf9 ; call rax
0x00000000000b3426 : rol cl, cl ; clc ; add eax, 0x2907f9c1 ; ret 0xf089
0x000000000016c824 : rol dh, 0xf2 ; jmp rax
0x0000000000105507 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000017ea60 : rol dl, 1 ; add byte ptr [rax + 0x10fff71a], al ; ret
0x000000000017f914 : rol dl, 1 ; clc ; call rax
0x00000000001800a4 : rol dl, 1 ; stc ; inc dword ptr [rax + 0x4000024d] ; ret
0x00000000000af50c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000f7e91 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000014e32c : rol dword ptr [rax + 0x48000000], 0x39 ; retf -0x1e8b
0x000000000009de68 : rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x00000000000da83f : rol dword ptr [rax + 0xf], -0x7c ; retf 3
0x00000000001353c0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000069b38 : rol dword ptr [rax], 1 ; ret
0x000000000017c521 : rol dword ptr [rax], cl ; add byte ptr [rax + 0x51], dh ; out dx, eax ; jmp rax
0x0000000000101fdb : rol dword ptr [rax], cl ; add cl, ch ; ret 0xfffc
0x000000000008e0f4 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000008e597 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000008e5c6 : rol dword ptr [rbp + 0x317575c0], -0x40 ; ret
0x00000000001499f3 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x000000000014d4c3 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x00000000000ab2fd : rol dword ptr [rbp - 0x3d6bf040], 9 ; retf -0x2d7c
0x0000000000089553 : rol dword ptr [rbp - 0x77], 1 ; fiadd dword ptr [rbp + 0x38] ; retf -0x238e
0x0000000000116d06 : rol dword ptr [rcx + 0xf0f0fe1], 1 ; cmovs esi, dword ptr [rcx] ; retf -0x3eb8
0x00000000000b9177 : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x00000000001584f6 : rol dword ptr [rcx - 0x46], 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf -0x76b8
0x0000000000053cf4 : rol dword ptr [rcx - 0x75], 0x46 ; add al, 0x89 ; ret 0xda29
0x0000000000020af9 : rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x0000000000157d80 : rol dword ptr [rcx - 0x7d], -0x1f ; add dword ptr [rax + 9], ecx ; ret
0x00000000000e8f89 : rol dword ptr [rcx], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000017ea39 : rol dword ptr [rcx], 0 ; add byte ptr [rdi + rsi*8], dl ; lcall ptr [rax] ; ret 1
0x00000000000435ef : rol dword ptr [rcx], 0x39 ; retf -0x76b4
0x000000000019e1fd : rol dword ptr [rcx], 1 ; add al, dl ; and edi, esi ; call rax
0x000000000009aed9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x000000000019a6a6 : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x000000000004c736 : rol dword ptr [rip - 0x76bf0000], 1 ; ret 0x8d41
0x0000000000106b7c : rol dword ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000034c15 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000014d70e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf -0x23b
0x000000000014a0a5 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000083ca9 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000083ca8 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000034c14 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000106b7b : rol word ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000017a0c4 : ror al, 1 ; cld ; push qword ptr [rax - 0x36] ; cld ; call qword ptr [rax]
0x0000000000100e12 : ror ax, 8 ; ret
0x000000000017c468 : ror bh, 0 ; add al, al ; out dx, eax ; jmp rax
0x000000000017bfac : ror bh, 1 ; in al, dx ; call rax
0x000000000016c8ac : ror bh, 1 ; push rax ; iretd ; call qword ptr [rax]
0x000000000016c620 : ror bl, 0xfb ; jmp rax
0x00000000001557e3 : ror byte ptr [r9 + 0xf], cl ; ret
0x0000000000128804 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000034c16 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008e142 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8e189 ; add rax, rdi ; ret
0x00000000000aeb52 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xaeb99 ; add rax, rdi ; ret
0x0000000000093ca7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000af22c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000009412e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000051bf1 : ror byte ptr [rax + 0x29], 1 ; retf -0x8b8
0x0000000000115eae : ror byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x0000000000120a2d : ror byte ptr [rax + 0x39], 0xca ; je 0x120a47 ; ret
0x00000000000e790f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xe7947 ; ret
0x00000000000fc688 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000e1c0e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000e1edd : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x0000000000044a43 : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x000000000004453b : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000027e1d : ror byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000039d0d : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000fc5a8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000f1a8f : ror byte ptr [rax + 0x63], 0xff ; mov eax, 0x46 ; syscall
0x000000000005a76f : ror byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000a1061 : ror byte ptr [rax + 0x63], cl ; ret
0x000000000008505c : ror byte ptr [rax + 0xf480001], 1 ; ret 0x66c3
0x0000000000042865 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000b03b0 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000fd5b2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000001112bc : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000087337 : ror byte ptr [rax + 0xf], 1 ; ret
0x000000000002bd1c : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x00000000000bf146 : ror byte ptr [rax + 0xf], 1 ; ret 0x394c
0x00000000000bf17b : ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000bd74d : ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000f5652 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000002bd0d : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000f5451 : ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x000000000009fd89 : ror byte ptr [rax + 0xf], cl ; retf -0x76b8
0x000000000008e1ec : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008e708 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x000000000008e112 : ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001499c3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000039605 : ror byte ptr [rax + 1], 1 ; retf -0x74b8
0x0000000000074ab9 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000a9f52 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000003e7c5 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000a1545 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000039635 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x0000000000039579 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000093ca4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000483c9 : ror byte ptr [rax + 9], cl ; ret 0x8b48
0x0000000000161b88 : ror byte ptr [rax + rax], 0 ; ret
0x0000000000084f05 : ror byte ptr [rax + rax], cl ; cmovne rax, rdx ; ret
0x000000000008e855 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002c9a2 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000f2726 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000051a66 : ror byte ptr [rax - 0x3f], 0xe9 ; add cl, byte ptr [rax - 0x77] ; retf -0x8b8
0x00000000000af968 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c1008 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008e102 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008e132 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000008e602 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008e122 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000000f3161 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000b9154 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000000000cc379 : ror byte ptr [rax - 0x75], 4 ; ret
0x000000000010b175 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000008a5f9 : ror byte ptr [rax - 0x77], 0xa ; ret
0x00000000001157b9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x11575b ; xor eax, eax ; pop rbx ; ret
0x0000000000087334 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000119bc8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000000fd4a2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000e2552 : ror byte ptr [rax - 0x77], 0xee ; movsxd rdi, ebx ; xor eax, eax ; syscall
0x000000000011fc19 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x00000000000824fa : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000005061d : ror byte ptr [rax - 0x77], 1 ; ret 0x2ae8
0x000000000002b5b9 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000037ddd : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000000774ed : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000b2765 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000115eb1 : ror byte ptr [rax - 0x77], 1 ; ret 0xc031
0x00000000001549ef : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000020e65 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000158bd9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe781
0x0000000000116c86 : ror byte ptr [rax - 0x77], 1 ; retf -0x3eb8
0x00000000000c2347 : ror byte ptr [rax - 0x77], 1 ; retf -0x8b8
0x00000000000e1f9f : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000072309 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x00000000001576ff : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 9], cl ; ret
0x00000000000800f2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000001191f9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000082ea5 : ror byte ptr [rax - 0x77], 5 ; ret
0x00000000000bd771 : ror byte ptr [rax - 0x77], cl ; ret
0x00000000001561cf : ror byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000015598f : ror byte ptr [rax - 0x7b], cl ; retf -0x7bf1
0x00000000000ebfeb : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x0000000000075322 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000085971 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003782c : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010d901 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011d2b2 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e3d90 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000126139 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x0000000000036b9d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000040ed4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000042a8a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000120f4a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000010a2a6 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000008e662 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000149dd2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x000000000008e642 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000008e622 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000e207e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000060c07 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000d6706 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000e86c5 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000073daa : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000005ba3a : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000c7df8 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000994d6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000025a2c : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000a1233 : ror byte ptr [rax - 9], 1 ; fadd dword ptr [rbp + 0x440f48c9] ; ret 0x8348
0x000000000007616a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aaef : ror byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000ff47a : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000003d5f2 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000ecea3 : ror byte ptr [rax], 1 ; add byte ptr [rax - 0x75], cl ; xor al, ch ; ret 0xf81d
0x000000000017fab4 : ror byte ptr [rax], 1 ; stc ; call qword ptr [rax]
0x000000000009d874 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000087efe : ror byte ptr [rbp + 0x29], cl ; retf -0x74ba
0x00000000000a0061 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000116bcd : ror byte ptr [rbp - 0x77], 1 ; ret 0x334c
0x0000000000116dd5 : ror byte ptr [rbp - 0x77], 1 ; ret 0x334d
0x000000000014e4c1 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000000dd4be : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x000000000017a920 : ror byte ptr [rbx + rdi*8 - 0x46cbf01], 1 ; call rax
0x0000000000195c20 : ror byte ptr [rbx], 0xf5 ; jmp rcx
0x00000000000c5cfb : ror byte ptr [rcx + 0x29], cl ; ret 0x17eb
0x00000000000e1f3f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x000000000004700d : ror byte ptr [rcx + 0x63], cl ; ret 0xa67f
0x00000000000cea83 : ror byte ptr [rcx + 0xf2c2444], 0x84 ; ret 0
0x00000000001557e4 : ror byte ptr [rcx + 0xf], cl ; ret
0x00000000000857ae : ror byte ptr [rcx + 1], 1 ; retf 0x14c
0x00000000000d53ab : ror byte ptr [rcx + 1], cl ; ret
0x00000000000afd01 : ror byte ptr [rcx + rax - 0x40], 1 ; ret
0x00000000000debdc : ror byte ptr [rcx + rcx*4 + 0x14], 0x24 ; call 0x6adf7
0x000000000006d1df : ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x0000000000032f14 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000853f6 : ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000116f3f : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x0000000000033f2e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x000000000010b1be : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000cab3e : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x0000000000157cd1 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2941
0x00000000000c5cf8 : ror byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + 0x29], cl ; ret 0x17eb
0x0000000000085438 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000990bf : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009f950 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000aebc0 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x000000000017d9e4 : ror byte ptr [rcx], 0xf4 ; jmp rax
0x00000000000ea24c : ror byte ptr [rdi + 0x2c], 0 ; add rsp, 8 ; ret
0x0000000000155abe : ror byte ptr [rdi + rcx + 0x45], 1 ; retf 0x20e9
0x000000000017a944 : ror byte ptr [rdi - 0x70af0005], 0xfb ; jmp rax
0x0000000000193fd0 : ror byte ptr [rdi - 0xc], 1 ; jmp qword ptr [rcx]
0x0000000000034252 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000139cad : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ee130 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000000e16bc : ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000000000eb7a5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000d9190 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x0000000000053682 : ror byte ptr [rdi], 0x48 ; ret 0x4489
0x0000000000037165 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x0000000000123818 : ror byte ptr [rdi], 0x82 ; ret
0x0000000000042d5f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000734cc : ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007422c : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000124a85 : ror byte ptr [rdi], 0x84 ; push rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000002a560 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000dbb7b : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000fadca : ror byte ptr [rdi], 0x84 ; ret 0xfffb
0x000000000010dfb6 : ror byte ptr [rdi], 0x84 ; ret 9
0x00000000000385d4 : ror byte ptr [rdi], 0x84 ; retf
0x0000000000059108 : ror byte ptr [rdi], 0x84 ; retf -0x16
0x00000000000463d0 : ror byte ptr [rdi], 0x84 ; retf -2
0x0000000000062537 : ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000637dd : ror byte ptr [rdi], 0x84 ; retf 0x1f
0x0000000000055db7 : ror byte ptr [rdi], 0x84 ; retf 0xb
0x00000000000e8f86 : ror byte ptr [rdi], 0x84 ; rol dword ptr [rcx], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001586b6 : ror byte ptr [rdi], 0x84 ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x41ff
0x000000000013ae7a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000097b61 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005a946 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000ed99a : ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000944a7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000a4fc8 : ror byte ptr [rdi], 0x85 ; ret 0xfff4
0x00000000001012ae : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000000d60e4 : ror byte ptr [rdi], 0x85 ; ret 9
0x0000000000142b4f : ror byte ptr [rdi], 0x85 ; retf -0xa
0x0000000000142d2f : ror byte ptr [rdi], 0x85 ; retf -0xb
0x000000000011f5f7 : ror byte ptr [rdi], 0x85 ; retf 0
0x000000000014983d : ror byte ptr [rdi], 0x85 ; retf 1
0x00000000000aa280 : ror byte ptr [rdi], 0x88 ; push rdi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000125daf : ror byte ptr [rdi], 0x88 ; ret 0
0x00000000000e3777 : ror byte ptr [rdi], 0x88 ; ret 1
0x0000000000034367 : ror byte ptr [rdi], 0x88 ; retf
0x00000000000729d6 : ror byte ptr [rdi], 0x8e ; retf
0x000000000004a96c : ror byte ptr [rdi], 0x8f ; ret 2
0x00000000000a312d : ror byte ptr [rdi], 0x8f ; retf
0x00000000000c0cef : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000060b6e : ror byte ptr [rdi], 0x94 ; ret
0x00000000000d97e3 : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x000000000011d097 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000020fb5 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000b59db : ror byte ptr [rdi], 0x94 ; ret 0x8d4c
0x00000000000ab2ff : ror byte ptr [rdi], 0x94 ; ret 0xca09
0x00000000000b026e : ror byte ptr [rdi], 0x94 ; ret 0xd338
0x000000000006e053 : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000b01b7 : ror byte ptr [rdi], 0x94 ; ret 0xdf89
0x00000000000c24c0 : ror byte ptr [rdi], 0x94 ; rol byte ptr [rcx + rcx*4 - 0x1e], 0x83 ; retf -0x7bf0
0x00000000000dd5d8 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000d3365 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x000000000006b71e : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000d33fe : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x000000000007138c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000c1005 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000126136 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x00000000000d918d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006916b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x000000000009f4fc : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000e3f7a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000009daf5 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000003235e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x32348 ; ret
0x00000000000c9d58 : ror byte ptr [rdi], 1 ; ret 0xf039
0x0000000000060dd3 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000025de3 : ror byte ptr [rdi], cl ; mov byte ptr [rax], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000261ed : ror byte ptr [rdi], cl ; mov byte ptr [rbx], cl ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000008e6ad : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000d97de : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x00000000000732ac : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00000000000ea11a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8440
0x0000000000088320 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000b0064 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x000000000008ab12 : ror byte ptr [rsi + 0x63], 1 ; add al, 0x80 ; add rax, r8 ; jmp rax
0x000000000017a6c8 : ror byte ptr [rsi - 5], 1 ; jmp qword ptr [rax]
0x000000000018ea60 : ror byte ptr [rsi], 1 ; int1 ; jmp qword ptr [rdi]
0x00000000001328d7 : ror dword ptr [rax + 0x29], 1 ; retf -0x7eb8
0x000000000003c41c : ror dword ptr [rax + 0x29], cl ; ret
0x000000000007230c : ror dword ptr [rax + 0x29], cl ; retf
0x000000000011ff2e : ror dword ptr [rax + 0x39], 1 ; retf -0x398b
0x00000000000b00cf : ror dword ptr [rax + 0x39], 1 ; retf -0x61f1
0x00000000000c2334 : ror dword ptr [rax + 0x39], 1 ; retf -0x78f1
0x0000000000114f0d : ror dword ptr [rax + 0x63], 0xc ; mov cl, byte ptr [rax + 1] ; retf -0x1d01
0x00000000000b620c : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c0801 : ror dword ptr [rax + 0x63], cl ; ret
0x000000000007f568 : ror dword ptr [rax + 0xf], 0x43 ; retf -0x74b8
0x00000000000cd68e : ror dword ptr [rax + 0xf], 1 ; retf 0x3948
0x0000000000149555 : ror dword ptr [rax + 1], -8 ; ret
0x0000000000149419 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014966e : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x0000000000127bc2 : ror dword ptr [rax + 3], 1 ; or byte ptr [rax + 0x39], cl ; retf
0x00000000000ce5e2 : ror dword ptr [rax + 3], 1 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x00000000001553d2 : ror dword ptr [rax + 9], cl ; ret
0x00000000000ff260 : ror dword ptr [rax + 9], cl ; retf -0x76b7
0x0000000000085043 : ror dword ptr [rax + rax], 1 ; cmovne rax, rdx ; ret
0x00000000000f2fbc : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000087e9d : ror dword ptr [rax - 0x3f], -0x1a ; or byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x0000000000093b74 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf -0x76b8
0x0000000000093c99 : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf48
0x0000000000093e5a : ror dword ptr [rax - 0x3f], -0x1f ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000058a37 : ror dword ptr [rax - 0x3f], cl ; stc ; add al, byte ptr [rcx] ; retf -0x2fd7
0x0000000000034a82 : ror dword ptr [rax - 0x73], 0x35 ; push rsi ; retf 0x37
0x000000000008a5e5 : ror dword ptr [rax - 0x77], 0xa ; ret
0x00000000000edf8d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000086f99 : ror dword ptr [rax - 0x77], 1 ; ret 0x1ee8
0x0000000000051290 : ror dword ptr [rax - 0x77], 1 ; ret 0x77e9
0x000000000012752e : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000c8a50 : ror dword ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, rbx ; call r12
0x000000000006fdad : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x6fda7 ; ret
0x0000000000078eed : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x78ee7 ; ret
0x000000000007e39e : ror dword ptr [rax - 0x7d], -0x33 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000044567 : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x0000000000036c88 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000030fe2 : ror dword ptr [rax - 0x7d], cl ; ret
0x00000000000b4caa : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000066c5a : ror dword ptr [rax], -0x41 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x66c2e
0x0000000000070871 : ror dword ptr [rbp + 0x29480033], cl ; retf -0x76b8
0x00000000000aaa7b : ror dword ptr [rbp - 0x77], 1 ; ret 0x6348
0x00000000001150ad : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf -0x2d7b
0x00000000001248db : ror dword ptr [rcx + rcx*4 - 0x12], -0x77 ; fisttp word ptr [rax - 0x77] ; retf -0x76b8
0x00000000000489f0 : ror dword ptr [rcx + rcx*4 - 0x38], 1 ; add rsp, 0x28 ; ret
0x00000000000443db : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8348
0x00000000000a76e3 : ror dword ptr [rcx - 0x77], cl ; retf 0x6349
0x000000000003d1a0 : ror dword ptr [rcx], 0 ; add byte ptr [rax - 0x48], cl ; retf -2
0x0000000000152967 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008e535 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000ce0af : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000014fee8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001505f4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001503c6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x00000000001514f0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000150346 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000150684 : ror dword ptr [rdi], -0x7b ; je 0x150694 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000015017b : ror dword ptr [rdi], -0x7b ; jno 0x150190 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000150243 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000102ad7 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000014fec0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007c611 : ror dword ptr [rdi], -0x7c ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bb377 : ror dword ptr [rdi], -0x7e ; ret 0
0x00000000000e3f5c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000008a6c7 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000071184 : ror dword ptr [rdi], cl ; pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000010ba15 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x000000000008a96d : ror dword ptr [rsi + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x0000000000100e13 : ror eax, 8 ; ret
0x000000000006fdac : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x6fda8 ; ret
0x0000000000078eec : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x78ee8 ; ret
0x000000000018af45 : sahf ; add byte ptr [rax], al ; call 0x13189e52
0x000000000018af0d : sahf ; add byte ptr [rax], al ; loopne 0x18af17 ; out dx, al ; call qword ptr [rdx]
0x00000000001808cd : sahf ; cli ; call qword ptr [rax]
0x00000000001808c5 : sahf ; cli ; jmp rax
0x0000000000198b29 : sahf ; cmc ; call qword ptr [rdx]
0x0000000000194771 : sahf ; hlt ; jmp qword ptr [rdx]
0x0000000000002626 : sahf ; jl 0x25bb ; loop 0x2606 ; ret 0x23cb
0x0000000000002625 : sahf ; jl 0x25bc ; loop 0x2607 ; ret 0x23cb
0x000000000014aefe : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003302d : sahf ; ret
0x00000000000b33ec : sahf ; ret 0x2941
0x00000000001680e5 : sahf ; ret 0x38ae
0x00000000000b00d4 : sahf ; ret 0xe8c1
0x0000000000168c1c : sahf ; retf
0x0000000000113d06 : sahf ; retf -0x10
0x0000000000002493 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000058223 : sahf ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xc71e
0x000000000017e8fc : sal ah, 0xf6 ; call rax
0x000000000016db65 : sal ah, 0xff ; ret 0xfff4
0x0000000000194fc1 : sal ah, cl ; jmp qword ptr [rcx]
0x00000000000b2c5d : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000ccfa9 : sal bh, 0xd0 ; and eax, 2 ; ret
0x000000000011d122 : sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x000000000011d449 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014e4ae : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000000e3fd6 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006916e : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006913b : sal bh, 0xd8 ; ret
0x000000000009e022 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x000000000008c2d7 : sal bh, 1 ; ret 0x8000
0x000000000008c197 : sal bh, 1 ; ret 0xc000
0x000000000008c057 : sal bh, 1 ; ret 0xe000
0x000000000008bf17 : sal bh, 1 ; ret 0xf000
0x000000000008bdd7 : sal bh, 1 ; ret 0xf800
0x000000000008bc97 : sal bh, 1 ; ret 0xfc00
0x000000000008bb57 : sal bh, 1 ; ret 0xfe00
0x000000000008ba17 : sal bh, 1 ; ret 0xff00
0x000000000008b8d7 : sal bh, 1 ; ret 0xff80
0x000000000008b797 : sal bh, 1 ; ret 0xffc0
0x000000000008b657 : sal bh, 1 ; ret 0xffe0
0x000000000008b517 : sal bh, 1 ; ret 0xfff0
0x000000000008b3d7 : sal bh, 1 ; ret 0xfff8
0x000000000008b297 : sal bh, 1 ; ret 0xfffc
0x000000000008b157 : sal bh, 1 ; ret 0xfffe
0x000000000017f1fd : sal bh, cl ; call qword ptr [rax]
0x000000000004eb04 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000010bc07 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x000000000017ca9c : sal bl, 1 ; out dx, eax ; jmp rax
0x0000000000043bbb : sal bl, 1 ; ret
0x00000000000d644e : sal byte ptr [rax + rbp*2 + 0x48], 0x89 ; ret 0x77e9
0x000000000009f7af : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x000000000011cd55 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00000000000d91ce : sal byte ptr [rax + rdx*2 - 0xd], 1 ; ret
0x000000000003544c : sal byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000017fcf0 : sal byte ptr [rax], 2 ; add al, dl ; pop rdi ; stc ; call qword ptr [rax]
0x000000000010bd0f : sal byte ptr [rbp + 0x1e], 0x83 ; ret 0x8401
0x000000000014dc32 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000000e2507 : sal byte ptr [rbp + 0x2e], 0x48 ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000bf8c7 : sal byte ptr [rbp + 0x2e], 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bf947 : sal byte ptr [rbp + 0x2e], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bc357 : sal byte ptr [rbp + 0x2e], 0xb8 ; je 0xbc365 ; add byte ptr [rax], al ; syscall
0x000000000012869f : sal byte ptr [rbp + 0x4e], 0x89 ; ret
0x0000000000078372 : sal byte ptr [rbp + 0xb], cl ; xor eax, eax ; ret
0x0000000000121071 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x0000000000084120 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x0000000000068af0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000180718 : sal byte ptr [rbp + 2], 0 ; and byte ptr [rbx - 6], bl ; jmp rax
0x000000000004fc2e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000000fc697 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000033ff7 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x00000000000fcc71 : sal byte ptr [rbp + 7], 1 ; mov eax, 0xca ; syscall
0x0000000000159d25 : sal byte ptr [rbp + 8], 0x5b ; ret
0x00000000001156b4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fcd74 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x00000000000c8a46 : sal byte ptr [rbp + rax + 0x48], 0x39 ; ret
0x0000000000113a73 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000081e99 : sal byte ptr [rbp + rax + 0x48], cl ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000115411 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000011ad1f : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000011dcf9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000149550 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000079a8d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000008a755 : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000004380e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000fcfbe : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000833b0 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x000000000009d5b0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000006fdb0 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000008a68a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000883f4 : sal byte ptr [rbp - 0x17], 1 ; or byte ptr [rdi], sil ; ret
0x000000000011e806 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x0000000000052f1d : sal byte ptr [rbp - 0x1b], 0xe9 ; retf
0x000000000009f4e8 : sal byte ptr [rbp - 0x1b], 1 ; xor eax, eax ; ret
0x00000000000c8ab9 : sal byte ptr [rbp - 0x1c], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008c5fb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000c2037 : sal byte ptr [rbp - 0x21], cl ; ret
0x00000000001164f1 : sal byte ptr [rbp - 0x24], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008a7f3 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000032363 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000e8c75 : sal byte ptr [rbp - 0x28], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e8cd6 : sal byte ptr [rbp - 0x29], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000c1d6f : sal byte ptr [rbp - 0x2b], cl ; xor eax, eax ; ret
0x00000000001499fd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x000000000009f6b2 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00000000001499f5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000000840fd : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x000000000014d4cd : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x00000000000f44ce : sal byte ptr [rbp - 0x51], 0x4c ; mov edi, ebp ; call 0x207b0
0x00000000001044b1 : sal byte ptr [rbp - 0x54], 0x4c ; mov edi, esi ; call 0x207b0
0x000000000014d4c5 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000000fd116 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000008345a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000a0a0b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000fcc80 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x0000000000112bc2 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000e9a82 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000d49da : sal byte ptr [rbx + rbp*8 + 0x48], 0x63 ; push rsp ; retf
0x00000000000e9783 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000114e02 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000000fb964 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000ea1b5 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000011dd22 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x00000000001142ba : sal byte ptr [rbx + rcx*2 + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006bc5f : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000011544e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000006d67a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x00000000000e8ca3 : sal byte ptr [rbx + rsi + 0x48], 0x89 ; ret
0x000000000005339e : sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000008a6be : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x000000000017c078 : sal byte ptr [rcx + 0x62400000], 1 ; in eax, dx ; jmp qword ptr [rax]
0x00000000000c93cd : sal byte ptr [rcx + rax*2 - 0x7d], 0xc5 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002fcdc : sal byte ptr [rcx + rbp + 0x48], 0x83 ; ret 0xeb04
0x000000000005a304 : sal byte ptr [rcx + rbp + 0x48], 0x8b ; adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000edf39 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x0000000000093bec : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000ff61c : sal byte ptr [rcx + rdx + 0x4c], 0x89 ; retf -0x76b7
0x000000000017ded4 : sal byte ptr [rcx], 0xf5 ; call rax
0x00000000000fc686 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000002813e : sal byte ptr [rcx], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000e5eb3 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0xb3 ; ret
0x000000000006d1dd : sal byte ptr [rcx], cl ; ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x00000000000e1ce1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x000000000003463c : sal byte ptr [rcx], cl ; test byte ptr [rcx + rcx*4 - 0x39], 0x44 ; mov eax, ecx ; syscall
0x00000000000f98fb : sal byte ptr [rdi + 0x48], 0x83 ; ret
0x00000000000bd5b8 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001074d6 : sal byte ptr [rdi + rbp*2 + 0x48], 0x83 ; ret
0x000000000010f666 : sal byte ptr [rdi + rbx + 0x48], 0x83 ; ret
0x000000000010feb8 : sal byte ptr [rdi + rbx*4 + 0x48], 0x83 ; ret
0x0000000000030c20 : sal byte ptr [rdi], 1 ; add byte ptr [rcx - 0x77], cl ; ret 0x49e9
0x0000000000093dbb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000c8a5b : sal byte ptr [rdx + rbx*8 + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000094133 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000098933 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000008e6ab : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000e8c43 : sal byte ptr [rdx + rsi + 0x48], 0x89 ; ret
0x00000000000fc5ac : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000184950 : sal byte ptr [rdx], 0xeb ; call qword ptr [rsi]
0x0000000000122aa7 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x0000000000119c2a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x119c48 ; call rax
0x000000000011e88a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x11e8a8 ; call rax
0x000000000011eed3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x11eef1 ; call rax
0x000000000011b7ce : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x11b844 ; call rax
0x000000000011c1ee : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x11c254 ; call rax
0x00000000000ff507 : sal byte ptr [rsi + rdx + 0x48], 0x39 ; retf -0x168b
0x00000000000f98a7 : sal byte ptr [rsi + rdx + 0x48], 0x83 ; ret
0x000000000017ae3c : sal byte ptr [rsi - 0x49af0005], 0xfb ; jmp rax
0x0000000000023f39 : sal byte ptr [rsp + rbp + 0x48], 0x83 ; ret
0x0000000000083d71 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000f1e02 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000199761 : sal ch, 1 ; call rsi
0x0000000000110367 : sal dh, 1 ; ret
0x000000000016c8c5 : sal dl, 1 ; call rax
0x0000000000191779 : sal dl, 1 ; call rsi
0x000000000016c8c1 : sal dl, 1 ; jmp qword ptr [rax - 0x2f000d30]
0x000000000016c8bd : sal dl, 1 ; push qword ptr [rax - 0x30] ; jmp qword ptr [rax - 0x2f000d30]
0x000000000016c905 : sal dl, cl ; call qword ptr [rax]
0x000000000016c931 : sal dl, cl ; call rax
0x000000000016c92d : sal dl, cl ; inc eax ; sal dl, cl ; call rax
0x000000000016c909 : sal dl, cl ; jmp qword ptr [rax]
0x000000000016c935 : sal dl, cl ; push rax ; sal dl, cl ; call qword ptr [rax]
0x00000000000fd153 : sal dword ptr [rax], 1 ; sub eax, dword ptr [rax] ; test rax, rax ; je 0xfd169 ; ret
0x0000000000043e0f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000085f5a : sal dword ptr [rbp - 0xd], 1 ; ret
0x0000000000120b44 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000009f692 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x0000000000120a2b : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x120a49 ; ret
0x000000000008a5f7 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000010bc05 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000108419 : sal dword ptr [rcx], cl ; fild dword ptr [rbx - 0x6bf0fe03] ; ret
0x00000000000554aa : sal dword ptr [rdi + rdx - 0x7d], -0x43 ; hlt ; idiv bh ; call qword ptr [rax]
0x0000000000026856 : sal dword ptr [rsi - 0x29], 0x2d ; ret 0
0x000000000004151c : sal dword ptr [rsi], 1 ; add byte ptr [rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x000000000008a849 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x8a848 ; ret
0x000000000009da53 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001a1cb1 : sal edi, 1 ; call qword ptr [rdx]
0x000000000016c8f5 : sal edx, 1 ; call rax
0x000000000016c901 : sal edx, 1 ; inc dword ptr [rax] ; sal dl, cl ; call qword ptr [rax]
0x000000000016c8f1 : sal edx, 1 ; inc eax ; sal edx, 1 ; call rax
0x000000000016c8f9 : sal edx, 1 ; jmp rax
0x000000000016c959 : sal edx, cl ; call qword ptr [rax]
0x000000000016c951 : sal edx, cl ; call rax
0x000000000016c955 : sal edx, cl ; push rax ; sal edx, cl ; call qword ptr [rax]
0x000000000016b35c : sal esi, 1 ; out dx, al ; jmp rsp
0x0000000000194ea9 : sal esp, 1 ; jmp qword ptr [rcx]
0x0000000000194ea8 : sal rsp, 1 ; jmp qword ptr [rcx]
0x000000000017c5a1 : salc ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x11], bl ; call rax
0x000000000017c5a9 : salc ; add byte ptr [rax], al ; mov al, 0x5d ; out dx, eax ; call qword ptr [rax]
0x00000000001529a6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000017ee91 : salc ; add dword ptr [rax], eax ; and byte ptr [rcx - 9], ch ; jmp qword ptr [rax]
0x0000000000119bcb : salc ; add rdi, 0x10 ; jmp rcx
0x000000000012bab6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001592f1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fb5d9 : salc ; call rax
0x0000000000151faa : salc ; clc ; ret
0x0000000000180b35 : salc ; cli ; call rax
0x00000000000f7ebc : salc ; cmovne eax, ecx ; ret
0x0000000000003999 : salc ; jb 0x3a1b ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000c87ab : salc ; jne 0xc87b4 ; ret
0x0000000000070b70 : salc ; mov eax, 0xffffffff ; ja 0x70b89 ; ret
0x00000000000e1ded : salc ; mov eax, 4 ; syscall
0x00000000000e1e3c : salc ; mov eax, 5 ; syscall
0x00000000000e1e8d : salc ; mov eax, 6 ; syscall
0x0000000000001bf8 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000009f7c9 : salc ; mov rax, rdi ; ret
0x000000000002f8c9 : salc ; mov rdi, rbp ; mov eax, 3 ; syscall
0x00000000000afd1b : salc ; mov rdi, rbp ; sub rsp, 8 ; call r12
0x00000000000b82c5 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x0000000000002310 : salc ; ret
0x000000000000262a : salc ; ret 0x23cb
0x0000000000103bce : salc ; retf
0x0000000000081e12 : salc ; retf 0x32
0x0000000000001e86 : salc ; retf 0x559a
0x000000000011e7a4 : salc ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x11e7b9 ; ret
0x000000000018adc0 : sar ah, 0xee ; jmp qword ptr [rax]
0x000000000017a0b1 : sar ah, 0xff ; push rax ; ret 0xfffc
0x000000000017b13c : sar ah, 1 ; cld ; jmp qword ptr [rax]
0x000000000017f90d : sar al, 0xff ; adc byte ptr [rdi], 2 ; add al, dl ; ret 0xfff8
0x000000000017e95c : sar bh, 0xf6 ; call rax
0x0000000000079d76 : sar bh, 0xff ; mov esi, dword ptr [rsp + 0xc] ; jmp 0x79d4a
0x000000000006619c : sar bh, 1 ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x000000000006594a : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000065f1a : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000109010 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000190010 : sar bl, 1 ; int1 ; call qword ptr [rcx]
0x000000000018ff90 : sar bl, 1 ; int1 ; jmp qword ptr [rcx]
0x0000000000037e3b : sar byte ptr [rax + 0x13e], cl ; syscall
0x00000000000f20c3 : sar byte ptr [rax + 0x14], cl ; syscall
0x00000000000eb26c : sar byte ptr [rax + 0x1a], cl ; syscall
0x00000000000e1ba7 : sar byte ptr [rax + 0x1c], cl ; syscall
0x0000000000109e63 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x0000000000109ac1 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x00000000001255e2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000029fcb : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000c101f : sar byte ptr [rax + 1], cl ; ret
0x00000000001807b8 : sar byte ptr [rax + 2], 0 ; loopne 0x18082b ; cli ; call qword ptr [rax]
0x000000000002120a : sar byte ptr [rax + 2], cl ; syscall
0x000000000007c477 : sar byte ptr [rax + 6], 0xf3 ; ret
0x00000000000e674c : sar byte ptr [rax + 7], cl ; syscall
0x000000000007389c : sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000017a0dc : sar byte ptr [rax - 0x2a0f0004], 0xfc ; call rax
0x000000000017c170 : sar byte ptr [rax - 0x2b500000], 0xee ; jmp rax
0x000000000011c62c : sar byte ptr [rax - 0x3f], 0x83 ; clc ; add ecx, dword ptr [rax - 0x77] ; ret
0x000000000017d23c : sar byte ptr [rax], 0xf1 ; call rax
0x000000000017a3d8 : sar byte ptr [rbx + rdi*8], 1 ; call rax
0x00000000000f00f3 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x000000000017a0a4 : sar byte ptr [rbx - 0x428f0004], 1 ; cld ; call qword ptr [rax]
0x000000000016c708 : sar byte ptr [rbx], 0xf2 ; call rax
0x000000000017a478 : sar byte ptr [rbx], 1 ; sti ; call rax
0x000000000017ac24 : sar byte ptr [rcx - 0x46af0005], 0xfb ; jmp rax
0x00000000001496ba : sar byte ptr [rcx], 1 ; retf -0x6f8b
0x0000000000149476 : sar byte ptr [rcx], 1 ; retf -0x7af1
0x000000000014959a : sar byte ptr [rcx], 1 ; retf -0x7f8b
0x000000000017a474 : sar byte ptr [rcx], 1 ; sti ; call rax
0x000000000017ef6c : sar byte ptr [rdi - 9], 1 ; jmp qword ptr [rax]
0x00000000000cd0ad : sar byte ptr [rdx], 0xe ; je 0xcd04c ; pop rbx ; ret
0x000000000017a3d4 : sar byte ptr [rdx], 1 ; sti ; call rax
0x0000000000002be5 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x000000000017a47c : sar byte ptr [rip + 0x3060fffb], 1 ; sti ; jmp qword ptr [rax]
0x0000000000168a7f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000016b95c : sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rbx]
0x000000000016ddf8 : sar byte ptr [rsi*8 - 0xac32301], cl ; jmp rsi
0x000000000017d578 : sar byte ptr [rsi], 1 ; add dword ptr [rax], eax ; loopne 0x17d50a ; jmp qword ptr [rax]
0x000000000017d578 : sar byte ptr [rsi], 1 ; add dword ptr [rax], eax ; loopne 0x17d50b ; jmp qword ptr [rax]
0x000000000005e161 : sar cl, 0xff ; dec dword ptr [rax - 0x77] ; retf
0x00000000000273d5 : sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000077da2 : sar dword ptr [rax + 2], 1 ; syscall
0x0000000000151823 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x15182e ; ret
0x000000000014e009 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000032ee3 : sar eax, 0x10 ; ret
0x0000000000033579 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000e77dd : sar eax, 0x1f ; ret
0x0000000000032e9b : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003318d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003ba9 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000007097c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000733fa : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071069 : sar eax, 2 ; ret
0x0000000000100abd : sar eax, 6 ; ret
0x00000000001800e5 : sar ecx, 1 ; call rax
0x00000000001687e3 : sar ecx, 1 ; jnp 0x1687a4 ; ret
0x00000000000b31a9 : sar edi, 1 ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000808a6 : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000370a4 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000338ca : sar edx, 0x3f ; not edx ; and eax, edx ; ret
0x00000000000370b7 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000010d1c9 : sar edx, 4 ; add rdx, 1 ; syscall
0x0000000000180aed : sar edx, cl ; call rax
0x000000000008e857 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000152473 : sar esi, 1 ; jg 0x1524a3 ; vzeroupper ; ret
0x000000000015260c : sar esi, 1 ; jg 0x15263c ; vzeroupper ; ret
0x000000000007097b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003318c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000071068 : sar rax, 2 ; ret
0x0000000000100abc : sar rax, 6 ; ret
0x00000000000338c9 : sar rdx, 0x3f ; not edx ; and eax, edx ; ret
0x000000000010d1c8 : sar rdx, 4 ; add rdx, 1 ; syscall
0x000000000008e856 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000026fd : sbb ah, cl ; mov ah, 0xf4 ; out -0x21, eax ; syscall
0x00000000001810d4 : sbb al, 0 ; add byte ptr [rax], al ; call 0xffffffffe117fad7
0x00000000000e1ba9 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014774a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001476a3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000000fb5de : sbb al, 0x20 ; je 0xfb646 ; xor eax, eax ; pop rbx ; ret
0x00000000000fb5dd : sbb al, 0x20 ; je 0xfb647 ; xor eax, eax ; pop rbx ; ret
0x00000000001a34d4 : sbb al, 0x24 ; add al, byte ptr [rax] ; pop rax ; and eax, edi ; call qword ptr [rax]
0x00000000000bbc4c : sbb al, 0x2f ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x0000000000001f38 : sbb al, 0x3a ; jrcxz 0x1fb9 ; retf 0x6321
0x0000000000194fd4 : sbb al, 0x3f ; add dword ptr [rax], eax ; cmp dl, dl ; hlt ; jmp qword ptr [rcx]
0x00000000001954d4 : sbb al, 0x44 ; add dword ptr [rax], eax ; clc ; xor al, 0xf9 ; call qword ptr [rax]
0x000000000000300c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00000000001989d4 : sbb al, 0x79 ; add dword ptr [rax], eax ; test al, 0x99 ; cmc ; jmp rsi
0x00000000000ea4b3 : sbb al, 0x83 ; ret
0x0000000000002d97 : sbb al, 0x89 ; and byte ptr [rax - 0xc0713e4], bh ; ret
0x000000000006c8e3 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x0000000000169ae2 : sbb al, 0x8c ; retf
0x0000000000003b23 : sbb al, 0xb ; push rbp ; jg 0x3b98 ; xchg eax, ebp ; retf 0x10bf
0x00000000000c8523 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010f7d1 : sbb al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000012839b : sbb al, 0xb8 ; retf 0
0x00000000000ae09c : sbb al, 0xbd ; add eax, dword ptr [rax] ; add cl, ch ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x000000000017b5d5 : sbb al, 0xeb ; call rax
0x0000000000002d9b : sbb al, 0xec ; clc ; ret
0x000000000018fed4 : sbb al, 0xee ; add byte ptr [rax], al ; clc ; cli ; int1 ; jmp rcx
0x00000000001963d9 : sbb al, 0xf5 ; jmp qword ptr [rcx]
0x000000000017ea7d : sbb al, 0xf7 ; call qword ptr [rax]
0x000000000017ea75 : sbb al, 0xf7 ; dec eax ; ret
0x000000000017a4e9 : sbb al, 0xfb ; call qword ptr [rax - 0x1f0004e3]
0x000000000004e98d : sbb al, 0xfd ; dec dword ptr [rax + 0x29] ; ret
0x000000000017f37d : sbb al, bh ; call qword ptr [rax]
0x00000000000eb26e : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000014792a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010bae0 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000009f7bc : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000017f989 : sbb al, byte ptr [rdx] ; add byte ptr [rax - 0x2c], ah ; clc ; jmp rax
0x00000000001a2b4d : sbb al, byte ptr [rdx] ; add byte ptr [rax], dh ; insd dword ptr [rdi], dx ; sti ; jmp qword ptr [rdx]
0x0000000000147929 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007f5e2 : sbb al, ch ; pop rax ; ret 0xffff
0x00000000000f0253 : sbb al, ch ; push rdi ; retf 0
0x00000000000427f7 : sbb al, ch ; ret
0x000000000003f23f : sbb al, ch ; retf
0x00000000000ede40 : sbb al, ch ; retf -0x32e
0x000000000017f37c : sbb al, dil ; call qword ptr [rax]
0x000000000017f234 : sbb bh, 0xf7 ; call qword ptr [rax]
0x00000000000c84da : sbb bh, byte ptr [rax + 2] ; ret
0x000000000019a728 : sbb bh, ch ; sti ; jmp qword ptr [rsi]
0x000000000018032d : sbb bh, dl ; call rax
0x000000000016c658 : sbb bl, 0xfb ; jmp qword ptr [rax]
0x0000000000168872 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x0000000000167565 : sbb bl, byte ptr [rsi] ; ret
0x000000000017b555 : sbb bl, ch ; call qword ptr [rax]
0x000000000018fd58 : sbb bl, ch ; int1 ; jmp qword ptr [rbx]
0x00000000000f7d9a : sbb byte ptr [r11 + 0x39481846], r9b ; retf -0x7bf1
0x00000000000bddd6 : sbb byte ptr [r11 + rcx*4 + 0x34], r9b ; sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000032551 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000074aae : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000127d6f : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000120aa1 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000000bc8a2 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000120db6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000009d094 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009d0b6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009d0f4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000cf250 : sbb byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000074aaf : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000082335 : sbb byte ptr [rax + 0x31], cl ; retf -0x76b8
0x000000000007c013 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000c9b53 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000f7d9e : sbb byte ptr [rax + 0x39], cl ; retf -0x7bf1
0x00000000000f7d9d : sbb byte ptr [rax + 0x39], r9b ; retf -0x7bf1
0x0000000000127d70 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000d8b30 : sbb byte ptr [rax + 0x63], cl ; ret 0xd539
0x0000000000072306 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x0000000000109798 : sbb byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000120aa2 : sbb byte ptr [rax + 1], bh ; ret
0x000000000008a99c : sbb byte ptr [rax + 1], cl ; clc ; mov qword ptr [rdi], rdx ; ret
0x000000000012255d : sbb byte ptr [rax + 1], cl ; ret
0x0000000000039b2f : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000115220 : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000000bbfc2 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000071b63 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf -0x418b
0x00000000000cbfdf : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007b737 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000dcee0 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000006d9a3 : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000112985 : sbb byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xf0dc
0x0000000000079101 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d975 : sbb byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x10 ; call rdi
0x00000000001223f0 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000083106 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000003b23f : sbb byte ptr [rax - 0x77], cl ; retf
0x00000000000b1338 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000071c62 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0xd9e9
0x00000000000b5f82 : sbb byte ptr [rax - 0x7bf0f706], al ; retf -0x2a
0x0000000000077141 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000bc8a3 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000d523e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000194018 : sbb byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x0000000000076450 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007b9bf : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x0000000000039cd3 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x74b8
0x000000000004c0a2 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000054a07 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000001266eb : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; sti ; ret 0xfffb
0x0000000000120db7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000d8fd1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001393ae : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010fbb0 : sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000075326 : sbb byte ptr [rax], al ; setne al ; ret
0x00000000000f22d3 : sbb byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000002494 : sbb byte ptr [rax], cl ; ret 0x5576
0x000000000009d095 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009d0b7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009d0f5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000123658 : sbb byte ptr [rbp + 0x39], cl ; ret
0x000000000017bd70 : sbb byte ptr [rbp + 0xd600000], 0xec ; call rax
0x0000000000087a78 : sbb byte ptr [rbp - 0x77], al ; ret 0x3845
0x0000000000087cac : sbb byte ptr [rbp - 0x77], al ; retf 0x3845
0x0000000000021e21 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000116bd4 : sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000000f7d9b : sbb byte ptr [rbx + 0x39481846], cl ; retf -0x7bf1
0x00000000000e2082 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000808c4 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000074a24 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048e99 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000074ac7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000114114 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x0000000000037bf7 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001812d8 : sbb byte ptr [rbx + 0xa950203], al ; ret
0x00000000000bddd7 : sbb byte ptr [rbx + rcx*4 + 0x34], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000007a737 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000187210 : sbb byte ptr [rbx - 0xff1b2fd], al ; add dword ptr [rdx], eax ; ret
0x000000000016dd54 : sbb byte ptr [rbx], bh ; cmc ; jmp qword ptr [rdx]
0x00000000000cf09e : sbb byte ptr [rcx + 0x39], al ; retf
0x000000000008a7cf : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000113d88 : sbb byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000000703cb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000121d1c : sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000047580 : sbb byte ptr [rcx + rcx*4 + 0x54], al ; and al, 8 ; call 0x43fe8
0x00000000000a0390 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000a0630 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000072e63 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000a08f8 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x0000000000075905 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf09a : sbb byte ptr [rcx - 0x3f], al ; sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x00000000000ca66e : sbb byte ptr [rcx - 0x3fcec7ba], cl ; ret
0x00000000000fbf9b : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x0000000000051e9e : sbb byte ptr [rcx - 0x7d], al ; in eax, dx ; add al, byte ptr [rcx] ; ret 0x2945
0x000000000009f7b1 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000025b7e : sbb byte ptr [rcx - 0xa], al ; ret 0x4c01
0x00000000001962d0 : sbb byte ptr [rcx], 0xf5 ; jmp qword ptr [rsi]
0x000000000019de10 : sbb byte ptr [rcx], 0xf7 ; call qword ptr [rcx]
0x00000000000e6d2c : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000123cd3 : sbb byte ptr [rcx], al ; je 0x123ce6 ; xor eax, eax ; ret
0x00000000000e7742 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000c7ac9 : sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000072eb7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000ff478 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000e4523 : sbb byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xdf ; call 0x20738
0x0000000000197b18 : sbb byte ptr [rdi - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000138ced : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000bd507 : sbb byte ptr [rdi], ch ; add bl, ch ; ret 0x8b48
0x0000000000069138 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000011ffa8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000120f4e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000002f4a3 : sbb byte ptr [rdi], cl ; retf -0x2d77
0x0000000000032df1 : sbb byte ptr [rdi], cl ; retf -0x36f1
0x00000000001150f8 : sbb byte ptr [rdi], cl ; retf 0x5389
0x0000000000032552 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000115868 : sbb byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000c5a8d : sbb byte ptr [rdi], cl ; xchg dword ptr [rcx + rax], ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000118117 : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0xffe9
0x0000000000002077 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x0000000000170854 : sbb byte ptr [rdx - 0x75cf0006], cl ; cli ; call rax
0x000000000017ea64 : sbb byte ptr [rdx], 0xf7 ; call qword ptr [rax]
0x000000000018032c : sbb byte ptr [rdx], 0xfa ; call rax
0x00000000001a28d5 : sbb byte ptr [rdx], al ; add byte ptr [rax - 0x1b], ch ; idiv edi ; ret
0x000000000010f334 : sbb byte ptr [rdx], ch ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000016cd44 : sbb byte ptr [rdx], dl ; call rdi
0x000000000010f333 : sbb byte ptr [rdx], r13b ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000f29ac : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000f29ab : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000196580 : sbb byte ptr [rsi], 0xf5 ; jmp qword ptr [rcx]
0x000000000017d0b8 : sbb byte ptr [rsi], 1 ; add al, al ; mov ch, 0xf0 ; call rax
0x000000000017b585 : sbb ch, bl ; jmp rax
0x0000000000196201 : sbb ch, dh ; call qword ptr [rsi]
0x0000000000196219 : sbb ch, dh ; jmp qword ptr [rcx]
0x00000000000c7ac6 : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001117e3 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000017d79c : sbb cl, byte ptr [rbx - 0xd] ; call qword ptr [rax]
0x000000000008443f : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x000000000009991f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014461d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014678d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014420d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000143d19 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144529 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b29a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014aaba : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014aeaa : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a6ca : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001472ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146acd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000143f9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001462ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000001442dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001445f9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a869 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001446c9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146e0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001465ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145dcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000146fad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014447d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000143c6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000014406d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014ad5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a57a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b68a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014454d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000143d3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014610d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143ddf : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014413d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146243 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146f43 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146a63 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b58b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001443ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147283 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146583 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001460a3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146da3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014adab : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a5cb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143e03 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000005a270 : sbb cl, ch ; ret
0x000000000017ea65 : sbb dh, bh ; call qword ptr [rax]
0x00000000000f9e0b : sbb dh, dh ; ret 0x7508
0x0000000000003562 : sbb dl, 0xcd ; retf
0x000000000019a468 : sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x0000000000085042 : sbb dl, cl ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000147a48 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000002ff42 : sbb dword ptr [rax + 1], ecx ; ret
0x00000000000c84b3 : sbb dword ptr [rax + 1], edi ; ret
0x00000000001144e3 : sbb dword ptr [rax - 0x76b80000], ecx ; ret
0x00000000000edf46 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x0000000000124e04 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000003c623 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x74b8
0x00000000001479d1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000058224 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xc71e
0x0000000000147a49 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f0a84 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000091a4e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c0e25 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x000000000009e48e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x000000000004bf21 : sbb dword ptr [rbx - 0x51f43], eax ; call qword ptr [rax]
0x0000000000049da7 : sbb dword ptr [rbx - 0x8bf43], eax ; call qword ptr [rax]
0x0000000000169e1d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000881c5 : sbb dword ptr [rcx + 0x38], eax ; retf -0x2e8c
0x000000000010bcda : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000f020a : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000001090a3 : sbb dword ptr [rdi + rsi*8 + 0x58948ff], ebp ; retf 0x2a48
0x000000000002fd70 : sbb dword ptr [rdi], ecx ; retf
0x000000000009b04e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cc3 : sbb dword ptr [rdx + 0x55], esp ; je 0x1cf5 ; ret
0x00000000001a29fd : sbb dword ptr [rdx], eax ; add al, dh ; out 0xf7, al ; jmp qword ptr [rcx]
0x000000000017f959 : sbb dword ptr [rdx], eax ; add al, dl ; retf
0x00000000001a29fc : sbb dword ptr [rdx], r8d ; add al, dh ; out 0xf7, al ; jmp qword ptr [rcx]
0x000000000014228c : sbb eax, -1 ; ret
0x00000000000fd634 : sbb eax, 0 ; leave ; ret
0x00000000000429b2 : sbb eax, 0x130370 ; mov rax, rbx ; pop rbx ; ret
0x000000000017b195 : sbb eax, 0x1f30fffd ; std ; jmp rax
0x00000000001594d0 : sbb eax, 0x25536b ; jne 0x1594c0 ; pop rbx ; ret
0x00000000000f2591 : sbb eax, 0x2b9daa ; pop rbx ; ret
0x0000000000168873 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000006835f : sbb eax, 0x41000081 ; mov edi, eax ; jmp 0x64e64
0x00000000000e6cab : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x00000000000999a9 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000fb5d2 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000009b10d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000000edfca : sbb eax, 0x84d58 ; mov rax, rbx ; pop rbx ; ret
0x0000000000138f2e : sbb eax, 0x894d0000 ; retf
0x0000000000002e69 : sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000005a4f2 : sbb eax, 0xa800001e ; or byte ptr [rdi], 0x85 ; ret 0
0x0000000000109aea : sbb eax, 0xb8fb6348 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000017f9e9 : sbb eax, 0xe8e00002 ; clc ; call rax
0x0000000000002d0a : sbb eax, 0xe9a3d0b9 ; rcl byte ptr [rbx - 0x7a], 1 ; retf -0x2fb1
0x000000000010ecca : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x00000000001477f1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147869 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000eb331 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000917fe : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001548b4 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x0000000000083fe9 : sbb eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f0c31 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001a2c4d : sbb eax, dword ptr [rdx] ; add byte ptr [rax + 0x6c], ah ; sti ; jmp qword ptr [rdx]
0x0000000000119e70 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000ccfd6 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x0000000000043b5a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000ccfa8 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x000000000014a027 : sbb eax, eax ; or eax, 1 ; ret
0x0000000000154375 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000017f3c5 : sbb eax, edi ; call qword ptr [rax]
0x000000000017b595 : sbb ebp, ebx ; call qword ptr [rax]
0x0000000000169988 : sbb ebp, ebx ; retf
0x00000000001231f2 : sbb ebp, ecx ; retf
0x00000000001962d1 : sbb ebp, esi ; jmp qword ptr [rsi]
0x00000000000e9785 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x00000000000533d0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000000b48fd : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000038c7 : sbb ecx, dword ptr [rdi - 0x7229c81] ; mov gs, word ptr [rbx] ; retf 0x707d
0x0000000000107801 : sbb ecx, dword ptr [rdi - 0x7cb7ffd6] ; ret 0xe801
0x0000000000069bd9 : sbb edi, dword ptr [rdx + 0x10] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000169719 : sbb edi, ebp ; retf
0x000000000019de11 : sbb edi, esi ; call qword ptr [rcx]
0x000000000017ea5d : sbb edi, esi ; inc eax ; ret 1
0x0000000000069b41 : sbb edx, 3 ; sub rdx, r12 ; syscall
0x00000000000ac161 : sbb edx, dword ptr [rbx + 0x1f0ffff8] ; add byte ptr [rcx], cl ; retf 0xb8
0x0000000000002623 : sbb esi, dword ptr [rdx] ; sahf ; jl 0x25be ; loop 0x2609 ; ret 0x23cb
0x0000000000196379 : sbb esi, ebp ; jmp qword ptr [rbx]
0x00000000000fd3ae : sbb esi, ebx ; ret
0x000000000018ee29 : sbb esi, ecx ; call qword ptr [rax]
0x000000000018ee41 : sbb esi, ecx ; call qword ptr [rdx]
0x000000000018ee11 : sbb esi, ecx ; jmp qword ptr [rax]
0x000000000019dfb1 : sbb esi, edi ; call qword ptr [rdi]
0x000000000019df99 : sbb esi, edi ; jmp qword ptr [rdx]
0x000000000017e0ed : sbb esi, esi ; jmp rax
0x0000000000022013 : sbb esp, esi ; cmp byte ptr [rax], al ; ret
0x000000000014228b : sbb rax, -1 ; ret
0x0000000000069b40 : sbb rdx, 3 ; sub rdx, r12 ; syscall
0x000000000014c1ef : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014beef : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014cdef : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000145772 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d0ef : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014b2ee : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000004145f : scasb al, byte ptr [rdi] ; call qword ptr [rdx]
0x000000000017a075 : scasb al, byte ptr [rdi] ; cld ; call qword ptr [rax]
0x000000000014c7ef : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000169dc9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000014c4ef : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x00000000000b432e : scasb al, byte ptr [rdi] ; ret
0x0000000000187709 : scasb al, byte ptr [rdi] ; retf
0x0000000000001d4c : scasb al, byte ptr [rdi] ; retf -0x6dda
0x000000000017ae79 : scasb al, byte ptr [rdi] ; sti ; call qword ptr [rax + 0x10fffbad]
0x000000000017ae75 : scasb al, byte ptr [rdi] ; sti ; call qword ptr [rax]
0x000000000017b075 : scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax + 0x20fffbad]
0x000000000017b071 : scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000017aef5 : scasb al, byte ptr [rdi] ; sti ; jmp rdx
0x000000000000300a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000014b3ed : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018c0b5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x18c127 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000c0f1c : scasd eax, dword ptr [rdi] ; add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x000000000016d99d : scasd eax, dword ptr [rdi] ; hlt ; push qword ptr [rdx - 0x3c] ; hlt ; call qword ptr [rdi]
0x0000000000186479 : scasd eax, dword ptr [rdi] ; in al, dx ; call qword ptr [rcx]
0x0000000000190fd9 : scasd eax, dword ptr [rdi] ; jmp rcx
0x0000000000100dff : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00000000000f44d0 : scasd eax, dword ptr [rdi] ; mov rdi, r13 ; call 0x207ae
0x000000000007836e : scasd eax, dword ptr [rdi] ; nop ; test rdx, rdx ; jne 0x78389 ; xor eax, eax ; ret
0x00000000001892f1 : scasd eax, dword ptr [rdi] ; out dx, al ; call rsp
0x0000000000071e0b : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000009e2c6 : scasd eax, dword ptr [rdi] ; ret 0x65e9
0x00000000000800f8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000009e2b1 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000154a13 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000357e6 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000032554 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f272d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000012244f : scasd eax, dword ptr [rdi] ; retf
0x00000000000f2731 : scasd eax, dword ptr [rdi] ; retf -0x3eb8
0x00000000000653ad : scasd eax, dword ptr [rdi] ; retf -1
0x00000000000f200c : scasd eax, dword ptr [rdi] ; retf 0x34c
0x00000000000f2955 : scasd eax, dword ptr [rdi] ; retf 0xf48
0x00000000000f2fbb : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000017ae71 : scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rax + 0x10fffbae]
0x000000000017ae6d : scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rax]
0x000000000017b06d : scasd eax, dword ptr [rdi] ; sti ; jmp qword ptr [rax + 0x20fffbae]
0x000000000017b069 : scasd eax, dword ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000017aeed : scasd eax, dword ptr [rdi] ; sti ; jmp rdx
0x0000000000126240 : scasd eax, dword ptr [rdi] ; sub byte ptr [rax], al ; mov eax, r14d ; syscall
0x0000000000002c2f : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6f031 ; ret
0x0000000000168af4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x0000000000167d6f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000c0f1b : scasq rax, qword ptr [rdi] ; add byte ptr cs:[rax - 0x39], cl ; ret 0xffff
0x000000000016d99c : scasq rax, qword ptr [rdi] ; hlt ; push qword ptr [rdx - 0x3c] ; hlt ; call qword ptr [rdi]
0x0000000000186478 : scasq rax, qword ptr [rdi] ; in al, dx ; call qword ptr [rcx]
0x00000000000f2a55 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000e3f78 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000fc68c : setae al ; ret
0x00000000000ba588 : setbe al ; movzx eax, al ; pop rbx ; ret
0x00000000000f3410 : setbe al ; ret
0x0000000000112b78 : sete al ; add rsp, 8 ; ret
0x00000000000c4438 : sete al ; movzx eax, al ; ret
0x000000000002cfd5 : sete al ; ret
0x00000000000e0f3a : setg al ; pop rbx ; ret
0x000000000009f4fa : setl al ; movzx eax, al ; neg eax ; ret
0x000000000011d182 : setne al ; add rsp, 0x78 ; ret
0x00000000000da080 : setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000d918b : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x0000000000069169 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000d916d : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000ec074 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000034c58 : setne al ; movzx eax, al ; ret
0x000000000011d120 : setne al ; neg eax ; add rsp, 0x18 ; ret
0x0000000000070bac : setne al ; neg eax ; ret
0x0000000000075328 : setne al ; ret
0x0000000000191ff5 : sgdt ptr [rax] ; fdiv st(2) ; jmp rcx
0x000000000016cae8 : shl bh, 0xf2 ; jmp rax
0x0000000000001ba0 : shl byte ptr [rax + 0x38f8d191], 1 ; pop rdx ; ret
0x0000000000149da4 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x000000000014999b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000017b344 : shl byte ptr [rax - 0x16], 1 ; jmp qword ptr [rax]
0x000000000014995b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000017abe0 : shl byte ptr [rbp - 5], 1 ; call qword ptr [rax]
0x000000000017ee54 : shl byte ptr [rbp - 9], 1 ; call rax
0x0000000000002d0c : shl byte ptr [rbx - 0x79ac2f17], 1 ; retf -0x2fb1
0x000000000017d56c : shl byte ptr [rbx - 0xe], 1 ; jmp qword ptr [rax]
0x000000000017a248 : shl byte ptr [rbx - 3], 0xff ; push rax ; std ; jmp rax
0x000000000019a330 : shl byte ptr [rbx], 0xf6 ; jmp qword ptr [rsi]
0x000000000017dab8 : shl byte ptr [rcx + rax], 1 ; push rax ; hlt ; call qword ptr [rax]
0x0000000000138aad : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000180b68 : shl byte ptr [rdx - 0x250fffff], 0xfa ; jmp rax
0x0000000000192510 : shl byte ptr [rdx - 0xd], 1 ; call qword ptr [rsi]
0x000000000017a4fc : shl byte ptr [rdx], 1 ; sti ; jmp qword ptr [rax]
0x000000000009d4cf : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000033257 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000008af4b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000152963 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000935e5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000015087b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000150892 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000093986 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000093997 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000008e4f8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000150771 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000197ad0 : shl byte ptr [rsi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000017a5bc : shl byte ptr [rsi - 5], 0xff ; push rax ; pop rcx ; sti ; call qword ptr [rax]
0x000000000017a508 : shl byte ptr [rsi], 0xfb ; call qword ptr [rax]
0x000000000016ca9c : shl ch, 0xf2 ; push rax ; in eax, -0xe ; jmp qword ptr [rax]
0x000000000016ca50 : shl dl, 0xf2 ; jmp rax
0x0000000000162db0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000016867d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000011d6cc : shl dword ptr [rcx], 1 ; retf -0x1d7f
0x0000000000168968 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000009d4b2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x00000000001507f6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009d32b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x00000000000aed89 : shl dword ptr [rsi + 0xf], -0x29 ; retf 0xf66
0x0000000000093982 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008af4f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000009e66b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x00000000001508ad : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000150896 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000015087f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014f33b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000150811 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008df2c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000008e718 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x00000000001506d1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007c223 : shl dword ptr [rsi], 1 ; xor eax, dword ptr [rax] ; jae 0x7c1e2 ; ret
0x00000000000eff7c : shl eax, 0x20 ; or rax, rsi ; ret
0x000000000010bf0a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000034bd3 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000440dc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000044067 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000044036 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000021130 : shl edi, 4 ; add rdi, rbp ; call rax
0x00000000000370f8 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x000000000010bd9b : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000010bf3c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000440db : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000044066 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000044035 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000eff7b : shl rax, 0x20 ; or rax, rsi ; ret
0x0000000000034bd2 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000002112f : shl rdi, 4 ; add rdi, rbp ; call rax
0x000000000010bf3b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000017f230 : shr ah, 1 ; add dword ptr [rax], eax ; sbb bh, 0xf7 ; call qword ptr [rax]
0x0000000000126788 : shr al, 0x62 ; ret 0xfffb
0x00000000000e5eb7 : shr al, 0xb3 ; ret
0x0000000000125e33 : shr al, 0xb7 ; retf
0x0000000000167f24 : shr al, cl ; add al, 0x3d ; retf
0x00000000000fc606 : shr ax, 0xe ; and eax, 1 ; ret
0x00000000001287a1 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000017bcdd : shr bl, cl ; jmp qword ptr [rax]
0x000000000017a09c : shr byte ptr [rax - 0x45cf0004], 0xfc ; call rax
0x000000000017bf18 : shr byte ptr [rax - 0x66a00000], 1 ; in al, dx ; jmp qword ptr [rax]
0x00000000000b5a42 : shr byte ptr [rcx - 0x40], 0x90 ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0xf40
0x000000000008c5ff : shr byte ptr [rcx], 0xc8 ; ret
0x000000000017fbf0 : shr byte ptr [rcx], 1 ; add al, byte ptr [rax] ; jo 0x17fc3d ; stc ; jmp qword ptr [rax]
0x000000000017f464 : shr byte ptr [rcx], 1 ; clc ; call rax
0x00000000000cab89 : shr byte ptr [rcx], 1 ; fadd dword ptr [rbx - 0x7bf0fe40] ; retf
0x00000000000aad8f : shr byte ptr [rcx], 1 ; ret
0x00000000000f7e86 : shr byte ptr [rcx], 1 ; retf -0x113f
0x000000000017a550 : shr byte ptr [rcx], 1 ; sti ; jmp qword ptr [rax]
0x0000000000029468 : shr byte ptr [rcx], cl ; ret
0x000000000008e85b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000e3f7d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000104549 : shr byte ptr [rdx], 0 ; add byte ptr [rax + rax], al ; add al, ch ; ret 0xfff1
0x0000000000169d27 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf -0x156f
0x000000000019e350 : shr byte ptr [rdx], 0xf7 ; call qword ptr [rbx]
0x000000000017c868 : shr cl, 0 ; add al, ah ; mov al, 0xef ; call qword ptr [rax]
0x000000000005ff61 : shr cl, 0x85 ; mov dl, 0xff ; dec dword ptr [rax - 0x77] ; retf 0x5be9
0x000000000016c61c : shr cl, 1 ; int1 ; inc eax ; retf
0x000000000017ca54 : shr cl, 1 ; out dx, eax ; call rax
0x0000000000157fc0 : shr cl, 1 ; ret
0x00000000000dca03 : shr cl, 1 ; ret 0xfff8
0x000000000016cb78 : shr dl, 0xf2 ; call rax
0x0000000000191ea0 : shr dl, 0xf2 ; jmp qword ptr [rcx]
0x000000000017f1f8 : shr dl, 1 ; add al, ah ; sal bh, cl ; call qword ptr [rax]
0x000000000016cb7c : shr dl, 1 ; jmp rax
0x0000000000029d49 : shr dword ptr [rax + 0x41], 0x39 ; ret
0x00000000000b56f1 : shr dword ptr [rcx], cl ; ret
0x0000000000100ea8 : shr eax, 0x18 ; ret
0x0000000000032efb : shr eax, 0x1f ; ret
0x000000000015173c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x15174f ; xor eax, eax ; ret
0x0000000000154a16 : shr eax, 0x38 ; ret
0x00000000000331c0 : shr eax, 0x3f ; ret
0x000000000009df4a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000fc607 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000af11b : shr eax, 2 ; ret
0x000000000014ee43 : shr eax, 2 ; vzeroupper ; ret
0x00000000000cd095 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x0000000000075eb2 : shr eax, 4 ; and eax, 1 ; ret
0x000000000010bf10 : shr eax, 4 ; ret
0x0000000000075ec2 : shr eax, 5 ; and eax, 1 ; ret
0x000000000009df29 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000001287df : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000eff23 : shr eax, 8 ; or eax, edi ; ret
0x00000000000f31ab : shr eax, cl ; and eax, 1 ; ret
0x00000000000bdd17 : shr eax, cl ; ret
0x00000000000838ea : shr ebx, -0x69 ; xor eax, eax ; ret
0x000000000017bbc5 : shr ebx, -1 ; push rax ; xchg eax, esp ; add byte ptr [rax], al ; nop ; ret 0xffeb
0x00000000000c6035 : shr ebx, 1 ; ret
0x00000000001566bc : shr ecx, 1 ; retf -6
0x0000000000127791 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000007ff3a : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000034ae7 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000441ec : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000044171 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000044140 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000018d701 : shr edi, 1 ; jmp qword ptr [rax]
0x0000000000070a23 : shr edx, 2 ; sub eax, edx ; ret
0x000000000012144a : shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000073760 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000073860 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002cb19 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2cb30 ; ret
0x0000000000189f51 : shr esi, cl ; call qword ptr [rax]
0x00000000000441eb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000044170 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000004413f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000157fbf : shr r9b, 1 ; ret
0x0000000000154a15 : shr rax, 0x38 ; ret
0x00000000000331bf : shr rax, 0x3f ; ret
0x00000000000af11a : shr rax, 2 ; ret
0x000000000014ee42 : shr rax, 2 ; vzeroupper ; ret
0x000000000010bf0f : shr rax, 4 ; ret
0x00000000000eff22 : shr rax, 8 ; or eax, edi ; ret
0x0000000000070a22 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000121449 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000045505 : sldt word ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0xc129
0x000000000010de11 : sldt word ptr [rax] ; add byte ptr [rbx + 0x4f0f0ff8], al ; ret 0x8589
0x00000000000d9fee : sldt word ptr [rax] ; add byte ptr [rsp + rcx*2 - 0xd], dh ; ret
0x0000000000161f89 : sldt word ptr [rax] ; ret
0x0000000000058a3a : stc ; add al, byte ptr [rcx] ; retf -0x2fd7
0x000000000009f906 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000011586b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000145727 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009f28a : stc ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000017caa9 : stc ; add byte ptr [rax], al ; jo 0x17caa8 ; out dx, eax ; jmp qword ptr [rax]
0x000000000009f9c8 : stc ; add cl, byte ptr [rax + 0x29] ; retf -0x7ab8
0x000000000009fa6c : stc ; add cl, byte ptr [rax + 0x29] ; retf 0x57e9
0x000000000009fa4c : stc ; add cl, byte ptr [rax + 0x29] ; retf 0x77e9
0x00000000000377a7 : stc ; add dword ptr [rbp - 0x77], ecx ; retf
0x000000000010ba11 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x000000000007b401 : stc ; add dword ptr [rdi + rcx + 0x44], eax ; retf 0x2a8
0x00000000000b33e9 : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x2941
0x00000000000c56d4 : stc ; and al, 0xf ; xchg eax, esp ; ret 0x394c
0x0000000000128c13 : stc ; and al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000002e4a3 : stc ; and bh, bh ; dec dword ptr [rax - 0x77] ; ret 0xd3e9
0x00000000000e91fe : stc ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8041
0x000000000010eccc : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000000a75b2 : stc ; call 0x43fe3
0x000000000017d61d : stc ; call qword ptr [rax]
0x000000000018b9fa : stc ; call qword ptr [rcx]
0x000000000017faa6 : stc ; call rax
0x00000000000a08fe : stc ; call rbx
0x00000000000296f3 : stc ; cmp byte ptr [rax], al ; ret
0x00000000001126aa : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000180206 : stc ; dec dword ptr [rax + 0x257] ; cmc ; stc ; call rax
0x000000000008aeec : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fdd1c : stc ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000fdee1 : stc ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000084d90 : stc ; dec dword ptr [rax + 1] ; ret
0x0000000000082626 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000086bd5 : stc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000084cf3 : stc ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000e977f : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000085e7f : stc ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000017fc6e : stc ; dec dword ptr [rax] ; sub eax, 0x49200002 ; stc ; jmp qword ptr [rax]
0x00000000000fdc7e : stc ; dec dword ptr [rbx + 0xa891] ; add bh, dh ; ret 0
0x00000000000a61bb : stc ; dec dword ptr [rbx + rcx*4 + 0x7d] ; add byte ptr [rax - 0x39], cl ; ret 0xff81
0x00000000000838e6 : stc ; dec dword ptr [rcx - 0x77] ; shr ebx, -0x69 ; xor eax, eax ; ret
0x000000000002be7f : stc ; dec dword ptr [rdi] ; retf 0xd88
0x00000000001801de : stc ; dec eax ; push rsi ; add al, byte ptr [rax] ; and cl, dh ; stc ; jmp rax
0x00000000001800a6 : stc ; inc dword ptr [rax + 0x4000024d] ; ret
0x000000000017fbe6 : stc ; inc dword ptr [rax - 0x5ffffdd7] ; cmp al, 0xf9 ; call rax
0x0000000000180256 : stc ; inc eax ; pop rcx ; add al, byte ptr [rax] ; nop ; std ; stc ; call qword ptr [rax]
0x000000000017fcee : stc ; inc eax ; xor byte ptr [rdx], al ; add al, dl ; pop rdi ; stc ; call qword ptr [rax]
0x000000000014a3a2 : stc ; je 0x14a36e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014ba32 : stc ; je 0x14b9fe ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000017fa86 : stc ; jmp qword ptr [rax]
0x000000000017fbb6 : stc ; jmp rax
0x00000000001687e4 : stc ; jnp 0x1687a3 ; ret
0x0000000000085264 : stc ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008314b : stc ; lea esi, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000001800de : stc ; ljmp ptr [rax + 0x4f] ; add al, byte ptr [rax] ; xor cl, dl ; stc ; call rax
0x000000000017ffb6 : stc ; ljmp ptr [rax - 0x5ffffdb9] ; stosd dword ptr [rdi], eax ; stc ; jmp rax
0x000000000017fbae : stc ; ljmp ptr [rax - 0x5ffffdd9] ; sub ecx, edi ; jmp rax
0x000000000005f3d2 : stc ; loopne 0x5f3da ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000012e298 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000e1f49 : stc ; mov eax, 0x103 ; syscall
0x0000000000121b7b : stc ; mov eax, 3 ; syscall
0x000000000017cf34 : stc ; mov eax, dr0 ; call rax
0x00000000000ab288 : stc ; mov rdx, r13 ; mov rsi, r14 ; call rbx
0x00000000000dc547 : stc ; or byte ptr [rax - 0x77], cl ; retf -0x7cf1
0x00000000000d91cb : stc ; or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x000000000012b057 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017c265 : stc ; out dx, al ; jmp rax
0x000000000004422d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009f9ed : stc ; push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x00000000000f29f3 : stc ; retf 0x2b
0x0000000000151fa9 : stc ; salc ; clc ; ret
0x00000000000cf099 : stc ; sbb byte ptr [rcx - 0x3f], al ; sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x00000000000f31aa : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000151d24 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000014a0a7 : stc ; xlatb ; ret 0xff2d
0x0000000000083c45 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000c0dde : std ; add byte ptr [rax], al ; jne 0xc0db1 ; ret
0x000000000010841d : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000017a256 : std ; call qword ptr [rax]
0x000000000017a186 : std ; call qword ptr [rcx]
0x000000000017a146 : std ; call qword ptr [rdx]
0x000000000017a1a2 : std ; call qword ptr [rsi]
0x0000000000180dfe : std ; call rax
0x000000000017fa3d : std ; clc ; call rax
0x0000000000048cce : std ; dec dword ptr [rax + 0x29] ; ret
0x0000000000042843 : std ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x00000000000e18d4 : std ; dec dword ptr [rax - 0x7d] ; retf -0x7601
0x0000000000074967 : std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000180e96 : std ; dec dword ptr [rax] ; xor dword ptr [rcx], eax ; add byte ptr [rax], dh ; outsd dx, dword ptr [rsi] ; std ; jmp qword ptr [rax]
0x0000000000180f36 : std ; dec eax ; mov es, word ptr [rdx] ; add byte ptr [rax - 0x29], dl ; std ; jmp rax
0x0000000000180d76 : std ; dec eax ; sub eax, dword ptr [rcx] ; add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x000000000000393d : std ; fld xword ptr [rsi + 0x7a697efd] ; retf -0x513c
0x000000000003303d : std ; fstp st(1) ; ret
0x0000000000180fce : std ; inc dword ptr [rax + 0x400000f1] ; loop 0x180fdd ; call rax
0x000000000017a142 : std ; inc dword ptr [rdx + 0x5e] ; std ; call qword ptr [rdx]
0x000000000017a1d6 : std ; inc dword ptr [rsi + 0x66] ; std ; jmp rsi
0x0000000000056f59 : std ; inc esi ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000001079eb : std ; jbe 0x1079f3 ; ret
0x0000000000149be0 : std ; je 0x149c49 ; and ch, al ; std ; xlatb ; ret
0x0000000000149cce : std ; je 0x149d37 ; and ch, al ; std ; xlatb ; ret
0x000000000006d5eb : std ; je 0x6d5ff ; mov eax, esi ; syscall
0x0000000000180d56 : std ; jmp qword ptr [rax]
0x00000000001822f2 : std ; jmp qword ptr [rdi]
0x0000000000181772 : std ; jmp qword ptr [rdx]
0x000000000017a222 : std ; jmp rax
0x000000000017a1a6 : std ; jmp rsi
0x00000000000e246f : std ; mov eax, 0x101 ; syscall
0x00000000000bb016 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000002f3e4 : std ; mov eax, 3 ; syscall
0x00000000000e2edf : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000012dabb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000017a252 : std ; push qword ptr [rax + 0x65] ; std ; call qword ptr [rax]
0x000000000017a2aa : std ; push rcx ; je 0x17a2b1 ; call qword ptr [rcx]
0x000000000017a2a6 : std ; push rcx ; je 0x17a2b1 ; push rcx ; je 0x17a2b5 ; call qword ptr [rcx]
0x000000000017a2ca : std ; push rcx ; je 0x17a2d1 ; call qword ptr [rcx]
0x000000000017a2c6 : std ; push rcx ; je 0x17a2d1 ; push rcx ; je 0x17a2d5 ; call qword ptr [rcx]
0x000000000009d9d3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000016971a : std ; retf
0x00000000000f667f : std ; retf 1
0x000000000012623f : std ; scasd eax, dword ptr [rdi] ; sub byte ptr [rax], al ; mov eax, r14d ; syscall
0x000000000018025d : std ; stc ; call qword ptr [rax]
0x000000000018e549 : std ; sti ; call qword ptr [rbx]
0x0000000000149a01 : std ; xlatb ; ret
0x00000000001499f9 : std ; xlatb ; ret 0xc085
0x0000000000149ee3 : std ; xlatb ; ret 0xe883
0x000000000014d714 : std ; xlatb ; retf -0x23b
0x000000000014d841 : std ; xlatb ; retf -0x367b
0x000000000014d774 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000007c473 : std ; xor al, byte ptr [rax] ; test eax, eax ; js 0x7c488 ; ret
0x0000000000021174 : sti ; adc al, 0 ; ret
0x00000000000bfec7 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000083f91 : sti ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000027813 : sti ; add dword ptr [rax + 0x63], ecx ; ret
0x00000000001a0c25 : sti ; add dword ptr [rax], eax ; js 0x1a0bd2 ; idiv edi ; retf
0x000000000017aba2 : sti ; call qword ptr [rax + 0x10fffb66]
0x000000000017abe6 : sti ; call qword ptr [rax + 0x10fffb68]
0x000000000017abaa : sti ; call qword ptr [rax + 0x10fffb69]
0x000000000017abee : sti ; call qword ptr [rax + 0x10fffb6b]
0x000000000017abb2 : sti ; call qword ptr [rax + 0x10fffb6c]
0x000000000017abf6 : sti ; call qword ptr [rax + 0x10fffb6e]
0x000000000017abba : sti ; call qword ptr [rax + 0x10fffb6f]
0x000000000017abfe : sti ; call qword ptr [rax + 0x10fffb71]
0x000000000017abc2 : sti ; call qword ptr [rax + 0x10fffb72]
0x000000000017ac06 : sti ; call qword ptr [rax + 0x10fffb74]
0x000000000017abca : sti ; call qword ptr [rax + 0x10fffb75]
0x000000000017ac0e : sti ; call qword ptr [rax + 0x10fffb77]
0x000000000017abd2 : sti ; call qword ptr [rax + 0x10fffb78]
0x000000000017ac16 : sti ; call qword ptr [rax + 0x10fffb7a]
0x000000000017ab46 : sti ; call qword ptr [rax + 0x10fffb85]
0x000000000017ab3e : sti ; call qword ptr [rax + 0x10fffb86]
0x000000000017ab36 : sti ; call qword ptr [rax + 0x10fffb87]
0x000000000017ab2e : sti ; call qword ptr [rax + 0x10fffb88]
0x000000000017ae8a : sti ; call qword ptr [rax + 0x10fffbab]
0x000000000017ae82 : sti ; call qword ptr [rax + 0x10fffbac]
0x000000000017ae7a : sti ; call qword ptr [rax + 0x10fffbad]
0x000000000017ae72 : sti ; call qword ptr [rax + 0x10fffbae]
0x000000000017ae6a : sti ; call qword ptr [rax + 0x10fffbaf]
0x000000000017a49a : sti ; call qword ptr [rax + 0x20fffb3d]
0x000000000017a5da : sti ; call qword ptr [rax + 0x20fffb66]
0x000000000017a956 : sti ; call qword ptr [rax + 0x20fffb8d]
0x000000000017a73e : sti ; call qword ptr [rax + 0x20fffb90]
0x000000000017ae4e : sti ; call qword ptr [rax + 0x20fffbb4]
0x000000000017ac36 : sti ; call qword ptr [rax + 0x20fffbb7]
0x000000000017a70a : sti ; call qword ptr [rax - 0x1f0004b0]
0x000000000017a6b6 : sti ; call qword ptr [rax - 0x1f0004b7]
0x000000000017a53e : sti ; call qword ptr [rax - 0x1f0004dc]
0x000000000017a4ea : sti ; call qword ptr [rax - 0x1f0004e3]
0x000000000017abda : sti ; call qword ptr [rax - 0x2f000485]
0x000000000016c6d6 : sti ; call qword ptr [rax]
0x000000000018e54a : sti ; call qword ptr [rbx]
0x000000000018e12a : sti ; call qword ptr [rdi]
0x000000000017a7ea : sti ; call qword ptr [rdx + 0x22fffb92]
0x000000000017ace2 : sti ; call qword ptr [rdx + 0x22fffbb9]
0x000000000017a80a : sti ; call qword ptr [rdx]
0x000000000017a786 : sti ; call qword ptr [rsi + 0x26fffb8f]
0x000000000017ac7e : sti ; call qword ptr [rsi + 0x26fffbb6]
0x000000000017a75e : sti ; call qword ptr [rsi]
0x00000000000dbf1a : sti ; call r14
0x000000000016c6a6 : sti ; call rax
0x000000000017a7fa : sti ; call rdx
0x000000000017a796 : sti ; call rsi
0x000000000017a8c2 : sti ; call rsp
0x000000000017b139 : sti ; cld ; call rax
0x00000000000ece38 : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000006bc5b : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006d676 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000006b313 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000180c5e : sti ; dec eax ; sub byte ptr [rcx], al ; add byte ptr [rax + 0x5d], al ; sti ; jmp rax
0x000000000007d7c1 : sti ; in eax, 0x32 ; add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x000000000017a41a : sti ; inc dword ptr [rax + 0x10fffb3e] ; xor ebx, edi ; call rax
0x000000000017a4e6 : sti ; inc dword ptr [rax + 0x1c] ; sti ; call qword ptr [rax - 0x1f0004e3]
0x000000000016c656 : sti ; inc dword ptr [rax + 0x20fffbdb] ; retf
0x000000000017a53a : sti ; inc dword ptr [rax + 0x23] ; sti ; call qword ptr [rax - 0x1f0004dc]
0x000000000017a3fe : sti ; inc dword ptr [rax + 0x31] ; sti ; inc dword ptr [rax] ; xor edi, ebx ; jmp rax
0x000000000017a3c2 : sti ; inc dword ptr [rax + 0x33] ; sti ; jmp qword ptr [rax]
0x000000000017a466 : sti ; inc dword ptr [rax + 0x34] ; sti ; jmp qword ptr [rax]
0x000000000017a44e : sti ; inc dword ptr [rax + 0x38] ; sti ; call qword ptr [rax]
0x000000000017a3be : sti ; inc dword ptr [rax + 0x40fffb31] ; xor edi, ebx ; jmp qword ptr [rax]
0x000000000017a6b2 : sti ; inc dword ptr [rax + 0x48] ; sti ; call qword ptr [rax - 0x1f0004b7]
0x000000000017a706 : sti ; inc dword ptr [rax + 0x4f] ; sti ; call qword ptr [rax - 0x1f0004b0]
0x000000000017a566 : sti ; inc dword ptr [rax + 0x5d] ; sti ; jmp qword ptr [rax]
0x000000000017a68e : sti ; inc dword ptr [rax + 0x5f] ; sti ; call qword ptr [rax]
0x000000000017a8be : sti ; inc dword ptr [rax + rdx*4 - 5] ; call rsp
0x000000000017a6c2 : sti ; inc dword ptr [rax - 0x2f0004b3] ; sti ; jmp qword ptr [rax]
0x000000000017a54a : sti ; inc dword ptr [rax - 0x2f0004d8] ; sub ebx, edi ; jmp qword ptr [rax]
0x000000000017a4f6 : sti ; inc dword ptr [rax - 0x2f0004df] ; and bh, bl ; jmp qword ptr [rax]
0x000000000017ac42 : sti ; inc dword ptr [rax - 0x4a] ; sti ; call rax
0x000000000017ae5a : sti ; inc dword ptr [rax - 0x4d] ; sti ; jmp rax
0x000000000017a922 : sti ; inc dword ptr [rax - 0x6d] ; sti ; call rax
0x000000000017a74a : sti ; inc dword ptr [rax - 0x71] ; sti ; call rax
0x000000000017a416 : sti ; inc dword ptr [rax - 0x7f0004c4] ; sti ; call qword ptr [rax]
0x000000000017a46e : sti ; inc dword ptr [rax] ; cmp bl, bh ; call rax
0x000000000017ae4a : sti ; inc dword ptr [rax] ; mov ch, 0xfb ; call qword ptr [rax + 0x20fffbb4]
0x000000000017a952 : sti ; inc dword ptr [rax] ; mov dr1, ebx ; call qword ptr [rax + 0x20fffb8d]
0x000000000017ac32 : sti ; inc dword ptr [rax] ; mov eax, 0xb790fffb ; sti ; jmp qword ptr [rax]
0x000000000017ab52 : sti ; inc dword ptr [rax] ; test bh, bl ; push qword ptr [rax - 0x7d] ; sti ; jmp rax
0x000000000017a73a : sti ; inc dword ptr [rax] ; xchg eax, ecx ; sti ; call qword ptr [rax + 0x20fffb90]
0x000000000016c646 : sti ; inc dword ptr [rax] ; xlatb ; sti ; jmp qword ptr [rax]
0x000000000017a486 : sti ; inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x000000000017a402 : sti ; inc dword ptr [rax] ; xor edi, ebx ; jmp rax
0x000000000010cda7 : sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000017adb6 : sti ; inc dword ptr [rdi + rsi*4 - 5] ; call rsp
0x000000000017acee : sti ; inc dword ptr [rdx - 0x48] ; sti ; call rdx
0x000000000017a7f6 : sti ; inc dword ptr [rdx - 0x6f] ; sti ; call rdx
0x000000000017a7e6 : sti ; inc dword ptr [rdx] ; xchg eax, ebx ; sti ; call qword ptr [rdx + 0x22fffb92]
0x000000000017ac8a : sti ; inc dword ptr [rsi - 0x4b] ; sti ; call rsi
0x000000000017a792 : sti ; inc dword ptr [rsi - 0x72] ; sti ; call rsi
0x000000000017ac7a : sti ; inc dword ptr [rsi] ; mov bh, 0xfb ; call qword ptr [rsi + 0x26fffbb6]
0x000000000017a782 : sti ; inc dword ptr [rsi] ; nop ; sti ; call qword ptr [rsi + 0x26fffb8f]
0x000000000017ac22 : sti ; inc eax ; mov ecx, 0xb950fffb ; sti ; jmp rax
0x000000000017a6d2 : sti ; inc eax ; push rdx ; sti ; call qword ptr [rax]
0x000000000017a506 : sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000016ecd8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x000000000017ac6a : sti ; inc esi ; mov eax, 0xb856fffb ; sti ; jmp rsi
0x000000000018ff49 : sti ; int1 ; call qword ptr [rcx]
0x000000000016c619 : sti ; int1 ; call rax
0x000000000018ff91 : sti ; int1 ; jmp qword ptr [rcx]
0x000000000017ab26 : sti ; jmp qword ptr [rax + 0x10fffb89]
0x000000000017b08e : sti ; jmp qword ptr [rax + 0x10fffbaa]
0x000000000016c6d2 : sti ; jmp qword ptr [rax + 0x10fffbf0]
0x000000000017b086 : sti ; jmp qword ptr [rax + 0x20fffbab]
0x000000000017b07e : sti ; jmp qword ptr [rax + 0x20fffbac]
0x000000000017b076 : sti ; jmp qword ptr [rax + 0x20fffbad]
0x000000000017b06e : sti ; jmp qword ptr [rax + 0x20fffbae]
0x000000000017ae62 : sti ; jmp qword ptr [rax + 0x20fffbb0]
0x000000000016c62a : sti ; jmp qword ptr [rax]
0x000000000018fdd2 : sti ; jmp qword ptr [rbx]
0x000000000018e112 : sti ; jmp qword ptr [rdi]
0x000000000017aa16 : sti ; jmp qword ptr [rdx + 0x12fffb83]
0x000000000017a7ee : sti ; jmp qword ptr [rdx]
0x000000000017a78a : sti ; jmp qword ptr [rsi]
0x000000000016c622 : sti ; jmp rax
0x000000000017ad16 : sti ; jmp rdx
0x000000000017a77a : sti ; jmp rsi
0x000000000017a89e : sti ; jmp rsp
0x000000000017a9de : sti ; ljmp ptr [rdx + rax*4 - 0x75ad0005] ; sti ; call rdx
0x000000000017af9e : sti ; ljmp ptr [rsi + 0x54fffba8] ; mov al, 0xfb ; call rsp
0x000000000012de98 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000e7333 : sti ; mov eax, 0x10 ; syscall
0x00000000000e8214 : sti ; mov eax, 0x10e ; syscall
0x00000000000f05c3 : sti ; mov eax, 0x113 ; syscall
0x00000000000f0447 : sti ; mov eax, 0x114 ; syscall
0x00000000000e6ea0 : sti ; mov eax, 0x115 ; syscall
0x00000000000f04f0 : sti ; mov eax, 0x116 ; syscall
0x00000000000f026f : sti ; mov eax, 0x119 ; syscall
0x00000000000e6f47 : sti ; mov eax, 0x11d ; syscall
0x00000000000f1780 : sti ; mov eax, 0x120 ; syscall
0x00000000000f182e : sti ; mov eax, 0x12b ; syscall
0x00000000000e7aa8 : sti ; mov eax, 0x13 ; syscall
0x00000000000f0668 : sti ; mov eax, 0x130 ; syscall
0x00000000000f18d6 : sti ; mov eax, 0x133 ; syscall
0x00000000000e7b48 : sti ; mov eax, 0x14 ; syscall
0x00000000000e8128 : sti ; mov eax, 0x17 ; syscall
0x00000000000f0ef8 : sti ; mov eax, 0x2a ; syscall
0x00000000000f0e28 : sti ; mov eax, 0x2b ; syscall
0x00000000000f1297 : sti ; mov eax, 0x2c ; syscall
0x00000000000f1077 : sti ; mov eax, 0x2d ; syscall
0x00000000000f1338 : sti ; mov eax, 0x2e ; syscall
0x00000000000f11d8 : sti ; mov eax, 0x2f ; syscall
0x00000000000bf703 : sti ; mov eax, 0x3d ; syscall
0x00000000000f1a40 : sti ; mov eax, 0x45 ; syscall
0x00000000000f1af0 : sti ; mov eax, 0x46 ; syscall
0x00000000000a0569 : sti ; mov eax, 0xc7490030 ; ret 0xffff
0x00000000000e25f8 : sti ; mov eax, 1 ; syscall
0x0000000000109b11 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000000bb090 : sti ; mov eax, 3 ; syscall
0x00000000000fd37a : sti ; mov eax, ecx ; syscall
0x00000000000e8316 : sti ; mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000000e83c6 : sti ; mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000000e2c66 : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000000d7ce9 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000001053fa : sti ; or dword ptr [rdi], ecx ; ret
0x0000000000105229 : sti ; or dword ptr [rdi], ecx ; retf
0x000000000017c26d : sti ; out dx, al ; jmp qword ptr [rax]
0x000000000018ac49 : sti ; out dx, al ; jmp qword ptr [rbx]
0x000000000018ac31 : sti ; out dx, al ; jmp qword ptr [rdx]
0x000000000017a502 : sti ; push qword ptr [rax + 0x25] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000017ae56 : sti ; push qword ptr [rax + 0x40fffbb3] ; mov bl, 0xfb ; jmp rax
0x000000000017ac3e : sti ; push qword ptr [rax + 0x40fffbb6] ; mov dh, 0xfb ; call rax
0x000000000017a6e2 : sti ; push qword ptr [rax + 0x43] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000017a6ce : sti ; push qword ptr [rax + 0x51] ; sti ; inc eax ; push rdx ; sti ; call qword ptr [rax]
0x000000000017a63e : sti ; push qword ptr [rax + 0x58] ; sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x000000000017a59e : sti ; push qword ptr [rax + 0x59] ; sti ; push qword ptr [rax] ; pop rbx ; sti ; call qword ptr [rax]
0x000000000017ab9e : sti ; push qword ptr [rax + 0x65] ; sti ; call qword ptr [rax + 0x10fffb66]
0x000000000017a8ba : sti ; push qword ptr [rax + rdx*4 - 0x6fbb0005] ; sti ; call rsp
0x000000000016c6be : sti ; push qword ptr [rax - 0x17] ; sti ; jmp rax
0x000000000017ab56 : sti ; push qword ptr [rax - 0x7d] ; sti ; jmp rax
0x000000000017ab5e : sti ; push qword ptr [rax - 0x7e] ; sti ; call qword ptr [rax]
0x000000000016c6ce : sti ; push qword ptr [rax] ; out dx, eax ; sti ; jmp qword ptr [rax + 0x10fffbf0]
0x000000000017a586 : sti ; push qword ptr [rax] ; pop rbp ; sti ; call qword ptr [rax]
0x000000000017a5a2 : sti ; push qword ptr [rax] ; pop rbx ; sti ; call qword ptr [rax]
0x000000000017a642 : sti ; push qword ptr [rax] ; pop rdx ; sti ; call qword ptr [rax]
0x000000000017a62a : sti ; push qword ptr [rax] ; pop rsi ; sti ; call qword ptr [rax]
0x000000000017adb2 : sti ; push qword ptr [rdi + rsi*4 - 0x48bb0005] ; sti ; call rsp
0x000000000017a7f2 : sti ; push qword ptr [rdx + 0x42fffb91] ; xchg eax, ecx ; sti ; call rdx
0x000000000017aa12 : sti ; push qword ptr [rdx] ; test bh, bl ; jmp qword ptr [rdx + 0x12fffb83]
0x000000000017a78e : sti ; push qword ptr [rsi + 0x46fffb8e] ; mov dr1, ebx ; call rsi
0x000000000017ac86 : sti ; push qword ptr [rsi + 0x46fffbb5] ; mov ch, 0xfb ; call rsi
0x000000000017ae26 : sti ; push rax ; mov eax, 0xb880fffb ; sti ; call qword ptr [rax]
0x000000000017a64a : sti ; push rax ; pop rbp ; sti ; call rax
0x000000000017a5aa : sti ; push rax ; pop rsi ; sti ; call rax
0x000000000017a5c6 : sti ; push rax ; pop rsp ; sti ; call rax
0x000000000017ae96 : sti ; push rax ; test eax, 0xa960fffb ; sti ; call rsi
0x000000000016896a : sti ; ret
0x000000000003e1b8 : sti ; ret 0xffbf
0x00000000001266f1 : sti ; ret 0xfffb
0x0000000000121171 : sti ; retf
0x00000000000cf09d : sti ; sbb byte ptr [rcx + 0x39], al ; retf
0x00000000000fddcc : sti ; stc ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000018ded1 : sti ; sti ; jmp qword ptr [rax]
0x00000000000f024f : sti ; sub rsp, 0x18 ; call 0xfccb7
0x0000000000040de0 : sti ; syscall
0x000000000002b7e7 : sti ; test rax, rax ; je 0x2b7f5 ; call rax
0x0000000000084381 : sti ; xchg eax, esp ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000e2558 : sti ; xor eax, eax ; syscall
0x00000000000ec303 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000002340 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x000000000010b422 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001586b9 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x41ff
0x000000000017bf81 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; loopne 0x17bf30 ; in al, dx ; call qword ptr [rax]
0x000000000017d5ad : stosb byte ptr [rdi], al ; call rax
0x0000000000055a2d : stosb byte ptr [rdi], al ; cld ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000168e44 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000009ddab : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000005171 : stosb byte ptr [rdi], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f2592 : stosb byte ptr [rdi], al ; popfq ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000002343 : stosb byte ptr [rdi], al ; ret
0x000000000017b091 : stosb byte ptr [rdi], al ; sti ; call qword ptr [rax]
0x000000000017b051 : stosb byte ptr [rdi], al ; sti ; jmp qword ptr [rax]
0x00000000000b0728 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x00000000000b0729 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x00000000000a90c6 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008e5b1 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x0000000000190f11 : stosd dword ptr [rdi], eax ; call rdi
0x000000000007ffa1 : stosd dword ptr [rdi], eax ; fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000089377 : stosd dword ptr [rdi], eax ; idiv edi ; inc dword ptr [rbp - 0x77] ; retf
0x0000000000084cf1 : stosd dword ptr [rdi], eax ; mov eax, 0x8948fff9 ; ret 0xc031
0x000000000010bd54 : stosd dword ptr [rdi], eax ; mov eax, 0xffffffff ; ret
0x000000000010bc0a : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x000000000007ff3f : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x0000000000034aec : stosd dword ptr [rdi], eax ; ret
0x0000000000074ff1 : stosd dword ptr [rdi], eax ; ret 0xfffa
0x0000000000169e4a : stosd dword ptr [rdi], eax ; retf -0x5d02
0x000000000010bf91 : stosd dword ptr [rdi], eax ; retf -0xe
0x000000000017ffbd : stosd dword ptr [rdi], eax ; stc ; jmp rax
0x000000000017ae8d : stosd dword ptr [rdi], eax ; sti ; call qword ptr [rax]
0x000000000017b08d : stosd dword ptr [rdi], eax ; sti ; jmp qword ptr [rax + 0x10fffbaa]
0x000000000017b089 : stosd dword ptr [rdi], eax ; sti ; jmp qword ptr [rax]
0x000000000017af0d : stosd dword ptr [rdi], eax ; sti ; jmp rdx
0x00000000000b0727 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rbp + 0x63] ; ret
0x000000000010bc09 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007ff3e : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000034aeb : stosq qword ptr [rdi], rax ; ret
0x0000000000083091 : str word ptr [rax - 0x77] ; ret 0xff31
0x000000000012752a : str word ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000007c23b : str word ptr [rax - 0x7d] ; ret 0x3110
0x000000000016a331 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000017da65 : sub ah, dh ; jmp rax
0x0000000000009db0 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x36
0x000000000019d410 : sub al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000000f1237 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000ebac3 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000e8d33 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000e8b64 : sub al, 0 ; jne 0xe8b79 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e9b67 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000eba6f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000ea036 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e9e6c : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eba39 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eaf2e : sub al, 0 ; ret
0x000000000000236c : sub al, 0x11 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; rcl bh, 1 ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000182be4 : sub al, 0x1b ; add byte ptr [rax], al ; call 0x12181699
0x00000000001a2ee4 : sub al, 0x1e ; add al, byte ptr [rax] ; sub byte ptr [rdx - 5], ch ; jmp qword ptr [rdx]
0x0000000000193fe4 : sub al, 0x2f ; add dword ptr [rax], eax ; call 0x22193443
0x00000000001844e4 : sub al, 0x34 ; add byte ptr [rax], al ; pop rax ; sub ch, bl ; call qword ptr [rcx]
0x000000000009f202 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x0000000000194de4 : sub al, 0x3d ; add dword ptr [rax], eax ; cwde ; iretd ; hlt ; jmp qword ptr [rsi]
0x00000000000c9e26 : sub al, 0x44 ; mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c9d19 : sub al, 0x44 ; mov dword ptr [rdi + 0x30], ecx ; ret
0x0000000000081863 : sub al, 0x48 ; sub eax, 8 ; add rsp, 8 ; ret
0x0000000000195ee4 : sub al, 0x4e ; add dword ptr [rax], eax ; clc ; adc ebp, esi ; call rdx
0x00000000001962e4 : sub al, 0x52 ; add dword ptr [rax], eax ; cwde ; sbb ebp, esi ; jmp qword ptr [rsi]
0x00000000001965e4 : sub al, 0x55 ; add dword ptr [rax], eax ; js 0x196611 ; cmc ; jmp rdx
0x0000000000003d85 : sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000000d816d : sub al, 0x5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014e352 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000001983e4 : sub al, 0x73 ; add dword ptr [rax], eax ; pop rax ; mov esi, ebp ; jmp qword ptr [rcx]
0x000000000009f205 : sub al, 0x75 ; pop rax ; ret
0x0000000000066254 : sub al, 0x89 ; ret 0x348
0x00000000000d8c8a : sub al, 0x89 ; ret 0x9fe9
0x00000000000d8c02 : sub al, 0x89 ; ret 0xd4e9
0x0000000000085117 : sub al, 0x8b ; push rdx ; js 0x85118 ; ret 0
0x000000000008515e : sub al, 0x8b ; push rdx ; js 0x8515f ; ret 0
0x00000000000851a5 : sub al, 0x8b ; push rdx ; js 0x851a6 ; ret 0
0x00000000000851ec : sub al, 0x8b ; push rdx ; js 0x851ed ; ret 0
0x000000000014fec3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cfc70 : sub al, 0xb ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000045503 : sub al, 0xb9 ; sldt word ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0xc129
0x000000000018eee4 : sub al, 0xde ; add byte ptr [rax], al ; call 0x1118e00f
0x000000000018fae4 : sub al, 0xea ; add byte ptr [rax], al ; cwde ; ret
0x0000000000184669 : sub al, 0xeb ; jmp qword ptr [rsi]
0x00000000001861d1 : sub al, 0xec ; jmp rdi
0x000000000017c3a5 : sub al, 0xef ; call rax
0x000000000010f06d : sub al, 0xf ; xchg eax, ebp ; ret 0x233c
0x0000000000190729 : sub al, 0xf2 ; call qword ptr [rdx]
0x0000000000190741 : sub al, 0xf2 ; call rsp
0x00000000000ed995 : sub al, 0xf3 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000eb66f : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000193d35 : sub al, 1 ; add byte ptr [rax + 0x3c], bl ; hlt ; jmp qword ptr [rdi]
0x00000000000f0cc1 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000109074 : sub al, byte ptr [r8] ; ret
0x000000000010454a : sub al, byte ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; ret 0xfff1
0x000000000000b328 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rdx]
0x00000000000325a2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000f0eb0 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000108613 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000108695 : sub al, byte ptr [rax] ; call rax
0x0000000000109075 : sub al, byte ptr [rax] ; ret
0x000000000010f31e : sub al, byte ptr [rax] ; test eax, eax ; je 0x10f32e ; ret
0x000000000002591b : sub al, byte ptr [rcx - 0xa] ; ret 0x4c08
0x00000000001a3b5d : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x3b], dh ; clc ; call qword ptr [rax]
0x00000000001a3b2d : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x3b], dl ; clc ; call qword ptr [rdi]
0x00000000001956c8 : sub al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000325d8 : sub al, ch ; retf -0x11f
0x00000000000b432c : sub al, ch ; scasb al, byte ptr [rdi] ; ret
0x000000000014a245 : sub al, ch ; std ; xlatb ; ret
0x000000000017fa0c : sub bh, 0xf8 ; jmp rax
0x0000000000127e7d : sub bl, al ; nop ; call qword ptr [rax]
0x000000000017a54d : sub bl, bh ; call rax
0x000000000000308e : sub bl, byte ptr [rdi - 0x73d19408] ; int1 ; mov dr0, word ptr [rax] ; retf
0x00000000000b133b : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009f1f6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000074ab5 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000120d81 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a04c2 : sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000120b41 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000020904 : sub byte ptr [rax + 0x39], cl ; ret
0x0000000000074ab6 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x000000000011c0de : sub byte ptr [rax + 1], bh ; ret
0x00000000000eb0ba : sub byte ptr [rax + 3], bh ; syscall
0x0000000000120d82 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000017bf10 : sub byte ptr [rax - 0x6a900000], 0xec ; call rax
0x00000000000c9dfe : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000081484 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000119388 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000312cd : sub byte ptr [rax - 0x77], cl ; ret
0x00000000001555ea : sub byte ptr [rax - 0x77], cl ; ret 0x18e9
0x00000000001580b5 : sub byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000863ff : sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000e4397 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000006b184 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000071c66 : sub byte ptr [rax - 0x77], cl ; ret 0xd9e9
0x0000000000127522 : sub byte ptr [rax - 0x77], cl ; ret 0xe281
0x000000000008328e : sub byte ptr [rax - 0x77], cl ; retf -0x72b8
0x0000000000086b33 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x0000000000127521 : sub byte ptr [rax - 0x77], r9b ; ret 0xe281
0x000000000006f5a8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000a04c3 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000c9f83 : sub byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x000000000005e69d : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000d6779 : sub byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000017a54c : sub byte ptr [rax], 0xfb ; call rax
0x00000000000e6cf4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000011dd35 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000125265 : sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000011e7a5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x11e7b8 ; ret
0x0000000000127dff : sub byte ptr [rax], al ; jne 0x127e18 ; add rsp, 0x38 ; ret
0x0000000000126241 : sub byte ptr [rax], al ; mov eax, r14d ; syscall
0x00000000001269d5 : sub byte ptr [rax], al ; mov edi, ebp ; call 0xe2cd5
0x00000000001269d5 : sub byte ptr [rax], al ; mov edi, ebp ; call 0xe2cd6
0x000000000012580e : sub byte ptr [rax], al ; ret
0x0000000000122aa4 : sub byte ptr [rax], al ; test eax, eax ; je 0x122ab8 ; xor eax, eax ; ret
0x00000000001257e8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x125801 ; xor eax, eax ; pop rbx ; ret
0x0000000000128e84 : sub byte ptr [rax], al ; test eax, eax ; jne 0x128e98 ; xor eax, eax ; ret
0x0000000000128eb4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x128ec8 ; xor eax, eax ; ret
0x0000000000128ee4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x128ef8 ; xor eax, eax ; ret
0x0000000000128f14 : sub byte ptr [rax], al ; test eax, eax ; jne 0x128f28 ; xor eax, eax ; ret
0x0000000000128f44 : sub byte ptr [rax], al ; test eax, eax ; jne 0x128f58 ; xor eax, eax ; ret
0x0000000000128f74 : sub byte ptr [rax], al ; test eax, eax ; jne 0x128f88 ; xor eax, eax ; ret
0x000000000012896e : sub byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000126483 : sub byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000018b228 : sub byte ptr [rax], cl ; out dx, eax ; jmp rdx
0x000000000009f1fa : sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009f1f9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000dd27f : sub byte ptr [rbp - 0x76b700be], cl ; retf
0x00000000000c8542 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000020eff : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005a322 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000407b7 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000002951d : sub byte ptr [rbx + rcx*4 + 0x35], cl ; retf
0x00000000001286a8 : sub byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x20 ; call r9
0x0000000000127cb3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000127cb2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000120a93 : sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000120ac3 : sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000005b4a1 : sub byte ptr [rbx - 0x63743], al ; call qword ptr [rax]
0x000000000009f1f7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000120e07 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000047d6b : sub byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, r13 ; call 0x43fe9
0x00000000000bfbf4 : sub byte ptr [rcx + rcx*4 - 0x20], al ; syscall
0x00000000000fd0dd : sub byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x000000000007d59d : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000033fe5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x0000000000084b76 : sub byte ptr [rcx - 0x73], cl ; dec dword ptr [rax + 1] ; ret
0x000000000002f474 : sub byte ptr [rcx - 0x75], al ; push rbp ; or al, 0xf ; retf -0x2d77
0x0000000000039dce : sub byte ptr [rcx - 0x77], al ; ret
0x000000000017d239 : sub byte ptr [rcx], al ; add al, al ; cmp cl, dh ; call rax
0x0000000000180c71 : sub byte ptr [rcx], al ; add byte ptr [rax + 0x5d], ah ; sti ; call qword ptr [rax]
0x0000000000180c61 : sub byte ptr [rcx], al ; add byte ptr [rax + 0x5d], al ; sti ; jmp rax
0x00000000000e7bfd : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000120b42 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000011ea21 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000051a64 : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x3f], 0xe9 ; add cl, byte ptr [rax - 0x77] ; retf -0x8b8
0x00000000000fb1ef : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000115cfc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000115236 : sub byte ptr [rdi], cl ; retf 0x5089
0x000000000007dc09 : sub byte ptr [rdx + rdi], 1 ; add rsp, 8 ; ret
0x00000000001a2ee8 : sub byte ptr [rdx - 5], ch ; jmp qword ptr [rdx]
0x00000000001a3ff8 : sub byte ptr [rdx], cl ; sti ; call rax
0x000000000019daa2 : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 0x69 ; ret
0x000000000018f782 : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x000000000016e700 : sub byte ptr [rsi - 0xa], bl ; call qword ptr [rdi]
0x000000000017eb1c : sub byte ptr [rsi], 0xf7 ; jmp rax
0x0000000000194b98 : sub byte ptr [rsi], bh ; stc ; call qword ptr [rax]
0x00000000001844e9 : sub ch, bl ; call qword ptr [rcx]
0x0000000000033341 : sub cl, al ; ret
0x0000000000085f57 : sub cl, byte ptr [rax + 0x39] ; sal dword ptr [rbp - 0xd], 1 ; ret
0x000000000005c38a : sub cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000b072a : sub cl, byte ptr [rbp + 0x63] ; ret
0x0000000000033bf2 : sub cl, byte ptr [rsi] ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000000000a597e : sub cl, ch ; retf -0x11
0x00000000000ecf3d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019e351 : sub dh, bh ; call qword ptr [rbx]
0x0000000000186fc1 : sub dh, ch ; jmp qword ptr [rcx]
0x000000000017e12d : sub dh, dh ; jmp qword ptr [rax]
0x000000000017e145 : sub dh, dh ; jmp rax
0x00000000000cb487 : sub dh, dh ; ret
0x000000000017d385 : sub dh, dl ; jmp rax
0x00000000001954a8 : sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000018fc98 : sub dl, ch ; int1 ; call qword ptr [rax]
0x000000000017ebd0 : sub dl, cl ; add dword ptr [rax], eax ; pop rcx ; idiv rdi ; pop rax ; retf 1
0x0000000000115384 : sub dword ptr [eax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000168ced : sub dword ptr [rax + 0x1e], eax ; cli ; test dl, bh ; retf -0x2081
0x00000000000e0dae : sub dword ptr [rax + 0x63], ecx ; ret 0xc283
0x00000000000493ac : sub dword ptr [rax + rax], edx ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000005a306 : sub dword ptr [rax - 0x75], ecx ; adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000dcdbe : sub dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000002fcde : sub dword ptr [rax - 0x7d], ecx ; ret 0xeb04
0x0000000000183a35 : sub dword ptr [rax], eax ; add al, cl ; or ch, bl ; jmp qword ptr [rcx]
0x00000000000f14a1 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000fdd63 : sub dword ptr [rax], eax ; add eax, 0x450f4800 ; ret 0xf6c3
0x000000000011343d : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000010f6a5 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x10f6b9 ; ret
0x000000000011dc5c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000115385 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000010f785 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000113d24 : sub dword ptr [rax], eax ; test eax, eax ; je 0x113d36 ; ret
0x000000000002eed7 : sub dword ptr [rax], edi ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000169982 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000013e173 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000004c42a : sub dword ptr [rcx + 0xf], eax ; mov esi, 0x3d8d48c2 ; retf 0x11ea
0x000000000012c0e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c0fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c237 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c24d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c387 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c39d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c4d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c4ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c627 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c63d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c777 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c78d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012c8c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12c8dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ca17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ca2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cb67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cb7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ccb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cccd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ce07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ce1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cf57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cf6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d0a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d0bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d1f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d20d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d347 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d35d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012eab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12eacd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ec07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ec1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ed57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ed6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012eea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12eebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012eff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f00d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f15d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f297 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f2ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f3e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f3fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f537 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f54d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f687 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f69d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f7d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f7ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f927 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f93d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fa77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fa8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fbc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fbdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fd17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fd2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000123cd1 : sub dword ptr [rdi + 0x18], 1 ; je 0x123ce8 ; xor eax, eax ; ret
0x000000000012c043 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012c03f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012c0ed : sub dword ptr [rdi], esp ; jmp r9
0x000000000017fbf1 : sub dword ptr [rdx], eax ; add byte ptr [rax + 0x40], dh ; stc ; jmp qword ptr [rax]
0x0000000000151519 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000144af7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x00000000001506a6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001449b1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000016a23a : sub dword ptr [rsi], 0x76 ; retf
0x000000000011b7f3 : sub dword ptr [rsp + rdi*8 - 1], esi ; jmp 0x11b7c9
0x000000000002eed6 : sub dword ptr ss:[rax], edi ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011dd56 : sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000149fd7 : sub eax, -1 ; jne 0x149fe8 ; vzeroupper ; ret
0x000000000014e497 : sub eax, -1 ; jne 0x14e4a8 ; vzeroupper ; ret
0x0000000000081891 : sub eax, 0x10 ; add rsp, 8 ; ret
0x0000000000120c1a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017d2e9 : sub eax, 0x25400001 ; call qword ptr [rax]
0x00000000000d6de5 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000d7745 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x00000000001a3e85 : sub eax, 0x40880002 ; clc ; jmp qword ptr [rsi]
0x0000000000112ba2 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dd9e0 : sub eax, 0x448bfff4 ; and al, 8 ; jmp 0xdd9bc
0x000000000017fc71 : sub eax, 0x49200002 ; stc ; jmp qword ptr [rax]
0x00000000000d8e45 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00000000000335b9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00000000000538fe : sub eax, 0x83000000 ; ret
0x000000000004d434 : sub eax, 0x83480005 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000262e2 : sub eax, 0x89410000 ; ret
0x00000000000bbf5b : sub eax, 0x8948002f ; ret
0x000000000011a414 : sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x00000000000fa905 : sub eax, 0x8948fff3 ; ret
0x0000000000149c6f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x0000000000167986 : sub eax, 0xea4ca798 ; retf
0x00000000000028d5 : sub eax, 0xeeef33a1 ; retf 0x182c
0x000000000009f926 : sub eax, 0xf48000b ; ret 0x66c3
0x000000000010db3a : sub eax, 0xf48002a ; ret 0xff81
0x000000000011d492 : sub eax, 1 ; add rsp, 0x18 ; ret
0x00000000000c14e4 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000010fd29 : sub eax, 1 ; je 0x10fd40 ; mov qword ptr [rdi], rax ; ret
0x0000000000029e64 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000111cbd : sub eax, 1 ; pop r13 ; pop r14 ; ret
0x0000000000158ac1 : sub eax, 1 ; pop rbx ; pop r14 ; ret
0x0000000000043b5f : sub eax, 1 ; ret
0x000000000009f9f2 : sub eax, 4 ; ret
0x0000000000081865 : sub eax, 8 ; add rsp, 8 ; ret
0x00000000000f2663 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f2656 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000f0dde : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000fcde2 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f2748 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000fcf7f : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0xfcf68 ; ret
0x00000000000f25e2 : sub eax, dword ptr [rax] ; je 0xf25ed ; pop rbp ; ret
0x00000000000ec0e5 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000f3075 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000f296d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000fd5bc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x00000000000f2594 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000fc6c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc6d8 ; xor eax, eax ; ret
0x00000000000fc6f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc708 ; xor eax, eax ; ret
0x00000000000fc724 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc738 ; xor eax, eax ; ret
0x00000000000fc754 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc768 ; xor eax, eax ; ret
0x00000000000fc784 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc798 ; xor eax, eax ; ret
0x00000000000fc7b4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc7c8 ; xor eax, eax ; ret
0x00000000000fc7e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc7f8 ; xor eax, eax ; ret
0x00000000000fc814 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc828 ; xor eax, eax ; ret
0x00000000000fc844 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc858 ; xor eax, eax ; ret
0x00000000000fc874 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc888 ; xor eax, eax ; ret
0x00000000000fc8a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc8b8 ; xor eax, eax ; ret
0x00000000000fc8d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc8e8 ; xor eax, eax ; ret
0x00000000000fc904 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc918 ; xor eax, eax ; ret
0x00000000000fc934 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc948 ; xor eax, eax ; ret
0x00000000000fc964 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc978 ; xor eax, eax ; ret
0x00000000000fc994 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc9a8 ; xor eax, eax ; ret
0x00000000000fc9c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfc9d8 ; xor eax, eax ; ret
0x00000000000fc9f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfca08 ; xor eax, eax ; ret
0x00000000000fca24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfca38 ; xor eax, eax ; ret
0x00000000000fca54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfca68 ; xor eax, eax ; ret
0x00000000000fcab4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcac8 ; xor eax, eax ; ret
0x00000000000fcae4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcaf8 ; xor eax, eax ; ret
0x00000000000fcb14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcb28 ; xor eax, eax ; ret
0x00000000000fcb44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcb58 ; xor eax, eax ; ret
0x00000000000fcb74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcb88 ; xor eax, eax ; ret
0x00000000000fcba4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcbb8 ; xor eax, eax ; ret
0x00000000000fcbd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcbe8 ; xor eax, eax ; ret
0x00000000000fcc04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcc18 ; xor eax, eax ; ret
0x00000000000fcc34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xfcc48 ; xor eax, eax ; ret
0x00000000000fd155 : sub eax, dword ptr [rax] ; test rax, rax ; je 0xfd167 ; ret
0x000000000002d8ff : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009e521 : sub eax, dword ptr [rcx + r8*4] ; je 0x9e507 ; ret
0x000000000009e522 : sub eax, dword ptr [rcx + rax*4] ; je 0x9e506 ; ret
0x000000000017d271 : sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x78], dh ; int1 ; jmp rax
0x0000000000180d79 : sub eax, dword ptr [rcx] ; add byte ptr [rax], ah ; std ; call qword ptr [rax]
0x00000000000f17d3 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007af3e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000075415 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000075305 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000071065 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000075406 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000752f6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000f7ecb : sub eax, dword ptr [rdx + 8] ; ret
0x000000000009e4da : sub eax, dword ptr [rdx + rcx*4] ; je 0x9e4c6 ; ret
0x00000000001a3c4d : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0x3b], dl ; clc ; call rcx
0x000000000007a713 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000f7eb8 : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014941e : sub eax, eax ; ret
0x0000000000079836 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014a023 : sub eax, ecx ; je 0x14a039 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000079e39 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004538d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008c33c : sub eax, ecx ; ret
0x000000000017f465 : sub eax, edi ; call rax
0x0000000000093ca9 : sub eax, edi ; ret
0x00000000000af22e : sub eax, edi ; shr rax, 2 ; ret
0x00000000000afd00 : sub eax, edx ; add rax, r8 ; ret
0x00000000000f7e57 : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000077742 : sub eax, edx ; pop r12 ; ret
0x00000000000370a9 : sub eax, edx ; ret
0x000000000003359f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000331bd : sub eax, edx ; shr rax, 0x3f ; ret
0x000000000014ee40 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x00000000000b349c : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000149fec : sub eax, edx ; vzeroupper ; ret
0x00000000000f7e21 : sub eax, esi ; cmp dil, dl ; cmovne eax, ecx ; ret
0x0000000000045523 : sub eax, esi ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000007082d : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a008f : sub eax, esp ; pop r12 ; ret
0x00000000000f7eb7 : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x0000000000168bde : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000184581 : sub ebp, ebx ; call qword ptr [rcx]
0x00000000001845b1 : sub ebp, ebx ; call qword ptr [rdx]
0x0000000000184621 : sub ebp, ebx ; jmp qword ptr [rsi]
0x000000000006bec2 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000167675 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000000300b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000aac5c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017a551 : sub ebx, edi ; jmp qword ptr [rax]
0x0000000000034ae4 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000007c668 : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000044765 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000099661 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000014dc34 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000000297f4 : sub ecx, dword ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x2276
0x00000000000b349e : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000017fbb5 : sub ecx, edi ; jmp rax
0x000000000016b891 : sub edi, -1 ; mov dl, 0x82 ; out dx, eax ; call qword ptr [rbx]
0x000000000016b8d9 : sub edi, -1 ; movsd dword ptr [rdi], dword ptr [rsi] ; jae 0x16b8d4 ; call qword ptr [rbx]
0x000000000016b931 : sub edi, -1 ; movsd dword ptr [rdi], dword ptr [rsi] ; jns 0x16b92c ; call qword ptr [rbx]
0x000000000016b8ed : sub edi, -1 ; retf -0x107e
0x000000000016b959 : sub edi, -1 ; sar byte ptr [rsi - 0x11], 1 ; call qword ptr [rbx]
0x00000000000aed3c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000016bb19 : sub edi, 0xef77bdff ; call rcx
0x000000000016b94d : sub edi, 0xef81c4ff ; call qword ptr [rbx]
0x000000000016bb55 : sub edi, 0xef81f4ff ; call rdi
0x000000000016b825 : sub edi, 0xef8313ff ; call qword ptr [rbx]
0x000000000008a776 : sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000003012 : sub edi, esi ; retf 0x54f7
0x000000000009f5d2 : sub edx, 1 ; mov dword ptr [rcx], r8d ; jne 0x9f5c9 ; ret
0x000000000007a740 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007a735 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000010ec21 : sub edx, dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008e144 : sub edx, eax ; jbe 0x8e187 ; add rax, rdi ; ret
0x000000000008e154 : sub edx, eax ; jbe 0x8e189 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008e164 : sub edx, eax ; jbe 0x8e189 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008e174 : sub edx, eax ; jbe 0x8e189 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000aeb54 : sub edx, eax ; jbe 0xaeb97 ; add rax, rdi ; ret
0x00000000000aeb64 : sub edx, eax ; jbe 0xaeb99 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000aeb74 : sub edx, eax ; jbe 0xaeb99 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000aeb84 : sub edx, eax ; jbe 0xaeb99 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000032edf : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000032e9e : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00000000000a17ea : sub edx, edi ; dec dword ptr [rbx + rcx*4 + 0x7d] ; add byte ptr [rax - 0x39], cl ; ret 0xfc01
0x00000000000ed961 : sub edx, esi ; mov eax, r12d ; syscall
0x0000000000076aa8 : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000069b45 : sub edx, esp ; syscall
0x0000000000087042 : sub esi, 1 ; jne 0x87040 ; xor eax, eax ; pop rbx ; ret
0x000000000010b9ee : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000001273fa : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000037f03 : sub esi, eax ; mov eax, r10d ; syscall
0x00000000000e7914 : sub esi, ebx ; ret
0x000000000017d395 : sub esi, edx ; call qword ptr [rax]
0x00000000000bdc9d : sub esi, esi ; dec dword ptr [rax - 0x73] ; or byte ptr [r8 + 0x39], r9b ; ret
0x00000000000e2080 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000120efe : sub esp, -0x80 ; pop rbx ; ret
0x0000000000125cea : sub esp, 0x178 ; syscall
0x00000000000f0251 : sub esp, 0x18 ; call 0xfccb5
0x00000000000edffd : sub esp, 0x60 ; syscall
0x00000000000409b5 : sub esp, 0x80 ; call 0xfcc68
0x0000000000040a36 : sub esp, 0x80 ; call 0xfcc98
0x00000000000e848e : sub esp, 0xa8 ; syscall
0x0000000000113499 : sub esp, 8 ; call 0x11fee5
0x00000000000afd20 : sub esp, 8 ; call r12
0x0000000000111fbf : sub esp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x00000000000bb696 : sub esp, 8 ; syscall
0x00000000000fc813 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfc829 ; xor eax, eax ; ret
0x00000000000fc843 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfc859 ; xor eax, eax ; ret
0x00000000000fc873 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfc889 ; xor eax, eax ; ret
0x00000000000fc8a3 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfc8b9 ; xor eax, eax ; ret
0x00000000000fc8d3 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfc8e9 ; xor eax, eax ; ret
0x00000000000fc903 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfc919 ; xor eax, eax ; ret
0x00000000000fca23 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfca39 ; xor eax, eax ; ret
0x00000000000fca53 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfca69 ; xor eax, eax ; ret
0x00000000000fcab3 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfcac9 ; xor eax, eax ; ret
0x00000000000fcae3 : sub r8, qword ptr [r8] ; test eax, eax ; jne 0xfcaf9 ; xor eax, eax ; ret
0x00000000000fc933 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfc949 ; xor eax, eax ; ret
0x00000000000fc963 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfc979 ; xor eax, eax ; ret
0x00000000000fc993 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfc9a9 ; xor eax, eax ; ret
0x00000000000fc9c3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfc9d9 ; xor eax, eax ; ret
0x00000000000fc9f3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfca09 ; xor eax, eax ; ret
0x00000000000fcb13 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfcb29 ; xor eax, eax ; ret
0x00000000000fcb43 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfcb59 ; xor eax, eax ; ret
0x00000000000fcb73 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfcb89 ; xor eax, eax ; ret
0x00000000000fcba3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfcbb9 ; xor eax, eax ; ret
0x00000000000fcbd3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfcbe9 ; xor eax, eax ; ret
0x00000000000fcc03 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0xfcc19 ; xor eax, eax ; ret
0x0000000000079e38 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000afcff : sub r8, rdx ; add rax, r8 ; ret
0x000000000011dd55 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000081890 : sub rax, 0x10 ; add rsp, 8 ; ret
0x000000000010fd28 : sub rax, 1 ; je 0x10fd41 ; mov qword ptr [rdi], rax ; ret
0x0000000000158ac0 : sub rax, 1 ; pop rbx ; pop r14 ; ret
0x000000000009d703 : sub rax, 1 ; ret
0x000000000009f9f1 : sub rax, 4 ; ret
0x0000000000081864 : sub rax, 8 ; add rsp, 8 ; ret
0x00000000000fcc33 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0xfcc49 ; xor eax, eax ; ret
0x00000000000fcde1 : sub rax, qword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000fcf7e : sub rax, qword ptr [rax] ; cmp rdx, rax ; jne 0xfcf69 ; ret
0x000000000007af3d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000075414 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000075304 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000071064 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000075405 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000752f5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a008e : sub rax, r12 ; pop r12 ; ret
0x000000000014941d : sub rax, r8 ; ret
0x0000000000093ca8 : sub rax, rdi ; ret
0x00000000000af22d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000077741 : sub rax, rdx ; pop r12 ; ret
0x00000000000370bd : sub rax, rdx ; ret
0x00000000000331bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000014d90f : sub rax, rdx ; vzeroupper ; ret
0x00000000000aed3b : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000069b44 : sub rdx, r12 ; syscall
0x000000000008e143 : sub rdx, rax ; jbe 0x8e188 ; add rax, rdi ; ret
0x00000000000aeb53 : sub rdx, rax ; jbe 0xaeb98 ; add rax, rdi ; ret
0x00000000000ed960 : sub rdx, rsi ; mov eax, r12d ; syscall
0x0000000000087041 : sub rsi, 1 ; jne 0x87041 ; xor eax, eax ; pop rbx ; ret
0x0000000000037f02 : sub rsi, r8 ; mov eax, r10d ; syscall
0x00000000000e207f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000120efd : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000125ce9 : sub rsp, 0x178 ; syscall
0x00000000000f0250 : sub rsp, 0x18 ; call 0xfccb6
0x00000000000edffc : sub rsp, 0x60 ; syscall
0x00000000000409b4 : sub rsp, 0x80 ; call 0xfcc69
0x0000000000040a35 : sub rsp, 0x80 ; call 0xfcc99
0x00000000000e848d : sub rsp, 0xa8 ; syscall
0x0000000000113498 : sub rsp, 8 ; call 0x11fee6
0x0000000000113497 : sub rsp, 8 ; call 0x11fee7
0x00000000000afd1f : sub rsp, 8 ; call r12
0x0000000000111fbe : sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call rax
0x00000000000bb695 : sub rsp, 8 ; syscall
0x00000000000332a0 : subps xmm0, xmm1 ; ret
0x000000000003329f : subsd xmm0, xmm1 ; ret
0x0000000000033634 : subss xmm0, xmm1 ; ret
0x00000000000013e0 : syscall
0x0000000000069a76 : sysenter
0x000000000010a59b : test ah, al ; or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000925dc : test ah, al ; or eax, 0x894d0000 ; retf
0x000000000016c12c : test ah, bl ; out dx, eax ; call qword ptr [rdi]
0x000000000010a5c6 : test ah, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001475ab : test ah, cl ; sbb eax, 0x894d0000 ; retf
0x000000000017bf19 : test al, 0 ; add byte ptr [rax - 0x67], ah ; in al, dx ; jmp qword ptr [rax]
0x000000000017bf11 : test al, 0 ; add byte ptr [rax - 0x6b], dh ; in al, dx ; call rax
0x000000000011ddb7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000119212 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000011ced6 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002c030 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e8490 : test al, 0 ; add byte ptr [rax], al ; syscall
0x000000000017f9e8 : test al, 0x1d ; add al, byte ptr [rax] ; loopne 0x17f9dd ; clc ; call rax
0x000000000017fa08 : test al, 0x1e ; add al, byte ptr [rax] ; sub bh, 0xf8 ; jmp rax
0x0000000000103079 : test al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000fa904 : test al, 0x2d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000003d9a : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000180bf0 : test al, 0x39 ; add al, byte ptr [rax] ; mov al, 0xdd ; cli ; call qword ptr [rax]
0x0000000000193bf8 : test al, 0x3b ; hlt ; jmp qword ptr [rsi]
0x0000000000192318 : test al, 0x40 ; call rsi
0x00000000000d3398 : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000001940f8 : test al, 0x50 ; hlt ; call qword ptr [rdx]
0x00000000001976b8 : test al, 0x58 ; cmc ; jmp rax
0x000000000017da78 : test al, 0x62 ; add dword ptr [rax], eax ; add byte ptr [rsi], ch ; hlt ; jmp qword ptr [rax]
0x000000000017dab0 : test al, 0x64 ; add dword ptr [rax], eax ; jo 0x17daf2 ; hlt ; call rax
0x00000000001804e0 : test al, 0x68 ; add al, byte ptr [rax] ; cmp byte ptr [rax], 0xfa ; jmp rax
0x0000000000021cb7 : test al, 0x83 ; retf
0x0000000000198288 : test al, 0x89 ; cmc ; jmp qword ptr [rcx]
0x0000000000167f37 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001989d8 : test al, 0x99 ; cmc ; jmp rsi
0x0000000000083b94 : test al, 0x9b ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000016791e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000000edc57 : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000191398 : test al, 0xc1 ; jmp rbx
0x000000000018dd08 : test al, 0xc5 ; sti ; call qword ptr [rax]
0x000000000000393b : test al, 0xc6 ; std ; fld xword ptr [rsi + 0x7a697efd] ; retf -0x513c
0x0000000000194f78 : test al, 0xd1 ; hlt ; jmp qword ptr [rcx]
0x0000000000021b0f : test al, 0xe8 ; retf
0x0000000000022a10 : test al, 0xe8 ; retf -0x25
0x0000000000191e88 : test al, 0xea ; jmp qword ptr [rcx]
0x00000000000c0142 : test al, 0xeb ; retf 0x2e66
0x0000000000189169 : test al, 0xee ; jmp rdx
0x00000000000aefd9 : test al, 0xf0 ; jne 0xaf038 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000aefd8 : test al, 0xf0 ; jne 0xaf039 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000016dbcd : test al, 0xf4 ; call rax
0x000000000016db79 : test al, 0xf4 ; jmp qword ptr [rax]
0x000000000016b3b0 : test al, 0xf6 ; out dx, al ; jmp rsp
0x00000000001a0d99 : test al, 0xf7 ; jmp qword ptr [rax]
0x0000000000085eff : test al, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x000000000017ae61 : test al, 0xfb ; jmp qword ptr [rax + 0x20fffbb0]
0x000000000004c5a4 : test al, 1 ; add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x000000000010fd75 : test al, 1 ; je 0x10fd89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017f758 : test al, 7 ; add al, byte ptr [rax] ; and byte ptr [rax - 8], ah ; call qword ptr [rax]
0x0000000000138aac : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008a7f2 : test al, al ; jne 0x8a7d5 ; ret
0x000000000008a930 : test al, al ; jne 0x8a916 ; xor eax, eax ; ret
0x000000000008c5fa : test al, al ; jne 0x8c5e8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000001393ac : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000917fc : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010ae70 : test al, ch ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x000000000010d4ff : test al, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e8f88 : test al, cl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003d19f : test al, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf -2
0x0000000000032ac5 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000155701 : test al, dl ; add eax, dword ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000e055f : test bh, ah ; add al, byte ptr [rax] ; add al, ch ; push rdi ; retf -1
0x0000000000080713 : test bh, al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000117f17 : test bh, al ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xd284
0x0000000000023cc9 : test bh, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000038f68 : test bh, bh ; cmove eax, edx ; add rsp, 8 ; ret
0x0000000000038fa0 : test bh, bh ; cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000bfec6 : test bh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000017a995 : test bh, bl ; call rax
0x000000000017aa15 : test bh, bl ; jmp qword ptr [rdx + 0x12fffb83]
0x000000000017ab55 : test bh, bl ; push qword ptr [rax - 0x7d] ; sti ; jmp rax
0x000000000011586a : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000145726 : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012b056 : test bh, cl ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018ee3c : test bl, ch ; add byte ptr [rax], al ; loopne 0x18ee64 ; int1 ; call qword ptr [rdx]
0x0000000000145546 : test bl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012ad76 : test bl, cl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000000075e : test byte ptr [rax + 0x2000008a], cl ; add byte ptr [rdx], dl ; retf
0x000000000002cf96 : test byte ptr [rax + 0x200], bh ; ret
0x00000000000c112a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001190e5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000031dd9 : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000b825f : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x000000000011c065 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000fd2c2 : test byte ptr [rax + 0x63], 0xfa ; syscall
0x00000000000f026c : test byte ptr [rax + 0x63], 0xfb ; mov eax, 0x119 ; syscall
0x00000000000f03ef : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x114 ; syscall
0x00000000000e6d7b : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x118 ; syscall
0x00000000000e6eef : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x11d ; syscall
0x00000000000f1da2 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x1f ; syscall
0x00000000000f1bf5 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x40 ; syscall
0x00000000000f1c53 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x42 ; syscall
0x00000000000f1b42 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x44 ; syscall
0x00000000000f1b82 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x47 ; syscall
0x00000000000e2987 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x00000000000e77f6 : test byte ptr [rax + 0x63], 0xff ; mov eax, ecx ; syscall
0x00000000001170f5 : test byte ptr [rax + rax*2], ah ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000001147f8 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add al, ch ; int 0xc3
0x00000000000e07a4 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000034840 : test byte ptr [rax + rax], cl ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000147b08 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x00000000000e3b90 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000fe299 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add al, ch ; lodsb al, byte ptr [rsi] ; retf
0x000000000006e2b2 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; retf
0x000000000010e76c : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000006cff1 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000010dff6 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000018b13c : test byte ptr [rax - 0x15e00000], ah ; cld ; jmp rsp
0x00000000000e1ce3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000000eda35 : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x00000000000429a9 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x00000000000e4525 : test byte ptr [rax - 0x77], 0xdf ; call 0x20736
0x0000000000025dfd : test byte ptr [rax - 0x8fffffc], al ; ret 0
0x000000000009f65f : test byte ptr [rax], 0 ; cmove rax, rdx ; ret
0x0000000000190725 : test byte ptr [rax], 0 ; mov byte ptr [rdx + rsi*8], ch ; call qword ptr [rdx]
0x000000000019073d : test byte ptr [rax], 0 ; nop ; sub al, 0xf2 ; call rsp
0x000000000017ca51 : test byte ptr [rax], 0 ; shr cl, 1 ; out dx, eax ; call rax
0x000000000010ea02 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000d549c : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000001da6 : test byte ptr [rax], ah ; mov al, 0x72 ; retf
0x0000000000139a6c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017b8b9 : test byte ptr [rax], al ; add al, dh ; mov ebx, ebp ; call rax
0x0000000000075e9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000007935a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x75e38
0x000000000012813a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000152b3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000013e30a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x0000000000098d8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000099d5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000013e33a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x0000000000099d7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000099d8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000013e37a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000099dca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007a9ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000013e31a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000099d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007850a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000007366a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000068afa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000762ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aed4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000e1d51 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000013a36c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000013916c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009238c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008308f : test byte ptr [rax], dl ; str word ptr [rax - 0x77] ; ret 0xff31
0x00000000000fb962 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x00000000000ccb56 : test byte ptr [rbp + 0x39], al ; ret 0xe975
0x000000000006c4f6 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000083b28 : test byte ptr [rbp + 0xa], dl ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000148638 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ec192 : test byte ptr [rbp - 0x576feb6], 0x29 ; retf 0xf66
0x00000000000732ae : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x0000000000123209 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00000000000fb5dc : test byte ptr [rbx + 0x1c], 0x20 ; je 0xfb648 ; xor eax, eax ; pop rbx ; ret
0x000000000002b2d2 : test byte ptr [rbx + 0xf05963c], 0x84 ; retf
0x0000000000148818 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000dd4b4 : test byte ptr [rbx - 0x76000003], bl ; ret 0xdb31
0x0000000000079cb6 : test byte ptr [rbx], 0x80 ; jne 0x79cc6 ; pop rbx ; ret
0x0000000000080a7e : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000010a756 : test byte ptr [rbx], dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000ff5bc : test byte ptr [rcx + 0x480f7430], 0x39 ; retf -0x158b
0x000000000010c2ed : test byte ptr [rcx + 0x63], 0xff ; mov eax, 3 ; syscall
0x000000000019823c : test byte ptr [rcx + 1], dh ; add byte ptr [rax - 0x77], ah ; cmc ; jmp qword ptr [rcx]
0x000000000019a53c : test byte ptr [rcx + rax - 0x9db2000], dl ; jmp qword ptr [rsi]
0x00000000000fecef : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019653c : test byte ptr [rcx + rax], dl ; adc byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000c87a8 : test byte ptr [rcx + rcx - 0x2a], 0x75 ; add dh, bl ; ret
0x00000000001489f8 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x000000000007fa7e : test byte ptr [rcx + rcx*4 - 0x10], 0x5b ; pop r14 ; pop r15 ; ret
0x00000000000eb138 : test byte ptr [rcx + rcx*4 - 0x11], 0xb8 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000023ce1 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; retf -1
0x000000000003463e : test byte ptr [rcx + rcx*4 - 0x39], 0x44 ; mov eax, ecx ; syscall
0x00000000000326d4 : test byte ptr [rcx + rcx*4 - 1], 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f7ca4 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000f024d : test byte ptr [rcx - 0x137cb705], 0x18 ; call 0xfccb9
0x00000000000d8c83 : test byte ptr [rcx - 0x76000002], ch ; sub al, 0x89 ; ret 0x9fe9
0x00000000000ec305 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000ba6ba : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000143e06 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000052913 : test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012b616 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000144be6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012a926 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000144af6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x000000000012a646 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019703c : test byte ptr [rdi + 1], bl ; add al, ah ; cmc ; jmp qword ptr [rcx]
0x0000000000148bd8 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000000c44d6 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000018983c : test byte ptr [rdi - 0x41100000], al ; out dx, al ; jmp qword ptr [rax]
0x00000000000f7e0c : test byte ptr [rdi - 0x77000000], dh ; ret 0xf789
0x0000000000042f4e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000011de4c : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00000000000b68d9 : test byte ptr [rdi], 0x48 ; ret 0x8349
0x00000000000a8efc : test byte ptr [rdi], 0x84 ; ret
0x0000000000058c7b : test byte ptr [rdi], 0x84 ; retf 0
0x00000000000df841 : test byte ptr [rdi], 0x84 ; xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005fa0d : test byte ptr [rdi], 0x85 ; ret
0x00000000000b01b2 : test byte ptr [rdi], 0x94 ; ret
0x00000000000d61cc : test byte ptr [rdi], 0x94 ; ret 0xd108
0x00000000000d148c : test byte ptr [rdi], 0x95 ; ret
0x000000000005d836 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000075352 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000075362 : test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000099708 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000002cf24 : test byte ptr [rdx + 0x200], al ; ret
0x0000000000131080 : test byte ptr [rdx + 0x39480027], dh ; retf -0x7cf1
0x00000000000da888 : test byte ptr [rdx + 0x3d000006], bl ; retf 0
0x00000000000de5b7 : test byte ptr [rdx + rax - 0x76b80000], bh ; retf
0x0000000000147928 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000d14de : test byte ptr [rdx + rsi*2], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf -0x77c0
0x0000000000025df1 : test byte ptr [rdx - 0x8fffffc], al ; ret 0
0x00000000000e3831 : test byte ptr [rdx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000dac43 : test byte ptr [rdx], bl ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002b969 : test byte ptr [rdx], dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; retf -0x76b4
0x000000000005a4f1 : test byte ptr [rip - 0x57ffffe2], bl ; or byte ptr [rdi], 0x85 ; ret 0
0x00000000001153e6 : test byte ptr [rip - 0x74ffffff], dh ; adc byte ptr [rdi], cl ; retf -0x2877
0x0000000000062a71 : test byte ptr [rip - 0x9ffffe1], dl ; ret
0x00000000000cb476 : test byte ptr [rip - 0x9ffffff], dl ; ret
0x0000000000093d4d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000157847 : test byte ptr [rsi + rax], ah ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000147cd8 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x00000000000674e7 : test byte ptr [rsi - 0x76ffffff], dh ; ret
0x000000000002c2d5 : test byte ptr [rsi - 0x7c000002], cl ; ret
0x0000000000062726 : test byte ptr [rsi - 0x7cffffe6], cl ; retf
0x0000000000031685 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000093b8d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000014c06e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014bd6e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000014cf6e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014c66e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014c96e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000147748 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009df12 : test ch, 0xf0 ; je 0x9df0b ; movzx eax, cl ; pop rbx ; ret
0x000000000016a844 : test ch, bh ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000041a24 : test ch, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000c5a1b : test ch, ch ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x000000000008c956 : test ch, cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008cc56 : test ch, cl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000002329b : test ch, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008db56 : test ch, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000145636 : test ch, cl ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008d856 : test ch, cl ; add eax, 0x894d0000 ; retf
0x000000000008d556 : test ch, cl ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008d256 : test ch, cl ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000115858 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000c0056 : test cl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d826e : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012b786 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007f9c2 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000145456 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010dafb : test cl, cl ; jne 0x10da4c ; ret
0x000000000008a798 : test cl, cl ; jne 0x8a78d ; ret
0x000000000008a8d7 : test cl, cl ; jne 0x8a8ce ; xor eax, eax ; ret
0x000000000009d38f : test cl, cl ; jne 0x9d384 ; ret
0x000000000009d43f : test cl, cl ; jne 0x9d434 ; ret
0x000000000009d6ff : test cl, cl ; jne 0x9d6f8 ; sub rax, 1 ; ret
0x00000000000f7d35 : test cl, cl ; jne 0xf7d25 ; ret
0x000000000009df3a : test dh, 0xf0 ; je 0x9df0b ; movzx eax, dl ; pop rbx ; ret
0x0000000000148098 : test dh, ah ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000148f98 : test dh, ah ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006d124 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000017efad : test dh, bh ; jmp rax
0x0000000000197d61 : test dh, ch ; jmp qword ptr [rcx]
0x000000000019073c : test dh, dh ; add byte ptr [rax], al ; nop ; sub al, 0xf2 ; call rsp
0x000000000016e7e1 : test dh, dh ; call qword ptr [rsi]
0x000000000016e7d5 : test dh, dh ; jmp rsp
0x000000000008a5d0 : test dh, dh ; jne 0x8a5c7 ; mov qword ptr [rdx], rcx ; ret
0x000000000016e7dd : test dh, dh ; lcall ptr [rcx] ; test dh, dh ; call qword ptr [rsi]
0x000000000016e7d1 : test dh, dh ; lcall ptr [rsi] ; test dh, dh ; jmp rsp
0x00000000001529c4 : test dl, 0x40 ; jne 0x152989 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001529f2 : test dl, 4 ; jne 0x152989 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000147eb8 : test dl, ah ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000148db8 : test dl, ah ; add eax, 0x894d0000 ; retf
0x0000000000091eec : test dl, al ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000168cf1 : test dl, bh ; retf -0x2081
0x000000000002fcf0 : test dl, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000000000004c735 : test dl, cl ; add eax, 0x89410000 ; ret 0x8d41
0x0000000000032362 : test dl, dl ; jne 0x32344 ; ret
0x000000000008a754 : test dl, dl ; jne 0x8a74d ; ret
0x000000000009d5af : test dl, dl ; jne 0x9d5a8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000c1d6e : test dl, dl ; jne 0xc1d4d ; xor eax, eax ; ret
0x00000000000c2036 : test dl, dl ; jne 0xc201e ; ret
0x00000000000dc022 : test dword ptr [rax + 0xffffffe], ecx ; ret 0x8589
0x0000000000099a3b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000009af5b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x000000000009ae5b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x000000000008569f : test dword ptr [rax + rax - 0x76b80000], esi ; ret 0xf748
0x00000000000665b4 : test dword ptr [rax - 0x16000006], ebx ; lahf ; retf -1
0x00000000000fb806 : test dword ptr [rax - 0x9000002], ebx ; ret
0x000000000008407c : test dword ptr [rax], 0x440f4800 ; ret 0x48c3
0x000000000006d125 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00000000001907dd : test dword ptr [rax], 0xf2589000 ; call qword ptr [rax]
0x00000000001907c5 : test dword ptr [rax], 0xf2589800 ; call qword ptr [rax]
0x00000000000544bf : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e1ee7 : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000155941 : test dword ptr [rax], ebp ; add dword ptr [rax], eax ; add byte ptr [rcx + 1], cl ; ret
0x00000000000e1107 : test dword ptr [rax], ecx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000010f047 : test dword ptr [rbp + 0x3c000002], ebp ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x0000000000053497 : test dword ptr [rbp + 0x63480035], ecx ; ret 0x8948
0x00000000000a1033 : test dword ptr [rbp - 0x77], 0x3c8b48f4 ; ret 0x8d48
0x00000000000da156 : test dword ptr [rbp - 0x9ffffff], esi ; ret 0xf01
0x0000000000056f57 : test dword ptr [rbp - 3], ebx ; inc esi ; test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000008e0c8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000009f110 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000aeec8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000013e258 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000013e238 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000013e150 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009b050 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000001501a7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001505f6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002be3 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x000000000014a238 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000015825e : test dword ptr [rbx], 0x89480000 ; ror dword ptr [rax + 9], cl ; ret
0x0000000000001aca : test dword ptr [rbx], ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4f ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000007e2cb : test dword ptr [rbx], ecx ; add al, 0 ; add byte ptr [rax + 0x39], cl ; ret 0xeb72
0x000000000013df5a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000015017d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000099622 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000015008d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014ff9d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f157 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000154877 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x000000000009f127 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000007f5dd : test dword ptr [rcx + rcx*4 + 0x54], 0x58e81824 ; ret 0xffff
0x000000000013e2fa : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x000000000017f461 : test dword ptr [rcx], 0xf829d000 ; call rax
0x00000000001555fc : test dword ptr [rcx], eax ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x29], cl ; ret
0x0000000000084d49 : test dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000199615 : test dword ptr [rcx], eax ; add byte ptr [rax - 0x35], ch ; cmc ; call rdi
0x00000000001995bd : test dword ptr [rcx], eax ; add byte ptr [rax], ah ; retf -0xb
0x000000000016b5f4 : test dword ptr [rcx], ecx ; out dx, eax ; call rdi
0x000000000004103f : test dword ptr [rcx], edi ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf
0x0000000000149c7a : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x0000000000099787 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000099767 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000001287c3 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00000000000f9c68 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000fa0fc : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x0000000000056ef7 : test dword ptr [rdi - 0x16000007], ecx ; jmp rax
0x0000000000034c56 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000099921 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000009ad39 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000001514f2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014fec2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005ff63 : test dword ptr [rdx - 0x76b70001], esi ; retf 0x5be9
0x00000000001809a1 : test dword ptr [rdx], eax ; add byte ptr [rax - 0x4d], ah ; cli ; jmp rax
0x000000000013e217 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000001d4a : test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf -0x6dda
0x0000000000149c6e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x000000000014d743 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x00000000000aef6d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000154202 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000099745 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000099725 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x000000000009963d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000000387e : test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x000000000005bc96 : test dword ptr [rsi - 0x76000010], ebp ; ret
0x0000000000077ce5 : test dword ptr [rsi - 0x77000000], esi ; retf -0x3fcf
0x000000000005badb : test dword ptr [rsi], ecx ; cmp eax, 0x83480000 ; ret 0x8001
0x00000000001503c8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x000000000016e7d0 : test eax, 0x1efff684 ; test dh, dh ; jmp rsp
0x0000000000168dcd : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000151909 : test eax, 0x394c0025 ; ret 0x830f
0x00000000000c0823 : test eax, 0x39fffffe ; ret
0x00000000000ff717 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x0000000000169c20 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000131186 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033670 : test eax, 0x7fffff ; je 0x33669 ; ret
0x0000000000102f64 : test eax, 0x8948002a ; ret 0x8d48
0x0000000000085beb : test eax, 0x8948fff9 ; ret 0xc031
0x00000000000e6ee3 : test eax, 0x8949002c ; retf -0x3f7b
0x00000000000d8c84 : test eax, 0x89fffffe ; sub al, 0x89 ; ret 0x9fe9
0x000000000017ae99 : test eax, 0xa960fffb ; sti ; call rsi
0x0000000000047fb5 : test eax, 0xba001293 ; syscall
0x000000000016ecd6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000018b9f5 : test eax, 0xce680000 ; stc ; call qword ptr [rcx]
0x000000000000ca01 : test eax, 8 ; add byte ptr [rax], al ; ret
0x00000000000ee12f : test eax, eax ; cmove eax, edx ; ret
0x0000000000037164 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000107a04 : test eax, eax ; je 0x107a14 ; mov rdi, rbx ; call rax
0x000000000010f320 : test eax, eax ; je 0x10f32c ; ret
0x0000000000112bc1 : test eax, eax ; je 0x112baf ; xor eax, eax ; pop rbx ; ret
0x0000000000113401 : test eax, eax ; je 0x113411 ; mov rdi, rsp ; call rax
0x0000000000113a72 : test eax, eax ; je 0x113a82 ; mov rdi, rbp ; call rax
0x0000000000113d26 : test eax, eax ; je 0x113d34 ; ret
0x00000000001148b3 : test eax, eax ; je 0x1148c3 ; mov rdi, r14 ; call rax
0x0000000000114e01 : test eax, eax ; je 0x114e16 ; xor eax, eax ; ret
0x0000000000119a48 : test eax, eax ; je 0x119a58 ; mov rdi, r12 ; call rax
0x0000000000119c29 : test eax, eax ; je 0x119c3b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011ac5f : test eax, eax ; je 0x11ac6f ; mov rdi, rbp ; call rax
0x000000000011ad1e : test eax, eax ; je 0x11ad2e ; mov rdi, r13 ; call rax
0x000000000011b7cd : test eax, eax ; je 0x11b7df ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000011be79 : test eax, eax ; je 0x11be89 ; mov rdi, r12 ; call rax
0x000000000011c1ed : test eax, eax ; je 0x11c1ff ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011dcf8 : test eax, eax ; je 0x11dc8a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011dc7d : test eax, eax ; je 0x11dc8d ; pop rbx ; ret
0x000000000011e889 : test eax, eax ; je 0x11e89b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011eed2 : test eax, eax ; je 0x11eee4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000122aa6 : test eax, eax ; je 0x122ab6 ; xor eax, eax ; ret
0x0000000000144813 : test eax, eax ; je 0x14481f ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001457f8 : test eax, eax ; je 0x145804 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000015912c : test eax, eax ; je 0x15913b ; call rax
0x000000000002a692 : test eax, eax ; je 0x2a69c ; call rax
0x000000000002b7e9 : test eax, eax ; je 0x2b7f3 ; call rax
0x00000000000415e3 : test eax, eax ; je 0x415f5 ; pop rbx ; ret
0x000000000007658d : test eax, eax ; je 0x7659d ; pop rbx ; ret
0x000000000007c13a : test eax, eax ; je 0x7c144 ; call rax
0x000000000007c41d : test eax, eax ; je 0x7c427 ; call rax
0x0000000000083d70 : test eax, eax ; je 0x83d88 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba55e : test eax, eax ; je 0xba580 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000bfa2f : test eax, eax ; je 0xbfa39 ; call rax
0x00000000000bfbc9 : test eax, eax ; je 0xbfbd6 ; call rax
0x00000000000c8a5a : test eax, eax ; je 0xc8a40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7efc : test eax, eax ; je 0xe7f07 ; ret
0x00000000000e9a81 : test eax, eax ; je 0xe9a90 ; mov qword ptr [rax], rdx ; ret
0x00000000000ed5bc : test eax, eax ; je 0xed660 ; call rax
0x00000000000ed733 : test eax, eax ; je 0xed838 ; call rax
0x00000000000fd158 : test eax, eax ; je 0xfd164 ; ret
0x00000000000fd340 : test eax, eax ; je 0xfd374 ; call rax
0x00000000000ff1fa : test eax, eax ; je 0xff210 ; add rsp, 8 ; ret
0x00000000000f00f2 : test eax, eax ; jl 0xf010f ; je 0xf00ff ; ret
0x00000000001044b0 : test eax, eax ; jne 0x104469 ; mov rdi, r14 ; call 0x207b1
0x000000000010f6aa : test eax, eax ; jne 0x10f6b4 ; ret
0x0000000000116490 : test eax, eax ; jne 0x116477 ; xor eax, eax ; pop rbx ; ret
0x0000000000119e56 : test eax, eax ; jne 0x119e64 ; ret
0x000000000011e805 : test eax, eax ; jne 0x11e7f5 ; pop rbx ; ret
0x000000000011ea96 : test eax, eax ; jne 0x11eaa4 ; ret
0x00000000001257ea : test eax, eax ; jne 0x1257ff ; xor eax, eax ; pop rbx ; ret
0x0000000000128e86 : test eax, eax ; jne 0x128e96 ; xor eax, eax ; ret
0x0000000000128eb6 : test eax, eax ; jne 0x128ec6 ; xor eax, eax ; ret
0x0000000000128ee6 : test eax, eax ; jne 0x128ef6 ; xor eax, eax ; ret
0x0000000000128f16 : test eax, eax ; jne 0x128f26 ; xor eax, eax ; ret
0x0000000000128f46 : test eax, eax ; jne 0x128f56 ; xor eax, eax ; ret
0x0000000000128f76 : test eax, eax ; jne 0x128f86 ; xor eax, eax ; ret
0x0000000000128fad : test eax, eax ; jne 0x128fd0 ; mov eax, 0x27 ; syscall
0x0000000000149931 : test eax, eax ; jne 0x149959 ; xor eax, eax ; vzeroupper ; ret
0x000000000014e8e1 : test eax, eax ; jne 0x14e909 ; xor eax, eax ; vzeroupper ; ret
0x0000000000159646 : test eax, eax ; jne 0x159655 ; ret
0x0000000000159d24 : test eax, eax ; jne 0x159d35 ; pop rbx ; ret
0x0000000000033ff6 : test eax, eax ; jne 0x34005 ; ret
0x0000000000068aef : test eax, eax ; jne 0x68b08 ; mov rax, rbx ; pop rbx ; ret
0x0000000000079a8c : test eax, eax ; jne 0x79a85 ; ret
0x000000000007a6f4 : test eax, eax ; jne 0x7a6ed ; ret
0x000000000007ba15 : test eax, eax ; jne 0x7ba49 ; xor edi, edi ; call qword ptr [r14]
0x00000000000833af : test eax, eax ; jne 0x833a5 ; ret
0x00000000000840fc : test eax, eax ; jne 0x840c6 ; add rsp, 8 ; ret
0x000000000008411f : test eax, eax ; jne 0x84138 ; add rsp, 8 ; ret
0x000000000008e0f5 : test eax, eax ; jne 0x8e156 ; xor eax, eax ; ret
0x000000000008e598 : test eax, eax ; jne 0x8e616 ; xor eax, eax ; ret
0x000000000008e5c7 : test eax, eax ; jne 0x8e646 ; xor eax, eax ; ret
0x000000000009f6b1 : test eax, eax ; jne 0x9f685 ; ret
0x000000000009f76a : test eax, eax ; jne 0x9f766 ; xor eax, eax ; ret
0x00000000000aeb05 : test eax, eax ; jne 0xaeb66 ; xor eax, eax ; ret
0x00000000000bc356 : test eax, eax ; jne 0xbc391 ; mov eax, 0x74 ; syscall
0x00000000000bf8c6 : test eax, eax ; jne 0xbf901 ; mov eax, 0x22 ; syscall
0x00000000000bf946 : test eax, eax ; jne 0xbf981 ; mov eax, 0x23 ; syscall
0x00000000000e2506 : test eax, eax ; jne 0xe2541 ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000f44cd : test eax, eax ; jne 0xf4489 ; mov rdi, r13 ; call 0x207b1
0x00000000000fc696 : test eax, eax ; jne 0xfc6a9 ; mov eax, 1 ; ret
0x00000000000fc6c6 : test eax, eax ; jne 0xfc6d6 ; xor eax, eax ; ret
0x00000000000fc6f6 : test eax, eax ; jne 0xfc706 ; xor eax, eax ; ret
0x00000000000fc726 : test eax, eax ; jne 0xfc736 ; xor eax, eax ; ret
0x00000000000fc756 : test eax, eax ; jne 0xfc766 ; xor eax, eax ; ret
0x00000000000fc786 : test eax, eax ; jne 0xfc796 ; xor eax, eax ; ret
0x00000000000fc7b6 : test eax, eax ; jne 0xfc7c6 ; xor eax, eax ; ret
0x00000000000fc7e6 : test eax, eax ; jne 0xfc7f6 ; xor eax, eax ; ret
0x00000000000fc816 : test eax, eax ; jne 0xfc826 ; xor eax, eax ; ret
0x00000000000fc846 : test eax, eax ; jne 0xfc856 ; xor eax, eax ; ret
0x00000000000fc876 : test eax, eax ; jne 0xfc886 ; xor eax, eax ; ret
0x00000000000fc8a6 : test eax, eax ; jne 0xfc8b6 ; xor eax, eax ; ret
0x00000000000fc8d6 : test eax, eax ; jne 0xfc8e6 ; xor eax, eax ; ret
0x00000000000fc906 : test eax, eax ; jne 0xfc916 ; xor eax, eax ; ret
0x00000000000fc936 : test eax, eax ; jne 0xfc946 ; xor eax, eax ; ret
0x00000000000fc966 : test eax, eax ; jne 0xfc976 ; xor eax, eax ; ret
0x00000000000fc996 : test eax, eax ; jne 0xfc9a6 ; xor eax, eax ; ret
0x00000000000fc9c6 : test eax, eax ; jne 0xfc9d6 ; xor eax, eax ; ret
0x00000000000fc9f6 : test eax, eax ; jne 0xfca06 ; xor eax, eax ; ret
0x00000000000fca26 : test eax, eax ; jne 0xfca36 ; xor eax, eax ; ret
0x00000000000fca56 : test eax, eax ; jne 0xfca66 ; xor eax, eax ; ret
0x00000000000fcab6 : test eax, eax ; jne 0xfcac6 ; xor eax, eax ; ret
0x00000000000fcae6 : test eax, eax ; jne 0xfcaf6 ; xor eax, eax ; ret
0x00000000000fcb16 : test eax, eax ; jne 0xfcb26 ; xor eax, eax ; ret
0x00000000000fcb46 : test eax, eax ; jne 0xfcb56 ; xor eax, eax ; ret
0x00000000000fcb76 : test eax, eax ; jne 0xfcb86 ; xor eax, eax ; ret
0x00000000000fcba6 : test eax, eax ; jne 0xfcbb6 ; xor eax, eax ; ret
0x00000000000fcbd6 : test eax, eax ; jne 0xfcbe6 ; xor eax, eax ; ret
0x00000000000fcc06 : test eax, eax ; jne 0xfcc16 ; xor eax, eax ; ret
0x00000000000fcc36 : test eax, eax ; jne 0xfcc46 ; xor eax, eax ; ret
0x00000000000fcc7f : test eax, eax ; jne 0xfcc7b ; pop rdx ; pop r10 ; ret
0x00000000000fcd73 : test eax, eax ; jne 0xfcd85 ; ret
0x00000000000fd115 : test eax, eax ; jne 0xfd0b9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000007389b : test eax, eax ; js 0x738ad ; ret
0x000000000007c476 : test eax, eax ; js 0x7c485 ; ret
0x000000000009f3cd : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0x9f3a1 ; ret
0x0000000000112b76 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000049d5a : test ebp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000080952 : test ebp, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000005541d : test ebx, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000008e030 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000010fcd8 : test ebx, ebx ; je 0x10fcf0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000cd928 : test ebx, ebx ; je 0xcd8e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007613e : test ebx, ebx ; jne 0x76158 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f7c6 : test ebx, ebx ; jne 0x9f7a8 ; mov rax, rdi ; ret
0x000000000010fc7a : test ebx, ebx ; mov rdi, rbx ; jne 0x10fc79 ; pop rbx ; ret
0x0000000000159724 : test ebx, ebx ; mov rdx, rbx ; jne 0x159721 ; pop rbx ; ret
0x00000000001529b2 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001529bf : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002a7e6 : test ecx, ecx ; je 0x2a7f0 ; call rcx
0x0000000000069298 : test ecx, ecx ; je 0x692a5 ; ret
0x000000000009f69b : test ecx, ecx ; jne 0x9f695 ; ret
0x00000000000af309 : test ecx, ecx ; jne 0xaf2c8 ; mov rax, rdx ; ret
0x000000000009e573 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0x9e56f ; ret
0x000000000017ab49 : test edi, ebx ; call qword ptr [rax]
0x0000000000081eb0 : test edi, edi ; je 0x81ec9 ; mov eax, 0x16 ; ret
0x000000000015942b : test edi, edi ; jne 0x15941f ; pop rbx ; ret
0x0000000000100ea2 : test edi, edi ; js 0x100eb9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000010f7ce : test edi, edi ; js 0x10f7f7 ; mov eax, 3 ; syscall
0x0000000000126607 : test edi, edi ; js 0x126626 ; mov eax, 3 ; syscall
0x000000000004d081 : test edi, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000115410 : test edx, edx ; je 0x115420 ; mov rdi, rbp ; call rdx
0x0000000000159014 : test edx, edx ; je 0x15901e ; call rdx
0x000000000007575a : test edx, edx ; je 0x75771 ; mov eax, 0xffffffff ; ret
0x0000000000075aca : test edx, edx ; je 0x75ae1 ; mov eax, 0xffffffff ; ret
0x0000000000093b42 : test edx, edx ; je 0x93b51 ; bsf eax, edx ; ret
0x0000000000093beb : test edx, edx ; je 0x93c08 ; bsf rax, rdx ; ret
0x0000000000093dba : test edx, edx ; je 0x93de8 ; bsf rax, rdx ; ret
0x00000000000bfb58 : test edx, edx ; je 0xbfb65 ; call rdx
0x0000000000121070 : test edx, edx ; jne 0x121089 ; mov eax, 1 ; ret
0x00000000001210b0 : test edx, edx ; jne 0x1210c9 ; mov eax, 1 ; ret
0x000000000006fdaf : test edx, edx ; jne 0x6fda5 ; ret
0x0000000000078371 : test edx, edx ; jne 0x78386 ; xor eax, eax ; ret
0x0000000000078eef : test edx, edx ; jne 0x78ee5 ; ret
0x0000000000083459 : test edx, edx ; jne 0x83455 ; ret
0x00000000000a0a0a : test edx, edx ; jne 0xa0a05 ; ret
0x00000000000fcfbd : test edx, edx ; jne 0xfcfb9 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000009f94f : test edx, edx ; mov dword ptr [rax], edx ; jne 0x9f94f ; ret
0x00000000000aebbf : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xaebc0 ; ret
0x000000000009fd69 : test edx, edx ; sete al ; ret
0x00000000001529a5 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000017ce9d : test esi, eax ; jmp qword ptr [rax]
0x0000000000197e79 : test esi, ebp ; jmp qword ptr [rcx]
0x000000000008e508 : test esi, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000017efbd : test esi, edi ; call qword ptr [rax]
0x0000000000093cb1 : test esi, esi ; jne 0x93cc0 ; xor rax, rax ; ret
0x00000000000af071 : test esi, esi ; jne 0xaf080 ; xor rax, rax ; ret
0x00000000000ebaf5 : test esi, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000558c7 : test esi, esp ; idiv bh ; call qword ptr [rax]
0x000000000011e0ff : test esp, esp ; jne 0x11e118 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034c55 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000009f7c5 : test r11d, r11d ; jne 0x9f7a9 ; mov rax, rdi ; ret
0x000000000011e0fe : test r12d, r12d ; jne 0x11e119 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a7f1 : test r8b, r8b ; jne 0x8a7d6 ; ret
0x000000000008a92f : test r8b, r8b ; jne 0x8a917 ; xor eax, eax ; ret
0x0000000000144812 : test r8d, r8d ; je 0x144820 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001457f7 : test r8d, r8d ; je 0x145805 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000009f6b0 : test r8d, r8d ; jne 0x9f686 ; ret
0x00000000000af308 : test r9d, r9d ; jne 0xaf2c9 ; mov rax, rdx ; ret
0x0000000000107a03 : test rax, rax ; je 0x107a15 ; mov rdi, rbx ; call rax
0x0000000000112bc0 : test rax, rax ; je 0x112bb0 ; xor eax, eax ; pop rbx ; ret
0x0000000000113400 : test rax, rax ; je 0x113412 ; mov rdi, rsp ; call rax
0x0000000000113a71 : test rax, rax ; je 0x113a83 ; mov rdi, rbp ; call rax
0x00000000001148b2 : test rax, rax ; je 0x1148c4 ; mov rdi, r14 ; call rax
0x0000000000119a47 : test rax, rax ; je 0x119a59 ; mov rdi, r12 ; call rax
0x0000000000119c28 : test rax, rax ; je 0x119c3c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011ac5e : test rax, rax ; je 0x11ac70 ; mov rdi, rbp ; call rax
0x000000000011ad1d : test rax, rax ; je 0x11ad2f ; mov rdi, r13 ; call rax
0x000000000011b7cc : test rax, rax ; je 0x11b7e0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000011be78 : test rax, rax ; je 0x11be8a ; mov rdi, r12 ; call rax
0x000000000011c1ec : test rax, rax ; je 0x11c200 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000011dc7c : test rax, rax ; je 0x11dc8e ; pop rbx ; ret
0x000000000011e888 : test rax, rax ; je 0x11e89c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011eed1 : test rax, rax ; je 0x11eee5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000015912b : test rax, rax ; je 0x15913c ; call rax
0x000000000002a691 : test rax, rax ; je 0x2a69d ; call rax
0x000000000002b7e8 : test rax, rax ; je 0x2b7f4 ; call rax
0x000000000007658c : test rax, rax ; je 0x7659e ; pop rbx ; ret
0x000000000007c139 : test rax, rax ; je 0x7c145 ; call rax
0x000000000007c41c : test rax, rax ; je 0x7c428 ; call rax
0x0000000000083d6f : test rax, rax ; je 0x83d89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bfa2e : test rax, rax ; je 0xbfa3a ; call rax
0x00000000000bfbc8 : test rax, rax ; je 0xbfbd7 ; call rax
0x00000000000e7efb : test rax, rax ; je 0xe7f08 ; ret
0x00000000000e9a80 : test rax, rax ; je 0xe9a91 ; mov qword ptr [rax], rdx ; ret
0x00000000000ed5bb : test rax, rax ; je 0xed661 ; call rax
0x00000000000ed732 : test rax, rax ; je 0xed839 ; call rax
0x00000000000fd157 : test rax, rax ; je 0xfd165 ; ret
0x00000000000fd33f : test rax, rax ; je 0xfd375 ; call rax
0x00000000000ff1f9 : test rax, rax ; je 0xff211 ; add rsp, 8 ; ret
0x00000000000f00f1 : test rax, rax ; jl 0xf0110 ; je 0xf0100 ; ret
0x000000000011e804 : test rax, rax ; jne 0x11e7f6 ; pop rbx ; ret
0x0000000000079a8b : test rax, rax ; jne 0x79a86 ; ret
0x000000000007a6f3 : test rax, rax ; jne 0x7a6ee ; ret
0x000000000007ba14 : test rax, rax ; jne 0x7ba4a ; xor edi, edi ; call qword ptr [r14]
0x00000000000833ae : test rax, rax ; jne 0x833a6 ; ret
0x000000000010fcd7 : test rbx, rbx ; je 0x10fcf1 ; mov rax, rbx ; pop rbx ; ret
0x000000000007613d : test rbx, rbx ; jne 0x76159 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a7e5 : test rcx, rcx ; je 0x2a7f1 ; call rcx
0x000000000015942a : test rdi, rdi ; jne 0x159420 ; pop rbx ; ret
0x000000000011540f : test rdx, rdx ; je 0x115421 ; mov rdi, rbp ; call rdx
0x0000000000159013 : test rdx, rdx ; je 0x15901f ; call rdx
0x0000000000093bea : test rdx, rdx ; je 0x93c09 ; bsf rax, rdx ; ret
0x0000000000093db9 : test rdx, rdx ; je 0x93de9 ; bsf rax, rdx ; ret
0x00000000000bfb57 : test rdx, rdx ; je 0xbfb66 ; call rdx
0x000000000006fdae : test rdx, rdx ; jne 0x6fda6 ; ret
0x0000000000078370 : test rdx, rdx ; jne 0x78387 ; xor eax, eax ; ret
0x0000000000078eee : test rdx, rdx ; jne 0x78ee6 ; ret
0x0000000000083458 : test rdx, rdx ; jne 0x83456 ; ret
0x0000000000093cb0 : test rsi, rsi ; jne 0x93cc1 ; xor rax, rax ; ret
0x00000000000af070 : test rsi, rsi ; jne 0xaf081 ; xor rax, rax ; ret
0x000000000008a5cf : test sil, sil ; jne 0x8a5c8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002be2 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000077b95 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00000000001518ba : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000014de7c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000151f95 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014e361 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000151f99 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014e008 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000014e0af : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x00000000001518a6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000015188d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000014ddc5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000014e2cb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000014df53 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000014df25 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000014e242 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000151f8b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000151f8f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000152472 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000152538 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000152761 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000151fa4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000151fa8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000151bc3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000151a5c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000015185e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000151822 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000151d25 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000152148 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000001520ab : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000151f4a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000014a3a1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000dd9df : vpmuludq ymm15, ymm10, ymm7 ; mov eax, dword ptr [rsp + 8] ; jmp 0xdd9bd
0x00000000001497d8 : vzeroupper ; ret
0x00000000001499b0 : vzeroupper ; xor eax, eax ; ret
0x00000000000f7f5e : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000017bd49 : wait ; add byte ptr [rax], al ; push rax ; in al, -0x15 ; call qword ptr [rax]
0x00000000001285c1 : wait ; add byte ptr [rip + 0x3d8d4800], al ; out dx, al ; ret
0x0000000000083b95 : wait ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000198a61 : wait ; cmc ; jmp qword ptr [rcx]
0x000000000016b6e0 : wait ; or edi, ebp ; jmp qword ptr [rsi]
0x00000000000e9079 : wait ; pushfq ; or byte ptr [rax], al ; mov rdi, rbx ; call 0x85329
0x0000000000051491 : wait ; ret
0x00000000000e9081 : wait ; ret 0xfff9
0x00000000000fcd01 : wait ; ret 2
0x000000000009cfcd : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009d04f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009d151 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002c34 : xabort -0xd ; ret
0x0000000000002c30 : xbegin 0xfffffffff8c6f030 ; ret
0x000000000014461f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144e43 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014678f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014420f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000144f33 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144d53 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000143d1b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000796bd : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000014452b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002b9cc : xchg bh, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000014b29c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014aabc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014aeac : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a6cc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d1cd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017ab45 : xchg bl, bh ; call qword ptr [rax + 0x10fffb85]
0x000000000017ab41 : xchg bl, bh ; call qword ptr [rax]
0x00000000000c0f88 : xchg bl, ch ; retf 0x1f0f
0x000000000014bcd1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014ced1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c5d1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c8d1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bfc9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002308 : xchg byte ptr [rax + 0x5b0b1028], al ; cmp byte ptr [rdi], cl ; salc ; ret
0x000000000014579b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000003e3d7 : xchg byte ptr [rax + rax - 0x7cb80000], bl ; ret
0x00000000001472ef : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000346c4 : xchg byte ptr [rax + rax], cl ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000146acf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000143f9f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001462af : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000022757 : xchg byte ptr [rax - 0x75], cl ; ret
0x00000000001442df : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001452f3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000d70cd : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x00000000001445fb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a0290 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2cce6
0x00000000000f0c01 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000003ba0a : xchg byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x39], cl ; ret 0xfc01
0x000000000014a86b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001446cb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146e0f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144a83 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000022921 : xchg byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x00000000001465ef : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145dcf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000146faf : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014447f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001454d3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144c63 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000143c6f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000019ca4d : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; add ah, byte ptr [rcx + 0xa] ; ret
0x000000000018d229 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000012452c : xchg byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x00000000001456b3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000004ba1f : xchg byte ptr [rcx], ah ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000085316 : xchg byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000019975d : xchg byte ptr [rcx], al ; add byte ptr [rax - 0x30], dl ; cmc ; call rsi
0x000000000017df69 : xchg byte ptr [rcx], al ; add byte ptr [rax - 0x45], dl ; cmc ; call qword ptr [rax]
0x00000000001876ac : xchg byte ptr [rcx], al ; add byte ptr [rax], al ; add al, 0xf8 ; retf
0x000000000010d7e5 : xchg byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000014406f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000168af5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000014ad5c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a57c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b68c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002414a : xchg byte ptr [rdi], cl ; retf 0x1489
0x000000000014454f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001455c3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000143d3f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014610f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ad2d3 : xchg byte ptr [rdx - 0x1600000b], ch ; ret
0x0000000000058a79 : xchg byte ptr [rdx], ah ; or eax, 0x89480000 ; retf -0x76b8
0x0000000000197452 : xchg byte ptr [rdx], al ; jne 0x197464 ; ret
0x0000000000143de1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144f05 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144ff5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144e15 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014413f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000016d9b0 : xchg byte ptr [rsi - 0x48ab000c], dh ; hlt ; jmp rbx
0x000000000014c276 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146245 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146f45 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d176 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c876 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c576 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000146a65 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac5d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bf6e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b58d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004ce4b : xchg byte ptr [rsi], cl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000058119 : xchg byte ptr [rsi], dl ; or al, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x408d
0x00000000001443af : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144b73 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000018c616 : xchg byte ptr [rsp + rcx*4], al ; add ecx, dword ptr [rbp + 0x80e5d02] ; ret
0x0000000000148a9f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001488bf : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149297 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000197fb9 : xchg ch, dh ; jmp qword ptr [rcx]
0x00000000001481b7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001490b7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001353bf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000147285 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146585 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001460a5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146da5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000058364 : xchg dh, bl ; adc eax, 0x89480000 ; retf -0x76b8
0x000000000014adad : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a5cd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000143e05 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144d25 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144b45 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144c35 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144a55 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000002d11 : xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x000000000017d57d : xchg dl, dh ; jmp qword ptr [rax]
0x000000000006389a : xchg dword ptr [rax + rdi + 0x1480000], esi ; ret
0x000000000002e0b1 : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000002e120 : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000d4df5 : xchg dword ptr [rax - 1], ebx ; dec dword ptr [rax - 0x77] ; ret
0x000000000018988d : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x41], dl ; out dx, al ; jmp rsi
0x0000000000189805 : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x44], cl ; out dx, al ; call rbx
0x00000000000f03a1 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000002ad95 : xchg dword ptr [rax], ebp ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000168af8 : xchg dword ptr [rax], edi ; in eax, -0x1b ; retf 0x2a91
0x000000000016867f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000005fcad : xchg dword ptr [rbp - 0x76ffffe7], eax ; ret 0x348
0x000000000005efb6 : xchg dword ptr [rbp - 0x76fffffa], ecx ; ret 0x348
0x000000000009f6af : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x0000000000057a68 : xchg dword ptr [rbx - 0x76ffffe6], esi ; ret 0x349
0x000000000005f322 : xchg dword ptr [rbx - 0x76ffffec], esp ; ret 0x348
0x000000000005ffed : xchg dword ptr [rbx - 0x76ffffff], edx ; ret 0x348
0x000000000007552d : xchg dword ptr [rbx - 0x77000000], edi ; ret 0x348
0x00000000001678ec : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000c5a8f : xchg dword ptr [rcx + rax], ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000e1a91 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000578a7 : xchg dword ptr [rcx - 0x76ffffe4], esi ; ret 0x349
0x00000000000d6262 : xchg dword ptr [rcx], edi ; retf 0xb75
0x000000000005f758 : xchg dword ptr [rdi - 0x76ffffe2], eax ; ret 0x348
0x0000000000057d68 : xchg dword ptr [rdi - 0x76ffffee], eax ; ret 0x349
0x000000000005f4ce : xchg dword ptr [rdi - 0x76ffffef], esi ; retf 0x348
0x00000000000613c0 : xchg dword ptr [rdi - 0x76fffffe], edi ; ret 0x348
0x00000000000fcc7d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0xfcc7d ; pop rdx ; pop r10 ; ret
0x0000000000054a05 : xchg dword ptr [rdi], esi ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000133b5c : xchg dword ptr [rdi], esp ; add byte ptr [rax + 0x39], cl ; retf -0x7cf1
0x00000000000df10e : xchg dword ptr [rdx - 0x76000002], ebx ; ret 0x8d48
0x0000000000065927 : xchg dword ptr [rdx - 0x76ffffed], ecx ; ret 0x348
0x0000000000065e34 : xchg dword ptr [rdx - 0x76fffffd], esp ; ret 0x348
0x000000000006172e : xchg dword ptr [rdx - 0x77000000], ebx ; ret 0x348
0x0000000000064921 : xchg dword ptr [rdx - 0x7cffffff], ecx ; ret 0x8308
0x0000000000074965 : xchg dword ptr [rdx - 3], ebp ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000e9b65 : xchg dword ptr [rsi + 0x2c], edx ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000000587f5 : xchg dword ptr [rsi - 0x76fffff3], ebx ; ret 0x349
0x00000000000648b2 : xchg dword ptr [rsi - 0x76fffff6], eax ; retf 0x348
0x0000000000055b29 : xchg dword ptr [rsi], eax ; idiv bh ; inc dword ptr [rcx] ; retf
0x00000000000a4b14 : xchg dword ptr [rsi], edx ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000167a8b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000055642 : xchg eax, ebp ; adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf -0x76b8
0x0000000000147df8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000707ce : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001198ae : xchg eax, ebp ; cwde ; add byte ptr [rax], al ; add bl, ch ; retf -0x74b8
0x000000000017bf15 : xchg eax, ebp ; in al, dx ; call rax
0x0000000000167dc9 : xchg eax, ebp ; jge 0x167dac ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000001ecb : xchg eax, ebp ; mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x0000000000105272 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000fad96 : xchg eax, ebp ; push -0x16000001 ; retf -5
0x00000000000020f3 : xchg eax, ebp ; ret
0x000000000010f06f : xchg eax, ebp ; ret 0x233c
0x000000000010eca8 : xchg eax, ebp ; ret 0x2c3c
0x000000000008a7d5 : xchg eax, ebp ; ret 0x3941
0x000000000006ac01 : xchg eax, ebp ; ret 0x5389
0x00000000000349a5 : xchg eax, ebp ; ret 0x5489
0x00000000001126ad : xchg eax, ebp ; ret 0x8041
0x00000000000d3367 : xchg eax, ebp ; ret 0x8341
0x000000000007e74c : xchg eax, ebp ; ret 0x8348
0x00000000000ea11c : xchg eax, ebp ; ret 0x8440
0x0000000000042f56 : xchg eax, ebp ; ret 0x854d
0x000000000003a921 : xchg eax, ebp ; ret 0x941
0x000000000002f3f6 : xchg eax, ebp ; ret 0x953d
0x0000000000088322 : xchg eax, ebp ; ret 0xb60f
0x00000000000ea12b : xchg eax, ebp ; ret 0xc084
0x0000000000042e41 : xchg eax, ebp ; ret 0xc221
0x0000000000051e8d : xchg eax, ebp ; ret 0xc283
0x00000000000b0066 : xchg eax, ebp ; ret 0xd138
0x0000000000034f11 : xchg eax, ebp ; ret 0xd521
0x000000000006b720 : xchg eax, ebp ; ret 0xdaf7
0x000000000010c835 : xchg eax, ebp ; ret 0xe083
0x000000000010cd93 : xchg eax, ebp ; ret 0xf45
0x000000000010eccf : xchg eax, ebp ; ret 0xf980
0x00000000000d3400 : xchg eax, ebp ; ret 0xfb83
0x00000000000661c7 : xchg eax, ebp ; ret 0xffff
0x0000000000003b29 : xchg eax, ebp ; retf 0x10bf
0x0000000000168682 : xchg eax, ebp ; retf 0x33e6
0x00000000000e8be2 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000d918c : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006916a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000d916e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000007e39d : xchg eax, ebp ; ror dword ptr [rax - 0x7d], -0x33 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011d121 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x0000000000070bad : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000005e160 : xchg eax, ebp ; sar cl, 0xff ; dec dword ptr [rax - 0x77] ; retf
0x0000000000002be1 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000169adc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000071d53 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000cabc9 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ret 0x148b
0x000000000007d4d7 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000019a405 : xchg eax, ebx ; add dword ptr [rax], eax ; cwde ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000019a3bd : xchg eax, ebx ; add dword ptr [rax], eax ; push rax ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000019a465 : xchg eax, ebx ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000014f310 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003a05 : xchg eax, ebx ; and cl, ah ; ret
0x00000000000625c9 : xchg eax, ebx ; cdq ; xor al, 0 ; call rax
0x000000000017dcdd : xchg eax, ebx ; hlt ; call qword ptr [rax]
0x000000000016a46c : xchg eax, ebx ; in al, dx ; retf -0x51ce
0x0000000000098c4c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000012bbf2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000169983 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x16995d
0x000000000017c6dd : xchg eax, ebx ; out dx, eax ; jmp qword ptr [rax]
0x0000000000156bb4 : xchg eax, ebx ; ret 0x60e9
0x00000000001104a4 : xchg eax, ebx ; ret 0x8440
0x0000000000156c16 : xchg eax, ebx ; ret 0x894c
0x0000000000156a17 : xchg eax, ebx ; ret 0xc031
0x0000000000001ed2 : xchg eax, ebx ; retf
0x0000000000002d96 : xchg eax, ebx ; sbb al, 0x89 ; and byte ptr [rax - 0xc0713e4], bh ; ret
0x0000000000003b22 : xchg eax, ebx ; sbb al, 0xb ; push rbp ; jg 0x3b99 ; xchg eax, ebp ; retf 0x10bf
0x000000000017a7e9 : xchg eax, ebx ; sti ; call qword ptr [rdx + 0x22fffb92]
0x000000000017a765 : xchg eax, ebx ; sti ; call qword ptr [rsi]
0x000000000017a925 : xchg eax, ebx ; sti ; call rax
0x000000000017a8a5 : xchg eax, ebx ; sti ; jmp rsp
0x00000000001157be : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000010a4f3 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; retf
0x000000000005a773 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x000000000002df7b : xchg eax, ecx ; and eax, 0x8948ffff ; ret 0x8548
0x00000000000b11db : xchg eax, ecx ; fldcw word ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f634b : xchg eax, ecx ; jne 0xf637f ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000adc0b : xchg eax, ecx ; loop 0xadc13 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000147391 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000019d5bf : xchg eax, ecx ; ret
0x000000000010396b : xchg eax, ecx ; retf
0x000000000017a73d : xchg eax, ecx ; sti ; call qword ptr [rax + 0x20fffb90]
0x000000000017a935 : xchg eax, ecx ; sti ; call qword ptr [rax]
0x000000000017a7f9 : xchg eax, ecx ; sti ; call rdx
0x000000000017a7f5 : xchg eax, ecx ; sti ; inc dword ptr [rdx - 0x6f] ; sti ; call rdx
0x000000000017a779 : xchg eax, ecx ; sti ; jmp rsi
0x0000000000145abf : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000df844 : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000049e3b : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x8bf43], al ; call qword ptr [rax]
0x000000000003af70 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc801
0x000000000017bc99 : xchg eax, edi ; add byte ptr [rax], al ; nop ; retf
0x000000000017bc79 : xchg eax, edi ; add byte ptr [rax], al ; retf -0x15
0x00000000000e1b5c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008409a : xchg eax, edi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000167e35 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x167e03 ; mov ecx, 0x5b92ac50 ; retf
0x000000000016d609 : xchg eax, edi ; hlt ; jmp rdi
0x0000000000168067 : xchg eax, edi ; jo 0x1680d4 ; salc ; retf
0x00000000000fd118 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000aa952 : xchg eax, edi ; ret 0x1489
0x00000000000418de : xchg eax, edi ; ret 0x870f
0x000000000003f944 : xchg eax, edi ; ret 0xd284
0x000000000016879d : xchg eax, edi ; retf -0x1eae
0x00000000000e63b5 : xchg eax, edi ; retf -1
0x0000000000001ec1 : xchg eax, edi ; retf 0x20f4
0x00000000000c0cee : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000f2a56 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000e3f79 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000ce0ae : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000169adb : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000167f38 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000000838ec : xchg eax, edi ; xor eax, eax ; ret
0x000000000004870a : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018a31d : xchg eax, edx ; add byte ptr [rax], al ; push rax ; loopne 0x18a317 ; jmp qword ptr [rsi]
0x000000000018a31c : xchg eax, edx ; add byte ptr [rax], al ; push rax ; loopne 0x18a318 ; jmp qword ptr [rsi]
0x000000000019a38d : xchg eax, edx ; add dword ptr [rax], eax ; and byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000019a3a5 : xchg eax, edx ; add dword ptr [rax], eax ; cmp byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000019a2fd : xchg eax, edx ; add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000017e129 : xchg eax, edx ; add dword ptr [rax], eax ; nop ; sub dh, dh ; jmp qword ptr [rax]
0x000000000019a375 : xchg eax, edx ; add dword ptr [rax], eax ; or byte ptr [rsi + rsi*8], ah ; jmp qword ptr [rsi]
0x000000000019a32d : xchg eax, edx ; add dword ptr [rax], eax ; shl byte ptr [rbx], 0xf6 ; jmp qword ptr [rsi]
0x000000000006b98e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008305a : xchg eax, edx ; cmp esi, 0x5b9066ff ; ret
0x000000000017dcd5 : xchg eax, edx ; hlt ; jmp rax
0x00000000001697fd : xchg eax, edx ; jae 0x1697da ; push rsi ; pop rdx ; je 0x1697cf ; ret 0xacfc
0x000000000016a466 : xchg eax, edx ; mov esi, dr1 ; jrcxz 0x16a450 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x0000000000084f68 : xchg eax, edx ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000167e3c : xchg eax, edx ; pop rbx ; retf
0x0000000000156d58 : xchg eax, edx ; ret
0x00000000000c0555 : xchg eax, edx ; ret 0x148
0x0000000000156d80 : xchg eax, edx ; ret 0x14c
0x00000000000b17cf : xchg eax, edx ; ret 0x3948
0x00000000000e3f5e : xchg eax, edx ; ret 0x970f
0x00000000000c0cf1 : xchg eax, edx ; ret 0xd029
0x00000000000ce0b1 : xchg eax, edx ; ret 0xd138
0x0000000000117f1d : xchg eax, edx ; ret 0xd284
0x000000000014940d : xchg eax, edx ; ret 0xf40
0x00000000001678ef : xchg eax, edx ; ret 0xf869
0x0000000000118119 : xchg eax, edx ; ret 0xffe9
0x00000000000ecf5a : xchg eax, edx ; ret 0xfff8
0x00000000000e7990 : xchg eax, edx ; rol byte ptr [rax + rax*8 - 0x74b7c58c], 5 ; retf
0x0000000000101fda : xchg eax, edx ; rol dword ptr [rax], cl ; add cl, ch ; ret 0xfffc
0x000000000017a7ed : xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x000000000017a731 : xchg eax, edx ; sti ; jmp rax
0x0000000000144817 : xchg eax, edx ; sub eax, edx ; ret
0x000000000017a7ec : xchg eax, edx ; xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x0000000000071c09 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000014f610 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000132983 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000019a725 : xchg eax, esi ; add dword ptr [rax], eax ; sbb bh, ch ; sti ; jmp qword ptr [rsi]
0x000000000017cebd : xchg eax, esi ; call qword ptr [rax]
0x000000000017ceb5 : xchg eax, esi ; jmp rax
0x0000000000169be8 : xchg eax, esi ; jnp 0x169c37 ; retf -0x6620
0x000000000014f6cd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017ac80 : xchg eax, esi ; mov dh, 0xfb ; jmp qword ptr [rsi]
0x000000000014f62b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017a140 : xchg eax, esi ; pop rbp ; std ; inc dword ptr [rdx + 0x5e] ; std ; call qword ptr [rdx]
0x00000000000cd0e3 : xchg eax, esi ; pop rbx ; ret
0x00000000001051f4 : xchg eax, esi ; ret
0x0000000000083bc4 : xchg eax, esi ; ret 0xc031
0x000000000016a18c : xchg eax, esi ; ret 0xcd11
0x00000000000ab337 : xchg eax, esi ; ret 0xd284
0x000000000010ba17 : xchg eax, esi ; ret 0xfb83
0x00000000000809c6 : xchg eax, esi ; ret 7
0x00000000000e5396 : xchg eax, esi ; retf -1
0x000000000014f67c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ab2fc : xchg eax, esi ; rol dword ptr [rbp - 0x3d6bf040], 9 ; retf -0x2d7c
0x0000000000002e68 : xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000018dd99 : xchg eax, esi ; sti ; call qword ptr [rax]
0x000000000019154c : xchg eax, esp ; add al, 1 ; add byte ptr [rax - 0x37], dh ; call rdi
0x000000000018544c : xchg eax, esp ; add byte ptr [r8], al ; loopne 0x18548c ; cli ; jmp qword ptr [rcx]
0x000000000018a4bd : xchg eax, esp ; add byte ptr [rax], al ; and bh, 0xee ; call qword ptr [rdx]
0x000000000017bbc9 : xchg eax, esp ; add byte ptr [rax], al ; nop ; ret 0xffeb
0x000000000017bbe1 : xchg eax, esp ; add byte ptr [rax], al ; rol ah, 0xeb ; call rax
0x000000000019564c : xchg eax, esp ; add dword ptr [r8], r8d ; mov al, 0xe7 ; hlt ; jmp qword ptr [rcx]
0x000000000019534c : xchg eax, esp ; add dword ptr [rax], eax ; adc dl, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000084382 : xchg eax, esp ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000019a4c5 : xchg eax, esp ; add dword ptr [rax], eax ; sbb dl, ch ; clc ; jmp qword ptr [rsi]
0x000000000019754c : xchg eax, esp ; add dword ptr fs:[rax], eax ; adc byte ptr [rdi - 0xb], dl ; call qword ptr [rdx]
0x000000000000b250 : xchg eax, esp ; add eax, 0 ; add byte ptr [rax], al ; retf 0x36
0x000000000019604c : xchg eax, esp ; add qword ptr [r8], r8 ; loopne 0x19606d ; cmc ; jmp qword ptr [rcx]
0x00000000000d1312 : xchg eax, esp ; and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010e8b2 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1b8
0x000000000010e013 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000010e8f7 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x1ba
0x000000000006fa17 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000018494c : xchg eax, esp ; cmp byte ptr [rax], al ; add al, al ; xor ch, bl ; call qword ptr [rsi]
0x000000000018904c : xchg eax, esp ; jg 0x189056 ; add byte ptr [rax - 0x5c], ah ; out dx, al ; jmp rsp
0x0000000000188c4c : xchg eax, esp ; jnp 0x188c56 ; add byte ptr [rax], dl ; cdq ; out dx, al ; call rdx
0x000000000019814c : xchg eax, esp ; jo 0x198157 ; add byte ptr [rax - 0x78], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000189f4c : xchg eax, esp ; mov es, word ptr [rax] ; add byte ptr [rax], dl ; shr esi, cl ; call qword ptr [rax]
0x00000000000c1dab : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000001489f9 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cd0b1 : xchg eax, esp ; pop rbx ; ret
0x000000000016a39f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x16a330 ; ret 0x48f
0x000000000002d73c : xchg eax, esp ; rcr dword ptr [rbx + 0x48], -0x77 ; enter 0x415d, 0x5c ; ret
0x000000000004beab : xchg eax, esp ; ret
0x00000000000d97e5 : xchg eax, esp ; ret 0x1589
0x000000000008a88e : xchg eax, esp ; ret 0x3941
0x0000000000155790 : xchg eax, esp ; ret 0x3948
0x00000000000c56d7 : xchg eax, esp ; ret 0x394c
0x000000000011d099 : xchg eax, esp ; ret 0x3d83
0x00000000000cead3 : xchg eax, esp ; ret 0x4422
0x00000000000d9e27 : xchg eax, esp ; ret 0x5408
0x00000000000e9201 : xchg eax, esp ; ret 0x8041
0x00000000000426fe : xchg eax, esp ; ret 0x8341
0x000000000010ffb1 : xchg eax, esp ; ret 0x8348
0x000000000003f923 : xchg eax, esp ; ret 0x8349
0x00000000000e59fd : xchg eax, esp ; ret 0x8440
0x000000000009e22d : xchg eax, esp ; ret 0x8444
0x00000000000d46e9 : xchg eax, esp ; ret 0x854d
0x00000000000db454 : xchg eax, esp ; ret 0x8944
0x0000000000105d3e : xchg eax, esp ; ret 0x8945
0x00000000000dbd76 : xchg eax, esp ; ret 0x8b41
0x0000000000020fb7 : xchg eax, esp ; ret 0x8d48
0x00000000000b59dd : xchg eax, esp ; ret 0x8d4c
0x000000000002e070 : xchg eax, esp ; ret 0xb60f
0x00000000000a1be0 : xchg eax, esp ; ret 0xc220
0x00000000000d042a : xchg eax, esp ; ret 0xc683
0x00000000000ab301 : xchg eax, esp ; ret 0xca09
0x00000000000c56ea : xchg eax, esp ; ret 0xd008
0x00000000000d347f : xchg eax, esp ; ret 0xd009
0x00000000000b00aa : xchg eax, esp ; ret 0xd021
0x0000000000042713 : xchg eax, esp ; ret 0xd084
0x0000000000068b9e : xchg eax, esp ; ret 0xd089
0x00000000000d61ce : xchg eax, esp ; ret 0xd108
0x00000000000210ac : xchg eax, esp ; ret 0xd284
0x000000000008a6cf : xchg eax, esp ; ret 0xd308
0x00000000000b0270 : xchg eax, esp ; ret 0xd338
0x000000000006e055 : xchg eax, esp ; ret 0xdaf7
0x00000000000b01b9 : xchg eax, esp ; ret 0xdf89
0x0000000000083c48 : xchg eax, esp ; ret 0xf201
0x00000000000c879a : xchg eax, esp ; ret 0xf631
0x00000000000a1e77 : xchg eax, esp ; ret 0xf883
0x000000000009e18f : xchg eax, esp ; ret 0xfd83
0x000000000009e1b0 : xchg eax, esp ; ret 0xfe83
0x00000000000a7d48 : xchg eax, esp ; ret 0xfff9
0x00000000000da638 : xchg eax, esp ; retf
0x000000000009fd6c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000c24c2 : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x1e], 0x83 ; retf -0x7bf0
0x000000000019e34c : xchg eax, esp ; rol byte ptr [rcx], cl ; add al, al ; sub dh, bh ; call qword ptr [rbx]
0x0000000000085970 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e3d8f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000040ed3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000120f49 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001a2b4c : xchg eax, esp ; sbb al, byte ptr [rdx] ; add byte ptr [rax], dh ; insd dword ptr [rdi], dx ; sti ; jmp qword ptr [rdx]
0x00000000001a2c4c : xchg eax, esp ; sbb eax, dword ptr [rdx] ; add byte ptr [rax + 0x6c], ah ; sti ; jmp qword ptr [rdx]
0x00000000001a3c4c : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0x3b], dl ; clc ; call rcx
0x0000000000103078 : xchg eax, esp ; test al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x0000000000167dc3 : xchg eax, esp ; xlatb ; retf -0x5e15
0x0000000000001ed1 : xchg eax, r11d ; retf
0x0000000000084099 : xchg eax, r15d ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000fb9fe : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000016e249 : xchg ebp, esi ; jmp qword ptr [rax - 0x34000a7b]
0x0000000000197fd1 : xchg ebp, esi ; jmp qword ptr [rcx]
0x000000000017ab3d : xchg ebx, edi ; call qword ptr [rax + 0x10fffb86]
0x000000000017ab39 : xchg ebx, edi ; call qword ptr [rax]
0x00000000000eb62c : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000046f2b : xchg edi, esp ; add al, 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000ebbac : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ee031 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000017e43d : xchg esi, esi ; call qword ptr [rax]
0x00000000000c143f : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000189804 : xchg qword ptr [rax], r8 ; add byte ptr [rax - 0x44], cl ; out dx, al ; call rbx
0x0000000000084e11 : xchg rax, r8 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000019a404 : xchg rax, rbx ; add dword ptr [rax], eax ; cwde ; and al, 0xf6 ; jmp qword ptr [rsi]
0x000000000016cd48 : xlatb ; adc ebx, esi ; jmp rax
0x00000000000b2565 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000164dd9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000012bab9 : xlatb ; add r9, r11 ; jmp r9
0x00000000000f7e25 : xlatb ; cmovne eax, ecx ; ret
0x0000000000002dab : xlatb ; cmp ecx, dword ptr [rip + 0x1954b385] ; retf 0x172
0x00000000000026fb : xlatb ; enter -0x1ee6, -0x4c ; hlt ; out -0x21, eax ; syscall
0x00000000000e7912 : xlatb ; ja 0xe7944 ; ret
0x000000000009d9c3 : xlatb ; jb 0x9d9ce ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007b601 : xlatb ; je 0x7b46b ; ret
0x00000000000fcd89 : xlatb ; jmp rax
0x00000000000ee3b6 : xlatb ; jne 0xee3af ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000168963 : xlatb ; jo 0x1689df ; mov ebp, 0xfb67d10d ; ret
0x0000000000048992 : xlatb ; mov byte ptr [rsi], al ; jne 0x48978 ; mov rax, rsi ; ret
0x00000000000bfd22 : xlatb ; mov eax, esi ; syscall
0x00000000000bfd32 : xlatb ; mov eax, r8d ; syscall
0x0000000000002370 : xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000084fac : xlatb ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000016b4cc : xlatb ; or ch, bh ; call rdi
0x000000000016b590 : xlatb ; or ch, bh ; inc ebp ; or ch, bh ; call rdi
0x000000000016b5d4 : xlatb ; or ch, bh ; ljmp ptr [rax - 2] ; out dx, al ; call rdi
0x000000000016b59c : xlatb ; or ch, bh ; ljmp ptr [rax - 4] ; out dx, al ; call rdi
0x0000000000167d70 : xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000e8cd8 : xlatb ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f2661 : xlatb ; pushfq ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000008df44 : xlatb ; ret
0x0000000000169e06 : xlatb ; ret 0x4e27
0x00000000000032f8 : xlatb ; ret 0x5a51
0x00000000000939e7 : xlatb ; ret 0x94c
0x000000000008df2f : xlatb ; ret 0xc085
0x000000000008c3f0 : xlatb ; ret 0xc148
0x0000000000149ee4 : xlatb ; ret 0xe883
0x000000000008e71b : xlatb ; ret 0xf188
0x0000000000093b64 : xlatb ; ret 0xf66
0x000000000014a0a8 : xlatb ; ret 0xff2d
0x0000000000106945 : xlatb ; ret 0xfffd
0x00000000000935cd : xlatb ; retf
0x000000000008b070 : xlatb ; retf -0x152d
0x0000000000168cf2 : xlatb ; retf -0x2081
0x000000000014d715 : xlatb ; retf -0x23b
0x000000000014d842 : xlatb ; retf -0x367b
0x0000000000093ac4 : xlatb ; retf -0x3eb8
0x0000000000167dc4 : xlatb ; retf -0x5e15
0x00000000000aeee2 : xlatb ; retf -0x7ab8
0x00000000000aed8c : xlatb ; retf 0xf66
0x000000000008e311 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000014d775 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000008e0f3 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000008e596 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000008e5c5 : xlatb ; rol dword ptr [rbp + 0x317575c0], -0x40 ; ret
0x00000000001499f2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x000000000014d4c2 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x00000000000990be : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000152966 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008e534 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008c2d6 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008c196 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008c056 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008bf16 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008bdd6 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008bc96 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008bb56 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008ba16 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008b8d6 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008b796 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008b656 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008b516 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008b3d6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008b296 : xlatb ; sal bh, 1 ; ret 0xfffc
0x000000000008b156 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000152962 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000093985 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000093996 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000180f3d : xlatb ; std ; jmp rax
0x000000000016c649 : xlatb ; sti ; jmp qword ptr [rax]
0x000000000009f925 : xlatb ; sub eax, 0xf48000b ; ret 0x66c3
0x00000000000e18e3 : xlatb ; syscall
0x000000000016a465 : xlatb ; xchg eax, edx ; mov esi, dr1 ; jrcxz 0x16a451 ; cmp al, 0x93 ; in al, dx ; retf -0x51ce
0x0000000000128808 : xlatb ; xor eax, eax ; ret
0x00000000000986f8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009868e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000001936b0 : xor ah, bh ; jmp rdx
0x0000000000002624 : xor ah, byte ptr [rsi] ; sahf ; jl 0x25bd ; loop 0x2608 ; ret 0x23cb
0x0000000000180d3c : xor ah, ch ; cld ; jmp qword ptr [rax]
0x000000000017e0ac : xor ah, ch ; cmc ; call rax
0x00000000001844cd : xor al, 0 ; add byte ptr [rax + 0x43], al ; cli ; call qword ptr [rdi]
0x000000000018a33d : xor al, 0 ; add byte ptr [rax - 0x20], ah ; out dx, al ; jmp qword ptr [rsi]
0x00000000001899d8 : xor al, 0 ; add byte ptr [rax], al ; and al, 0x89 ; add byte ptr [rax], al ; ret 0xffee
0x00000000000f0f41 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000184595 : xor al, 0 ; add byte ptr [rax], bh ; sub ebp, ebx ; call qword ptr [rcx]
0x000000000018457d : xor al, 0 ; add byte ptr [rax], dh ; sub ebp, ebx ; call qword ptr [rcx]
0x00000000000625cb : xor al, 0 ; call rax
0x0000000000068ab8 : xor al, 0 ; pop rbx ; pop rbp ; ret
0x00000000001822ec : xor al, 0x12 ; add byte ptr [rax], al ; nop ; insb byte ptr [rdi], dx ; std ; jmp qword ptr [rdi]
0x00000000001678ea : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000c8b32 : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000002071 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000b0097 : xor al, 0x39 ; ret
0x0000000000194aec : xor al, 0x3a ; add dword ptr [rax], eax ; rol ch, 1 ; hlt ; call qword ptr [rsi]
0x00000000001952ec : xor al, 0x42 ; add dword ptr [rax], eax ; mov al, 0xd9 ; hlt ; jmp qword ptr [rcx]
0x000000000008e64b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000125e53 : xor al, 0x4c ; mov edi, edi ; mov eax, 3 ; syscall
0x0000000000169986 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000009dfc1 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000311fd : xor al, 0x89 ; ret 0x5525
0x000000000009df89 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x00000000000b82c8 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x000000000002b2aa : xor al, 0xb0 ; add rsi, r8 ; jmp rsi
0x00000000000b8262 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x000000000018c3ec : xor al, 0xb3 ; add byte ptr [rax], al ; push rax ; jo 0x18c3e9 ; jmp qword ptr [rcx]
0x0000000000031ddc : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x0000000000168aca : xor al, 0xd8 ; ret
0x000000000017d6e5 : xor al, 0xf3 ; jmp qword ptr [rax]
0x000000000019e569 : xor al, 0xf7 ; call rcx
0x00000000001954d9 : xor al, 0xf9 ; call qword ptr [rax]
0x000000000017a469 : xor al, 0xfb ; jmp qword ptr [rax]
0x000000000017a489 : xor al, 0xfb ; jmp rax
0x000000000009f128 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f0d21 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x000000000017dd3c : xor al, bl ; hlt ; jmp qword ptr [rax]
0x000000000000075d : xor al, byte ptr [rax + rcx*4 + 0x2000008a] ; add byte ptr [rdx], dl ; retf
0x000000000000fc60 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008060a : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f0fd1 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000081fdc : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000082068 : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000840ca : xor al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000080699 : xor al, byte ptr [rax] ; jne 0x806a5 ; ret
0x0000000000080673 : xor al, byte ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000007d8ae : xor al, byte ptr [rax] ; mov qword ptr [rsp + 0x10], rdx ; xor edi, edi ; call qword ptr [rax]
0x000000000008314d : xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000007d7c3 : xor al, byte ptr [rax] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007c474 : xor al, byte ptr [rax] ; test eax, eax ; js 0x7c487 ; ret
0x000000000007d998 : xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000017aa14 : xor al, byte ptr [rbx + rdi*8 - 0x47c5d01] ; call qword ptr [rdx]
0x00000000000e8401 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000051a3e : xor al, ch ; mov word ptr [rsi - 1], gs ; dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x00000000000ecea8 : xor al, ch ; ret 0xf81d
0x0000000000103a20 : xor al, ch ; retf 0x242
0x0000000000123a50 : xor al, ch ; retf 0xb
0x000000000018dd39 : xor al, dh ; call qword ptr [rax]
0x00000000000e65c8 : xor ax, ax ; ret
0x000000000017a0c0 : xor bh, al ; cld ; call rax
0x000000000017a465 : xor bh, bl ; inc dword ptr [rax + 0x34] ; sti ; jmp qword ptr [rax]
0x000000000017a485 : xor bh, bl ; inc dword ptr [rax] ; xor al, 0xfb ; jmp rax
0x000000000017c3c5 : xor bh, ch ; call qword ptr [rax]
0x000000000017c3bd : xor bh, ch ; call rax
0x000000000016c6d0 : xor bh, ch ; sti ; jmp qword ptr [rax + 0x10fffbf0]
0x000000000017eb6d : xor bh, dh ; call rax
0x000000000017cb24 : xor bh, dh ; out dx, eax ; jmp rax
0x000000000008e17c : xor bl, al ; nop ; xor eax, eax ; ret
0x0000000000002373 : xor bl, al ; retf 0x23c4
0x000000000017a481 : xor bl, bh ; jmp qword ptr [rax]
0x000000000017a4a1 : xor bl, bh ; jmp rax
0x0000000000067780 : xor bl, byte ptr [rbp - 0x7817fff0] ; ret 8
0x0000000000184860 : xor bpl, bl ; jmp qword ptr [rdx]
0x00000000001112b8 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000009f21c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008e04d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000071faa : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000043427 : xor byte ptr [r8 - 0x75], r9b ; jg 0x4349d ; xor eax, eax ; ret
0x000000000009de64 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000077b6b : xor byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; retf 0x10
0x0000000000033bc7 : xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000074b8d : xor byte ptr [rax + 0x29], cl ; retf 0x3949
0x0000000000051c8a : xor byte ptr [rax + 0x39], cl ; retf 0xc7
0x00000000000d62d3 : xor byte ptr [rax + 0x63], cl ; cmp byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x00000000000b6bb5 : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000e0e4f : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000093441 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000014d352 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000084a08 : xor byte ptr [rax + 1], cl ; ret
0x000000000008e626 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000071fab : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000000e5aa0 : xor byte ptr [rax + 1], cl ; retf -0x76b8
0x0000000000048389 : xor byte ptr [rax + 9], cl ; ret 0xb848
0x000000000017b064 : xor byte ptr [rax - 0x504f0005], dh ; sti ; jmp qword ptr [rax]
0x000000000009b7a7 : xor byte ptr [rax - 0x73], cl ; ret
0x00000000000437a8 : xor byte ptr [rax - 0x75], cl ; jbe 0x43824 ; xor eax, eax ; ret
0x0000000000043428 : xor byte ptr [rax - 0x75], cl ; jg 0x4349c ; xor eax, eax ; ret
0x00000000000437a7 : xor byte ptr [rax - 0x75], r9b ; jbe 0x43825 ; xor eax, eax ; ret
0x00000000000988ff : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000120eda : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000a051d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000074ac3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007d904 : xor byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x28 ; call rax
0x000000000002f011 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000f7ce6 : xor byte ptr [rax - 0x77], cl ; ret 0x4d64
0x00000000000ccf86 : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001112b9 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000f7d23 : xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000009de65 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf -0x1b8b
0x0000000000194030 : xor byte ptr [rax - 0xc], dl ; jmp qword ptr [rcx]
0x000000000007254d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000077b6c : xor byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf 0x10
0x000000000000bd18 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000212f9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000084148 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002108e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000036ad2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000002d4d5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000037064 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002df2e : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000009dfe5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f1471 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000fd33b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xfd379 ; call rax
0x000000000004b649 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000007030a : xor byte ptr [rax], al ; je 0x70314 ; ret
0x0000000000075e81 : xor byte ptr [rax], al ; je 0x75e92 ; add rsp, 0x38 ; ret
0x000000000009d1e7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000876c8 : xor byte ptr [rbp + 0x29], cl ; retf -0x74ba
0x0000000000087efb : xor byte ptr [rbp + 0x31], al ; ror byte ptr [rbp + 0x29], cl ; retf -0x74ba
0x000000000009f220 : xor byte ptr [rbp + 0x3d], dh ; ret
0x000000000009f21f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000009dc35 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000079cb8 : xor byte ptr [rbp + 5], 0x5b ; ret
0x000000000017a070 : xor byte ptr [rbp - 0x51df0004], ch ; cld ; call qword ptr [rax]
0x000000000019b590 : xor byte ptr [rbp - 0xa], cl ; call qword ptr [rax]
0x000000000017a588 : xor byte ptr [rbp - 5], bl ; call qword ptr [rax]
0x00000000001a2b50 : xor byte ptr [rbp - 5], ch ; jmp qword ptr [rdx]
0x00000000000dd000 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000109afc : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d6fa2 : xor byte ptr [rbx + 0x634801c3], al ; retf
0x00000000001a32a7 : xor byte ptr [rbx + 0xa550206], al ; ret
0x000000000018b5b7 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x000000000017bdcc : xor byte ptr [rbx - 0x14], bl ; jmp qword ptr [rax]
0x000000000011340d : xor byte ptr [rbx - 0x3d], bl ; ret
0x000000000017b04c : xor byte ptr [rbx - 0x554f0005], ch ; sti ; jmp qword ptr [rax]
0x000000000003f93f : xor byte ptr [rbx - 0x68f0f606], al ; ret 0xd284
0x0000000000045707 : xor byte ptr [rbx - 0x78f0f608], al ; retf -2
0x00000000000a4e06 : xor byte ptr [rbx - 0x7af0cfc5], al ; ret
0x000000000017a5a4 : xor byte ptr [rbx - 5], bl ; call qword ptr [rax]
0x000000000017fd34 : xor byte ptr [rbx - 7], ch ; jmp rax
0x000000000009f21d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000155ec4 : xor byte ptr [rcx + 0x21], cl ; retf -0x76b4
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x000000000003c725 : xor byte ptr [rcx - 0x77], al ; ret 0x4489
0x000000000005bbb3 : xor byte ptr [rcx - 0x77], cl ; ret
0x000000000007233e : xor byte ptr [rcx - 0x77], cl ; ret 0x8948
0x0000000000158bd6 : xor byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xe781
0x000000000005bbd5 : xor byte ptr [rcx - 0x7d], cl ; ret
0x000000000016c520 : xor byte ptr [rcx - 0xf], bl ; jmp rax
0x00000000000e704c : xor byte ptr [rcx], 0xc0 ; ret
0x000000000017a3c0 : xor byte ptr [rcx], 0xfb ; inc dword ptr [rax + 0x33] ; sti ; jmp qword ptr [rax]
0x0000000000167dce : xor byte ptr [rcx], ah ; retf
0x0000000000128706 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000007254e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000765b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006bc39 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f0621 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000007c4b7 : xor byte ptr [rcx], al ; ret
0x000000000017d704 : xor byte ptr [rcx], bh ; call qword ptr [rax]
0x00000000000c9e9f : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f340a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000005ba38 : xor byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000c8532 : xor byte ptr [rcx], dl ; je 0xc8546 ; xor eax, eax ; ret
0x000000000017c2f4 : xor byte ptr [rdi + rbp*8], cl ; dec eax ; ret 0
0x000000000017cd4c : xor byte ptr [rdi - 0x10], bl ; jmp rax
0x000000000017b77c : xor byte ptr [rdi - 0x15], ah ; call rax
0x0000000000180e9c : xor byte ptr [rdi - 3], ch ; jmp qword ptr [rax]
0x000000000019acc0 : xor byte ptr [rdi], 0xf6 ; jmp rbx
0x000000000017faa4 : xor byte ptr [rdi], al ; stc ; call rax
0x000000000017b198 : xor byte ptr [rdi], bl ; std ; jmp rax
0x00000000000eb671 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x000000000011523e : xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000083c46 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000a1e75 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x000000000017a040 : xor byte ptr [rdx - 0x5cff0004], ah ; cld ; call rax
0x000000000017a644 : xor byte ptr [rdx - 5], bl ; call qword ptr [rax]
0x000000000017fcf1 : xor byte ptr [rdx], al ; add al, dl ; pop rdi ; stc ; call qword ptr [rax]
0x000000000018e6d7 : xor byte ptr [rdx], al ; mov esp, 0x41280e0a ; ret
0x0000000000191615 : xor byte ptr [rdx], al ; ret
0x00000000001909ff : xor byte ptr [rdx], al ; ret 0xe0a
0x0000000000196f0f : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 0x6e ; ret
0x000000000014f3bf : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009394c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008e04e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000169ade : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000017a62c : xor byte ptr [rsi - 5], bl ; call qword ptr [rax]
0x00000000001805c4 : xor byte ptr [rsi - 6], cl ; jmp qword ptr [rax]
0x000000000009e59c : xor byte ptr [rsi], al ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001861d0 : xor byte ptr [rsp + rbp*8], ch ; jmp rdi
0x000000000016c5b4 : xor ch, ah ; int1 ; call rax
0x0000000000184951 : xor ch, bl ; call qword ptr [rsi]
0x0000000000184849 : xor ch, bl ; jmp qword ptr [rax]
0x0000000000184831 : xor ch, bl ; jmp qword ptr [rbx]
0x0000000000184861 : xor ch, bl ; jmp qword ptr [rdx]
0x000000000009cf78 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009cf8e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009cfb0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009cfce : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009cfee : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009d014 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009d030 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009d050 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009d070 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009d096 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009d0b8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009d0d6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009d0f6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009d112 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009d132 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009d152 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009d172 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009d198 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009d1e8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009cebe : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009cedc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009cefc : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009cf1e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009cf3e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009cf5e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009cdf4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009ce06 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009ce1c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ce34 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009ce4a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ce5c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009ce7a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ce86 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009ce9c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009cde0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000100f14 : xor ch, dh ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000180fd0 : xor cl, 0 ; add byte ptr [rax - 0x1e], al ; std ; call rax
0x00000000000b6bb0 : xor cl, byte ptr [rax - 0x75] ; jl 0xb6be1 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000011912f : xor cl, byte ptr [rax - 0x77] ; jp 0x119141 ; ret
0x000000000011b85f : xor cl, byte ptr [rax - 0x77] ; jp 0x11b871 ; ret
0x000000000011b877 : xor cl, byte ptr [rax - 0x77] ; jp 0x11b889 ; ret
0x000000000011c0af : xor cl, byte ptr [rax - 0x77] ; jp 0x11c0c1 ; ret
0x000000000011c0c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x11c0d9 ; ret
0x000000000011c0f7 : xor cl, byte ptr [rax - 0x77] ; jp 0x11c109 ; ret
0x00000000000e8c45 : xor cl, byte ptr [rax - 0x77] ; ret
0x000000000004568f : xor cl, byte ptr [rax - 0x77] ; ret 0x78e8
0x000000000003805d : xor cl, byte ptr [rax - 0x77] ; ret 0xaae8
0x0000000000038235 : xor cl, byte ptr [rax - 0x77] ; ret 0xd2e8
0x0000000000038425 : xor cl, byte ptr [rax - 0x77] ; ret 0xe2e8
0x00000000000bd901 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x0000000000117dcc : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c8547 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000098570 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001800e4 : xor cl, dl ; stc ; call rax
0x00000000000f1c65 : xor dh, bl ; ret
0x000000000002b5fc : xor dh, dh ; ret 0x4002
0x00000000001169c4 : xor dh, dh ; ret 0xc707
0x00000000000851ca : xor dl, byte ptr [rbx + rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000017c93c : xor dl, cl ; out dx, eax ; inc dword ptr [rax - 0x11] ; add byte ptr [rax], al ; retf
0x000000000002c99f : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000ed856 : xor dword ptr [rax + 0x88], edi ; syscall
0x00000000000800f5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000005128d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x77e9
0x000000000008a5ce : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000168d76 : xor dword ptr [rax - 0x7d993651], ebp ; retf -0x1b6a
0x00000000000c99c0 : xor dword ptr [rax - 0x7d], ecx ; mov byte ptr [rcx], 0x39 ; ret 0xe37c
0x00000000000645db : xor dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000121a61 : xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000c7b0 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000098d0 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x59
0x00000000000f0e71 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000fde39 : xor dword ptr [rbx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000017d381 : xor dword ptr [rcx], eax ; add al, dh ; sub dh, dl ; jmp rax
0x00000000000f07e1 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000180e99 : xor dword ptr [rcx], eax ; add byte ptr [rax], dh ; outsd dx, dword ptr [rsi] ; std ; jmp qword ptr [rax]
0x000000000017d391 : xor dword ptr [rcx], eax ; add byte ptr [rax], dl ; sub esi, edx ; call qword ptr [rax]
0x00000000000d8e44 : xor dword ptr [rip + 0x5a0a8900], ebp ; pop rcx ; pop rbx ; ret
0x000000000007aa2a : xor eax, 0x100333e ; ret
0x0000000000166954 : xor eax, 0x10ffecb5 ; mov bl, 0xec ; call qword ptr [rax]
0x000000000000cf38 : xor eax, 0x11000054 ; add byte ptr [rcx], ah ; add al, ch ; ret
0x0000000000031bab : xor eax, 0x134d90 ; add rdx, rsi ; jmp rdx
0x0000000000040c38 : xor eax, 0x193 ; call rax
0x00000000000e6e2f : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001269d2 : xor eax, 0x285a39 ; mov edi, ebp ; call 0xe2cd8
0x00000000001269d2 : xor eax, 0x285a39 ; mov edi, ebp ; call 0xe2cd9
0x000000000012896b : xor eax, 0x285f88 ; xor eax, eax ; ret
0x0000000000126480 : xor eax, 0x28adbb ; xor eax, eax ; syscall
0x000000000012623e : xor eax, 0x28affd ; mov eax, r14d ; syscall
0x000000000006d27b : xor eax, 0x30 ; call rax
0x00000000000625c8 : xor eax, 0x349993 ; call rax
0x000000000005a908 : xor eax, 0x351653 ; call rax
0x000000000005a254 : xor eax, 0x351d07 ; call rax
0x0000000000057348 : xor eax, 0x354c13 ; call rax
0x000000000004e6dc : xor eax, 0x35d87f ; call rax
0x000000000004b680 : xor eax, 0x3608db ; call rax
0x000000000017a3c9 : xor eax, 0x3700fffb ; sti ; jmp rax
0x0000000000076161 : xor eax, 0x39480000 ; ret
0x000000000017d3f1 : xor eax, 0x40000001 ; call rax
0x000000000003d6d6 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000152243 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000054475 : xor eax, 0x58d4800 ; retf 0x3551
0x00000000000534f7 : xor eax, 0x83827500 ; retf -0x1401
0x000000000005316c : xor eax, 0x840f0000 ; retf
0x00000000001153e7 : xor eax, 0x8b000001 ; adc byte ptr [rdi], cl ; retf -0x2877
0x00000000000e1ee2 : xor eax, 0xb8c7894c ; test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000024b5 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x0000000000085184 : xor eax, 0xf48000b ; ret 0xc3f3
0x000000000007a63d : xor eax, 0xffffe29e ; call rax
0x000000000007a175 : xor eax, 0xffffe766 ; call rax
0x0000000000078e5b : xor eax, 0xfffffa80 ; call rax
0x0000000000078c13 : xor eax, 0xfffffcc8 ; call rax
0x000000000006d574 : xor eax, 0xfffffd37 ; call rax
0x000000000002108b : xor eax, dword ptr [0x30] ; call rax
0x000000000002d4d2 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000004b646 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x000000000007aa99 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f0f71 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000007b226 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007aa26 : xor eax, dword ptr [rax] ; add dword ptr [rip + 0x333e35], 1 ; ret
0x000000000007c225 : xor eax, dword ptr [rax] ; jae 0x7c1e0 ; ret
0x000000000007a995 : xor eax, dword ptr [rax] ; ret
0x00000000000fdcd7 : xor eax, dword ptr [rbx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000010cda4 : xor eax, dword ptr [rcx - 0x7d] ; sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000000000f1883 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007c224 : xor eax, dword ptr es:[rax] ; jae 0x7c1e1 ; ret
0x00000000000fdcd6 : xor eax, dword ptr es:[rbx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000007b276 : xor eax, dword ptr ss:[rax] ; ret
0x00000000000ba880 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000042a89 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000811ae : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000b2cf2 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010a2a5 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000106d68 : xor eax, eax ; add rsp, 0x28 ; ret
0x000000000011d2b1 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000128798 : xor eax, eax ; add rsp, 0x38 ; ret
0x0000000000036b9c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000034660 : xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x00000000000818a0 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002cfd0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000126787 : xor eax, eax ; call 0xe29f4
0x0000000000073037 : xor eax, eax ; call rbx
0x0000000000120ee0 : xor eax, eax ; call rdx
0x0000000000037136 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x37148 ; pop rbx ; ret
0x00000000000cd0ac : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xcd04d ; pop rbx ; ret
0x00000000000f340b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000ca303 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xca318 ; ret
0x00000000000ebfea : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xec001 ; pop rbx ; ret
0x00000000000e790e : xor eax, eax ; cmp rdi, rdx ; ja 0xe7948 ; ret
0x0000000000120a2c : xor eax, eax ; cmp rdx, rcx ; je 0x120a48 ; ret
0x00000000000fc687 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000008590c : xor eax, eax ; jmp 0x858d6
0x00000000000d12c0 : xor eax, eax ; jmp 0xd128a
0x0000000000115650 : xor eax, eax ; jmp rcx
0x00000000000fd645 : xor eax, eax ; leave ; ret
0x000000000010bee8 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x000000000010b1bd : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000e6fe0 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000010c199 : xor eax, eax ; mov eax, r8d ; ret
0x000000000014e4c0 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x14e4b4 ; ret
0x0000000000037702 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000010b174 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000008a5f8 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000debdb : xor eax, eax ; mov qword ptr [rsp], r10 ; call 0x6adf8
0x00000000000fd4a1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000011fc18 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x0000000000119bc7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000037df0 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000f6f5f : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085267 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000c0857 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000158b25 : xor eax, eax ; pop rbx ; pop r14 ; ret
0x00000000001137b2 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000114d6f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000002310f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af8d8 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000002995a : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000023257 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000325e6 : xor eax, eax ; pop rbx ; ret
0x000000000010bc06 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000034bd8 : xor eax, eax ; ret
0x000000000008c5fe : xor eax, eax ; sub eax, ecx ; ret
0x000000000002b6a4 : xor eax, eax ; syscall
0x0000000000075350 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000075360 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000009fd67 : xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000001498fc : xor eax, eax ; vzeroupper ; ret
0x0000000000037a3e : xor eax, ecx ; ret
0x00000000000370a7 : xor eax, edx ; sub eax, edx ; ret
0x00000000000370bb : xor eax, edx ; sub rax, rdx ; ret
0x0000000000102ad1 : xor ebp, dword ptr [rsi - 0x76b7ffd6] ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x0000000000073cc4 : xor ebp, ebp ; call 0x207ac
0x00000000000f00f9 : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000028d7 : xor ebp, edi ; out dx, al ; retf 0x182c
0x000000000017ded5 : xor ebp, esi ; call rax
0x00000000000b09bb : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000826da : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000004c7c8 : xor ebx, ebx ; jmp rax
0x000000000017a421 : xor ebx, edi ; call rax
0x000000000017a3c1 : xor ebx, edi ; inc dword ptr [rax + 0x33] ; sti ; jmp qword ptr [rax]
0x000000000017a401 : xor ebx, edi ; inc dword ptr [rax] ; xor edi, ebx ; jmp rax
0x000000000017a3e1 : xor ebx, edi ; jmp qword ptr [rax]
0x00000000000e8ca5 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000086bf5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002448d : xor ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000d535c : xor ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000001a6090 : xor ecx, dword ptr [rax] ; add byte ptr [rax], al ; retf 6
0x000000000008319c : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000002b932 : xor ecx, eax ; ret 0x4809
0x0000000000033480 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000293f3 : xor ecx, ecx ; call r15
0x000000000002d7b0 : xor ecx, ecx ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000a005e : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000111444 : xor edi, dword ptr [0x30] ; call rax
0x00000000000ece37 : xor edi, ebx ; dec dword ptr [rax + 0x39] ; ret
0x000000000017a3c5 : xor edi, ebx ; jmp qword ptr [rax]
0x000000000017a405 : xor edi, ebx ; jmp rax
0x000000000007ba19 : xor edi, edi ; call qword ptr [r14]
0x000000000007d8b5 : xor edi, edi ; call qword ptr [rax]
0x00000000000ba565 : xor edi, edi ; call rax
0x00000000000fd39e : xor edi, edi ; mov eax, 0xe3 ; syscall
0x00000000000ba57a : xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000210e0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000007b9ea : xor edi, edi ; mov r13, rdx ; call qword ptr [r14]
0x0000000000110380 : xor edi, edi ; mov rax, rdi ; ret
0x00000000000e74bc : xor edi, edi ; syscall
0x0000000000185451 : xor edi, edx ; jmp qword ptr [rcx]
0x00000000001246fe : xor edi, esp ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000005f77a : xor edx, 0xffffffff ; dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000036acf : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0x5a ; ret 0x2a63
0x0000000000021ea3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000b33a1 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000111fc5 : xor edx, edx ; call rax
0x000000000004eb03 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x0000000000076169 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff479 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00000000000799c3 : xor edx, edx ; jmp rax
0x00000000000a0060 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000021209 : xor edx, edx ; mov eax, 2 ; syscall
0x00000000000e0dcd : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008a68d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000006d1de : xor edx, edx ; mov rsi, r9 ; mov eax, r8d ; syscall
0x0000000000035050 : xor edx, edx ; mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000009d873 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f57c7 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006dbe4 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000e1ce0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000000e0329 : xor esi, esi ; call 0xdce04
0x000000000004b64d : xor esi, esi ; call rax
0x000000000004b90a : xor esi, esi ; jmp rax
0x00000000000e1ce2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000000c13fe : xor esi, esi ; mov eax, 2 ; syscall
0x000000000002f36f : xor esi, esi ; mov eax, ecx ; syscall
0x00000000000ec304 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000023ce0 : xor esi, esi ; mov rdi, r12 ; call 0x20737
0x000000000003463d : xor esi, esi ; mov rdi, r8 ; mov eax, r9d ; syscall
0x00000000000e4524 : xor esi, esi ; mov rdi, rbx ; call 0x20737
0x00000000000fd2c1 : xor esi, esi ; movsxd rdi, edx ; syscall
0x00000000000d7cee : xor esi, esi ; ret
0x00000000000e6ab5 : xor esi, esi ; syscall
0x000000000004c7c7 : xor r11d, r11d ; jmp rax
0x0000000000073cc3 : xor r13d, r13d ; call 0x207ad
0x000000000010b20e : xor r8d, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073036 : xor r8d, r8d ; call rbx
0x000000000010c198 : xor r8d, r8d ; mov eax, r8d ; ret
0x00000000000c8546 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000293f2 : xor r9d, r9d ; call r15
0x00000000000e6e2e : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002108a : xor rax, qword ptr [0x30] ; call rax
0x000000000002d4d1 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021089 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002d4d0 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000093cb5 : xor rax, rax ; ret
0x00000000000370ba : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000111443 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000111442 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000036ace : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000036acd : xor rdx, qword ptr fs:[0x30] ; call rdx
