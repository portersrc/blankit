0x000000000013de51 : adc ah, byte ptr [rbp + rax*2] ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; ret
0x0000000000151ba0 : adc ah, cl ; cmc ; call qword ptr [rbx]
0x000000000007019a : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; retf
0x0000000000070182 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf
0x000000000016a370 : adc al, 0 ; add byte ptr [rax], al ; and al, 0xeb ; add dword ptr [rax], eax ; cwde ; retf
0x0000000000168348 : adc al, 0 ; add byte ptr [rax], al ; cld ; retf 1
0x0000000000167388 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xbb ; add dword ptr [rax], eax ; push rax ; retf -7
0x000000000016a088 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xe8 ; add dword ptr [rax], eax ; nop ; ret 0xfffa
0x0000000000166f40 : adc al, 0 ; add byte ptr [rax], al ; hlt ; mov dh, 1 ; add al, bl ; ret
0x0000000000157af8 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000016a008 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x600001e7 ; ret 0xfffa
0x0000000000151b08 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x62 ; retf
0x0000000000167508 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x800001bc ; retf
0x0000000000151ad8 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdx], fs ; add al, ah ; retf -0xb
0x0000000000167358 : adc al, 0 ; add byte ptr [rax], al ; or al, 0xbb ; add dword ptr [rax], eax ; retf -7
0x00000000001682a8 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 1
0x00000000001582a0 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x0000000000169fd0 : adc al, 0 ; add byte ptr [rax], al ; test ah, bh ; add dword ptr [rax], eax ; ret 0xfffa
0x0000000000157ae0 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000147288 : adc al, 0x12 ; stc ; call rsp
0x00000000001472c0 : adc al, 0x15 ; stc ; jmp rsp
0x00000000000dba7c : adc al, 0x1e ; call r8
0x0000000000025e88 : adc al, 0x26 ; add byte ptr [rax], al ; and dword ptr [rax], eax ; verr bp ; ret 0x13
0x000000000001de30 : adc al, 0x2d ; add byte ptr [rax], al ; and dword ptr [rax], eax ; verr ax ; ret
0x000000000016ec64 : adc al, 0x34 ; add al, byte ptr [rax] ; test al, 0x9a ; sti ; jmp qword ptr [rax]
0x0000000000127a28 : adc al, 0x39 ; idiv bh ; add rsp, 0x18 ; ret
0x000000000014fc64 : adc al, 0x44 ; add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rdx]
0x00000000000b46aa : adc al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b90b3 : adc al, 0x48 ; cmp dword ptr [rdi + 0x18], esi ; je 0xb90c8 ; ret
0x00000000000b8863 : adc al, 0x48 ; cmp dword ptr [rdi], esi ; je 0xb8877 ; ret
0x000000000010648d : adc al, 0x48 ; mov dword ptr [rsp], eax ; call 0x1026f7
0x0000000000148918 : adc al, 0x49 ; sti ; jmp rsp
0x00000000000b3e96 : adc al, 0x50 ; mov qword ptr [rdi], rdx ; ret
0x0000000000150da4 : adc al, 0x54 ; add byte ptr [rax], al ; js 0x150d38 ; cmc ; call qword ptr [rdi]
0x000000000008dc63 : adc al, 0x5b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000001518a4 : adc al, 0x5f ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x0000000000146a98 : adc al, 0x72 ; clc ; call rsp
0x0000000000162fa4 : adc al, 0x76 ; add dword ptr [rax], eax ; fsubr dword ptr [rcx] ; stc ; jmp rdi
0x00000000000e3598 : adc al, 0x87 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000011788d : adc al, 0x89 ; jb 0x117891 ; ret
0x00000000000c912d : adc al, 0x89 ; jb 0xc9131 ; ret
0x00000000001249db : adc al, 0x89 ; xor cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000000d5aac : adc al, 0x8a ; mov qword ptr [rdi], rdx ; ret
0x000000000009597c : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x000000000000861b : adc al, 0x95 ; neg dword ptr [rsi] ; ret
0x0000000000154e64 : adc al, 0x96 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rdx]
0x0000000000003e78 : adc al, 0xb6 ; retf -0x4fea
0x000000000014c464 : adc al, 0xc ; add byte ptr [rax], al ; call 0x1814b890
0x0000000000148fb0 : adc al, 0xc2 ; sti ; jmp qword ptr [rbp + rbx - 0x3cabfffe]
0x0000000000168364 : adc al, 0xcb ; add dword ptr [rax], eax ; js 0x168374 ; cli ; jmp qword ptr [rdx]
0x0000000000144e18 : adc al, 0xd5 ; cmc ; jmp rsp
0x0000000000147d78 : adc al, 0xe1 ; stc ; call rsp
0x00000000000b91ff : adc al, 0xf2 ; mov qword ptr [rdi + 0x210], rdx ; ret
0x000000000016aea4 : adc al, 0xf5 ; add dword ptr [rax], eax ; test al, 0xf7 ; cli ; jmp rdx
0x0000000000148029 : adc al, 0xfa ; jmp rsp
0x000000000009d1c4 : adc al, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000001494d0 : adc al, 0xff ; sti ; call rsp
0x000000000014b964 : adc al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rdx], dl ; hlt ; jmp qword ptr [rdi]
0x00000000000a71aa : adc al, 3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000113010 : adc al, 7 ; ret
0x0000000000108377 : adc al, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000012428d : adc al, byte ptr [rax - 0x78] ; xor cl, byte ptr [rax - 0x7d] ; sub byte ptr [r9], r8b ; ret
0x00000000000253b8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 2
0x0000000000028880 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x36a
0x0000000000027a88 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x7b
0x0000000000015992 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000bdc2 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000138f2 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000017799e : adc al, byte ptr [rax] ; cld ; syscall
0x00000000001744f6 : adc al, byte ptr [rax] ; mov dl, 0xa ; ret
0x0000000000177993 : adc al, byte ptr [rax] ; ret
0x0000000000148d95 : adc al, byte ptr [rdx] ; add ah, al ; xchg eax, edx ; sti ; jmp rsp
0x00000000000ff70a : adc al, ch ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c9527 : adc al, ch ; ret
0x00000000000b5e9f : adc al, ch ; retf
0x00000000000abee0 : adc al, ch ; retf -0x21e
0x00000000000cac20 : adc al, ch ; retf -0x3fe
0x000000000010cc2c : adc al, ch ; sahf ; ret 0xfff7
0x0000000000000bd3 : adc al, cl ; ret
0x000000000014b239 : adc bh, bh ; call rsp
0x00000000000f1706 : adc bh, bh ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000d2aca : adc bh, bh ; ret
0x000000000000592d : adc bh, byte ptr [rsi] ; or ah, al ; retf 0x297c
0x0000000000147289 : adc bh, cl ; call rsp
0x0000000000162679 : adc bh, cl ; jmp rsp
0x000000000014a5b1 : adc bh, dh ; call rsp
0x0000000000145969 : adc bh, dh ; jmp rsp
0x000000000012565c : adc bl, al ; nop ; mov eax, 0xf ; ret
0x000000000013920c : adc bl, al ; nop ; mov eax, 3 ; ret
0x00000000000d8fd9 : adc bl, bh ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x00000000000f051d : adc bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f206e : adc bl, ch ; ret
0x000000000012486a : adc bl, ch ; xchg eax, ecx ; nop dword ptr [rax] ; call rdx
0x00000000000c9141 : adc bl, dh ; ret
0x0000000000007a2b : adc bl, dl ; retf 0x2a62
0x00000000000d8fd8 : adc bl, r15b ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x00000000000fa920 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000124b75 : adc byte ptr [r11 + r11*2], al ; ret
0x00000000000a9f1b : adc byte ptr [r11 - 0x7bf00008], r8b ; retf 0
0x00000000000a88a7 : adc byte ptr [r13 + 0x39], r9b ; retf 0x7276
0x00000000000d3591 : adc byte ptr [r13 - 0x3f60f040], r8b ; ret
0x00000000000d3742 : adc byte ptr [r13 - 0xcea8140], r8b ; ret
0x0000000000124046 : adc byte ptr [r14 + r8 - 0xd], r14b ; ret
0x00000000000bdcf4 : adc byte ptr [r15 + r10 - 0x7d], r14b ; retf -0xf01
0x00000000000c73ce : adc byte ptr [r15], cl ; xchg eax, ebp ; ret 0x2144
0x00000000000b5e09 : adc byte ptr [r15], r9b ; adc dword ptr [rdi + 0x20], eax ; ret
0x00000000000d8d72 : adc byte ptr [r15], r9b ; mov dh, 0x40 ; ret
0x00000000000a8c15 : adc byte ptr [r8 + 0x39], cl ; ret 0x860f
0x0000000000125790 : adc byte ptr [r8 + 0x39], r9b ; or byte ptr [r10 + 8], r14b ; ret
0x00000000000aa1a4 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000000c9171 : adc byte ptr [r8 + 0x39], r9b ; ret 0x876
0x00000000000c31e5 : adc byte ptr [r8 + 0x39], r9b ; ret 0xc74
0x00000000000a23e7 : adc byte ptr [r8 - 0x73], r9b ; push rcx ; dec dword ptr [rax + 0x39] ; ret 0x1c72
0x0000000000118b29 : adc byte ptr [r8 - 0x75], r9b ; add ecx, dword ptr [rax + 0x39] ; retf -0x7bf1
0x00000000000f2203 : adc byte ptr [r8 - 0x77], r9b ; push rdi ; sbb bl, dh ; ret
0x00000000000cb2eb : adc byte ptr [r8 - 0x77], r9b ; sbb r11b, r14b ; ret
0x00000000000a58e3 : adc byte ptr [r8 - 0x78], r8b ; jb 0xa58f0 ; mov eax, esi ; ret
0x000000000008fc75 : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000000142c9 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012539d : adc byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; ret
0x00000000000ddbd0 : adc byte ptr [r8], r8b ; mov qword ptr [rdi], rdx ; ret
0x0000000000117888 : adc byte ptr [r9 - 0x76eb8b10], r9b ; jb 0x117896 ; ret
0x00000000000c9128 : adc byte ptr [r9 - 0x76eb8b10], r9b ; jb 0xc9136 ; ret
0x00000000000a5ade : adc byte ptr [r9 - 0x77], r9b ; ror dword ptr [rbp + 0x29], cl ; retf
0x0000000000124425 : adc byte ptr [r9], al ; pop rbx ; ret
0x000000000010ffe8 : adc byte ptr [rax + 0x21], cl ; retf
0x00000000001194e9 : adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011eb73 : adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000a01cf : adc byte ptr [rax + 0x31], cl ; ret 0x71e9
0x00000000000a01fc : adc byte ptr [rax + 0x31], cl ; retf -0x6b15
0x0000000000125791 : adc byte ptr [rax + 0x39], cl ; or byte ptr [r10 + 8], r14b ; ret
0x00000000000aa1a5 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000a8c16 : adc byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000c9172 : adc byte ptr [rax + 0x39], cl ; ret 0x876
0x00000000000c31e6 : adc byte ptr [rax + 0x39], cl ; ret 0xc74
0x00000000000bac72 : adc byte ptr [rax + 0x39], cl ; ret 0xe875
0x00000000000e1bf8 : adc byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000c39b7 : adc byte ptr [rax + 0x39], cl ; retf 0x7374
0x00000000000c904b : adc byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x17], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000001269e2 : adc byte ptr [rax + 0x39], cl ; sal dword ptr [rax + rdi + 0x4c], 0x39 ; ret 0x8b4c
0x00000000001269e1 : adc byte ptr [rax + 0x39], r9b ; sal dword ptr [rax + rdi + 0x4c], 0x39 ; ret 0x8b4c
0x00000000001248f3 : adc byte ptr [rax + 0x3b], cl ; sbb byte ptr [r11 + 6], r14b ; mov eax, dword ptr [rax] ; ret
0x000000000009b466 : adc byte ptr [rax + 0x474663a], al ; xor eax, eax ; ret
0x000000000009d852 : adc byte ptr [rax + 3], bh ; ret
0x0000000000108b82 : adc byte ptr [rax + 9], cl ; ficomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000132b79 : adc byte ptr [rax + rax*8 - 0x76b7e68c], al ; fucompi st(0) ; retf -0xa73
0x00000000001324ef : adc byte ptr [rax + rax*8 - 0x7cb7f68c], al ; ret
0x00000000000e497c : adc byte ptr [rax - 0x39], cl ; ret 0xfffc
0x00000000000d9b6c : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000e497b : adc byte ptr [rax - 0x39], r9b ; ret 0xfffc
0x00000000000d9b6b : adc byte ptr [rax - 0x39], r9b ; ret 0xffff
0x00000000000a23e8 : adc byte ptr [rax - 0x73], cl ; push rcx ; dec dword ptr [rax + 0x39] ; ret 0x1c72
0x00000000000dbbef : adc byte ptr [rax - 0x75], cl ; adc byte ptr [r15], r9b ; mov dh, 0x40 ; ret
0x0000000000118b2a : adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x39] ; retf -0x7bf1
0x00000000000c3423 : adc byte ptr [rax - 0x75], cl ; jg 0xc3449 ; push 0 ; call 0xbfe49
0x00000000000c5c16 : adc byte ptr [rax - 0x75], cl ; jl 0xc5c47 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5cb6 : adc byte ptr [rax - 0x75], cl ; jl 0xc5ce7 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000011bcb3 : adc byte ptr [rax - 0x75], cl ; push rbp ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011a7b3 : adc byte ptr [rax - 0x75], cl ; push rbp ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011d149 : adc byte ptr [rax - 0x75], cl ; push rbp ; xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011b9eb : adc byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011a4cf : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000001194f0 : adc byte ptr [rax - 0x75], cl ; push rsi ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000a4377 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x1de8
0x00000000000a4174 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x20e8
0x00000000000a455d : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x37e8
0x00000000000a4059 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x3be8
0x00000000000a4346 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x4ee8
0x00000000000a423d : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x57e8
0x00000000000a452c : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x68e8
0x00000000000a4028 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x6ce8
0x00000000000a420c : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x88e8
0x00000000000a45f0 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0xa4e8
0x00000000000a44c5 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0xcfe8
0x00000000000a45bf : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0xd5e8
0x00000000000a4494 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0xe8
0x00000000000a41a5 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0xefe8
0x00000000000a5e1c : adc byte ptr [rax - 0x77], cl ; adc ebp, eax ; retf
0x00000000000c9523 : adc byte ptr [rax - 0x77], cl ; adc r8b, bpl ; ret
0x00000000000cac1c : adc byte ptr [rax - 0x77], cl ; adc r8b, bpl ; retf -0x3fe
0x00000000000cf563 : adc byte ptr [rax - 0x77], cl ; add ebp, eax ; push rsp ; ret
0x000000000009c86a : adc byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000becf8 : adc byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rbx - 0x17] ; scasb al, byte ptr [rdi] ; retf
0x000000000011067c : adc byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000010f27d : adc byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf -0x860
0x00000000000a7993 : adc byte ptr [rax - 0x77], cl ; js 0xa79b1 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a79cf : adc byte ptr [rax - 0x77], cl ; js 0xa79f5 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f8a1c : adc byte ptr [rax - 0x77], cl ; or r8b, bpl ; retf -0x6dc
0x00000000000fabf3 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f2204 : adc byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x00000000000a1a32 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000a437a : adc byte ptr [rax - 0x77], cl ; ret 0x1de8
0x00000000000a4177 : adc byte ptr [rax - 0x77], cl ; ret 0x20e8
0x00000000000a4560 : adc byte ptr [rax - 0x77], cl ; ret 0x37e8
0x00000000000a405c : adc byte ptr [rax - 0x77], cl ; ret 0x3be8
0x00000000000a4349 : adc byte ptr [rax - 0x77], cl ; ret 0x4ee8
0x00000000000a4240 : adc byte ptr [rax - 0x77], cl ; ret 0x57e8
0x00000000000a452f : adc byte ptr [rax - 0x77], cl ; ret 0x68e8
0x00000000000a402b : adc byte ptr [rax - 0x77], cl ; ret 0x6ce8
0x00000000000a420f : adc byte ptr [rax - 0x77], cl ; ret 0x88e8
0x0000000000095faf : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a875c : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000a45f3 : adc byte ptr [rax - 0x77], cl ; ret 0xa4e8
0x00000000000a44c8 : adc byte ptr [rax - 0x77], cl ; ret 0xcfe8
0x00000000000a45c2 : adc byte ptr [rax - 0x77], cl ; ret 0xd5e8
0x00000000000a4497 : adc byte ptr [rax - 0x77], cl ; ret 0xe8
0x00000000000a41a8 : adc byte ptr [rax - 0x77], cl ; ret 0xefe8
0x0000000000109248 : adc byte ptr [rax - 0x77], cl ; retf
0x00000000000e44a6 : adc byte ptr [rax - 0x77], cl ; retf -0x76b7
0x00000000000cb2ec : adc byte ptr [rax - 0x77], cl ; sbb r11b, r14b ; ret
0x00000000000d1aeb : adc byte ptr [rax - 0x77], cl ; sbb r8b, bpl ; retf
0x00000000001177fc : adc byte ptr [rax - 0x78], al ; jb 0x117805 ; ret
0x00000000000a58e4 : adc byte ptr [rax - 0x78], al ; jb 0xa58ef ; mov eax, esi ; ret
0x00000000000c909c : adc byte ptr [rax - 0x78], al ; jb 0xc90a5 ; ret
0x0000000000000b60 : adc byte ptr [rax - 0x78fdf520], cl ; ret 0x50a3
0x00000000000a78d6 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x000000000008fc76 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000a1e08 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000bae38 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000092792 : adc byte ptr [rax - 0x7d], cl ; ret 0x4838
0x00000000000b928e : adc byte ptr [rax - 0x7d], cl ; retf 0x4cff
0x0000000000123b4f : adc byte ptr [rax - 1], bh ; ret
0x0000000000072088 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x37
0x0000000000072028 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x37
0x0000000000072cd0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x00000000000720e8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000072190 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x00000000000720d0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000781f0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000127d0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000142ca : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000026ee2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000138f7f : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a1ae1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124eb1 : adc byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012539e : adc byte ptr [rax], al ; mov qword ptr [rdi], rax ; ret
0x00000000000ddbd1 : adc byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000125413 : adc byte ptr [rax], al ; ret
0x00000000000dd0d9 : adc byte ptr [rax], bh ; ret
0x0000000000125412 : adc byte ptr [rax], r8b ; ret
0x000000000008f165 : adc byte ptr [rbp + 0x10], dh ; xor eax, eax ; ret
0x00000000000cb38b : adc byte ptr [rbp + 0x32], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011e590 : adc byte ptr [rbp + 0x35], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000119046 : adc byte ptr [rbp + 0x37], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a88a8 : adc byte ptr [rbp + 0x39], cl ; retf 0x7276
0x00000000000cefeb : adc byte ptr [rbp + 0x42], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017425c : adc byte ptr [rbp + 0x501], bl ; retf
0x0000000000004b2d : adc byte ptr [rbp - 0x3687de23], ah ; push rbp ; retf -0x2850
0x0000000000004b2c : adc byte ptr [rbp - 0x3687de23], r12b ; push rbp ; retf -0x2850
0x00000000000d3592 : adc byte ptr [rbp - 0x3f60f040], al ; ret
0x00000000000b49bc : adc byte ptr [rbp - 0x77], al ; retf
0x00000000000d3743 : adc byte ptr [rbp - 0xcea8140], al ; ret
0x00000000000c13fc : adc byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x18] ; jmp rax
0x00000000000c142c : adc byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000c13e4 : adc byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000c1414 : adc byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x30] ; jmp rax
0x00000000000c13cc : adc byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax + 0x38] ; jmp rax
0x00000000000909f5 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000091306 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008eea4 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015b1e3 : adc byte ptr [rbx + 0x80e4c02], al ; ret
0x000000000015387b : adc byte ptr [rbx + 0x80e5c02], al ; ret
0x000000000014ccff : adc byte ptr [rbx + 0x80e6102], al ; ret
0x0000000000124b76 : adc byte ptr [rbx + rbx*2], al ; ret
0x00000000000a78aa : adc byte ptr [rbx + rsi*8 - 0xd], dh ; ret
0x0000000000123b79 : adc byte ptr [rbx - 0x3d], bl ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000102db0 : adc byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax + rax] ; call rax
0x00000000000a9f1c : adc byte ptr [rbx - 0x7bf00008], al ; retf 0
0x0000000000171860 : adc byte ptr [rbx - 4], bh ; call qword ptr [rdx]
0x00000000000bb51c : adc byte ptr [rbx], 0 ; add byte ptr [rax + 2], dh ; add byte ptr [rax], al ; ret
0x0000000000106a5c : adc byte ptr [rbx], dh ; clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000c9098 : adc byte ptr [rcx + 0x401074f0], cl ; mov byte ptr [rdx - 1], dh ; ret
0x0000000000001158 : adc byte ptr [rcx + 0x6100882b], dl ; ret 0x4102
0x000000000000590f : adc byte ptr [rcx + 0x740f9c59], 0x77 ; ret
0x00000000000003f4 : adc byte ptr [rcx + rax], al ; retf 0x19
0x000000000009d837 : adc byte ptr [rcx + rcx*4 + 8], cl ; mov eax, 3 ; ret
0x00000000000ddd53 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x8a026
0x00000000000de45c : adc byte ptr [rcx - 0x74b70006], bh ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000117889 : adc byte ptr [rcx - 0x76eb8b10], cl ; jb 0x117895 ; ret
0x00000000000c9129 : adc byte ptr [rcx - 0x76eb8b10], cl ; jb 0xc9135 ; ret
0x00000000000bd21b : adc byte ptr [rcx - 0x77], cl ; add r8b, r13b ; retf
0x00000000000a5adf : adc byte ptr [rcx - 0x77], cl ; ror dword ptr [rbp + 0x29], cl ; retf
0x00000000000b761a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124426 : adc byte ptr [rcx], al ; pop rbx ; ret
0x0000000000090a03 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ee57b : adc byte ptr [rcx], dh ; rcr byte ptr [rbx - 1], cl ; loopne 0xee572 ; stosb byte ptr [rdi], al ; retf -7
0x00000000000b6310 : adc byte ptr [rdi + rdx - 0x7d], dh ; retf -0xf01
0x00000000001265b4 : adc byte ptr [rdi - 0x76b7ffff], al ; ret 0x8348
0x00000000000b5e0a : adc byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], eax ; ret
0x0000000000124207 : adc byte ptr [rdi], cl ; mov dh, 0x40 ; push rbx ; ret
0x00000000000d8d73 : adc byte ptr [rdi], cl ; mov dh, 0x40 ; ret
0x00000000000ae1d7 : adc byte ptr [rdi], cl ; test ch, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000c73cf : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x2144
0x0000000000000bcf : adc byte ptr [rdx + 0x51], bl ; adc al, cl ; ret
0x0000000000163f90 : adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x00000000000b9204 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000148d45 : adc byte ptr [rdx], al ; add byte ptr [rsi + rax*4], ah ; sti ; call rsp
0x0000000000005c50 : adc byte ptr [rdx], dl ; xchg rax, r13 ; jno 0x5c0f ; retf
0x00000000000701b0 : adc byte ptr [rip + 0x14], 0 ; add al, al ; retf
0x0000000000124047 : adc byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000001557a0 : adc byte ptr [rsi - 0xa], ah ; call qword ptr [rsi]
0x0000000000109fac : adc byte ptr [rsi - 3], al ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000012c7ec : adc ch, 0xf5 ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000008caf5 : adc cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + 5], cl ; ret
0x0000000000005c51 : adc cl, byte ptr [rcx - 0x6b] ; jno 0x5c0e ; retf
0x000000000000814d : adc cl, cl ; retf -0x73c9
0x000000000014b981 : adc dh, ah ; jmp qword ptr [rax]
0x000000000014b969 : adc dh, ah ; jmp qword ptr [rdi]
0x00000000000075e9 : adc dh, byte ptr [rbp - 0x599f767b] ; ret 0xc9d1
0x00000000000f82dd : adc dh, byte ptr [rcx] ; imul al ; retf
0x00000000000075e8 : adc dh, byte ptr fs:[rbp - 0x599f767b] ; ret 0xc9d1
0x000000000014f119 : adc dh, ch ; call qword ptr [rdx]
0x0000000000152ee9 : adc dh, dh ; call qword ptr [rbx]
0x0000000000152f01 : adc dh, dh ; call qword ptr [rdx]
0x0000000000144f01 : adc dh, dh ; call rsp
0x0000000000145968 : adc dil, r14b ; jmp rsp
0x00000000000f1705 : adc dil, r15b ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000d2ac9 : adc dil, r15b ; ret
0x0000000000170770 : adc dl, bh ; sti ; call qword ptr [rcx]
0x000000000013349b : adc dword ptr [rax - 0x76b7000b], ecx ; ret
0x00000000000209d8 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000c88a : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000af9a : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000017316d : adc dword ptr [rax], eax ; fimul dword ptr [rsi] ; add eax, 0xca000fac ; syscall
0x00000000001744e4 : adc dword ptr [rax], eax ; retf
0x000000000001b614 : adc dword ptr [rax], eax ; sbb al, 0 ; retf 0x384b
0x000000000000c7f4 : adc dword ptr [rax], eax ; sldt ebp ; ret
0x000000000000eb51 : adc dword ptr [rax], r8d ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000008df36 : adc dword ptr [rbx + 0x30], eax ; movups xmmword ptr [rbx + 0x40], xmm0 ; pop rbx ; ret
0x000000000008df3a : adc dword ptr [rbx + 0x40], eax ; pop rbx ; ret
0x0000000000007c86 : adc dword ptr [rbx - 0x7fe4aeba], ecx ; retf 0x610a
0x00000000000b5e08 : adc dword ptr [rdi + 0x10], eax ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000000b5e0c : adc dword ptr [rdi + 0x20], eax ; ret
0x000000000008e93b : adc dword ptr [rsi - 0x7cb70001], edi ; ret 0x4801
0x0000000000070199 : adc eax, 0x14 ; add byte ptr [rax], al ; cwde ; retf
0x00000000000d9bae : adc eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x000000000000cdc0 : adc eax, 0x210000c5 ; add byte ptr [rdi], dl ; add al, ah ; ret 0x37
0x000000000010646d : adc eax, 0x24048948 ; call 0x1026f7
0x000000000012bcd8 : adc eax, 0x24048948 ; call 0x128737
0x00000000001247d3 : adc eax, 0x25e048 ; jne 0x1247e8 ; ret
0x0000000000124059 : adc eax, 0x25e392 ; je 0x124051 ; jmp rdx
0x00000000000bacb7 : adc eax, 0x2ccc24 ; ret
0x000000000014cde5 : adc eax, 0x2de80000 ; hlt ; call qword ptr [rcx]
0x000000000014cd9d : adc eax, 0x2df00000 ; hlt ; call qword ptr [rdx]
0x000000000017853b : adc eax, 0x55b ; retf 0x502
0x0000000000003b8e : adc eax, 0x63b40cca ; retf
0x0000000000004502 : adc eax, 0x703d3adc ; jno 0x4546 ; ret 0x5a81
0x0000000000004501 : adc eax, 0x703d3adc ; jno 0x4547 ; ret 0x5a81
0x00000000000b9157 : adc eax, 0x8348fffd ; ret 0x4801
0x00000000000d83d6 : adc eax, 0x8948fffb ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000099de6 : adc eax, 0xe2e90000 ; ret
0x0000000000007e00 : adc eax, 0xe4430c98 ; ret
0x0000000000099e1c : adc eax, 0xe7e90000 ; ret 0xffff
0x00000000000a506d : adc eax, 0xe8000990 ; retf -0x1b8
0x00000000000fd097 : adc eax, 0xebfff8ea ; ret
0x00000000001004e1 : adc eax, 0xf8b739e8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000100148 : adc eax, 0xf8bad2e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ffebb : adc eax, 0xf8bd5fe8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ffac7 : adc eax, 0xf8c153e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff6ee : adc eax, 0xf8c52ce8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff142 : adc eax, 0xf8cad8e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fd451 : adc eax, 0xf8e7c9e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fd0d8 : adc eax, 0xf8eb42e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fce52 : adc eax, 0xf8edc8e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fc6a1 : adc eax, 0xf8f579e8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000008d456 : adc eax, 0xffe7c4e8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000008cf59 : adc eax, 0xffecc1e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bb51d : adc eax, dword ptr [rax] ; add byte ptr [rax + 2], dh ; add byte ptr [rax], al ; ret
0x0000000000093034 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000000a478 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x32f
0x0000000000013b80 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000018590 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c7
0x0000000000070062 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x37
0x0000000000070032 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x0000000000000b59 : adc eax, esp ; ret 0x1400
0x00000000000061c7 : adc ebp, dword ptr [rbx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sal dword ptr [rbp - 0x7e], 1 ; call rdi
0x0000000000006869 : adc ebp, dword ptr [rcx + 0x15b7a352] ; retf -0xff6
0x00000000000cc5a3 : adc ebp, eax ; push rdi ; retf -5
0x00000000000a5e1f : adc ebp, eax ; retf
0x00000000000c8890 : adc ebp, eax ; retf -0x3dd
0x00000000000a5364 : adc ebp, ebx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000a2399 : adc ebx, dword ptr [rcx - 0x7cb70002] ; ret 0x4801
0x00000000000d8806 : adc ebx, edi ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000d596c : adc ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 6], cl ; ret
0x00000000000bacc9 : adc ecx, esp ; sub al, 0 ; add eax, 4 ; ret
0x000000000012415c : adc edi, dword ptr [rax - 1] ; ret
0x0000000000005250 : adc edi, dword ptr [rdi - 0x72] ; push rdx ; in eax, -0x37 ; retf
0x00000000000e7aac : adc edi, edx ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000a9c86 : adc edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000123f09 : adc edx, dword ptr [rsi + rsi*8 - 1] ; mov rax, rbx ; pop rbx ; ret
0x0000000000147fe9 : adc edx, edi ; jmp rsp
0x00000000000e8996 : adc edx, edi ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000a0c99 : adc esi, dword ptr [rax - 0x76b70002] ; ret
0x00000000000b4285 : adc esi, dword ptr [rbp + 6] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000124404 : adc esi, ebx ; ret
0x00000000001589d1 : adc esi, edi ; call qword ptr [rax]
0x00000000000aaa5e : adc esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000001287c7 : adc esi, esi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000008d7a3 : adc esi, esp ; or al, byte ptr [rax] ; ret
0x000000000014b939 : adc esp, esi ; jmp qword ptr [rbx]
0x000000000000443e : adc esp, esp ; push rdi ; retf
0x000000000001b7e1 : adc qword ptr [rax], r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000c889 : adc qword ptr [rax], rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000f206d : adc r11b, bpl ; ret
0x00000000000f03d4 : adc r11b, r14b ; ret
0x00000000000c9526 : adc r8b, bpl ; ret
0x00000000000cac1f : adc r8b, bpl ; retf -0x3fe
0x000000000000bdc1 : adc r8b, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000014cd9c : adc rax, 0x2df00000 ; hlt ; call qword ptr [rdx]
0x0000000000006a6e : add ah, 0xb2 ; retf
0x000000000014b933 : add ah, ah ; add byte ptr [rax], al ; add al, bh ; adc esp, esi ; jmp qword ptr [rbx]
0x0000000000150873 : add ah, ah ; add byte ptr [rax], r8b ; fsub dword ptr [rdi - 0xb] ; call qword ptr [rbx]
0x000000000015fa33 : add ah, ah ; add dword ptr [r8], eax ; or byte ptr [rdi - 8], al ; call rax
0x000000000015f733 : add ah, ah ; add dword ptr ds:[rax], eax ; clc ; clc ; call qword ptr [rbx]
0x000000000015db33 : add ah, ah ; and al, byte ptr [rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x0000000000145227 : add ah, ah ; cmp dh, dh ; jmp rsp
0x0000000000162673 : add ah, ah ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; js 0x162694 ; stc ; jmp rsp
0x0000000000152b33 : add ah, ah ; jb 0x152b3f ; add byte ptr [rax - 0x67], bl ; jmp qword ptr [rax]
0x0000000000152f33 : add ah, ah ; jbe 0x152f3f ; add al, cl ; adc dh, dh ; call qword ptr [rdx]
0x0000000000148537 : add ah, ah ; loop 0x148539 ; jmp rsp
0x0000000000167973 : add ah, ah ; mov edi, 0xd0d80001 ; stc ; call rcx
0x00000000001466d7 : add ah, ah ; or al, 0xf8 ; call rsp
0x0000000000146697 : add ah, ah ; or al, bh ; call rsp
0x00000000001479a7 : add ah, ah ; push rax ; stc ; call rsp
0x0000000000171073 : add ah, ah ; push rsi ; add al, byte ptr [rax] ; test al, 0x5e ; cld ; call rsi
0x000000000014b1b7 : add ah, ah ; ret
0x0000000000158573 : add ah, ah ; retf
0x000000000014d633 : add ah, ah ; sbb eax, 0x35a80000 ; hlt ; jmp qword ptr [rbx]
0x000000000014503f : add ah, ah ; sbb esi, esi ; call rsp
0x000000000014792f : add ah, ah ; stc ; call rsp
0x00000000001467c7 : add ah, ah ; xor eax, edi ; jmp rsp
0x000000000014717f : add ah, al ; add edi, ecx ; call rsp
0x000000000014a31f : add ah, al ; add esi, edi ; call rsp
0x000000000015db13 : add ah, al ; and al, byte ptr [rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000015da13 : add ah, al ; and dword ptr [rcx], eax ; add al, ch ; mov bl, 0xf7 ; call qword ptr [rbx]
0x0000000000144eaf : add ah, al ; clc ; cmc ; call rsp
0x0000000000169213 : add ah, al ; fld dword ptr [rcx] ; add al, ch ; popfq ; cli ; call qword ptr [rbx]
0x0000000000146fe7 : add ah, al ; hlt ; clc ; call rsp
0x0000000000145247 : add ah, al ; idiv r15b ; retf
0x000000000014b7e7 : add ah, al ; jne 0x14b7ee ; jmp rsp
0x0000000000144427 : add ah, al ; lahf ; hlt ; call rsp
0x0000000000156e13 : add ah, al ; mov ch, 0 ; add al, cl ; ret
0x0000000000147207 : add ah, al ; or bh, cl ; jmp rsp
0x000000000014a497 : add ah, al ; or bh, dh ; call rsp
0x000000000014c413 : add ah, al ; or eax, dword ptr [rax] ; add al, ch ; sbb al, 0xf4 ; call qword ptr [rdi]
0x0000000000161613 : add ah, al ; pop rbp ; add dword ptr [rax], eax ; sar al, 1 ; call qword ptr [rdx]
0x0000000000171413 : add ah, al ; pop rbx ; add al, byte ptr [rax] ; clc ; jbe 0x17141f ; jmp qword ptr [rbx]
0x000000000000e37f : add ah, al ; ret
0x0000000000157b13 : add ah, al ; ret 0
0x0000000000023d47 : add ah, al ; ret 0x13
0x000000000014848f : add ah, al ; sar dl, cl ; call rsp
0x0000000000149057 : add ah, al ; sar ebx, 1 ; jmp rsp
0x0000000000148707 : add ah, al ; sbb bl, bh ; jmp rsp
0x0000000000147437 : add ah, al ; sbb edi, ecx ; jmp rsp
0x0000000000166353 : add ah, al ; test eax, 0xb6a80001 ; stc ; jmp qword ptr [rdi]
0x0000000000148d97 : add ah, al ; xchg eax, edx ; sti ; jmp rsp
0x000000000014b04f : add ah, al ; xchg esi, edi ; jmp rsp
0x0000000000145c97 : add ah, al ; xor edi, esi ; call rsp
0x000000000016a38b : add ah, bh ; jmp 0xffffffffcba6a399
0x000000000014c44b : add ah, bh ; or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000015144b : add ah, bh ; pop rbx ; add byte ptr [rax], al ; push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rsi
0x0000000000177deb : add ah, bh ; retf
0x000000000016834b : add ah, bh ; retf 1
0x000000000017799f : add ah, bh ; syscall
0x0000000000153f4b : add ah, bh ; xchg byte ptr [rax], al ; add al, al ; sub dh, dh ; call qword ptr [rdx]
0x0000000000154e4b : add ah, bh ; xchg eax, ebp ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xa], cl ; call qword ptr [rbx]
0x000000000015032b : add ah, bl ; add byte ptr [rax], al ; add byte ptr [rsi - 0xb], bl ; call qword ptr [rax]
0x000000000015da2b : add ah, bl ; and dword ptr [rcx], eax ; add al, dh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x0000000000156e2b : add ah, bl ; mov ch, 0 ; add al, dl ; ret
0x0000000000157b2b : add ah, bl ; ret 0
0x0000000000025e47 : add ah, bl ; ret 0x13
0x0000000000003691 : add ah, byte ptr [eax - 0x7c] ; ret 0xb182
0x0000000000003692 : add ah, byte ptr [rax - 0x7c] ; ret 0xb182
0x00000000000f081a : add ah, byte ptr [rbx - 0x76b30007] ; out -0x18, eax ; retf -0x65a
0x000000000014e73b : add ah, ch ; add byte ptr cs:[rax], al ; rcr bh, 0xf4 ; jmp qword ptr [rdx]
0x0000000000163b7b : add ah, ch ; add dword ptr [rcx], 0xf947c000 ; call rdi
0x000000000014da3b : add ah, ch ; and dword ptr [rax], eax ; add al, dl ; cmp dh, ah ; call qword ptr [rdi]
0x000000000014de3b : add ah, ch ; and eax, 0x4de00000 ; hlt ; call qword ptr [rax]
0x0000000000157f3b : add ah, ch ; mov byte ptr [rax], 0 ; nop ; div dh ; call qword ptr [rbx]
0x000000000014c13b : add ah, ch ; or byte ptr [rax], al ; add byte ptr [rax + 0x1b], al ; hlt ; call qword ptr [rdx]
0x000000000016143b : add ah, ch ; pop rbx ; add dword ptr [rax], eax ; mov al, 0xce ; clc ; call qword ptr [rdx]
0x000000000015213b : add ah, ch ; push -0xa400000 ; cmc ; jmp qword ptr [rsi]
0x00000000000191df : add ah, ch ; ret
0x00000000000147bf : add ah, ch ; ret 0x13
0x000000000016843b : add ah, ch ; retf
0x000000000015847b : add ah, ch ; retf 0
0x000000000016e63b : add ah, ch ; sub eax, 0x97f00002 ; sti ; call qword ptr [rbx]
0x000000000016627b : add ah, ch ; test al, 1 ; add al, al ; mov bl, 0xf9 ; jmp qword ptr [rdi]
0x000000000015001b : add ah, cl ; add byte ptr [r8], r8b ; jo 0x150085 ; cmc ; call qword ptr [rdx]
0x000000000016615b : add ah, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; loopne 0x166119 ; stc ; jmp qword ptr [rdi]
0x000000000016911b : add ah, cl ; fadd dword ptr [rcx] ; add byte ptr [rax], dh ; popfq ; cli ; jmp qword ptr [rsi]
0x0000000000152f1b : add ah, cl ; jbe 0x152f27 ; add al, al ; adc dh, dh ; call qword ptr [rbx]
0x000000000017115b : add ah, cl ; push rdi ; add al, byte ptr [rax] ; loopne 0x1711d6 ; cld ; call rsi
0x000000000016831b : add ah, cl ; retf 1
0x000000000016d31b : add ah, cl ; sbb al, byte ptr [rdx] ; add byte ptr [rax - 0x7d], dl ; sti ; call qword ptr [rax]
0x000000000016e91b : add ah, cl ; xor byte ptr [rdx], al ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x0000000000147fe7 : add ah, dh ; adc edx, edi ; jmp rsp
0x000000000015f943 : add ah, dh ; add dword ptr [rax], eax ; js 0x15f996 ; clc ; call qword ptr [rbx]
0x000000000015ef43 : add ah, dh ; add dword ptr ss:[rax], eax ; test al, 0xf5 ; idiv edi ; ret
0x000000000015da43 : add ah, dh ; and dword ptr [rcx], eax ; add al, bh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000014b267 : add ah, dh ; and edi, edi ; jmp rsp
0x0000000000147e37 : add ah, dh ; cli ; stc ; call rsp
0x0000000000144e87 : add ah, dh ; in eax, -0xb ; call rsp
0x000000000014b1df : add ah, dh ; loope 0x14b1e7 ; call qword ptr [rbx + rcx*8]
0x0000000000156e43 : add ah, dh ; mov ch, 0 ; add al, bl ; ret
0x0000000000166f43 : add ah, dh ; mov dh, 1 ; add al, bl ; ret
0x000000000016c643 : add ah, dh ; or eax, 0x78b80002 ; sti ; call qword ptr [rdx]
0x0000000000161343 : add ah, dh ; pop rdx ; add dword ptr [rax], eax ; call 0x13160c22
0x0000000000148b47 : add ah, dh ; pop rsi ; sti ; call rsp
0x00000000001489df : add ah, dh ; push rcx ; sti ; jmp rsp
0x0000000000157b43 : add ah, dh ; ret 0
0x0000000000167b43 : add ah, dh ; ret 1
0x000000000014781f : add ah, dh ; stc ; call rsp
0x000000000014513f : add ah, dh ; sub dh, dh ; jmp rsp
0x000000000014411f : add ah, dh ; test esi, esp ; jmp rsp
0x0000000000144eff : add ah, dl ; adc dh, dh ; call rsp
0x000000000015f923 : add ah, dl ; add dword ptr [rax], eax ; js 0x15f976 ; clc ; call qword ptr [rdx]
0x000000000014da23 : add ah, dl ; and dword ptr [rax], eax ; add al, cl ; cmp dh, ah ; call qword ptr [rbx]
0x00000000001481f7 : add ah, dl ; cli ; push rsp ; retf 1
0x00000000001468af : add ah, dl ; cmp al, 0xf8 ; jmp rsp
0x000000000016aa23 : add ah, dl ; int1 ; add dword ptr [rax], eax ; test al, 0xe2 ; cli ; jmp qword ptr [rbx]
0x0000000000145307 : add ah, dl ; jno 0x145305 ; jmp rsp
0x0000000000149227 : add ah, dl ; loope 0x14922a ; call rsp
0x0000000000147f87 : add ah, dl ; or edi, edx ; call rsp
0x0000000000165763 : add ah, dl ; popfq ; add dword ptr [rax], eax ; test al, 0x8a ; stc ; jmp qword ptr [rdi]
0x0000000000157c63 : add ah, dl ; ret 0
0x0000000000148427 : add ah, dl ; ret 0xfffa
0x0000000000167b23 : add ah, dl ; ret 1
0x0000000000168423 : add ah, dl ; retf
0x0000000000177f13 : add ah, dl ; retf 0x20
0x0000000000168a63 : add ah, dl ; rol byte ptr [rcx], 1 ; add byte ptr [rax], bl ; xor bh, dl ; call rax
0x000000000014d523 : add ah, dl ; sbb al, 0 ; add al, bh ; xor al, 0xf4 ; call qword ptr [rbx]
0x0000000000147de7 : add ah, dl ; stc ; stc ; jmp rsp
0x000000000014bccd : add al, 0 ; add byte ptr [rax + 0x1a], ah ; hlt ; jmp qword ptr [rax]
0x000000000014bc6d : add al, 0 ; add byte ptr [rax + 0x1a], al ; hlt ; jmp qword ptr [rax]
0x000000000014bce5 : add al, 0 ; add byte ptr [rax + 0x1a], ch ; hlt ; call qword ptr [rdi]
0x000000000014bc85 : add al, 0 ; add byte ptr [rax + 0x1a], cl ; hlt ; call qword ptr [rdi]
0x00000000000a4b98 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000013af0 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001d2d0 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000013bf8 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x371
0x00000000001040d7 : add al, 0 ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x30], rax ; ret
0x00000000000a1a81 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000001115f0 : add al, 0 ; add byte ptr [rax], bh ; ret
0x000000000016bbc5 : add al, 0 ; add byte ptr [rdx + rbx*8], al ; retf
0x00000000000acd06 : add al, 0 ; call 0x88f44
0x00000000001783ed : add al, 0 ; ret
0x0000000000174b71 : add al, 0 ; xchg eax, ecx ; add al, 0x10 ; add byte ptr [rax], al ; ret
0x0000000000174b74 : add al, 0x10 ; add byte ptr [rax], al ; ret
0x0000000000090e26 : add al, 0x16 ; ret
0x00000000000d6f46 : add al, 0x1e ; pop rbx ; pop rbp ; ret
0x00000000001474f0 : add al, 0x21 ; stc ; call rsp
0x0000000000106450 : add al, 0x24 ; call 0x1026f4
0x000000000012bcbb : add al, 0x24 ; call 0x128734
0x0000000000112212 : add al, 0x24 ; call 0xde4f4
0x000000000008f04b : add al, 0x24 ; jne 0x8f099 ; add rsp, 0x18 ; ret
0x0000000000158270 : add al, 0x27 ; retf
0x0000000000149ca8 : add al, 0x27 ; std ; call rsp
0x000000000016bc98 : add al, 0x28 ; retf
0x0000000000172ae3 : add al, 0x2a ; retf
0x00000000000da991 : add al, 0x2c ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000016e654 : add al, 0x2e ; add al, byte ptr [rax] ; clc ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x0000000000125c53 : add al, 0x30 ; add bl, dh ; ret
0x000000000016be10 : add al, 0x30 ; retf 0
0x00000000000c913b : add al, 0x31 ; ror byte ptr [rax - 0x77], 0x57 ; adc bl, dh ; ret
0x0000000000106e4b : add al, 0x33 ; jne 0x106e00 ; pop rbx ; pop rbp ; ret
0x0000000000145200 : add al, 0x38 ; idiv bh ; insb byte ptr [rdi], dx ; retf 0
0x00000000001583a8 : add al, 0x3a ; retf 1
0x000000000008f163 : add al, 0x3c ; adc byte ptr [rbp + 0x10], dh ; xor eax, eax ; ret
0x000000000014fd54 : add al, 0x45 ; add byte ptr [rax], al ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x00000000000d2a8b : add al, 0x48 ; add eax, esi ; ret
0x00000000000b8764 : add al, 0x48 ; mov dword ptr [rax + 0x10], esi ; mov qword ptr [rdx], rsi ; ret
0x0000000000123c94 : add al, 0x48 ; mov dword ptr [rbx + 0x10], edx ; pop rbx ; ret
0x0000000000124b2d : add al, 0x48 ; mov dword ptr [rdi + 0x10], eax ; ret
0x000000000012488f : add al, 0x48 ; mov dword ptr [rdi + 0x10], edx ; ret
0x00000000001249e1 : add al, 0x48 ; mov dword ptr [rdi + 0x28], edx ; ret
0x00000000000b39e3 : add al, 0x48 ; mov dword ptr [rdi], edx ; ret
0x000000000008ffe9 : add al, 0x48 ; mov eax, dword ptr [rax - 0x70] ; add rsp, 8 ; ret
0x00000000001481b0 : add al, 0x4c ; cli ; call rsp
0x0000000000147970 : add al, 0x4f ; stc ; call rsp
0x0000000000148990 : add al, 0x51 ; sti ; jmp rsp
0x000000000016c610 : add al, 0x59 ; ret
0x0000000000124b77 : add al, 0x5b ; ret
0x0000000000158220 : add al, 0x5b ; retf
0x0000000000149f18 : add al, 0x5f ; std ; call rsp
0x000000000016bdb8 : add al, 0x6f ; retf 0
0x0000000000005a93 : add al, 0x72 ; ret 0xdf82
0x00000000000b4ef1 : add al, 0x74 ; sub al, 0x89 ; ret 0x2566
0x00000000000b46d2 : add al, 0x75 ; or esi, ebx ; ret
0x000000000016bc38 : add al, 0x79 ; retf
0x0000000000092161 : add al, 0x81 ; add rax, r9 ; jmp rax
0x0000000000095842 : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000c13b7 : add al, 0x82 ; add rax, r10 ; jmp rax
0x00000000000943ab : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000008d063 : add al, 0x82 ; cmp rsi, rax ; seta al ; ret
0x00000000000da995 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000009561b : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000001581e0 : add al, 0x87 ; retf
0x000000000008eed3 : add al, 0x88 ; add rax, r8 ; jmp rax
0x00000000000bacb5 : add al, 0x89 ; adc eax, 0x2ccc24 ; ret
0x0000000000154354 : add al, 0x8b ; add byte ptr [rax], al ; call 0x13153992
0x00000000000cef98 : add al, 0x8e ; mov qword ptr [rdi + 0x28], rax ; ret
0x00000000000d5909 : add al, 0x90 ; ret
0x00000000001447c4 : add al, 0x91 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000144208 : add al, 0x94 ; hlt ; call rsp
0x00000000000de803 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000960ac : add al, 0x97 ; add rax, rdi ; jmp rax
0x0000000000158320 : add al, 0xa7 ; retf 1
0x0000000000166054 : add al, 0xa8 ; add dword ptr [rax], eax ; test al, 0xad ; stc ; call qword ptr [rcx]
0x00000000000d6d84 : add al, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000003e74 : add al, 0xa9 ; cmovno edx, dword ptr [rsi + rsi*4] ; retf -0x4fea
0x00000000000999aa : add al, 0xaa ; add rax, rdx ; jmp rax
0x0000000000166554 : add al, 0xad ; add dword ptr [rax], eax ; call 0x14165f1c
0x000000000016bd58 : add al, 0xae ; retf 0
0x000000000012cc9d : add al, 0xb ; jne 0x12cc52 ; pop rbx ; pop rbp ; ret
0x00000000001388b8 : add al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c7559 : add al, 0xb0 ; ret
0x000000000013961b : add al, 0xb2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012deb8 : add al, 0xb4 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000100618 : add al, 0xb6 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b2085 : add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000bb863 : add al, 0xbf ; pop rbx ; lea rax, qword ptr [rbp + rax*8] ; pop rbp ; ret
0x0000000000157f54 : add al, 0xc7 ; add byte ptr [rax], al ; cwde ; div dh ; call qword ptr [rdx]
0x000000000016bd20 : add al, 0xc7 ; retf 0
0x000000000009274c : add al, 0xc8 ; ret
0x00000000001498f0 : add al, 0xc9 ; cld ; jmp rsp
0x0000000000158954 : add al, 0xd1 ; add byte ptr [rax], al ; or rdi, rsi ; call qword ptr [rax]
0x0000000000142550 : add al, 0xd4 ; stc ; ljmp ptr [rbx - 0x5400063d] ; ret
0x000000000016bbc8 : add al, 0xda ; retf
0x0000000000090e16 : add al, 0xe ; ret
0x00000000001486c8 : add al, 0xe ; sti ; call rsp
0x0000000000146de8 : add al, 0xe8 ; clc ; jmp rsp
0x00000000001133df : add al, 0xe8 ; retf
0x00000000001582c8 : add al, 0xe8 ; retf 1
0x0000000000146e38 : add al, 0xe9 ; clc ; call rsp
0x0000000000146f30 : add al, 0xee ; clc ; jmp rsp
0x00000000000aa3e6 : add al, 0xf0 ; ret
0x00000000000928ea : add al, 0xf1 ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x000000000013b954 : add al, 0xf5 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000000468e : add al, 0xf8 ; ret 0x4c89
0x000000000016bcd8 : add al, 0xfb ; retf 0
0x0000000000149581 : add al, 0xfc ; jmp rsp
0x0000000000147e78 : add al, 0xfc ; stc ; call rsp
0x00000000000ba2aa : add al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000001759c4 : add al, 1 ; retf
0x00000000000003f5 : add al, 1 ; retf 0x19
0x000000000016942b : add al, 2 ; retf 0xe0a
0x0000000000172e02 : add al, 5 ; retf 0x504
0x000000000000756e : add al, 9 ; retf 0xd3ed
0x000000000001247f : add al, ah ; adc dword ptr [rax], r8d ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000c887 : add al, ah ; adc qword ptr [rax], rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000158f1f : add al, ah ; and al, 0xf7 ; call rsi
0x000000000015f68f : add al, ah ; clc ; call qword ptr [rbx]
0x00000000001696bf : add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x000000000014de3f : add al, ah ; hlt ; call qword ptr [rax]
0x000000000017115f : add al, ah ; insb byte ptr [rdi], dx ; cld ; call rsi
0x000000000016609f : add al, ah ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x000000000001d567 : add al, ah ; ret
0x000000000000cdc7 : add al, ah ; ret 0x37
0x000000000001383f : add al, ah ; retf
0x0000000000151adf : add al, ah ; retf -0xb
0x0000000000009237 : add al, ah ; retf 0
0x0000000000016877 : add al, ah ; retf 0x37
0x0000000000021e87 : add al, ah ; retf 0xf
0x000000000014c3af : add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000016615f : add al, ah ; scasd eax, dword ptr [rdi] ; stc ; jmp qword ptr [rdi]
0x0000000000152f1f : add al, al ; adc dh, dh ; call qword ptr [rbx]
0x0000000000152eff : add al, al ; adc dh, dh ; call qword ptr [rdx]
0x000000000001829f : add al, al ; adc qword ptr [rax], rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000019ef : add al, al ; add eax, 0x5c10000 ; add byte ptr [rax], al ; ret 5
0x000000000015213f : add al, al ; cmc ; cmc ; jmp qword ptr [rsi]
0x000000000014e73f : add al, al ; fcompi st(4) ; jmp qword ptr [rdx]
0x000000000015d96f : add al, al ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000016627f : add al, al ; mov bl, 0xf9 ; jmp qword ptr [rdi]
0x000000000014fd0f : add al, al ; pop rax ; cmc ; call qword ptr [rdx]
0x000000000001598f : add al, al ; pop rbp ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000003d0 : add al, al ; ret
0x000000000007886f : add al, al ; ret 0x37
0x000000000016a0bf : add al, al ; ret 0xfffa
0x00000000000701b7 : add al, al ; retf
0x0000000000079db7 : add al, al ; retf 0x37
0x000000000014c28f : add al, al ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000014c30f : add al, al ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014c35f : add al, al ; sbb al, 0xf4 ; call qword ptr [rdx]
0x0000000000163b7f : add al, al ; stc ; call rdi
0x0000000000153f4f : add al, al ; sub dh, dh ; call qword ptr [rdx]
0x00000000001655cf : add al, al ; test edi, ecx ; call qword ptr [rbx]
0x000000000016568f : add al, al ; xchg ecx, edi ; jmp qword ptr [rdi]
0x000000000014b937 : add al, bh ; adc esp, esi ; jmp qword ptr [rbx]
0x000000000015f737 : add al, bh ; clc ; call qword ptr [rbx]
0x0000000000171417 : add al, bh ; jbe 0x17141b ; jmp qword ptr [rbx]
0x000000000015da47 : add al, bh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x00000000001684e7 : add al, bh ; or edi, edx ; jmp qword ptr [rdx]
0x0000000000072f47 : add al, bh ; ret
0x0000000000017b97 : add al, bh ; ret 0x37
0x00000000001518a7 : add al, bh ; ret 0xfff5
0x000000000000c51f : add al, bh ; ret 3
0x00000000000701ff : add al, bh ; retf
0x0000000000079de7 : add al, bh ; retf 0x37
0x0000000000153ea7 : add al, bh ; sub esi, esi ; call qword ptr [rdx]
0x000000000016e657 : add al, bh ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x000000000014d527 : add al, bh ; xor al, 0xf4 ; call qword ptr [rbx]
0x000000000014d3c7 : add al, bh ; xor dh, ah ; call qword ptr [rbx]
0x0000000000150877 : add al, bl ; cmc ; call qword ptr [rbx]
0x00000000001661a7 : add al, bl ; mov al, 0xf9 ; jmp qword ptr [rdi]
0x0000000000156e47 : add al, bl ; ret
0x0000000000078887 : add al, bl ; ret 0x37
0x00000000000701cf : add al, bl ; retf
0x0000000000167977 : add al, bl ; sar cl, 1 ; call rcx
0x0000000000162fa7 : add al, bl ; sub ecx, edi ; jmp rdi
0x0000000000149e25 : add al, byte ptr [eax] ; mov ah, 0x43 ; std ; jmp rsp
0x00000000000a1685 : add al, byte ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001494ce : add al, byte ptr [rax] ; adc al, 0xff ; sti ; call rsp
0x000000000014a5ae : add al, byte ptr [rax] ; adc bh, dh ; call rsp
0x000000000017185e : add al, byte ptr [rax] ; adc byte ptr [rbx - 4], bh ; call qword ptr [rdx]
0x000000000017076e : add al, byte ptr [rax] ; adc dl, bh ; sti ; call qword ptr [rcx]
0x0000000000149ca6 : add al, byte ptr [rax] ; add al, 0x27 ; std ; call rsp
0x0000000000149f16 : add al, byte ptr [rax] ; add al, 0x5f ; std ; call rsp
0x00000000001498ee : add al, byte ptr [rax] ; add al, 0xc9 ; cld ; jmp rsp
0x000000000012efb2 : add al, byte ptr [rax] ; add al, ch ; ret
0x00000000000b80fd : add al, byte ptr [rax] ; add al, ch ; retf
0x000000000014baa5 : add al, byte ptr [rax] ; add byte ptr [rax + 0x15], bh ; hlt ; jmp qword ptr [rbx]
0x00000000000949ab : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000b7e99 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ef5a6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x39], cl ; ret 0x2e76
0x000000000010ca1b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a1686 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a4dd1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a20a2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000010190 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38b
0x00000000000b57c2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000b43e0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a1ab1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001118f5 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; ret
0x0000000000171ade : add al, byte ptr [rax] ; add byte ptr [rbp - 4], bh ; call qword ptr [rcx]
0x00000000001718be : add al, byte ptr [rax] ; add byte ptr [rbx - 4], bh ; jmp qword ptr [rbx]
0x000000000016bdb5 : add al, byte ptr [rax] ; add byte ptr [rdi + rbp*2], al ; retf 0
0x0000000000177f0c : add al, byte ptr [rax] ; add dword ptr [rbp], edi ; add byte ptr [rax], al ; add ah, dl ; retf 0x20
0x0000000000125510 : add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000148d46 : add al, byte ptr [rax] ; and al, 0x86 ; sti ; call rsp
0x000000000014a786 : add al, byte ptr [rax] ; and sil, r15b ; jmp rsp
0x000000000016e7a6 : add al, byte ptr [rax] ; cdqe ; sti ; call qword ptr [rbx]
0x0000000000171416 : add al, byte ptr [rax] ; clc ; jbe 0x17141c ; jmp qword ptr [rbx]
0x000000000016e656 : add al, byte ptr [rax] ; clc ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x0000000000171bb6 : add al, byte ptr [rax] ; cwde ; jge 0x171bbc ; call qword ptr [rbx]
0x000000000016e78e : add al, byte ptr [rax] ; cwde ; sti ; call qword ptr [rbx]
0x000000000014b266 : add al, byte ptr [rax] ; hlt ; and edi, edi ; jmp rsp
0x000000000014b1de : add al, byte ptr [rax] ; hlt ; loope 0x14b1e8 ; call qword ptr [rbx + rcx*8]
0x0000000000148b46 : add al, byte ptr [rax] ; hlt ; pop rsi ; sti ; call rsp
0x0000000000148eee : add al, byte ptr [rax] ; in al, -0x57 ; sti ; call rsp
0x000000000014b7b6 : add al, byte ptr [rax] ; jae 0x14b7bf ; call rsp
0x0000000000149886 : add al, byte ptr [rax] ; je 0x149820 ; cld ; call rsp
0x0000000000149885 : add al, byte ptr [rax] ; je 0x149821 ; cld ; call rsp
0x0000000000149db6 : add al, byte ptr [rax] ; je 0x149dfa ; std ; jmp rsp
0x0000000000171a86 : add al, byte ptr [rax] ; jl 0x171a8c ; call qword ptr [rdx]
0x000000000017148e : add al, byte ptr [rax] ; jo 0x17150e ; cld ; jmp qword ptr [rax]
0x000000000017175e : add al, byte ptr [rax] ; jp 0x171764 ; call qword ptr [rdx]
0x000000000014b81e : add al, byte ptr [rax] ; js 0x14b827 ; jmp rsp
0x000000000016eba6 : add al, byte ptr [rax] ; js 0x16eb49 ; sti ; call qword ptr [rdx]
0x00000000001714a6 : add al, byte ptr [rax] ; js 0x171526 ; cld ; jmp rax
0x000000000016eebe : add al, byte ptr [rax] ; loopne 0x16ee67 ; sti ; jmp qword ptr [rdx]
0x000000000017115e : add al, byte ptr [rax] ; loopne 0x1711d3 ; cld ; call rsi
0x0000000000149e26 : add al, byte ptr [rax] ; mov ah, 0x43 ; std ; jmp rsp
0x0000000000149b3e : add al, byte ptr [rax] ; mov ah, 0xd ; std ; call rsp
0x0000000000149a26 : add al, byte ptr [rax] ; mov ah, 0xf7 ; cld ; jmp rsp
0x0000000000149ade : add al, byte ptr [rax] ; mov ah, 5 ; std ; call rsp
0x0000000000171586 : add al, byte ptr [rax] ; mov byte ptr [rcx - 4], bh ; call qword ptr [rdi]
0x000000000014b08e : add al, byte ptr [rax] ; mov r15b, sil ; jmp rsp
0x000000000014957e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0xfc ; jmp rsp
0x000000000014a27e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; std ; jmp rsp
0x0000000000149a86 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; cld ; jmp rsp
0x000000000016edee : add al, byte ptr [rax] ; nop ; lahf ; sti ; jmp qword ptr [rdx]
0x000000000016e37e : add al, byte ptr [rax] ; nop ; xchg eax, ebp ; sti ; call qword ptr [rdi]
0x00000000001716e6 : add al, byte ptr [rax] ; pop rax ; jp 0x1716ec ; call qword ptr [rdx]
0x000000000016d7c6 : add al, byte ptr [rax] ; pop rax ; mov ebx, edi ; call qword ptr [rcx]
0x00000000001700a6 : add al, byte ptr [rax] ; pop rax ; retf -5
0x000000000016d5b6 : add al, byte ptr [rax] ; pop rax ; test edi, ebx ; call qword ptr [rdx]
0x000000000016f2fe : add al, byte ptr [rax] ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x000000000016e89e : add al, byte ptr [rax] ; push rax ; cwde ; sti ; call qword ptr [rdx]
0x000000000016e7be : add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x00000000001716ce : add al, byte ptr [rax] ; push rax ; jp 0x1716d4 ; call qword ptr [rdx]
0x000000000016d78e : add al, byte ptr [rax] ; push rax ; mov ebx, edi ; call qword ptr [rcx]
0x0000000000149c36 : add al, byte ptr [rax] ; push rsp ; and ch, bh ; call rsp
0x0000000000148fb6 : add al, byte ptr [rax] ; push rsp ; ret
0x000000000014a74e : add al, byte ptr [rax] ; push rsp ; sbb al, 0xfe ; jmp rsp
0x00000000000a3ba4 : add al, byte ptr [rax] ; ret
0x0000000000174e02 : add al, byte ptr [rax] ; ret 0x501
0x0000000000173398 : add al, byte ptr [rax] ; ret 0x502
0x000000000017889b : add al, byte ptr [rax] ; ret 0x6302
0x0000000000175e09 : add al, byte ptr [rax] ; retf
0x0000000000173701 : add al, byte ptr [rax] ; retf 0x501
0x0000000000174c3a : add al, byte ptr [rax] ; retf 0x502
0x00000000001718d6 : add al, byte ptr [rax] ; sbb byte ptr [rbx - 4], bh ; jmp qword ptr [rbx]
0x0000000000171b26 : add al, byte ptr [rax] ; sub byte ptr [rbp - 4], bh ; call qword ptr [rcx]
0x00000000001717d6 : add al, byte ptr [rax] ; sub byte ptr [rdx - 4], bh ; call qword ptr [rsi]
0x0000000000171076 : add al, byte ptr [rax] ; test al, 0x5e ; cld ; call rsi
0x000000000016ec66 : add al, byte ptr [rax] ; test al, 0x9a ; sti ; jmp qword ptr [rax]
0x000000000016ee06 : add al, byte ptr [rax] ; test al, 0x9f ; sti ; jmp qword ptr [rdx]
0x000000000014944e : add al, byte ptr [rax] ; test bh, bl ; sti ; call rsp
0x000000000014adfe : add al, byte ptr [rax] ; test byte ptr [rbp - 2], bl ; jmp rsp
0x0000000000149c76 : add al, byte ptr [rax] ; test byte ptr [rdx], ah ; std ; jmp rsp
0x000000000014aa66 : add al, byte ptr [rax] ; test byte ptr [rsi + rdi*8], bh ; call rsp
0x0000000000144146 : add al, byte ptr [rax] ; xchg eax, esp ; mov esp, esi ; call rsp
0x0000000000148b6e : add al, byte ptr [rax] ; xchg eax, esp ; movsxd rdi, ebx ; jmp rsp
0x000000000014933e : add al, byte ptr [rax] ; xchg eax, esp ; out dx, al ; sti ; jmp rsp
0x0000000000149f36 : add al, byte ptr [rax] ; xchg eax, esp ; std ; jmp rsp
0x000000000016e26e : add al, byte ptr [rax] ; xchg eax, esp ; sti ; call qword ptr [rdi]
0x0000000000148a76 : add al, byte ptr [rax] ; xor al, 0x5a ; sti ; call rsp
0x0000000000148abe : add al, byte ptr [rax] ; xor al, 0x5c ; sti ; jmp rsp
0x0000000000149fee : add al, byte ptr [rax] ; xor al, 0x8f ; std ; call rsp
0x00000000001491ae : add al, byte ptr [rax] ; xor al, 0xdf ; sti ; call rsp
0x00000000001491ee : add al, byte ptr [rax] ; xor al, 0xe0 ; sti ; call rsp
0x0000000000149986 : add al, byte ptr [rax] ; xor al, 0xee ; cld ; jmp rsp
0x00000000001493d6 : add al, byte ptr [rax] ; xor al, 0xf7 ; sti ; call rsp
0x000000000014949e : add al, byte ptr [rax] ; xor al, 0xfd ; sti ; jmp rsp
0x00000000001495ae : add al, byte ptr [rax] ; xor al, 6 ; cld ; call rsp
0x0000000000149d36 : add al, byte ptr [rax] ; xor r15d, ebp ; jmp rsp
0x00000000000a0d29 : add al, byte ptr [rbx + 0x157402f8] ; ret
0x000000000016be0c : add al, byte ptr [rbx] ; add byte ptr [rax], al ; add al, 0x30 ; retf 0
0x0000000000172d91 : add al, byte ptr [rbx] ; retf
0x0000000000145c95 : add al, byte ptr [rcx] ; add ah, al ; xor edi, esi ; call rsp
0x0000000000172e29 : add al, byte ptr [rcx] ; retf 0x502
0x000000000015216d : add al, byte ptr [rdi + 0xe] ; and byte ptr [rbx], al ; retf 0xa04
0x0000000000148a75 : add al, byte ptr [rdx] ; add byte ptr [rdx + rbx*2], dh ; sti ; call rsp
0x0000000000092510 : add al, byte ptr [rip + 0x48000000] ; mov eax, edx ; ret
0x00000000001775f0 : add al, byte ptr [rsi + 0x307db01] ; retf
0x000000000016e655 : add al, byte ptr cs:[rax] ; clc ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x00000000001491ed : add al, byte ptr es:[rax] ; xor al, 0xe0 ; sti ; call rsp
0x0000000000149db5 : add al, byte ptr gs:[rax] ; je 0x149dfb ; std ; jmp rsp
0x000000000016eebd : add al, byte ptr ss:[rax] ; loopne 0x16ee68 ; sti ; jmp qword ptr [rdx]
0x00000000001495ad : add al, byte ptr ss:[rax] ; xor al, 6 ; cld ; call rsp
0x0000000000107404 : add al, ch ; and al, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000015f6a7 : add al, ch ; clc ; call qword ptr [rbx]
0x000000000015f9b7 : add al, ch ; clc ; call rax
0x00000000000bc7d0 : add al, ch ; cli ; frndint ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1aa0 : add al, ch ; cli ; xchg eax, edi ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000adde0 : add al, ch ; cmp bl, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c23f0 : add al, ch ; cmp dh, byte ptr [rax - 4] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e6600 : add al, ch ; cmp dh, byte ptr [rbx] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e5b84 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dl, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1d84 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0xc1d8d ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1e84 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xc1e8d ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c6984 : add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub bh, ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000001696d7 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000000c1e34 : add al, ch ; div byte ptr [rbp - 4] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c6e4e : add al, ch ; fsub qword ptr [rip - 0x76b70004] ; ret
0x00000000000cf9b6 : add al, ch ; hlt ; ret 0xfffb
0x00000000000e6434 : add al, ch ; imul byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bf6ae : add al, ch ; in al, dx ; mov ebx, 0x8948fffc ; ret
0x00000000000c7045 : add al, ch ; in eax, 0x23 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000107ab4 : add al, ch ; jbe 0x107ad9 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1ddc : add al, ch ; jbe 0xc1de5 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b2eb5 : add al, ch ; jne 0xb2f26 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c22b5 : add al, ch ; jne 0xc2332 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bd6f1 : add al, ch ; jns 0xbd6c4 ; cld ; dec dword ptr [rcx + rcx*4 + 0x2c] ; ret
0x00000000000c6db2 : add al, ch ; js 0xc6de4 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001698c7 : add al, ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp qword ptr [rdi]
0x00000000000ae6ed : add al, ch ; lodsd eax, dword ptr [rsi] ; retf
0x00000000001660b7 : add al, ch ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x00000000000db804 : add al, ch ; loope 0xdb80b ; dec dword ptr [rax - 0x77] ; ret
0x000000000015da17 : add al, ch ; mov bl, 0xf7 ; call qword ptr [rbx]
0x00000000000c1f75 : add al, ch ; mov ch, 0x74 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e7aa9 : add al, ch ; mov cl, 0x13 ; cli ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000108374 : add al, ch ; mov dh, 0x10 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c6874 : add al, ch ; mov dh, 0x2b ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000012e174 : add al, ch ; mov dh, 0xb2 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012d874 : add al, ch ; mov dh, 0xbb ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000adb11 : add al, ch ; or ecx, esp ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000168487 : add al, ch ; or edx, edi ; jmp qword ptr [rdx]
0x00000000000db644 : add al, ch ; out 0xdd, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1940 : add al, ch ; pop rdx ; cdq ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b0cc0 : add al, ch ; pop rdx ; scasd eax, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bf83e : add al, ch ; pop rsp ; mov edx, 0x8948fffc ; ret
0x0000000000169217 : add al, ch ; popfq ; cli ; call qword ptr [rbx]
0x00000000000c208d : add al, ch ; popfq ; jae 0xc2096 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c21d5 : add al, ch ; push rbp ; jb 0xc21de ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c69d4 : add al, ch ; push rsi ; sub bh, ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c68d4 : add al, ch ; push rsi ; sub edi, esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000013a956 : add al, ch ; push rsp ; stc ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000072f17 : add al, ch ; ret
0x0000000000023b07 : add al, ch ; ret 0x13
0x00000000000788e7 : add al, ch ; ret 0x37
0x0000000000122e28 : add al, ch ; ret 0xf682
0x00000000000f01d8 : add al, ch ; ret 0xf9a3
0x00000000000b28d8 : add al, ch ; ret 0xfd7e
0x0000000000090e7f : add al, ch ; retf
0x00000000000ea450 : add al, ch ; retf -0x14
0x00000000000a5070 : add al, ch ; retf -0x1b8
0x00000000000c2460 : add al, ch ; retf -0x391
0x00000000000cee80 : add al, ch ; retf -0x445
0x00000000000efad0 : add al, ch ; retf -0x656
0x00000000000f79b0 : add al, ch ; retf -0x6ce
0x00000000000f8820 : add al, ch ; retf -0x6d8
0x0000000000151af7 : add al, ch ; retf -0xb
0x000000000015e4e7 : add al, ch ; retf -9
0x0000000000079dcf : add al, ch ; retf 0x37
0x00000000000b5f0e : add al, ch ; sbb al, 0x35 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000014c417 : add al, ch ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014c3c7 : add al, ch ; sbb al, 0xf4 ; call qword ptr [rdx]
0x0000000000166117 : add al, ch ; scasb al, byte ptr [rdi] ; stc ; jmp qword ptr [rdi]
0x00000000000c22fe : add al, ch ; sub al, 0x71 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c67f4 : add al, ch ; sub al, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b09f1 : add al, ch ; sub dword ptr [rdx - 0x76b70003], esi ; ret
0x00000000000c6ac5 : add al, ch ; sub esp, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c6bdd : add al, ch ; sub r12b, r15b ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1ca4 : add al, ch ; xchg byte ptr [rdi - 4], dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dada4 : add al, ch ; xchg dh, ah ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000012d194 : add al, ch ; xchg eax, esi ; ret 0xfff5
0x0000000000152f57 : add al, cl ; adc dh, dh ; call qword ptr [rbx]
0x0000000000152f37 : add al, cl ; adc dh, dh ; call qword ptr [rdx]
0x000000000014da27 : add al, cl ; cmp dh, ah ; call qword ptr [rbx]
0x000000000015d987 : add al, cl ; mov bl, 0xf7 ; call qword ptr [rbx]
0x0000000000166237 : add al, cl ; mov dl, 0xf9 ; jmp qword ptr [rdi]
0x000000000015b1f7 : add al, cl ; mov edi, esi ; jmp qword ptr [rdx]
0x0000000000156e17 : add al, cl ; ret
0x00000000000142df : add al, cl ; ret 0x13
0x000000000001fa6f : add al, cl ; ret 0x37
0x000000000016a0d7 : add al, cl ; ret 0xfffa
0x0000000000079ae7 : add al, cl ; retf
0x0000000000151ac7 : add al, cl ; retf -0xb
0x0000000000072fbf : add al, cl ; retf 0x37
0x000000000014c2a7 : add al, cl ; sbb al, 0xf4 ; call qword ptr [rdi]
0x00000000001671d0 : add al, cl ; stc ; jmp qword ptr [rdx]
0x00000000001655e7 : add al, cl ; test edi, ecx ; call qword ptr [rbx]
0x0000000000165647 : add al, cl ; xchg cl, bh ; jmp qword ptr [rdi]
0x000000000014d497 : add al, cl ; xor al, 0xf4 ; call qword ptr [rbx]
0x000000000000dc37 : add al, dh ; adc r8b, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000a15b7 : add al, dh ; add dword ptr [rax], 1 ; ret
0x00000000000adeaf : add al, dh ; add dword ptr [rdi], esi ; ret
0x0000000000151dbf : add al, dh ; fprem1 ; call rcx
0x00000000001660cf : add al, dh ; lodsd eax, dword ptr [rsi] ; stc ; jmp qword ptr [rdi]
0x000000000015da2f : add al, dh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x00000000001556cf : add al, dh ; movsxd rsi, esi ; call rax
0x00000000001624ef : add al, dh ; or al, 0xf9 ; call rdx
0x000000000014dfaf : add al, dh ; pop rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000164e1f : add al, dh ; push 0xf9 ; jmp qword ptr [rsi]
0x0000000000072f2f : add al, dh ; ret
0x00000000000788ff : add al, dh ; ret 0x37
0x000000000006d53f : add al, dh ; ret 8
0x00000000000701e7 : add al, dh ; retf
0x00000000000218e7 : add al, dh ; retf 0x37
0x000000000000a677 : add al, dh ; retf 2
0x0000000000011bf7 : add al, dh ; retf 8
0x00000000001630bf : add al, dh ; sub edi, ecx ; jmp rdi
0x000000000016e63f : add al, dh ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x000000000014d3af : add al, dh ; xor dh, ah ; call qword ptr [rcx]
0x0000000000152f6f : add al, dl ; adc dh, dh ; call qword ptr [rdx]
0x0000000000000b53 : add al, dl ; add dword ptr [rax - 0x7a], eax ; xchg eax, ebx ; adc eax, esp ; ret 0x1400
0x000000000001d96f : add al, dl ; call qword ptr [rcx]
0x000000000014da3f : add al, dl ; cmp dh, ah ; call qword ptr [rdi]
0x000000000015de9f : add al, dl ; mov bh, 0xf7 ; call qword ptr [rbx]
0x0000000000169aaf : add al, dl ; mov bl, 0xfa ; call rdx
0x00000000001661ef : add al, dl ; mov cl, 0xf9 ; jmp qword ptr [rdi]
0x000000000015b3df : add al, dl ; mov dh, bh ; jmp qword ptr [rax]
0x0000000000070097 : add al, dl ; ret
0x00000000000788cf : add al, dl ; ret 0x37
0x000000000000d49f : add al, dl ; ret 0xf
0x000000000016a0ef : add al, dl ; ret 0xfffa
0x0000000000009957 : add al, dl ; retf
0x00000000001655ff : add al, dl ; test edi, ecx ; jmp qword ptr [rdi]
0x0000000000167a9f : add al, dl ; xlatb ; stc ; call rax
0x000000000014d4af : add al, dl ; xor al, 0xf4 ; call qword ptr [rdi]
0x00000000000a15b6 : add al, sil ; add dword ptr [rax], 1 ; ret
0x0000000000146619 : add bh, al ; call rsp
0x000000000008dcd2 : add bh, bh ; add rsp, 8 ; jmp rax
0x0000000000178537 : add bh, bh ; inc dword ptr [rcx] ; adc eax, 0x55b ; retf 0x502
0x000000000012588a : add bh, bh ; ret
0x0000000000173fab : add bh, bh ; wait ; and dword ptr [rcx], eax ; sbb esi, dword ptr [rsi + 5] ; retf 3
0x00000000000dbaad : add bh, bl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000023ad7 : add bh, bl ; ret 0x13
0x00000000001556b1 : add bh, byte ptr [rdx + rcx + 0xe] ; or byte ptr [rbx + rcx + 0x4a], al ; ret
0x000000000001cbb7 : add bh, ch ; ret 0
0x00000000001458c1 : add bh, dh ; jmp rsp
0x000000000002624f : add bh, dh ; ret 0x13
0x00000000000089f7 : add bh, dl ; retf 0
0x000000000001442f : add bl, ah ; ret 0x13
0x00000000000fba09 : add bl, al ; nop dword ptr [rax + rax] ; jmp rsi
0x0000000000027b67 : add bl, bl ; retf
0x000000000015387d : add bl, byte ptr [rsi + rcx + 8] ; ret
0x000000000009240b : add bl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x00000000000fc9ff : add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x00000000001058ee : add bl, ch ; mov dword ptr [rax - 0x77], ecx ; ret
0x00000000000d78f3 : add bl, ch ; ret
0x000000000009ace8 : add bl, ch ; ret 0x1f0f
0x000000000011caec : add bl, ch ; ret 0x894c
0x00000000001320dd : add bl, ch ; ret 0x8b48
0x000000000009c5a7 : add bl, ch ; retf
0x00000000000b385e : add bl, dh ; movsq qword ptr [rdi], qword ptr [rsi] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x000000000008ca37 : add bl, dh ; ret
0x000000000012ca6c : add bl, dl ; cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000052ba : add bl, dl ; mov ch, 0xba ; mov bh, 0x51 ; scasd eax, dword ptr [rdi] ; push rcx ; ret 0xb220
0x0000000000025e17 : add bl, dl ; ret 0x13
0x000000000008f9fe : add bl, sil ; ret
0x00000000000b8c39 : add byte ptr [r15], r9b ; xchg eax, esp ; ret
0x000000000009d01b : add byte ptr [r8 - 0x77], r9b ; retf 0x2948
0x0000000000027b60 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bl ; retf
0x0000000000022d00 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret
0x000000000000c518 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 3
0x000000000013dc22 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; retf
0x000000000014fde5 : add byte ptr [r8], r8b ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fdc5 : add byte ptr [r8], r8b ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x000000000015001d : add byte ptr [r8], r8b ; jo 0x150083 ; cmc ; call qword ptr [rdx]
0x000000000014fdfd : add byte ptr [r8], r8b ; pop rcx ; cmc ; call qword ptr [rdx]
0x000000000014fd75 : add byte ptr [r8], r8b ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fd55 : add byte ptr [r8], r8b ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x000000000014fdad : add byte ptr [r8], r8b ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fd8d : add byte ptr [r8], r8b ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x00000000000bb3b9 : add byte ptr [r9 + rsi + 0x5b], r14b ; pop rbp ; pop r12 ; ret
0x000000000009198e : add byte ptr [r9 - 0x77], r9b ; ret
0x00000000000e39be : add byte ptr [rax + 0x10478b48], dl ; mov eax, dword ptr [rax + 0x24] ; ret
0x000000000012433e : add byte ptr [rax + 0x10478b48], dl ; ret
0x00000000000f38ce : add byte ptr [rax + 0x10478d48], dl ; ret
0x0000000000124d9e : add byte ptr [rax + 0x10778948], dl ; ret
0x00000000000a1adf : add byte ptr [rax + 0x10], bh ; ret
0x000000000001b60f : add byte ptr [rax + 0x1100000e], ch ; add byte ptr [rax + rax], bl ; retf 0x384b
0x0000000000162677 : add byte ptr [rax + 0x12], bh ; stc ; jmp rsp
0x000000000014baa7 : add byte ptr [rax + 0x15], bh ; hlt ; jmp qword ptr [rbx]
0x000000000012434e : add byte ptr [rax + 0x18478b48], dl ; ret
0x00000000000f3fce : add byte ptr [rax + 0x18478d48], dl ; ret
0x000000000014bd7b : add byte ptr [rax + 0x1a500000], ch ; hlt ; call qword ptr [rbx]
0x000000000014bccf : add byte ptr [rax + 0x1a], ah ; hlt ; jmp qword ptr [rax]
0x000000000014bc6f : add byte ptr [rax + 0x1a], al ; hlt ; jmp qword ptr [rax]
0x000000000014bd97 : add byte ptr [rax + 0x1a], bl ; hlt ; jmp qword ptr [rax]
0x000000000014bce7 : add byte ptr [rax + 0x1a], ch ; hlt ; call qword ptr [rdi]
0x000000000014bc87 : add byte ptr [rax + 0x1a], cl ; hlt ; call qword ptr [rdi]
0x000000000014bd7f : add byte ptr [rax + 0x1a], dl ; hlt ; call qword ptr [rbx]
0x000000000014c13f : add byte ptr [rax + 0x1b], al ; hlt ; call qword ptr [rdx]
0x000000000014c4df : add byte ptr [rax + 0x1d], al ; hlt ; call qword ptr [rdi]
0x000000000014f3f7 : add byte ptr [rax + 0x1f], ch ; cmc ; jmp qword ptr [rax]
0x000000000014f397 : add byte ptr [rax + 0x1f], cl ; cmc ; jmp qword ptr [rax]
0x000000000014f40f : add byte ptr [rax + 0x1f], dh ; cmc ; call qword ptr [rdi]
0x000000000014f3af : add byte ptr [rax + 0x1f], dl ; cmc ; call qword ptr [rdi]
0x00000000000a1acf : add byte ptr [rax + 0x20], bh ; ret
0x0000000000162e27 : add byte ptr [rax + 0x26], ch ; stc ; call rdi
0x000000000014f71f : add byte ptr [rax + 0x26], dh ; cmc ; call rax
0x000000000012438e : add byte ptr [rax + 0x28478b48], dl ; ret
0x000000000012443e : add byte ptr [rax + 0x28770148], dl ; ret
0x00000000000b820c : add byte ptr [rax + 0x29], cl ; ret 0xb60f
0x00000000000d3615 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], cl ; ret
0x0000000000162fff : add byte ptr [rax + 0x2a], dh ; stc ; call rdi
0x000000000016b6bf : add byte ptr [rax + 0x2b], al ; sti ; jmp qword ptr [rbx]
0x000000000014ce87 : add byte ptr [rax + 0x2e], bh ; hlt ; call qword ptr [rcx]
0x000000000014cee7 : add byte ptr [rax + 0x2e], ch ; hlt ; call qword ptr [rcx]
0x000000000012439e : add byte ptr [rax + 0x30478b48], dl ; ret
0x000000000014d1c7 : add byte ptr [rax + 0x32], bh ; hlt ; call qword ptr [rdx]
0x000000000016b8b7 : add byte ptr [rax + 0x32], cl ; sti ; jmp rdx
0x000000000014d5df : add byte ptr [rax + 0x35], ah ; hlt ; call qword ptr [rdi]
0x000000000014d5c7 : add byte ptr [rax + 0x35], bl ; hlt ; call qword ptr [rbx]
0x000000000014d737 : add byte ptr [rax + 0x36], bl ; hlt ; call qword ptr [rdi]
0x00000000000b4c4b : add byte ptr [rax + 0x39], cl ; ret
0x00000000001191d7 : add byte ptr [rax + 0x39], cl ; ret 0x8941
0x000000000011e70f : add byte ptr [rax + 0x39], cl ; ret 0xca77
0x00000000000a1abf : add byte ptr [rax + 0x3f], bh ; ret
0x000000000015f947 : add byte ptr [rax + 0x44], bh ; clc ; call qword ptr [rbx]
0x000000000015f927 : add byte ptr [rax + 0x44], bh ; clc ; call qword ptr [rdx]
0x000000000015f9f7 : add byte ptr [rax + 0x46], bh ; clc ; call rax
0x00000000001041fe : add byte ptr [rax + 0x48000001], 0x89 ; pop rax ; ret
0x000000000012435e : add byte ptr [rax + 0x48f66348], dl ; add dword ptr [rdi + 0x10], esi ; ret
0x00000000001243ae : add byte ptr [rax + 0x48f66348], dl ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000163c3f : add byte ptr [rax + 0x49], al ; stc ; jmp rdi
0x000000000015fcdf : add byte ptr [rax + 0x4b], dl ; clc ; jmp qword ptr [rdx]
0x000000000000bdbf : add byte ptr [rax + 0x4c], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000173192 : add byte ptr [rax + 0x511], ah ; ret
0x00000000000f9c5e : add byte ptr [rax + 0x52047f6], dl ; sete al ; ret
0x000000000001682f : add byte ptr [rax + 0x52], dh ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000016448f : add byte ptr [rax + 0x58], al ; stc ; call qword ptr [rbx]
0x000000000014fdff : add byte ptr [rax + 0x59], al ; cmc ; call qword ptr [rdx]
0x000000000014ffe7 : add byte ptr [rax + 0x5b], ch ; cmc ; call qword ptr [rdi]
0x000000000015001f : add byte ptr [rax + 0x5b], dh ; cmc ; call qword ptr [rdx]
0x00000000000e0f28 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000a1a75 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000eb694 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000b2082 : add byte ptr [rax + 0x63], cl ; add al, 0xba ; add rax, rdx ; jmp rax
0x000000000009496b : add byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000095f76 : add byte ptr [rax + 0x63], cl ; retf -0x3d7d
0x00000000000935cd : add byte ptr [rax + 0x63], cl ; retf -0x67b8
0x0000000000160327 : add byte ptr [rax + 0x66], ch ; clc ; jmp qword ptr [rdx]
0x000000000008e5de : add byte ptr [rax + 0x71058d48], dl ; ret
0x000000000000417d : add byte ptr [rax + 0x73], ch ; jge 0x416a ; mov al, 0xdd ; retf -0x7e6e
0x0000000000160607 : add byte ptr [rax + 0x74], cl ; clc ; call qword ptr [rdx]
0x00000000001714a7 : add byte ptr [rax + 0x77], bh ; cld ; jmp rax
0x000000000017148f : add byte ptr [rax + 0x77], dh ; cld ; jmp qword ptr [rax]
0x000000000016c6d7 : add byte ptr [rax + 0x79], ch ; sti ; jmp qword ptr [rdx]
0x000000000017175f : add byte ptr [rax + 0x7a], al ; cld ; call qword ptr [rdx]
0x00000000001716e7 : add byte ptr [rax + 0x7a], bl ; cld ; call qword ptr [rdx]
0x00000000001716cf : add byte ptr [rax + 0x7a], dl ; cld ; call qword ptr [rdx]
0x00000000001718d3 : add byte ptr [rax + 0x7b180002], al ; cld ; jmp qword ptr [rbx]
0x0000000000171a87 : add byte ptr [rax + 0x7c], cl ; cld ; call qword ptr [rdx]
0x000000000016069f : add byte ptr [rax + 0x7c], dl ; clc ; call qword ptr [rcx]
0x00000000000ba8e5 : add byte ptr [rax + 0x8473148], al ; mov rax, qword ptr [r8] ; ret
0x00000000000a542e : add byte ptr [rax + 0x8478b48], dl ; ret
0x00000000000b643e : add byte ptr [rax + 0x8478d48], dl ; ret
0x00000000000ba8c5 : add byte ptr [rax + 0x8573148], al ; ret
0x00000000000efb94 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000916ec : add byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000a19f7 : add byte ptr [rax + 1], bh ; jmp 0xa19d1
0x00000000000b43f7 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000009003f : add byte ptr [rax + 1], bh ; ret
0x000000000008db5f : add byte ptr [rax + 1], bh ; xchg byte ptr [rdi], al ; ret
0x000000000012442f : add byte ptr [rax + 1], cl ; ja 0x124449 ; ret
0x00000000000ae2f3 : add byte ptr [rax + 1], cl ; ret
0x0000000000091acd : add byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000099767 : add byte ptr [rax + 1], cl ; retf -0x76b8
0x00000000000ba93f : add byte ptr [rax + 1], cl ; retf 0x3b48
0x00000000000bb0ea : add byte ptr [rax + 1], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4c10
0x00000000001698c3 : add byte ptr [rax + 1], dh ; add al, ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp qword ptr [rdi]
0x00000000000b43f6 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x00000000000a1aaf : add byte ptr [rax + 2], bh ; ret
0x00000000001718bb : add byte ptr [rax + 2], ch ; add byte ptr [rax], al ; jnp 0x1718c7 ; jmp qword ptr [rbx]
0x00000000000bb51f : add byte ptr [rax + 2], dh ; add byte ptr [rax], al ; ret
0x0000000000168367 : add byte ptr [rax + 3], bh ; cli ; jmp qword ptr [rdx]
0x00000000000b3adf : add byte ptr [rax + 4], bh ; ret
0x0000000000174505 : add byte ptr [rax + 5], ah ; retf
0x0000000000168427 : add byte ptr [rax + 7], ch ; cli ; jmp qword ptr [rdx]
0x00000000000a1a9f : add byte ptr [rax + 8], bh ; ret
0x000000000016f8db : add byte ptr [rax + rax*2 - 0x517ffffe], cl ; sti ; call qword ptr [rdx]
0x00000000000f946b : add byte ptr [rax + rax*8 + 0x5d5b0874], al ; pop r12 ; ret
0x0000000000013aef : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001d2cf : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000013bf7 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x371
0x00000000000acd05 : add byte ptr [rax + rax], al ; call 0x88f45
0x00000000000198c7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x290
0x0000000000157be7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; pop rsp ; ret 0
0x0000000000167b3f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret 1
0x0000000000167bb7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000167bf7 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000001b615 : add byte ptr [rax + rax], bl ; retf 0x384b
0x000000000000be3f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000168437 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000001683ef : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001683a7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; retf
0x0000000000017e57 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xce
0x0000000000157b3f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; hlt ; ret 0
0x0000000000157c27 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pushfq ; ret 0
0x000000000015856f : add byte ptr [rax + rax], dl ; add ah, ah ; retf
0x0000000000158477 : add byte ptr [rax + rax], dl ; add ah, ch ; retf 0
0x0000000000168347 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 1
0x0000000000157af7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001682a7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf 1
0x000000000015829f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x0000000000157adf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001520db : add byte ptr [rax + rbp*2 - 0x13600000], cl ; cmc ; jmp qword ptr [rbx]
0x000000000014b6af : add byte ptr [rax + rbp*2 - 1], dh ; call rsp
0x00000000001660b3 : add byte ptr [rax + rbp*4 + 1], ah ; add al, ch ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x00000000001661eb : add byte ptr [rax + rbp*4 + 1], bl ; add al, dl ; mov cl, 0xf9 ; jmp qword ptr [rdi]
0x000000000016609b : add byte ptr [rax + rbp*4 + 1], cl ; add al, ah ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x0000000000166233 : add byte ptr [rax + rbp*4 - 0x4d37ffff], ah ; stc ; jmp qword ptr [rdi]
0x0000000000166053 : add byte ptr [rax + rbp*4], al ; add dword ptr [rax], eax ; test al, 0xad ; stc ; call qword ptr [rcx]
0x000000000016606b : add byte ptr [rax + rbp*4], bl ; add dword ptr [rax], eax ; mov al, 0xad ; stc ; call qword ptr [rbx]
0x000000000016a0bb : add byte ptr [rax + rbp*8 + 1], ch ; add al, al ; ret 0xfffa
0x000000000016a0d3 : add byte ptr [rax + rbp*8 - 0x3d37ffff], al ; cli ; call qword ptr [rbx]
0x000000000016a073 : add byte ptr [rax + rbp*8], ah ; add dword ptr [rax], eax ; mov dl, al ; cli ; call qword ptr [rcx]
0x0000000000146de7 : add byte ptr [rax + rbp*8], al ; clc ; jmp rsp
0x00000000001582c7 : add byte ptr [rax + rbp*8], al ; retf 1
0x000000000016a08b : add byte ptr [rax + rbp*8], bh ; add dword ptr [rax], eax ; nop ; ret 0xfffa
0x000000000016bc97 : add byte ptr [rax + rbp], al ; retf
0x000000000014733f : add byte ptr [rax + rbx - 7], al ; jmp rsp
0x00000000001611f3 : add byte ptr [rax + rbx*2 + 1], ah ; add byte ptr [rax], cl ; retf
0x00000000001690e3 : add byte ptr [rax + rbx*8 - 0x6377ffff], dl ; cli ; jmp qword ptr [rsi]
0x000000000014d08b : add byte ptr [rax + rbx], bh ; add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rbx]
0x000000000014d06b : add byte ptr [rax + rbx], bl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rdi]
0x000000000014d0a3 : add byte ptr [rax + rbx], dl ; add byte ptr [rax], cl ; xor ah, dh ; call qword ptr [rdi]
0x00000000000e09e5 : add byte ptr [rax + rcx*4 + 0x54], al ; and al, 0x40 ; mov rdi, rax ; call rdx
0x000000000016405b : add byte ptr [rax + rcx*4], cl ; add dword ptr [rax], eax ; adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x000000000014b81f : add byte ptr [rax + rdi*2 - 1], al ; jmp rsp
0x00000000001670db : add byte ptr [rax + rdi*4 - 0x38afffff], cl ; stc ; call qword ptr [rax]
0x00000000001670f3 : add byte ptr [rax + rdi*4 - 0x38b7ffff], ah ; stc ; call qword ptr [rax]
0x0000000000147d97 : add byte ptr [rax + rdi*8 - 7], ah ; call rsp
0x000000000010696c : add byte ptr [rax + rdi*8], dh ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001451ff : add byte ptr [rax + rdi], al ; idiv bh ; insb byte ptr [rdi], dx ; retf 0
0x0000000000145967 : add byte ptr [rax + rdx - 9], al ; jmp rsp
0x0000000000160a1b : add byte ptr [rax + rdx*2 - 0x7e8fffff], cl ; clc ; call rcx
0x00000000001609c3 : add byte ptr [rax + rdx*2], dh ; add dword ptr [rax], eax ; call 0xffffffffd2160255
0x00000000001588a3 : add byte ptr [rax + rdx*8], dl ; add byte ptr [rsi + 0x39], dh ; jmp qword ptr [rdi]
0x000000000016e8bb : add byte ptr [rax + rsi + 2], ch ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x000000000016e89b : add byte ptr [rax + rsi + 2], cl ; add byte ptr [rax - 0x68], dl ; sti ; call qword ptr [rdx]
0x000000000014e8e3 : add byte ptr [rax + rsi - 0x1ca80000], dl ; hlt ; jmp qword ptr [rax]
0x000000000016e8fb : add byte ptr [rax + rsi - 0x67affffe], ch ; sti ; jmp qword ptr [rax]
0x000000000016e8db : add byte ptr [rax + rsi - 0x67affffe], cl ; sti ; jmp qword ptr [rax]
0x000000000014e893 : add byte ptr [rax + rsi], al ; add byte ptr [rax - 0x1e], bh ; hlt ; jmp qword ptr [rdx]
0x000000000016be0f : add byte ptr [rax + rsi], al ; retf 0
0x000000000016e87b : add byte ptr [rax + rsi], ch ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x000000000016e85b : add byte ptr [rax + rsi], cl ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x000000000015203f : add byte ptr [rax - 0x16], dh ; cmc ; jmp qword ptr [rsi]
0x000000000009898b : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0xeac1
0x000000000014e987 : add byte ptr [rax - 0x18], bl ; hlt ; call rdi
0x000000000014e8e7 : add byte ptr [rax - 0x1d], bl ; hlt ; jmp qword ptr [rax]
0x000000000014e897 : add byte ptr [rax - 0x1e], bh ; hlt ; jmp qword ptr [rdx]
0x000000000014e80f : add byte ptr [rax - 0x1f], dl ; hlt ; jmp qword ptr [rax]
0x0000000000151d5f : add byte ptr [rax - 0x27], al ; cmc ; call rcx
0x00000000000929a9 : add byte ptr [rax - 0x2d], cl ; call 0xffffffffc30b0a3b
0x0000000000161657 : add byte ptr [rax - 0x30], ch ; clc ; call qword ptr [rdx]
0x0000000000161617 : add byte ptr [rax - 0x30], cl ; clc ; call qword ptr [rdx]
0x00000000001677af : add byte ptr [rax - 0x31], dl ; stc ; call qword ptr [rdx]
0x0000000000167377 : add byte ptr [rax - 0x36], cl ; stc ; call qword ptr [rcx]
0x00000000000b7e9b : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001670f7 : add byte ptr [rax - 0x39], cl ; stc ; call qword ptr [rax]
0x00000000001670df : add byte ptr [rax - 0x39], dl ; stc ; call qword ptr [rax]
0x00000000000bbc5f : add byte ptr [rax - 0x3a7cb7fd], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e56dd : add byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; retf -0x76b7
0x0000000000124b7f : add byte ptr [rax - 0x3f], cl ; out 2, al ; add qword ptr [rdi + 0x10], rsi ; ret
0x0000000000124b8f : add byte ptr [rax - 0x3f], cl ; out 2, al ; add qword ptr [rdi + 0x28], rsi ; ret
0x0000000000166cbf : add byte ptr [rax - 0x40], al ; stc ; jmp qword ptr [rdx]
0x0000000000166cd7 : add byte ptr [rax - 0x40], bl ; stc ; jmp qword ptr [rdx]
0x000000000000af97 : add byte ptr [rax - 0x45], ah ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000008ebde : add byte ptr [rax - 0x476b7ad], dl ; call 0x8aed8
0x000000000016662f : add byte ptr [rax - 0x47], al ; stc ; call qword ptr [rbx]
0x0000000000166757 : add byte ptr [rax - 0x47], bl ; stc ; call qword ptr [rdx]
0x0000000000166677 : add byte ptr [rax - 0x47], bl ; stc ; jmp qword ptr [rax]
0x0000000000166647 : add byte ptr [rax - 0x47], cl ; stc ; call qword ptr [rbx]
0x000000000016665f : add byte ptr [rax - 0x47], dl ; stc ; call qword ptr [rbx]
0x0000000000151557 : add byte ptr [rax - 0x4f], ch ; cmc ; call rcx
0x00000000000d686e : add byte ptr [rax - 0x57c27cb8], dl ; ret 0x2a
0x000000000016f2ff : add byte ptr [rax - 0x59], dl ; sti ; jmp qword ptr [rdx]
0x0000000000169547 : add byte ptr [rax - 0x5b], ch ; cli ; jmp qword ptr [rbx]
0x000000000015144f : add byte ptr [rax - 0x5b], dl ; cmc ; call rsi
0x00000000001511e7 : add byte ptr [rax - 0x5f], bl ; cmc ; call qword ptr [rbx]
0x00000000001693af : add byte ptr [rax - 0x5f], dh ; cli ; call qword ptr [rbx]
0x000000000016eba7 : add byte ptr [rax - 0x66], bh ; sti ; call qword ptr [rdx]
0x0000000000152b37 : add byte ptr [rax - 0x67], bl ; jmp qword ptr [rax]
0x000000000016e78f : add byte ptr [rax - 0x68], al ; sti ; call qword ptr [rbx]
0x000000000016e7a7 : add byte ptr [rax - 0x68], cl ; sti ; call qword ptr [rbx]
0x000000000016e89f : add byte ptr [rax - 0x68], dl ; sti ; call qword ptr [rdx]
0x000000000016e7bf : add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x000000000016e26f : add byte ptr [rax - 0x6c], al ; sti ; call qword ptr [rdi]
0x0000000000165917 : add byte ptr [rax - 0x70], bh ; stc ; jmp qword ptr [rsi]
0x00000000001729a7 : add byte ptr [rax - 0x71], bl ; cld ; call qword ptr [rdi]
0x00000000000bdcf1 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r15 + r10 - 0x7d], r14b ; retf -0xf01
0x00000000000bc05f : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8ae1 ; ret
0x00000000000bc04f : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8ae9 ; ret
0x00000000000b383f : add byte ptr [rax - 0x73], cl ; add eax, 0x2d3ef9 ; ret
0x000000000008da1f : add byte ptr [rax - 0x73], cl ; add eax, 0x2f7149 ; ret
0x000000000008d9bf : add byte ptr [rax - 0x73], cl ; add eax, 0x2f71a1 ; ret
0x00000000000c272f : add byte ptr [rax - 0x73], cl ; add eax, 0x7abb9 ; ret
0x00000000000bbd8f : add byte ptr [rax - 0x73], cl ; add eax, 0x80021 ; ret
0x00000000000bbd7f : add byte ptr [rax - 0x73], cl ; add eax, 0x80029 ; ret
0x00000000000bb7ef : add byte ptr [rax - 0x73], cl ; add eax, 0x85cf9 ; ret
0x00000000000b9e1f : add byte ptr [rax - 0x73], cl ; add eax, 0x8650f ; ret
0x00000000000b9c6f : add byte ptr [rax - 0x73], cl ; add eax, 0x8668c ; ret
0x00000000000b20cf : add byte ptr [rax - 0x73], cl ; add eax, 0x8b23b ; ret
0x00000000000b20df : add byte ptr [rax - 0x73], cl ; add eax, 0x8b309 ; ret
0x00000000000b213f : add byte ptr [rax - 0x73], cl ; add eax, 0x8c4ee ; ret
0x00000000000b212f : add byte ptr [rax - 0x73], cl ; add eax, 0x8c8fc ; ret
0x00000000000b211f : add byte ptr [rax - 0x73], cl ; add eax, 0x8c90f ; ret
0x00000000000b210f : add byte ptr [rax - 0x73], cl ; add eax, 0x8c919 ; ret
0x00000000000b20ff : add byte ptr [rax - 0x73], cl ; add eax, 0x8c943 ; ret
0x00000000000b20ef : add byte ptr [rax - 0x73], cl ; add eax, 0x8c94f ; ret
0x00000000000b20bf : add byte ptr [rax - 0x73], cl ; add eax, 0x8c97c ; ret
0x00000000000b20af : add byte ptr [rax - 0x73], cl ; add eax, 0x8c989 ; ret
0x00000000000b209f : add byte ptr [rax - 0x73], cl ; add eax, 0x8c995 ; ret
0x00000000000b208f : add byte ptr [rax - 0x73], cl ; add eax, 0x8c9a2 ; ret
0x00000000000a1b4f : add byte ptr [rax - 0x73], cl ; add eax, 0x9c5cb ; ret
0x000000000008ed5f : add byte ptr [rax - 0x73], cl ; add eax, 0xad391 ; ret
0x000000000008ed4f : add byte ptr [rax - 0x73], cl ; add eax, 0xad392 ; ret
0x000000000008e54f : add byte ptr [rax - 0x73], cl ; add eax, 0xadad1 ; ret
0x000000000008e55f : add byte ptr [rax - 0x73], cl ; add eax, 0xadae9 ; ret
0x000000000008e11f : add byte ptr [rax - 0x73], cl ; add eax, 0xade9d ; ret
0x000000000008e0cf : add byte ptr [rax - 0x73], cl ; add eax, 0xaded2 ; ret
0x000000000008e07f : add byte ptr [rax - 0x73], cl ; add eax, 0xadeee ; ret
0x000000000008dfef : add byte ptr [rax - 0x73], cl ; add eax, 0xadf4e ; ret
0x000000000008d79f : add byte ptr [rax - 0x73], cl ; add eax, 0xae611 ; ret
0x000000000008d78f : add byte ptr [rax - 0x73], cl ; add eax, 0xae619 ; ret
0x0000000000172777 : add byte ptr [rax - 0x74], ch ; cld ; call qword ptr [rdi]
0x00000000000d8d6f : add byte ptr [rax - 0x75], cl ; adc byte ptr [r15], r9b ; mov dh, 0x40 ; ret
0x000000000009d018 : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x77], r9b ; retf 0x2948
0x000000000009046f : add byte ptr [rax - 0x75], cl ; add eax, 0x2f47a9 ; ret
0x000000000008ebcf : add byte ptr [rax - 0x75], cl ; clc ; ret
0x000000000009c0cf : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e5a3f : add byte ptr [rax - 0x75], cl ; je 0xe5a70 ; cmp byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000e62ef : add byte ptr [rax - 0x75], cl ; je 0xe6320 ; cmp byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000ae4e7 : add byte ptr [rax - 0x75], cl ; jge 0xae47b ; call 0x8aff7
0x00000000000ae4e6 : add byte ptr [rax - 0x75], cl ; jge 0xae47c ; call 0x8aff8
0x00000000000decba : add byte ptr [rax - 0x75], cl ; jl 0xdeceb ; xor al, ch ; wait ; retf -6
0x00000000000df68a : add byte ptr [rax - 0x75], cl ; jl 0xdf6ba ; xor al, ch ; retf
0x00000000000e1bf3 : add byte ptr [rax - 0x75], cl ; jl 0xe1c24 ; adc byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000e3033 : add byte ptr [rax - 0x75], cl ; jl 0xe3064 ; adc byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000eb375 : add byte ptr [rax - 0x75], cl ; jl 0xeb3a4 ; call rax
0x00000000000ec55b : add byte ptr [rax - 0x75], cl ; jl 0xec58c ; and byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000ed96b : add byte ptr [rax - 0x75], cl ; jl 0xed99c ; and byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000009c0c2 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x39], r9b ; ret
0x000000000009acef : add byte ptr [rax - 0x75], cl ; or ecx, dword ptr [rax - 0x7d] ; ret 0x4408
0x000000000011ec35 : add byte ptr [rax - 0x75], cl ; push rbp ; sbb byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000ef5a8 : add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x39], cl ; ret 0x2e76
0x00000000000efdd8 : add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000ee8af : add byte ptr [rax - 0x75], cl ; ret
0x000000000016d7c7 : add byte ptr [rax - 0x77], bl ; sti ; call qword ptr [rcx]
0x00000000000c888d : add byte ptr [rax - 0x77], cl ; adc ebp, eax ; retf -0x3dd
0x00000000000f03d1 : add byte ptr [rax - 0x77], cl ; adc r11b, r14b ; ret
0x00000000000c233a : add byte ptr [rax - 0x77], cl ; add ebp, ecx ; ret 0xfff7
0x00000000000a5ed5 : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000000fa6d1 : add byte ptr [rax - 0x77], cl ; call 0xffffffffc315322a
0x00000000000a594f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000008fce6 : add byte ptr [rax - 0x77], cl ; clc ; xchg qword ptr [rdx], rax ; ret
0x00000000000bbd9f : add byte ptr [rax - 0x77], cl ; cli ; mov eax, esi ; ret
0x00000000000eeace : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000b74ae : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rax
0x0000000000091217 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call r14
0x0000000000128982 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8948
0x00000000000f19c4 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000094785 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffd9
0x000000000013709a : add byte ptr [rax - 0x77], cl ; je 0x1370cc ; sub byte ptr [rax + 0xf], cl ; ret 0xd231
0x0000000000137fba : add byte ptr [rax - 0x77], cl ; je 0x137fec ; sub byte ptr [rax + 0xf], cl ; ret 0xd231
0x00000000000f4066 : add byte ptr [rax - 0x77], cl ; nop ; mov word ptr [rax], es ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000bc6c7 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000f93b2 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rdx
0x0000000000104172 : add byte ptr [rax - 0x77], cl ; pop rax ; ret
0x00000000000b1c7f : add byte ptr [rax - 0x77], cl ; push 0x3d0d8d48 ; retf 8
0x0000000000108151 : add byte ptr [rax - 0x77], cl ; push rbp ; enter -0x2dcf, -0x18 ; ret
0x00000000000bd2a2 : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; call 0x89d78
0x0000000000092100 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000096426 : add byte ptr [rax - 0x77], cl ; ret 0x21e8
0x00000000000da8b8 : add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000be123 : add byte ptr [rax - 0x77], cl ; ret 0x44e8
0x00000000000933bf : add byte ptr [rax - 0x77], cl ; ret 0x58e9
0x00000000000b31db : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000009903c : add byte ptr [rax - 0x77], cl ; ret 0x840f
0x00000000000a1688 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a174a : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000093036 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000bdf13 : add byte ptr [rax - 0x77], cl ; ret 0xb4e8
0x000000000008f3da : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000b29ff : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x00000000000d52ff : add byte ptr [rax - 0x77], cl ; retf
0x0000000000104c96 : add byte ptr [rax - 0x77], cl ; retf -0x3f7c
0x00000000000d5e13 : add byte ptr [rax - 0x77], cl ; retf -0x6b18
0x000000000008e777 : add byte ptr [rax - 0x77], cl ; retf -0x72b4
0x00000000000a843f : add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x00000000000bb2bf : add byte ptr [rax - 0x77], cl ; retf -0x76b7
0x00000000000d43b1 : add byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x0000000000127a23 : add byte ptr [rax - 0x77], cl ; retf 0x14e8
0x000000000009d01c : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000001096bf : add byte ptr [rax - 0x77], cl ; retf 0x2ebe
0x0000000000095e8f : add byte ptr [rax - 0x77], cl ; retf 0x48e9
0x00000000000d5115 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc031
0x00000000000d30df : add byte ptr [rax - 0x77], cl ; sal bl, 1 ; ret
0x00000000000c9057 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 - 0x77], r9b ; ret 0xe7eb
0x00000000000f037b : add byte ptr [rax - 0x77], cl ; sbb r11b, r14b ; ret
0x00000000000bc14f : add byte ptr [rax - 0x77], cl ; xlatb ; jmp rax
0x000000000016d78f : add byte ptr [rax - 0x77], dl ; sti ; call qword ptr [rcx]
0x0000000000150da7 : add byte ptr [rax - 0x79], bh ; cmc ; call qword ptr [rdi]
0x000000000016d5b7 : add byte ptr [rax - 0x7b], bl ; sti ; call qword ptr [rdx]
0x00000000001654b7 : add byte ptr [rax - 0x7c], bh ; stc ; call qword ptr [rax]
0x00000000000a385e : add byte ptr [rax - 0x7d], cl ; cmp byte ptr [rax], al ; je 0xa3888 ; ret
0x000000000008fd1f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or bh, bh ; xlatb ; call 0x8bf59
0x00000000000a57af : add byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000008d926 : add byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0x48 ; mov dword ptr [rdi], eax ; ret
0x00000000000d2976 : add byte ptr [rax - 0x7d], cl ; rcr byte ptr [rax], 0x48 ; mov dword ptr [rdi], eax ; ret
0x00000000000d298c : add byte ptr [rax - 0x7d], cl ; rcr byte ptr [rax], 0x48 ; mov dword ptr [rsi], eax ; ret
0x000000000008e7fc : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000924a7 : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000000b3931 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000963bd : add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000000000008ce9f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a20a6 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000a4024 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000093d4f : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000009260f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000dca47 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000109edf : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000008f4df : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000e3ece : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000b3f37 : add byte ptr [rax - 0x7d], cl ; stc ; add esi, dword ptr [rdi + 2] ; ret
0x000000000016d307 : add byte ptr [rax - 0x7d], cl ; sti ; call qword ptr [rsi]
0x000000000016d31f : add byte ptr [rax - 0x7d], dl ; sti ; call qword ptr [rax]
0x0000000000160a1f : add byte ptr [rax - 0x7f], dh ; clc ; call rcx
0x0000000000171c5f : add byte ptr [rax - 0x80], ah ; cld ; call qword ptr [rcx]
0x0000000000171c97 : add byte ptr [rax - 0x80], ch ; cld ; call qword ptr [rcx]
0x000000000016cedf : add byte ptr [rax - 0x80], dl ; sti ; jmp qword ptr [rsi]
0x0000000000145287 : add byte ptr [rax - 0xa], dl ; call rsp
0x00000000000d2959 : add byte ptr [rax - 0xc38b2f1], al ; ret
0x000000000012496d : add byte ptr [rax - 1], bh ; je 0x124961 ; jmp rdx
0x0000000000100497 : add byte ptr [rax - 1], bh ; jmp 0x100469
0x00000000000fd407 : add byte ptr [rax - 1], bh ; jmp 0xfd3d9
0x00000000001241bd : add byte ptr [rax - 1], bh ; jne 0x1241d9 ; ret
0x000000000012425d : add byte ptr [rax - 1], bh ; jne 0x124279 ; ret
0x000000000012490d : add byte ptr [rax - 1], bh ; jne 0x124929 ; ret
0x00000000001249ad : add byte ptr [rax - 1], bh ; jne 0x1249c9 ; ret
0x00000000001249fd : add byte ptr [rax - 1], bh ; jne 0x124a19 ; ret
0x0000000000123c9f : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000924b7 : add byte ptr [rax - 1], bh ; ret
0x000000000014a787 : add byte ptr [rax - 2], al ; jmp rsp
0x00000000000b3eef : add byte ptr [rax - 2], bh ; ret
0x0000000000149c37 : add byte ptr [rax - 3], dl ; call rsp
0x0000000000146d7f : add byte ptr [rax - 8], ah ; call rsp
0x000000000015ffe0 : add byte ptr [rax - 8], dl ; jmp qword ptr [rdx]
0x000000000014fd73 : add byte ptr [rax*2 + 0x59280000], ah ; cmc ; call qword ptr [rbx]
0x000000000014fd53 : add byte ptr [rax*2 + 0x59280000], al ; cmc ; call qword ptr [rdx]
0x000000000014fd8b : add byte ptr [rax*2 + 0x59300000], bh ; cmc ; call qword ptr [rdx]
0x0000000000122e25 : add byte ptr [rax], 0 ; add al, ch ; ret 0xf682
0x00000000000eb372 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; jl 0xeb3a7 ; call rax
0x00000000000e5d30 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001240f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000012e4db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; jmp 0x8af67
0x00000000000d9afb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; jmp rax
0x00000000000d065b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000d267b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d14eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000008ebcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi - 8] ; ret
0x00000000000aa3cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x0000000000105d1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000123d5b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call rdx
0x0000000000123e3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0x000000000008fa43 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008ca33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000092813 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bdeec : add byte ptr [rax], 0 ; add rsp, 0x18 ; ret
0x00000000000bdf86 : add byte ptr [rax], 0 ; add rsp, 0x28 ; ret
0x0000000000000e91 : add byte ptr [rax], 7 ; xor al, 2 ; test byte ptr [rcx], al ; test byte ptr [rcx], bl ; ret 0x2999
0x00000000000003f1 : add byte ptr [rax], ah ; add byte ptr [rax], dl ; add al, 1 ; retf 0x19
0x000000000014f4cf : add byte ptr [rax], ah ; and ch, dh ; jmp qword ptr [rax]
0x000000000015fddf : add byte ptr [rax], ah ; clc ; jmp qword ptr [rdx]
0x000000000014f470 : add byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x000000000016e72f : add byte ptr [rax], ah ; cwde ; sti ; call qword ptr [rbx]
0x0000000000099afd : add byte ptr [rax], ah ; jmp 0x965a3
0x00000000000009ec : add byte ptr [rax], ah ; nop ; ret
0x000000000006fc27 : add byte ptr [rax], ah ; ret
0x00000000000787af : add byte ptr [rax], ah ; ret 0x37
0x0000000000076d57 : add byte ptr [rax], ah ; retf
0x00000000000700c7 : add byte ptr [rax], ah ; retf 0x37
0x0000000000147cc7 : add byte ptr [rax], ah ; stc ; jmp rsp
0x0000000000151b9e : add byte ptr [rax], al ; adc ah, cl ; cmc ; call qword ptr [rbx]
0x0000000000168346 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 1
0x0000000000157af6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001682a6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 1
0x0000000000157ade : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000016ec62 : add byte ptr [rax], al ; adc al, 0x34 ; add al, byte ptr [rax] ; test al, 0x9a ; sti ; jmp qword ptr [rax]
0x000000000014fc62 : add byte ptr [rax], al ; adc al, 0x44 ; add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rdx]
0x0000000000150da2 : add byte ptr [rax], al ; adc al, 0x54 ; add byte ptr [rax], al ; js 0x150d3a ; cmc ; call qword ptr [rdi]
0x00000000001518a2 : add byte ptr [rax], al ; adc al, 0x5f ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x0000000000162fa2 : add byte ptr [rax], al ; adc al, 0x76 ; add dword ptr [rax], eax ; fsubr dword ptr [rcx] ; stc ; jmp rdi
0x0000000000154e62 : add byte ptr [rax], al ; adc al, 0x96 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rdx]
0x000000000014c462 : add byte ptr [rax], al ; adc al, 0xc ; add byte ptr [rax], al ; call 0x1814b892
0x0000000000168362 : add byte ptr [rax], al ; adc al, 0xcb ; add dword ptr [rax], eax ; js 0x168376 ; cli ; jmp qword ptr [rdx]
0x0000000000144e16 : add byte ptr [rax], al ; adc al, 0xd5 ; cmc ; jmp rsp
0x000000000016aea2 : add byte ptr [rax], al ; adc al, 0xf5 ; add dword ptr [rax], eax ; test al, 0xf7 ; cli ; jmp rdx
0x000000000014b962 : add byte ptr [rax], al ; adc al, 1 ; add byte ptr [rax], al ; sbb byte ptr [rdx], dl ; hlt ; jmp qword ptr [rdi]
0x000000000015579e : add byte ptr [rax], al ; adc byte ptr [rsi - 0xa], ah ; call qword ptr [rsi]
0x0000000000145966 : add byte ptr [rax], al ; adc dil, r14b ; jmp rsp
0x000000000001b612 : add byte ptr [rax], al ; adc dword ptr [rax], eax ; sbb al, 0 ; retf 0x384b
0x000000000000c7f2 : add byte ptr [rax], al ; adc dword ptr [rax], eax ; sldt ebp ; ret
0x000000000014cd9a : add byte ptr [rax], al ; adc rax, 0x2df00000 ; hlt ; call qword ptr [rdx]
0x0000000000158571 : add byte ptr [rax], al ; add ah, ah ; retf
0x0000000000156e11 : add byte ptr [rax], al ; add ah, al ; mov ch, 0 ; add al, cl ; ret
0x000000000000e37d : add byte ptr [rax], al ; add ah, al ; ret
0x0000000000157b11 : add byte ptr [rax], al ; add ah, al ; ret 0
0x000000000016a389 : add byte ptr [rax], al ; add ah, bh ; jmp 0xffffffffcba6a39b
0x0000000000177de9 : add byte ptr [rax], al ; add ah, bh ; retf
0x0000000000168349 : add byte ptr [rax], al ; add ah, bh ; retf 1
0x0000000000156e29 : add byte ptr [rax], al ; add ah, bl ; mov ch, 0 ; add al, dl ; ret
0x0000000000157b29 : add byte ptr [rax], al ; add ah, bl ; ret 0
0x00000000000191dd : add byte ptr [rax], al ; add ah, ch ; ret
0x0000000000168439 : add byte ptr [rax], al ; add ah, ch ; retf
0x0000000000158479 : add byte ptr [rax], al ; add ah, ch ; retf 0
0x0000000000168319 : add byte ptr [rax], al ; add ah, cl ; retf 1
0x0000000000156e41 : add byte ptr [rax], al ; add ah, dh ; mov ch, 0 ; add al, bl ; ret
0x0000000000166f41 : add byte ptr [rax], al ; add ah, dh ; mov dh, 1 ; add al, bl ; ret
0x0000000000157b41 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x0000000000167b41 : add byte ptr [rax], al ; add ah, dh ; ret 1
0x0000000000157c61 : add byte ptr [rax], al ; add ah, dl ; ret 0
0x0000000000167b21 : add byte ptr [rax], al ; add ah, dl ; ret 1
0x0000000000168421 : add byte ptr [rax], al ; add ah, dl ; retf
0x0000000000177f11 : add byte ptr [rax], al ; add ah, dl ; retf 0x20
0x000000000015826e : add byte ptr [rax], al ; add al, 0x27 ; retf
0x000000000016bc96 : add byte ptr [rax], al ; add al, 0x28 ; retf
0x000000000016e652 : add byte ptr [rax], al ; add al, 0x2e ; add al, byte ptr [rax] ; clc ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x000000000016be0e : add byte ptr [rax], al ; add al, 0x30 ; retf 0
0x00000000001451fe : add byte ptr [rax], al ; add al, 0x38 ; idiv bh ; insb byte ptr [rdi], dx ; retf 0
0x00000000001583a6 : add byte ptr [rax], al ; add al, 0x3a ; retf 1
0x000000000014fd52 : add byte ptr [rax], al ; add al, 0x45 ; add byte ptr [rax], al ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x000000000016c60e : add byte ptr [rax], al ; add al, 0x59 ; ret
0x000000000015821e : add byte ptr [rax], al ; add al, 0x5b ; retf
0x000000000016bdb6 : add byte ptr [rax], al ; add al, 0x6f ; retf 0
0x000000000016bc36 : add byte ptr [rax], al ; add al, 0x79 ; retf
0x00000000001581de : add byte ptr [rax], al ; add al, 0x87 ; retf
0x0000000000154352 : add byte ptr [rax], al ; add al, 0x8b ; add byte ptr [rax], al ; call 0x13153994
0x0000000000144206 : add byte ptr [rax], al ; add al, 0x94 ; hlt ; call rsp
0x000000000015831e : add byte ptr [rax], al ; add al, 0xa7 ; retf 1
0x0000000000166052 : add byte ptr [rax], al ; add al, 0xa8 ; add dword ptr [rax], eax ; test al, 0xad ; stc ; call qword ptr [rcx]
0x0000000000166552 : add byte ptr [rax], al ; add al, 0xad ; add dword ptr [rax], eax ; call 0x14165f1e
0x000000000016bd56 : add byte ptr [rax], al ; add al, 0xae ; retf 0
0x0000000000157f52 : add byte ptr [rax], al ; add al, 0xc7 ; add byte ptr [rax], al ; cwde ; div dh ; call qword ptr [rdx]
0x000000000016bd1e : add byte ptr [rax], al ; add al, 0xc7 ; retf 0
0x0000000000158952 : add byte ptr [rax], al ; add al, 0xd1 ; add byte ptr [rax], al ; or rdi, rsi ; call qword ptr [rax]
0x000000000016bbc6 : add byte ptr [rax], al ; add al, 0xda ; retf
0x00000000001582c6 : add byte ptr [rax], al ; add al, 0xe8 ; retf 1
0x000000000016bcd6 : add byte ptr [rax], al ; add al, 0xfb ; retf 0
0x0000000000072075 : add byte ptr [rax], al ; add al, ah ; ret 0x37
0x000000000001383d : add byte ptr [rax], al ; add al, ah ; retf
0x0000000000009235 : add byte ptr [rax], al ; add al, ah ; retf 0
0x0000000000072cbd : add byte ptr [rax], al ; add al, ah ; retf 0x37
0x0000000000072efd : add byte ptr [rax], al ; add al, al ; ret
0x000000000007886d : add byte ptr [rax], al ; add al, al ; ret 0x37
0x00000000000701b5 : add byte ptr [rax], al ; add al, al ; retf
0x0000000000079db5 : add byte ptr [rax], al ; add al, al ; retf 0x37
0x000000000014b935 : add byte ptr [rax], al ; add al, bh ; adc esp, esi ; jmp qword ptr [rbx]
0x0000000000072f45 : add byte ptr [rax], al ; add al, bh ; ret
0x000000000007208d : add byte ptr [rax], al ; add al, bh ; ret 0x37
0x000000000000c51d : add byte ptr [rax], al ; add al, bh ; ret 3
0x00000000000701fd : add byte ptr [rax], al ; add al, bh ; retf
0x0000000000079de5 : add byte ptr [rax], al ; add al, bh ; retf 0x37
0x0000000000078885 : add byte ptr [rax], al ; add al, bl ; ret 0x37
0x00000000000701cd : add byte ptr [rax], al ; add al, bl ; retf
0x00000000000cf9b4 : add byte ptr [rax], al ; add al, ch ; hlt ; ret 0xfffb
0x0000000000072f15 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000788e5 : add byte ptr [rax], al ; add al, ch ; ret 0x37
0x0000000000122e26 : add byte ptr [rax], al ; add al, ch ; ret 0xf682
0x00000000000b28d6 : add byte ptr [rax], al ; add al, ch ; ret 0xfd7e
0x00000000000c308d : add byte ptr [rax], al ; add al, ch ; retf
0x00000000000c245e : add byte ptr [rax], al ; add al, ch ; retf -0x391
0x00000000000f79ae : add byte ptr [rax], al ; add al, ch ; retf -0x6ce
0x0000000000079dcd : add byte ptr [rax], al ; add al, ch ; retf 0x37
0x000000000012d192 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; ret 0xfff5
0x000000000007205d : add byte ptr [rax], al ; add al, cl ; ret 0x37
0x0000000000079ae5 : add byte ptr [rax], al ; add al, cl ; retf
0x0000000000072fbd : add byte ptr [rax], al ; add al, cl ; retf 0x37
0x00000000000adead : add byte ptr [rax], al ; add al, dh ; add dword ptr [rdi], esi ; ret
0x0000000000072f2d : add byte ptr [rax], al ; add al, dh ; ret
0x00000000000788fd : add byte ptr [rax], al ; add al, dh ; ret 0x37
0x000000000006d53d : add byte ptr [rax], al ; add al, dh ; ret 8
0x00000000000701e5 : add byte ptr [rax], al ; add al, dh ; retf
0x000000000000a675 : add byte ptr [rax], al ; add al, dh ; retf 2
0x0000000000070095 : add byte ptr [rax], al ; add al, dl ; ret
0x00000000000788cd : add byte ptr [rax], al ; add al, dl ; ret 0x37
0x0000000000009955 : add byte ptr [rax], al ; add al, dl ; retf
0x000000000001cbb5 : add byte ptr [rax], al ; add bh, ch ; ret 0
0x00000000000089f5 : add byte ptr [rax], al ; add bh, dl ; retf 0
0x00000000000fba07 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax + rax] ; jmp rsi
0x0000000000027b65 : add byte ptr [rax], al ; add bl, bl ; retf
0x0000000000092409 : add byte ptr [rax], al ; add bl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x00000000000fc9fd : add byte ptr [rax], al ; add bl, ch ; mov byte ptr [rax - 0x77], cl ; ret
0x000000000011caea : add byte ptr [rax], al ; add bl, ch ; ret 0x894c
0x00000000001320db : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x00000000000a19fa : add byte ptr [rax], al ; add bl, ch ; retf
0x000000000008ca35 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000012433c : add byte ptr [rax], al ; add byte ptr [rax + 0x10478b48], dl ; ret
0x00000000000f38cc : add byte ptr [rax], al ; add byte ptr [rax + 0x10478d48], dl ; ret
0x0000000000124d9c : add byte ptr [rax], al ; add byte ptr [rax + 0x10778948], dl ; ret
0x00000000000a1add : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; ret
0x000000000012434c : add byte ptr [rax], al ; add byte ptr [rax + 0x18478b48], dl ; ret
0x00000000000f3fcc : add byte ptr [rax], al ; add byte ptr [rax + 0x18478d48], dl ; ret
0x00000000000a1acd : add byte ptr [rax], al ; add byte ptr [rax + 0x20], bh ; ret
0x000000000012438c : add byte ptr [rax], al ; add byte ptr [rax + 0x28478b48], dl ; ret
0x000000000012443c : add byte ptr [rax], al ; add byte ptr [rax + 0x28770148], dl ; ret
0x00000000000b820a : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0xb60f
0x000000000012439c : add byte ptr [rax], al ; add byte ptr [rax + 0x30478b48], dl ; ret
0x00000000000b4c49 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001191d5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8941
0x00000000000a1abd : add byte ptr [rax], al ; add byte ptr [rax + 0x3f], bh ; ret
0x0000000000094be1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000095f74 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf -0x3d7d
0x000000000008e5dc : add byte ptr [rax], al ; add byte ptr [rax + 0x71058d48], dl ; ret
0x00000000000a542c : add byte ptr [rax], al ; add byte ptr [rax + 0x8478b48], dl ; ret
0x00000000000b643c : add byte ptr [rax], al ; add byte ptr [rax + 0x8478d48], dl ; ret
0x00000000000ba8c3 : add byte ptr [rax], al ; add byte ptr [rax + 0x8573148], al ; ret
0x00000000000efb92 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000916ea : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8949
0x000000000009003d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000a1aad : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000a1a9d : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; ret
0x0000000000167b3d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret 1
0x0000000000167bb5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000167bf5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000168435 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000001683ed : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001683a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rsp ; retf
0x0000000000157b3d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; hlt ; ret 0
0x0000000000157c25 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pushfq ; ret 0
0x000000000015856d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add ah, ah ; retf
0x0000000000157af5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001682a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf 1
0x0000000000157add : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000016a0b9 : add byte ptr [rax], al ; add byte ptr [rax + rbp*8 + 1], ch ; add al, al ; ret 0xfffa
0x00000000001582c5 : add byte ptr [rax], al ; add byte ptr [rax + rbp*8], al ; retf 1
0x000000000016a089 : add byte ptr [rax], al ; add byte ptr [rax + rbp*8], bh ; add dword ptr [rax], eax ; nop ; ret 0xfffa
0x000000000016bc95 : add byte ptr [rax], al ; add byte ptr [rax + rbp], al ; retf
0x00000000001611f1 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2 + 1], ah ; add byte ptr [rax], cl ; retf
0x00000000000929a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; call 0xffffffffc30b0a3d
0x00000000000e56db : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; retf -0x76b7
0x00000000000d686c : add byte ptr [rax], al ; add byte ptr [rax - 0x57c27cb8], dl ; ret 0x2a
0x000000000008ebcd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; ret
0x00000000000eb373 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0xeb3a6 ; call rax
0x000000000011ec33 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; sbb byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000ee8ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000000000f03cf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc r11b, r14b ; ret
0x00000000000a5ed3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000124f0d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000bbd9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; cli ; mov eax, esi ; ret
0x00000000000b74ac : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rax
0x00000000000f19c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000094783 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffd9
0x0000000000105d1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000f93b0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rdx
0x00000000000920fe : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a3e03 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a17af : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000008f3d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000b29fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd148
0x000000000008e775 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x72b4
0x00000000000aaf02 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b4
0x00000000000bb2bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b7
0x00000000001096bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2ebe
0x00000000000d30dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sal bl, 1 ; ret
0x00000000000f0379 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sbb r11b, r14b ; ret
0x000000000008e875 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b392f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000008ce9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a20a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000a4022 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009260d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000012fd7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008f4dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000e3ecc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000d2957 : add byte ptr [rax], al ; add byte ptr [rax - 0xc38b2f1], al ; ret
0x00000000000c9065 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000b3eed : add byte ptr [rax], al ; add byte ptr [rax - 2], bh ; ret
0x000000000014f46e : add byte ptr [rax], al ; add byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x000000000006fc25 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000000787ad : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x37
0x0000000000076d55 : add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x00000000000700c5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x37
0x0000000000157af4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001682a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 1
0x000000000000e37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, al ; ret
0x0000000000177de7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; retf
0x00000000000191db : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, ch ; ret
0x0000000000072073 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x37
0x000000000001383b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf
0x0000000000009233 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0
0x0000000000072cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0x37
0x0000000000072efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000007886b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x37
0x00000000000701b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf
0x0000000000079db3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf 0x37
0x0000000000072f43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x000000000007208b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x37
0x000000000000c51b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 3
0x00000000000701fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; retf
0x0000000000079de3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; retf 0x37
0x0000000000078883 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x37
0x00000000000701cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; retf
0x0000000000072f13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000788e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x37
0x0000000000079dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf 0x37
0x000000000007205b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x37
0x0000000000079ae3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf
0x0000000000072fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf 0x37
0x00000000000adeab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; add dword ptr [rdi], esi ; ret
0x0000000000072f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000000788fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x37
0x000000000006d53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 8
0x00000000000701e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf
0x000000000000a673 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 2
0x0000000000070093 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x00000000000788cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x37
0x0000000000009953 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf
0x000000000001cbb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, ch ; ret 0
0x00000000000089f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dl ; retf 0
0x0000000000027b63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bl ; retf
0x000000000008dc1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000ee8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000000000124f0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012bbeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000b2a4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000b29fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd148
0x00000000000bb2bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf -0x76b7
0x00000000001096bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2ebe
0x00000000000d30db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sal bl, 1 ; ret
0x000000000008f6eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008ce9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009260b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000012fd7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008f4db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000006fc23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000000787ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x37
0x0000000000076d53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x00000000000700c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf 0x37
0x000000000000e379 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, al ; ret
0x00000000000191d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, ch ; ret
0x0000000000072071 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x37
0x0000000000013839 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf
0x0000000000009231 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0
0x0000000000072cb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; retf 0x37
0x0000000000072ef9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000078869 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret 0x37
0x0000000000079db1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; retf 0x37
0x0000000000072f41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x0000000000072089 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x37
0x000000000000c519 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 3
0x0000000000071ba1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; retf
0x0000000000079de1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; retf 0x37
0x0000000000078881 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bl ; ret 0x37
0x0000000000072f11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000788e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x37
0x0000000000079dc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf 0x37
0x0000000000072059 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x37
0x0000000000079ae1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf
0x0000000000072fb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; retf 0x37
0x0000000000072f29 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000000788f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x37
0x000000000006d539 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 8
0x000000000000a671 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 2
0x00000000000788c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x37
0x0000000000009951 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf
0x000000000001cbb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, ch ; ret 0
0x00000000000089f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dl ; retf 0
0x0000000000027b61 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bl ; retf
0x000000000006fc21 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000000787a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x37
0x0000000000076d51 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; retf
0x0000000000072f40 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x0000000000079de0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf 0x37
0x0000000000072e80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x0000000000079d20 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; retf 0x37
0x0000000000072e68 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000075988 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000078959 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008930 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xdc
0x0000000000009b18 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfa
0x0000000000079e29 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000019e69 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000072149 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x37
0x000000000006d611 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x0000000000008dc8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; stc ; retf 0
0x00000000000089f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xlatb ; retf 0
0x000000000006ef79 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; call qword ptr [rbx]
0x000000000006fb91 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000000000078809 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x37
0x0000000000079e89 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; retf
0x0000000000079ac9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x37
0x0000000000078971 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x0000000000072ca1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x37
0x000000000006fbf1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000070101 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf 0x37
0x0000000000078911 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000079e41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x0000000000079ab1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x37
0x0000000000012e01 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000071ff9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x37
0x0000000000079e59 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x0000000000177fb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x20
0x000000000006d551 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000075ca1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x37
0x0000000000072179 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000076c49 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x37
0x000000000000f819 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 1
0x0000000000021291 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 3
0x00000000000248f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; retf
0x000000000001f239 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; ret 0
0x000000000006fc51 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; ret
0x0000000000016fd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; retf 0
0x000000000006fbc1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000001ea41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; retf 2
0x0000000000008f61 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], dh ; retf
0x00000000000086f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; retf
0x0000000000018411 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; retf
0x0000000000026271 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; retf
0x0000000000022d01 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret
0x0000000000019989 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ah ; ret
0x0000000000013a19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; ret
0x00000000000131f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, al ; ret
0x0000000000008dc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, bh ; retf 0
0x0000000000008721 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf 0
0x000000000000b301 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, ch ; ret 1
0x00000000000263c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000072f42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x000000000007208a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x37
0x000000000000c51a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 3
0x0000000000071ba2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf
0x0000000000079de2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf 0x37
0x0000000000177de6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; retf
0x00000000000208d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; retf 1
0x0000000000072e82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000007202a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x37
0x0000000000079d22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; retf 0x37
0x00000000000191da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000019852 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000000a6a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; ret 0
0x0000000000015a8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf 0
0x00000000000261b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf 3
0x000000000006d56a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000072cd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x000000000000b302 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; out dx, al ; ret 1
0x000000000001cbb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; out dx, eax ; ret 0
0x0000000000015d2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf 0
0x000000000001fa32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf 1
0x00000000000720ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000000f0ac7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000021892 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; retf
0x0000000000018d2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; ret
0x000000000007598a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x0000000000072192 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x0000000000071b72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0x37
0x000000000000ee5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; ret 1
0x000000000001c0d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rcx ; retf 0
0x000000000001f71a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000000253ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 2
0x000000000000156a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006d762 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d2
0x000000000006de52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d3
0x000000000006e61a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d4
0x000000000001c0ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x166
0x000000000001da0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1e9
0x00000000000247ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1fc
0x00000000000198ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x290
0x000000000000daaa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2ba
0x0000000000016822 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x302
0x000000000001b6e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x316
0x000000000000a47a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x32f
0x000000000002505a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x355
0x000000000007001b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000201e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x381
0x0000000000010192 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38b
0x0000000000027442 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3af
0x0000000000012532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x0000000000024e62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xdb
0x0000000000008932 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xdc
0x000000000000ef92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf8
0x0000000000009b1a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfa
0x0000000000020992 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000002ab2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000019e6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000002502a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x13c
0x000000000001ef9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x143
0x0000000000015bda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x153
0x0000000000019c72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x165
0x0000000000016d7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x198
0x000000000001479a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1e3
0x000000000001f852 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x215
0x0000000000026ae2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x23
0x0000000000016342 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x261
0x000000000001b78a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x27
0x0000000000014d52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x273
0x0000000000018592 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c7
0x0000000000028882 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x36a
0x000000000007214b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x37
0x0000000000013bfa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x371
0x000000000001e3b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x38f
0x000000000001e9fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b1
0x000000000002277a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3cf
0x000000000002568a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5b
0x00000000000140da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x77
0x0000000000027a8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x7b
0x00000000000275da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xa3
0x000000000002796a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xa8
0x0000000000017e5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xce
0x000000000000260e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xd
0x000000000006d50a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x0000000000016c42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; retf 0
0x0000000000008dca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; stc ; retf 0
0x000000000006fc82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edx ; ret 0x13
0x000000000006fc6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; ret 0x13
0x000000000000a5fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; retf 1
0x00000000000089f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xlatb ; retf 0
0x000000000006ef7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; call qword ptr [rbx]
0x000000000006fb93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000007880b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x37
0x0000000000079e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; retf
0x0000000000079acb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x37
0x000000000000a11b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 1
0x0000000000078973 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000007016b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x0000000000072ca3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x37
0x000000000006fbf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000070103 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; retf 0x37
0x0000000000078913 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000079e43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x0000000000079ab3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x37
0x0000000000012e03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000071ffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x37
0x0000000000079e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x0000000000177fb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x20
0x00000000000700db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x37
0x000000000006d553 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000075ca3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x37
0x000000000007217b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000076c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x37
0x0000000000123b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48], dl ; mov ebx, edi ; call rax
0x00000000000b26ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000000f81b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 1
0x0000000000021293 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 3
0x00000000000248f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; retf
0x000000000001f23b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; ret 0
0x000000000013dc23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; retf
0x000000000006fc53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; ret
0x0000000000016fd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bl ; retf 0
0x000000000006fbc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x0000000000125c8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], al ; ret 0x8b48
0x000000000001ea43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; retf 2
0x0000000000008f63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], dh ; retf
0x00000000000086f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], al ; retf
0x0000000000018413 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; retf
0x0000000000026273 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; retf
0x00000000000b3029 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000022d03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret
0x000000000001998b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, ah ; ret
0x00000000000208d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dh ; retf 1
0x0000000000013a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; ret
0x00000000000131f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, al ; ret
0x0000000000008dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, bh ; retf 0
0x000000000013db63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000e688b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000008723 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf 0
0x000000000008df8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; sti ; ret 0xffff
0x000000000000b303 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, ch ; ret 1
0x000000000007ed3c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000740a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000071bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007f174 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x11
0x00000000000821d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x13
0x0000000000078124 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 6
0x0000000000074adc : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf
0x00000000000756ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x10
0x0000000000074ca4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x13
0x000000000007f2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0xa
0x0000000000076bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0xf
0x000000000007939c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 6
0x0000000000074b54 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 7
0x000000000007513c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 8
0x000000000007b9f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 9
0x00000000001390a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008c364 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fea3e : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x8ac86
0x00000000000cf9b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x8bcb6
0x00000000000d9bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000263c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00000000001240dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000072f44 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x000000000007208c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x37
0x000000000000c51c : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 3
0x00000000000701fc : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf
0x0000000000079de4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf 0x37
0x0000000000177de8 : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; retf
0x00000000000208d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; retf 1
0x00000000000a10f5 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdi ; ret
0x0000000000072e84 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret
0x000000000007202c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x37
0x000000000007019c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; retf
0x0000000000079d24 : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; retf 0x37
0x00000000000191dc : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000019854 : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000000f0a2d : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0xf0a3f ; ret
0x00000000000f285d : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0xf286f ; ret
0x000000000008df8c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x8a296
0x00000000000fe0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x8a3a6
0x000000000012e4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x8af66
0x00000000000d9afc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001241cc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x000000000000a6a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; ret 0
0x0000000000015a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf 0
0x00000000000261b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf 3
0x00000000000d065c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a781c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d14ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000adeac : add byte ptr [rax], al ; add byte ptr [rax], al ; lock add dword ptr [rdi], esi ; ret
0x0000000000125488 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x0000000000102b7e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 0x6f], 0 ; ret
0x00000000000b21c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0 ; ret
0x000000000012540d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsi + 0x10], 0 ; ret
0x00000000000a1adc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x00000000000a1acc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000a1abc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3f ; ret
0x00000000000b3eec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffffffe ; ret
0x00000000000c9064 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009003c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000a1aac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000a1a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; ret
0x00000000000f92cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000f921c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000012426c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, eax ; jmp rdx
0x00000000000f9585 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000138eff : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rax ; ret
0x00000000000e8802 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000124d4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000ee8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a032c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000008ebcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi - 8] ; ret
0x00000000000aa3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000000ddbac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi] ; ret
0x00000000000b2366 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000124f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000d30dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x00000000000ac69c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x89119
0x0000000000105d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000123d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rdx
0x0000000000123e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0x00000000000bbd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, rdi ; mov eax, esi ; ret
0x000000000012443b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; add qword ptr [rdi + 0x28], rsi ; ret
0x00000000000f38cb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000f3fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000b643b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000124d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000001274ba : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rsi ; ret
0x000000000012433b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000012434b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000012438b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000012439b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000000a542b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000008fafb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi] ; ret
0x00000000000d2baa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, rdi ; ret
0x000000000006d56c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000070064 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x37
0x0000000000072cd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf
0x0000000000113019 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; jmp rsi
0x00000000000b7189 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, esi ; ret
0x00000000000b3038 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000090d79 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000000b304 : add byte ptr [rax], al ; add byte ptr [rax], al ; out dx, al ; ret 1
0x000000000001cbb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; out dx, eax ; ret 0
0x0000000000015d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf 0
0x000000000001fa34 : add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf 1
0x00000000000720ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x0000000000070184 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf
0x0000000000070124 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0x37
0x00000000000baf86 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008c99c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000b26ac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008fa44 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000021894 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; retf
0x0000000000018d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; ret
0x000000000007598c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret
0x000000000007004c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x37
0x0000000000072194 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x000000000007010c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0x37
0x0000000000123b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; mov rbx, rdi ; call rax
0x000000000000ee5c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbx ; ret 1
0x000000000001c0d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rcx ; retf 0
0x000000000015856c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add ah, ah ; retf
0x000000000001f71c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000000253bc : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 2
0x000000000000156c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000011eb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000006d764 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d2
0x000000000006de54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d3
0x000000000006e61c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d4
0x000000000001c0ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x166
0x000000000001da0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1e9
0x00000000000247bc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1fc
0x00000000000198cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x290
0x000000000000daac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2ba
0x0000000000016824 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x302
0x000000000001b6e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x316
0x000000000000a47c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x32f
0x000000000002505c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x355
0x000000000007001d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000201e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x381
0x0000000000010194 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38b
0x0000000000027444 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3af
0x0000000000012534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x0000000000024e64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xdb
0x0000000000008934 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xdc
0x000000000000ef94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf8
0x0000000000009b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xfa
0x0000000000025204 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000020994 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000002ab4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000bdc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000002502c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x13c
0x000000000001ef9c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x143
0x0000000000015bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x153
0x0000000000019c74 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x165
0x0000000000016d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x198
0x000000000001479c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1e3
0x000000000001f854 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x215
0x0000000000026ae4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x23
0x0000000000016344 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x261
0x000000000001b78c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x27
0x0000000000014d54 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x273
0x0000000000018594 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2c7
0x0000000000028884 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x36a
0x000000000007214d : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x37
0x0000000000013bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x371
0x000000000001e3b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x38f
0x000000000001e9fc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b1
0x000000000002277c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3cf
0x000000000002568c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x5b
0x00000000000140dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x77
0x0000000000027a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x7b
0x00000000000275dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xa3
0x000000000002796c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xa8
0x0000000000017e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xce
0x0000000000002610 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xd
0x000000000000c88c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000000af9c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000006d50c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x0000000000167bb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000016c44 : add byte ptr [rax], al ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; retf 0
0x0000000000008dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; stc ; retf 0
0x0000000000168434 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000001683ec : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000006fc84 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edx ; ret 0x13
0x000000000006fc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; ret 0x13
0x000000000000a5fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; retf 1
0x00000000000089f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xlatb ; retf 0
0x0000000000157b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x0000000000157c24 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 0
0x00000000000b43ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000092814 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009251c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x000000000006ef7d : add byte ptr [rax], al ; add byte ptr [rax], bh ; call qword ptr [rbx]
0x000000000006fb95 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000000000007880d : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret 0x37
0x0000000000079e8d : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf
0x0000000000079acd : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x37
0x000000000000a11d : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 1
0x0000000000078975 : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000007016d : add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x0000000000072ca5 : add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0x37
0x000000000006fbf5 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000000000070105 : add byte ptr [rax], al ; add byte ptr [rax], ch ; retf 0x37
0x0000000000078915 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x0000000000079e45 : add byte ptr [rax], al ; add byte ptr [rax], cl ; retf
0x0000000000079ab5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; retf 0x37
0x000000000014d08e : add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rbx]
0x000000000014d01e : add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rdi]
0x0000000000012e05 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000071ffd : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x37
0x0000000000079e5d : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x0000000000177fb5 : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x20
0x00000000000700dd : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x37
0x000000000006d555 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000075ca5 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x37
0x000000000007217d : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000076c4d : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf 0x37
0x000000000014fc9a : add byte ptr [rax], al ; add byte ptr [rax], r8b ; mov al, 0x58 ; cmc ; call qword ptr [rdx]
0x0000000000123f78 : add byte ptr [rax], al ; add byte ptr [rbp + 0x21], dh ; add rsp, 0x18 ; ret
0x00000000000b5f88 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; ret
0x00000000000bf48f : add byte ptr [rax], al ; add byte ptr [rbp + 0x3f], dh ; add rsp, 0x18 ; ret
0x00000000000b5797 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000090297 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x18 ; ret
0x0000000000090202 : add byte ptr [rax], al ; add byte ptr [rbp + 0x46], dh ; add rsp, 0x18 ; ret
0x00000000000b6239 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000008df06 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000000000008ddd0 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000000000d9dfb : add byte ptr [rax], al ; add byte ptr [rbp + 6], dh ; add rsp, 0x18 ; jmp rax
0x00000000000f0a2e : add byte ptr [rax], al ; add byte ptr [rbp + rax - 0xd], dh ; ret
0x00000000000b57ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000123b5d : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], dl ; mov ebx, edi ; call rax
0x00000000000c7976 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009c100 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000090bcf : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e7488 : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffe], al ; ret
0x000000000015e4e1 : add byte ptr [rax], al ; add byte ptr [rbx + rbp + 1], dl ; add al, ch ; retf -9
0x000000000016a371 : add byte ptr [rax], al ; add byte ptr [rbx + rbp*8], ah ; add dword ptr [rax], eax ; cwde ; retf
0x000000000012e7a0 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], cl ; mov al, 0x29 ; ret 0x4589
0x000000000012e2e8 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], cl ; test al, 0x29 ; ret 0x4589
0x0000000000157391 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*4], al ; add al, cl ; retf
0x0000000000167389 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*4], bh ; add dword ptr [rax], eax ; push rax ; retf -7
0x0000000000167359 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*4], cl ; add dword ptr [rax], eax ; retf -7
0x000000000013de35 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10], cl ; retf
0x00000000000cba2a : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7fd06], al ; ret
0x00000000000b9536 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000000f81d : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 1
0x0000000000021295 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 3
0x00000000000248f5 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; retf
0x000000000014d3de : add byte ptr [rax], al ; add byte ptr [rbx], dh ; hlt ; call qword ptr [rdi]
0x000000000001f23d : add byte ptr [rax], al ; add byte ptr [rbx], dl ; ret 0
0x000000000013dc25 : add byte ptr [rax], al ; add byte ptr [rbx], dl ; retf
0x000000000008e33b : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000016c60d : add byte ptr [rax], al ; add byte ptr [rcx + rbx*2], al ; ret
0x00000000000bd402 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x22e8
0x00000000000bd4f2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x32e8
0x00000000000bd3c0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x64e8
0x00000000000bd5b5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x6fe8
0x00000000000bd2b4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x70e8
0x00000000000bd9a8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x7ce8
0x00000000000bd89a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8ae8
0x00000000000bd48f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x95e8
0x00000000000bd37e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xa6e8
0x00000000000bd91a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xae8
0x00000000000bd319 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xbe8
0x00000000000bd961 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xc3e8
0x00000000000bd256 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xcee8
0x00000000000bd550 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xd4e8
0x00000000000bd444 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xe0e8
0x00000000000bd742 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xe2e8
0x00000000000dc2d9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rax
0x00000000000f98cb : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000123edd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call rax
0x00000000000f9438 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x00000000000c2b2a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rax
0x00000000001145d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rdx
0x000000000011422c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000106803 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0x0000000000114fbd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rdx
0x00000000000badd8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; dec qword ptr [r8 - 0x77] ; ret 0xf66
0x00000000000ae1db : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000012e27d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8348
0x000000000009085d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7a2d080e], cl ; ret 0x850f
0x000000000015483e : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; jmp rbx
0x00000000000f940c : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9dd4 : add byte ptr [rax], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000006fc55 : add byte ptr [rax], al ; add byte ptr [rcx], bl ; ret
0x0000000000016fd5 : add byte ptr [rax], al ; add byte ptr [rcx], bl ; retf 0
0x0000000000092a27 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000006fbc5 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000008c481 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal bl, 0xab ; ret
0x000000000016a0e9 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bl ; add al, dl ; ret 0xfffa
0x00000000001581dd : add byte ptr [rax], al ; add byte ptr [rdi + rax*4], al ; retf
0x00000000001518d1 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], al ; add al, bh ; ret 0xfff5
0x00000000001518a1 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], dl ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x00000000000abaea : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0xadeb
0x0000000000092775 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x46], al ; ret 0x74b9
0x0000000000125c8d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], al ; ret 0x8b48
0x0000000000154f8e : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], cl ; call qword ptr [rdx]
0x000000000015826d : add byte ptr [rax], al ; add byte ptr [rdi], al ; retf
0x000000000013de55 : add byte ptr [rax], al ; add byte ptr [rdi], bl ; ret
0x000000000001ea45 : add byte ptr [rax], al ; add byte ptr [rdi], bl ; retf 2
0x00000000000b4829 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8b48
0x00000000000abae2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x2b8
0x000000000009bc19 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd285
0x00000000000ef2c7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x83c6
0x00000000000f0157 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x0000000000008f65 : add byte ptr [rax], al ; add byte ptr [rdi], dh ; retf
0x00000000001673d1 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*4 + 1], al ; add byte ptr [rax], bh ; retf -7
0x00000000001583a5 : add byte ptr [rax], al ; add byte ptr [rdx + rdi], al ; retf 1
0x00000000000086f5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; retf
0x0000000000018415 : add byte ptr [rax], al ; add byte ptr [rdx], ch ; retf
0x0000000000026275 : add byte ptr [rax], al ; add byte ptr [rdx], cl ; retf
0x0000000000151ac1 : add byte ptr [rax], al ; add byte ptr [rdx], dh ; add al, cl ; retf -0xb
0x0000000000166ec9 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*4 + 1], bh ; add byte ptr [rax], al ; ret
0x0000000000156eb1 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*4], ah ; add al, cl ; ret
0x0000000000152a6e : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8], cl ; call qword ptr [rbx]
0x0000000000124d7b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000124d5b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000001274bb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi], rsi ; ret
0x00000000000a541b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000000d2b9b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi] ; ret
0x00000000000d2bab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, rdi ; ret
0x00000000000b302b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000015032e : add byte ptr [rax], al ; add byte ptr [rsi - 0xb], bl ; call qword ptr [rax]
0x0000000000022d05 : add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret
0x0000000000167491 : add byte ptr [rax], al ; add byte ptr [rsp + rdi*4 + 1], al ; add byte ptr [rax], bh ; retf
0x0000000000166de1 : add byte ptr [rax], al ; add byte ptr [rsp + rsi*4 + 1], dl ; add byte ptr [rax], ch ; ret 0xfff9
0x000000000001998d : add byte ptr [rax], al ; add ch, ah ; ret
0x00000000000208d5 : add byte ptr [rax], al ; add ch, dh ; retf 1
0x0000000000013a1d : add byte ptr [rax], al ; add ch, dl ; ret
0x00000000000131f5 : add byte ptr [rax], al ; add cl, al ; ret
0x0000000000008dcd : add byte ptr [rax], al ; add cl, bh ; retf 0
0x0000000000095eb2 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000093c01 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000e688d : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000e0271 : add byte ptr [rax], al ; add cl, ch ; retf -2
0x00000000000aa06e : add byte ptr [rax], al ; add cl, ch ; retf -4
0x000000000013592b : add byte ptr [rax], al ; add cl, ch ; retf -7
0x0000000000008725 : add byte ptr [rax], al ; add cl, ch ; retf 0
0x000000000008df8d : add byte ptr [rax], al ; add cl, ch ; sti ; ret 0xffff
0x000000000012540e : add byte ptr [rax], al ; add dh, al ; adc byte ptr [rax], r8b ; ret
0x0000000000125489 : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x00000000000b21c4 : add byte ptr [rax], al ; add dh, al ; or byte ptr [r8], r8b ; ret
0x000000000000b305 : add byte ptr [rax], al ; add dh, ch ; ret 1
0x00000000000f16a7 : add byte ptr [rax], al ; add dh, dh ; ret 0x4808
0x00000000000f0fae : add byte ptr [rax], al ; add dh, dh ; ret 0x4810
0x00000000000a3926 : add byte ptr [rax], al ; add dword ptr [rax], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ed3e : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000740a6 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000071bce : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007f176 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x11
0x00000000000821d6 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x13
0x0000000000078126 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 6
0x0000000000074ade : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf
0x00000000000756ae : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x10
0x0000000000074ca6 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x13
0x000000000007f2ae : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0xa
0x0000000000076bde : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0xf
0x000000000007939e : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 6
0x0000000000074b56 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 7
0x000000000007513e : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 8
0x000000000007b9f6 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 9
0x00000000000f940d : add byte ptr [rax], al ; add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000015f9b2 : add byte ptr [rax], al ; add dword ptr fs:[r8], eax ; call 0xffffffffd115f20b
0x000000000014bd92 : add byte ptr [rax], al ; add eax, 0x1a580000 ; hlt ; jmp qword ptr [rax]
0x000000000016069a : add byte ptr [rax], al ; add qword ptr [rax], r8 ; push rax ; jl 0x1606a4 ; call qword ptr [rcx]
0x000000000012442e : add byte ptr [rax], al ; add qword ptr [rdi + 0x10], rsi ; ret
0x00000000000b3f6c : add byte ptr [rax], al ; add qword ptr [rdi], 2 ; ret
0x00000000000b418f : add byte ptr [rax], al ; add qword ptr [rdi], 3 ; ret
0x0000000000158656 : add byte ptr [rax], al ; add rsi, rdi ; call rdi
0x00000000000abacc : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b127d : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a59ab : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000d4c73 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000bdd57 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000a00e6 : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000000000a1c8e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000088d3b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000016d5b2 : add byte ptr [rax], al ; and al, 0x1c ; add al, byte ptr [rax] ; pop rax ; test edi, ebx ; call qword ptr [rdx]
0x000000000014fd72 : add byte ptr [rax], al ; and al, 0x45 ; add byte ptr [rax], al ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x0000000000163f72 : add byte ptr [rax], al ; and al, 0x87 ; add dword ptr [rax], eax ; or byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x0000000000154372 : add byte ptr [rax], al ; and al, 0x8b ; add byte ptr [rax], al ; call 0x131539b4
0x00000000001654b2 : add byte ptr [rax], al ; and al, 0x9b ; add dword ptr [rax], eax ; js 0x165447 ; stc ; call qword ptr [rax]
0x0000000000166e72 : add byte ptr [rax], al ; and al, 0xb6 ; add dword ptr [rax], eax ; mov dl, al ; stc ; jmp qword ptr [rdx]
0x00000000001447ae : add byte ptr [rax], al ; and al, 0xc3 ; hlt ; call rsp
0x000000000014489e : add byte ptr [rax], al ; and al, 0xca ; hlt ; call rsp
0x0000000000144d6e : add byte ptr [rax], al ; and al, 0xd2 ; cmc ; call rsp
0x0000000000169672 : add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; test al, 0xa7 ; cli ; call qword ptr [rcx]
0x000000000016a072 : add byte ptr [rax], al ; and al, 0xe8 ; add dword ptr [rax], eax ; mov dl, al ; cli ; call qword ptr [rcx]
0x000000000016a372 : add byte ptr [rax], al ; and al, 0xeb ; add dword ptr [rax], eax ; cwde ; retf
0x000000000016b8b2 : add byte ptr [rax], al ; and al, 0xff ; add dword ptr [rax], eax ; xor dil, bl ; jmp rdx
0x000000000015dab2 : add byte ptr [rax], al ; and al, byte ptr fs:[rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000014f4ce : add byte ptr [rax], al ; and byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x00000000000003f0 : add byte ptr [rax], al ; and byte ptr [rax], al ; adc byte ptr [rcx + rax], al ; retf 0x19
0x000000000015590e : add byte ptr [rax], al ; and byte ptr [rdi - 0xa], ah ; call qword ptr [rdx]
0x00000000001555de : add byte ptr [rax], al ; and byte ptr [rdx - 0xa], ah ; call qword ptr [rbx]
0x00000000001557ce : add byte ptr [rax], al ; and byte ptr [rsi - 0xa], ah ; call qword ptr [rdx]
0x000000000014f46f : add byte ptr [rax], al ; and ch, dh ; jmp qword ptr [rax]
0x0000000000099afc : add byte ptr [rax], al ; and cl, ch ; wait ; retf -1
0x0000000000025e12 : add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt bx ; ret 0x13
0x0000000000014352 : add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt cx ; ret 0x13
0x0000000000023aa2 : add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt si ; ret 0x13
0x00000000000141ba : add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt word ptr [rax] ; ret
0x0000000000025cda : add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt word ptr [rdx] ; ret
0x0000000000023ad2 : add byte ptr [rax], al ; and dword ptr [rax], eax ; ltr di ; ret 0x13
0x000000000001439a : add byte ptr [rax], al ; and dword ptr [rax], eax ; ltr dx ; ret 0x13
0x0000000000025e42 : add byte ptr [rax], al ; and dword ptr [rax], eax ; ltr sp ; ret 0x13
0x000000000002606a : add byte ptr [rax], al ; and dword ptr [rax], eax ; sldt ecx ; ret 0x13
0x0000000000023d42 : add byte ptr [rax], al ; and dword ptr [rax], eax ; sldt esp ; ret 0x13
0x0000000000025d0a : add byte ptr [rax], al ; and dword ptr [rax], eax ; sldt word ptr [rax] ; ret
0x0000000000026aea : add byte ptr [rax], al ; and dword ptr [rax], eax ; sldt word ptr [rax] ; ret 0x13
0x00000000000239b2 : add byte ptr [rax], al ; and dword ptr [rax], eax ; sldt word ptr [rbx] ; ret
0x00000000000141a2 : add byte ptr [rax], al ; and dword ptr [rax], eax ; sldt word ptr [rdi] ; ret
0x00000000000142da : add byte ptr [rax], al ; and dword ptr [rax], eax ; str eax ; ret 0x13
0x0000000000023a5a : add byte ptr [rax], al ; and dword ptr [rax], eax ; str ebp ; ret 0x13
0x0000000000025dca : add byte ptr [rax], al ; and dword ptr [rax], eax ; str edx ; ret 0x13
0x0000000000025c7a : add byte ptr [rax], al ; and dword ptr [rax], eax ; str word ptr [rcx] ; ret
0x000000000001de32 : add byte ptr [rax], al ; and dword ptr [rax], eax ; verr ax ; ret
0x0000000000025e8a : add byte ptr [rax], al ; and dword ptr [rax], eax ; verr bp ; ret 0x13
0x000000000001442a : add byte ptr [rax], al ; and dword ptr [rax], eax ; verr bx ; ret 0x13
0x0000000000023b02 : add byte ptr [rax], al ; and dword ptr [rax], eax ; verw ax ; ret 0x13
0x00000000000261a2 : add byte ptr [rax], al ; and dword ptr [rax], eax ; verw si ; ret 0x13
0x00000000000147ba : add byte ptr [rax], al ; and dword ptr [rax], eax ; verw sp ; ret 0x13
0x000000000015da92 : add byte ptr [rax], al ; and r8b, byte ptr [rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000014cde6 : add byte ptr [rax], al ; call 0x1214c21f
0x000000000014c3c6 : add byte ptr [rax], al ; call 0x1314b7ee
0x0000000000152c06 : add byte ptr [rax], al ; call 0x13152220
0x0000000000154206 : add byte ptr [rax], al ; call 0x1315383f
0x0000000000154356 : add byte ptr [rax], al ; call 0x13153990
0x0000000000154376 : add byte ptr [rax], al ; call 0x131539b0
0x0000000000154396 : add byte ptr [rax], al ; call 0x131539d0
0x000000000014c416 : add byte ptr [rax], al ; call 0x1814b83e
0x000000000014c466 : add byte ptr [rax], al ; call 0x1814b88e
0x000000000012d193 : add byte ptr [rax], al ; call 0x89434
0x00000000000fea40 : add byte ptr [rax], al ; call 0x8ac84
0x000000000009eee0 : add byte ptr [rax], al ; call 0x8b0f4
0x00000000000cf9b5 : add byte ptr [rax], al ; call 0x8bcb4
0x0000000000002f86 : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000740aa : add byte ptr [rax], al ; call qword ptr [rcx]
0x00000000000ba3c6 : add byte ptr [rax], al ; call rax
0x00000000000263c6 : add byte ptr [rax], al ; call rcx
0x00000000000ba54e : add byte ptr [rax], al ; call rdx
0x000000000014b936 : add byte ptr [rax], al ; clc ; adc esp, esi ; jmp qword ptr [rbx]
0x000000000015f74f : add byte ptr [rax], al ; clc ; call qword ptr [rbx]
0x000000000015f52f : add byte ptr [rax], al ; clc ; call rdi
0x0000000000072f46 : add byte ptr [rax], al ; clc ; ret
0x000000000007208e : add byte ptr [rax], al ; clc ; ret 0x37
0x00000000001518a6 : add byte ptr [rax], al ; clc ; ret 0xfff5
0x000000000000c51e : add byte ptr [rax], al ; clc ; ret 3
0x00000000000701fe : add byte ptr [rax], al ; clc ; retf
0x0000000000079de6 : add byte ptr [rax], al ; clc ; retf 0x37
0x0000000000153ea6 : add byte ptr [rax], al ; clc ; sub esi, esi ; call qword ptr [rdx]
0x000000000014d526 : add byte ptr [rax], al ; clc ; xor al, 0xf4 ; call qword ptr [rbx]
0x000000000014d3c6 : add byte ptr [rax], al ; clc ; xor dh, ah ; call qword ptr [rbx]
0x000000000016a38a : add byte ptr [rax], al ; cld ; jmp 0xffffffffcba6a39a
0x000000000014c44a : add byte ptr [rax], al ; cld ; or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000015144a : add byte ptr [rax], al ; cld ; pop rbx ; add byte ptr [rax], al ; push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rsi
0x0000000000177dea : add byte ptr [rax], al ; cld ; retf
0x000000000016834a : add byte ptr [rax], al ; cld ; retf 1
0x0000000000153f4a : add byte ptr [rax], al ; cld ; xchg byte ptr [rax], al ; add al, al ; sub dh, dh ; call qword ptr [rdx]
0x0000000000154e4a : add byte ptr [rax], al ; cld ; xchg eax, ebp ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xa], cl ; call qword ptr [rbx]
0x00000000001744de : add byte ptr [rax], al ; cmc ; add eax, 0x11eb05 ; retf
0x00000000000208d6 : add byte ptr [rax], al ; cmc ; retf 1
0x00000000000a10f7 : add byte ptr [rax], al ; cmove rax, rdi ; ret
0x0000000000157be6 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x000000000014d08a : add byte ptr [rax], al ; cmp al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rbx]
0x000000000016d78a : add byte ptr [rax], al ; cmp al, 0x1f ; add al, byte ptr [rax] ; push rax ; mov ebx, edi ; call qword ptr [rcx]
0x000000000016e78a : add byte ptr [rax], al ; cmp al, 0x2f ; add al, byte ptr [rax] ; cwde ; sti ; call qword ptr [rbx]
0x000000000015f68a : add byte ptr [rax], al ; cmp al, 0x3e ; add dword ptr [rax], eax ; loopne 0x15f6de ; clc ; call qword ptr [rbx]
0x000000000014fd8a : add byte ptr [rax], al ; cmp al, 0x45 ; add byte ptr [rax], al ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x000000000017148a : add byte ptr [rax], al ; cmp al, 0x5c ; add al, byte ptr [rax] ; jo 0x171512 ; cld ; jmp qword ptr [rax]
0x000000000015218a : add byte ptr [rax], al ; cmp al, 0x69 ; add byte ptr [rax], al ; loopne 0x152199 ; cmc ; jmp rbx
0x0000000000163f8a : add byte ptr [rax], al ; cmp al, 0x87 ; add dword ptr [rax], eax ; adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x000000000016448a : add byte ptr [rax], al ; cmp al, 0x8c ; add dword ptr [rax], eax ; pop rax ; stc ; call qword ptr [rbx]
0x0000000000154f8a : add byte ptr [rax], al ; cmp al, 0x97 ; add byte ptr [rax], al ; add byte ptr [rdi - 0xa], cl ; call qword ptr [rdx]
0x000000000016738a : add byte ptr [rax], al ; cmp al, 0xbb ; add dword ptr [rax], eax ; push rax ; retf -7
0x000000000016968a : add byte ptr [rax], al ; cmp al, 0xde ; add dword ptr [rax], eax ; mov al, 0xa7 ; cli ; call qword ptr [rbx]
0x000000000016a08a : add byte ptr [rax], al ; cmp al, 0xe8 ; add dword ptr [rax], eax ; nop ; ret 0xfffa
0x000000000014fde6 : add byte ptr [rax], al ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fdc6 : add byte ptr [rax], al ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x0000000000158e96 : add byte ptr [rax], al ; cmp byte ptr [rdi + rsi*8], ah ; jmp qword ptr [rbx]
0x0000000000154e66 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rdx]
0x00000000000bbfa6 : add byte ptr [rax], al ; cmp dword ptr [rbx], esi ; pop rbx ; sete al ; ret
0x00000000000bbdbe : add byte ptr [rax], al ; cmp dword ptr [rsi], edx ; sete al ; ret
0x000000000008fb7e : add byte ptr [rax], al ; cmp qword ptr [rdi], 0 ; sete al ; ret
0x000000000014f392 : add byte ptr [rax], al ; cmp r8d, dword ptr [rax] ; add byte ptr [rax + 0x1f], cl ; cmc ; jmp qword ptr [rax]
0x00000000001652da : add byte ptr [rax], al ; cqo ; add dword ptr [rax], eax ; mov al, 0x7b ; stc ; call qword ptr [rcx]
0x0000000000157f56 : add byte ptr [rax], al ; cwde ; div dh ; call qword ptr [rdx]
0x000000000014ea96 : add byte ptr [rax], al ; cwde ; in eax, dx ; hlt ; call qword ptr [rcx]
0x0000000000072e86 : add byte ptr [rax], al ; cwde ; ret
0x000000000007202e : add byte ptr [rax], al ; cwde ; ret 0x37
0x000000000007019e : add byte ptr [rax], al ; cwde ; retf
0x0000000000079d26 : add byte ptr [rax], al ; cwde ; retf 0x37
0x0000000000002196 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000017397f : add byte ptr [rax], al ; fild word ptr [rdx] ; ret
0x000000000015032a : add byte ptr [rax], al ; fmul qword ptr [rdx] ; add byte ptr [rax], al ; pop rsi ; cmc ; call qword ptr [rax]
0x0000000000151d5e : add byte ptr [rax], al ; fprem1 ; call rcx
0x0000000000150876 : add byte ptr [rax], al ; fsub dword ptr [rdi - 0xb] ; call qword ptr [rbx]
0x000000000016662a : add byte ptr [rax], al ; fsubr qword ptr [rbp - 0x46bfffff] ; stc ; call qword ptr [rbx]
0x000000000015f942 : add byte ptr [rax], al ; hlt ; add dword ptr [rax], eax ; js 0x15f997 ; clc ; call qword ptr [rbx]
0x000000000015da42 : add byte ptr [rax], al ; hlt ; and dword ptr [rcx], eax ; add al, bh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x0000000000144e86 : add byte ptr [rax], al ; hlt ; in eax, -0xb ; call rsp
0x0000000000156e42 : add byte ptr [rax], al ; hlt ; mov ch, 0 ; add al, bl ; ret
0x0000000000166f42 : add byte ptr [rax], al ; hlt ; mov dh, 1 ; add al, bl ; ret
0x000000000016c642 : add byte ptr [rax], al ; hlt ; or eax, 0x78b80002 ; sti ; call qword ptr [rdx]
0x0000000000161342 : add byte ptr [rax], al ; hlt ; pop rdx ; add dword ptr [rax], eax ; call 0x13160c23
0x0000000000157b42 : add byte ptr [rax], al ; hlt ; ret 0
0x0000000000167b42 : add byte ptr [rax], al ; hlt ; ret 1
0x000000000014513e : add byte ptr [rax], al ; hlt ; sub dh, dh ; jmp rsp
0x000000000014411e : add byte ptr [rax], al ; hlt ; test esi, esp ; jmp rsp
0x0000000000145256 : add byte ptr [rax], al ; idiv r15b ; in al, dx ; retf
0x0000000000158572 : add byte ptr [rax], al ; in al, -0x35 ; add byte ptr [rax], al ; pop rax ; add edi, esi ; jmp rdi
0x0000000000167972 : add byte ptr [rax], al ; in al, -0x41 ; add dword ptr [rax], eax ; fcom st(0) ; stc ; call rcx
0x000000000014b932 : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; clc ; adc esp, esi ; jmp qword ptr [rbx]
0x000000000014c932 : add byte ptr [rax], al ; in al, 0x10 ; add byte ptr [rax], al ; test al, 0x23 ; hlt ; call qword ptr [rsi]
0x000000000014d632 : add byte ptr [rax], al ; in al, 0x1d ; add byte ptr [rax], al ; test al, 0x35 ; hlt ; jmp qword ptr [rbx]
0x000000000014d732 : add byte ptr [rax], al ; in al, 0x1e ; add byte ptr [rax], al ; pop rax ; hlt ; call qword ptr [rdi]
0x000000000015f732 : add byte ptr [rax], al ; in al, 0x3e ; add dword ptr [rax], eax ; clc ; clc ; call qword ptr [rbx]
0x000000000015fa32 : add byte ptr [rax], al ; in al, 0x41 ; add dword ptr [rax], eax ; or byte ptr [rdi - 8], al ; call rax
0x0000000000150872 : add byte ptr [rax], al ; in al, 0x4e ; add byte ptr [rax], al ; fsub dword ptr [rdi - 0xb] ; call qword ptr [rbx]
0x0000000000171072 : add byte ptr [rax], al ; in al, 0x56 ; add al, byte ptr [rax] ; test al, 0x5e ; cld ; call rsi
0x0000000000162672 : add byte ptr [rax], al ; in al, 0x6c ; add dword ptr [rax], eax ; js 0x162695 ; stc ; jmp rsp
0x0000000000152b32 : add byte ptr [rax], al ; in al, 0x72 ; add byte ptr [rax], al ; pop rax ; cdq ; jmp qword ptr [rax]
0x000000000014e73a : add byte ptr [rax], al ; in al, dx ; add byte ptr cs:[rax], al ; rcr bh, 0xf4 ; jmp qword ptr [rdx]
0x0000000000163b7a : add byte ptr [rax], al ; in al, dx ; add dword ptr [rcx], 0xf947c000 ; call rdi
0x000000000014da3a : add byte ptr [rax], al ; in al, dx ; and dword ptr [rax], eax ; add al, dl ; cmp dh, ah ; call qword ptr [rdi]
0x000000000014de3a : add byte ptr [rax], al ; in al, dx ; and eax, 0x4de00000 ; hlt ; call qword ptr [rax]
0x0000000000157f3a : add byte ptr [rax], al ; in al, dx ; mov byte ptr [rax], 0 ; nop ; div dh ; call qword ptr [rbx]
0x000000000014c13a : add byte ptr [rax], al ; in al, dx ; or byte ptr [rax], al ; add byte ptr [rax + 0x1b], al ; hlt ; call qword ptr [rdx]
0x000000000016143a : add byte ptr [rax], al ; in al, dx ; pop rbx ; add dword ptr [rax], eax ; mov al, 0xce ; clc ; call qword ptr [rdx]
0x000000000015213a : add byte ptr [rax], al ; in al, dx ; push -0xa400000 ; cmc ; jmp qword ptr [rsi]
0x00000000000191de : add byte ptr [rax], al ; in al, dx ; ret
0x000000000016843a : add byte ptr [rax], al ; in al, dx ; retf
0x000000000015847a : add byte ptr [rax], al ; in al, dx ; retf 0
0x000000000016e63a : add byte ptr [rax], al ; in al, dx ; sub eax, 0x97f00002 ; sti ; call qword ptr [rbx]
0x000000000016627a : add byte ptr [rax], al ; in al, dx ; test al, 1 ; add al, al ; mov bl, 0xf9 ; jmp qword ptr [rdi]
0x0000000000173178 : add byte ptr [rax], al ; in eax, dx ; syscall
0x000000000016eeba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, byte ptr ss:[rax] ; loopne 0x16ee6b ; sti ; jmp qword ptr [rdx]
0x000000000014fcba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], r8b ; mov al, 0x58 ; cmc ; call qword ptr [rbx]
0x00000000001696ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; fiadd word ptr [rcx] ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x000000000016b6ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; inc byte ptr [rcx] ; add byte ptr [rax + 0x2b], al ; sti ; jmp qword ptr [rbx]
0x0000000000162ffa : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jbe 0x163009 ; add byte ptr [rax + 0x2a], dh ; stc ; call rdi
0x0000000000166cba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov ah, 1 ; add byte ptr [rax - 0x40], al ; stc ; jmp qword ptr [rdx]
0x0000000000019856 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000016e8ba : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor byte ptr [rdx], al ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x00000000001588a6 : add byte ptr [rax], al ; jbe 0x1588e8 ; jmp qword ptr [rdi]
0x00000000001445f6 : add byte ptr [rax], al ; je 0x1445ac ; hlt ; call rsp
0x0000000000144a06 : add byte ptr [rax], al ; je 0x1449f8 ; hlt ; call rsp
0x0000000000144b2e : add byte ptr [rax], al ; je 0x144aba ; cmc ; call rsp
0x0000000000144bbe : add byte ptr [rax], al ; je 0x144b5e ; cmc ; call rsp
0x00000000001450ce : add byte ptr [rax], al ; je 0x1450f9 ; idiv bh ; insb byte ptr [rdi], dx ; ret 0
0x000000000014c3c2 : add byte ptr [rax], al ; je 0x14c3da ; add byte ptr [rax], al ; call 0x1314b7f2
0x000000000014c9c2 : add byte ptr [rax], al ; je 0x14c9e0 ; add byte ptr [rax], al ; test al, 0x23 ; hlt ; call qword ptr [rdi]
0x000000000014d1c2 : add byte ptr [rax], al ; je 0x14d1e8 ; add byte ptr [rax], al ; js 0x14d205 ; hlt ; call qword ptr [rdx]
0x000000000014d3c2 : add byte ptr [rax], al ; je 0x14d3ea ; add byte ptr [rax], al ; clc ; xor dh, ah ; call qword ptr [rbx]
0x000000000014fdc2 : add byte ptr [rax], al ; je 0x14fe14 ; add byte ptr [rax], al ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x000000000015fcc2 : add byte ptr [rax], al ; je 0x15fd13 ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 8], cl ; jmp qword ptr [rdx]
0x000000000015fec2 : add byte ptr [rax], al ; je 0x15ff15 ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x0000000000163fc2 : add byte ptr [rax], al ; je 0x163f56 ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 7], dl ; jmp qword ptr [rax]
0x00000000001698c2 : add byte ptr [rax], al ; je 0x1698af ; add dword ptr [rax], eax ; call 0x28169383
0x000000000016d7c2 : add byte ptr [rax], al ; je 0x16d7ee ; add al, byte ptr [rax] ; pop rax ; mov ebx, edi ; call qword ptr [rcx]
0x00000000000f0a2f : add byte ptr [rax], al ; je 0xf0a3d ; ret
0x00000000000f285f : add byte ptr [rax], al ; je 0xf286d ; ret
0x0000000000171adf : add byte ptr [rax], al ; jge 0x171ae3 ; call qword ptr [rcx]
0x000000000014f4ca : add byte ptr [rax], al ; jl 0x14f513 ; add byte ptr [rax], al ; and byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x00000000001550ca : add byte ptr [rax], al ; jl 0x15506f ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rdx]
0x00000000001557ca : add byte ptr [rax], al ; jl 0x155776 ; add byte ptr [rax], al ; and byte ptr [rsi - 0xa], ah ; call qword ptr [rdx]
0x000000000016630a : add byte ptr [rax], al ; jl 0x1662c0 ; add dword ptr [rax], eax ; mov al, 0xb5 ; stc ; jmp qword ptr [rdi]
0x00000000001671ca : add byte ptr [rax], al ; jl 0x167190 ; add dword ptr [rax], eax ; add al, cl ; stc ; jmp qword ptr [rdx]
0x000000000016ad0a : add byte ptr [rax], al ; jl 0x16ad0a ; add dword ptr [rax], eax ; xor al, dh ; cli ; call qword ptr [rcx]
0x00000000001716ca : add byte ptr [rax], al ; jl 0x171735 ; add al, byte ptr [rax] ; push rax ; jp 0x1716d8 ; call qword ptr [rdx]
0x000000000010d484 : add byte ptr [rax], al ; jmp 0x10d456
0x000000000010df24 : add byte ptr [rax], al ; jmp 0x10def6
0x0000000000132bcf : add byte ptr [rax], al ; jmp 0x132ba1
0x00000000001336df : add byte ptr [rax], al ; jmp 0x1336b1
0x000000000008df8e : add byte ptr [rax], al ; jmp 0x8a294
0x00000000000fe0be : add byte ptr [rax], al ; jmp 0x8a3a4
0x000000000012e4de : add byte ptr [rax], al ; jmp 0x8af64
0x0000000000099e1d : add byte ptr [rax], al ; jmp 0x9610f
0x00000000000a19fb : add byte ptr [rax], al ; jmp 0xa19cd
0x00000000000e0fb8 : add byte ptr [rax], al ; jmp 0xe0f8a
0x00000000000e23f8 : add byte ptr [rax], al ; jmp 0xe23ca
0x00000000000eb72f : add byte ptr [rax], al ; jmp 0xeb701
0x00000000000ecb3f : add byte ptr [rax], al ; jmp 0xecb11
0x00000000000d9afe : add byte ptr [rax], al ; jmp rax
0x0000000000124166 : add byte ptr [rax], al ; jmp rdx
0x00000000000fba0e : add byte ptr [rax], al ; jmp rsi
0x000000000010046e : add byte ptr [rax], al ; jne 0x1004c7 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000100584 : add byte ptr [rax], al ; jne 0x1005ba ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102f9c : add byte ptr [rax], al ; jne 0x102fae ; add rsp, 0x18 ; jmp rax
0x0000000000102ffc : add byte ptr [rax], al ; jne 0x10300e ; add rsp, 0x18 ; jmp rax
0x000000000010339c : add byte ptr [rax], al ; jne 0x1033ae ; add rsp, 0x18 ; jmp rax
0x00000000001033fc : add byte ptr [rax], al ; jne 0x10340e ; add rsp, 0x18 ; jmp rax
0x00000000001131c8 : add byte ptr [rax], al ; jne 0x113205 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000114314 : add byte ptr [rax], al ; jne 0x114325 ; add rsp, 0x18 ; ret
0x0000000000114364 : add byte ptr [rax], al ; jne 0x114375 ; add rsp, 0x18 ; ret
0x00000000001156e8 : add byte ptr [rax], al ; jne 0x115725 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000116818 : add byte ptr [rax], al ; jne 0x116830 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000118fa3 : add byte ptr [rax], al ; jne 0x118fe5 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000011e4eb : add byte ptr [rax], al ; jne 0x11e52d ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000123f94 : add byte ptr [rax], al ; jne 0x123fa6 ; add rsp, 0x18 ; jmp rax
0x0000000000123f79 : add byte ptr [rax], al ; jne 0x123fa6 ; add rsp, 0x18 ; ret
0x0000000000124004 : add byte ptr [rax], al ; jne 0x124016 ; add rsp, 0x18 ; jmp rax
0x0000000000123fe9 : add byte ptr [rax], al ; jne 0x124016 ; add rsp, 0x18 ; ret
0x00000000001245ea : add byte ptr [rax], al ; jne 0x1245fb ; add rsp, 0x18 ; ret
0x0000000000124704 : add byte ptr [rax], al ; jne 0x124716 ; add rsp, 0x18 ; jmp rax
0x00000000001246e9 : add byte ptr [rax], al ; jne 0x124716 ; add rsp, 0x18 ; ret
0x0000000000124774 : add byte ptr [rax], al ; jne 0x124786 ; add rsp, 0x18 ; jmp rax
0x0000000000124759 : add byte ptr [rax], al ; jne 0x124786 ; add rsp, 0x18 ; ret
0x0000000000124d3a : add byte ptr [rax], al ; jne 0x124d4b ; add rsp, 0x18 ; ret
0x000000000012901c : add byte ptr [rax], al ; jne 0x12902e ; add rsp, 0x18 ; jmp rax
0x000000000012907c : add byte ptr [rax], al ; jne 0x12908e ; add rsp, 0x18 ; jmp rax
0x000000000012941c : add byte ptr [rax], al ; jne 0x12942e ; add rsp, 0x18 ; jmp rax
0x000000000012947c : add byte ptr [rax], al ; jne 0x12948e ; add rsp, 0x18 ; jmp rax
0x000000000008dd5a : add byte ptr [rax], al ; jne 0x8dd77 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008ddd1 : add byte ptr [rax], al ; jne 0x8dde2 ; add rsp, 0x38 ; ret
0x000000000008de52 : add byte ptr [rax], al ; jne 0x8de6a ; add rsp, 0x30 ; pop rbx ; ret
0x000000000008df07 : add byte ptr [rax], al ; jne 0x8df18 ; add rsp, 0x28 ; ret
0x000000000008e1db : add byte ptr [rax], al ; jne 0x8e1ee ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000090203 : add byte ptr [rax], al ; jne 0x90255 ; add rsp, 0x18 ; ret
0x0000000000090298 : add byte ptr [rax], al ; jne 0x902e9 ; add rsp, 0x18 ; ret
0x00000000000a038b : add byte ptr [rax], al ; jne 0xa03d4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a548b : add byte ptr [rax], al ; jne 0xa54d4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a563b : add byte ptr [rax], al ; jne 0xa5684 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b38a7 : add byte ptr [rax], al ; jne 0xb38b8 ; add rsp, 0x28 ; ret
0x00000000000b38fa : add byte ptr [rax], al ; jne 0xb390b ; add rsp, 0x28 ; ret
0x00000000000b5f89 : add byte ptr [rax], al ; jne 0xb5fd3 ; add rsp, 0x18 ; ret
0x00000000000b623a : add byte ptr [rax], al ; jne 0xb624b ; add rsp, 0x18 ; ret
0x00000000000bb930 : add byte ptr [rax], al ; jne 0xbb953 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bc4de : add byte ptr [rax], al ; jne 0xbc4f1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000bf490 : add byte ptr [rax], al ; jne 0xbf4db ; add rsp, 0x18 ; ret
0x00000000000bf510 : add byte ptr [rax], al ; jne 0xbf55b ; add rsp, 0x18 ; ret
0x00000000000c935e : add byte ptr [rax], al ; jne 0xc93b4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9467 : add byte ptr [rax], al ; jne 0xc94bc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c956b : add byte ptr [rax], al ; jne 0xc95b4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9654 : add byte ptr [rax], al ; jne 0xc96a4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c973b : add byte ptr [rax], al ; jne 0xc9784 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9814 : add byte ptr [rax], al ; jne 0xc985c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9916 : add byte ptr [rax], al ; jne 0xc9964 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9a0f : add byte ptr [rax], al ; jne 0xc9a64 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9b0f : add byte ptr [rax], al ; jne 0xc9b64 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9c03 : add byte ptr [rax], al ; jne 0xc9c4c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9cec : add byte ptr [rax], al ; jne 0xc9d44 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9dfe : add byte ptr [rax], al ; jne 0xc9e54 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca017 : add byte ptr [rax], al ; jne 0xca06c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca113 : add byte ptr [rax], al ; jne 0xca15c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca1fc : add byte ptr [rax], al ; jne 0xca254 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca2f3 : add byte ptr [rax], al ; jne 0xca33c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca3dc : add byte ptr [rax], al ; jne 0xca434 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca4d3 : add byte ptr [rax], al ; jne 0xca51c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca5bc : add byte ptr [rax], al ; jne 0xca614 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca6bf : add byte ptr [rax], al ; jne 0xca714 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca7c6 : add byte ptr [rax], al ; jne 0xca814 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca8bf : add byte ptr [rax], al ; jne 0xca914 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca9ab : add byte ptr [rax], al ; jne 0xca9f4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000caa84 : add byte ptr [rax], al ; jne 0xcaacc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cab7b : add byte ptr [rax], al ; jne 0xcabc4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cac64 : add byte ptr [rax], al ; jne 0xcacb4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cad12 : add byte ptr [rax], al ; jne 0xcad5c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cadc2 : add byte ptr [rax], al ; jne 0xcae0c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cae6a : add byte ptr [rax], al ; jne 0xcaeb4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000caf0a : add byte ptr [rax], al ; jne 0xcaf54 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cbbe3 : add byte ptr [rax], al ; jne 0xcbc25 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cf86b : add byte ptr [rax], al ; jne 0xcf8ad ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d37e0 : add byte ptr [rax], al ; jne 0xd382b ; add rsp, 0x18 ; ret
0x00000000000d4bbe : add byte ptr [rax], al ; jne 0xd4c07 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d50fe : add byte ptr [rax], al ; jne 0xd512c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d6920 : add byte ptr [rax], al ; jne 0xd696b ; add rsp, 0x18 ; ret
0x00000000000d7d4e : add byte ptr [rax], al ; jne 0xd7d97 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d8200 : add byte ptr [rax], al ; jne 0xd822e ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d9dfc : add byte ptr [rax], al ; jne 0xd9e0e ; add rsp, 0x18 ; jmp rax
0x00000000000d9e5c : add byte ptr [rax], al ; jne 0xd9e6e ; add rsp, 0x18 ; jmp rax
0x00000000000da27c : add byte ptr [rax], al ; jne 0xda28e ; add rsp, 0x18 ; jmp rax
0x00000000000da2dc : add byte ptr [rax], al ; jne 0xda2ee ; add rsp, 0x18 ; jmp rax
0x00000000000e4b7c : add byte ptr [rax], al ; jne 0xe4b8e ; add rsp, 0x18 ; jmp rax
0x00000000000e4bdc : add byte ptr [rax], al ; jne 0xe4bee ; add rsp, 0x18 ; jmp rax
0x00000000000e505c : add byte ptr [rax], al ; jne 0xe506e ; add rsp, 0x18 ; jmp rax
0x00000000000e50bc : add byte ptr [rax], al ; jne 0xe50ce ; add rsp, 0x18 ; jmp rax
0x00000000000ee26a : add byte ptr [rax], al ; jne 0xee27d ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee2da : add byte ptr [rax], al ; jne 0xee2ed ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee55b : add byte ptr [rax], al ; jne 0xee58a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee5eb : add byte ptr [rax], al ; jne 0xee61a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc615 : add byte ptr [rax], al ; jne 0xfc687 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fcdd1 : add byte ptr [rax], al ; jne 0xfce38 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fd3de : add byte ptr [rax], al ; jne 0xfd437 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fd4f4 : add byte ptr [rax], al ; jne 0xfd52a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ff64d : add byte ptr [rax], al ; jne 0xff6d4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ffe35 : add byte ptr [rax], al ; jne 0xffea1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001718bf : add byte ptr [rax], al ; jnp 0x1718c3 ; jmp qword ptr [rbx]
0x000000000014f40e : add byte ptr [rax], al ; jo 0x14f436 ; cmc ; call qword ptr [rdi]
0x000000000014f71e : add byte ptr [rax], al ; jo 0x14f74d ; cmc ; call rax
0x000000000015001e : add byte ptr [rax], al ; jo 0x150082 ; cmc ; call qword ptr [rdx]
0x000000000015203e : add byte ptr [rax], al ; jo 0x152031 ; cmc ; jmp qword ptr [rsi]
0x000000000015203d : add byte ptr [rax], al ; jo 0x152032 ; cmc ; jmp qword ptr [rsi]
0x00000000000bb51e : add byte ptr [rax], al ; jo 0xbb52a ; add byte ptr [rax], al ; ret
0x00000000001455ce : add byte ptr [rax], al ; jrcxz 0x1455ce ; jmp rsp
0x000000000014baa6 : add byte ptr [rax], al ; js 0x14bac4 ; hlt ; jmp qword ptr [rbx]
0x000000000014ce86 : add byte ptr [rax], al ; js 0x14cebd ; hlt ; call qword ptr [rcx]
0x000000000014d1c6 : add byte ptr [rax], al ; js 0x14d201 ; hlt ; call qword ptr [rdx]
0x000000000014e896 : add byte ptr [rax], al ; js 0x14e881 ; hlt ; jmp qword ptr [rdx]
0x0000000000150da6 : add byte ptr [rax], al ; js 0x150d36 ; cmc ; call qword ptr [rdi]
0x000000000015579a : add byte ptr [rax], al ; lahf ; add byte ptr [rax], al ; adc byte ptr [rsi - 0xa], ah ; call qword ptr [rsi]
0x00000000001557b2 : add byte ptr [rax], al ; lahf ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], ah ; call qword ptr [rbx]
0x000000000000a6a6 : add byte ptr [rax], al ; lahf ; ret 0
0x0000000000015a8e : add byte ptr [rax], al ; lahf ; retf 0
0x00000000000261b6 : add byte ptr [rax], al ; lahf ; retf 3
0x00000000001646da : add byte ptr [rax], al ; lea r8, qword ptr [rcx] ; add byte ptr [rax], dh ; pop rbx ; stc ; call rsp
0x00000000000cc9de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a781e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000cd87e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000bc05e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c8ae1] ; ret
0x00000000000b383e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2d3ef9] ; ret
0x000000000008da1e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2f7149] ; ret
0x00000000000c272e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x7abb9] ; ret
0x00000000000bbd8e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x80021] ; ret
0x00000000000bbd7e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x80029] ; ret
0x00000000000bb7ee : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x85cf9] ; ret
0x00000000000b20ce : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8b23b] ; ret
0x00000000000b20de : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8b309] ; ret
0x00000000000b213e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c4ee] ; ret
0x00000000000b212e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c8fc] ; ret
0x00000000000b211e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c90f] ; ret
0x00000000000b210e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c919] ; ret
0x00000000000b20fe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c943] ; ret
0x00000000000b20ee : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c94f] ; ret
0x00000000000b20be : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c97c] ; ret
0x00000000000b20ae : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c989] ; ret
0x00000000000b209e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x8c995] ; ret
0x00000000000a1b4e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x9c5cb] ; ret
0x000000000008ed5e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xad391] ; ret
0x000000000008e55e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xadae9] ; ret
0x000000000008e11e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xade9d] ; ret
0x000000000008dfee : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xadf4e] ; ret
0x000000000008d79e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xae611] ; ret
0x000000000008d78e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0xae619] ; ret
0x00000000000adeae : add byte ptr [rax], al ; lock add dword ptr [rdi], esi ; ret
0x000000000014fdfa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], r8b ; pop rcx ; cmc ; call qword ptr [rdx]
0x000000000015203a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jo 0x152035 ; cmc ; jmp qword ptr [rsi]
0x000000000016f2fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp al, byte ptr [rdx] ; add byte ptr [rax - 0x59], dl ; sti ; jmp qword ptr [rdx]
0x0000000000152efa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jbe 0x152f08 ; add al, al ; adc dh, dh ; call qword ptr [rdx]
0x000000000014c3fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x0000000000167bfa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000157afa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000153dfa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test dword ptr [rax], eax ; add byte ptr [rax], dh ; sub esi, esi ; call qword ptr [rdx]
0x000000000016e8fa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xor byte ptr [rdx], al ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x000000000014c3ae : add byte ptr [rax], al ; loopne 0x14c3d3 ; hlt ; call qword ptr [rbx]
0x000000000014c3fe : add byte ptr [rax], al ; loopne 0x14c423 ; hlt ; call qword ptr [rbx]
0x000000000014c44e : add byte ptr [rax], al ; loopne 0x14c473 ; hlt ; call qword ptr [rbx]
0x000000000014de3e : add byte ptr [rax], al ; loopne 0x14de94 ; hlt ; call qword ptr [rax]
0x000000000015218e : add byte ptr [rax], al ; loopne 0x152195 ; cmc ; jmp rbx
0x000000000016ee02 : add byte ptr [rax], al ; mov ah, 0x35 ; add al, byte ptr [rax] ; test al, 0x9f ; sti ; jmp qword ptr [rdx]
0x0000000000160602 : add byte ptr [rax], al ; mov ah, 0x4d ; add dword ptr [rax], eax ; je 0x16060c ; call qword ptr [rdx]
0x0000000000150e42 : add byte ptr [rax], al ; mov ah, 0x54 ; add byte ptr [rax], al ; test al, 0x8e ; cmc ; jmp qword ptr [rax]
0x0000000000152c02 : add byte ptr [rax], al ; mov ah, 0x73 ; add byte ptr [rax], al ; call 0x13152224
0x0000000000154202 : add byte ptr [rax], al ; mov ah, 0x89 ; add byte ptr [rax], al ; call 0x13153843
0x00000000001443de : add byte ptr [rax], al ; mov ah, 0x9e ; hlt ; jmp rsp
0x0000000000166b02 : add byte ptr [rax], al ; mov ah, 0xb2 ; add dword ptr [rax], eax ; test al, 0xbb ; stc ; call qword ptr [rbx]
0x0000000000157102 : add byte ptr [rax], al ; mov ah, 0xb8 ; add byte ptr [rax], al ; clc ; ret
0x000000000015da5f : add byte ptr [rax], al ; mov ah, 0xf7 ; call qword ptr [rbx]
0x000000000014baee : add byte ptr [rax], al ; mov al, 0x15 ; hlt ; jmp qword ptr [rbx]
0x000000000014bc0e : add byte ptr [rax], al ; mov al, 0x19 ; hlt ; call qword ptr [rdi]
0x000000000014f31e : add byte ptr [rax], al ; mov al, 0x1e ; cmc ; jmp qword ptr [rax]
0x000000000014c97e : add byte ptr [rax], al ; mov al, 0x23 ; hlt ; call qword ptr [rbx]
0x000000000014c94e : add byte ptr [rax], al ; mov al, 0x23 ; hlt ; call qword ptr [rcx]
0x000000000014d15e : add byte ptr [rax], al ; mov al, 0x31 ; hlt ; call qword ptr [rdi]
0x000000000014fcbe : add byte ptr [rax], al ; mov al, 0x58 ; cmc ; call qword ptr [rbx]
0x000000000014fc9e : add byte ptr [rax], al ; mov al, 0x58 ; cmc ; call qword ptr [rdx]
0x000000000014e56e : add byte ptr [rax], al ; mov al, 0xd9 ; hlt ; jmp qword ptr [rsi]
0x000000000012548a : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x000000000012539a : add byte ptr [rax], al ; mov byte ptr [rdi + 0x10], 0 ; mov qword ptr [rdi], rax ; ret
0x00000000000ddbcd : add byte ptr [rax], al ; mov byte ptr [rdi + 0x10], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000104402 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x188], 0 ; ret
0x0000000000102b80 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x6f], 0 ; ret
0x0000000000128c02 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x98], 0 ; ret
0x00000000000b21c5 : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0 ; ret
0x000000000008db6e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mfence ; ret
0x000000000014bdf6 : add byte ptr [rax], al ; mov byte ptr [rdx], bl ; hlt ; call qword ptr [rcx]
0x000000000012540f : add byte ptr [rax], al ; mov byte ptr [rsi + 0x10], 0 ; ret
0x000000000014c1e6 : add byte ptr [rax], al ; mov byte ptr [rsp + rsi*8], bl ; call qword ptr [rdx]
0x0000000000156eb2 : add byte ptr [rax], al ; mov dh, 0 ; add al, cl ; ret
0x0000000000139379 : add byte ptr [rax], al ; mov dword ptr [rax], 0 ; ret
0x00000000000d35ae : add byte ptr [rax], al ; mov dword ptr [rdi + 0x10], 0 ; ret
0x00000000000d359e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x10], 0xffffffff ; ret
0x000000000008d03e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000138fcf : add byte ptr [rax], al ; mov dword ptr [rsi + 0x10], 0 ; ret
0x00000000001642f2 : add byte ptr [rax], al ; mov dword ptr fs:[rcx], eax ; add byte ptr [rax], ch ; push rsi ; stc ; call rsp
0x00000000000a1ade : add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x00000000000a1ace : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000a1abe : add byte ptr [rax], al ; mov eax, 0x3f ; ret
0x00000000000b3eee : add byte ptr [rax], al ; mov eax, 0xfffffffe ; ret
0x0000000000100496 : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x10046a
0x00000000000fd406 : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0xfd3da
0x0000000000123c9e : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000924b6 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000a19f6 : add byte ptr [rax], al ; mov eax, 1 ; jmp 0xa19d2
0x000000000009003e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000008db5e : add byte ptr [rax], al ; mov eax, 1 ; xchg byte ptr [rdi], al ; ret
0x00000000000a1aae : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000a1a9e : add byte ptr [rax], al ; mov eax, 8 ; ret
0x00000000000d357e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; shr eax, 0x1f ; ret
0x00000000000f92ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000f92be : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; and eax, 1 ; ret
0x00000000000f921e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000008ca5e : add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; cmp dword ptr [rdi], eax ; sete al ; ret
0x000000000008e33c : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f949a : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001671b2 : add byte ptr [rax], al ; mov ecx, 0xc7e80001 ; stc ; jmp qword ptr [rdx]
0x0000000000123c2e : add byte ptr [rax], al ; mov esi, dword ptr [r14] ; mov rdi, r12 ; call rax
0x000000000012426e : add byte ptr [rax], al ; mov esi, eax ; jmp rdx
0x000000000015b46e : add byte ptr [rax], al ; mov esi, edi ; call qword ptr [rcx]
0x000000000016d60a : add byte ptr [rax], al ; mov esp, 0x1000021d ; xchg bl, bh ; call qword ptr [rdx]
0x000000000014e80a : add byte ptr [rax], al ; mov esp, 0x5000002f ; loope 0x14e810 ; jmp qword ptr [rax]
0x000000000016a00a : add byte ptr [rax], al ; mov esp, 0x600001e7 ; ret 0xfffa
0x0000000000151b0a : add byte ptr [rax], al ; mov esp, 0x62 ; retf
0x000000000016750a : add byte ptr [rax], al ; mov esp, 0x800001bc ; retf
0x000000000014bc0a : add byte ptr [rax], al ; mov esp, 0xb0000003 ; sbb esp, esi ; call qword ptr [rdi]
0x000000000014c30a : add byte ptr [rax], al ; mov esp, 0xc000000a ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014fd0a : add byte ptr [rax], al ; mov esp, 0xc0000044 ; pop rax ; cmc ; call qword ptr [rdx]
0x00000000000f9587 : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000f03d0 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rax ; ret
0x00000000000f037a : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000000f9305 : add byte ptr [rax], al ; mov qword ptr [rdi + 0xd8], rsi ; ret
0x00000000000f9eee : add byte ptr [rax], al ; mov qword ptr [rdi + 0xe8], rsi ; ret
0x000000000008fa6e : add byte ptr [rax], al ; mov qword ptr [rdi], 0 ; ret
0x00000000000d2b60 : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov qword ptr [rsi], rdx ; ret
0x00000000000b886e : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; ret
0x00000000000b3e31 : add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; ret
0x00000000000e8804 : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000d355e : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000010407b : add byte ptr [rax], al ; mov qword ptr [rsi + 0x30], rax ; ret
0x0000000000104171 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x58], rax ; ret
0x00000000000dc2da : add byte ptr [rax], al ; mov qword ptr [rsp + 0x10], r9 ; call rax
0x00000000000c90ee : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000e390e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000000000e391e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x28] ; ret
0x00000000000e3abe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d8bee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000e392e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x60] ; ret
0x00000000000ee8ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000000f92ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xd8] ; ret
0x000000000012558e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x00000000000a032e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000008ebce : add byte ptr [rax], al ; mov rax, qword ptr [rdi - 8] ; ret
0x00000000001257de : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x000000000013939e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; lea rax, qword ptr [rax + rsi*4] ; ret
0x00000000000d2a4e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x10] ; ret
0x00000000000d2a1e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x18] ; ret
0x00000000000aa3ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000000d283e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; sub rax, 0x18 ; ret
0x000000000009046e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2f47a9] ; ret
0x00000000000ddbae : add byte ptr [rax], al ; mov rax, qword ptr [rsi] ; ret
0x00000000001137c2 : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095440 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eeacd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b2368 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000124f0e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000092513 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x00000000001141ae : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call rax
0x00000000000df4d5 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x30] ; call 0x8b769
0x00000000000eb374 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x48] ; call rax
0x00000000000f9439 : add byte ptr [rax], al ; mov rdi, r12 ; call rdx
0x00000000000f98cc : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000011422d : add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x0000000000106804 : add byte ptr [rax], al ; mov rdi, r14 ; call rcx
0x0000000000114fbe : add byte ptr [rax], al ; mov rdi, r14 ; call rdx
0x00000000001145d6 : add byte ptr [rax], al ; mov rdi, r15 ; call rdx
0x00000000000ac69e : add byte ptr [rax], al ; mov rdi, rax ; call 0x89117
0x00000000000dff5c : add byte ptr [rax], al ; mov rdi, rax ; call r8
0x00000000000bc6c6 : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000f93b1 : add byte ptr [rax], al ; mov rdi, rbp ; call rdx
0x00000000000ba53e : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000123e3e : add byte ptr [rax], al ; mov rdi, rbx ; call rdx
0x00000000000bbd9e : add byte ptr [rax], al ; mov rdx, rdi ; mov eax, esi ; ret
0x0000000000123ede : add byte ptr [rax], al ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000c2b2b : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call rax
0x0000000000091216 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r12 ; call r14
0x00000000000b74ad : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, rbp ; call rax
0x0000000000160a1a : add byte ptr [rax], al ; mov word ptr [rax + 1], ss ; add byte ptr [rax - 0x7f], dh ; clc ; call rcx
0x000000000014c4da : add byte ptr [rax], al ; mov word ptr [rax + rax], cs ; add byte ptr [rax + 0x1d], al ; hlt ; call qword ptr [rdi]
0x00000000001670da : add byte ptr [rax], al ; mov word ptr [rax - 0x38afffff], dr1 ; stc ; call qword ptr [rax]
0x000000000016e8da : add byte ptr [rax], al ; mov word ptr [rax], dr0 ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x000000000015fdda : add byte ptr [rax], al ; mov word ptr [rbp + 1], es ; add byte ptr [rax], ah ; clc ; jmp qword ptr [rdx]
0x000000000016571a : add byte ptr [rax], al ; mov word ptr [rbp - 0x764fffff], ds ; stc ; jmp qword ptr [rdi]
0x000000000014d3da : add byte ptr [rax], al ; mov word ptr [rbx], ds ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; hlt ; call qword ptr [rdi]
0x000000000015fcda : add byte ptr [rax], al ; mov word ptr [rcx + rax], es ; push rax ; clc ; jmp qword ptr [rdx]
0x000000000015ffda : add byte ptr [rax], al ; mov word ptr [rdi + 1], es ; add byte ptr [rax], al ; push rax ; clc ; jmp qword ptr [rdx]
0x000000000016e7da : add byte ptr [rax], al ; mov word ptr [rdi], gs ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x0000000000171ada : add byte ptr [rax], al ; mov word ptr [rdx + 2], fs ; add byte ptr [rax], al ; jge 0x171ae8 ; call qword ptr [rcx]
0x0000000000151ada : add byte ptr [rax], al ; mov word ptr [rdx], fs ; add al, ah ; retf -0xb
0x000000000014bdda : add byte ptr [rax], al ; mov word ptr [rip + 0x1a800000], es ; hlt ; call qword ptr [rcx]
0x000000000014f71a : add byte ptr [rax], al ; mov word ptr [rip + 0x26700000], dr1 ; cmc ; call rax
0x000000000014d5da : add byte ptr [rax], al ; mov word ptr [rip + 0x35600000], ds ; hlt ; call qword ptr [rdi]
0x000000000015feda : add byte ptr [rax], al ; mov word ptr [rsi + 1], es ; add byte ptr [rax], dh ; clc ; jmp qword ptr [rdx]
0x00000000001458be : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, dh ; jmp rsp
0x000000000015f9f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [r8], eax ; js 0x15fa49 ; clc ; call rax
0x000000000014bdf2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x1a880000 ; hlt ; call qword ptr [rcx]
0x000000000015daf2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000014f3f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], ch ; cmc ; jmp qword ptr [rax]
0x0000000000144ad6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jae 0x144ad5 ; jmp rsp
0x00000000001664f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; call 0x14165ebe
0x000000000014556e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; loopne 0x14556e ; jmp rsp
0x00000000001670f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov eax, 0xc7480001 ; stc ; call qword ptr [rax]
0x00000000001555f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add byte ptr [rax], al ; sub byte ptr [rdx - 0xa], ah ; call qword ptr [rdx]
0x00000000001447c6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001683f2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001448be : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -0xc
0x000000000014493e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sal ah, cl ; jmp rsp
0x0000000000145006 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dh, dh ; jmp rsp
0x0000000000166232 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, 1 ; add al, cl ; mov dl, 0xf9 ; jmp qword ptr [rdi]
0x00000000000fd7fe : add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; ret
0x0000000000123b0e : add byte ptr [rax], al ; movzx esi, byte ptr [r14] ; mov rdi, rbp ; call rax
0x000000000012443d : add byte ptr [rax], al ; nop ; add qword ptr [rdi + 0x28], rsi ; ret
0x0000000000157f3e : add byte ptr [rax], al ; nop ; div dh ; call qword ptr [rbx]
0x00000000000f38cd : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000f3fcd : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000b643d : add byte ptr [rax], al ; nop ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000124d9d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x0000000000124d5c : add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000001274bc : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rsi ; ret
0x000000000012433d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000012434d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000012438d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000012439d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000000a541c : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000008fafd : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi] ; ret
0x00000000000d2bac : add byte ptr [rax], al ; nop ; mov rax, rdi ; ret
0x000000000008ebdd : add byte ptr [rax], al ; nop ; push rbx ; mov rbx, rdi ; call 0x8aed9
0x000000000006d56e : add byte ptr [rax], al ; nop ; ret
0x0000000000070066 : add byte ptr [rax], al ; nop ; ret 0x37
0x0000000000072cd6 : add byte ptr [rax], al ; nop ; retf
0x000000000008ed19 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000011301b : add byte ptr [rax], al ; nop dword ptr [rax] ; jmp rsi
0x00000000000f3beb : add byte ptr [rax], al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000b717a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, esi ; ret
0x00000000000d2aaa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000012381a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000008f9fa : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000090d6a : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000014d15a : add byte ptr [rax], al ; or al, 0x19 ; add byte ptr [rax], al ; mov al, 0x31 ; hlt ; call qword ptr [rdi]
0x000000000016e85a : add byte ptr [rax], al ; or al, 0x30 ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x000000000017175a : add byte ptr [rax], al ; or al, 0x5f ; add al, byte ptr [rax] ; jp 0x171768 ; call qword ptr [rdx]
0x000000000017185a : add byte ptr [rax], al ; or al, 0x60 ; add al, byte ptr [rax] ; adc byte ptr [rbx - 4], bh ; call qword ptr [rdx]
0x000000000016405a : add byte ptr [rax], al ; or al, 0x88 ; add dword ptr [rax], eax ; adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x000000000016735a : add byte ptr [rax], al ; or al, 0xbb ; add dword ptr [rax], eax ; retf -7
0x000000000015839a : add byte ptr [rax], al ; or al, 0xca ; add byte ptr [rax], al ; sar ah, 0xf6 ; call rdi
0x0000000000152a6f : add byte ptr [rax], al ; or al, 0xf6 ; call qword ptr [rbx]
0x000000000014f486 : add byte ptr [rax], al ; or byte ptr [rax], ah ; cmc ; call qword ptr [rdi]
0x000000000014d0a6 : add byte ptr [rax], al ; or byte ptr [rax], dh ; hlt ; call qword ptr [rdi]
0x00000000000d3244 : add byte ptr [rax], al ; or byte ptr [rdi], 0x4d ; ret
0x0000000000158956 : add byte ptr [rax], al ; or rdi, rsi ; call qword ptr [rax]
0x000000000000b306 : add byte ptr [rax], al ; out dx, al ; ret 1
0x000000000001cbb6 : add byte ptr [rax], al ; out dx, eax ; ret 0
0x0000000000015d2e : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf 0
0x000000000001fa36 : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf 1
0x0000000000158576 : add byte ptr [rax], al ; pop rax ; add edi, esi ; jmp rdi
0x0000000000152b36 : add byte ptr [rax], al ; pop rax ; cdq ; jmp qword ptr [rax]
0x000000000014d736 : add byte ptr [rax], al ; pop rax ; hlt ; call qword ptr [rdi]
0x000000000014e8e6 : add byte ptr [rax], al ; pop rax ; jrcxz 0x14e8e4 ; jmp qword ptr [rax]
0x00000000000720ee : add byte ptr [rax], al ; pop rax ; ret
0x0000000000070186 : add byte ptr [rax], al ; pop rax ; retf
0x0000000000070126 : add byte ptr [rax], al ; pop rax ; retf 0x37
0x000000000014bd96 : add byte ptr [rax], al ; pop rax ; sbb dh, ah ; jmp qword ptr [rax]
0x000000000009aa3f : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b5798 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008c99e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000008dc76 : add byte ptr [rax], al ; pop rbx ; jmp rdx
0x00000000000b7463 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009c101 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090bd0 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000008dc6e : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b57ae : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014fdfe : add byte ptr [rax], al ; pop rcx ; cmc ; call qword ptr [rdx]
0x00000000001518d2 : add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x0000000000021896 : add byte ptr [rax], al ; pop rdi ; retf
0x000000000015032f : add byte ptr [rax], al ; pop rsi ; cmc ; call qword ptr [rax]
0x000000000014fdaa : add byte ptr [rax], al ; pop rsp ; add byte ptr [r8], r8b ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014f3aa : add byte ptr [rax], al ; pop rsp ; cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], dl ; cmc ; call qword ptr [rdi]
0x00000000001693aa : add byte ptr [rax], al ; pop rsp ; fild dword ptr [rcx] ; add byte ptr [rax - 0x5f], dh ; cli ; call qword ptr [rbx]
0x00000000001677aa : add byte ptr [rax], al ; pop rsp ; mov edi, 0xcf500001 ; stc ; call qword ptr [rdx]
0x000000000014c3aa : add byte ptr [rax], al ; pop rsp ; or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000016a0ea : add byte ptr [rax], al ; pop rsp ; out 1, eax ; add al, dl ; ret 0xfffa
0x0000000000157bea : add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001683aa : add byte ptr [rax], al ; pop rsp ; retf
0x00000000001682aa : add byte ptr [rax], al ; pop rsp ; retf 1
0x000000000014d4aa : add byte ptr [rax], al ; pop rsp ; sbb al, 0 ; add al, dl ; xor al, 0xf4 ; call qword ptr [rdi]
0x000000000014d3aa : add byte ptr [rax], al ; pop rsp ; sbb eax, dword ptr [rax] ; add al, dh ; xor dh, ah ; call qword ptr [rcx]
0x00000000001661ea : add byte ptr [rax], al ; pop rsp ; test al, 1 ; add al, dl ; mov cl, 0xf9 ; jmp qword ptr [rdi]
0x000000000016559a : add byte ptr [rax], al ; popfq ; add dword ptr [rax], eax ; nop ; test edi, ecx ; call qword ptr [rbx]
0x0000000000174c33 : add byte ptr [rax], al ; popfq ; add dword ptr [rbx + 0x2b201], eax ; retf 0x502
0x0000000000018d2e : add byte ptr [rax], al ; popfq ; ret
0x000000000015ffdf : add byte ptr [rax], al ; push rax ; clc ; jmp qword ptr [rdx]
0x000000000014e80e : add byte ptr [rax], al ; push rax ; loope 0x14e80c ; jmp qword ptr [rax]
0x000000000015144e : add byte ptr [rax], al ; push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rsi
0x000000000007598e : add byte ptr [rax], al ; push rax ; ret
0x000000000007004e : add byte ptr [rax], al ; push rax ; ret 0x37
0x0000000000072196 : add byte ptr [rax], al ; push rax ; retf
0x000000000007010e : add byte ptr [rax], al ; push rax ; retf 0x37
0x000000000014bd7e : add byte ptr [rax], al ; push rax ; sbb dh, ah ; call qword ptr [rbx]
0x000000000015409e : add byte ptr [rax], al ; push rax ; sub al, 0xf6 ; call qword ptr [rdx]
0x0000000000123b5e : add byte ptr [rax], al ; push rbx ; mov rbx, rdi ; call rax
0x000000000000ee5e : add byte ptr [rax], al ; push rbx ; ret 1
0x000000000001c0d6 : add byte ptr [rax], al ; push rcx ; retf 0
0x000000000014baa2 : add byte ptr [rax], al ; push rsp ; add al, byte ptr [rax] ; add byte ptr [rax + 0x15], bh ; hlt ; jmp qword ptr [rbx]
0x00000000001700a2 : add byte ptr [rax], al ; push rsp ; add al, byte ptr [rax] ; pop rax ; retf -5
0x000000000015856e : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add ah, ah ; retf
0x000000000015f6a2 : add byte ptr [rax], al ; push rsp ; add dword ptr ds:[rax], eax ; call 0x1415eef9
0x00000000001729a2 : add byte ptr [rax], al ; push rsp ; jno 0x1729b2 ; add byte ptr [rax - 0x71], bl ; cld ; call qword ptr [rdi]
0x0000000000166de2 : add byte ptr [rax], al ; push rsp ; mov ah, 1 ; add byte ptr [rax], ch ; ret 0xfff9
0x0000000000144b86 : add byte ptr [rax], al ; push rsp ; mov dh, ch ; call rsp
0x000000000014c2a2 : add byte ptr [rax], al ; push rsp ; or al, byte ptr [rax] ; add al, cl ; sbb al, 0xf4 ; call qword ptr [rdi]
0x00000000001714a2 : add byte ptr [rax], al ; push rsp ; pop rsp ; add al, byte ptr [rax] ; js 0x17152a ; cld ; jmp rax
0x000000000001f71e : add byte ptr [rax], al ; push rsp ; ret 0
0x000000000014479e : add byte ptr [rax], al ; push rsp ; ret 0xfff4
0x00000000001582a2 : add byte ptr [rax], al ; push rsp ; retf 0
0x00000000001588a2 : add byte ptr [rax], al ; push rsp ; rol byte ptr [rax], 1 ; add byte ptr [rsi + 0x39], dh ; jmp qword ptr [rdi]
0x000000000014d0a2 : add byte ptr [rax], al ; push rsp ; sbb byte ptr [rax], al ; add byte ptr [rax], cl ; xor ah, dh ; call qword ptr [rdi]
0x000000000015e4e2 : add byte ptr [rax], al ; push rsp ; sub eax, dword ptr [rcx] ; add al, ch ; retf -9
0x0000000000153ea2 : add byte ptr [rax], al ; push rsp ; xchg byte ptr [rax], al ; add al, bh ; sub esi, esi ; call qword ptr [rdx]
0x0000000000163fa2 : add byte ptr [rax], al ; push rsp ; xchg dword ptr [rcx], eax ; add byte ptr [rax], bl ; push rdx ; stc ; jmp qword ptr [rax]
0x000000000016eba2 : add byte ptr [rax], al ; push rsp ; xor eax, dword ptr [rdx] ; add byte ptr [rax - 0x66], bh ; sti ; call qword ptr [rdx]
0x000000000015f6ea : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; loopne 0x15f73e ; clc ; call qword ptr [rbx]
0x000000000015f52a : add byte ptr [rax], al ; pushfq ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; clc ; call rdi
0x00000000001550ea : add byte ptr [rax], al ; pushfq ; cwde ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000001554ea : add byte ptr [rax], al ; pushfq ; pushfq ; add byte ptr [rax], al ; shl byte ptr [rax - 0xa], 1 ; jmp rsp
0x0000000000157c2a : add byte ptr [rax], al ; pushfq ; ret 0
0x00000000000253be : add byte ptr [rax], al ; pushfq ; ret 2
0x000000000016d3ea : add byte ptr [rax], al ; pushfq ; sbb eax, dword ptr [rdx] ; add byte ptr [rax], dl ; test bh, bl ; jmp qword ptr [rdx]
0x000000000016edea : add byte ptr [rax], al ; pushfq ; xor eax, 0x9f900002 ; sti ; jmp qword ptr [rdx]
0x0000000000003092 : add byte ptr [rax], al ; rcl byte ptr [rax + rax], 0 ; ret 0x14
0x0000000000152f1e : add byte ptr [rax], al ; rcl byte ptr [rax], 0xf6 ; call qword ptr [rbx]
0x0000000000152efe : add byte ptr [rax], al ; rcl byte ptr [rax], 0xf6 ; call qword ptr [rdx]
0x000000000014e73e : add byte ptr [rax], al ; rcr bh, 0xf4 ; jmp qword ptr [rdx]
0x000000000000156e : add byte ptr [rax], al ; ret
0x0000000000011eb6 : add byte ptr [rax], al ; ret 0
0x0000000000083b2a : add byte ptr [rax], al ; ret 0x10
0x000000000007f17a : add byte ptr [rax], al ; ret 0x11
0x0000000000026aef : add byte ptr [rax], al ; ret 0x13
0x000000000006d766 : add byte ptr [rax], al ; ret 0x13d2
0x000000000006de56 : add byte ptr [rax], al ; ret 0x13d3
0x000000000006e61e : add byte ptr [rax], al ; ret 0x13d4
0x0000000000003096 : add byte ptr [rax], al ; ret 0x14
0x000000000001c0ee : add byte ptr [rax], al ; ret 0x166
0x000000000001da0e : add byte ptr [rax], al ; ret 0x1e9
0x00000000000247be : add byte ptr [rax], al ; ret 0x1fc
0x00000000000198ce : add byte ptr [rax], al ; ret 0x290
0x000000000000daae : add byte ptr [rax], al ; ret 0x2ba
0x0000000000016826 : add byte ptr [rax], al ; ret 0x302
0x000000000001b6e6 : add byte ptr [rax], al ; ret 0x316
0x000000000000a47e : add byte ptr [rax], al ; ret 0x32f
0x000000000002505e : add byte ptr [rax], al ; ret 0x355
0x000000000007001f : add byte ptr [rax], al ; ret 0x37
0x00000000000201e6 : add byte ptr [rax], al ; ret 0x381
0x0000000000010196 : add byte ptr [rax], al ; ret 0x38b
0x0000000000027446 : add byte ptr [rax], al ; ret 0x3af
0x0000000000012536 : add byte ptr [rax], al ; ret 0x4a
0x0000000000177a03 : add byte ptr [rax], al ; ret 0x650a
0x0000000000002606 : add byte ptr [rax], al ; ret 0xd
0x0000000000024e66 : add byte ptr [rax], al ; ret 0xdb
0x0000000000008936 : add byte ptr [rax], al ; ret 0xdc
0x000000000000ef96 : add byte ptr [rax], al ; ret 0xf8
0x0000000000009b1e : add byte ptr [rax], al ; ret 0xfa
0x00000000000013ce : add byte ptr [rax], al ; ret 1
0x0000000000020996 : add byte ptr [rax], al ; ret 2
0x00000000000019f6 : add byte ptr [rax], al ; ret 5
0x000000000007812a : add byte ptr [rax], al ; ret 6
0x0000000000001cfe : add byte ptr [rax], al ; ret 7
0x0000000000001e72 : add byte ptr [rax], al ; ret 8
0x00000000000013de : add byte ptr [rax], al ; retf
0x00000000001448a6 : add byte ptr [rax], al ; retf -0xc
0x000000000000bdc6 : add byte ptr [rax], al ; retf 0
0x00000000000756b2 : add byte ptr [rax], al ; retf 0x10
0x0000000000074caa : add byte ptr [rax], al ; retf 0x13
0x000000000002502e : add byte ptr [rax], al ; retf 0x13c
0x000000000001ef9e : add byte ptr [rax], al ; retf 0x143
0x0000000000015bde : add byte ptr [rax], al ; retf 0x153
0x0000000000019c76 : add byte ptr [rax], al ; retf 0x165
0x0000000000016d7e : add byte ptr [rax], al ; retf 0x198
0x000000000001479e : add byte ptr [rax], al ; retf 0x1e3
0x000000000001f856 : add byte ptr [rax], al ; retf 0x215
0x0000000000026ae6 : add byte ptr [rax], al ; retf 0x23
0x0000000000016346 : add byte ptr [rax], al ; retf 0x261
0x000000000001b78e : add byte ptr [rax], al ; retf 0x27
0x0000000000014d56 : add byte ptr [rax], al ; retf 0x273
0x0000000000018596 : add byte ptr [rax], al ; retf 0x2c7
0x000000000017666f : add byte ptr [rax], al ; retf 0x301
0x0000000000028886 : add byte ptr [rax], al ; retf 0x36a
0x0000000000015e0f : add byte ptr [rax], al ; retf 0x37
0x0000000000013bfe : add byte ptr [rax], al ; retf 0x371
0x000000000001e3b6 : add byte ptr [rax], al ; retf 0x38f
0x000000000001e9fe : add byte ptr [rax], al ; retf 0x3b1
0x000000000002277e : add byte ptr [rax], al ; retf 0x3cf
0x000000000017853e : add byte ptr [rax], al ; retf 0x502
0x000000000017387a : add byte ptr [rax], al ; retf 0x507
0x000000000002568e : add byte ptr [rax], al ; retf 0x5b
0x00000000000140de : add byte ptr [rax], al ; retf 0x77
0x0000000000027a8e : add byte ptr [rax], al ; retf 0x7b
0x000000000007f2b2 : add byte ptr [rax], al ; retf 0xa
0x00000000000275de : add byte ptr [rax], al ; retf 0xa3
0x000000000002796e : add byte ptr [rax], al ; retf 0xa8
0x0000000000002346 : add byte ptr [rax], al ; retf 0xb
0x0000000000002496 : add byte ptr [rax], al ; retf 0xc
0x0000000000017e5e : add byte ptr [rax], al ; retf 0xce
0x0000000000002612 : add byte ptr [rax], al ; retf 0xd
0x00000000000853d2 : add byte ptr [rax], al ; retf 0xe
0x0000000000076be2 : add byte ptr [rax], al ; retf 0xf
0x00000000000013da : add byte ptr [rax], al ; retf 1
0x0000000000001576 : add byte ptr [rax], al ; retf 2
0x000000000008364a : add byte ptr [rax], al ; retf 4
0x00000000000793a2 : add byte ptr [rax], al ; retf 6
0x0000000000074b5a : add byte ptr [rax], al ; retf 7
0x000000000006d50e : add byte ptr [rax], al ; retf 8
0x0000000000001fee : add byte ptr [rax], al ; retf 9
0x00000000001657f2 : add byte ptr [rax], al ; sahf ; add dword ptr [rax], eax ; cwde ; mov ecx, dr1 ; jmp qword ptr [rdi]
0x000000000014d4ae : add byte ptr [rax], al ; sal byte ptr [rsp + rsi*8], 1 ; call qword ptr [rdi]
0x000000000015213e : add byte ptr [rax], al ; sal ch, 0xf5 ; jmp qword ptr [rsi]
0x0000000000158e92 : add byte ptr [rax], al ; salc ; add byte ptr [rax], al ; cmp byte ptr [rdi + rsi*8], ah ; jmp qword ptr [rbx]
0x000000000015839e : add byte ptr [rax], al ; sar ah, 0xf6 ; call rdi
0x000000000014da3e : add byte ptr [rax], al ; sar byte ptr [rdx], 1 ; hlt ; call qword ptr [rdi]
0x000000000014d492 : add byte ptr [rax], al ; sbb al, 0 ; add al, cl ; xor al, 0xf4 ; call qword ptr [rbx]
0x0000000000167b3e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret 1
0x0000000000167bb6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000167bf6 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000014d06a : add byte ptr [rax], al ; sbb al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rdi]
0x000000000016e26a : add byte ptr [rax], al ; sbb al, 0x2a ; add al, byte ptr [rax] ; xchg eax, esp ; sti ; call qword ptr [rdi]
0x000000000014e56a : add byte ptr [rax], al ; sbb al, 0x2d ; add byte ptr [rax], al ; mov al, 0xd9 ; hlt ; jmp qword ptr [rsi]
0x000000000014f46a : add byte ptr [rax], al ; sbb al, 0x3c ; add byte ptr [rax], al ; add byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x000000000017076a : add byte ptr [rax], al ; sbb al, 0x4f ; add al, byte ptr [rax] ; adc dl, bh ; sti ; call qword ptr [rcx]
0x0000000000152a6a : add byte ptr [rax], al ; sbb al, 0x72 ; add byte ptr [rax], al ; add byte ptr [rsi + rsi*8], cl ; call qword ptr [rbx]
0x000000000016606a : add byte ptr [rax], al ; sbb al, 0xa8 ; add dword ptr [rax], eax ; mov al, 0xad ; stc ; call qword ptr [rbx]
0x000000000015b46a : add byte ptr [rax], al ; sbb al, 0xfc ; add byte ptr [rax], al ; mov esi, edi ; call qword ptr [rcx]
0x000000000014bc6a : add byte ptr [rax], al ; sbb al, 4 ; add byte ptr [rax], al ; sbb sil, spl ; jmp qword ptr [rax]
0x000000000014bdde : add byte ptr [rax], al ; sbb byte ptr [rdx], 0xf4 ; call qword ptr [rcx]
0x000000000014b966 : add byte ptr [rax], al ; sbb byte ptr [rdx], dl ; hlt ; jmp qword ptr [rdi]
0x00000000001557b6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], ah ; call qword ptr [rbx]
0x000000000014c13e : add byte ptr [rax], al ; sbb esi, esp ; call qword ptr [rdx]
0x000000000014bc86 : add byte ptr [rax], al ; sbb sil, spl ; call qword ptr [rdi]
0x000000000014bc6e : add byte ptr [rax], al ; sbb sil, spl ; jmp qword ptr [rax]
0x0000000000016c46 : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; retf 0
0x00000000001554ee : add byte ptr [rax], al ; shl byte ptr [rax - 0xa], 1 ; jmp rsp
0x00000000001559ee : add byte ptr [rax], al ; shl byte ptr [rdi - 0xa], 1 ; jmp rsp
0x0000000000153f4e : add byte ptr [rax], al ; shr byte ptr [rdx], 0xf6 ; call qword ptr [rdx]
0x00000000000929a8 : add byte ptr [rax], al ; shr rax, cl ; and eax, 1 ; ret
0x0000000000008dce : add byte ptr [rax], al ; stc ; retf 0
0x0000000000168436 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000001683ee : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001683a6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x000000000014c97a : add byte ptr [rax], al ; sub al, 0x11 ; add byte ptr [rax], al ; mov al, 0x23 ; hlt ; call qword ptr [rbx]
0x000000000016e37a : add byte ptr [rax], al ; sub al, 0x2b ; add al, byte ptr [rax] ; nop ; xchg eax, ebp ; sti ; call qword ptr [rdi]
0x000000000016e87a : add byte ptr [rax], al ; sub al, 0x30 ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x000000000014b97a : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; xor byte ptr [rdx], dl ; hlt ; jmp qword ptr [rax]
0x000000000016e49a : add byte ptr [rax], al ; sub al, 2 ; add byte ptr [rax], al ; xchg eax, edi ; sti ; call qword ptr [rdi]
0x000000000014bd7a : add byte ptr [rax], al ; sub al, 5 ; add byte ptr [rax], al ; push rax ; sbb dh, ah ; call qword ptr [rbx]
0x000000000014f4e6 : add byte ptr [rax], al ; sub byte ptr [rax], ah ; cmc ; call qword ptr [rdi]
0x000000000014fd76 : add byte ptr [rax], al ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fd56 : add byte ptr [rax], al ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x00000000001555f6 : add byte ptr [rax], al ; sub byte ptr [rdx - 0xa], ah ; call qword ptr [rdx]
0x000000000009b430 : add byte ptr [rax], al ; sub dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000912de : add byte ptr [rax], al ; sub rbp, r13 ; mov rdi, rbp ; call r12
0x000000000008fbce : add byte ptr [rax], al ; sub rsp, 8 ; call 0x8bdf8
0x000000000008fcbe : add byte ptr [rax], al ; sub rsp, 8 ; call rdi
0x0000000000169fd2 : add byte ptr [rax], al ; test ah, bh ; add dword ptr [rax], eax ; ret 0xfffa
0x000000000014bbf6 : add byte ptr [rax], al ; test al, 0x19 ; hlt ; jmp qword ptr [rax]
0x000000000014c9c6 : add byte ptr [rax], al ; test al, 0x23 ; hlt ; call qword ptr [rdi]
0x000000000014c936 : add byte ptr [rax], al ; test al, 0x23 ; hlt ; call qword ptr [rsi]
0x000000000014d146 : add byte ptr [rax], al ; test al, 0x31 ; hlt ; call qword ptr [rbx]
0x000000000014d636 : add byte ptr [rax], al ; test al, 0x35 ; hlt ; jmp qword ptr [rbx]
0x000000000014fc86 : add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rbx]
0x000000000014fc66 : add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rdx]
0x0000000000150e46 : add byte ptr [rax], al ; test al, 0x8e ; cmc ; jmp qword ptr [rax]
0x000000000016609a : add byte ptr [rax], al ; test al, 1 ; add al, ah ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x00000000001660b2 : add byte ptr [rax], al ; test al, 1 ; add al, ch ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x00000000001696d2 : add byte ptr [rax], al ; test bl, dh ; add dword ptr [rax], eax ; call 0x1416918d
0x00000000001718d2 : add byte ptr [rax], al ; test byte ptr [rax + 2], ah ; add byte ptr [rax], bl ; jnp 0x1718e0 ; jmp qword ptr [rbx]
0x0000000000166cd2 : add byte ptr [rax], al ; test byte ptr [rcx + rax - 0x63fa800], dh ; jmp qword ptr [rdx]
0x00000000000f920e : add byte ptr [rax], al ; test byte ptr [rdi + 0x20], 5 ; setne al ; ret
0x00000000001717d2 : add byte ptr [rax], al ; test byte ptr [rdi + 2], bl ; add byte ptr [rax], ch ; jp 0x1717e0 ; call qword ptr [rsi]
0x00000000001667d2 : add byte ptr [rax], al ; test byte ptr [rdi - 0x46a7ffff], ch ; stc ; jmp qword ptr [rax]
0x0000000000166112 : add byte ptr [rax], al ; test byte ptr [rdi - 0x5117ffff], ah ; stc ; jmp qword ptr [rdi]
0x00000000001666d2 : add byte ptr [rax], al ; test byte ptr [rsi - 0x46a7ffff], ch ; stc ; jmp qword ptr [rax]
0x000000000015db12 : add byte ptr [rax], al ; vpshufb xmm9, xmm15, xmmword ptr [rax] ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x00000000001588be : add byte ptr [rax], al ; xchg byte ptr [rcx], bh ; jmp qword ptr [rdi]
0x000000000008db63 : add byte ptr [rax], al ; xchg byte ptr [rdi], al ; ret
0x0000000000172ae0 : add byte ptr [rax], al ; xchg dword ptr [rdx + rbp], eax ; retf
0x000000000016e49f : add byte ptr [rax], al ; xchg eax, edi ; sti ; call qword ptr [rdi]
0x000000000006fc86 : add byte ptr [rax], al ; xchg eax, edx ; ret 0x13
0x000000000006fc6e : add byte ptr [rax], al ; xchg eax, esi ; ret 0x13
0x000000000000a5fe : add byte ptr [rax], al ; xchg eax, esi ; retf 1
0x000000000014cde2 : add byte ptr [rax], al ; xchg eax, esp ; adc eax, 0x2de80000 ; hlt ; call qword ptr [rcx]
0x000000000014bce2 : add byte ptr [rax], al ; xchg eax, esp ; add al, 0 ; add byte ptr [rax + 0x1a], ch ; hlt ; call qword ptr [rdi]
0x000000000014fde2 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [r8], r8b ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x0000000000163b22 : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rcx], 0xf9472800 ; jmp rdi
0x000000000014f4e2 : add byte ptr [rax], al ; xchg eax, esp ; cmp al, 0 ; add byte ptr [rax], ch ; and ch, dh ; call qword ptr [rdi]
0x000000000016f2e2 : add byte ptr [rax], al ; xchg eax, esp ; cmp al, byte ptr [rdx] ; add byte ptr [rax], bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x00000000001442fe : add byte ptr [rax], al ; xchg eax, esp ; cwde ; hlt ; jmp rsp
0x000000000014524e : add byte ptr [rax], al ; xchg eax, esp ; idiv r15b ; xchg eax, esp ; retf
0x0000000000162e22 : add byte ptr [rax], al ; xchg eax, esp ; je 0x162e31 ; add byte ptr [rax + 0x26], ch ; stc ; call rdi
0x00000000001445a6 : add byte ptr [rax], al ; xchg eax, esp ; lodsb al, byte ptr [rsi] ; hlt ; call rsp
0x00000000001444de : add byte ptr [rax], al ; xchg eax, esp ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp rsp
0x00000000001716e2 : add byte ptr [rax], al ; xchg eax, esp ; pop rsi ; add al, byte ptr [rax] ; pop rax ; jp 0x1716f0 ; call qword ptr [rdx]
0x0000000000157ae2 : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000165b5f : add byte ptr [rax], al ; xchg eax, esp ; stc ; call qword ptr [rdx]
0x000000000014e8e2 : add byte ptr [rax], al ; xchg eax, esp ; xor byte ptr [rax], al ; add byte ptr [rax - 0x1d], bl ; hlt ; jmp qword ptr [rax]
0x00000000000089f6 : add byte ptr [rax], al ; xlatb ; retf 0
0x000000000014d08f : add byte ptr [rax], al ; xor ah, dh ; call qword ptr [rbx]
0x000000000014d01f : add byte ptr [rax], al ; xor ah, dh ; call qword ptr [rdi]
0x0000000000157b3e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x0000000000157c26 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 0
0x000000000014ce82 : add byte ptr [rax], al ; xor al, 0x16 ; add byte ptr [rax], al ; js 0x14cec1 ; hlt ; call qword ptr [rcx]
0x000000000014f482 : add byte ptr [rax], al ; xor al, 0x3c ; add byte ptr [rax], al ; or byte ptr [rax], ah ; cmc ; call qword ptr [rdi]
0x000000000014fc82 : add byte ptr [rax], al ; xor al, 0x44 ; add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rbx]
0x00000000001609c2 : add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; call 0xffffffffd2160256
0x0000000000171582 : add byte ptr [rax], al ; xor al, 0x5d ; add al, byte ptr [rax] ; mov byte ptr [rcx - 4], bh ; call qword ptr [rdi]
0x00000000001442ae : add byte ptr [rax], al ; xor al, 0x97 ; hlt ; call rsp
0x0000000000167582 : add byte ptr [rax], al ; xor al, 0xbd ; add dword ptr [rax], eax ; test al, 0xce ; stc ; jmp qword ptr [rbx]
0x0000000000168482 : add byte ptr [rax], al ; xor al, 0xcc ; add dword ptr [rax], eax ; call 0x23167e9f
0x000000000016a282 : add byte ptr [rax], al ; xor al, 0xea ; add dword ptr [rax], eax ; or cl, cl ; cli ; jmp qword ptr [rdi]
0x000000000014bc82 : add byte ptr [rax], al ; xor al, 4 ; add byte ptr [rax], al ; sbb sil, spl ; call qword ptr [rdi]
0x000000000014e892 : add byte ptr [rax], al ; xor byte ptr [rax], r8b ; add byte ptr [rax - 0x1e], bh ; hlt ; jmp qword ptr [rdx]
0x000000000014fdae : add byte ptr [rax], al ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fd8e : add byte ptr [rax], al ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x00000000001550ee : add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000001550ce : add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rdx]
0x000000000015a41e : add byte ptr [rax], al ; xor byte ptr [rdx - 9], bh ; call qword ptr [rax]
0x000000000014b97e : add byte ptr [rax], al ; xor byte ptr [rdx], dl ; hlt ; jmp qword ptr [rax]
0x000000000016e89a : add byte ptr [rax], al ; xor byte ptr [rdx], r8b ; add byte ptr [rax - 0x68], dl ; sti ; call qword ptr [rdx]
0x0000000000154e4e : add byte ptr [rax], al ; xor byte ptr [rsi - 0xa], cl ; call qword ptr [rbx]
0x0000000000092a7e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000953de : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000008c482 : add byte ptr [rax], al ; xor eax, eax ; rep stosd dword ptr [rdi], eax ; ret
0x0000000000092816 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000092a28 : add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000009251e : add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x000000000014d3df : add byte ptr [rax], al ; xor esi, esp ; call qword ptr [rdi]
0x0000000000158e97 : add byte ptr [rax], bh ; and al, 0xf7 ; jmp qword ptr [rbx]
0x000000000006ef7f : add byte ptr [rax], bh ; call qword ptr [rbx]
0x000000000015fcc7 : add byte ptr [rax], bh ; clc ; jmp qword ptr [rdx]
0x000000000016f2e7 : add byte ptr [rax], bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x000000000016e777 : add byte ptr [rax], bh ; cwde ; sti ; call qword ptr [rbx]
0x000000000014fde7 : add byte ptr [rax], bh ; pop rcx ; cmc ; call qword ptr [rbx]
0x000000000014fdc7 : add byte ptr [rax], bh ; pop rcx ; cmc ; call qword ptr [rdx]
0x000000000006fb97 : add byte ptr [rax], bh ; ret
0x000000000007880f : add byte ptr [rax], bh ; ret 0x37
0x0000000000079e8f : add byte ptr [rax], bh ; retf
0x00000000001673d7 : add byte ptr [rax], bh ; retf -7
0x0000000000079acf : add byte ptr [rax], bh ; retf 0x37
0x000000000000a11f : add byte ptr [rax], bh ; retf 1
0x000000000016d657 : add byte ptr [rax], bh ; xchg bl, bh ; call qword ptr [rdx]
0x000000000014b967 : add byte ptr [rax], bl ; adc dh, ah ; jmp qword ptr [rdi]
0x00000000001523f7 : add byte ptr [rax], bl ; add esi, esi ; jmp qword ptr [rdx]
0x000000000015f797 : add byte ptr [rax], bl ; clc ; jmp qword ptr [rax]
0x000000000015fec7 : add byte ptr [rax], bl ; clc ; jmp qword ptr [rdx]
0x000000000016e717 : add byte ptr [rax], bl ; cwde ; sti ; call qword ptr [rbx]
0x00000000001718d7 : add byte ptr [rax], bl ; jnp 0x1718db ; jmp qword ptr [rbx]
0x00000000001515b7 : add byte ptr [rax], bl ; mov dl, 0xf5 ; call rcx
0x0000000000163fa7 : add byte ptr [rax], bl ; push rdx ; stc ; jmp qword ptr [rax]
0x0000000000078977 : add byte ptr [rax], bl ; ret
0x000000000007016f : add byte ptr [rax], bl ; retf
0x00000000000238f7 : add byte ptr [rax], bl ; retf 0x37
0x0000000000168a67 : add byte ptr [rax], bl ; xor bh, dl ; call rax
0x000000000014f4e7 : add byte ptr [rax], ch ; and ch, dh ; call qword ptr [rdi]
0x000000000016e747 : add byte ptr [rax], ch ; cwde ; sti ; call qword ptr [rbx]
0x0000000000171b27 : add byte ptr [rax], ch ; jge 0x171b2b ; call qword ptr [rcx]
0x00000000001717d7 : add byte ptr [rax], ch ; jp 0x1717db ; call qword ptr [rsi]
0x000000000014fd77 : add byte ptr [rax], ch ; pop rcx ; cmc ; call qword ptr [rbx]
0x000000000014fd57 : add byte ptr [rax], ch ; pop rcx ; cmc ; call qword ptr [rdx]
0x00000000001642f7 : add byte ptr [rax], ch ; push rsi ; stc ; call rsp
0x0000000000011fb7 : add byte ptr [rax], ch ; ret
0x0000000000166de7 : add byte ptr [rax], ch ; ret 0xfff9
0x0000000000023c3f : add byte ptr [rax], ch ; retf
0x0000000000170087 : add byte ptr [rax], ch ; retf -5
0x0000000000070107 : add byte ptr [rax], ch ; retf 0x37
0x0000000000163b27 : add byte ptr [rax], ch ; stc ; jmp rdi
0x0000000000159037 : add byte ptr [rax], ch ; sub bh, dh ; call qword ptr [rdx]
0x000000000016d407 : add byte ptr [rax], ch ; test bh, bl ; jmp qword ptr [rdx]
0x000000000017185b : add byte ptr [rax], cl ; add al, byte ptr [rax] ; adc byte ptr [rbx - 4], bh ; call qword ptr [rdx]
0x0000000000017137 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009e5f : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000014f487 : add byte ptr [rax], cl ; and ch, dh ; call qword ptr [rdi]
0x000000000015f767 : add byte ptr [rax], cl ; clc ; call qword ptr [rbx]
0x000000000015fa37 : add byte ptr [rax], cl ; clc ; call rax
0x000000000016e6e7 : add byte ptr [rax], cl ; cwde ; sti ; call qword ptr [rbx]
0x000000000016a287 : add byte ptr [rax], cl ; leave ; cli ; jmp qword ptr [rdi]
0x000000000015da77 : add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000015d667 : add byte ptr [rax], cl ; mov al, 0xf7 ; call qword ptr [rbx]
0x000000000016faa7 : add byte ptr [rax], cl ; mov al, 0xfb ; call rcx
0x0000000000152807 : add byte ptr [rax], cl ; or esi, esi ; call qword ptr [rcx]
0x0000000000150097 : add byte ptr [rax], cl ; pop rsp ; cmc ; jmp rdx
0x0000000000163f77 : add byte ptr [rax], cl ; push rdx ; stc ; call qword ptr [rbx]
0x0000000000078917 : add byte ptr [rax], cl ; ret
0x0000000000079e47 : add byte ptr [rax], cl ; retf
0x0000000000079ab7 : add byte ptr [rax], cl ; retf 0x37
0x000000000014d0a7 : add byte ptr [rax], cl ; xor ah, dh ; call qword ptr [rdi]
0x000000000014b97f : add byte ptr [rax], dh ; adc dh, ah ; jmp qword ptr [rax]
0x000000000015fedf : add byte ptr [rax], dh ; clc ; jmp qword ptr [rdx]
0x000000000016e75f : add byte ptr [rax], dh ; cwde ; sti ; call qword ptr [rbx]
0x000000000015e85f : add byte ptr [rax], dh ; fdivr st(7), st(0) ; call rax
0x000000000014d090 : add byte ptr [rax], dh ; hlt ; call qword ptr [rbx]
0x000000000014d020 : add byte ptr [rax], dh ; hlt ; call qword ptr [rdi]
0x000000000015a41f : add byte ptr [rax], dh ; jp 0x15a41e ; call qword ptr [rax]
0x00000000001646df : add byte ptr [rax], dh ; pop rbx ; stc ; call rsp
0x000000000014fdaf : add byte ptr [rax], dh ; pop rcx ; cmc ; call qword ptr [rbx]
0x000000000014fd8f : add byte ptr [rax], dh ; pop rcx ; cmc ; call qword ptr [rdx]
0x000000000016911f : add byte ptr [rax], dh ; popfq ; cli ; jmp qword ptr [rsi]
0x0000000000012e07 : add byte ptr [rax], dh ; ret
0x000000000000e387 : add byte ptr [rax], dh ; ret 0x37
0x0000000000010ebf : add byte ptr [rax], dh ; retf
0x0000000000177fb7 : add byte ptr [rax], dh ; retf 0x20
0x00000000000700df : add byte ptr [rax], dh ; retf 0x37
0x000000000001f0f7 : add byte ptr [rax], dh ; retf 9
0x00000000001491ef : add byte ptr [rax], dh ; sti ; call rsp
0x0000000000153dff : add byte ptr [rax], dh ; sub esi, esi ; call qword ptr [rdx]
0x0000000000150fbf : add byte ptr [rax], dh ; xchg eax, esp ; cmc ; call qword ptr [rdi]
0x0000000000000b5e : add byte ptr [rax], dl ; adc byte ptr [rax - 0x78fdf520], cl ; ret 0x50a3
0x00000000000003f3 : add byte ptr [rax], dl ; add al, 1 ; retf 0x19
0x0000000000013507 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000015f77f : add byte ptr [rax], dl ; clc ; call qword ptr [rbx]
0x000000000017076f : add byte ptr [rax], dl ; cli ; sti ; call qword ptr [rcx]
0x000000000016e6ff : add byte ptr [rax], dl ; cwde ; sti ; call qword ptr [rbx]
0x000000000017185f : add byte ptr [rax], dl ; jnp 0x171863 ; call qword ptr [rdx]
0x0000000000163f8f : add byte ptr [rax], dl ; push rdx ; stc ; call qword ptr [rbx]
0x00000000000141bf : add byte ptr [rax], dl ; ret
0x0000000000075ca7 : add byte ptr [rax], dl ; ret 0x37
0x000000000000e0ff : add byte ptr [rax], dl ; retf
0x000000000001655f : add byte ptr [rax], dl ; retf 0x12
0x0000000000076c4f : add byte ptr [rax], dl ; retf 0x37
0x000000000016d3ef : add byte ptr [rax], dl ; test bh, bl ; jmp qword ptr [rdx]
0x000000000016d60f : add byte ptr [rax], dl ; xchg bl, bh ; call qword ptr [rdx]
0x000000000016a388 : add byte ptr [rax], r8b ; add ah, bh ; jmp 0xffffffffcba6a39c
0x0000000000026270 : add byte ptr [rax], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], cl ; retf
0x000000000012442d : add byte ptr [rax], r8b ; add qword ptr [rdi + 0x10], rsi ; ret
0x00000000000ba3c5 : add byte ptr [rax], r8b ; call rax
0x00000000000ba54d : add byte ptr [rax], r8b ; call rdx
0x00000000000bbdbd : add byte ptr [rax], r8b ; cmp dword ptr [rsi], edx ; sete al ; ret
0x0000000000150875 : add byte ptr [rax], r8b ; fsub dword ptr [rdi - 0xb] ; call qword ptr [rbx]
0x0000000000124035 : add byte ptr [rax], r8b ; jmp rax
0x0000000000124165 : add byte ptr [rax], r8b ; jmp rdx
0x00000000000fba0d : add byte ptr [rax], r8b ; jmp rsi
0x00000000000cc9dd : add byte ptr [rax], r8b ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000cea0d : add byte ptr [rax], r8b ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000cd87d : add byte ptr [rax], r8b ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000014fcbd : add byte ptr [rax], r8b ; mov al, 0x58 ; cmc ; call qword ptr [rbx]
0x000000000014fc9d : add byte ptr [rax], r8b ; mov al, 0x58 ; cmc ; call qword ptr [rdx]
0x000000000008d03d : add byte ptr [rax], r8b ; mov dword ptr [rdi], edx ; ret
0x0000000000100495 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0x10046b
0x00000000000fd405 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0xfd3db
0x0000000000123c9d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000924b5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000a19f5 : add byte ptr [rax], r8b ; mov eax, 1 ; jmp 0xa19d3
0x0000000000090a0d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000000b4215 : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x0000000000123c2d : add byte ptr [rax], r8b ; mov esi, dword ptr [r14] ; mov rdi, r12 ; call rax
0x00000000000b886d : add byte ptr [rax], r8b ; mov qword ptr [rdi], rax ; ret
0x00000000000d355d : add byte ptr [rax], r8b ; mov qword ptr [rdi], rsi ; ret
0x000000000012561d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000000d29dd : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi] ; ret
0x00000000000bc6c5 : add byte ptr [rax], r8b ; mov rdi, rbp ; call rax
0x00000000000ba53d : add byte ptr [rax], r8b ; mov rdi, rbx ; call rax
0x00000000000fd7fd : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi] ; ret
0x000000000008dc75 : add byte ptr [rax], r8b ; pop rbx ; jmp rdx
0x00000000000b91dd : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008dc6d : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000012416d : add byte ptr [rax], r8b ; push rbx ; mov rbx, rdi ; call rax
0x000000000008ed1d : add byte ptr [rax], r8b ; ret
0x000000000008fbcd : add byte ptr [rax], r8b ; sub rsp, 8 ; call 0x8bdf9
0x000000000008fcbd : add byte ptr [rax], r8b ; sub rsp, 8 ; call rdi
0x000000000014fc85 : add byte ptr [rax], r8b ; test al, 0x58 ; cmc ; call qword ptr [rbx]
0x000000000014fc65 : add byte ptr [rax], r8b ; test al, 0x58 ; cmc ; call qword ptr [rdx]
0x0000000000092a7d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000953dd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000092aad : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000009262d : add byte ptr [rax], r8b ; xor edx, edx ; mov rax, rdx ; ret
0x000000000008dd5b : add byte ptr [rbp + 0x10], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000123b4d : add byte ptr [rbp + 0x10], dh ; mov eax, 0xffffffff ; ret
0x000000000012415a : add byte ptr [rbp + 0x13], dh ; mov eax, 0xffffffff ; ret
0x0000000000124402 : add byte ptr [rbp + 0x13], dh ; ret
0x000000000008dc61 : add byte ptr [rbp + 0x14], dh ; pop rbx ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000bb931 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000119cea : add byte ptr [rbp + 0x19], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000d4b41 : add byte ptr [rbp + 0x1c], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d50ff : add byte ptr [rbp + 0x21], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000123f7a : add byte ptr [rbp + 0x21], dh ; add rsp, 0x18 ; ret
0x00000000000b5b4f : add byte ptr [rbp + 0x21], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ee55c : add byte ptr [rbp + 0x22], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000091392 : add byte ptr [rbp + 0x22], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012483a : add byte ptr [rbp + 0x23], dh ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000fd4f5 : add byte ptr [rbp + 0x29], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b4483 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000001131c9 : add byte ptr [rbp + 0x30], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000acea6 : add byte ptr [rbp + 0x31], al ; test byte ptr [rax - 0x77], 0xc7 ; call 0x89119
0x00000000000cbbe4 : add byte ptr [rbp + 0x35], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000bba0d : add byte ptr [rbp + 0x36], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d57f1 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cd1f6 : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c9815 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bfec5 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000a038c : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000095074 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cad13 : add byte ptr [rbp + 0x3d], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b5f8a : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; ret
0x00000000000bf491 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x18 ; ret
0x000000000009aa40 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b5799 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000c9917 : add byte ptr [rbp + 0x41], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cc2ee : add byte ptr [rbp + 0x42], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c9655 : add byte ptr [rbp + 0x43], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001240b2 : add byte ptr [rbp + 0x43], dh ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000099f90 : add byte ptr [rbp + 0x44], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000090299 : add byte ptr [rbp + 0x45], dh ; add rsp, 0x18 ; ret
0x0000000000090204 : add byte ptr [rbp + 0x46], dh ; add rsp, 0x18 ; ret
0x00000000000c9468 : add byte ptr [rbp + 0x48], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001240cd : add byte ptr [rbp + 0x48], dh ; mov edi, ebx ; pop rbx ; jmp rax
0x00000000000c935f : add byte ptr [rbp + 0x49], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bc77b : add byte ptr [rbp + 0x49], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c9ced : add byte ptr [rbp + 0x4b], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c924d : add byte ptr [rbp + 0x4b], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fd3df : add byte ptr [rbp + 0x4c], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000173876 : add byte ptr [rbp + 0x507], ah ; retf 0x507
0x00000000000d4574 : add byte ptr [rbp + 0x54], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000fcdd2 : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ffe36 : add byte ptr [rbp + 0x5f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000109717 : add byte ptr [rbp + 0x63480150], cl ; ret 0x9589
0x00000000000fc616 : add byte ptr [rbp + 0x65], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cbaa4 : add byte ptr [rbp + 0x67], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d3877 : add byte ptr [rbp + 0x69], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cf714 : add byte ptr [rbp + 0x77], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ff64e : add byte ptr [rbp + 0x7a], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cb54b : add byte ptr [rbp + 0x7f], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d7c23 : add byte ptr [rbp + 0xa], dh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116819 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008de53 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000bb595 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000001b6df : add byte ptr [rbp + 2], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x316
0x000000000008c762 : add byte ptr [rbp + 3], dh ; mov byte ptr [rax], 1 ; ret
0x00000000000b623b : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000008df08 : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000000000008ddd2 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000000000ee26b : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d9dfd : add byte ptr [rbp + 6], dh ; add rsp, 0x18 ; jmp rax
0x000000000008e1dc : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001247d7 : add byte ptr [rbp + 6], dh ; ret
0x00000000000a108f : add byte ptr [rbp + 7], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b4527 : add byte ptr [rbp + 7], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000d4456 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000008cbb6 : add byte ptr [rbp + 7], dh ; ret
0x000000000012e4fd : add byte ptr [rbp + 8], dh ; jmp 0x8af65
0x000000000010f5dd : add byte ptr [rbp + 8], dh ; jmp 0x8b875
0x0000000000123f2d : add byte ptr [rbp + 8], dh ; mov rax, rdi ; ret
0x000000000012402d : add byte ptr [rbp + 8], dh ; xor eax, eax ; ret
0x000000000014bddb : add byte ptr [rbp + rax + 0x1a800000], cl ; hlt ; call qword ptr [rcx]
0x000000000014bdf3 : add byte ptr [rbp + rax + 0x1a880000], ah ; hlt ; call qword ptr [rcx]
0x0000000000175661 : add byte ptr [rbp + rax - 0x38], bh ; add eax, dword ptr [rax] ; retf
0x00000000000f0a30 : add byte ptr [rbp + rax - 0xd], dh ; ret
0x000000000015fddb : add byte ptr [rbp + rax*2 + 0x4d200001], cl ; clc ; jmp qword ptr [rdx]
0x000000000014fde3 : add byte ptr [rbp + rax*2 + 0x59380000], dl ; cmc ; call qword ptr [rbx]
0x000000000014fdfb : add byte ptr [rbp + rax*2 + 0x59400000], ch ; cmc ; call qword ptr [rdx]
0x000000000014abf7 : add byte ptr [rbp + rax*2 - 2], ah ; jmp rsp
0x000000000014fdab : add byte ptr [rbp + rax*2], bl ; add byte ptr [rax], dh ; pop rcx ; cmc ; call qword ptr [rbx]
0x000000000014fdc3 : add byte ptr [rbp + rax*2], dh ; add byte ptr [rax], bh ; pop rcx ; cmc ; call qword ptr [rdx]
0x000000000014bd93 : add byte ptr [rbp + rax], al ; add byte ptr [rax + 0x1a], bl ; hlt ; jmp qword ptr [rax]
0x000000000014809f : add byte ptr [rbp + rbp - 6], al ; dec esp ; ret
0x00000000001480a7 : add byte ptr [rbp + rbp - 6], dl ; jmp rsp
0x00000000001665fb : add byte ptr [rbp + rbp*4 - 0x46cfffff], ch ; stc ; call qword ptr [rbx]
0x00000000001665e3 : add byte ptr [rbp + rbp*4 - 0x46d7ffff], dl ; stc ; call qword ptr [rbx]
0x00000000001445f7 : add byte ptr [rbp + rbp*4 - 0xc], dh ; call rsp
0x000000000014d5db : add byte ptr [rbp + rbx + 0x35600000], cl ; hlt ; call qword ptr [rdi]
0x000000000016d60b : add byte ptr [rbp + rbx - 0x79effffe], bh ; sti ; call qword ptr [rdx]
0x00000000001655cb : add byte ptr [rbp + rbx*4 + 1], bh ; add al, al ; test edi, ecx ; call qword ptr [rbx]
0x000000000016571b : add byte ptr [rbp + rbx*4 - 0x764fffff], cl ; stc ; jmp qword ptr [rdi]
0x00000000001655e3 : add byte ptr [rbp + rbx*4 - 0x7a37ffff], dl ; stc ; call qword ptr [rbx]
0x000000000014d5c3 : add byte ptr [rbp + rbx], dh ; add byte ptr [rax + 0x35], bl ; hlt ; call qword ptr [rbx]
0x0000000000160603 : add byte ptr [rbp + rcx*2 + 0x74480001], dh ; clc ; call qword ptr [rdx]
0x00000000001646db : add byte ptr [rbp + rcx*4 + 1], cl ; add byte ptr [rax], dh ; pop rbx ; stc ; call rsp
0x000000000014f71b : add byte ptr [rbp + rdi + 0x26700000], cl ; cmc ; call rax
0x000000000014cde3 : add byte ptr [rbp + rdx + 0x2de80000], dl ; hlt ; call qword ptr [rcx]
0x000000000014a64f : add byte ptr [rbp + rdx - 2], dl ; jmp rsp
0x000000000016ee03 : add byte ptr [rbp + rsi - 0x6057fffe], dh ; sti ; jmp qword ptr [rdx]
0x000000000016edeb : add byte ptr [rbp + rsi - 0x606ffffe], bl ; sti ; jmp qword ptr [rdx]
0x000000000014e56b : add byte ptr [rbp - 0x26500000], bl ; hlt ; jmp qword ptr [rsi]
0x00000000000a7a8f : add byte ptr [rbp - 0x49], dh ; mov dword ptr [rsi], 1 ; ret
0x0000000000174c34 : add byte ptr [rbp - 0x4dfe7cff], bl ; add al, byte ptr [rax] ; retf 0x502
0x0000000000091776 : add byte ptr [rbp - 0x77], al ; retf
0x00000000000df87b : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; retf
0x00000000000d53b9 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rcx*4 + 0x4c], 0x89 ; ret 0x59e8
0x0000000000171ae0 : add byte ptr [rbp - 4], bh ; call qword ptr [rcx]
0x0000000000146a27 : add byte ptr [rbp - 8], dl ; call rsp
0x0000000000166553 : add byte ptr [rbp*4 - 0x4717ffff], al ; stc ; call qword ptr [rbx]
0x000000000000d9e7 : add byte ptr [rbp], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000b2327 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000a1b39 : add byte ptr [rbx + 0x48], bl ; mov eax, dword ptr [rax] ; ret
0x0000000000123b5f : add byte ptr [rbx + 0x48], dl ; mov ebx, edi ; call rax
0x00000000000a3927 : add byte ptr [rbx + 0x5d5b0100], al ; pop r12 ; ret
0x00000000000b2a3d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b7464 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009c102 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000090bd1 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e748a : add byte ptr [rbx + 0xf48fffe], al ; ret
0x000000000014bbf3 : add byte ptr [rbx + rax + 0x19a80000], ah ; hlt ; jmp qword ptr [rax]
0x000000000014bc0b : add byte ptr [rbx + rax + 0x19b00000], bh ; hlt ; call qword ptr [rdi]
0x00000000001746d4 : add byte ptr [rbx + rax + 0x6bf18], al ; ret 0xda03
0x0000000000144b2f : add byte ptr [rbx + rax*4 - 0xb], dh ; call rsp
0x00000000001447af : add byte ptr [rbx + rax*8], ah ; hlt ; call rsp
0x0000000000147eff : add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000015e4e3 : add byte ptr [rbx + rbp + 1], dl ; add al, ch ; retf -9
0x000000000016a373 : add byte ptr [rbx + rbp*8], ah ; add dword ptr [rax], eax ; cwde ; retf
0x000000000016e37b : add byte ptr [rbx + rbp], ch ; add al, byte ptr [rax] ; nop ; xchg eax, ebp ; sti ; call qword ptr [rdi]
0x000000000014d3db : add byte ptr [rbx + rbx + 0x33000000], cl ; hlt ; call qword ptr [rdi]
0x000000000016d403 : add byte ptr [rbx + rbx - 0x7bd7fffe], dh ; sti ; jmp qword ptr [rdx]
0x000000000016d3eb : add byte ptr [rbx + rbx - 0x7beffffe], bl ; sti ; jmp qword ptr [rdx]
0x00000000000a3862 : add byte ptr [rbx + rbx - 0xd], dh ; ret
0x000000000015821f : add byte ptr [rbx + rbx*2], al ; retf
0x00000000001654b3 : add byte ptr [rbx + rbx*4], ah ; add dword ptr [rax], eax ; js 0x165446 ; stc ; call qword ptr [rax]
0x00000000001693ab : add byte ptr [rbx + rbx*8 + 1], bl ; add byte ptr [rax - 0x5f], dh ; cli ; call qword ptr [rbx]
0x0000000000169543 : add byte ptr [rbx + rbx*8 - 0x5a97ffff], dh ; cli ; jmp qword ptr [rbx]
0x000000000014d3ab : add byte ptr [rbx + rbx], bl ; add al, dh ; xor dh, ah ; call qword ptr [rcx]
0x000000000014d3c3 : add byte ptr [rbx + rbx], dh ; add al, bh ; xor dh, ah ; call qword ptr [rbx]
0x000000000014c3fb : add byte ptr [rbx + rcx + 0x1ce00000], ch ; hlt ; call qword ptr [rbx]
0x000000000014b397 : add byte ptr [rbx + rcx*2 - 1], ah ; jmp rsp
0x0000000000148937 : add byte ptr [rbx + rcx*2 - 5], dh ; call rsp
0x0000000000147897 : add byte ptr [rbx + rcx*2 - 7], al ; jmp rsp
0x000000000012e7a2 : add byte ptr [rbx + rcx*4 + 0x4d], cl ; mov al, 0x29 ; ret 0x4589
0x000000000012e2ea : add byte ptr [rbx + rcx*4 + 0x4d], cl ; test al, 0x29 ; ret 0x4589
0x0000000000154373 : add byte ptr [rbx + rcx*4], ah ; add byte ptr [rax], al ; call 0x131539b3
0x0000000000154353 : add byte ptr [rbx + rcx*4], al ; add byte ptr [rax], al ; call 0x13153993
0x0000000000168363 : add byte ptr [rbx + rcx*8], dl ; add dword ptr [rax], eax ; js 0x168375 ; cli ; jmp qword ptr [rdx]
0x000000000014c3ab : add byte ptr [rbx + rcx], bl ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000014c3c3 : add byte ptr [rbx + rcx], dh ; add al, ch ; sbb al, 0xf4 ; call qword ptr [rdx]
0x000000000014f3f3 : add byte ptr [rbx + rdi + 0x1f680000], ah ; cmc ; jmp qword ptr [rax]
0x000000000014f40b : add byte ptr [rbx + rdi + 0x1f700000], bh ; cmc ; call qword ptr [rdi]
0x000000000015f52b : add byte ptr [rbx + rdi + 0x42000001], bl ; clc ; call rdi
0x0000000000149db7 : add byte ptr [rbx + rdi - 3], dh ; jmp rsp
0x0000000000157393 : add byte ptr [rbx + rdi*4], al ; add al, cl ; retf
0x000000000016738b : add byte ptr [rbx + rdi*4], bh ; add dword ptr [rax], eax ; push rax ; retf -7
0x000000000016735b : add byte ptr [rbx + rdi*4], cl ; add dword ptr [rax], eax ; retf -7
0x000000000016bcd7 : add byte ptr [rbx + rdi*8], al ; retf 0
0x000000000014f393 : add byte ptr [rbx + rdi], al ; add byte ptr [rax + 0x1f], cl ; cmc ; jmp qword ptr [rax]
0x000000000014f3ab : add byte ptr [rbx + rdi], bl ; add byte ptr [rax + 0x1f], dl ; cmc ; call qword ptr [rdi]
0x000000000016eba3 : add byte ptr [rbx + rsi + 2], dl ; add byte ptr [rax - 0x66], bh ; sti ; call qword ptr [rdx]
0x000000000016ebf3 : add byte ptr [rbx + rsi - 0x6567fffe], ah ; sti ; call qword ptr [rdx]
0x0000000000149d37 : add byte ptr [rbx + rsi - 3], al ; jmp rsp
0x000000000014b7b7 : add byte ptr [rbx + rsi*2 - 1], al ; call rsp
0x000000000013de37 : add byte ptr [rbx - 0x10], cl ; retf
0x00000000000f929f : add byte ptr [rbx - 0x172edfb9], cl ; and eax, 1 ; ret
0x00000000000f6427 : add byte ptr [rbx - 0x17], bl ; ret 0xf94c
0x00000000000de604 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0xffffffff ; ret
0x00000000000d498f : add byte ptr [rbx - 0x3f7a07b9], cl ; jg 0xd4957 ; jmp 0xd4965
0x00000000000f928f : add byte ptr [rbx - 0x3f7adfb9], cl ; sete al ; ret
0x00000000000d358f : add byte ptr [rbx - 0x3f7aefb9], cl ; setg al ; ret
0x00000000000cba2c : add byte ptr [rbx - 0x76b7fd06], al ; ret
0x00000000000b431f : add byte ptr [rbx - 0x77], dl ; retf
0x00000000000b9538 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000f4ddf : add byte ptr [rbx - 0x7d], dl ; retf 0x4808
0x00000000000f4e2f : add byte ptr [rbx - 0x7d], dl ; retf 0x4810
0x00000000001455cf : add byte ptr [rbx - 0xa], ah ; jmp rsp
0x00000000001718c0 : add byte ptr [rbx - 4], bh ; jmp qword ptr [rbx]
0x000000000017156b : add byte ptr [rbx*2 + 0x79800002], bl ; cld ; call qword ptr [rdi]
0x0000000000171583 : add byte ptr [rbx*2 + 0x79880002], dh ; cld ; call qword ptr [rdi]
0x0000000000165583 : add byte ptr [rbx*4 - 0x7a77ffff], dh ; stc ; call qword ptr [rcx]
0x00000000000239b7 : add byte ptr [rbx], al ; ret
0x000000000000f81f : add byte ptr [rbx], al ; ret 1
0x0000000000021297 : add byte ptr [rbx], bh ; ret 3
0x00000000000248f7 : add byte ptr [rbx], bl ; retf
0x000000000014d3e0 : add byte ptr [rbx], dh ; hlt ; call qword ptr [rdi]
0x000000000001f23f : add byte ptr [rbx], dl ; ret 0
0x000000000013dc27 : add byte ptr [rbx], dl ; retf
0x0000000000174b72 : add byte ptr [rcx + 0x1004], dl ; ret
0x00000000000b4a0f : add byte ptr [rcx + 0x39], al ; ret
0x00000000000b41b8 : add byte ptr [rcx + 0x39], cl ; ret 0x8948
0x00000000000f949b : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000008e33d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000000e57b0 : add byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000123b0f : add byte ptr [rcx + 0xf], al ; mov dh, 0x36 ; mov rdi, rbp ; call rax
0x000000000015d9cb : add byte ptr [rcx + 1], bh ; add al, al ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000008e74f : add byte ptr [rcx + 1], cl ; ror dword ptr [rcx + rcx*4 + 8], 1 ; jmp 0x8e72b
0x0000000000172d8c : add byte ptr [rcx + rax + 0x302b505], bh ; retf
0x0000000000147147 : add byte ptr [rcx + rax - 7], al ; jmp rsp
0x000000000015f9f3 : add byte ptr [rcx + rax*2 + 0x46780001], ah ; clc ; call rax
0x000000000015f9b3 : add byte ptr [rcx + rax*2 + 1], ah ; add al, ch ; clc ; call rax
0x0000000000163b23 : add byte ptr [rcx + rax*4 + 0x47280001], dl ; stc ; jmp rdi
0x000000000014b97b : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; xor byte ptr [rdx], dl ; hlt ; jmp qword ptr [rax]
0x000000000014b963 : add byte ptr [rcx + rax], dl ; add byte ptr [rax], al ; sbb byte ptr [rdx], dl ; hlt ; jmp qword ptr [rdi]
0x00000000000912df : add byte ptr [rcx + rbp - 0x13], cl ; mov rdi, rbp ; call r12
0x0000000000090eb7 : add byte ptr [rcx + rbp - 0x15], cl ; mov rdi, rbx ; call r12
0x00000000001475cf : add byte ptr [rcx + rbp - 7], dh ; jmp rsp
0x000000000015218b : add byte ptr [rcx + rbp*2], bh ; add byte ptr [rax], al ; loopne 0x152198 ; cmc ; jmp rbx
0x0000000000146c07 : add byte ptr [rcx + rbp*4 - 8], ah ; call rsp
0x0000000000144a07 : add byte ptr [rcx + rbp*8 - 0xc], dh ; call rsp
0x0000000000146e37 : add byte ptr [rcx + rbp*8], al ; clc ; call rsp
0x00000000001511e3 : add byte ptr [rcx + rbx*2 - 0x5ea80000], dl ; cmc ; call qword ptr [rbx]
0x000000000016c60f : add byte ptr [rcx + rbx*2], al ; ret
0x000000000014d15b : add byte ptr [rcx + rbx], cl ; add byte ptr [rax], al ; mov al, 0x31 ; hlt ; call qword ptr [rdi]
0x000000000014d1c3 : add byte ptr [rcx + rbx], dh ; add byte ptr [rax + 0x32], bh ; hlt ; call qword ptr [rdx]
0x000000000014c1e3 : add byte ptr [rcx + rcx + 0x1c880000], dl ; hlt ; call qword ptr [rdx]
0x00000000000af634 : add byte ptr [rcx + rcx + 0x48], dh ; mov edi, dword ptr [rsp] ; call 0x8c109
0x0000000000148917 : add byte ptr [rcx + rcx*2], dl ; sti ; jmp rsp
0x00000000000bd404 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x22e8
0x00000000000bd4f4 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x32e8
0x00000000000bd3c2 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x64e8
0x00000000000bd5b7 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x6fe8
0x00000000000bd2b6 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x70e8
0x00000000000bd9aa : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x7ce8
0x00000000000bd89c : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8ae8
0x00000000000bd491 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x95e8
0x00000000000bd380 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xa6e8
0x00000000000bd91c : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xae8
0x00000000000bd31b : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xbe8
0x00000000000bd963 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xc3e8
0x00000000000bd258 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xcee8
0x00000000000bd552 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xd4e8
0x00000000000bd446 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xe0e8
0x00000000000bd744 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0xe2e8
0x00000000000a3651 : add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x8b4c
0x00000000000dc2db : add byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rax
0x00000000001642f3 : add byte ptr [rcx + rcx*4 + 1], ah ; add byte ptr [rax], ch ; push rsi ; stc ; call rsp
0x00000000000f98cd : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000123edf : add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, rbx ; call rax
0x00000000000f943a : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rdx
0x00000000001137c3 : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2b2c : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rax
0x00000000001145d7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rdx
0x000000000011422e : add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000106805 : add byte ptr [rcx + rcx*4 - 9], cl ; call rcx
0x0000000000114fbf : add byte ptr [rcx + rcx*4 - 9], cl ; call rdx
0x00000000001498ef : add byte ptr [rcx + rcx*8], al ; cld ; jmp rsp
0x000000000016bc37 : add byte ptr [rcx + rdi*2], al ; retf
0x000000000014c9e3 : add byte ptr [rcx + rdx + 0x23a80000], dl ; hlt ; call qword ptr [rdi]
0x000000000016c9eb : add byte ptr [rcx + rdx + 0x7c800002], bl ; sti ; call qword ptr [rdx]
0x0000000000148227 : add byte ptr [rcx + rdx*2 - 6], al ; inc esp ; retf
0x000000000014898f : add byte ptr [rcx + rdx*2], al ; sti ; jmp rsp
0x0000000000149887 : add byte ptr [rcx + rdx*4 - 4], dh ; call rsp
0x0000000000158953 : add byte ptr [rcx + rdx*8], al ; add byte ptr [rax], al ; or rdi, rsi ; call qword ptr [rax]
0x000000000014c97b : add byte ptr [rcx + rdx], ch ; add byte ptr [rax], al ; mov al, 0x23 ; hlt ; call qword ptr [rbx]
0x00000000000bb3ba : add byte ptr [rcx + rsi + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001729a3 : add byte ptr [rcx + rsi*2 + 2], dl ; add byte ptr [rax - 0x71], bl ; cld ; call qword ptr [rdi]
0x00000000000ba067 : add byte ptr [rcx - 0x2076b70e], cl ; mov rsi, r13 ; call rax
0x00000000000a1a8f : add byte ptr [rcx - 0x40], ch ; jne 0xa1a73 ; ret
0x00000000000badda : add byte ptr [rcx - 0x73], cl ; dec qword ptr [r8 - 0x77] ; ret 0xf66
0x0000000000123c2f : add byte ptr [rcx - 0x75], al ; mov rdi, r12 ; call rax
0x00000000000ee32f : add byte ptr [rcx - 0x77], al ; popfq ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009d84f : add byte ptr [rcx - 0x77], cl ; adc byte ptr [rax + 3], bh ; ret
0x000000000009198f : add byte ptr [rcx - 0x77], cl ; ret
0x000000000012e27f : add byte ptr [rcx - 0x77], cl ; ret 0x8348
0x000000000009085f : add byte ptr [rcx - 0x7a2d080e], cl ; ret 0x850f
0x0000000000109e5f : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000106d57 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000b5997 : add byte ptr [rcx - 0x7d], cl ; ret 0x4d04
0x0000000000154840 : add byte ptr [rcx - 0xa], al ; jmp rbx
0x00000000001041ff : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; pop rax ; ret
0x000000000008fa8b : add byte ptr [rcx], 0xf3 ; ret
0x000000000015f371 : add byte ptr [rcx], 2 ; ret
0x0000000000167c4d : add byte ptr [rcx], 3 ; retf 0xa02
0x0000000000023a07 : add byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000023d43 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add ah, al ; ret 0x13
0x0000000000025e43 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add ah, bl ; ret 0x13
0x00000000000147bb : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add ah, ch ; ret 0x13
0x000000000001de33 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add al, ah ; ret
0x0000000000023b03 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add al, ch ; ret 0x13
0x00000000000142db : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add al, cl ; ret 0x13
0x0000000000023ad3 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add bh, bl ; ret 0x13
0x000000000002624b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add bh, dh ; ret 0x13
0x000000000001442b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add bl, ah ; ret 0x13
0x0000000000025e13 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add bl, dl ; ret 0x13
0x0000000000025d0b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000026aeb : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rax], al ; ret 0x13
0x00000000000141bb : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rax], dl ; ret
0x00000000000239b3 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rbx], al ; ret
0x0000000000025c7b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rcx], cl ; ret
0x00000000000141a3 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rdi], al ; ret
0x0000000000025cdb : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rdx], dl ; ret
0x0000000000025e8b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add ch, ah ; ret 0x13
0x0000000000023a5b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add ch, cl ; ret 0x13
0x0000000000014833 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add ch, dh ; ret 0x13
0x000000000002606b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add cl, al ; ret 0x13
0x0000000000023e7b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add cl, dh ; ret 0x13
0x0000000000014353 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add cl, dl ; ret 0x13
0x00000000000141d3 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add dh, bh ; ret 0x13
0x00000000000261a3 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add dh, ch ; ret 0x13
0x0000000000023aa3 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add dh, dl ; ret 0x13
0x0000000000023e93 : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add dl, bh ; ret 0x13
0x000000000001439b : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add dl, bl ; ret 0x13
0x0000000000025dcb : add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add dl, cl ; ret 0x13
0x000000000000cdc3 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add al, ah ; ret 0x37
0x0000000000016873 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add al, ah ; retf 0x37
0x0000000000017b93 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add al, bh ; ret 0x37
0x000000000001fa6b : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add al, cl ; ret 0x37
0x00000000000218e3 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add al, dh ; retf 0x37
0x0000000000015e0b : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], al ; retf 0x37
0x00000000000238f3 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], bl ; retf 0x37
0x0000000000011fb3 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], ch ; ret
0x0000000000023c3b : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], ch ; retf
0x000000000000e383 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], dh ; ret 0x37
0x000000000001a743 : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], dl ; ret
0x000000000000e0fb : add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], dl ; retf
0x00000000000f9382 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000177f0d : add byte ptr [rcx], al ; jge 0x177f19 ; add byte ptr [rax], al ; add ah, dl ; retf 0x20
0x00000000000a3905 : add byte ptr [rcx], al ; mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ca2d : add byte ptr [rcx], al ; pop rbp ; ret
0x00000000000a391c : add byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9dd6 : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000008c766 : add byte ptr [rcx], al ; ret
0x00000000001474ef : add byte ptr [rcx], al ; stc ; call rsp
0x00000000000bbfa7 : add byte ptr [rcx], bh ; xor ebx, dword ptr [rbx + 0xf] ; xchg eax, esp ; rol bl, 0x90 ; call rdx
0x000000000006fc57 : add byte ptr [rcx], bl ; ret
0x0000000000016fd7 : add byte ptr [rcx], bl ; retf 0
0x000000000009b431 : add byte ptr [rcx], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110bb0 : add byte ptr [rcx], ch ; ret 0xf41
0x00000000000923e2 : add byte ptr [rcx], ch ; test r9d, r9d ; cmovne eax, edx ; ret
0x0000000000025c7f : add byte ptr [rcx], cl ; ret
0x0000000000092a29 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000092a7f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006fbc7 : add byte ptr [rcx], dh ; ret
0x000000000008c483 : add byte ptr [rcx], dh ; sal bl, 0xab ; ret
0x00000000000bc98d : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc ; ret 0x8b48
0x000000000001b613 : add byte ptr [rcx], dl ; add byte ptr [rax + rax], bl ; retf 0x384b
0x000000000001e3af : add byte ptr [rcx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x38f
0x000000000000c7f3 : add byte ptr [rcx], dl ; add byte ptr [rdi], cl ; add ch, al ; ret
0x0000000000147d77 : add byte ptr [rcx], dl ; stc ; call rsp
0x000000000012d18f : add byte ptr [rdi + 0xa0], bh ; call 0x89438
0x000000000012d18e : add byte ptr [rdi + 0xa0], dil ; call 0x89439
0x000000000016a0eb : add byte ptr [rdi + 1], bl ; add al, dl ; ret 0xfffa
0x000000000015ffdb : add byte ptr [rdi + rax*2 + 0x50000001], cl ; clc ; jmp qword ptr [rdx]
0x000000000014ffe3 : add byte ptr [rdi + rax*2 + 0x5b680000], dl ; cmc ; call qword ptr [rdi]
0x0000000000163fc3 : add byte ptr [rdi + rax*4 + 1], dh ; add byte ptr [rax], bl ; push rdx ; stc ; jmp qword ptr [rax]
0x0000000000163fa3 : add byte ptr [rdi + rax*4 + 1], dl ; add byte ptr [rax], bl ; push rdx ; stc ; jmp qword ptr [rax]
0x0000000000163f73 : add byte ptr [rdi + rax*4], ah ; add dword ptr [rax], eax ; or byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x00000000001581df : add byte ptr [rdi + rax*4], al ; retf
0x0000000000163f8b : add byte ptr [rdi + rax*4], bh ; add dword ptr [rax], eax ; adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x0000000000157f53 : add byte ptr [rdi + rax*8], al ; add byte ptr [rax], al ; cwde ; div dh ; call qword ptr [rdx]
0x000000000016bd1f : add byte ptr [rdi + rax*8], al ; retf 0
0x000000000016e7bb : add byte ptr [rdi + rbp + 2], ch ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x000000000016e7a3 : add byte ptr [rdi + rbp + 2], dl ; add byte ptr [rax - 0x68], cl ; sti ; call qword ptr [rbx]
0x000000000014e80b : add byte ptr [rdi + rbp - 0x1eb00000], bh ; hlt ; jmp qword ptr [rax]
0x000000000016e7fb : add byte ptr [rdi + rbp - 0x67affffe], ch ; sti ; jmp qword ptr [rax]
0x000000000016e7db : add byte ptr [rdi + rbp - 0x67affffe], cl ; sti ; jmp qword ptr [rax]
0x00000000001727eb : add byte ptr [rdi + rbp*2 - 0x72fffffe], bl ; cld ; call rdx
0x000000000016bdb7 : add byte ptr [rdi + rbp*2], al ; retf 0
0x00000000001667b3 : add byte ptr [rdi + rbp*4 + 1], ah ; add byte ptr [rax - 0x47], bl ; stc ; jmp qword ptr [rax]
0x0000000000166793 : add byte ptr [rdi + rbp*4 + 1], al ; add byte ptr [rax - 0x47], bl ; stc ; jmp qword ptr [rax]
0x00000000001667d3 : add byte ptr [rdi + rbp*4 - 0x46a7ffff], al ; stc ; jmp qword ptr [rax]
0x000000000016e78b : add byte ptr [rdi + rbp], bh ; add al, byte ptr [rax] ; cwde ; sti ; call qword ptr [rbx]
0x000000000016d7c3 : add byte ptr [rdi + rbx + 2], dh ; add byte ptr [rax - 0x77], bl ; sti ; call qword ptr [rcx]
0x000000000014967f : add byte ptr [rdi + rbx - 4], dl ; call rsp
0x00000000001717d3 : add byte ptr [rdi + rbx*2 + 0x7a280002], al ; cld ; call qword ptr [rsi]
0x00000000001518d3 : add byte ptr [rdi + rbx*2], al ; add al, bh ; ret 0xfff5
0x0000000000149f17 : add byte ptr [rdi + rbx*2], al ; std ; call rsp
0x000000000017175b : add byte ptr [rdi + rbx*2], cl ; add al, byte ptr [rax] ; jp 0x171767 ; call qword ptr [rdx]
0x00000000001518a3 : add byte ptr [rdi + rbx*2], dl ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x00000000001491af : add byte ptr [rdi + rbx*8], dh ; sti ; call rsp
0x000000000016d78b : add byte ptr [rdi + rbx], bh ; add al, byte ptr [rax] ; push rax ; mov ebx, edi ; call qword ptr [rcx]
0x00000000000abaec : add byte ptr [rdi + rcx + 0x45], al ; ret 0xadeb
0x0000000000092777 : add byte ptr [rdi + rcx + 0x46], al ; ret 0x74b9
0x0000000000125c8f : add byte ptr [rdi + rcx - 0x42], al ; ret 0x8b48
0x00000000000ab9c4 : add byte ptr [rdi + rcx - 0x4a], al ; retf -0x76bf
0x00000000001481ff : add byte ptr [rdi + rcx*2], ah ; cli ; call qword ptr [rbx + rcx*8]
0x000000000014796f : add byte ptr [rdi + rcx*2], al ; stc ; call rsp
0x000000000017076b : add byte ptr [rdi + rcx*2], bl ; add al, byte ptr [rax] ; adc dl, bh ; sti ; call qword ptr [rcx]
0x00000000001441cf : add byte ptr [rdi + rcx*4 - 0xc], ah ; jmp rsp
0x0000000000149fef : add byte ptr [rdi + rcx*4], dh ; std ; call rsp
0x000000000015f7f3 : add byte ptr [rdi + rdi + 0x44180001], ah ; clc ; jmp qword ptr [rax]
0x000000000015f7d3 : add byte ptr [rdi + rdi + 0x44180001], al ; clc ; jmp qword ptr [rax]
0x000000000015f7b3 : add byte ptr [rdi + rdi + 1], ah ; add byte ptr [rax], bl ; clc ; jmp qword ptr [rax]
0x000000000015f793 : add byte ptr [rdi + rdi + 1], al ; add byte ptr [rax], bl ; clc ; jmp qword ptr [rax]
0x0000000000147bb7 : add byte ptr [rdi + rdi*2 - 7], ah ; call rsp
0x00000000001677ab : add byte ptr [rdi + rdi*4 + 1], bl ; add byte ptr [rax - 0x31], dl ; stc ; call qword ptr [rdx]
0x000000000016b8b3 : add byte ptr [rdi + rdi*8], ah ; add dword ptr [rax], eax ; xor dil, bl ; jmp rdx
0x00000000001494cf : add byte ptr [rdi + rdi*8], dl ; sti ; call rsp
0x000000000014d003 : add byte ptr [rdi + rdx + 0x2ff80000], dh ; hlt ; call qword ptr [rbx]
0x000000000016cffb : add byte ptr [rdi + rdx - 0x7f2ffffe], ch ; sti ; jmp rax
0x000000000016cfe3 : add byte ptr [rdi + rdx - 0x7f37fffe], dl ; sti ; jmp qword ptr [rax]
0x0000000000150fbb : add byte ptr [rdi + rdx*2], ch ; add byte ptr [rax], dh ; xchg eax, esp ; cmc ; call qword ptr [rdi]
0x0000000000144bbf : add byte ptr [rdi + rdx*4 - 0xb], dh ; call rsp
0x0000000000154f8b : add byte ptr [rdi + rdx*4], bh ; add byte ptr [rax], al ; add byte ptr [rdi - 0xa], cl ; call qword ptr [rdx]
0x00000000001442af : add byte ptr [rdi + rdx*4], dh ; hlt ; call rsp
0x00000000001493d7 : add byte ptr [rdi + rsi*8], dh ; sti ; call rsp
0x0000000000166113 : add byte ptr [rdi - 0x5117ffff], al ; stc ; jmp qword ptr [rdi]
0x000000000013cbe4 : add byte ptr [rdi - 0x7194000b], cl ; cmc ; jmp qword ptr [rax]
0x0000000000154f90 : add byte ptr [rdi - 0xa], cl ; call qword ptr [rdx]
0x0000000000146a37 : add byte ptr [rdi - 8], dl ; call rsp
0x0000000000167583 : add byte ptr [rdi*4 - 0x3157ffff], dh ; stc ; jmp qword ptr [rbx]
0x0000000000028ce7 : add byte ptr [rdi], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000141a7 : add byte ptr [rdi], al ; ret
0x000000000015826f : add byte ptr [rdi], al ; retf
0x000000000015831f : add byte ptr [rdi], al ; retf 1
0x0000000000149ca7 : add byte ptr [rdi], al ; std ; call rsp
0x0000000000000e92 : add byte ptr [rdi], al ; xor al, 2 ; test byte ptr [rcx], al ; test byte ptr [rcx], bl ; ret 0x2999
0x000000000014dfab : add byte ptr [rdi], bl ; add al, dh ; pop rbp ; hlt ; jmp qword ptr [rbx]
0x000000000013de57 : add byte ptr [rdi], bl ; ret
0x000000000001ea47 : add byte ptr [rdi], bl ; retf 2
0x0000000000023d45 : add byte ptr [rdi], cl ; add ah, al ; ret 0x13
0x0000000000025e45 : add byte ptr [rdi], cl ; add ah, bl ; ret 0x13
0x00000000000147bd : add byte ptr [rdi], cl ; add ah, ch ; ret 0x13
0x000000000001de35 : add byte ptr [rdi], cl ; add al, ah ; ret
0x0000000000023b05 : add byte ptr [rdi], cl ; add al, ch ; ret 0x13
0x00000000000142dd : add byte ptr [rdi], cl ; add al, cl ; ret 0x13
0x0000000000023ad5 : add byte ptr [rdi], cl ; add bh, bl ; ret 0x13
0x000000000002624d : add byte ptr [rdi], cl ; add bh, dh ; ret 0x13
0x000000000001442d : add byte ptr [rdi], cl ; add bl, ah ; ret 0x13
0x0000000000025e15 : add byte ptr [rdi], cl ; add bl, dl ; ret 0x13
0x0000000000025d0d : add byte ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000026aed : add byte ptr [rdi], cl ; add byte ptr [rax], al ; ret 0x13
0x00000000000141bd : add byte ptr [rdi], cl ; add byte ptr [rax], dl ; ret
0x00000000000239b5 : add byte ptr [rdi], cl ; add byte ptr [rbx], al ; ret
0x0000000000025c7d : add byte ptr [rdi], cl ; add byte ptr [rcx], cl ; ret
0x00000000000141a5 : add byte ptr [rdi], cl ; add byte ptr [rdi], al ; ret
0x0000000000025cdd : add byte ptr [rdi], cl ; add byte ptr [rdx], dl ; ret
0x0000000000025e8d : add byte ptr [rdi], cl ; add ch, ah ; ret 0x13
0x000000000000c7f5 : add byte ptr [rdi], cl ; add ch, al ; ret
0x0000000000023a5d : add byte ptr [rdi], cl ; add ch, cl ; ret 0x13
0x0000000000014835 : add byte ptr [rdi], cl ; add ch, dh ; ret 0x13
0x000000000002606d : add byte ptr [rdi], cl ; add cl, al ; ret 0x13
0x0000000000023e7d : add byte ptr [rdi], cl ; add cl, dh ; ret 0x13
0x0000000000014355 : add byte ptr [rdi], cl ; add cl, dl ; ret 0x13
0x00000000000141d5 : add byte ptr [rdi], cl ; add dh, bh ; ret 0x13
0x00000000000261a5 : add byte ptr [rdi], cl ; add dh, ch ; ret 0x13
0x0000000000023aa5 : add byte ptr [rdi], cl ; add dh, dl ; ret 0x13
0x0000000000023e95 : add byte ptr [rdi], cl ; add dl, bh ; ret 0x13
0x000000000001439d : add byte ptr [rdi], cl ; add dl, bl ; ret 0x13
0x0000000000025dcd : add byte ptr [rdi], cl ; add dl, cl ; ret 0x13
0x000000000008ca4f : add byte ptr [rdi], cl ; mov dh, 6 ; cmp byte ptr [rdi], al ; sete al ; ret
0x000000000008cb07 : add byte ptr [rdi], cl ; mov dh, 6 ; mov byte ptr [rdi], al ; ret
0x00000000000fd7ff : add byte ptr [rdi], cl ; mov dh, 7 ; ret
0x00000000000b482b : add byte ptr [rdi], cl ; ret 0x8b48
0x000000000009899a : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000003c8 : add byte ptr [rdi], cl ; retf -0x2bdf
0x00000000000abae4 : add byte ptr [rdi], cl ; retf 0x2b8
0x000000000009bc1b : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd285
0x000000000010ca17 : add byte ptr [rdi], cl ; test bh, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012efae : add byte ptr [rdi], cl ; test cl, bl ; add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000099693 : add byte ptr [rdi], cl ; test dword ptr [rsi], esi ; retf
0x00000000000ef2c9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x83c6
0x00000000000f0159 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000000000b8c3a : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000011297c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3145
0x0000000000008f67 : add byte ptr [rdi], dh ; retf
0x000000000000cdc5 : add byte ptr [rdi], dl ; add al, ah ; ret 0x37
0x0000000000016875 : add byte ptr [rdi], dl ; add al, ah ; retf 0x37
0x0000000000017b95 : add byte ptr [rdi], dl ; add al, bh ; ret 0x37
0x000000000001fa6d : add byte ptr [rdi], dl ; add al, cl ; ret 0x37
0x00000000000218e5 : add byte ptr [rdi], dl ; add al, dh ; retf 0x37
0x0000000000015e0d : add byte ptr [rdi], dl ; add byte ptr [rax], al ; retf 0x37
0x00000000000238f5 : add byte ptr [rdi], dl ; add byte ptr [rax], bl ; retf 0x37
0x0000000000011fb5 : add byte ptr [rdi], dl ; add byte ptr [rax], ch ; ret
0x0000000000023c3d : add byte ptr [rdi], dl ; add byte ptr [rax], ch ; retf
0x000000000000e385 : add byte ptr [rdi], dl ; add byte ptr [rax], dh ; ret 0x37
0x000000000001a745 : add byte ptr [rdi], dl ; add byte ptr [rax], dl ; ret
0x000000000000e0fd : add byte ptr [rdi], dl ; add byte ptr [rax], dl ; retf
0x0000000000177999 : add byte ptr [rdx + 0x12a1240f], ch ; add ah, bh ; syscall
0x00000000000a384b : add byte ptr [rdx + 0x48], dh ; add esp, 8 ; ret
0x00000000000999a7 : add byte ptr [rdx + 0x63], cl ; add al, 0xaa ; add rax, rdx ; jmp rax
0x0000000000171adb : add byte ptr [rdx + 0x7d000002], cl ; cld ; call qword ptr [rcx]
0x000000000015dab3 : add byte ptr [rdx + 1], ah ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000015da93 : add byte ptr [rdx + 1], al ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000014bad3 : add byte ptr [rdx + rax + 0x15980000], al ; hlt ; jmp qword ptr [rdi]
0x000000000014baeb : add byte ptr [rdx + rax + 0x15b00000], bl ; hlt ; jmp qword ptr [rbx]
0x0000000000178896 : add byte ptr [rdx + rax + 0x2c705], dl ; ret 0x6302
0x0000000000163c3b : add byte ptr [rdx + rax*4 + 0x49400001], ch ; stc ; jmp rdi
0x0000000000167a9b : add byte ptr [rdx + rax*8 + 1], cl ; add al, dl ; xlatb ; stc ; call rax
0x000000000014baa3 : add byte ptr [rdx + rax], dl ; add byte ptr [rax + 0x15], bh ; hlt ; jmp qword ptr [rbx]
0x000000000016a283 : add byte ptr [rdx + rbp*8], dh ; add dword ptr [rax], eax ; or cl, cl ; cli ; jmp qword ptr [rdi]
0x0000000000148077 : add byte ptr [rdx + rbp], ah ; cli ; call rsp
0x000000000016e26b : add byte ptr [rdx + rbp], bl ; add al, byte ptr [rax] ; xchg eax, esp ; sti ; call qword ptr [rdi]
0x000000000016d303 : add byte ptr [rdx + rbx - 0x7cb7fffe], dh ; sti ; call qword ptr [rsi]
0x0000000000148a77 : add byte ptr [rdx + rbx*2], dh ; sti ; call rsp
0x0000000000147c37 : add byte ptr [rdx + rbx*4 - 7], dh ; jmp rsp
0x000000000016bbc7 : add byte ptr [rdx + rbx*8], al ; retf
0x000000000014c2f3 : add byte ptr [rdx + rcx + 0x1cb80000], ah ; hlt ; call qword ptr [rbx]
0x000000000014c30b : add byte ptr [rdx + rcx + 0x1cc00000], bh ; hlt ; call qword ptr [rdi]
0x0000000000144b87 : add byte ptr [rdx + rcx*4 - 0xb], dl ; call rsp
0x000000000014b08f : add byte ptr [rdx + rcx*4 - 2], al ; jmp rsp
0x0000000000113d5a : add byte ptr [rdx + rcx*8 + 0x48], dh ; mov edi, ebx ; call rax
0x000000000014489f : add byte ptr [rdx + rcx*8], ah ; hlt ; call rsp
0x000000000015839b : add byte ptr [rdx + rcx*8], cl ; add byte ptr [rax], al ; sar ah, 0xf6 ; call rdi
0x000000000014c2a3 : add byte ptr [rdx + rcx], dl ; add al, cl ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000016f2fb : add byte ptr [rdx + rdi - 0x58affffe], ch ; sti ; jmp qword ptr [rdx]
0x000000000016f2e3 : add byte ptr [rdx + rdi - 0x58c7fffe], dl ; sti ; jmp qword ptr [rdx]
0x00000000001673d3 : add byte ptr [rdx + rdi*4 + 1], al ; add byte ptr [rax], bh ; retf -7
0x00000000001583a7 : add byte ptr [rdx + rdi], al ; retf 1
0x0000000000146887 : add byte ptr [rdx + rdi], dh ; clc ; jmp rsp
0x000000000014a5af : add byte ptr [rdx + rdx - 2], ah ; call rsp
0x0000000000144d6f : add byte ptr [rdx + rdx*8], ah ; cmc ; call rsp
0x0000000000147287 : add byte ptr [rdx + rdx], dl ; stc ; call rsp
0x00000000001451b7 : add byte ptr [rdx + rsi - 0xa], dh ; call rsp
0x000000000014769f : add byte ptr [rdx + rsi - 7], al ; call rsp
0x0000000000152a6b : add byte ptr [rdx + rsi*2], bl ; add byte ptr [rax], al ; add byte ptr [rsi + rsi*8], cl ; call qword ptr [rbx]
0x0000000000146a97 : add byte ptr [rdx + rsi*2], dl ; clc ; call rsp
0x0000000000166b03 : add byte ptr [rdx + rsi*4 - 0x4457ffff], dh ; stc ; call qword ptr [rbx]
0x0000000000166ae3 : add byte ptr [rdx + rsi*4 - 0x4457ffff], dl ; stc ; jmp qword ptr [rax]
0x00000000000de36c : add byte ptr [rdx - 0x74b70006], bh ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001440e7 : add byte ptr [rdx - 0x7f], ah ; hlt ; jmp rsp
0x000000000015f530 : add byte ptr [rdx - 8], al ; call rdi
0x00000000000086f7 : add byte ptr [rdx], al ; retf
0x00000000000dbaac : add byte ptr [rdx], al ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000018417 : add byte ptr [rdx], ch ; retf
0x00000000000007cf : add byte ptr [rdx], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rax ; sti ; retf -0x5ef3
0x0000000000026277 : add byte ptr [rdx], cl ; retf
0x0000000000151ac3 : add byte ptr [rdx], dh ; add al, cl ; retf -0xb
0x000000000014877f : add byte ptr [rdx], dh ; sti ; jmp rsp
0x0000000000025cdf : add byte ptr [rdx], dl ; ret
0x0000000000070198 : add byte ptr [rip + 0x14], dl ; add byte ptr [rax], al ; cwde ; retf
0x00000000001588a7 : add byte ptr [rsi + 0x39], dh ; jmp qword ptr [rdi]
0x00000000000b3f2a : add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], esi ; add qword ptr [rdi], 2 ; ret
0x00000000000b3ec7 : add byte ptr [rsi + 0xe], dh ; mov eax, 0xffffffff ; ret
0x000000000001cc87 : add byte ptr [rsi + 3], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014befb : add byte ptr [rsi + rax + 0x1aa00000], ch ; hlt ; call qword ptr [rdx]
0x000000000015fedb : add byte ptr [rsi + rax*2 + 0x4e300001], cl ; clc ; jmp qword ptr [rdx]
0x000000000015fec3 : add byte ptr [rsi + rax*2 + 1], dh ; add byte ptr [rax], bl ; clc ; jmp qword ptr [rdx]
0x0000000000148d47 : add byte ptr [rsi + rax*4], ah ; sti ; call rsp
0x0000000000153ea3 : add byte ptr [rsi + rax*4], dl ; add al, bh ; sub esi, esi ; call qword ptr [rdx]
0x00000000001495af : add byte ptr [rsi + rax], dh ; cld ; call rsp
0x000000000016e69b : add byte ptr [rsi + rbp + 2], cl ; add al, dh ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x000000000016e6fb : add byte ptr [rsi + rbp - 0x67effffe], ch ; sti ; call qword ptr [rbx]
0x000000000016e6e3 : add byte ptr [rsi + rbp - 0x67f7fffe], dl ; sti ; call qword ptr [rbx]
0x0000000000147637 : add byte ptr [rsi + rbp - 7], al ; jmp rsp
0x00000000001666b3 : add byte ptr [rsi + rbp*4 + 1], ah ; add byte ptr [rax - 0x47], bl ; stc ; jmp qword ptr [rax]
0x0000000000166693 : add byte ptr [rsi + rbp*4 + 1], al ; add byte ptr [rax - 0x47], bl ; stc ; jmp qword ptr [rax]
0x00000000001666f3 : add byte ptr [rsi + rbp*4 - 0x46a7ffff], ah ; stc ; jmp qword ptr [rax]
0x00000000001666d3 : add byte ptr [rsi + rbp*4 - 0x46a7ffff], al ; stc ; jmp qword ptr [rax]
0x0000000000146c2f : add byte ptr [rsi + rbp*4 - 8], dh ; jmp rsp
0x000000000016bd57 : add byte ptr [rsi + rbp*4], al ; retf 0
0x0000000000146f2f : add byte ptr [rsi + rbp*8], al ; clc ; jmp rsp
0x0000000000149987 : add byte ptr [rsi + rbp*8], dh ; cld ; jmp rsp
0x000000000016e653 : add byte ptr [rsi + rbp], al ; add al, byte ptr [rax] ; clc ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x000000000014506f : add byte ptr [rsi + rbx - 0xa], al ; call rsp
0x00000000001716e3 : add byte ptr [rsi + rbx*2 + 0x7a580002], dl ; cld ; call qword ptr [rdx]
0x00000000001716cb : add byte ptr [rsi + rbx*2 + 2], bh ; add byte ptr [rax + 0x7a], dl ; cld ; call qword ptr [rdx]
0x0000000000147a8f : add byte ptr [rsi + rbx*2 - 7], dl ; jmp rsp
0x000000000016583b : add byte ptr [rsi + rbx*4 - 0x726fffff], ch ; stc ; jmp qword ptr [rdi]
0x000000000014b0ef : add byte ptr [rsi + rbx*4 - 2], dl ; dec esp ; ret 2
0x00000000001556cb : add byte ptr [rsi + rbx*4], bh ; add al, dh ; movsxd rsi, esi ; call rax
0x00000000001696bb : add byte ptr [rsi + rbx*8 + 1], ch ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000001696d3 : add byte ptr [rsi + rbx*8 - 0x5817ffff], al ; cli ; call qword ptr [rbx]
0x0000000000169673 : add byte ptr [rsi + rbx*8], ah ; add dword ptr [rax], eax ; test al, 0xa7 ; cli ; call qword ptr [rcx]
0x000000000016968b : add byte ptr [rsi + rbx*8], bh ; add dword ptr [rax], eax ; mov al, 0xa7 ; cli ; call qword ptr [rbx]
0x000000000014c6d3 : add byte ptr [rsi + rcx + 0x1e980000], al ; hlt ; call qword ptr [rbx]
0x000000000014c6eb : add byte ptr [rsi + rcx + 0x1ea00000], bl ; hlt ; call qword ptr [rbx]
0x000000000016c6d3 : add byte ptr [rsi + rcx + 0x79680002], al ; sti ; jmp qword ptr [rdx]
0x000000000014a527 : add byte ptr [rsi + rcx - 2], al ; call rsp
0x000000000016069b : add byte ptr [rsi + rcx*2 + 1], cl ; add byte ptr [rax + 0x7c], dl ; clc ; call qword ptr [rcx]
0x000000000014ac9f : add byte ptr [rsi + rcx*2 - 2], dh ; call rsp
0x00000000001486c7 : add byte ptr [rsi + rcx], al ; sti ; call rsp
0x000000000015f6eb : add byte ptr [rsi + rdi + 0x43e00001], bl ; clc ; call qword ptr [rbx]
0x000000000015f6a3 : add byte ptr [rsi + rdi + 1], dl ; add al, ch ; clc ; call qword ptr [rbx]
0x000000000016b6bb : add byte ptr [rsi + rdi*8 + 1], ch ; add byte ptr [rax + 0x2b], al ; sti ; jmp qword ptr [rbx]
0x000000000015f68b : add byte ptr [rsi + rdi], bh ; add dword ptr [rax], eax ; loopne 0x15f6dd ; clc ; call qword ptr [rbx]
0x000000000014cee3 : add byte ptr [rsi + rdx + 0x2e680000], dl ; hlt ; call qword ptr [rcx]
0x000000000016cedb : add byte ptr [rsi + rdx - 0x7faffffe], cl ; sti ; jmp qword ptr [rsi]
0x0000000000154e63 : add byte ptr [rsi + rdx*4], dl ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rdx]
0x00000000000bf6de : add byte ptr [rsi + rdx*8 + 0x4c], dh ; mov esi, edi ; call 0x8c1d6
0x0000000000158e93 : add byte ptr [rsi + rdx*8], al ; add byte ptr [rax], bh ; and al, 0xf7 ; jmp qword ptr [rbx]
0x000000000014ce83 : add byte ptr [rsi + rdx], dh ; add byte ptr [rax], al ; js 0x14cec0 ; hlt ; call qword ptr [rcx]
0x0000000000162ffb : add byte ptr [rsi + rsi*2 + 1], ch ; add byte ptr [rax + 0x2a], dh ; stc ; call rdi
0x0000000000162fa3 : add byte ptr [rsi + rsi*2], dl ; add dword ptr [rax], eax ; fsubr dword ptr [rcx] ; stc ; jmp rdi
0x0000000000166ecb : add byte ptr [rsi + rsi*4 + 1], bh ; add byte ptr [rax], al ; ret
0x0000000000156eb3 : add byte ptr [rsi + rsi*4], ah ; add al, cl ; ret
0x0000000000166e73 : add byte ptr [rsi + rsi*4], ah ; add dword ptr [rax], eax ; mov dl, al ; stc ; jmp qword ptr [rdx]
0x0000000000152a70 : add byte ptr [rsi + rsi*8], cl ; call qword ptr [rbx]
0x000000000015203b : add byte ptr [rsi - 0x15900000], ch ; cmc ; jmp qword ptr [rsi]
0x000000000013cdf0 : add byte ptr [rsi - 0x59ff000b], ah ; cmc ; call rax
0x0000000000124d7d : add byte ptr [rsi - 0x70], ah ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000124d5d : add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000001274bd : add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi], rsi ; ret
0x00000000000a541d : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000000d2b9d : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi] ; ret
0x00000000000d2bad : add byte ptr [rsi - 0x70], ah ; mov rax, rdi ; ret
0x00000000000d282d : add byte ptr [rsi - 0x70], ah ; mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x00000000000b302d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000000b46cd : add byte ptr [rsi - 0x70], ah ; test byte ptr [rsi], 4 ; jne 0xb46e9 ; ret
0x0000000000150330 : add byte ptr [rsi - 0xb], bl ; call qword ptr [rax]
0x0000000000166d8b : add byte ptr [rsi*4 - 0x3e6fffff], bh ; stc ; jmp qword ptr [rdx]
0x000000000016aea3 : add byte ptr [rsi*8 - 0x857ffff], dl ; cli ; jmp rdx
0x0000000000022d07 : add byte ptr [rsi], bh ; ret
0x00000000000140d7 : add byte ptr [rsi], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x77
0x000000000001aa37 : add byte ptr [rsi], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000171c93 : add byte ptr [rsp + 2], al ; add byte ptr [rax - 0x80], ch ; cld ; call qword ptr [rcx]
0x000000000014bce3 : add byte ptr [rsp + rax + 0x1a680000], dl ; hlt ; call qword ptr [rdi]
0x000000000015fcdb : add byte ptr [rsp + rax*2 + 0x4b500001], cl ; clc ; jmp qword ptr [rdx]
0x000000000014fcf3 : add byte ptr [rsp + rax*2 + 0x58b80000], ah ; cmc ; call qword ptr [rbx]
0x000000000014fcd3 : add byte ptr [rsp + rax*2 + 0x58b80000], al ; cmc ; call qword ptr [rdx]
0x000000000014fd0b : add byte ptr [rsp + rax*2 + 0x58c00000], bh ; cmc ; call qword ptr [rdx]
0x000000000015fcc3 : add byte ptr [rsp + rax*2 + 1], dh ; add byte ptr [rax], bh ; clc ; jmp qword ptr [rdx]
0x000000000014fc83 : add byte ptr [rsp + rax*2], dh ; add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rbx]
0x000000000014fc63 : add byte ptr [rsp + rax*2], dl ; add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rdx]
0x000000000014bccb : add byte ptr [rsp + rax], bh ; add byte ptr [rax + 0x1a], ah ; hlt ; jmp qword ptr [rax]
0x000000000014bc6b : add byte ptr [rsp + rax], bl ; add byte ptr [rax], al ; sbb sil, spl ; jmp qword ptr [rax]
0x000000000014bc83 : add byte ptr [rsp + rax], dh ; add byte ptr [rax], al ; sbb sil, spl ; call qword ptr [rdi]
0x000000000016e49b : add byte ptr [rsp + rbp + 2], cl ; add byte ptr [rax], al ; xchg eax, edi ; sti ; call qword ptr [rdi]
0x00000000001624eb : add byte ptr [rsp + rbp*2 + 0xcf00001], bl ; stc ; call rdx
0x000000000016650b : add byte ptr [rsp + rbp*4 - 0x470fffff], bh ; stc ; call qword ptr [rbx]
0x00000000001664f3 : add byte ptr [rsp + rbp*4 - 0x4717ffff], ah ; stc ; call qword ptr [rbx]
0x000000000014a74f : add byte ptr [rsp + rbx - 2], dl ; jmp rsp
0x00000000001714a3 : add byte ptr [rsp + rbx*2 + 2], dl ; add byte ptr [rax + 0x77], bh ; cld ; jmp rax
0x000000000014b587 : add byte ptr [rsp + rbx*2 - 1], al ; call rsp
0x000000000017148b : add byte ptr [rsp + rbx*2], bh ; add al, byte ptr [rax] ; jo 0x171511 ; cld ; jmp qword ptr [rax]
0x0000000000148abf : add byte ptr [rsp + rbx*2], dh ; sti ; jmp rsp
0x00000000001655fb : add byte ptr [rsp + rbx*4 + 1], ch ; add al, dl ; test edi, ecx ; jmp qword ptr [rdi]
0x0000000000165643 : add byte ptr [rsp + rbx*4 - 0x7937ffff], dh ; stc ; jmp qword ptr [rdi]
0x000000000016d5b3 : add byte ptr [rsp + rbx], ah ; add al, byte ptr [rax] ; pop rax ; test edi, ebx ; call qword ptr [rdx]
0x000000000014d493 : add byte ptr [rsp + rbx], al ; add al, cl ; xor al, 0xf4 ; call qword ptr [rbx]
0x000000000014d4ab : add byte ptr [rsp + rbx], bl ; add al, dl ; xor al, 0xf4 ; call qword ptr [rdi]
0x000000000014c4db : add byte ptr [rsp + rcx + 0x1d400000], cl ; hlt ; call qword ptr [rdi]
0x00000000001481af : add byte ptr [rsp + rcx*2], al ; cli ; call rsp
0x000000000016448b : add byte ptr [rsp + rcx*4], bh ; add dword ptr [rax], eax ; pop rax ; stc ; call qword ptr [rbx]
0x00000000001684e3 : add byte ptr [rsp + rcx*8 + 0xbf80001], dl ; cli ; jmp qword ptr [rdx]
0x0000000000168483 : add byte ptr [rsp + rcx*8], dh ; add dword ptr [rax], eax ; call 0x23167e9e
0x000000000014c463 : add byte ptr [rsp + rcx], dl ; add byte ptr [rax], al ; call 0x1814b891
0x000000000014f4e3 : add byte ptr [rsp + rdi + 0x20280000], dl ; cmc ; call qword ptr [rdi]
0x0000000000167493 : add byte ptr [rsp + rdi*4 + 1], al ; add byte ptr [rax], bh ; retf
0x0000000000147e77 : add byte ptr [rsp + rdi*8], al ; stc ; call rsp
0x000000000015b46b : add byte ptr [rsp + rdi*8], bl ; add byte ptr [rax], al ; mov esi, edi ; call qword ptr [rcx]
0x000000000014f4cb : add byte ptr [rsp + rdi], bh ; add byte ptr [rax], ah ; and ch, dh ; jmp qword ptr [rax]
0x000000000014f46b : add byte ptr [rsp + rdi], bl ; add byte ptr [rax], al ; add byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x000000000014f483 : add byte ptr [rsp + rdi], dh ; add byte ptr [rax], al ; or byte ptr [rax], ah ; cmc ; call qword ptr [rdi]
0x0000000000148027 : add byte ptr [rsp + rdx - 6], dl ; jmp rsp
0x0000000000150e43 : add byte ptr [rsp + rdx*2 - 0x71580000], dh ; cmc ; jmp qword ptr [rax]
0x000000000014526f : add byte ptr [rsp + rdx*2 - 0xa], ah ; jmp rsp
0x0000000000150da3 : add byte ptr [rsp + rdx*2], dl ; add byte ptr [rax], al ; js 0x150d39 ; cmc ; call qword ptr [rdi]
0x0000000000144207 : add byte ptr [rsp + rdx*4], al ; hlt ; call rsp
0x0000000000162e23 : add byte ptr [rsp + rsi*2 + 0x26680001], dl ; stc ; call rdi
0x0000000000166cbb : add byte ptr [rsp + rsi*4 + 1], ch ; add byte ptr [rax - 0x40], al ; stc ; jmp qword ptr [rdx]
0x0000000000166de3 : add byte ptr [rsp + rsi*4 + 1], dl ; add byte ptr [rax], ch ; ret 0xfff9
0x0000000000166cd3 : add byte ptr [rsp + rsi*4 - 0x3fa7ffff], al ; stc ; jmp qword ptr [rdx]
0x000000000016ec63 : add byte ptr [rsp + rsi], dl ; add al, byte ptr [rax] ; test al, 0x9a ; sti ; jmp qword ptr [rax]
0x000000000014b11f : add byte ptr [rsp - 2], dl ; call rsp
0x000000000014832f : add byte ptr [rsp - 6], al ; call rsp
0x0000000000146a1f : add byte ptr [rsp - 8], ah ; jmp rsp
0x0000000000157be4 : add byte ptr cs:[eax], al ; cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000000a3735 : add byte ptr cs:[rax - 0x77], cl ; ret
0x00000000000a385d : add byte ptr cs:[rax - 0x7d], cl ; cmp byte ptr [rax], al ; je 0xa3889 ; ret
0x0000000000095eb1 : add byte ptr cs:[rax], al ; add cl, ch ; ret
0x0000000000157be5 : add byte ptr cs:[rax], al ; cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x000000000014e73d : add byte ptr cs:[rax], al ; rcr bh, 0xf4 ; jmp qword ptr [rdx]
0x00000000000a1b38 : add byte ptr cs:[rbx + 0x48], bl ; mov eax, dword ptr [rax] ; ret
0x00000000000141b9 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; lldt word ptr [rax] ; ret
0x0000000000025cd9 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; lldt word ptr [rdx] ; ret
0x0000000000023ad1 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; ltr di ; ret 0x13
0x0000000000025d09 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; sldt word ptr [rax] ; ret
0x00000000000239b1 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; sldt word ptr [rbx] ; ret
0x00000000000141a1 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; sldt word ptr [rdi] ; ret
0x0000000000025c79 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; str word ptr [rcx] ; ret
0x0000000000025e89 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; verr bp ; ret 0x13
0x0000000000014429 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; verr bx ; ret 0x13
0x0000000000023b01 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; verw ax ; ret 0x13
0x00000000000261a1 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; verw si ; ret 0x13
0x00000000000147b9 : add byte ptr es:[rax], al ; and dword ptr [rax], eax ; verw sp ; ret 0x13
0x0000000000113d59 : add byte ptr es:[rdx + rcx*8 + 0x48], dh ; mov edi, ebx ; call rax
0x000000000001998f : add ch, ah ; ret
0x0000000000025e8f : add ch, ah ; ret 0x13
0x00000000000fd095 : add ch, al ; adc eax, 0xebfff8ea ; ret
0x000000000000c7f7 : add ch, al ; ret
0x0000000000173179 : add ch, ch ; syscall
0x0000000000023a5f : add ch, cl ; ret 0x13
0x00000000001744df : add ch, dh ; add eax, 0x11eb05 ; retf
0x0000000000014837 : add ch, dh ; ret 0x13
0x00000000000208d7 : add ch, dh ; retf 1
0x0000000000013a1f : add ch, dl ; ret
0x00000000000131f7 : add cl, al ; ret
0x000000000002606f : add cl, al ; ret 0x13
0x0000000000002933 : add cl, al ; sldt word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008dcf : add cl, bh ; retf 0
0x0000000000138bb6 : add cl, bpl ; ret
0x000000000010f5be : add cl, bpl ; stosd dword ptr [rdi], eax ; ret 0xfff7
0x00000000000cf73a : add cl, byte ptr [rax + 0x39] ; ret 0x8c0f
0x00000000000e56e1 : add cl, byte ptr [rax + 0x39] ; retf -0x76b7
0x00000000000b345d : add cl, byte ptr [rax + 0x39] ; retf 0x2574
0x0000000000124ab6 : add cl, byte ptr [rax + 1] ; ja 0x124ad0 ; ret
0x0000000000124b06 : add cl, byte ptr [rax + 1] ; ja 0x124b38 ; ret
0x0000000000124b83 : add cl, byte ptr [rax + 1] ; ja 0x124b9d ; ret
0x0000000000124b93 : add cl, byte ptr [rax + 1] ; ja 0x124bc5 ; ret
0x00000000000d674f : add cl, byte ptr [rax + 1] ; ret
0x00000000000cf762 : add cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000000a1539 : add cl, byte ptr [rax - 0x77] ; push rax ; or bl, al ; nop ; ret
0x00000000000cba2f : add cl, byte ptr [rax - 0x77] ; ret
0x000000000011ea8b : add cl, byte ptr [rax - 0x77] ; xor r11b, r14b ; ret
0x00000000000d6f09 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + 9], cl ; ret
0x00000000000fc5f8 : add cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000008d123 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000000aa267 : add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x000000000009976d : add cl, byte ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000004935 : add cl, byte ptr [rax] ; nop ; ret
0x00000000001204e1 : add cl, byte ptr [rcx + 0x29] ; retf -0x76b4
0x000000000012cdc3 : add cl, byte ptr [rcx - 0x3b7cb7fd] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009d36c : add cl, byte ptr [rdi + rcx - 0x51] ; ret 0x3949
0x0000000000137b1d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1f0f
0x000000000015b1e5 : add cl, byte ptr [rsi + rcx + 8] ; ret
0x00000000000936f7 : add cl, ch ; ret
0x0000000000093c03 : add cl, ch ; ret 0xfffb
0x00000000000d7eaf : add cl, ch ; retf
0x00000000000e0273 : add cl, ch ; retf -2
0x00000000000aa070 : add cl, ch ; retf -4
0x000000000013592d : add cl, ch ; retf -7
0x0000000000008727 : add cl, ch ; retf 0
0x000000000008df8f : add cl, ch ; sti ; ret 0xffff
0x000000000010f5bf : add cl, ch ; stosd dword ptr [rdi], eax ; ret 0xfff7
0x0000000000023e7f : add cl, dh ; ret 0x13
0x0000000000014357 : add cl, dl ; ret 0x13
0x00000000000fc81a : add dh, ah ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012539b : add dh, al ; adc byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; ret
0x00000000000ddbce : add dh, al ; adc byte ptr [r8], r8b ; mov qword ptr [rdi], rdx ; ret
0x0000000000125410 : add dh, al ; adc byte ptr [rax], r8b ; ret
0x000000000012550e : add dh, al ; add al, byte ptr [rax] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012548b : add dh, al ; add byte ptr [rax], al ; ret
0x00000000000916dc : add dh, al ; and al, 0x46 ; add dword ptr [rax + 0x29], ecx ; ret 0x8548
0x00000000000b21c6 : add dh, al ; or byte ptr [r8], r8b ; ret
0x000000000000260b : add dh, al ; or eax, 0 ; add byte ptr [rax], al ; retf 0xd
0x0000000000104403 : add dh, al ; xchg dword ptr [rax + 1], ecx ; ret
0x0000000000128c03 : add dh, al ; xchg dword ptr [rax], ebx ; ret
0x00000000000141d7 : add dh, bh ; ret 0x13
0x000000000008cb98 : add dh, bl ; ret
0x00000000000a0d2c : add dh, byte ptr [rbp + rdx - 0xd] ; ret
0x0000000000178571 : add dh, byte ptr [rdi + 0x5b301] ; ret
0x00000000000b416f : add dh, byte ptr [rdi + 6] ; ret
0x00000000000261a7 : add dh, ch ; ret 0x13
0x000000000000b307 : add dh, ch ; ret 1
0x00000000001523a9 : add dh, dh ; jmp rcx
0x00000000000f16a9 : add dh, dh ; ret 0x4808
0x00000000000f0fb0 : add dh, dh ; ret 0x4810
0x0000000000023aa7 : add dh, dl ; ret 0x13
0x0000000000003dae : add dl, ah ; retf -0x40c3
0x0000000000023e97 : add dl, bh ; ret 0x13
0x000000000001439f : add dl, bl ; ret 0x13
0x0000000000152575 : add dl, byte ptr [rcx + 0xa] ; ret
0x0000000000025dcf : add dl, cl ; ret 0x13
0x0000000000173174 : add dl, cl ; syscall
0x000000000015f9b5 : add dword ptr [r8], eax ; call 0xffffffffd115f208
0x000000000015f9f5 : add dword ptr [r8], eax ; js 0x15fa46 ; clc ; call rax
0x000000000015fa35 : add dword ptr [r8], eax ; or byte ptr [rdi - 8], al ; call rax
0x000000000015ffdd : add dword ptr [r8], r8d ; add byte ptr [rax - 8], dl ; jmp qword ptr [rdx]
0x000000000015fddd : add dword ptr [r8], r8d ; and byte ptr [rbp - 8], cl ; jmp qword ptr [rdx]
0x00000000000916e1 : add dword ptr [rax + 0x29], ecx ; ret 0x8548
0x00000000000916e0 : add dword ptr [rax + 0x29], r9d ; ret 0x8548
0x00000000001075a9 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000da9ed : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x000000000013ad38 : add dword ptr [rax + 0x39], ecx ; retf -0xd8b
0x0000000000127029 : add dword ptr [rax + 0x39], ecx ; retf -0xe8b
0x0000000000173bff : add dword ptr [rax + 0x508], ebp ; retf
0x00000000000db923 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000109302 : add dword ptr [rax + 0x63], ecx ; ret 0x9589
0x000000000008fd7d : add dword ptr [rax + rcx + 0x5b], esi ; ret
0x00000000000a1d69 : add dword ptr [rax + rdx + 0x5b], esi ; ret
0x0000000000092749 : add dword ptr [rax - 0x75], ecx ; add al, 0xc8 ; ret
0x000000000010dadf : add dword ptr [rax - 0x75], ecx ; jl 0x10db10 ; sbb byte ptr [rax - 0x77], cl ; ret 0xf631
0x000000000010e57f : add dword ptr [rax - 0x75], ecx ; jl 0x10e5b0 ; sbb byte ptr [rax - 0x77], cl ; ret 0xf631
0x00000000000a8c12 : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r8 + 0x39], cl ; ret 0x860f
0x00000000000aa1a1 : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000000928e7 : add dword ptr [rax - 0x77], ecx ; add al, 0xf1 ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x00000000000a3906 : add dword ptr [rax - 0x77], ecx ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000093ffc : add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x0000000000000b55 : add dword ptr [rax - 0x7a], eax ; xchg eax, ebx ; adc eax, esp ; ret 0x1400
0x00000000000929e7 : add dword ptr [rax - 0x7b], ecx ; push qword ptr [rbp - 0x15] ; xor eax, eax ; ret
0x00000000000b521c : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a1e7c : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000009953c : add dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x0000000000109e63 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000008fa89 : add dword ptr [rax - 0x80], 1 ; ret
0x0000000000125019 : add dword ptr [rax - 0xa], -1 ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000001443dd : add dword ptr [rax], 0xf49eb400 ; jmp rsp
0x00000000000a391b : add dword ptr [rax], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a15b0 : add dword ptr [rax], 1 ; ret
0x0000000000147286 : add dword ptr [rax], eax ; adc al, 0x12 ; stc ; call rsp
0x00000000001472be : add dword ptr [rax], eax ; adc al, 0x15 ; stc ; jmp rsp
0x0000000000148916 : add dword ptr [rax], eax ; adc al, 0x49 ; sti ; jmp rsp
0x0000000000146a96 : add dword ptr [rax], eax ; adc al, 0x72 ; clc ; call rsp
0x0000000000147d76 : add dword ptr [rax], eax ; adc al, 0xe1 ; stc ; call rsp
0x0000000000163f8e : add dword ptr [rax], eax ; adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x00000000001474ee : add dword ptr [rax], eax ; add al, 0x21 ; stc ; call rsp
0x00000000001481ae : add dword ptr [rax], eax ; add al, 0x4c ; cli ; call rsp
0x000000000014796e : add dword ptr [rax], eax ; add al, 0x4f ; stc ; call rsp
0x000000000014898e : add dword ptr [rax], eax ; add al, 0x51 ; sti ; jmp rsp
0x00000000001486c6 : add dword ptr [rax], eax ; add al, 0xe ; sti ; call rsp
0x0000000000146de6 : add dword ptr [rax], eax ; add al, 0xe8 ; clc ; jmp rsp
0x0000000000146e36 : add dword ptr [rax], eax ; add al, 0xe9 ; clc ; call rsp
0x0000000000146f2e : add dword ptr [rax], eax ; add al, 0xee ; clc ; jmp rsp
0x0000000000147e76 : add dword ptr [rax], eax ; add al, 0xfc ; stc ; call rsp
0x00000000000ea44e : add dword ptr [rax], eax ; add al, ch ; retf -0x14
0x00000000000f881e : add dword ptr [rax], eax ; add al, ch ; retf -0x6d8
0x00000000001671ce : add dword ptr [rax], eax ; add al, cl ; stc ; jmp qword ptr [rdx]
0x000000000009ace6 : add dword ptr [rax], eax ; add bl, ch ; ret 0x1f0f
0x00000000000935cb : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf -0x67b8
0x0000000000091acb : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000099765 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; retf -0x76b8
0x000000000009d016 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x77], r9b ; retf 0x2948
0x00000000000df688 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jl 0xdf6bc ; xor al, ch ; retf
0x00000000000c888b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc ebp, eax ; retf -0x3dd
0x0000000000104170 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; pop rax ; ret
0x0000000000096424 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x21e8
0x00000000000933bd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x58e9
0x000000000009903a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x840f
0x00000000000a16f0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a1748 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000d52fd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000104c94 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x3f7c
0x000000000008e7fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015ffde : add dword ptr [rax], eax ; add byte ptr [rax - 8], dl ; jmp qword ptr [rdx]
0x0000000000099afb : add dword ptr [rax], eax ; add byte ptr [rax], ah ; jmp 0x965a5
0x0000000000018d28 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; popfq ; ret
0x000000000000b228 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ef90 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf8
0x000000000000c818 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000208d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dh ; retf 1
0x00000000000b3f6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add qword ptr [rdi], 2 ; ret
0x00000000000b418d : add dword ptr [rax], eax ; add byte ptr [rax], al ; add qword ptr [rdi], 3 ; ret
0x00000000000b7c22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007ed40 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000740a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [rcx]
0x000000000010d482 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x10d458
0x000000000010df22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x10def8
0x0000000000132bcd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x132ba3
0x00000000001336dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x1336b3
0x00000000000a19f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xa19cf
0x00000000000e0fb6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xe0f8c
0x00000000000e23f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xe23cc
0x00000000000eb72d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xeb703
0x00000000000ecb3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xecb13
0x0000000000129925 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rax ; ret
0x00000000000b3e2f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; ret
0x00000000000b5796 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000b43f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000071bd0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007f178 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x11
0x00000000000821d8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x13
0x0000000000078128 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 6
0x0000000000074ae0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf
0x00000000000756b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x10
0x0000000000074ca8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0x13
0x000000000007f2b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0xa
0x0000000000076be0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 0xf
0x00000000000793a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 6
0x0000000000074b58 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 7
0x0000000000075140 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 8
0x000000000007b9f8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; retf 9
0x000000000008db61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg byte ptr [rdi], al ; ret
0x0000000000092a26 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000014b965 : add dword ptr [rax], eax ; add byte ptr [rax], bl ; adc dh, ah ; jmp qword ptr [rdi]
0x000000000014b97d : add dword ptr [rax], eax ; add byte ptr [rax], dh ; adc dh, ah ; jmp qword ptr [rax]
0x00000000000e7b55 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; retf
0x00000000000df879 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; retf
0x00000000000b7462 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000b761b : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015821d : add dword ptr [rax], eax ; add byte ptr [rbx + rbx*2], al ; retf
0x000000000016bcd5 : add dword ptr [rax], eax ; add byte ptr [rbx + rdi*8], al ; retf 0
0x00000000000f6425 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x17], bl ; ret 0xf94c
0x00000000000f9499 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000016bc35 : add dword ptr [rax], eax ; add byte ptr [rcx + rdi*2], al ; retf
0x0000000000106d55 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000009b42f : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016bd1d : add dword ptr [rax], eax ; add byte ptr [rdi + rax*8], al ; retf 0
0x000000000015831d : add dword ptr [rax], eax ; add byte ptr [rdi], al ; retf 1
0x0000000000099691 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test dword ptr [rsi], esi ; retf
0x000000000015f52e : add dword ptr [rax], eax ; add byte ptr [rdx - 8], al ; call rdi
0x000000000016bd55 : add dword ptr [rax], eax ; add byte ptr [rsi + rbp*4], al ; retf 0
0x0000000000147146 : add dword ptr [rax], eax ; add ecx, r15d ; jmp rsp
0x0000000000148076 : add dword ptr [rax], eax ; and al, 0x2a ; cli ; call rsp
0x00000000001481fe : add dword ptr [rax], eax ; and al, 0x4f ; cli ; call qword ptr [rbx + rcx*8]
0x0000000000146ac6 : add dword ptr [rax], eax ; and al, 0x75 ; clc ; call rsp
0x0000000000147cc6 : add dword ptr [rax], eax ; and al, 0xa0 ; stc ; jmp rsp
0x000000000015fdde : add dword ptr [rax], eax ; and byte ptr [rbp - 8], cl ; jmp qword ptr [rdx]
0x0000000000161346 : add dword ptr [rax], eax ; call 0x13160c1f
0x000000000015da16 : add dword ptr [rax], eax ; call 0x1415d1d5
0x000000000015f6a6 : add dword ptr [rax], eax ; call 0x1415eef5
0x00000000001660b6 : add dword ptr [rax], eax ; call 0x14165a6f
0x00000000001664f6 : add dword ptr [rax], eax ; call 0x14165eba
0x0000000000166556 : add dword ptr [rax], eax ; call 0x14165f1a
0x0000000000169216 : add dword ptr [rax], eax ; call 0x14168cbf
0x00000000001696d6 : add dword ptr [rax], eax ; call 0x14169189
0x00000000001671b6 : add dword ptr [rax], eax ; call 0x23166b89
0x0000000000168486 : add dword ptr [rax], eax ; call 0x23167e9b
0x0000000000166116 : add dword ptr [rax], eax ; call 0x28165ad0
0x00000000001698c6 : add dword ptr [rax], eax ; call 0x2816937f
0x000000000015f9b6 : add dword ptr [rax], eax ; call 0xffffffffd115f207
0x00000000001609c6 : add dword ptr [rax], eax ; call 0xffffffffd2160252
0x000000000015f736 : add dword ptr [rax], eax ; clc ; clc ; call qword ptr [rbx]
0x0000000000146a1e : add dword ptr [rax], eax ; clc ; jmp rsp
0x000000000015da46 : add dword ptr [rax], eax ; clc ; mov bl, 0xf7 ; call qword ptr [rbx]
0x00000000001684e6 : add dword ptr [rax], eax ; clc ; or edi, edx ; jmp qword ptr [rdx]
0x0000000000147d96 : add dword ptr [rax], eax ; clc ; stc ; call rsp
0x000000000015fcc6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 8], cl ; jmp qword ptr [rdx]
0x00000000001657f6 : add dword ptr [rax], eax ; cwde ; mov ecx, dr1 ; jmp qword ptr [rdi]
0x000000000016a0a6 : add dword ptr [rax], eax ; cwde ; ret 0xfffa
0x000000000016a376 : add dword ptr [rax], eax ; cwde ; retf
0x0000000000167436 : add dword ptr [rax], eax ; cwde ; retf -7
0x0000000000166f46 : add dword ptr [rax], eax ; fadd st(3) ; stc ; jmp qword ptr [rdx]
0x0000000000167976 : add dword ptr [rax], eax ; fcom st(0) ; stc ; call rcx
0x0000000000162fa6 : add dword ptr [rax], eax ; fsubr dword ptr [rcx] ; stc ; jmp rdi
0x0000000000147fe6 : add dword ptr [rax], eax ; hlt ; adc edx, edi ; jmp rsp
0x0000000000147e36 : add dword ptr [rax], eax ; hlt ; cli ; stc ; call rsp
0x00000000001489de : add dword ptr [rax], eax ; hlt ; push rcx ; sti ; jmp rsp
0x000000000014781e : add dword ptr [rax], eax ; hlt ; stc ; call rsp
0x0000000000146ed6 : add dword ptr [rax], eax ; in al, -0x16 ; clc ; call rsp
0x0000000000148536 : add dword ptr [rax], eax ; in al, -0x1e ; cli ; jmp rsp
0x0000000000148046 : add dword ptr [rax], eax ; in al, 0x27 ; cli ; call rsp
0x0000000000147666 : add dword ptr [rax], eax ; in al, 0x2f ; stc ; call rsp
0x00000000001467c6 : add dword ptr [rax], eax ; in al, 0x31 ; clc ; jmp rsp
0x000000000014792e : add dword ptr [rax], eax ; in al, 0x4d ; stc ; call rsp
0x00000000001479a6 : add dword ptr [rax], eax ; in al, 0x50 ; stc ; call rsp
0x00000000001466d6 : add dword ptr [rax], eax ; in al, 0xc ; clc ; call rsp
0x0000000000146696 : add dword ptr [rax], eax ; in al, 8 ; clc ; call rsp
0x0000000000146c2e : add dword ptr [rax], eax ; je 0x146be5 ; clc ; jmp rsp
0x00000000001475ce : add dword ptr [rax], eax ; je 0x147600 ; stc ; jmp rsp
0x0000000000147c36 : add dword ptr [rax], eax ; je 0x147bd9 ; stc ; jmp rsp
0x0000000000148936 : add dword ptr [rax], eax ; je 0x14898a ; sti ; call rsp
0x0000000000160606 : add dword ptr [rax], eax ; je 0x160608 ; call qword ptr [rdx]
0x0000000000147bb6 : add dword ptr [rax], eax ; jg 0x147bb9 ; call rsp
0x0000000000160a1e : add dword ptr [rax], eax ; jo 0x1609a8 ; clc ; call rcx
0x0000000000162ffe : add dword ptr [rax], eax ; jo 0x163031 ; stc ; call rdi
0x00000000001693ae : add dword ptr [rax], eax ; jo 0x169358 ; cli ; call qword ptr [rbx]
0x000000000015f926 : add dword ptr [rax], eax ; js 0x15f973 ; clc ; call qword ptr [rdx]
0x000000000015f925 : add dword ptr [rax], eax ; js 0x15f974 ; clc ; call qword ptr [rdx]
0x000000000015f946 : add dword ptr [rax], eax ; js 0x15f993 ; clc ; call qword ptr [rbx]
0x000000000015f945 : add dword ptr [rax], eax ; js 0x15f994 ; clc ; call qword ptr [rbx]
0x000000000015f9f6 : add dword ptr [rax], eax ; js 0x15fa45 ; clc ; call rax
0x0000000000162676 : add dword ptr [rax], eax ; js 0x162691 ; stc ; jmp rsp
0x00000000001654b6 : add dword ptr [rax], eax ; js 0x165443 ; stc ; call qword ptr [rax]
0x0000000000165916 : add dword ptr [rax], eax ; js 0x1658af ; stc ; jmp qword ptr [rsi]
0x0000000000168366 : add dword ptr [rax], eax ; js 0x168372 ; cli ; jmp qword ptr [rdx]
0x0000000000146d7e : add dword ptr [rax], eax ; loopne 0x146d80 ; call rsp
0x000000000015f68e : add dword ptr [rax], eax ; loopne 0x15f6da ; clc ; call qword ptr [rbx]
0x000000000015f6ee : add dword ptr [rax], eax ; loopne 0x15f73a ; clc ; call qword ptr [rbx]
0x000000000016609e : add dword ptr [rax], eax ; loopne 0x166054 ; stc ; call qword ptr [rbx]
0x000000000016615e : add dword ptr [rax], eax ; loopne 0x166116 ; stc ; jmp qword ptr [rdi]
0x00000000001696be : add dword ptr [rax], eax ; loopne 0x16966e ; cli ; call qword ptr [rbx]
0x00000000001487be : add dword ptr [rax], eax ; mov ah, 0x26 ; sti ; call rsp
0x00000000001467fe : add dword ptr [rax], eax ; mov ah, 0x33 ; clc ; jmp rsp
0x0000000000147736 : add dword ptr [rax], eax ; mov ah, 0x39 ; stc ; jmp rsp
0x00000000001488d6 : add dword ptr [rax], eax ; mov ah, 0x45 ; sti ; call rsp
0x0000000000147abe : add dword ptr [rax], eax ; mov ah, 0x60 ; stc ; call rsp
0x0000000000148626 : add dword ptr [rax], eax ; mov ah, 0xff ; cli ; call rsp
0x0000000000147f56 : add dword ptr [rax], eax ; mov ah, 9 ; cli ; jmp rsp
0x00000000001652de : add dword ptr [rax], eax ; mov al, 0x7b ; stc ; call qword ptr [rcx]
0x000000000016571e : add dword ptr [rax], eax ; mov al, 0x89 ; stc ; jmp qword ptr [rdi]
0x000000000016968e : add dword ptr [rax], eax ; mov al, 0xa7 ; cli ; call qword ptr [rbx]
0x000000000015d53e : add dword ptr [rax], eax ; mov al, 0xad ; idiv edi ; ret
0x000000000016606e : add dword ptr [rax], eax ; mov al, 0xad ; stc ; call qword ptr [rbx]
0x000000000016630e : add dword ptr [rax], eax ; mov al, 0xb5 ; stc ; jmp qword ptr [rdi]
0x0000000000166b1e : add dword ptr [rax], eax ; mov al, 0xbb ; stc ; jmp qword ptr [rax]
0x000000000016143e : add dword ptr [rax], eax ; mov al, 0xce ; clc ; call qword ptr [rdx]
0x000000000016a076 : add dword ptr [rax], eax ; mov dl, al ; cli ; call qword ptr [rcx]
0x0000000000166e76 : add dword ptr [rax], eax ; mov dl, al ; stc ; jmp qword ptr [rdx]
0x0000000000146616 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, al ; call rsp
0x0000000000147ed6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edx, edi ; jmp rsp
0x000000000014832e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call rsp
0x0000000000148896 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp al, 0xfb ; jmp rsp
0x00000000001469ce : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; clc ; jmp rsp
0x00000000001463d6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x000000000014738e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb ecx, edi ; call rsp
0x00000000001475fe : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0xf9 ; call rsp
0x0000000000132b32 : add dword ptr [rax], eax ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000166f1e : add dword ptr [rax], eax ; nop ; ret
0x000000000016a08e : add dword ptr [rax], eax ; nop ; ret 0xfffa
0x000000000016a38e : add dword ptr [rax], eax ; nop ; retf
0x000000000016559e : add dword ptr [rax], eax ; nop ; test edi, ecx ; call qword ptr [rbx]
0x000000000015fa36 : add dword ptr [rax], eax ; or byte ptr [rdi - 8], al ; call rax
0x0000000000163f76 : add dword ptr [rax], eax ; or byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x000000000016a286 : add dword ptr [rax], eax ; or cl, cl ; cli ; jmp qword ptr [rdi]
0x000000000016a026 : add dword ptr [rax], eax ; pop rax ; ret 0xfffa
0x000000000016a316 : add dword ptr [rax], eax ; pop rax ; retf -6
0x0000000000167316 : add dword ptr [rax], eax ; pop rax ; retf -7
0x000000000016448e : add dword ptr [rax], eax ; pop rax ; stc ; call qword ptr [rbx]
0x000000000015fcde : add dword ptr [rax], eax ; push rax ; clc ; jmp qword ptr [rdx]
0x00000000001677ae : add dword ptr [rax], eax ; push rax ; iretd ; stc ; call qword ptr [rdx]
0x000000000016069e : add dword ptr [rax], eax ; push rax ; jl 0x1606a0 ; call qword ptr [rcx]
0x000000000016a03e : add dword ptr [rax], eax ; push rax ; ret 0xfffa
0x000000000016a32e : add dword ptr [rax], eax ; push rax ; retf -6
0x000000000016732e : add dword ptr [rax], eax ; push rax ; retf -7
0x0000000000148226 : add dword ptr [rax], eax ; push rcx ; cli ; inc esp ; retf
0x0000000000148026 : add dword ptr [rax], eax ; push rsp ; adc al, 0xfa ; jmp rsp
0x0000000000146a26 : add dword ptr [rax], eax ; push rsp ; clc ; call rsp
0x0000000000147a8e : add dword ptr [rax], eax ; push rsp ; pop rsi ; stc ; jmp rsp
0x0000000000167a9e : add dword ptr [rax], eax ; rcl bh, 1 ; stc ; call rax
0x000000000015e61e : add dword ptr [rax], eax ; rcl ch, 0xf7 ; jmp qword ptr [rdx]
0x0000000000166ef6 : add dword ptr [rax], eax ; ret
0x0000000000166e16 : add dword ptr [rax], eax ; ret 0xfff9
0x0000000000169fd6 : add dword ptr [rax], eax ; ret 0xfffa
0x00000000001674ae : add dword ptr [rax], eax ; retf
0x000000000016735e : add dword ptr [rax], eax ; retf -7
0x000000000017354c : add dword ptr [rax], eax ; retf 0x501
0x000000000016a0be : add dword ptr [rax], eax ; rol dl, 0xfa ; call qword ptr [rbx]
0x0000000000161616 : add dword ptr [rax], eax ; sar al, 1 ; call qword ptr [rdx]
0x0000000000163fa6 : add dword ptr [rax], eax ; sbb byte ptr [rdx - 7], dl ; jmp qword ptr [rax]
0x0000000000168a66 : add dword ptr [rax], eax ; sbb byte ptr [rdx], dh ; cli ; call rax
0x000000000015fec6 : add dword ptr [rax], eax ; sbb byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x000000000014733e : add dword ptr [rax], eax ; sbb cl, r15b ; jmp rsp
0x0000000000163c3e : add dword ptr [rax], eax ; stc ; jmp rdi
0x0000000000147636 : add dword ptr [rax], eax ; stc ; jmp rsp
0x0000000000163b26 : add dword ptr [rax], eax ; sub byte ptr [rdi - 7], al ; jmp rdi
0x00000000001642f6 : add dword ptr [rax], eax ; sub byte ptr [rsi - 7], dl ; call rsp
0x000000000016b6be : add dword ptr [rax], eax ; sub edi, ebx ; jmp qword ptr [rbx]
0x0000000000165766 : add dword ptr [rax], eax ; test al, 0x8a ; stc ; jmp qword ptr [rdi]
0x0000000000169676 : add dword ptr [rax], eax ; test al, 0xa7 ; cli ; call qword ptr [rcx]
0x0000000000166056 : add dword ptr [rax], eax ; test al, 0xad ; stc ; call qword ptr [rcx]
0x0000000000166356 : add dword ptr [rax], eax ; test al, 0xb6 ; stc ; jmp qword ptr [rdi]
0x0000000000166b06 : add dword ptr [rax], eax ; test al, 0xbb ; stc ; call qword ptr [rbx]
0x0000000000166ae6 : add dword ptr [rax], eax ; test al, 0xbb ; stc ; jmp qword ptr [rax]
0x0000000000167586 : add dword ptr [rax], eax ; test al, 0xce ; stc ; jmp qword ptr [rbx]
0x000000000016aa26 : add dword ptr [rax], eax ; test al, 0xe2 ; cli ; jmp qword ptr [rbx]
0x000000000015ef46 : add dword ptr [rax], eax ; test al, 0xf5 ; idiv edi ; ret
0x000000000016aea6 : add dword ptr [rax], eax ; test al, 0xf7 ; cli ; jmp rdx
0x00000000001481ee : add dword ptr [rax], eax ; test byte ptr [rsi - 6], cl ; call rsp
0x0000000000146c5e : add dword ptr [rax], eax ; xchg eax, esp ; mov cl, 0xf8 ; jmp rsp
0x0000000000148466 : add dword ptr [rax], eax ; xchg eax, esp ; retf
0x000000000014877e : add dword ptr [rax], eax ; xor al, 0x22 ; sti ; jmp rsp
0x0000000000146886 : add dword ptr [rax], eax ; xor al, 0x3a ; clc ; jmp rsp
0x0000000000147efe : add dword ptr [rax], eax ; xor al, 3 ; cli ; call rsp
0x000000000016ad0e : add dword ptr [rax], eax ; xor al, dh ; cli ; call qword ptr [rcx]
0x00000000001646de : add dword ptr [rax], eax ; xor byte ptr [rbx - 7], bl ; call rsp
0x000000000015fede : add dword ptr [rax], eax ; xor byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x000000000016b8b6 : add dword ptr [rax], eax ; xor dil, bl ; jmp rdx
0x0000000000000c33 : add dword ptr [rax], eax ; xor dword ptr [rax], ecx ; ret 0x3080
0x000000000014769e : add dword ptr [rax], eax ; xor r15b, cl ; call rsp
0x0000000000173f93 : add dword ptr [rax], edx ; ret 0x501
0x000000000015fcc5 : add dword ptr [rax], r8d ; cmp byte ptr [rbx - 8], cl ; jmp qword ptr [rdx]
0x000000000015fcdd : add dword ptr [rax], r8d ; push rax ; clc ; jmp qword ptr [rdx]
0x000000000015fec5 : add dword ptr [rax], r8d ; sbb byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x000000000015fedd : add dword ptr [rax], r8d ; xor byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x00000000000fe1c0 : add dword ptr [rbp + 0x1f], esi ; call 0x8acc5
0x00000000000a8893 : add dword ptr [rbp + 0x39], ecx ; retf -0x76b8
0x000000000012e540 : add dword ptr [rbp + 0x3d], esi ; movzx r9d, r9b ; call 0x8af69
0x00000000000ba34e : add dword ptr [rbp + rbx + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bf896 : add dword ptr [rbp + rdx - 0xd], esi ; ret
0x00000000000a3bc3 : add dword ptr [rbp - 0x48], esi ; mov byte ptr [rsi], 0x66 ; mov byte ptr [rdx], 0 ; ret
0x00000000000a88a4 : add dword ptr [rbp - 0x77], ecx ; adc byte ptr [r13 + 0x39], r9b ; retf 0x7276
0x0000000000133fab : add dword ptr [rbp - 0xb], edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000177f0e : add dword ptr [rbp], edi ; add byte ptr [rax], al ; add ah, dl ; retf 0x20
0x0000000000177de4 : add dword ptr [rbp], edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; retf
0x0000000000177ec8 : add dword ptr [rbp], edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x0000000000124424 : add dword ptr [rbx + 0x10], 1 ; pop rbx ; ret
0x0000000000124b74 : add dword ptr [rbx + 0x10], 4 ; pop rbx ; ret
0x0000000000174c36 : add dword ptr [rbx + 0x2b201], eax ; retf 0x502
0x000000000009cb07 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000090ad2 : add dword ptr [rbx + 0x5d], ebx ; ret
0x000000000012f9da : add dword ptr [rbx + rcx*4 + 0x24], ecx ; ret
0x0000000000138b4a : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0x138b61 ; ret
0x0000000000138b7a : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0x138b91 ; ret
0x0000000000138baa : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0x138bc1 ; ret
0x0000000000138bda : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0x138bf1 ; ret
0x00000000000d596a : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0xd5981 ; ret
0x00000000000d599a : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0xd59b1 ; ret
0x00000000000d59ca : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0xd59e1 ; ret
0x00000000000d59fa : add dword ptr [rbx + rdx + 0x48], esi ; test edx, edx ; jne 0xd5a11 ; ret
0x000000000017624f : add dword ptr [rbx - 0x6e], ecx ; add al, byte ptr [rax] ; ret
0x0000000000176775 : add dword ptr [rbx], eax ; ret 0x501
0x0000000000167c4e : add dword ptr [rbx], eax ; retf 0xa02
0x0000000000173faf : add dword ptr [rbx], ebx ; jbe 0x173fbc ; retf 3
0x00000000000b3935 : add dword ptr [rcx + 0xf], eax ; mov dh, 0xc0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000007365 : add dword ptr [rcx - 0x80], ebx ; ret
0x0000000000174c37 : add dword ptr [rcx], -0x4e ; add al, byte ptr [rax] ; retf 0x502
0x0000000000147435 : add dword ptr [rcx], 0xf91bc400 ; jmp rsp
0x0000000000163b25 : add dword ptr [rcx], 0xf9472800 ; jmp rdi
0x0000000000163b7d : add dword ptr [rcx], 0xf947c000 ; call rdi
0x0000000000019d90 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000178d70 : add dword ptr [rcx], eax ; retf 0x501
0x000000000017584c : add dword ptr [rcx], ebx ; ret
0x00000000000b3b58 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7c0120], 4 ; ret
0x00000000000b3b78 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7c0120], 6 ; ret
0x00000000000b3af8 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7c0220], 6 ; ret
0x00000000000b3b18 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7c0220], 7 ; ret
0x0000000000124364 : add dword ptr [rdi + 0x10], esi ; ret
0x00000000000b455f : add dword ptr [rdi + 0x26], esi ; ret
0x0000000000124292 : add dword ptr [rdi + 0x28], 1 ; ret
0x00000000001243b4 : add dword ptr [rdi + 0x28], esi ; ret
0x0000000000092746 : add dword ptr [rdi + 0x40], 1 ; mov rax, qword ptr [rax + rcx*8] ; ret
0x0000000000125036 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x125049 ; ret
0x0000000000125056 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x125069 ; ret
0x0000000000125076 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x125089 ; ret
0x0000000000125096 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x1250a9 ; ret
0x00000000000d28c6 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0xd28d9 ; ret
0x00000000000d28e6 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0xd28f9 ; ret
0x00000000000d2906 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0xd2919 ; ret
0x00000000000d2926 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0xd2939 ; ret
0x00000000000b3f30 : add dword ptr [rdi], 2 ; ret
0x00000000001605f3 : add dword ptr [rdi], 2 ; retf
0x00000000000b4192 : add dword ptr [rdi], 3 ; ret
0x00000000000a8268 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd001
0x00000000000adeb1 : add dword ptr [rdi], esi ; ret
0x0000000000176e37 : add dword ptr [rdi], esp ; sub eax, 0x18c ; ret
0x0000000000125003 : add dword ptr [rdx + rbx + 0x48], esi ; test esi, esi ; jne 0x125019 ; ret
0x000000000008cb33 : add dword ptr [rdx + rbx + 0x48], esi ; test esi, esi ; jne 0x8cb49 ; ret
0x0000000000124fc3 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x124fd9 ; ret
0x0000000000124fe3 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x124ff9 ; ret
0x0000000000138ad3 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x138ae9 ; ret
0x0000000000138af3 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x138b09 ; ret
0x000000000008caf3 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x8cb09 ; ret
0x000000000008cb13 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x8cb29 ; ret
0x000000000008cfe3 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x8cff9 ; ret
0x000000000008d003 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x8d019 ; ret
0x000000000014a27d : add dword ptr [rdx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; std ; jmp rsp
0x000000000014e74c : add dword ptr [rdx], 0x50 ; ret
0x0000000000153984 : add dword ptr [rdx], 0x5b ; ret
0x000000000014c058 : add dword ptr [rdx], 0x5e ; ret
0x00000000001556b0 : add dword ptr [rdx], 0x7c ; or cl, byte ptr [rsi] ; or byte ptr [rbx + rcx + 0x4a], al ; ret
0x000000000015f372 : add dword ptr [rdx], eax ; ret
0x000000000017853a : add dword ptr [rip + 0x55b], edx ; retf 0x502
0x0000000000174500 : add dword ptr [rsi + 0x33], ebx ; add eax, 0x5600000 ; retf
0x00000000000d31ef : add dword ptr [rsi + rbp*8 - 0xd], esi ; ret
0x000000000017856e : add dword ptr [rsi + rcx*8], ecx ; add dh, byte ptr [rdi + 0x5b301] ; ret
0x0000000000007309 : add dword ptr [rsi - 0x28295dac], edi ; in eax, dx ; retf -0xe8a
0x0000000000161f44 : add dword ptr [rsi], 2 ; retf
0x000000000016259c : add dword ptr [rsi], 2 ; retf 0xe0a
0x000000000015f6a5 : add dword ptr ds:[rax], eax ; call 0x1415eef6
0x000000000015f735 : add dword ptr ds:[rax], eax ; clc ; clc ; call qword ptr [rbx]
0x000000000015f68d : add dword ptr ds:[rax], eax ; loopne 0x15f6db ; clc ; call qword ptr [rbx]
0x000000000015f6ed : add dword ptr ds:[rax], eax ; loopne 0x15f73b ; clc ; call qword ptr [rbx]
0x00000000001463d5 : add dword ptr es:[rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x000000000015f9b4 : add dword ptr fs:[r8], eax ; call 0xffffffffd115f209
0x0000000000146de5 : add dword ptr gs:[rax], eax ; add al, 0xe8 ; clc ; jmp rsp
0x00000000001466d5 : add dword ptr ss:[rax], eax ; in al, 0xc ; clc ; call rsp
0x000000000015ef45 : add dword ptr ss:[rax], eax ; test al, 0xf5 ; idiv edi ; ret
0x000000000000e378 : add eax, 0 ; add byte ptr [rax], al ; add ah, al ; ret
0x00000000000f0154 : add eax, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x000000000000b300 : add eax, 0 ; add byte ptr [rax], al ; add dh, ch ; ret 1
0x000000000008ee05 : add eax, 0 ; ret
0x00000000000bd219 : add eax, 0x10 ; mov qword ptr [r13], rax ; call 0x89cf9
0x00000000000ce62d : add eax, 0x10 ; mov qword ptr [rbx + 0x68], rax ; call 0x8b0f9
0x00000000000cd09a : add eax, 0x10 ; mov qword ptr [rbx + 8], rax ; call 0x89399
0x00000000000a57b1 : add eax, 0x10 ; mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000008d928 : add eax, 0x10 ; mov qword ptr [rdi], rax ; ret
0x0000000000124b72 : add eax, 0x10438348 ; add al, 0x5b ; ret
0x0000000000178c06 : add eax, 0x107dc02 ; ret
0x00000000001744e1 : add eax, 0x11eb05 ; retf
0x00000000000d2978 : add eax, 0x18 ; mov qword ptr [rdi], rax ; ret
0x00000000000d298e : add eax, 0x18 ; mov qword ptr [rsi], rax ; ret
0x00000000000b623d : add eax, 0x18c48348 ; ret
0x000000000014bd7d : add eax, 0x1a500000 ; hlt ; call qword ptr [rbx]
0x000000000014bd95 : add eax, 0x1a580000 ; hlt ; jmp qword ptr [rax]
0x000000000014bddd : add eax, 0x1a800000 ; hlt ; call qword ptr [rcx]
0x000000000014bdf5 : add eax, 0x1a880000 ; hlt ; call qword ptr [rcx]
0x00000000000003ee : add eax, 0x20000099 ; add byte ptr [rax], dl ; add al, 1 ; retf 0x19
0x0000000000000b4f : add eax, 0x2448808 ; ret 0x4001
0x000000000012e4f9 : add eax, 0x25467a ; jne 0x12e511 ; jmp 0x8af69
0x0000000000124b4e : add eax, 0x25dcd5 ; jne 0x124b70 ; ret
0x0000000000124799 : add eax, 0x25de62 ; jne 0x1247b1 ; xor eax, eax ; ret
0x00000000001243fe : add eax, 0x25e5bd ; jne 0x124420 ; ret
0x0000000000124029 : add eax, 0x25ec92 ; jne 0x124041 ; xor eax, eax ; ret
0x000000000010f5d9 : add eax, 0x2729d2 ; jne 0x10f5f1 ; jmp 0x8b879
0x000000000008df0a : add eax, 0x28c48348 ; ret
0x00000000000d66a2 : add eax, 0x2ac0d9 ; ret
0x00000000000d5a42 : add eax, 0x2acd39 ; ret
0x00000000000d3572 : add eax, 0x2af031 ; ret
0x00000000000d2962 : add eax, 0x2afc41 ; ret
0x00000000000c2894 : add eax, 0x2c22b7 ; add rsp, 8 ; ret
0x00000000000c284d : add eax, 0x2c22fe ; ret
0x00000000000bc062 : add eax, 0x2c8ae1 ; ret
0x00000000000bc052 : add eax, 0x2c8ae9 ; ret
0x00000000000ba264 : add eax, 0x2ca8c7 ; add rsp, 8 ; ret
0x00000000000ba21d : add eax, 0x2ca90e ; ret
0x00000000000bacc8 : add eax, 0x2ccc13 ; add eax, 4 ; ret
0x00000000000b3842 : add eax, 0x2d3ef9 ; ret
0x00000000000b2cfc : add eax, 0x2d49df ; add rsp, 8 ; ret
0x00000000000b2c6d : add eax, 0x2d4a6e ; ret
0x00000000000a39a1 : add eax, 0x2e3c9a ; add rsp, 8 ; ret
0x00000000000a1b35 : add eax, 0x2e4526 ; pop rbx ; mov rax, qword ptr [rax] ; ret
0x00000000000a2707 : add eax, 0x2e4f94 ; add rsp, 8 ; ret
0x00000000000a26bd : add eax, 0x2e4fde ; ret
0x000000000009c7e7 : add eax, 0x2e86b4 ; add rsp, 8 ; ret
0x000000000009c79d : add eax, 0x2e86fe ; ret
0x000000000009c784 : add eax, 0x2e8757 ; add rsp, 8 ; ret
0x000000000009c73d : add eax, 0x2e879e ; ret
0x000000000009c487 : add eax, 0x2e89d4 ; add rsp, 8 ; ret
0x000000000009c43d : add eax, 0x2e8a1e ; ret
0x0000000000090472 : add eax, 0x2f47a9 ; ret
0x0000000000090465 : add eax, 0x2f47b6 ; ret
0x000000000008fd42 : add eax, 0x2f4cb9 ; mov rax, qword ptr [rax] ; ret
0x000000000008fcf2 : add eax, 0x2f4d01 ; mov rax, qword ptr [rax] ; ret
0x000000000008da22 : add eax, 0x2f7149 ; ret
0x000000000008d9c2 : add eax, 0x2f71a1 ; ret
0x00000000000e65ff : add eax, 0x333ae800 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x000000000008ddd4 : add eax, 0x38c48348 ; ret
0x00000000000e5d4f : add eax, 0x3beae800 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a3bf5 : add eax, 0x41 ; mov byte ptr [rcx], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000a3bd8 : add eax, 0x45 ; mov byte ptr [rsi], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000a3b9e : add eax, 0x47 ; mov byte ptr [rsi], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000a5b9a : add eax, 0x472bd089 ; and bl, dh ; ret
0x0000000000092511 : add eax, 0x48000000 ; mov eax, edx ; ret
0x0000000000174503 : add eax, 0x5600000 ; retf
0x00000000001739cd : add eax, 0x56c0000 ; ret 2
0x00000000000019f1 : add eax, 0x5c10000 ; add byte ptr [rax], al ; ret 5
0x0000000000148b45 : add eax, 0x5ef40002 ; sti ; call rsp
0x0000000000174966 : add eax, 0x6e705 ; ret 0x205
0x00000000000d5897 : add eax, 0x74002ad7 ; retf
0x0000000000099422 : add eax, 0x742f3883 ; call 0xffffffffa4f55e34
0x00000000000c2732 : add eax, 0x7abb9 ; ret
0x00000000000bbd92 : add eax, 0x80021 ; ret
0x00000000000bbd82 : add eax, 0x80029 ; ret
0x000000000008fa87 : add eax, 0x804083f0 ; add ebx, esi ; ret
0x00000000000bb7f2 : add eax, 0x85cf9 ; ret
0x00000000000b9e22 : add eax, 0x8650f ; ret
0x00000000000b9c72 : add eax, 0x8668c ; ret
0x00000000000b20d2 : add eax, 0x8b23b ; ret
0x00000000000b20e2 : add eax, 0x8b309 ; ret
0x00000000000b5e2f : add eax, 0x8c48348 ; ret
0x00000000000b2142 : add eax, 0x8c4ee ; ret
0x00000000000b2132 : add eax, 0x8c8fc ; ret
0x00000000000b2122 : add eax, 0x8c90f ; ret
0x00000000000b2112 : add eax, 0x8c919 ; ret
0x00000000000b2102 : add eax, 0x8c943 ; ret
0x00000000000b20f2 : add eax, 0x8c94f ; ret
0x00000000000b20c2 : add eax, 0x8c97c ; ret
0x00000000000b20b2 : add eax, 0x8c989 ; ret
0x00000000000b20a2 : add eax, 0x8c995 ; ret
0x00000000000b2092 : add eax, 0x8c9a2 ; ret
0x00000000000082aa : add eax, 0x92c5b4ec ; sar eax, -0x2e ; ret 0xed0c
0x00000000000a1b52 : add eax, 0x9c5cb ; ret
0x0000000000172dfd : add eax, 0xa20103c5 ; add al, 5 ; retf 0x504
0x0000000000175847 : add eax, 0xa30001d6 ; add dword ptr [rcx], ebx ; ret
0x000000000008ed62 : add eax, 0xad391 ; ret
0x000000000008ed52 : add eax, 0xad392 ; ret
0x000000000008e552 : add eax, 0xadad1 ; ret
0x000000000008e562 : add eax, 0xadae9 ; ret
0x000000000008e122 : add eax, 0xade9d ; ret
0x000000000008e0d2 : add eax, 0xaded2 ; ret
0x000000000008e082 : add eax, 0xadeee ; ret
0x000000000008dff2 : add eax, 0xadf4e ; ret
0x000000000008dfa2 : add eax, 0xadf7b ; ret
0x000000000008d7a2 : add eax, 0xae611 ; ret
0x000000000008d782 : add eax, 0xae619 ; ret
0x00000000000d5b8b : add eax, 0xb0048d48 ; ret
0x0000000000173171 : add eax, 0xca000fac ; syscall
0x0000000000005af2 : add eax, 0xe5d82cec ; and bh, byte ptr [rax] ; xlatb ; ret 0x9d0c
0x000000000008fb9a : add eax, 0xfffffe61 ; xor edx, edx ; ret
0x00000000000962c3 : add eax, 1 ; jmp 0x96297
0x00000000000964bb : add eax, 1 ; jmp 0x9648f
0x000000000009682b : add eax, 1 ; jmp 0x967ff
0x00000000000968a3 : add eax, 1 ; jmp 0x96877
0x000000000009691b : add eax, 1 ; jmp 0x968ef
0x0000000000096ba3 : add eax, 1 ; jmp 0x96b77
0x0000000000096c1b : add eax, 1 ; jmp 0x96bef
0x0000000000096c93 : add eax, 1 ; jmp 0x96c67
0x0000000000096d0b : add eax, 1 ; jmp 0x96cdf
0x0000000000096d83 : add eax, 1 ; jmp 0x96d57
0x0000000000096dfb : add eax, 1 ; jmp 0x96dcf
0x0000000000096e73 : add eax, 1 ; jmp 0x96e47
0x0000000000096eeb : add eax, 1 ; jmp 0x96ebf
0x0000000000096f6b : add eax, 1 ; jmp 0x96f3f
0x0000000000096fe3 : add eax, 1 ; jmp 0x96fb7
0x000000000009705b : add eax, 1 ; jmp 0x9702f
0x00000000000970d3 : add eax, 1 ; jmp 0x970a7
0x000000000009714b : add eax, 1 ; jmp 0x9711f
0x00000000000971c3 : add eax, 1 ; jmp 0x97197
0x000000000009723b : add eax, 1 ; jmp 0x9720f
0x0000000000097333 : add eax, 1 ; jmp 0x97307
0x000000000009754b : add eax, 1 ; jmp 0x9751f
0x00000000000975c3 : add eax, 1 ; jmp 0x97597
0x000000000009773b : add eax, 1 ; jmp 0x9770f
0x00000000000979a3 : add eax, 1 ; jmp 0x97977
0x0000000000097a1b : add eax, 1 ; jmp 0x979ef
0x0000000000097a93 : add eax, 1 ; jmp 0x97a67
0x0000000000097b0b : add eax, 1 ; jmp 0x97adf
0x0000000000097b83 : add eax, 1 ; jmp 0x97b57
0x0000000000097bfb : add eax, 1 ; jmp 0x97bcf
0x0000000000097c73 : add eax, 1 ; jmp 0x97c47
0x0000000000097de3 : add eax, 1 ; jmp 0x97db7
0x0000000000097f1b : add eax, 1 ; jmp 0x97eef
0x00000000000980b3 : add eax, 1 ; jmp 0x98087
0x000000000009826b : add eax, 1 ; jmp 0x9823f
0x0000000000098beb : add eax, 1 ; jmp 0x98bbf
0x0000000000098c5b : add eax, 1 ; jmp 0x98c2f
0x0000000000098cdb : add eax, 1 ; jmp 0x98caf
0x0000000000098e2b : add eax, 1 ; jmp 0x98dff
0x0000000000098e9f : add eax, 1 ; jmp 0x98e73
0x000000000009916d : add eax, 1 ; jmp 0x99141
0x000000000009a08b : add eax, 1 ; jmp 0x9a05f
0x000000000009a123 : add eax, 1 ; jmp 0x9a0f7
0x000000000009a1a3 : add eax, 1 ; jmp 0x9a177
0x000000000009a223 : add eax, 1 ; jmp 0x9a1f7
0x000000000009a4fb : add eax, 1 ; jmp 0x9a4cf
0x000000000009a573 : add eax, 1 ; jmp 0x9a547
0x000000000009a5f3 : add eax, 1 ; jmp 0x9a5c7
0x000000000009a673 : add eax, 1 ; jmp 0x9a647
0x000000000009a6f3 : add eax, 1 ; jmp 0x9a6c7
0x000000000009a773 : add eax, 1 ; jmp 0x9a747
0x000000000009a7f3 : add eax, 1 ; jmp 0x9a7c7
0x000000000009ae4b : add eax, 1 ; jmp 0x9ae17
0x000000000009b5bb : add eax, 1 ; jmp 0x9b58f
0x00000000001243db : add eax, 1 ; mov qword ptr [rdi + 0x10], rax ; ret
0x00000000000bacb3 : add eax, 4 ; mov dword ptr [rip + 0x2ccc24], edx ; ret
0x0000000000124b2b : add eax, 4 ; mov qword ptr [rdi + 0x10], rax ; ret
0x00000000000b3b5e : add eax, 4 ; ret
0x00000000000b3afe : add eax, 6 ; ret
0x00000000000b3b1e : add eax, 7 ; ret
0x00000000000d2864 : add eax, dword ptr [rax - 0x18] ; ret
0x0000000000094969 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000954b0 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf -0x67b8
0x000000000016be0d : add eax, dword ptr [rax] ; add byte ptr [rax + rsi], al ; retf 0
0x00000000000efdd6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000a4ccb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000261b0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; retf 3
0x000000000009d83c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010ee61 : add eax, dword ptr [rax] ; add byte ptr [rax], bh ; ret
0x0000000000091774 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], al ; retf
0x00000000001746d2 : add eax, dword ptr [rax] ; add byte ptr [rbx + rax + 0x6bf18], al ; ret 0xda03
0x000000000010d3a2 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000175f7a : add eax, dword ptr [rax] ; out 1, eax ; ret 2
0x00000000000b0d9f : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001785e4 : add eax, dword ptr [rax] ; ret
0x0000000000173253 : add eax, dword ptr [rax] ; retf
0x00000000001785c0 : add eax, dword ptr [rax] ; retf 0x502
0x00000000001743da : add eax, dword ptr [rax] ; retf 0x503
0x00000000000a1d66 : add eax, dword ptr [rbx + 0x107401f8] ; pop rbx ; ret
0x00000000001138d9 : add eax, dword ptr [rcx] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000007ab6 : add eax, dword ptr [rdi + 0x2a8dfd38] ; push rax ; scasd eax, dword ptr [rdi] ; retf
0x0000000000152112 : add eax, dword ptr [rdi + 0xe] ; xor byte ptr [rbx], al ; retf 0xa04
0x0000000000125585 : add eax, dword ptr [rdi] ; ret
0x0000000000148abd : add eax, dword ptr [rdx] ; add byte ptr [rsp + rbx*2], dh ; sti ; jmp rsp
0x00000000001694fa : add eax, dword ptr [rsi + 0x180e5202] ; ret
0x000000000008eed6 : add eax, eax ; jmp rax
0x0000000000092260 : add eax, ebp ; jmp rax
0x00000000000b347e : add eax, ebp ; pop rbp ; ret
0x00000000000b3497 : add eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001775ee : add eax, ebx ; add al, byte ptr [rsi + 0x307db01] ; retf
0x00000000000b30b5 : add eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000127edc : add eax, ecx ; cmp rdx, rsi ; ja 0x127ed8 ; ret
0x00000000000e3b1c : add eax, ecx ; cmp rdx, rsi ; ja 0xe3b18 ; ret
0x0000000000101e8d : add eax, ecx ; cmp rdx, rsi ; jne 0x101e88 ; ret
0x00000000000d8ddd : add eax, ecx ; cmp rdx, rsi ; jne 0xd8dd8 ; ret
0x0000000000092164 : add eax, ecx ; jmp rax
0x000000000008dbfb : add eax, edi ; and eax, 0xf ; add rax, rdx ; ret
0x00000000000960af : add eax, edi ; jmp rax
0x00000000000a826c : add eax, edx ; cmp rdi, rsi ; jne 0xa8268 ; ret
0x00000000000943ae : add eax, edx ; jmp rax
0x000000000008dc01 : add eax, edx ; ret
0x000000000008c764 : add eax, esi ; add byte ptr [rcx], al ; ret
0x00000000000b0d9d : add eax, esi ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009561e : add eax, esi ; jmp rax
0x00000000000d2a74 : add eax, esi ; ret
0x0000000000176681 : add ebp, dword ptr [rbx + rax + 0x3e005] ; retf
0x0000000000172b23 : add ebp, dword ptr [rcx + rax + 0x501a003] ; add byte ptr [rax], al ; retf
0x00000000000cc406 : add ebp, eax ; hlt ; retf
0x00000000000eebbf : add ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf566 : add ebp, eax ; push rsp ; ret
0x000000000012ab58 : add ebp, eax ; ret 0xf5f4
0x00000000000e8b58 : add ebp, eax ; ret 0xfa14
0x00000000000b24a6 : add ebp, eax ; sub r15, rax ; jmp 0xb247e
0x00000000000d781a : add ebp, ebx ; ret
0x000000000000782e : add ebp, ecx ; ret 0xab5d
0x00000000000c233d : add ebp, ecx ; ret 0xfff7
0x00000000000ae098 : add ebx, 4 ; call 0x8ab45
0x00000000000d4f9a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000d3c65 : add ebx, dword ptr [rbx + 0x48] ; add eax, dword ptr [rax - 0x18] ; ret
0x000000000009c86d : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000becfb : add ebx, dword ptr [rbx - 0x17] ; scasb al, byte ptr [rdi] ; retf
0x00000000000a15bb : add ebx, eax ; nop dword ptr [rax] ; mov qword ptr [rdi], rsi ; ret
0x000000000009ae4d : add ebx, ebp ; ret
0x00000000000962c5 : add ebx, ebp ; retf
0x000000000008c767 : add ebx, esi ; ret
0x0000000000118b2d : add ecx, dword ptr [rax + 0x39] ; retf -0x7bf1
0x0000000000092259 : add ecx, dword ptr [rax + 0x63] ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x00000000000a5ed8 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000000fdb7b : add ecx, dword ptr [rbx - 0x1d7ce7a9] ; mov ch, 9 ; retf 0x5789
0x0000000000006b9a : add ecx, dword ptr [rcx] ; ret 0xca53
0x00000000000c224e : add ecx, ebp ; ret
0x00000000000fdb3d : add ecx, edi ; and dword ptr [rcx + 0x18], esi ; ret
0x0000000000147149 : add ecx, edi ; jmp rsp
0x00000000000fdb1b : add ecx, edi ; or dword ptr [rcx + 0x18], esi ; ret
0x00000000000052e2 : add ecx, edi ; pop rcx ; push 0x85 ; mul dword ptr [rsi] ; ret 0xb232
0x00000000000ab9d3 : add ecx, edx ; jmp rcx
0x000000000008e751 : add ecx, edx ; mov qword ptr [rax], r9 ; jmp 0x8e729
0x0000000000176773 : add ecx, esi ; add dword ptr [rbx], eax ; ret 0x501
0x00000000000cb333 : add ecx, esi ; mov qword ptr [rdi + 0x28], rcx ; ret
0x0000000000147148 : add ecx, r15d ; jmp rsp
0x00000000000b4e27 : add edi, dword ptr [rax + 1] ; mov qword ptr [rdi], rcx ; ret
0x00000000000fe9ae : add edi, dword ptr [rax - 0x18] ; jmp 0x8ac85
0x00000000000bba8c : add edi, ebp ; inc dword ptr [rbp + 0x5b1f75c0] ; ret
0x00000000000fba2c : add edi, ebx ; call rsi
0x0000000000147181 : add edi, ecx ; call rsp
0x0000000000147f01 : add edi, edx ; call rsp
0x0000000000168369 : add edi, edx ; jmp qword ptr [rdx]
0x0000000000158579 : add edi, esi ; jmp rdi
0x000000000010470b : add edx, 0x18 ; mov qword ptr [rdi], rdx ; ret
0x0000000000097d6b : add edx, 1 ; jmp 0x97d3f
0x000000000009249a : add edx, 1 ; mov qword ptr [r10 + 0x18], rdx ; ret
0x0000000000123b73 : add edx, 1 ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x00000000000953d2 : add edx, 1 ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; ret
0x000000000012412e : add edx, 1 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000000924a9 : add edx, 1 ; xor eax, eax ; mov qword ptr [r10 + 0x18], rdx ; ret
0x00000000000b3a39 : add edx, 2 ; mov qword ptr [rdi], rdx ; ret
0x00000000000b3aa8 : add edx, 3 ; mov qword ptr [rdi], rdx ; ret
0x0000000000123c92 : add edx, 4 ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x000000000012488d : add edx, 4 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000001249df : add edx, 4 ; mov qword ptr [rdi + 0x28], rdx ; ret
0x00000000000b39e1 : add edx, 4 ; mov qword ptr [rdi], rdx ; ret
0x00000000000d29c7 : add edx, dword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x00000000001255a5 : add edx, dword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000009597f : add edx, ecx ; jmp rdx
0x0000000000147ed9 : add edx, edi ; jmp rsp
0x0000000000004159 : add edx, edx ; jno 0x4169 ; retf
0x00000000000b3f3b : add esi, dword ptr [rdi + 2] ; ret
0x00000000000b28e3 : add esi, dword ptr [rdx + rax + 0x5b] ; ret
0x00000000000a3bf9 : add esi, eax ; add al, byte ptr [rax] ; ret
0x000000000008d02c : add esi, ebx ; ret
0x000000000008e9d0 : add esi, ebx ; stosq qword ptr [rdi], rax ; mov rax, rdx ; pop rbx ; ret
0x00000000000c752e : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000158659 : add esi, edi ; call rdi
0x000000000014a321 : add esi, edi ; call rsp
0x00000000001523f9 : add esi, esi ; jmp qword ptr [rdx]
0x00000000000a5b5e : add esi, esi ; or eax, esi ; mov byte ptr [rdi + 0x50], al ; ret
0x00000000000ff13c : add esi, esi ; sbb al, 1 ; je 0xff161 ; call 0x8bc29
0x00000000000fe1bc : add esi, esi ; sbb al, 1 ; jne 0xfe1eb ; call 0x8acc9
0x000000000008d850 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x00000000000909f3 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008eea2 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cc46 : add esp, 0x10 ; pop rbx ; ret
0x0000000000090a01 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee579 : add esp, 0x10 ; xor edx, edx ; pop rbx ; jmp rax
0x00000000000a5b3e : add esp, 0x18 ; jmp rax
0x00000000000de51f : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000008fb68 : add esp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000e4253 : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000090a84 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000008f10c : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000091396 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008f050 : add esp, 0x18 ; ret
0x0000000000090acd : add esp, 0x18 ; xor eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000009dc45 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008dd5f : add esp, 0x20 ; pop rbx ; ret
0x0000000000090b80 : add esp, 0x28 ; pop rbx ; pop rbp ; jmp rax
0x000000000008e503 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000099f94 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008df0c : add esp, 0x28 ; ret
0x00000000000b4840 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008de57 : add esp, 0x30 ; pop rbx ; ret
0x0000000000092d21 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b452b : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000008ddd6 : add esp, 0x38 ; ret
0x000000000009de3f : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9d7a : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b4487 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000b7bd9 : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7da5 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a19db : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b25b4 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000008ee01 : add esp, 8 ; add rax, 0 ; ret
0x00000000000b3493 : add esp, 8 ; add rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b30b1 : add esp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000009bf39 : add esp, 8 ; and eax, 0xfffffffe ; ret
0x000000000008dcd5 : add esp, 8 ; jmp rax
0x00000000000d6d7f : add esp, 8 ; lea rax, qword ptr [rax + rbp*4] ; pop rbx ; pop rbp ; ret
0x00000000000d6f41 : add esp, 8 ; lea rax, qword ptr [rsi + rbx] ; pop rbx ; pop rbp ; ret
0x0000000000090e11 : add esp, 8 ; lea rax, qword ptr [rsi + rcx] ; ret
0x00000000000b4793 : add esp, 8 ; mov eax, 1 ; pop rbx ; ret
0x00000000000b47b1 : add esp, 8 ; mov eax, 2 ; pop rbx ; ret
0x000000000008daf6 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000ae3b3 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000090506 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008e868 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000d44c4 : add esp, 8 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000ba3aa : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000ba3d1 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rdx
0x00000000000ee1fa : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000000ab211 : add esp, 8 ; movzx eax, al ; or eax, edx ; ret
0x00000000000b3479 : add esp, 8 ; pop rbx ; add rax, rbp ; pop rbp ; ret
0x000000000008db07 : add esp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000008e3b0 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008e38a : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008db9f : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f2ab6 : add esp, 8 ; pop rbx ; pop rbp ; sar rax, 2 ; ret
0x0000000000088d3e : add esp, 8 ; ret
0x000000000008fbda : add esp, 8 ; xor eax, 1 ; ret
0x0000000000095379 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b47a1 : add esp, 8 ; xor eax, eax ; pop rbx ; ret
0x0000000000172b26 : add esp, dword ptr [rax + 0x501] ; retf
0x00000000000c0e29 : add esp, dword ptr [rdx - 0x76b70004] ; ret
0x00000000000ce53b : add esp, ebp ; mov rsi, r12 ; call 0x8a767
0x000000000009c5a2 : add esp, ecx ; mov qword ptr [r13], r12 ; jmp 0x9c57c
0x0000000000146a95 : add qword ptr [r8], r8 ; adc al, 0x72 ; clc ; call rsp
0x0000000000160605 : add qword ptr [r8], r8 ; je 0x160609 ; call qword ptr [rdx]
0x0000000000146a1d : add qword ptr [r8], rax ; clc ; jmp rsp
0x0000000000146a25 : add qword ptr [r8], rax ; push rsp ; clc ; call rsp
0x0000000000146ac5 : add qword ptr [rax], r8 ; and al, 0x75 ; clc ; call rsp
0x00000000001469cd : add qword ptr [rax], r8 ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; clc ; jmp rsp
0x000000000016069d : add qword ptr [rax], r8 ; push rax ; jl 0x1606a1 ; call qword ptr [rcx]
0x000000000016069c : add qword ptr [rax], r8 ; push rax ; jl 0x1606a2 ; call qword ptr [rcx]
0x0000000000129924 : add qword ptr [rax], rax ; add byte ptr [rax], al ; mov qword ptr [rdi], rax ; ret
0x0000000000124423 : add qword ptr [rbx + 0x10], 1 ; pop rbx ; ret
0x0000000000124b73 : add qword ptr [rbx + 0x10], 4 ; pop rbx ; ret
0x0000000000124363 : add qword ptr [rdi + 0x10], rsi ; ret
0x0000000000124291 : add qword ptr [rdi + 0x28], 1 ; ret
0x00000000001243b3 : add qword ptr [rdi + 0x28], rsi ; ret
0x00000000000b3f2f : add qword ptr [rdi], 2 ; ret
0x00000000000b4191 : add qword ptr [rdi], 3 ; ret
0x00000000000d78f2 : add r11b, r13b ; ret
0x00000000000ce53a : add r12, rbp ; mov rsi, r12 ; call 0x8a768
0x000000000009c5a1 : add r12, rcx ; mov qword ptr [r13], r12 ; jmp 0x9c57d
0x00000000000916db : add r14b, r8b ; and al, 0x46 ; add dword ptr [rax + 0x29], ecx ; ret 0x8548
0x000000000008dcd1 : add r15b, dil ; add rsp, 8 ; jmp rax
0x0000000000125889 : add r15b, dil ; ret
0x000000000017076d : add r8b, byte ptr [r8] ; adc dl, bh ; sti ; call qword ptr [rcx]
0x00000000001498ed : add r8b, byte ptr [r8] ; add al, 0xc9 ; cld ; jmp rsp
0x0000000000094a2e : add r8b, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000000b52 : add r8b, dl ; add dword ptr [rax - 0x7a], eax ; xchg eax, ebx ; adc eax, esp ; ret 0x1400
0x00000000000bd21e : add r8b, r13b ; retf
0x000000000008e750 : add r9, rdx ; mov qword ptr [rax], r9 ; jmp 0x8e72a
0x000000000008ee04 : add rax, 0 ; ret
0x00000000000a57b0 : add rax, 0x10 ; mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000008d927 : add rax, 0x10 ; mov qword ptr [rdi], rax ; ret
0x00000000000d2977 : add rax, 0x18 ; mov qword ptr [rdi], rax ; ret
0x00000000000d298d : add rax, 0x18 ; mov qword ptr [rsi], rax ; ret
0x00000000000962c2 : add rax, 1 ; jmp 0x96298
0x00000000000964ba : add rax, 1 ; jmp 0x96490
0x000000000009682a : add rax, 1 ; jmp 0x96800
0x00000000000968a2 : add rax, 1 ; jmp 0x96878
0x000000000009691a : add rax, 1 ; jmp 0x968f0
0x0000000000096ba2 : add rax, 1 ; jmp 0x96b78
0x0000000000096c1a : add rax, 1 ; jmp 0x96bf0
0x0000000000096c92 : add rax, 1 ; jmp 0x96c68
0x0000000000096d0a : add rax, 1 ; jmp 0x96ce0
0x0000000000096d82 : add rax, 1 ; jmp 0x96d58
0x0000000000096dfa : add rax, 1 ; jmp 0x96dd0
0x0000000000096e72 : add rax, 1 ; jmp 0x96e48
0x0000000000096eea : add rax, 1 ; jmp 0x96ec0
0x0000000000096f6a : add rax, 1 ; jmp 0x96f40
0x0000000000096fe2 : add rax, 1 ; jmp 0x96fb8
0x000000000009705a : add rax, 1 ; jmp 0x97030
0x00000000000970d2 : add rax, 1 ; jmp 0x970a8
0x000000000009714a : add rax, 1 ; jmp 0x97120
0x00000000000971c2 : add rax, 1 ; jmp 0x97198
0x000000000009723a : add rax, 1 ; jmp 0x97210
0x0000000000097332 : add rax, 1 ; jmp 0x97308
0x000000000009754a : add rax, 1 ; jmp 0x97520
0x00000000000975c2 : add rax, 1 ; jmp 0x97598
0x000000000009773a : add rax, 1 ; jmp 0x97710
0x00000000000979a2 : add rax, 1 ; jmp 0x97978
0x0000000000097a1a : add rax, 1 ; jmp 0x979f0
0x0000000000097a92 : add rax, 1 ; jmp 0x97a68
0x0000000000097b0a : add rax, 1 ; jmp 0x97ae0
0x0000000000097b82 : add rax, 1 ; jmp 0x97b58
0x0000000000097bfa : add rax, 1 ; jmp 0x97bd0
0x0000000000097c72 : add rax, 1 ; jmp 0x97c48
0x0000000000097de2 : add rax, 1 ; jmp 0x97db8
0x0000000000097f1a : add rax, 1 ; jmp 0x97ef0
0x00000000000980b2 : add rax, 1 ; jmp 0x98088
0x000000000009826a : add rax, 1 ; jmp 0x98240
0x0000000000098bea : add rax, 1 ; jmp 0x98bc0
0x0000000000098c5a : add rax, 1 ; jmp 0x98c30
0x0000000000098cda : add rax, 1 ; jmp 0x98cb0
0x0000000000098e2a : add rax, 1 ; jmp 0x98e00
0x0000000000098e9e : add rax, 1 ; jmp 0x98e74
0x000000000009916c : add rax, 1 ; jmp 0x99142
0x000000000009a08a : add rax, 1 ; jmp 0x9a060
0x000000000009a122 : add rax, 1 ; jmp 0x9a0f8
0x000000000009a1a2 : add rax, 1 ; jmp 0x9a178
0x000000000009a222 : add rax, 1 ; jmp 0x9a1f8
0x000000000009a4fa : add rax, 1 ; jmp 0x9a4d0
0x000000000009a572 : add rax, 1 ; jmp 0x9a548
0x000000000009a5f2 : add rax, 1 ; jmp 0x9a5c8
0x000000000009a672 : add rax, 1 ; jmp 0x9a648
0x000000000009a6f2 : add rax, 1 ; jmp 0x9a6c8
0x000000000009a772 : add rax, 1 ; jmp 0x9a748
0x000000000009a7f2 : add rax, 1 ; jmp 0x9a7c8
0x000000000009ae4a : add rax, 1 ; jmp 0x9ae18
0x000000000009b5ba : add rax, 1 ; jmp 0x9b590
0x00000000001243da : add rax, 1 ; mov qword ptr [rdi + 0x10], rax ; ret
0x0000000000124b2a : add rax, 4 ; mov qword ptr [rdi + 0x10], rax ; ret
0x00000000000d2863 : add rax, qword ptr [rax - 0x18] ; ret
0x0000000000125584 : add rax, qword ptr [rdi] ; ret
0x00000000000c13b9 : add rax, r10 ; jmp rax
0x00000000000da997 : add rax, r14 ; jmp rax
0x000000000008eed5 : add rax, r8 ; jmp rax
0x0000000000092163 : add rax, r9 ; jmp rax
0x000000000009225f : add rax, rbp ; jmp rax
0x00000000000b347d : add rax, rbp ; pop rbp ; ret
0x00000000000b3496 : add rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b30b4 : add rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000127edb : add rax, rcx ; cmp rdx, rsi ; ja 0x127ed9 ; ret
0x00000000000e3b1b : add rax, rcx ; cmp rdx, rsi ; ja 0xe3b19 ; ret
0x0000000000101e8c : add rax, rcx ; cmp rdx, rsi ; jne 0x101e89 ; ret
0x00000000000d8ddc : add rax, rcx ; cmp rdx, rsi ; jne 0xd8dd9 ; ret
0x0000000000095844 : add rax, rcx ; jmp rax
0x000000000008dbfa : add rax, rdi ; and eax, 0xf ; add rax, rdx ; ret
0x00000000000960ae : add rax, rdi ; jmp rax
0x00000000000943ad : add rax, rdx ; jmp rax
0x000000000008dc00 : add rax, rdx ; ret
0x000000000009561d : add rax, rsi ; jmp rax
0x00000000000d2a73 : add rax, rsi ; ret
0x00000000000b24a5 : add rbp, rax ; sub r15, rax ; jmp 0xb247f
0x000000000000782d : add rbp, rcx ; ret 0xab5d
0x00000000000ae097 : add rbx, 4 ; call 0x8ab46
0x00000000000ab9d2 : add rcx, r10 ; jmp rcx
0x00000000000fdb3c : add rcx, rdi ; and dword ptr [rcx + 0x18], esi ; ret
0x00000000000fdb1a : add rcx, rdi ; or dword ptr [rcx + 0x18], esi ; ret
0x00000000000cb332 : add rcx, rsi ; mov qword ptr [rdi + 0x28], rcx ; ret
0x00000000000fe9ad : add rdi, qword ptr [rax - 0x18] ; jmp 0x8ac86
0x00000000000fba2b : add rdi, rbx ; call rsi
0x000000000010470a : add rdx, 0x18 ; mov qword ptr [rdi], rdx ; ret
0x0000000000097d6a : add rdx, 1 ; jmp 0x97d40
0x0000000000092499 : add rdx, 1 ; mov qword ptr [r10 + 0x18], rdx ; ret
0x0000000000123b72 : add rdx, 1 ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x00000000000953d1 : add rdx, 1 ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; ret
0x000000000012412d : add rdx, 1 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000000b3a38 : add rdx, 2 ; mov qword ptr [rdi], rdx ; ret
0x00000000000b3aa7 : add rdx, 3 ; mov qword ptr [rdi], rdx ; ret
0x0000000000123c91 : add rdx, 4 ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x000000000012488c : add rdx, 4 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000001249de : add rdx, 4 ; mov qword ptr [rdi + 0x28], rdx ; ret
0x00000000000b39e0 : add rdx, 4 ; mov qword ptr [rdi], rdx ; ret
0x00000000000d29c6 : add rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x00000000001255a4 : add rdx, qword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000009597e : add rdx, rcx ; jmp rdx
0x0000000000158658 : add rsi, rdi ; call rdi
0x000000000008d84f : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x00000000000909f2 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008eea1 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cc45 : add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee578 : add rsp, 0x10 ; xor edx, edx ; pop rbx ; jmp rax
0x00000000000a5b3d : add rsp, 0x18 ; jmp rax
0x00000000000de51e : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000008fb67 : add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000e4252 : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000090a83 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000091395 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008f04f : add rsp, 0x18 ; ret
0x0000000000090acc : add rsp, 0x18 ; xor eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000009dc44 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008dd5e : add rsp, 0x20 ; pop rbx ; ret
0x0000000000090b7f : add rsp, 0x28 ; pop rbx ; pop rbp ; jmp rax
0x0000000000099f93 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008df0b : add rsp, 0x28 ; ret
0x00000000000b483f : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008de56 : add rsp, 0x30 ; pop rbx ; ret
0x00000000000b452a : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000008ddd5 : add rsp, 0x38 ; ret
0x000000000009de3e : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4486 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000b7bd8 : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7da4 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b25b3 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000000b3492 : add rsp, 8 ; add rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b30b0 : add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000009bf38 : add rsp, 8 ; and eax, 0xfffffffe ; ret
0x000000000008dcd4 : add rsp, 8 ; jmp rax
0x0000000000090e10 : add rsp, 8 ; lea rax, qword ptr [rsi + rcx] ; ret
0x000000000008daf5 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000ae3b2 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000090505 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008e867 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000d44c3 : add rsp, 8 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000ba3a9 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000ba3d0 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rdx
0x00000000000ee1f9 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000000ab210 : add rsp, 8 ; movzx eax, al ; or eax, edx ; ret
0x00000000000b3478 : add rsp, 8 ; pop rbx ; add rax, rbp ; pop rbp ; ret
0x000000000008db06 : add rsp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000008db9e : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000088d3d : add rsp, 8 ; ret
0x000000000008fbd9 : add rsp, 8 ; xor eax, 1 ; ret
0x0000000000095378 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b47a0 : add rsp, 8 ; xor eax, eax ; pop rbx ; ret
0x0000000000146e35 : add word ptr [rax], ax ; add al, 0xe9 ; clc ; call rsp
0x00000000000d52fc : add word ptr [rax], ax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000ace3f : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000156eb0 : and al, 0 ; add byte ptr [rax], al ; mov dh, 0 ; add al, cl ; ret
0x00000000000b3891 : and al, 0 ; retf 0x3b9a
0x000000000010cc2b : and al, 0x10 ; call 0x88ed4
0x00000000000dc2df : and al, 0x10 ; call rax
0x00000000000e01db : and al, 0x10 ; mov rdi, rax ; call r11
0x00000000000c13fb : and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000c142b : and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000c13e3 : and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000c1413 : and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x00000000000c13cb : and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x38] ; jmp rax
0x000000000010648c : and al, 0x14 ; mov qword ptr [rsp], rax ; call 0x1026f8
0x000000000010646c : and al, 0x15 ; mov qword ptr [rsp], rax ; call 0x1026f8
0x000000000012bcd7 : and al, 0x15 ; mov qword ptr [rsp], rax ; call 0x128738
0x000000000010644c : and al, 0x16 ; mov qword ptr [rsp], rax ; call 0x1026f8
0x000000000012bcb7 : and al, 0x16 ; mov qword ptr [rsp], rax ; call 0x128738
0x00000000001063f3 : and al, 0x17 ; call 0x1026f4
0x000000000012bc63 : and al, 0x17 ; call 0x128734
0x00000000000ae095 : and al, 0x18 ; add rbx, 4 ; call 0x8ab48
0x00000000001141b3 : and al, 0x18 ; call rax
0x0000000000105da3 : and al, 0x18 ; mov rsi, rbp ; mov rdi, r13 ; call rax
0x000000000016d5b4 : and al, 0x1c ; add al, byte ptr [rax] ; pop rax ; test edi, ebx ; call qword ptr [rdx]
0x000000000009e907 : and al, 0x1f ; sub al, 0xe8 ; ret
0x00000000000e0216 : and al, 0x20 ; call rax
0x000000000012d52c : and al, 0x20 ; mov esi, dword ptr [rax] ; call 0x89fc6
0x000000000010cc26 : and al, 0x20 ; mov qword ptr [rsp + 0x10], rbp ; call 0x88ed9
0x0000000000105773 : and al, 0x20 ; mov rsi, rbp ; mov rdi, r13 ; call rax
0x00000000000baf84 : and al, 0x28 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001057c3 : and al, 0x28 ; mov rsi, rbp ; mov rdi, r13 ; call rax
0x00000000000bd1ef : and al, 0x28 ; xor eax, eax ; call 0x89436
0x00000000000bd1ee : and al, 0x28 ; xor eax, eax ; call 0x89437
0x0000000000148078 : and al, 0x2a ; cli ; call rsp
0x00000000000df4da : and al, 0x30 ; call 0x8b764
0x000000000009e9b9 : and al, 0x30 ; mov rdi, rbp ; call 0x8ac57
0x00000000001057ab : and al, 0x30 ; mov rsi, rbp ; mov rdi, r15 ; call rax
0x0000000000104d84 : and al, 0x31 ; ror byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000dc50a : and al, 0x38 ; lea r9, qword ptr [rsp + 0x50] ; call 0x88f69
0x00000000000ae03a : and al, 0x38 ; mov esi, dword ptr [r15] ; call 0x8ab47
0x00000000000ae039 : and al, 0x38 ; mov esi, dword ptr [r15] ; call 0x8ab48
0x000000000010ccac : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x58] ; call 0x89749
0x00000000000e0cae : and al, 0x40 ; mov rdi, r13 ; call rax
0x00000000000e09e9 : and al, 0x40 ; mov rdi, rax ; call rdx
0x000000000014fd74 : and al, 0x45 ; add byte ptr [rax], al ; sub byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000009198d : and al, 0x45 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000916df : and al, 0x46 ; add dword ptr [rax + 0x29], ecx ; ret 0x8548
0x00000000000eb379 : and al, 0x48 ; call rax
0x00000000001110ae : and al, 0x48 ; push qword ptr [rbp + rbx*2 + 0x38] ; ret
0x0000000000110707 : and al, 0x48 ; push qword ptr [rsp + 0x38] ; ret
0x0000000000148200 : and al, 0x4f ; cli ; call qword ptr [rbx + rcx*8]
0x00000000000dc50f : and al, 0x50 ; call 0x88f64
0x00000000000dc50e : and al, 0x50 ; call 0x88f65
0x00000000000e0b3e : and al, 0x50 ; call rax
0x000000000010ccb1 : and al, 0x58 ; call 0x89744
0x0000000000134e2b : and al, 0x58 ; push qword ptr [rax + 0x38] ; ret
0x00000000001361d8 : and al, 0x58 ; push qword ptr [rbx + 0x38] ; ret
0x000000000010f30d : and al, 0x58 ; push qword ptr [rsi + rbx*2 + 0x38] ; ret
0x00000000001357ff : and al, 0x58 ; push qword ptr [rsp + rbx*2 + 0x38] ; ret
0x0000000000137645 : and al, 0x68 ; push qword ptr [rsi + rbx*2 + 0x38] ; ret
0x000000000008f04c : and al, 0x75 ; add rsp, 0x18 ; ret
0x0000000000146ac8 : and al, 0x75 ; clc ; call rsp
0x00000000000e0b39 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x50] ; call rax
0x00000000000e5d2f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000148d48 : and al, 0x86 ; sti ; call rsp
0x0000000000163f74 : and al, 0x87 ; add dword ptr [rax], eax ; or byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x000000000013b573 : and al, 0x89 ; or bl, ch ; retf 0x1f0f
0x0000000000154374 : and al, 0x8b ; add byte ptr [rax], al ; call 0x131539b2
0x00000000000daa60 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000daf28 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000007203 : and al, 0x95 ; sub dword ptr ss:[rbp - 0x63], edi ; ret
0x00000000001654b4 : and al, 0x9b ; add dword ptr [rax], eax ; js 0x165445 ; stc ; call qword ptr [rax]
0x00000000000e5980 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e5d11 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ea44c : and al, 0xa0 ; add dword ptr [rax], eax ; add al, ch ; retf -0x14
0x0000000000147cc8 : and al, 0xa0 ; stc ; jmp rsp
0x000000000017799c : and al, 0xa1 ; adc al, byte ptr [rax] ; cld ; syscall
0x000000000008f3d6 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000166e74 : and al, 0xb6 ; add dword ptr [rax], eax ; mov dl, al ; stc ; jmp qword ptr [rdx]
0x00000000000c2e9a : and al, 0xc ; mov rsi, r14 ; mov rdi, r12 ; call rax
0x00000000001447b0 : and al, 0xc3 ; hlt ; call rsp
0x00000000001448a0 : and al, 0xca ; hlt ; call rsp
0x00000000000bacb8 : and al, 0xcc ; sub al, 0 ; ret
0x0000000000144144 : and al, 0xd1 ; add al, byte ptr [rax] ; xchg eax, esp ; mov esp, esi ; call rsp
0x0000000000144d70 : and al, 0xd2 ; cmc ; call rsp
0x0000000000169674 : and al, 0xde ; add dword ptr [rax], eax ; test al, 0xa7 ; cli ; call qword ptr [rcx]
0x000000000016a074 : and al, 0xe8 ; add dword ptr [rax], eax ; mov dl, al ; cli ; call qword ptr [rcx]
0x0000000000106451 : and al, 0xe8 ; cdq ; ret 0xffff
0x000000000012bd00 : and al, 0xe8 ; cli ; retf
0x000000000012c384 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000000001100eb : and al, 0xe8 ; jmp rbx
0x0000000000134e3b : and al, 0xe8 ; mov edi, 0x89fffb43 ; ret
0x000000000012bcbc : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; retf -1
0x0000000000112361 : and al, 0xe8 ; pop rcx ; ret 0xfffc
0x0000000000106491 : and al, 0xe8 ; pop rcx ; ret 0xffff
0x0000000000110f52 : and al, 0xe8 ; push -0x7600032a ; ret
0x0000000000106528 : and al, 0xe8 ; ret 0xffc1
0x000000000010f2ef : and al, 0xe8 ; retf
0x0000000000112213 : and al, 0xe8 ; xlatb ; ret 0xfffc
0x0000000000007660 : and al, 0xea ; push rsp ; retf
0x000000000016a374 : and al, 0xeb ; add dword ptr [rax], eax ; cwde ; retf
0x00000000000bff20 : and al, 0xf ; call 0x8c1fa
0x00000000001168b3 : and al, 0xf ; mov esi, 0x83480075 ; ret
0x0000000000158f21 : and al, 0xf7 ; call rsi
0x0000000000158e99 : and al, 0xf7 ; jmp qword ptr [rbx]
0x00000000000c6f43 : and al, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016b8b4 : and al, 0xff ; add dword ptr [rax], eax ; xor dil, bl ; jmp rdx
0x00000000000bb351 : and al, 4 ; jne 0xbb36e ; add rsp, 0x18 ; ret
0x00000000000bb350 : and al, 4 ; jne 0xbb36f ; add rsp, 0x18 ; ret
0x000000000011912f : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000bd2a6 : and al, 8 ; call 0x89d74
0x000000000009ed32 : and al, 8 ; call 0x8b7f4
0x000000000009ed31 : and al, 8 ; call 0x8b7f5
0x00000000000afeb4 : and al, 8 ; call 0x8c104
0x0000000000127488 : and al, 8 ; je 0x127450 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b199 : and al, 8 ; je 0x13b160 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d3535 : and al, 8 ; je 0xd3503 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d6666 : and al, 8 ; je 0xd6633 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010444b : and al, 8 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000105d5b : and al, 8 ; mov rdi, rcx ; call rax
0x000000000000401a : and al, 8 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x80fc
0x0000000000091191 : and al, 8 ; sub rdi, rbp ; call rax
0x0000000000107407 : and al, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000106fec : and al, bh ; dec dword ptr [rbp - 0x7b] ; push qword ptr [rsp + rdi*4 - 0x15] ; retf 0x2e66
0x00000000000d9b27 : and al, bl ; nop dword ptr [rax] ; jmp rax
0x0000000000016820 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x302
0x000000000015da5d : and al, byte ptr [rcx] ; add byte ptr [rax], al ; mov ah, 0xf7 ; call qword ptr [rbx]
0x000000000015da75 : and al, byte ptr [rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000015dab4 : and al, byte ptr fs:[rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x00000000000c8538 : and al, ch ; ret 0xfc2f
0x0000000000148781 : and bh, bl ; jmp rsp
0x0000000000006e30 : and bh, bl ; mov ebp, 0x62a36bed ; ret
0x0000000000005af7 : and bh, byte ptr [rax] ; xlatb ; ret 0x9d0c
0x00000000000b8542 : and bh, ch ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000149c79 : and bh, ch ; jmp rsp
0x00000000000f99ec : and bh, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a9924 : and bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000145ab1 : and bh, dh ; jmp rsp
0x0000000000000bcc : and bl, byte ptr [rax] ; and dl, byte ptr [rax] ; pop rdx ; push rcx ; adc al, cl ; ret
0x00000000001160fa : and bl, byte ptr [rbx - 9] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a5b9f : and bl, dh ; ret
0x00000000000f9291 : and byte ptr [r13 - 0x3f6bf040], r8b ; ret
0x0000000000006add : and byte ptr [r8 + 0x1a], r12b ; push rsi ; clc ; retf
0x00000000000c7552 : and byte ptr [r8 + 0xf], r8b ; mov dh, 0xf6 ; mov eax, dword ptr [rax + rsi*4] ; ret
0x00000000000a1c68 : and byte ptr [r8 - 0x7d], r9b ; ret
0x000000000010ecf1 : and byte ptr [r8], r15b ; ret 0x940f
0x0000000000006ade : and byte ptr [rax + 0x1a], ah ; push rsi ; clc ; retf
0x0000000000119988 : and byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000ec560 : and byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000c7553 : and byte ptr [rax + 0xf], al ; mov dh, 0xf6 ; mov eax, dword ptr [rax + rsi*4] ; ret
0x0000000000111507 : and byte ptr [rax + 0xf], cl ; ret 0xd231
0x00000000000dd56f : and byte ptr [rax + 9], cl ; retf
0x00000000000f0e52 : and byte ptr [rax + 9], cl ; retf -0x74b8
0x000000000011bf42 : and byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011aa62 : and byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011d722 : and byte ptr [rax - 0x75], cl ; push rbx ; xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011999c : and byte ptr [rax - 0x75], cl ; push rsi ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000010cc27 : and byte ptr [rax - 0x77], cl ; insb byte ptr [rdi], dx ; and al, 0x10 ; call 0x88ed8
0x0000000000105774 : and byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r13 ; call rax
0x00000000000d2d7f : and byte ptr [rax - 0x77], cl ; ret
0x00000000000c5d86 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000c160b : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000000a1c69 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000010416e : and byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x58], rax ; ret
0x000000000014f4d0 : and byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x00000000000003f2 : and byte ptr [rax], al ; adc byte ptr [rcx + rax], al ; retf 0x19
0x000000000009330d : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000000b408 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000025028 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x13c
0x000000000001f850 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x215
0x000000000001b788 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x27
0x00000000001141ac : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call rax
0x00000000000f9437 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call rdx
0x00000000000f98ca : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000011422b : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call rax
0x0000000000114fbc : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call rdx
0x00000000001145d4 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call rdx
0x00000000000f93af : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rdx
0x00000000000a1ad1 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010ecf2 : and byte ptr [rax], bh ; ret 0x940f
0x00000000000f9272 : and byte ptr [rbp + 0x2751c77], al ; ret
0x00000000000f923f : and byte ptr [rbp + 0xb], dh ; ret
0x00000000000f9292 : and byte ptr [rbp - 0x3f6bf040], al ; ret
0x000000000015fde0 : and byte ptr [rbp - 8], cl ; jmp qword ptr [rdx]
0x000000000009df92 : and byte ptr [rbx + 0x15e804ce], al ; retf -2
0x00000000000a3bf4 : and byte ptr [rbx + 0x18841c0], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000ab3ae : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009dc47 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a3bd7 : and byte ptr [rbx + 0x68845c0], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000a3b9d : and byte ptr [rbx + 0x68847c0], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000051db : and byte ptr [rbx + rsi], cl ; retf
0x0000000000152170 : and byte ptr [rbx], al ; retf 0xa04
0x0000000000007692 : and byte ptr [rbx], dh ; salc ; cmpsb byte ptr ds:[rsi], byte ptr [rdi] ; int1 ; jle 0x7693 ; wait ; call rdi
0x00000000000003c2 : and byte ptr [rcx + 0x2404012], al ; add byte ptr [rdi], cl ; retf -0x2bdf
0x00000000000b33a4 : and byte ptr [rcx - 0x76b7fff8], bh ; ret 0x8348
0x000000000010416f : and byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x58], rax ; ret
0x0000000000155910 : and byte ptr [rdi - 0xa], ah ; call qword ptr [rdx]
0x00000000000eec67 : and byte ptr [rdx + 6], dh ; xor eax, eax ; ret
0x00000000001555e0 : and byte ptr [rdx - 0xa], ah ; call qword ptr [rbx]
0x000000000013c89c : and byte ptr [rdx - 0xb], ah ; inc dword ptr [rax + 0x62] ; cmc ; jmp qword ptr [rax]
0x000000000013c844 : and byte ptr [rdx - 0xb], ah ; jmp qword ptr [rax]
0x0000000000149055 : and byte ptr [rdx], al ; add ah, al ; sar ebx, 1 ; jmp rsp
0x0000000000106b4c : and byte ptr [rdx], dh ; clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000007fe6 : and byte ptr [rip - 0x682ab955], ah ; fsub st(6), st(0) ; scasb al, byte ptr [rdi] ; ret
0x00000000001557d0 : and byte ptr [rsi - 0xa], ah ; call qword ptr [rdx]
0x00000000000e8f4c : and byte ptr [rsi], cl ; cli ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000006adc : and byte ptr es:[r8 + 0x1a], r12b ; push rsi ; clc ; retf
0x000000000000756b : and ch, 0x71 ; add al, 9 ; retf 0xd3ed
0x0000000000149c39 : and ch, bh ; call rsp
0x00000000000b86b0 : and ch, bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000004884 : and ch, bh ; hlt ; or dword ptr [rbx + rcx - 0x54], edx ; ret 0x6da5
0x00000000000c2896 : and ch, byte ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000000c284f : and ch, byte ptr [rax + rax] ; ret
0x0000000000005014 : and ch, cl ; out 0x48, al ; insb byte ptr [rdi], dx ; retf 0x71a7
0x000000000014f489 : and ch, dh ; call qword ptr [rdi]
0x000000000014f471 : and ch, dh ; jmp qword ptr [rax]
0x0000000000006c54 : and cl, bl ; outsb dx, byte ptr [rsi] ; retf
0x0000000000116030 : and cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000099afe : and cl, ch ; wait ; retf -1
0x00000000000f92a2 : and cl, dl ; call 0xffffffffc3117332
0x00000000000f9d02 : and cl, dl ; call 0xffffffffc3117d92
0x000000000014a789 : and dh, bh ; jmp rsp
0x00000000000b46f5 : and dh, bh ; ret
0x000000000012c74c : and dh, dl ; cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000003a8f : and dl, byte ptr [rax + 0x94c363a] ; ret
0x0000000000000bce : and dl, byte ptr [rax] ; pop rdx ; push rcx ; adc al, cl ; ret
0x0000000000003b31 : and dl, byte ptr [rbp - 0x21341c32] ; xchg eax, ebp ; ret 0xd002
0x0000000000008467 : and dword ptr [r15 - 0x4fa14d19], ebx ; out -0x73, eax ; ret
0x00000000000b46f3 : and dword ptr [r8], 0xfffffffe ; ret
0x0000000000004b30 : and dword ptr [rax - 0x37], edi ; push rbp ; retf -0x2850
0x00000000000b46f4 : and dword ptr [rax], 0xfffffffe ; ret
0x000000000014da25 : and dword ptr [rax], eax ; add al, cl ; cmp dh, ah ; call qword ptr [rbx]
0x000000000014da3d : and dword ptr [rax], eax ; add al, dl ; cmp dh, ah ; call qword ptr [rdi]
0x0000000000025e14 : and dword ptr [rax], eax ; lldt bx ; ret 0x13
0x0000000000014354 : and dword ptr [rax], eax ; lldt cx ; ret 0x13
0x0000000000023aa4 : and dword ptr [rax], eax ; lldt si ; ret 0x13
0x00000000000141bc : and dword ptr [rax], eax ; lldt word ptr [rax] ; ret
0x0000000000025cdc : and dword ptr [rax], eax ; lldt word ptr [rdx] ; ret
0x0000000000023ad4 : and dword ptr [rax], eax ; ltr di ; ret 0x13
0x000000000001439c : and dword ptr [rax], eax ; ltr dx ; ret 0x13
0x0000000000025e44 : and dword ptr [rax], eax ; ltr sp ; ret 0x13
0x00000000000bbd93 : and dword ptr [rax], eax ; or byte ptr [rax], al ; ret
0x000000000002606c : and dword ptr [rax], eax ; sldt ecx ; ret 0x13
0x0000000000023d44 : and dword ptr [rax], eax ; sldt esp ; ret 0x13
0x0000000000025d0c : and dword ptr [rax], eax ; sldt word ptr [rax] ; ret
0x0000000000026aec : and dword ptr [rax], eax ; sldt word ptr [rax] ; ret 0x13
0x00000000000239b4 : and dword ptr [rax], eax ; sldt word ptr [rbx] ; ret
0x00000000000141a4 : and dword ptr [rax], eax ; sldt word ptr [rdi] ; ret
0x00000000000142dc : and dword ptr [rax], eax ; str eax ; ret 0x13
0x0000000000023a5c : and dword ptr [rax], eax ; str ebp ; ret 0x13
0x0000000000025dcc : and dword ptr [rax], eax ; str edx ; ret 0x13
0x0000000000025c7c : and dword ptr [rax], eax ; str word ptr [rcx] ; ret
0x000000000001de34 : and dword ptr [rax], eax ; verr ax ; ret
0x0000000000025e8c : and dword ptr [rax], eax ; verr bp ; ret 0x13
0x000000000001442c : and dword ptr [rax], eax ; verr bx ; ret 0x13
0x0000000000023b04 : and dword ptr [rax], eax ; verw ax ; ret 0x13
0x00000000000261a4 : and dword ptr [rax], eax ; verw si ; ret 0x13
0x00000000000147bc : and dword ptr [rax], eax ; verw sp ; ret 0x13
0x00000000000bba8b : and dword ptr [rbx], eax ; std ; inc dword ptr [rbp + 0x5b1f75c0] ; ret
0x00000000000fdb3f : and dword ptr [rcx + 0x18], esi ; ret
0x000000000015d96d : and dword ptr [rcx], eax ; add al, al ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000015da45 : and dword ptr [rcx], eax ; add al, bh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000015da15 : and dword ptr [rcx], eax ; add al, ch ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000015d985 : and dword ptr [rcx], eax ; add al, cl ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000015da2d : and dword ptr [rcx], eax ; add al, dh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x0000000000173fae : and dword ptr [rcx], eax ; sbb esi, dword ptr [rsi + 5] ; retf 3
0x0000000000008468 : and dword ptr [rdi - 0x4fa14d19], ebx ; out -0x73, eax ; ret
0x0000000000006b94 : and dword ptr [rsi], esp ; enter 0x3a2c, -0x1f ; add ecx, dword ptr [rcx] ; ret 0xca53
0x00000000000191d8 : and eax, 0 ; add byte ptr [rax], al ; add ah, ch ; ret
0x0000000000025e11 : and eax, 0x210000 ; lldt bx ; ret 0x13
0x0000000000014351 : and eax, 0x210000 ; lldt cx ; ret 0x13
0x0000000000023aa1 : and eax, 0x210000 ; lldt si ; ret 0x13
0x0000000000014399 : and eax, 0x210000 ; ltr dx ; ret 0x13
0x0000000000025e41 : and eax, 0x210000 ; ltr sp ; ret 0x13
0x0000000000026069 : and eax, 0x210000 ; sldt ecx ; ret 0x13
0x0000000000023d41 : and eax, 0x210000 ; sldt esp ; ret 0x13
0x00000000000142d9 : and eax, 0x210000 ; str eax ; ret 0x13
0x0000000000023a59 : and eax, 0x210000 ; str ebp ; ret 0x13
0x0000000000025dc9 : and eax, 0x210000 ; str edx ; ret 0x13
0x00000000000dff5a : and eax, 0x48000000 ; mov edi, eax ; call r8
0x0000000000123f2c : and eax, 0x48087500 ; mov eax, edi ; ret
0x00000000001240cc : and eax, 0x48e57400 ; mov edi, ebx ; pop rbx ; jmp rax
0x0000000000106802 : and eax, 0x4c000000 ; mov edi, esi ; call rcx
0x000000000014de3d : and eax, 0x4de00000 ; hlt ; call qword ptr [rax]
0x0000000000178d6a : and eax, 0x5451b01 ; in eax, dx ; add dword ptr [rcx], eax ; retf 0x501
0x00000000001176ee : and eax, 0x8948fff7 ; ret
0x00000000000c6e51 : and eax, 0x8948fffc ; ret
0x0000000000007fe7 : and eax, 0x97d546ab ; fsub st(6), st(0) ; scasb al, byte ptr [rdi] ; ret
0x00000000001491ad : and eax, 0xdf340002 ; sti ; call rsp
0x00000000000a0215 : and eax, 0xe4842223 ; pushfq ; retf
0x000000000012e4fc : and eax, 0xe9087500 ; pop rbx ; retf -0xb
0x000000000008dbfd : and eax, 0xf ; add rax, rdx ; ret
0x00000000001247d6 : and eax, 0xf3067500 ; ret
0x0000000000124401 : and eax, 0xf3137500 ; ret
0x00000000000b3afb : and eax, 0xfffffffd ; add eax, 6 ; ret
0x00000000000b3b1b : and eax, 0xfffffffd ; add eax, 7 ; ret
0x00000000000b3b5b : and eax, 0xfffffffe ; add eax, 4 ; ret
0x00000000000b3b7b : and eax, 0xfffffffe ; add eax, 6 ; ret
0x000000000009bf3c : and eax, 0xfffffffe ; ret
0x0000000000092397 : and eax, 1 ; ret
0x0000000000026ae9 : and eax, dword ptr [rax] ; add byte ptr [rcx], ah ; add byte ptr [rdi], cl ; add byte ptr [rax], al ; ret 0x13
0x00000000000a3c83 : and eax, edx ; ret
0x00000000000bd069 : and ebp, dword ptr [rsp + rbp + 0x34894800] ; ret 0x8b48
0x00000000000a2389 : and ebx, dword ptr [rcx - 0x76b70002] ; ret
0x00000000000d9af7 : and ebx, eax ; nop dword ptr [rax] ; jmp rax
0x000000000010e7e5 : and ebx, esi ; pop rsi ; or rbx, rax ; call 0x8b2e8
0x00000000000d765c : and ecx, dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001263a1 : and ecx, dword ptr [rcx - 0x76b7ffff] ; ret 0x8348
0x00000000001474f1 : and ecx, edi ; call rsp
0x000000000012483c : and edi, dword ptr [rax - 1] ; pop rbx ; ret
0x000000000016b591 : and edi, ebx ; push qword ptr [rip + 0x4000004] ; ret
0x00000000000f8d79 : and edi, ecx ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x000000000014b269 : and edi, edi ; jmp rsp
0x0000000000145ae9 : and edi, esi ; call rsp
0x0000000000119b75 : and edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c7048 : and edi, esp ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fdb7f : and edx, 0xffffffb5 ; or edx, ecx ; mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000006d46 : and esi, dword ptr [rdx - 0x1de81efe] ; ret
0x00000000001450d9 : and esi, esi ; dec esp ; ret 0
0x000000000014c981 : and esi, esp ; call qword ptr [rbx]
0x000000000014c951 : and esi, esp ; call qword ptr [rcx]
0x000000000014c9c9 : and esi, esp ; call qword ptr [rdi]
0x000000000014c939 : and esi, esp ; call qword ptr [rsi]
0x00000000000a0216 : and esp, dword ptr [rdx] ; test ah, ah ; pushfq ; retf
0x00000000000147b8 : and esp, dword ptr [rsi] ; add byte ptr [rax], al ; and dword ptr [rax], eax ; verw sp ; ret 0x13
0x00000000000a5b9e : and r11b, r14b ; ret
0x000000000015da94 : and r8b, byte ptr [rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x00000000000f92a1 : and r9b, r10b ; call 0xffffffffc3117333
0x00000000000f9d01 : and r9b, r10b ; call 0xffffffffc3117d93
0x000000000010e7e4 : and rbx, r14 ; pop rsi ; or rbx, rax ; call 0x8b2e9
0x000000000014a788 : and sil, r15b ; jmp rsp
0x0000000000006b93 : and word ptr [rsi], sp ; enter 0x3a2c, -0x1f ; add ecx, dword ptr [rcx] ; ret 0xca53
0x00000000000068ea : bswap ecx ; fld xword ptr [r8 - 0x7dbcadcb] ; ret 0xfc56
0x00000000000b2123 : bswap ecx ; or byte ptr [rax], al ; ret
0x00000000001063f5 : call 0x1026f2
0x000000000014cde8 : call 0x1214c21d
0x000000000012bc65 : call 0x128732
0x000000000014c3c8 : call 0x1314b7ec
0x0000000000152c08 : call 0x1315221e
0x0000000000154208 : call 0x1315383d
0x0000000000154358 : call 0x1315398e
0x0000000000154378 : call 0x131539ae
0x0000000000154398 : call 0x131539ce
0x0000000000161348 : call 0x13160c1d
0x000000000015da18 : call 0x1415d1d3
0x000000000015f6a8 : call 0x1415eef3
0x00000000001660b8 : call 0x14165a6d
0x00000000001664f8 : call 0x14165eb8
0x0000000000166558 : call 0x14165f18
0x0000000000169218 : call 0x14168cbd
0x00000000001696d8 : call 0x14169187
0x000000000014c418 : call 0x1814b83c
0x000000000014c468 : call 0x1814b88c
0x00000000001671b8 : call 0x23166b87
0x0000000000168488 : call 0x23167e99
0x0000000000166118 : call 0x28165ace
0x00000000001698c8 : call 0x2816937d
0x00000000000035f9 : call 0x6f970069
0x000000000010cc2d : call 0x88ed2
0x00000000000acd08 : call 0x88f42
0x00000000000dc511 : call 0x88f62
0x00000000000cc5a4 : call 0x89002
0x00000000000acead : call 0x89112
0x00000000000cc8f8 : call 0x89322
0x00000000000cc8f7 : call 0x89323
0x00000000000cc8f6 : call 0x89324
0x00000000000cd0a1 : call 0x89392
0x00000000000bd1f3 : call 0x89432
0x000000000010ccb3 : call 0x89742
0x00000000000ad7b2 : call 0x89a52
0x000000000011cf72 : call 0x89a58
0x00000000000bd220 : call 0x89cf2
0x00000000000bd2a8 : call 0x89d72
0x000000000012d530 : call 0x89fc2
0x00000000000ddd57 : call 0x8a022
0x00000000000cde9e : call 0x8a0b2
0x00000000000ce540 : call 0x8a762
0x000000000009df96 : call 0x8a9b2
0x00000000000ae03f : call 0x8ab42
0x000000000009e9be : call 0x8ac52
0x00000000000fea42 : call 0x8ac82
0x00000000000fe1c3 : call 0x8acc2
0x000000000008ebe4 : call 0x8aed2
0x000000000009e3f2 : call 0x8aef2
0x000000000012e547 : call 0x8af62
0x00000000000ae4ec : call 0x8aff2
0x00000000000ceda0 : call 0x8b032
0x000000000009eee2 : call 0x8b0f2
0x000000000009ef54 : call 0x8b1b2
0x000000000010e7eb : call 0x8b2e2
0x00000000000ee8fc : call 0x8b3b2
0x00000000000df4dc : call 0x8b762
0x000000000009ed34 : call 0x8b7f2
0x00000000000bf643 : call 0x8b8c2
0x00000000000bf68b : call 0x8b962
0x000000000008f995 : call 0x8bc22
0x00000000000ff859 : call 0x8bc27
0x000000000009fa79 : call 0x8bcb2
0x000000000010fad7 : call 0x8bdd2
0x000000000008fbd4 : call 0x8bdf2
0x000000000008fcb5 : call 0x8bf52
0x00000000000afeb6 : call 0x8c102
0x00000000000bf6e4 : call 0x8c1d0
0x00000000000bff22 : call 0x8c1f8
0x0000000000095916 : call 0x92382
0x00000000000c342a : call 0xbfe42
0x00000000000c3ba5 : call 0xbfe52
0x0000000000112214 : call 0xde4f2
0x0000000000112362 : call 0xde5c2
0x0000000000099427 : call 0xffffffffa4f55e2f
0x00000000000929ac : call 0xffffffffc30b0a38
0x00000000000d674e : call 0xffffffffc30eaf59
0x00000000000f9313 : call 0xffffffffc30f931c
0x00000000000f9593 : call 0xffffffffc30f959c
0x00000000000f9d73 : call 0xffffffffc30f9d7c
0x00000000000f9ef3 : call 0xffffffffc30f9efc
0x00000000000f92a4 : call 0xffffffffc3117330
0x00000000000f9d04 : call 0xffffffffc3117d90
0x00000000000fa6d5 : call 0xffffffffc3153226
0x00000000000fa6d4 : call 0xffffffffc3153227
0x00000000000d29c9 : call 0xffffffffc324b31a
0x00000000000d2a09 : call 0xffffffffc324b35a
0x00000000000caedd : call 0xffffffffc349ea2e
0x000000000010fce0 : call 0xffffffffc39afce5
0x00000000000d45da : call 0xffffffffc4004955
0x00000000000d776a : call 0xffffffffc4007ae5
0x00000000000074b9 : call 0xffffffffcb0b55fb
0x00000000000074b8 : call 0xffffffffcb0b55fc
0x00000000000d85ad : call 0xffffffffcb4ac0fe
0x000000000015f9b8 : call 0xffffffffd115f205
0x00000000001609c8 : call 0xffffffffd2160250
0x0000000000143bfc : call 0xffffffffe2143ad7
0x0000000000109860 : call 0xfffffffff821634f
0x00000000000fe9b0 : call 0xfffffffff8d2b4a0
0x00000000000fb930 : call 0xfffffffff90b8420
0x0000000000143373 : call qword ptr [rax + 0x10fffc80]
0x0000000000143ba3 : call qword ptr [rax + 0x20fffed0]
0x0000000000143bef : call qword ptr [rax - 0x1e00012b]
0x000000000001b1c9 : call qword ptr [rax]
0x000000000014523b : call qword ptr [rbx + rcx*8]
0x0000000000002f88 : call qword ptr [rbx]
0x000000000000443d : call qword ptr [rcx]
0x000000000013df23 : call qword ptr [rdi]
0x000000000013ce7f : call qword ptr [rdx - 0x35]
0x00000000000138f1 : call qword ptr [rdx]
0x000000000014c93b : call qword ptr [rsi]
0x00000000000e01e0 : call r11
0x0000000000090ebe : call r12
0x000000000009121e : call r14
0x000000000009106b : call r15
0x00000000000dba7e : call r8
0x00000000000de98b : call r9
0x000000000008fa36 : call rax
0x0000000000090fef : call rbx
0x00000000000263c8 : call rcx
0x00000000000060cd : call rdi
0x00000000000ba550 : call rdx
0x000000000009121f : call rsi
0x0000000000090ebf : call rsp
0x00000000000003ef : cdq ; add byte ptr [rax], al ; and byte ptr [rax], al ; adc byte ptr [rcx + rax], al ; retf 0x19
0x000000000014792d : cdq ; add dword ptr [rax], eax ; in al, 0x4d ; stc ; call rsp
0x00000000001652dd : cdq ; add dword ptr [rax], eax ; mov al, 0x7b ; stc ; call qword ptr [rcx]
0x00000000000c164f : cdq ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000013ce75 : cdq ; cmc ; dec ecx ; retf
0x0000000000110042 : cdq ; idiv edi ; nop dword ptr [rax] ; jmp rax
0x0000000000152b39 : cdq ; jmp qword ptr [rax]
0x00000000000bfde3 : cdq ; mov eax, 0x8948fffc ; ret
0x00000000000ad6b3 : cdq ; ret
0x00000000000043ff : cdq ; ret 0x5414
0x0000000000003f96 : cdq ; ret 0xd424
0x00000000000ad7b3 : cdq ; ret 0xfffd
0x0000000000106453 : cdq ; ret 0xffff
0x00000000000c17de : cdqe ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000092455 : cdqe ; mov qword ptr [r10 + 8], rax ; mov rax, r10 ; ret
0x00000000000a1f85 : cdqe ; mov qword ptr [rdi], rax ; sub rax, 1 ; ret
0x000000000016e7a8 : cdqe ; sti ; call qword ptr [rbx]
0x000000000014b938 : clc ; adc esp, esi ; jmp qword ptr [rbx]
0x00000000000b345c : clc ; add cl, byte ptr [rax + 0x39] ; retf 0x2574
0x000000000011ea8a : clc ; add cl, byte ptr [rax - 0x77] ; xor r11b, r14b ; ret
0x00000000001204e0 : clc ; add cl, byte ptr [rcx + 0x29] ; retf -0x76b4
0x00000000000a0d2b : clc ; add dh, byte ptr [rbp + rdx - 0xd] ; ret
0x00000000000a1d68 : clc ; add dword ptr [rax + rdx + 0x5b], esi ; ret
0x0000000000148895 : clc ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp al, 0xfb ; jmp rsp
0x00000000000bf895 : clc ; add dword ptr [rbp + rdx - 0xd], esi ; ret
0x0000000000104709 : clc ; add rdx, 0x18 ; mov qword ptr [rdi], rdx ; ret
0x00000000000d29c5 : clc ; add rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x000000000008dbfc : clc ; and eax, 0xf ; add rax, rdx ; ret
0x0000000000141c52 : clc ; call qword ptr [rax]
0x000000000015f692 : clc ; call qword ptr [rbx]
0x00000000001606a2 : clc ; call qword ptr [rcx]
0x000000000015f92a : clc ; call qword ptr [rdx]
0x000000000015f9ba : clc ; call rax
0x00000000001609ca : clc ; call rcx
0x000000000015f532 : clc ; call rdi
0x000000000014661a : clc ; call rsp
0x000000000015f738 : clc ; clc ; call qword ptr [rbx]
0x0000000000144eb1 : clc ; cmc ; call rsp
0x00000000000b537e : clc ; dec byte ptr [rdi] ; test byte ptr [rdx - 0x77000000], dh ; ret 0x3948
0x0000000000102997 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000010691e : clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001024da : clc ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x00000000000ff14e : clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rax ; retf
0x00000000000fd0e4 : clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf8eb
0x00000000000ff168 : clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x00000000000b23d9 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001029c4 : clc ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000106fed : clc ; dec dword ptr [rbp - 0x7b] ; push qword ptr [rsp + rdi*4 - 0x15] ; retf 0x2e66
0x0000000000146d7a : clc ; dec dword ptr [rbx - 0x1f9bffff] ; clc ; call rsp
0x000000000010ee49 : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000146f2a : clc ; dec dword ptr [rdx + rbp*2 - 0x11fbffff] ; clc ; jmp rsp
0x0000000000146de2 : clc ; dec esp ; add dword ptr gs:[rax], eax ; add al, 0xe8 ; clc ; jmp rsp
0x00000000000c7c05 : clc ; inc dword ptr [rcx + 0xf] ; les r9d, ptr [rax - 0x7d] ; ret
0x00000000000e0966 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000001066e7 : clc ; inc dword ptr [rcx - 0x80] ; jle 0x10672e ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001467c2 : clc ; inc esp ; cmp al, 1 ; add ah, ah ; xor eax, edi ; jmp rsp
0x0000000000171418 : clc ; jbe 0x17141a ; jmp qword ptr [rbx]
0x00000000000921d3 : clc ; je 0x921e7 ; mov rax, rsi ; ret
0x0000000000006c02 : clc ; jle 0x6bb7 ; ret 0x66a
0x000000000015f79a : clc ; jmp qword ptr [rax]
0x000000000015fcca : clc ; jmp qword ptr [rdx]
0x00000000000960b0 : clc ; jmp rax
0x00000000001467ca : clc ; jmp rsp
0x0000000000146a92 : clc ; lcall ptr [rbp + rcx*2 + 0x72140001] ; clc ; call rsp
0x00000000000fb9c2 : clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000139129 : clc ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rdi], rdx ; ret
0x0000000000146c2a : clc ; ljmp ptr [rcx + rbx*2 - 0x518bffff] ; clc ; jmp rsp
0x0000000000146a1a : clc ; ljmp ptr [rcx + rcx*2 + 0x64640001] ; clc ; jmp rsp
0x0000000000141c4e : clc ; ljmp ptr [rsp + rax*2 - 8] ; call qword ptr [rax]
0x0000000000141c4a : clc ; ljmp ptr [rsp + rax*2 - 8] ; ljmp ptr [rsp + rax*2 - 8] ; call qword ptr [rax]
0x000000000015da48 : clc ; mov bl, 0xf7 ; call qword ptr [rbx]
0x00000000000d29d5 : clc ; mov qword ptr [rdi], rdx ; ret
0x000000000008ec3e : clc ; nop ; pop rbx ; ret
0x00000000001684e8 : clc ; or edi, edx ; jmp qword ptr [rdx]
0x00000000000de5cc : clc ; push qword ptr [rax + rcx - 0xd] ; ret
0x00000000001130df : clc ; push qword ptr [rbp + rcx + 0x48] ; mov eax, ebx ; pop rbx ; ret
0x00000000001467fa : clc ; push qword ptr [rbp + rdi + 0x33b40001] ; clc ; jmp rsp
0x0000000000146692 : clc ; push qword ptr [rbp + rsi + 0x8e40001] ; clc ; call rsp
0x00000000000d5f3f : clc ; push qword ptr [rbp - 0x13] ; ret
0x00000000000d2e30 : clc ; push qword ptr [rbp - 0x14] ; ret
0x0000000000126d92 : clc ; push qword ptr [rbp - 0x16] ; ret
0x000000000013aa8f : clc ; push qword ptr [rbp - 0x1b] ; ret
0x00000000000e9211 : clc ; push qword ptr [rbx + rcx - 0xd] ; ret
0x0000000000146612 : clc ; push qword ptr [rbx + rsi + 0x2a40001] ; clc ; call rsp
0x0000000000146c5a : clc ; push qword ptr [rdx + rbx*2 - 0x4e6bffff] ; clc ; jmp rsp
0x00000000001466d2 : clc ; push qword ptr [rsi + rsi + 0xce40001] ; clc ; call rsp
0x0000000000146652 : clc ; push qword ptr [rsp + rsi + 0x5a40001] ; clc ; call rsp
0x0000000000072f48 : clc ; ret
0x00000000000c6823 : clc ; ret 0x2b
0x0000000000017b98 : clc ; ret 0x37
0x000000000000468f : clc ; ret 0x4c89
0x00000000001518a8 : clc ; ret 0xfff5
0x000000000000c520 : clc ; ret 3
0x0000000000005518 : clc ; retf
0x00000000000fe1c4 : clc ; retf -8
0x0000000000004ee4 : clc ; retf 0x1b41
0x0000000000079de8 : clc ; retf 0x37
0x0000000000008130 : clc ; retf 0x582c
0x0000000000070048 : clc ; sal dword ptr [rdi], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x37
0x000000000012d015 : clc ; sar rax, 2 ; ret
0x0000000000147d99 : clc ; stc ; call rsp
0x00000000000cb78d : clc ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000153ea8 : clc ; sub esi, esi ; call qword ptr [rdx]
0x0000000000107283 : clc ; sub rax, r8 ; ret
0x00000000000d4992 : clc ; test eax, eax ; jg 0xd4954 ; jmp 0xd4962
0x00000000000d4991 : clc ; test eax, eax ; jg 0xd4955 ; jmp 0xd4963
0x000000000016e658 : clc ; xchg eax, edi ; sti ; call qword ptr [rbx]
0x000000000008fce9 : clc ; xchg qword ptr [rdx], rax ; ret
0x0000000000090462 : clc ; xchg qword ptr [rip + 0x2f47b6], rax ; ret
0x000000000014d528 : clc ; xor al, 0xf4 ; call qword ptr [rbx]
0x000000000014d3c8 : clc ; xor dh, ah ; call qword ptr [rbx]
0x000000000015b46d : cld ; add byte ptr [rax], al ; mov esi, edi ; call qword ptr [rcx]
0x0000000000148915 : cld ; add dword ptr [rax], eax ; adc al, 0x49 ; sti ; jmp rsp
0x0000000000148935 : cld ; add dword ptr [rax], eax ; je 0x14898b ; sti ; call rsp
0x0000000000146a34 : cld ; add qword ptr [r8], rax ; push rsp ; clc ; call rsp
0x00000000001469cc : cld ; add qword ptr [rax], r8 ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; clc ; jmp rsp
0x0000000000143372 : cld ; call qword ptr [rax + 0x10fffc80]
0x000000000014330a : cld ; call qword ptr [rax]
0x0000000000171bba : cld ; call qword ptr [rbx]
0x0000000000171ae2 : cld ; call qword ptr [rcx]
0x0000000000171572 : cld ; call qword ptr [rdi]
0x00000000001716d2 : cld ; call qword ptr [rdx]
0x00000000001717da : cld ; call qword ptr [rsi]
0x00000000001727f2 : cld ; call rdx
0x000000000017107a : cld ; call rsi
0x00000000001495b2 : cld ; call rsp
0x00000000000c7b27 : cld ; cmp rax, rsi ; jne 0xc7b17 ; ret
0x00000000000c7b26 : cld ; cmp rax, rsi ; jne 0xc7b18 ; ret
0x00000000000ba0e6 : cld ; dec dword ptr [rax - 0x75] ; jl 0xba119 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000bc809 : cld ; dec dword ptr [rax - 0x75] ; jl 0xbc83c ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000c2a53 : cld ; dec dword ptr [rax - 0x75] ; jl 0xc2a86 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2da1 : cld ; dec dword ptr [rax - 0x75] ; jl 0xc2dd4 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5c4e : cld ; dec dword ptr [rax - 0x75] ; jl 0xc5c81 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5cee : cld ; dec dword ptr [rax - 0x75] ; jl 0xc5d21 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5dca : cld ; dec dword ptr [rax - 0x75] ; jl 0xc5dfd ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5e17 : cld ; dec dword ptr [rax - 0x75] ; jl 0xc5e4a ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000b9ef3 : cld ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000baba1 : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001498ea : cld ; dec dword ptr [rbp + rcx*2 - 0x36fbfffe] ; cld ; jmp rsp
0x00000000000bce24 : cld ; dec dword ptr [rcx + rcx*4 + 0x24] ; ret
0x00000000000bd6f5 : cld ; dec dword ptr [rcx + rcx*4 + 0x2c] ; ret
0x0000000000143306 : cld ; dec esi ; je 0x14330c ; call qword ptr [rax]
0x0000000000143302 : cld ; dec esi ; je 0x14330c ; dec esi ; je 0x143310 ; call qword ptr [rax]
0x0000000000149a82 : cld ; dec esp ; push rbp ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; cld ; jmp rsp
0x000000000014957a : cld ; dec esp ; xor eax, 0x4a40002 ; cld ; jmp rsp
0x00000000001583a1 : cld ; idiv bh ; xlatb ; add byte ptr [rax], al ; add byte ptr [rdx + rdi], al ; retf 1
0x0000000000124e50 : cld ; idiv r15b ; nop dword ptr [rax] ; ret
0x00000000000bba3b : cld ; inc dword ptr [rbp - 0x17408b40] ; retf -0x2d5
0x000000000010f058 : cld ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x000000000014336e : cld ; inc eax ; cmp esp, 0xfc8090ff ; call qword ptr [rax]
0x000000000016a38c : cld ; jmp 0xffffffffcba6a398
0x0000000000171492 : cld ; jmp qword ptr [rax]
0x000000000017141a : cld ; jmp qword ptr [rbx]
0x000000000017138a : cld ; jmp qword ptr [rsi]
0x000000000014333a : cld ; jmp rax
0x0000000000149582 : cld ; jmp rsp
0x0000000000149882 : cld ; ljmp ptr [rdx + rcx*2 + 2] ; add byte ptr [rcx + rdx*4 - 4], dh ; call rsp
0x000000000012498d : cld ; mov eax, dword ptr [rax - 4] ; mov qword ptr [rdi + 0x10], rdx ; ret
0x0000000000124990 : cld ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000000f3587 : cld ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000080f3 : cld ; or al, 0x4b ; xchg eax, ebx ; retf 0x42b0
0x000000000014c44c : cld ; or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000000520f : cld ; outsb dx, byte ptr [rsi] ; loope 0x525f ; cmp bl, ah ; retf 0x3ca1
0x000000000015144c : cld ; pop rbx ; add byte ptr [rax], al ; push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rsi
0x0000000000149982 : cld ; push qword ptr [rax + rdx*2 + 2] ; add byte ptr [rsi + rbp*8], dh ; cld ; jmp rsp
0x000000000014967a : cld ; push qword ptr [rbx + rdi + 0x1f540002] ; cld ; call rsp
0x0000000000149a22 : cld ; push qword ptr [rbx + rdx*2 - 0x84bfffe] ; cld ; jmp rsp
0x00000000000c9130 : cld ; ret
0x0000000000177dec : cld ; retf
0x00000000000ae040 : cld ; retf -3
0x0000000000145234 : cld ; retf 0
0x000000000000411c : cld ; retf 0x1631
0x00000000001056c8 : cld ; retf 0x27
0x000000000016834c : cld ; retf 1
0x0000000000147e79 : cld ; stc ; call rsp
0x00000000000d2964 : cld ; sub al, byte ptr [rax] ; ret
0x00000000001779a0 : cld ; syscall
0x0000000000153f4c : cld ; xchg byte ptr [rax], al ; add al, al ; sub dh, dh ; call qword ptr [rdx]
0x0000000000154e4c : cld ; xchg eax, ebp ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xa], cl ; call qword ptr [rbx]
0x00000000000075e7 : cli ; adc dh, byte ptr fs:[rbp - 0x599f767b] ; ret 0xc9d1
0x000000000010ca1a : cli ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cf739 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x8c0f
0x00000000000e56e0 : cli ; add cl, byte ptr [rax + 0x39] ; retf -0x76b7
0x00000000000cf761 : cli ; add cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; ret
0x00000000000cba2e : cli ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000d6f08 : cli ; add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + 9], cl ; ret
0x00000000000b416e : cli ; add dh, byte ptr [rdi + 6] ; ret
0x00000000000b455e : cli ; add dword ptr [rdi + 0x26], esi ; ret
0x000000000014292e : cli ; call qword ptr [rax]
0x0000000000148202 : cli ; call qword ptr [rbx + rcx*8]
0x000000000016921a : cli ; call qword ptr [rbx]
0x000000000016967a : cli ; call qword ptr [rcx]
0x00000000001429d2 : cli ; call rax
0x0000000000169ab2 : cli ; call rdx
0x0000000000147f02 : cli ; call rsp
0x00000000000fc131 : cli ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001429da : cli ; dec dword ptr [rax + 0x79] ; cli ; call qword ptr [rax]
0x00000000000de2ce : cli ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dada8 : cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000148532 : cli ; dec dword ptr [rcx - 0x1d1bffff] ; cli ; jmp rsp
0x00000000000e7aad : cli ; dec dword ptr [rcx - 0x77] ; ret
0x00000000001429d6 : cli ; dec eax ; js 0x1429de ; dec dword ptr [rax + 0x79] ; cli ; call qword ptr [rax]
0x00000000001480a2 : cli ; dec esp ; ret
0x0000000000148022 : cli ; dec esp ; rol byte ptr [rcx], 0 ; push rsp ; adc al, 0xfa ; jmp rsp
0x00000000000bc7d2 : cli ; frndint ; dec dword ptr [rax - 0x77] ; ret
0x0000000000158269 : cli ; idiv bh ; in al, 0 ; add byte ptr [rax], al ; add al, 0x27 ; retf
0x00000000001582c1 : cli ; idiv bh ; out 0, eax ; add byte ptr [rax], al ; add al, 0xe8 ; retf 1
0x0000000000112f62 : cli ; imul esi, edi, 0x58b48ff ; ret
0x000000000014848a : cli ; inc dword ptr [rbp + rbx*8 - 0x2d3bffff] ; cli ; call rsp
0x00000000001429e6 : cli ; inc dword ptr [rdx + 0x75] ; cli ; call rax
0x00000000001429e2 : cli ; inc dword ptr [rdx + 0x75] ; cli ; inc dword ptr [rdx + 0x75] ; cli ; call rax
0x00000000001429ca : cli ; inc dword ptr [rdx + 0x75] ; cli ; inc eax ; jo 0x1429d6 ; call rax
0x00000000001429ce : cli ; inc eax ; jo 0x1429d2 ; call rax
0x000000000014822a : cli ; inc esp ; retf
0x000000000014294e : cli ; jmp qword ptr [rax]
0x000000000016954a : cli ; jmp qword ptr [rbx]
0x00000000001698ca : cli ; jmp qword ptr [rdi]
0x000000000016836a : cli ; jmp qword ptr [rdx]
0x00000000001690ea : cli ; jmp qword ptr [rsi]
0x0000000000142996 : cli ; jmp rax
0x000000000016aeaa : cli ; jmp rdx
0x0000000000168cc2 : cli ; jmp rsi
0x0000000000147eda : cli ; jmp rsp
0x00000000000bbc8d : cli ; jp 0xbbd0d ; jo 0xffffffff941ae299 ; ret 0xb60f
0x00000000000ddd67 : cli ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000014832a : cli ; lcall ptr [rsp + rdx*8 - 0x5bbbffff] ; cli ; call rsp
0x0000000000147fe2 : cli ; ljmp ptr [rdi + rdi*4 + 0x11f40001] ; cli ; jmp rsp
0x0000000000147fb2 : cli ; ljmp ptr [rsi + rdi*4 + 0xe940001] ; cli ; jmp rsp
0x0000000000147f52 : cli ; ljmp ptr [rsp + rdi*4 + 0x9b40001] ; cli ; jmp rsp
0x00000000000bbda2 : cli ; mov eax, esi ; ret
0x00000000000c3152 : cli ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x00000000001481aa : cli ; push qword ptr [rcx + rcx*8 + 0x4c040001] ; cli ; call rsp
0x0000000000147ed2 : cli ; push qword ptr [rcx + rdi*4 + 0x1a40001] ; cli ; jmp rsp
0x0000000000148622 : cli ; push qword ptr [rdi - 0x4bffff] ; cli ; call rsp
0x00000000001481ea : cli ; push qword ptr [rdx + rcx*8 + 0x4e840001] ; cli ; call rsp
0x0000000000148562 : cli ; push qword ptr [rdx - 0x162bffff] ; cli ; jmp rsp
0x00000000001481fa : cli ; push rsp ; retf 1
0x0000000000023e98 : cli ; ret 0x13
0x000000000012bd02 : cli ; retf
0x0000000000147e39 : cli ; stc ; call rsp
0x0000000000170771 : cli ; sti ; call qword ptr [rcx]
0x00000000000d0632 : cli ; test eax, 0x894cfffb ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1aa2 : cli ; xchg eax, edi ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000016aea5 : cmc ; add dword ptr [rax], eax ; test al, 0xf7 ; cli ; jmp rdx
0x00000000001744e0 : cmc ; add eax, 0x11eb05 ; retf
0x0000000000150332 : cmc ; call qword ptr [rax]
0x000000000014fc52 : cmc ; call qword ptr [rbx]
0x000000000014f33a : cmc ; call qword ptr [rdi]
0x000000000013ce7e : cmc ; call qword ptr [rdx - 0x35]
0x000000000014f11a : cmc ; call qword ptr [rdx]
0x000000000013cdf6 : cmc ; call rax
0x000000000015155a : cmc ; call rcx
0x0000000000150a8a : cmc ; call rsi
0x000000000013cb92 : cmc ; call rsp
0x00000000000fc6a4 : cmc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000010f057 : cmc ; cld ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x0000000000152141 : cmc ; cmc ; jmp qword ptr [rsi]
0x000000000012c74e : cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000012c57b : cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000132f4a : cmc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000012ce4c : cmc ; dec dword ptr [rbp - 0x7b] ; div byte ptr [rbp + rdi*4 - 0x15] ; retf
0x000000000013ce76 : cmc ; dec ecx ; retf
0x00000000000fc427 : cmc ; idiv eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000015ef49 : cmc ; idiv edi ; ret
0x000000000013c93e : cmc ; inc dword ptr [rax + 0x62] ; cmc ; inc dword ptr [rax + 0x62] ; cmc ; jmp qword ptr [rax]
0x000000000013c83e : cmc ; inc dword ptr [rax + 0x62] ; cmc ; jmp qword ptr [rax]
0x000000000013cdf2 : cmc ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rax
0x000000000013cdee : cmc ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rax
0x0000000000144bba : cmc ; inc dword ptr [rcx + rbp*4 - 0x688c0000] ; cmc ; call rsp
0x0000000000144e82 : cmc ; inc dword ptr [rdi + rsi*4 - 0x1a0c0000] ; cmc ; call rsp
0x000000000013cb4e : cmc ; inc esp ; jle 0x13cb4d ; jmp rdx
0x000000000013c842 : cmc ; jmp qword ptr [rax]
0x00000000001520e2 : cmc ; jmp qword ptr [rbx]
0x000000000013ce86 : cmc ; jmp qword ptr [rdi]
0x00000000001518da : cmc ; jmp qword ptr [rsi]
0x0000000000152192 : cmc ; jmp rbx
0x000000000013cad2 : cmc ; jmp rdx
0x000000000013cb9a : cmc ; jmp rsp
0x000000000013b955 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000013c9c2 : cmc ; lcall ptr [rax + 0x7b] ; cmc ; jmp qword ptr [rax]
0x000000000012a907 : cmc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013ce7a : cmc ; ljmp ptr [rbx - 0x35] ; cmc ; call qword ptr [rdx - 0x35]
0x000000000013cbe6 : cmc ; ljmp ptr [rbx - 0x72] ; cmc ; jmp qword ptr [rax]
0x000000000013cb4a : cmc ; ljmp ptr [rdx + rdi*2] ; cmc ; inc esp ; jle 0x13cb51 ; jmp rdx
0x000000000013cace : cmc ; ljmp ptr [rdx + rdi*2] ; cmc ; jmp rdx
0x000000000013caca : cmc ; ljmp ptr [rdx + rdi*2] ; cmc ; ljmp ptr [rdx + rdi*2] ; cmc ; jmp rdx
0x00000000001028f7 : cmc ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000003dab : cmc ; outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; loop 0x3df9 ; retf -0x40c3
0x0000000000144ad2 : cmc ; push qword ptr [rbx + 0x73a40000] ; cmc ; jmp rsp
0x0000000000099dd7 : cmc ; ret
0x0000000000014838 : cmc ; ret 0x13
0x00000000000208d8 : cmc ; retf 1
0x00000000000ac681 : cmc ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000010d1a6 : cmc ; xor edx, edx ; mov rdi, rbx ; call r8
0x00000000000d28ae : cmova eax, edx ; ret
0x00000000000d28ad : cmova rax, rdx ; ret
0x0000000000126b34 : cmovae eax, edx ; ret
0x0000000000126b33 : cmovae rax, rdx ; ret
0x000000000009d88a : cmovbe eax, ecx ; ret
0x000000000009d889 : cmovbe rax, rcx ; ret
0x00000000000a10fa : cmove eax, edi ; ret
0x00000000000a7902 : cmove eax, edx ; ret
0x00000000000a10f9 : cmove rax, rdi ; ret
0x00000000000a7901 : cmove rax, rdx ; ret
0x00000000000d3515 : cmovge eax, ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d3247 : cmovge eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d295b : cmovge eax, edi ; ret
0x00000000000c7b65 : cmovne eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000923e8 : cmovne eax, edx ; ret
0x0000000000003e76 : cmovno edx, dword ptr [rsi + rsi*4] ; retf -0x4fea
0x00000000000d28c8 : cmovs eax, dword ptr [rbp - 0xcfd8a2e] ; ret
0x00000000000bb597 : cmovs eax, dword ptr [rbx + 0x5d5b18c4] ; ret
0x00000000000bc480 : cmovs eax, edx ; add rsp, 8 ; ret
0x00000000000b30ce : cmovs ebp, dword ptr [rcx] ; retf
0x00000000000d8428 : cmovs ebp, dword ptr [rcx] ; retf 0x148
0x00000000000b411c : cmovs ecx, dword ptr [rbx + 0x29480857] ; retf -0x7cb8
0x00000000000b22a0 : cmovs ecx, dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x00000000000a3d43 : cmovs edi, dword ptr [rcx] ; ret
0x0000000000127135 : cmovs edi, dword ptr [rcx] ; ror byte ptr [rax + 0xf], 1 ; ret 0xdeb
0x0000000000006b98 : cmp ah, cl ; add ecx, dword ptr [rcx] ; ret 0xca53
0x000000000014f4cd : cmp al, 0 ; add byte ptr [rax], ah ; and ch, dh ; jmp qword ptr [rax]
0x00000000000198c8 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x290
0x000000000014f46d : cmp al, 0 ; add byte ptr [rax], al ; and ch, dh ; jmp qword ptr [rax]
0x00000000001518d0 : cmp al, 0 ; add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x0000000000157be8 : cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x000000000014f4e5 : cmp al, 0 ; add byte ptr [rax], ch ; and ch, dh ; call qword ptr [rdi]
0x000000000014f485 : cmp al, 0 ; add byte ptr [rax], cl ; and ch, dh ; call qword ptr [rdi]
0x000000000008f164 : cmp al, 0x10 ; jne 0x8f17e ; xor eax, eax ; ret
0x000000000014d08c : cmp al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rbx]
0x000000000016d78c : cmp al, 0x1f ; add al, byte ptr [rax] ; push rax ; mov ebx, edi ; call qword ptr [rcx]
0x00000000000af639 : cmp al, 0x24 ; call 0x8c104
0x0000000000112360 : cmp al, 0x24 ; call 0xde5c4
0x000000000000c7f0 : cmp al, 0x2a ; add byte ptr [rax], al ; adc dword ptr [rax], eax ; sldt ebp ; ret
0x000000000016e78c : cmp al, 0x2f ; add al, byte ptr [rax] ; cwde ; sti ; call qword ptr [rbx]
0x000000000015f68c : cmp al, 0x3e ; add dword ptr [rax], eax ; loopne 0x15f6dc ; clc ; call qword ptr [rbx]
0x000000000014fd8c : cmp al, 0x45 ; add byte ptr [rax], al ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x00000000000a038e : cmp al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000095076 : cmp al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001139f2 : cmp al, 0x48 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000921d2 : cmp al, 0x4f ; je 0x921e8 ; mov rax, rsi ; ret
0x000000000017148c : cmp al, 0x5c ; add al, byte ptr [rax] ; jo 0x171510 ; cld ; jmp qword ptr [rax]
0x000000000015218c : cmp al, 0x69 ; add byte ptr [rax], al ; loopne 0x152197 ; cmc ; jmp rbx
0x0000000000094042 : cmp al, 0x7d ; retf -0x74b8
0x0000000000163f8c : cmp al, 0x87 ; add dword ptr [rax], eax ; adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x000000000016448c : cmp al, 0x8c ; add dword ptr [rax], eax ; pop rax ; stc ; call qword ptr [rbx]
0x0000000000154f8c : cmp al, 0x97 ; add byte ptr [rax], al ; add byte ptr [rdi - 0xa], cl ; call qword ptr [rdx]
0x000000000016738c : cmp al, 0xbb ; add dword ptr [rax], eax ; push rax ; retf -7
0x00000000000ff2e0 : cmp al, 0xc9 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016968c : cmp al, 0xde ; add dword ptr [rax], eax ; mov al, 0xa7 ; cli ; call qword ptr [rbx]
0x000000000016a08c : cmp al, 0xe8 ; add dword ptr [rax], eax ; nop ; ret 0xfffa
0x0000000000145239 : cmp al, 0xf6 ; call qword ptr [rbx + rcx*8]
0x00000000001468b1 : cmp al, 0xf8 ; jmp rsp
0x00000000000fb9c0 : cmp al, 0xfb ; clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000148899 : cmp al, 0xfb ; jmp rsp
0x00000000000ac0e0 : cmp al, 0xfb ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000014aa69 : cmp al, 0xfe ; call rsp
0x00000000001467c5 : cmp al, 1 ; add ah, ah ; xor eax, edi ; jmp rsp
0x0000000000023c39 : cmp al, byte ptr [rcx] ; add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], ch ; retf
0x0000000000092807 : cmp al, byte ptr [rdx + 0xf] ; test byte ptr [rsi - 0xd000000], dh ; ret
0x000000000016f2fd : cmp al, byte ptr [rdx] ; add byte ptr [rax - 0x59], dl ; sti ; jmp qword ptr [rdx]
0x000000000016f2e5 : cmp al, byte ptr [rdx] ; add byte ptr [rax], bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x0000000000146889 : cmp bh, al ; jmp rsp
0x0000000000005af8 : cmp bh, dl ; ret 0x9d0c
0x0000000000005213 : cmp bl, ah ; retf 0x3ca1
0x00000000000d8145 : cmp bl, bh ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000000839d : cmp bl, byte ptr [rbp - 0x12e9b167] ; retf 0x577a
0x0000000000004e15 : cmp bl, dh ; ret
0x00000000000adde2 : cmp bl, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000005212 : cmp bl, r12b ; retf 0x3ca1
0x00000000000a37c5 : cmp byte ptr [esi], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009403e : cmp byte ptr [r11], dil ; cmp al, 0x7d ; retf -0x74b8
0x00000000000a3783 : cmp byte ptr [r14], bpl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bde63 : cmp byte ptr [rax + 0x21], cl ; retf
0x00000000000d2ae2 : cmp byte ptr [rax + 0x29], cl ; retf
0x00000000000075be : cmp byte ptr [rax + 0x5456fdc6], dl ; jmp qword ptr [rax]
0x00000000000da9d0 : cmp byte ptr [rax - 0x75], cl ; je 0xdaa01 ; sub byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000db270 : cmp byte ptr [rax - 0x75], cl ; je 0xdb2a1 ; sub byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000010ccad : cmp byte ptr [rax - 0x75], cl ; jl 0x10ccde ; pop rax ; call 0x89748
0x000000000011eb6f : cmp byte ptr [rax - 0x75], cl ; push rdi ; adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x000000000008d5d1 : cmp byte ptr [rax - 0x77], cl ; jle 0x8d5e3 ; ret
0x000000000008d6e1 : cmp byte ptr [rax - 0x77], cl ; jle 0x8d6f3 ; ret
0x000000000008d761 : cmp byte ptr [rax - 0x77], cl ; jle 0x8d773 ; ret
0x00000000000a1201 : cmp byte ptr [rax - 0x77], cl ; jle 0xa1213 ; ret
0x00000000000a1311 : cmp byte ptr [rax - 0x77], cl ; jle 0xa1323 ; ret
0x00000000000a1391 : cmp byte ptr [rax - 0x77], cl ; jle 0xa13a3 ; ret
0x00000000000a14a1 : cmp byte ptr [rax - 0x77], cl ; jle 0xa14b3 ; ret
0x00000000000a1521 : cmp byte ptr [rax - 0x77], cl ; jle 0xa1533 ; ret
0x00000000000e5a44 : cmp byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000008c760 : cmp byte ptr [rax], 0 ; jne 0x8c771 ; mov byte ptr [rax], 1 ; ret
0x000000000008c7e0 : cmp byte ptr [rax], 0 ; jne 0x8c7f1 ; mov byte ptr [rax], 1 ; ret
0x000000000008c89c : cmp byte ptr [rax], 0 ; jne 0x8c8ad ; mov byte ptr [rax], 1 ; ret
0x000000000008c95c : cmp byte ptr [rax], 0 ; jne 0x8c96d ; mov byte ptr [rax], 1 ; ret
0x00000000000a384a : cmp byte ptr [rax], al ; je 0xa3878 ; add rsp, 8 ; ret
0x00000000000a3861 : cmp byte ptr [rax], al ; je 0xa3885 ; ret
0x000000000008c761 : cmp byte ptr [rax], al ; jne 0x8c770 ; mov byte ptr [rax], 1 ; ret
0x000000000008c7e1 : cmp byte ptr [rax], al ; jne 0x8c7f0 ; mov byte ptr [rax], 1 ; ret
0x000000000008c89d : cmp byte ptr [rax], al ; jne 0x8c8ac ; mov byte ptr [rax], 1 ; ret
0x000000000008c95d : cmp byte ptr [rax], al ; jne 0x8c96c ; mov byte ptr [rax], 1 ; ret
0x00000000000dc50b : cmp byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x50 ; call 0x88f68
0x000000000013c9c0 : cmp byte ptr [rbp + rsi*8 - 1], bh ; pop rax ; jnp 0x13c9c3 ; jmp qword ptr [rax]
0x0000000000142478 : cmp byte ptr [rbp - 0x6f9b0007], al ; stc ; jmp rsp
0x00000000000b41d7 : cmp byte ptr [rbx + 0x39490442], cl ; ret 0x8948
0x0000000000092d23 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000b452d : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000092bbf : cmp byte ptr [rbx + 0xb7476fe], al ; xor eax, eax ; ret
0x0000000000094bc6 : cmp byte ptr [rbx + 0xf], dh ; xchg eax, esp ; ret 0x8b48
0x00000000000928ee : cmp byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x0000000000167c48 : cmp byte ptr [rbx - 0x7ff1b5f9], al ; add dword ptr [rbx], eax ; retf 0xa02
0x000000000015f36c : cmp byte ptr [rbx - 0x7ff1b8f9], al ; add dword ptr [rdx], eax ; ret
0x000000000015fcc8 : cmp byte ptr [rbx - 8], cl ; jmp qword ptr [rdx]
0x000000000009403f : cmp byte ptr [rbx], bh ; cmp al, 0x7d ; retf -0x74b8
0x000000000012714d : cmp byte ptr [rcx + rax], dh ; je 0x127146 ; ret
0x00000000000d31ed : cmp byte ptr [rcx + rax], dh ; je 0xd31e6 ; ret
0x000000000012714c : cmp byte ptr [rcx + rax], sil ; je 0x127147 ; ret
0x00000000000d31ec : cmp byte ptr [rcx + rax], sil ; je 0xd31e7 ; ret
0x000000000014fde8 : cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fdc8 : cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x0000000000158e98 : cmp byte ptr [rdi + rsi*8], ah ; jmp qword ptr [rbx]
0x000000000008ca53 : cmp byte ptr [rdi], al ; sete al ; ret
0x0000000000092aa2 : cmp byte ptr [rdi], ch ; jne 0x92a88 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000007202 : cmp byte ptr [rdx*4 + 0x7d293640], ah ; popfq ; ret
0x000000000009b467 : cmp byte ptr [rdx], 0x66 ; je 0x9b477 ; xor eax, eax ; ret
0x00000000000a3c7e : cmp byte ptr [rdx], dh ; setle dl ; and eax, edx ; ret
0x00000000000a3c7d : cmp byte ptr [rdx], sil ; setle dl ; and eax, edx ; ret
0x0000000000154e68 : cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rdx]
0x00000000000a3784 : cmp byte ptr [rsi], ch ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000075bd : cmp byte ptr ds:[rax + 0x5456fdc6], dl ; jmp qword ptr [rax]
0x0000000000095915 : cmp ch, al ; retf -1
0x0000000000007ab8 : cmp ch, bh ; lea ebp, dword ptr [rdx] ; push rax ; scasd eax, dword ptr [rdi] ; retf
0x00000000000061c5 : cmp ch, byte ptr [rbx] ; adc ebp, dword ptr [rbx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sal dword ptr [rbp - 0x7e], 1 ; call rdi
0x0000000000095fc2 : cmp cl, 0x45 ; je 0x95ffb ; xor eax, eax ; pop rbx ; ret
0x00000000000d5bdf : cmp cl, byte ptr [rax + 0x29] ; ret
0x000000000012696f : cmp cl, byte ptr [rax + 0x29] ; retf
0x000000000011e6d5 : cmp cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000000957ad : cmp cl, byte ptr [rax + 0x63] ; retf -0x3d7d
0x000000000014da29 : cmp dh, ah ; call qword ptr [rbx]
0x000000000014da41 : cmp dh, ah ; call qword ptr [rdi]
0x00000000000c23f2 : cmp dh, byte ptr [rax - 4] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e6602 : cmp dh, byte ptr [rbx] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000145221 : cmp dh, dh ; dec esp ; retf 0
0x0000000000145229 : cmp dh, dh ; jmp rsp
0x00000000000e5b87 : cmp dl, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000014294d : cmp dl, bh ; jmp qword ptr [rax]
0x0000000000003700 : cmp dl, byte ptr [rdi] ; or ah, dh ; retf
0x0000000000007427 : cmp dl, dl ; retf -0x6c24
0x00000000000a78a8 : cmp dword ptr [rax + 0x10], edx ; je 0xa78a6 ; ret
0x00000000000d2a64 : cmp dword ptr [rax - 0x18], 0 ; sete al ; ret
0x00000000000d45d8 : cmp dword ptr [rax - 0x18], edx ; jb 0xd45e6 ; ret
0x00000000000d7768 : cmp dword ptr [rax - 0x18], edx ; jb 0xd7776 ; ret
0x00000000000efb86 : cmp dword ptr [rax - 0x77], ecx ; ret 0x294c
0x0000000000091577 : cmp dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000000a3849 : cmp dword ptr [rax], 0 ; je 0xa3879 ; add rsp, 8 ; ret
0x00000000000a3860 : cmp dword ptr [rax], 0 ; je 0xa3886 ; ret
0x0000000000092aa1 : cmp dword ptr [rax], 0x2f ; jne 0x92a89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000276b0 : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000bbf9a : cmp dword ptr [rbx + 8], edi ; je 0xbbfae ; pop rbx ; ret
0x00000000000d4fd6 : cmp dword ptr [rbx + rdi + 0x25], ecx ; retf 0x2ad5
0x00000000000050cd : cmp dword ptr [rbx - 0x10], ecx ; stc ; push rbp ; retf -0x25e2
0x000000000008d7c2 : cmp dword ptr [rbx], eax ; sete cl ; mov eax, ecx ; pop rbx ; ret
0x00000000000bbfa8 : cmp dword ptr [rbx], esi ; pop rbx ; sete al ; ret
0x000000000013ae5c : cmp dword ptr [rcx + rax*4], esi ; je 0x13ae56 ; ret
0x00000000000d630c : cmp dword ptr [rcx + rax*4], esi ; je 0xd6306 ; ret
0x00000000000b4e0a : cmp dword ptr [rcx], eax ; je 0xb4e1f ; xor eax, eax ; ret
0x00000000000b90b5 : cmp dword ptr [rdi + 0x18], esi ; je 0xb90c6 ; ret
0x00000000000eec65 : cmp dword ptr [rdi + 0x20], edx ; jb 0xeec77 ; xor eax, eax ; ret
0x00000000000eec95 : cmp dword ptr [rdi + 0x20], edx ; jb 0xeeca7 ; xor eax, eax ; ret
0x0000000000003e72 : cmp dword ptr [rdi + 0x410fa904], eax ; adc al, 0xb6 ; retf -0x4fea
0x00000000001257d1 : cmp dword ptr [rdi + 8], 0 ; sete al ; ret
0x0000000000125793 : cmp dword ptr [rdi + 8], eax ; jb 0x1257a6 ; ret
0x0000000000139343 : cmp dword ptr [rdi + 8], eax ; jb 0x139356 ; ret
0x00000000000b8b00 : cmp dword ptr [rdi + 8], eax ; setne al ; ret
0x00000000001004e3 : cmp dword ptr [rdi - 0x76b70008], esi ; ret
0x0000000000006ffd : cmp dword ptr [rdi], -0x77 ; ret
0x000000000008fb81 : cmp dword ptr [rdi], 0 ; sete al ; ret
0x00000000000b21d1 : cmp dword ptr [rdi], 0 ; setne al ; ret
0x0000000000125655 : cmp dword ptr [rdi], eax ; je 0x125668 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000139205 : cmp dword ptr [rdi], eax ; je 0x139218 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000008ca62 : cmp dword ptr [rdi], eax ; sete al ; ret
0x00000000000b8865 : cmp dword ptr [rdi], esi ; je 0xb8875 ; ret
0x00000000000bbdc0 : cmp dword ptr [rsi], edx ; sete al ; ret
0x00000000000fd073 : cmp eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cad15 : cmp eax, 0x10c48348 ; pop rbx ; ret
0x000000000014f71d : cmp eax, 0x26700000 ; cmc ; call rax
0x00000000000d68b2 : cmp eax, 0x2abec9 ; jne 0xd68c8 ; ret
0x00000000000d3772 : cmp eax, 0x2aee31 ; jne 0xd3788 ; ret
0x000000000008d0a2 : cmp eax, 0x2f56d9 ; jne 0x8d0b8 ; ret
0x000000000008cbb2 : cmp eax, 0x2f59f1 ; jne 0x8cbc8 ; ret
0x00000000001467fd : cmp eax, 0x33b40001 ; clc ; jmp rsp
0x00000000001354f8 : cmp eax, 0x8445fffb ; in al, -0x77 ; ret
0x000000000000790c : cmp eax, 0xc0b15e23 ; ret
0x000000000012e542 : cmp eax, 0xc9b60f45 ; call 0x8af67
0x0000000000004587 : cmp eax, 0xeacdd016 ; ret 0xd9b1
0x00000000001130de : cmp eax, 0xff ; je 0x1130f9 ; mov rax, rbx ; pop rbx ; ret
0x00000000001155fe : cmp eax, 0xff ; je 0x115619 ; mov rax, rbx ; pop rbx ; ret
0x00000000000de5cb : cmp eax, 0xff ; je 0xde5de ; ret
0x00000000000e9210 : cmp eax, 0xff ; je 0xe9226 ; ret
0x00000000000e9230 : cmp eax, 0xff ; je 0xe9249 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000ee1d6 : cmp eax, 0xff ; je 0xee1f1 ; mov edi, eax ; jmp 0x8ac99
0x0000000000126d91 : cmp eax, 0xff ; jne 0x126d86 ; ret
0x000000000013aa8e : cmp eax, 0xff ; jne 0x13aa7e ; ret
0x00000000000d2e2f : cmp eax, 0xff ; jne 0xd2e26 ; ret
0x00000000000d5f3e : cmp eax, 0xff ; jne 0xd5f36 ; ret
0x00000000000a1d67 : cmp eax, 1 ; je 0xa1d82 ; pop rbx ; ret
0x00000000000bf894 : cmp eax, 1 ; je 0xbf8b4 ; ret
0x00000000000a0d2a : cmp eax, 2 ; je 0xa0d4a ; ret
0x000000000014f3f5 : cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], ch ; cmc ; jmp qword ptr [rax]
0x000000000014f395 : cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], cl ; cmc ; jmp qword ptr [rax]
0x000000000014f40d : cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], dh ; cmc ; call qword ptr [rdi]
0x000000000014f3ad : cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], dl ; cmc ; call qword ptr [rdi]
0x00000000000963bb : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x0000000000131e64 : cmp eax, dword ptr [rbp - 0x77] ; out 0xe9, al ; retf
0x0000000000124812 : cmp eax, dword ptr [rbx + 0x18] ; jae 0x124850 ; mov eax, dword ptr [rax] ; pop rbx ; ret
0x000000000015f52d : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; clc ; call rdi
0x000000000000e0f9 : cmp eax, dword ptr [rcx] ; add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], dl ; retf
0x00000000001241a5 : cmp eax, dword ptr [rdi + 0x18] ; jae 0x1241b8 ; movzx eax, byte ptr [rax] ; ret
0x00000000001248f5 : cmp eax, dword ptr [rdi + 0x18] ; jae 0x124907 ; mov eax, dword ptr [rax] ; ret
0x00000000000a5925 : cmp eax, dword ptr [rdi + 0x18] ; je 0xa5938 ; movzx eax, byte ptr [rax] ; ret
0x00000000000a78fe : cmp eax, dword ptr [rdx + 0x18] ; cmove rax, rdx ; ret
0x000000000014967d : cmp eax, dword ptr [rdx] ; add byte ptr [rdi + rbx - 4], dl ; call rsp
0x0000000000124b4d : cmp eax, dword ptr [rip + 0x25dcd5] ; jne 0x124b71 ; ret
0x00000000001243fd : cmp eax, dword ptr [rip + 0x25e5bd] ; jne 0x124421 ; ret
0x00000000000bc145 : cmp eax, ecx ; jne 0xbc156 ; mov eax, esi ; ret
0x00000000001082f8 : cmp eax, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d28ab : cmp eax, edx ; cmova rax, rdx ; ret
0x00000000001177ad : cmp eax, edx ; jae 0x1177cf ; movzx eax, byte ptr [rax] ; ret
0x000000000012408a : cmp eax, edx ; jae 0x1240c8 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000c904d : cmp eax, edx ; jae 0xc906f ; movzx eax, byte ptr [rax] ; ret
0x000000000013a811 : cmp eax, edx ; mov rax, rcx ; cmovae rax, rdx ; ret
0x00000000000c7584 : cmp eax, esi ; jne 0xc7575 ; ret
0x00000000000c75c4 : cmp eax, esi ; jne 0xc75b5 ; ret
0x00000000000c7b29 : cmp eax, esi ; jne 0xc7b15 ; ret
0x00000000000a2387 : cmp ebp, eax ; and ebx, dword ptr [rcx - 0x76b70002] ; ret
0x00000000000d5a43 : cmp ebp, ecx ; sub al, byte ptr [rax] ; ret
0x00000000000fe6e3 : cmp ebp, edx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d32c8 : cmp ebx, 0x74c085ff ; ret
0x000000000013ce84 : cmp ebx, ecx ; cmc ; jmp qword ptr [rdi]
0x00000000001588a9 : cmp ebx, esi ; jmp qword ptr [rdi]
0x00000000000b3f39 : cmp ecx, 3 ; ja 0xb3f46 ; ret
0x000000000009c0d2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000139f89 : cmp ecx, dword ptr [rbp] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000b3e93 : cmp ecx, dword ptr [rcx - 0x73] ; adc al, 0x50 ; mov qword ptr [rdi], rdx ; ret
0x000000000009d887 : cmp ecx, eax ; cmovbe rax, rcx ; ret
0x0000000000147739 : cmp ecx, edi ; jmp rsp
0x00000000000d287b : cmp ecx, esi ; jb 0xd2886 ; ret
0x00000000000d591b : cmp ecx, esi ; jb 0xd5926 ; ret
0x0000000000099f1e : cmp edi, 0xff ; jmp 0x961d5
0x00000000000a23b1 : cmp edi, dword ptr [rdx - 2] ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d68b1 : cmp edi, dword ptr [rip + 0x2abec9] ; jne 0xd68c9 ; ret
0x00000000000d3771 : cmp edi, dword ptr [rip + 0x2aee31] ; jne 0xd3789 ; ret
0x000000000008d0a1 : cmp edi, dword ptr [rip + 0x2f56d9] ; jne 0x8d0b9 ; ret
0x000000000008cbb1 : cmp edi, dword ptr [rip + 0x2f59f1] ; jne 0x8cbc9 ; ret
0x00000000000bbdb3 : cmp edi, dword ptr [rsi + 8] ; je 0xbbdc6 ; ret
0x0000000000108108 : cmp edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000011cf6e : cmp edi, eax ; je 0x11cf7d ; call 0x89a56
0x0000000000149db9 : cmp edi, ebp ; jmp rsp
0x00000000000fdce3 : cmp edi, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e5d53 : cmp edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000090409 : cmp edi, esi ; jne 0x903fd ; ret
0x00000000000a826f : cmp edi, esi ; jne 0xa8265 ; ret
0x0000000000005b6d : cmp edi, esi ; test dh, dl ; ret 0x2ade
0x00000000000b455d : cmp edx, 1 ; ja 0xb458e ; ret
0x00000000000b416d : cmp edx, 2 ; ja 0xb417e ; ret
0x00000000000904a1 : cmp edx, dword ptr [rdi + rdi*8 - 0x3f7ab701] ; je 0x904b7 ; call rax
0x00000000001247d2 : cmp edx, dword ptr [rip + 0x25e048] ; jne 0x1247e9 ; ret
0x0000000000124058 : cmp edx, dword ptr [rip + 0x25e392] ; je 0x124052 ; jmp rdx
0x00000000000fea43 : cmp edx, eax ; clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001178d4 : cmp edx, eax ; jbe 0x1178e6 ; mov eax, dword ptr [rax] ; ret
0x00000000000c9174 : cmp edx, eax ; jbe 0xc9186 ; mov eax, dword ptr [rax] ; ret
0x000000000008e1f3 : cmp edx, eax ; sete al ; lea eax, dword ptr [rax + rax*4 + 1] ; ret
0x00000000000fe1e3 : cmp edx, ebx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a02d1 : cmp edx, ecx ; jne 0xa02c5 ; ret
0x00000000000a0321 : cmp edx, ecx ; jne 0xa0315 ; ret
0x00000000000c2721 : cmp edx, ecx ; jne 0xc2715 ; ret
0x0000000000004431 : cmp edx, edx ; jge 0x44b7 ; in eax, 3 ; or dword ptr [rdx], esp ; ret 0x5a81
0x0000000000127edf : cmp edx, esi ; ja 0x127ed5 ; ret
0x00000000000e3b1f : cmp edx, esi ; ja 0xe3b15 ; ret
0x0000000000101e90 : cmp edx, esi ; jne 0x101e85 ; ret
0x00000000000a0249 : cmp edx, esi ; jne 0xa023d ; ret
0x00000000000a0289 : cmp edx, esi ; jne 0xa027d ; ret
0x00000000000c26d9 : cmp edx, esi ; jne 0xc26cd ; ret
0x00000000000d8de0 : cmp edx, esi ; jne 0xd8dd5 ; ret
0x0000000000092bc0 : cmp esi, 0x76 ; je 0x92bd7 ; xor eax, eax ; ret
0x00000000000d49e7 : cmp esi, eax ; ja 0xd4a07 ; jb 0xd49f7 ; ret
0x00000000000d7b97 : cmp esi, eax ; ja 0xd7bb7 ; jb 0xd7ba7 ; ret
0x000000000008d066 : cmp esi, eax ; seta al ; ret
0x0000000000124f38 : cmp esi, ecx ; ja 0x124f43 ; ret
0x0000000000138a48 : cmp esi, ecx ; ja 0x138a53 ; ret
0x00000000000d2a88 : cmp esi, edx ; jae 0xd2a97 ; add rax, rsi ; ret
0x00000000000d5b88 : cmp esi, edx ; jae 0xd5b99 ; lea rax, qword ptr [rax + rsi*4] ; ret
0x0000000000124f72 : cmp esi, edx ; jb 0x124f7d ; ret
0x0000000000138a82 : cmp esi, edx ; jb 0x138a8d ; ret
0x000000000008cb95 : cmp esi, edx ; jb 0x8cba0 ; ret
0x000000000008d085 : cmp esi, edx ; jb 0x8d090 ; ret
0x000000000008cb72 : cmp esi, edx ; seta al ; ret
0x0000000000143371 : cmp esp, 0xfc8090ff ; call qword ptr [rax]
0x00000000000a78a7 : cmp qword ptr [rax + 0x10], rdx ; je 0xa78a7 ; ret
0x00000000000d2a63 : cmp qword ptr [rax - 0x18], 0 ; sete al ; ret
0x00000000000d45d7 : cmp qword ptr [rax - 0x18], rdx ; jb 0xd45e7 ; ret
0x00000000000d7767 : cmp qword ptr [rax - 0x18], rdx ; jb 0xd7777 ; ret
0x00000000000a385f : cmp qword ptr [rax], 0 ; je 0xa3887 ; ret
0x00000000000bbf99 : cmp qword ptr [rbx + 8], rdi ; je 0xbbfaf ; pop rbx ; ret
0x00000000000b90b4 : cmp qword ptr [rdi + 0x18], rsi ; je 0xb90c7 ; ret
0x00000000000eec64 : cmp qword ptr [rdi + 0x20], rdx ; jb 0xeec78 ; xor eax, eax ; ret
0x00000000000eec94 : cmp qword ptr [rdi + 0x20], rdx ; jb 0xeeca8 ; xor eax, eax ; ret
0x00000000001257d0 : cmp qword ptr [rdi + 8], 0 ; sete al ; ret
0x0000000000125792 : cmp qword ptr [rdi + 8], rax ; jb 0x1257a7 ; ret
0x0000000000139342 : cmp qword ptr [rdi + 8], rax ; jb 0x139357 ; ret
0x000000000008fb80 : cmp qword ptr [rdi], 0 ; sete al ; ret
0x00000000000b21d0 : cmp qword ptr [rdi], 0 ; setne al ; ret
0x0000000000125654 : cmp qword ptr [rdi], rax ; je 0x125669 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000139204 : cmp qword ptr [rdi], rax ; je 0x139219 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000008fbc3 : cmp qword ptr [rdi], rax ; sete al ; ret
0x00000000000b8864 : cmp qword ptr [rdi], rsi ; je 0xb8876 ; ret
0x00000000000921d1 : cmp r8b, 0x4f ; je 0x921e9 ; mov rax, rsi ; ret
0x000000000014f394 : cmp r8d, dword ptr [rax] ; add byte ptr [rax + 0x1f], cl ; cmc ; jmp qword ptr [rax]
0x0000000000126d90 : cmp rax, 0xff ; jne 0x126d87 ; ret
0x000000000013aa8d : cmp rax, 0xff ; jne 0x13aa7f ; ret
0x00000000000d2e2e : cmp rax, 0xff ; jne 0xd2e27 ; ret
0x00000000000d5f3d : cmp rax, 0xff ; jne 0xd5f37 ; ret
0x0000000000124811 : cmp rax, qword ptr [rbx + 0x18] ; jae 0x124851 ; mov eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001241a4 : cmp rax, qword ptr [rdi + 0x18] ; jae 0x1241b9 ; movzx eax, byte ptr [rax] ; ret
0x00000000001248f4 : cmp rax, qword ptr [rdi + 0x18] ; jae 0x124908 ; mov eax, dword ptr [rax] ; ret
0x00000000000a5924 : cmp rax, qword ptr [rdi + 0x18] ; je 0xa5939 ; movzx eax, byte ptr [rax] ; ret
0x00000000000a78fd : cmp rax, qword ptr [rdx + 0x18] ; cmove rax, rdx ; ret
0x00000000000bc144 : cmp rax, rcx ; jne 0xbc157 ; mov eax, esi ; ret
0x00000000000d28aa : cmp rax, rdx ; cmova rax, rdx ; ret
0x00000000001177ac : cmp rax, rdx ; jae 0x1177d0 ; movzx eax, byte ptr [rax] ; ret
0x0000000000124089 : cmp rax, rdx ; jae 0x1240c9 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000c904c : cmp rax, rdx ; jae 0xc9070 ; movzx eax, byte ptr [rax] ; ret
0x00000000000c7583 : cmp rax, rsi ; jne 0xc7576 ; ret
0x00000000000c75c3 : cmp rax, rsi ; jne 0xc75b6 ; ret
0x00000000000c7b28 : cmp rax, rsi ; jne 0xc7b16 ; ret
0x00000000000b3f38 : cmp rcx, 3 ; ja 0xb3f47 ; ret
0x000000000009d886 : cmp rcx, r8 ; cmovbe rax, rcx ; ret
0x00000000000d287a : cmp rcx, rsi ; jb 0xd2887 ; ret
0x00000000000d591a : cmp rcx, rsi ; jb 0xd5927 ; ret
0x00000000000bbdb2 : cmp rdi, qword ptr [rsi + 8] ; je 0xbbdc7 ; ret
0x000000000011cf6d : cmp rdi, rax ; je 0x11cf7e ; call 0x89a57
0x0000000000090408 : cmp rdi, rsi ; jne 0x903fe ; ret
0x00000000000a826e : cmp rdi, rsi ; jne 0xa8266 ; ret
0x00000000000b455c : cmp rdx, 1 ; ja 0xb458f ; ret
0x00000000000b416c : cmp rdx, 2 ; ja 0xb417f ; ret
0x0000000000124057 : cmp rdx, qword ptr [rip + 0x25e392] ; je 0x124053 ; jmp rdx
0x00000000001178d3 : cmp rdx, rax ; jbe 0x1178e7 ; mov eax, dword ptr [rax] ; ret
0x00000000000c9173 : cmp rdx, rax ; jbe 0xc9187 ; mov eax, dword ptr [rax] ; ret
0x00000000000a02d0 : cmp rdx, rcx ; jne 0xa02c6 ; ret
0x00000000000a0320 : cmp rdx, rcx ; jne 0xa0316 ; ret
0x00000000000c2720 : cmp rdx, rcx ; jne 0xc2716 ; ret
0x0000000000127ede : cmp rdx, rsi ; ja 0x127ed6 ; ret
0x00000000000e3b1e : cmp rdx, rsi ; ja 0xe3b16 ; ret
0x0000000000101e8f : cmp rdx, rsi ; jne 0x101e86 ; ret
0x00000000000a0248 : cmp rdx, rsi ; jne 0xa023e ; ret
0x00000000000a0288 : cmp rdx, rsi ; jne 0xa027e ; ret
0x00000000000c26d8 : cmp rdx, rsi ; jne 0xc26ce ; ret
0x00000000000d8ddf : cmp rdx, rsi ; jne 0xd8dd6 ; ret
0x00000000000d49e6 : cmp rsi, rax ; ja 0xd4a08 ; jb 0xd49f8 ; ret
0x00000000000d7b96 : cmp rsi, rax ; ja 0xd7bb8 ; jb 0xd7ba8 ; ret
0x000000000008d065 : cmp rsi, rax ; seta al ; ret
0x0000000000124f37 : cmp rsi, rcx ; ja 0x124f44 ; ret
0x0000000000138a47 : cmp rsi, rcx ; ja 0x138a54 ; ret
0x00000000000d2a87 : cmp rsi, rdx ; jae 0xd2a98 ; add rax, rsi ; ret
0x00000000000d5b87 : cmp rsi, rdx ; jae 0xd5b9a ; lea rax, qword ptr [rax + rsi*4] ; ret
0x0000000000124f71 : cmp rsi, rdx ; jb 0x124f7e ; ret
0x0000000000138a81 : cmp rsi, rdx ; jb 0x138a8e ; ret
0x000000000008cb94 : cmp rsi, rdx ; jb 0x8cba1 ; ret
0x000000000008d084 : cmp rsi, rdx ; jb 0x8d091 ; ret
0x000000000008cb71 : cmp rsi, rdx ; seta al ; ret
0x00000000000b4e09 : cmp word ptr [rcx], ax ; je 0xb4e20 ; xor eax, eax ; ret
0x0000000000147bb5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; jg 0x147bba ; call rsp
0x000000000000782c : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rbp, rcx ; ret 0xab5d
0x0000000000101614 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013cdf5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rax
0x000000000013cdf1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rax
0x00000000000e5b86 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmp dl, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000007696 : cmpsb byte ptr [rsi], byte ptr [rdi] ; int1 ; jle 0x768f ; wait ; call rdi
0x00000000000c1d86 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0xc1d8b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000104883 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x104897 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104913 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x104927 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a8e3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x12a8f7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a973 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x12a987 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7733 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xb7747 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1e86 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xc1e8b ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c7657 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xc7667 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ddd43 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xddd57 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8973 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xe8987 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000005478 : cmpsb byte ptr [rsi], byte ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; fiadd dword ptr [rdi] ; fistp qword ptr [rax - 0x22] ; retf
0x000000000012c386 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000025b78 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x13
0x00000000000075ee : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xc9d1
0x00000000000c3ba6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000012bc86 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf -1
0x0000000000007f5e : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0x340b
0x0000000000006139 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sal dword ptr [rbp + 0x78], 1 ; call rdi
0x00000000000061c9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sal dword ptr [rbp - 0x7e], 1 ; call rdi
0x00000000000c6986 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub bh, ah ; dec dword ptr [rax - 0x77] ; ret
0x0000000000007ad3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xlatb ; jb 0x7ad9 ; xchg eax, esp ; ret 0xc9ac
0x000000000013de32 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10], cl ; retf
0x0000000000007695 : cmpsb byte ptr ds:[rsi], byte ptr [rdi] ; int1 ; jle 0x7690 ; wait ; call rdi
0x00000000000a9c85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d9767 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000144b85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; push rsp ; mov dh, ch ; call rsp
0x0000000000166115 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; call 0x28165ad1
0x000000000016615d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; loopne 0x166117 ; stc ; jmp qword ptr [rdi]
0x0000000000174965 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x6e705 ; ret 0x205
0x00000000000035f8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x6f97006a
0x00000000001014d4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000169691 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x0000000000169679 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rcx]
0x000000000000749e : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; push rax ; ret 0x2a62
0x0000000000004460 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ah, 0x5c ; fisub dword ptr [rsi] ; ret 0x5a81
0x00000000000ddd65 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebp, 0x5d5bfffa ; pop r12 ; ret
0x000000000009240d : cmpsd dword ptr [rsi], dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x0000000000158321 : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf 1
0x000000000016f2e9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x0000000000116eb5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, 0x8948fff7 ; ret
0x00000000001014d3 : cmpsq qword ptr [rsi], qword ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001652dc : cqo ; add dword ptr [rax], eax ; mov al, 0x7b ; stc ; call qword ptr [rcx]
0x00000000000f2350 : cvtdq2ps xmm3, xmmword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ba89f : cvttps2pi mm2, xmm0 ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000011704d : cvttps2pi mm6, xmm7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ba89d : cvttsd2si rdx, xmm0 ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000f0a2c : cwde ; add byte ptr [rax], al ; add byte ptr [rax], al ; je 0xf0a40 ; ret
0x00000000000f285c : cwde ; add byte ptr [rax], al ; add byte ptr [rax], al ; je 0xf2870 ; ret
0x00000000000d7c3d : cwde ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128c06 : cwde ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ef2c6 : cwde ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x83c6
0x00000000000f16a6 : cwde ; add byte ptr [rax], al ; add dh, dh ; ret 0x4808
0x00000000000f0fad : cwde ; add byte ptr [rax], al ; add dh, dh ; ret 0x4810
0x000000000014493d : cwde ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sal ah, cl ; jmp rsp
0x00000000001550ed : cwde ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000001550cd : cwde ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rdx]
0x00000000000c17df : cwde ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000157f58 : cwde ; div dh ; call qword ptr [rdx]
0x0000000000144301 : cwde ; hlt ; jmp rsp
0x000000000014ea98 : cwde ; in eax, dx ; hlt ; call qword ptr [rcx]
0x0000000000171bb8 : cwde ; jge 0x171bba ; call qword ptr [rbx]
0x00000000001657f8 : cwde ; mov ecx, dr1 ; jmp qword ptr [rdi]
0x0000000000092456 : cwde ; mov qword ptr [r10 + 8], rax ; mov rax, r10 ; ret
0x00000000000a1f86 : cwde ; mov qword ptr [rdi], rax ; sub rax, 1 ; ret
0x00000000000be1eb : cwde ; mov rdi, rbx ; call rcx
0x00000000001240f0 : cwde ; nop dword ptr [rax] ; call rax
0x0000000000072e88 : cwde ; ret
0x0000000000011d78 : cwde ; ret 0x37
0x0000000000004c4e : cwde ; ret 0x4cc6
0x000000000016a0a8 : cwde ; ret 0xfffa
0x00000000000701a0 : cwde ; retf
0x0000000000167438 : cwde ; retf -7
0x00000000000e5e14 : cwde ; retf 0x29
0x0000000000079d28 : cwde ; retf 0x37
0x000000000016e6e9 : cwde ; sti ; call qword ptr [rbx]
0x000000000016e8a1 : cwde ; sti ; call qword ptr [rdx]
0x000000000016e7c1 : cwde ; sti ; jmp qword ptr [rax]
0x000000000008fa2d : cwde ; test rax, rax ; je 0x8fa41 ; mov rdi, rbx ; call rax
0x0000000000007213 : cwde ; xor al, dh ; insd dword ptr [rdi], dx ; ret
0x00000000000d518d : dec byte ptr [rax + 0x39] ; ret 0x1877
0x000000000012d449 : dec byte ptr [rax - 0x77] ; retf -0x3eb8
0x00000000000e38da : dec byte ptr [rcx + rcx*4 - 9] ; call rax
0x00000000000b537f : dec byte ptr [rdi] ; test byte ptr [rdx - 0x77000000], dh ; ret 0x3948
0x000000000010e93f : dec dword ptr [rax + 0x21] ; ret
0x00000000000b24f3 : dec dword ptr [rax + 0x29] ; ret
0x00000000000f0be2 : dec dword ptr [rax + 0x39] ; ret
0x00000000000bbf91 : dec dword ptr [rax + 0x39] ; ret 0x1975
0x00000000000a23ec : dec dword ptr [rax + 0x39] ; ret 0x1c72
0x000000000012700d : dec dword ptr [rax + 0x39] ; retf 0x3073
0x000000000013ad1a : dec dword ptr [rax + 0x39] ; retf 0x3373
0x0000000000094ab7 : dec dword ptr [rax + 0x63] ; ret 0xc283
0x00000000001429db : dec dword ptr [rax + 0x79] ; cli ; call qword ptr [rax]
0x00000000000e748d : dec dword ptr [rax + 0xf] ; ret
0x00000000000d2be3 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000126b32 : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000d9232 : dec dword ptr [rax + 1] ; ret
0x0000000000106e48 : dec dword ptr [rax - 0x73] ; add al, 0x33 ; jne 0x106e03 ; pop rbx ; pop rbp ; ret
0x000000000012cc9a : dec dword ptr [rax - 0x73] ; add al, 0xb ; jne 0x12cc55 ; pop rbx ; pop rbp ; ret
0x000000000011ac02 : dec dword ptr [rax - 0x73] ; jl 0x11ac33 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000011b042 : dec dword ptr [rax - 0x73] ; jl 0x11b072 ; xor al, ch ; ret
0x000000000011c0e2 : dec dword ptr [rax - 0x73] ; jl 0x11c113 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000011d8c2 : dec dword ptr [rax - 0x73] ; jl 0x11d8f3 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000001202b5 : dec dword ptr [rax - 0x73] ; jl 0x1202e6 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000121865 : dec dword ptr [rax - 0x73] ; jl 0x121896 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000123135 : dec dword ptr [rax - 0x73] ; jl 0x123166 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000a3b09 : dec dword ptr [rax - 0x73] ; jl 0xa3b3a ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000d7817 : dec dword ptr [rax - 0x75] ; add ebp, ebx ; ret
0x00000000000d3c62 : dec dword ptr [rax - 0x75] ; add ebx, dword ptr [rbx + 0x48] ; add eax, dword ptr [rax - 0x18] ; ret
0x00000000000d78ef : dec dword ptr [rax - 0x75] ; add r11b, r13b ; ret
0x00000000000a1c65 : dec dword ptr [rax - 0x75] ; and byte ptr [r8 - 0x7d], r9b ; ret
0x000000000011235d : dec dword ptr [rax - 0x75] ; cmp al, 0x24 ; call 0xde5c7
0x00000000000ba0e7 : dec dword ptr [rax - 0x75] ; jl 0xba118 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba1b2 : dec dword ptr [rax - 0x75] ; jl 0xba1e3 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000bc80a : dec dword ptr [rax - 0x75] ; jl 0xbc83b ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000c2a54 : dec dword ptr [rax - 0x75] ; jl 0xc2a85 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2da2 : dec dword ptr [rax - 0x75] ; jl 0xc2dd3 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5c4f : dec dword ptr [rax - 0x75] ; jl 0xc5c80 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5cef : dec dword ptr [rax - 0x75] ; jl 0xc5d20 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5dcb : dec dword ptr [rax - 0x75] ; jl 0xc5dfc ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5e18 : dec dword ptr [rax - 0x75] ; jl 0xc5e49 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000126334 : dec dword ptr [rax - 0x75] ; or byte ptr [r8 + 0x39], r9b ; retf
0x00000000000de2cf : dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000c7368 : dec dword ptr [rax - 0x75] ; push 0x8c48348 ; ret
0x00000000000cbacf : dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000b7b54 : dec dword ptr [rax - 0x75] ; xor ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x000000000008fc72 : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000000d4f97 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000092a2b : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000b22c0 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000a1d83 : dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; ret
0x000000000008d806 : dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; ret 0xffff
0x00000000000d8fdb : dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x0000000000095aa7 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rcx - 0x77] ; ret
0x00000000000ff14f : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rax ; retf
0x000000000011f14a : dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rbp ; retf
0x000000000008d1e4 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000000fd0e5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf8eb
0x00000000000b6a85 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfd56
0x00000000000a0cdc : dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x00000000000ee8f8 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x8b3b6
0x00000000000913cb : dec dword ptr [rax - 0x77] ; out dx, eax ; call rbx
0x000000000008ccbd : dec dword ptr [rax - 0x77] ; ret
0x000000000009d16e : dec dword ptr [rax - 0x77] ; ret 0x1b9
0x00000000000d2d0d : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000009fa33 : dec dword ptr [rax - 0x77] ; ret 0x34e8
0x00000000000ee255 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000aab6e : dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000009f4db : dec dword ptr [rax - 0x77] ; ret 0x8ce8
0x000000000009bcd6 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x0000000000093458 : dec dword ptr [rax - 0x77] ; ret 0xbfe9
0x000000000008f4d0 : dec dword ptr [rax - 0x77] ; ret 0xc931
0x000000000009340a : dec dword ptr [rax - 0x77] ; ret 0xde9
0x000000000009ff73 : dec dword ptr [rax - 0x77] ; ret 0xf4e8
0x00000000000badde : dec dword ptr [rax - 0x77] ; ret 0xf66
0x000000000009e5fd : dec dword ptr [rax - 0x77] ; ret 0xfae8
0x00000000000b5162 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xc539
0x00000000000997c5 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; push rcx ; retf -1
0x0000000000132f4b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000b294d : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rbx + 0x48], 0x89 ; ret 0x8948
0x00000000000b23d6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e00a2 : dec dword ptr [rax - 0x7d] ; in al, dx ; or byte ptr [rax + 0x21], cl ; ret 0x8944
0x00000000000b2689 : dec dword ptr [rax - 0x7d] ; ret
0x000000000008e7bc : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000955c9 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x00000000000b3aa6 : dec dword ptr [rax - 0x7d] ; ret 0x4803
0x00000000001092ff : dec dword ptr [rbp + 0x63480150] ; ret 0x9589
0x00000000001498eb : dec dword ptr [rbp + rcx*2 - 0x36fbfffe] ; cld ; jmp rsp
0x000000000012ce4d : dec dword ptr [rbp - 0x7b] ; div byte ptr [rbp + rdi*4 - 0x15] ; retf
0x0000000000106fee : dec dword ptr [rbp - 0x7b] ; push qword ptr [rsp + rdi*4 - 0x15] ; retf 0x2e66
0x00000000000b4b26 : dec dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3941
0x00000000000b5d30 : dec dword ptr [rbx + 0x2d1b8d3d] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000146d7b : dec dword ptr [rbx - 0x1f9bffff] ; clc ; call rsp
0x00000000000bce25 : dec dword ptr [rcx + rcx*4 + 0x24] ; ret
0x00000000000bd6f6 : dec dword ptr [rcx + rcx*4 + 0x2c] ; ret
0x000000000009e3f6 : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x8aef6
0x000000000009fa75 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x8bcb6
0x0000000000148533 : dec dword ptr [rcx - 0x1d1bffff] ; cli ; jmp rsp
0x00000000000bc595 : dec dword ptr [rcx - 0x2d14f3ad] ; call rdx
0x0000000000107235 : dec dword ptr [rcx - 0x3b7cb7d5] ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a262d : dec dword ptr [rcx - 0x76b70002] ; ret
0x00000000000e7aae : dec dword ptr [rcx - 0x77] ; ret
0x00000000000ab630 : dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x00000000000d5b48 : dec dword ptr [rdi] ; ret
0x0000000000109f88 : dec dword ptr [rdi] ; ret 0x189
0x00000000001115ec : dec dword ptr [rdi] ; test byte ptr [rbp + 0x38000004], dh ; ret
0x0000000000110c12 : dec dword ptr [rdi] ; test byte ptr [rdi], dl ; add eax, dword ptr [rax] ; add byte ptr [rax], bh ; ret
0x000000000011026c : dec dword ptr [rdi] ; test byte ptr [rip + 0x38000003], bl ; ret
0x000000000010ee4a : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000010f08e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x841
0x000000000010ef5f : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd008
0x0000000000146f2b : dec dword ptr [rdx + rbp*2 - 0x11fbffff] ; clc ; jmp rsp
0x0000000000149f13 : dec dword ptr [rsp + rbp*2 + 0x5f040002] ; std ; call rsp
0x00000000001429d7 : dec eax ; js 0x1429dd ; dec dword ptr [rax + 0x79] ; cli ; call qword ptr [rax]
0x000000000013ce77 : dec ecx ; retf
0x0000000000143307 : dec esi ; je 0x14330b ; call qword ptr [rax]
0x0000000000143303 : dec esi ; je 0x14330b ; dec esi ; je 0x14330f ; call qword ptr [rax]
0x00000000001443db : dec esp ; add dword ptr [rax], 0xf49eb400 ; jmp rsp
0x0000000000146de3 : dec esp ; add dword ptr gs:[rax], eax ; add al, 0xe8 ; clc ; jmp rsp
0x0000000000148abb : dec esp ; add eax, dword ptr [rdx] ; add byte ptr [rsp + rbx*2], dh ; sti ; jmp rsp
0x0000000000149053 : dec esp ; and byte ptr [rdx], al ; add ah, al ; sar ebx, 1 ; jmp rsp
0x000000000014898b : dec esp ; inc byte ptr [rcx] ; add byte ptr [rcx + rdx*2], al ; sti ; jmp rsp
0x00000000001489db : dec esp ; inc dword ptr [rcx] ; add ah, dh ; push rcx ; sti ; jmp rsp
0x0000000000147143 : dec esp ; je 0x147150 ; add byte ptr [rcx + rax - 7], al ; jmp rsp
0x000000000014733b : dec esp ; jle 0x147348 ; add byte ptr [rax + rbx - 7], al ; jmp rsp
0x00000000001441cb : dec esp ; jns 0x1441d7 ; add byte ptr [rdi + rcx*4 - 0xc], ah ; jmp rsp
0x0000000000147203 : dec esp ; js 0x147210 ; add ah, al ; or bh, cl ; jmp rsp
0x0000000000147de3 : dec esp ; mov ch, 1 ; add ah, dl ; stc ; stc ; jmp rsp
0x00000000001458bb : dec esp ; out dx, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, dh ; jmp rsp
0x0000000000149c73 : dec esp ; pop rdi ; add al, byte ptr [rax] ; test byte ptr [rdx], ah ; std ; jmp rsp
0x0000000000149a83 : dec esp ; push rbp ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; cld ; jmp rsp
0x00000000001480a3 : dec esp ; ret
0x00000000001450db : dec esp ; ret 0
0x000000000014b0f3 : dec esp ; ret 2
0x0000000000145223 : dec esp ; retf 0
0x0000000000145303 : dec esp ; rol byte ptr [rax], 1 ; add ah, dl ; jno 0x145309 ; jmp rsp
0x0000000000148023 : dec esp ; rol byte ptr [rcx], 0 ; push rsp ; adc al, 0xfa ; jmp rsp
0x000000000014b393 : dec esp ; rol dword ptr [rdx], cl ; add byte ptr [rbx + rcx*2 - 1], ah ; jmp rsp
0x0000000000149373 : dec esp ; sub eax, 0xf0a40002 ; sti ; jmp rsp
0x0000000000147c33 : dec esp ; test eax, 0x9a740001 ; stc ; jmp rsp
0x000000000014a74b : dec esp ; xchg eax, ebp ; add al, byte ptr [rax] ; push rsp ; sbb al, 0xfe ; jmp rsp
0x0000000000147893 : dec esp ; xchg eax, edi ; add dword ptr [rax], eax ; stc ; jmp rsp
0x000000000014a783 : dec esp ; xchg eax, esi ; add al, byte ptr [rax] ; and sil, r15b ; jmp rsp
0x000000000014957b : dec esp ; xor eax, 0x4a40002 ; cld ; jmp rsp
0x00000000000baddd : dec qword ptr [r8 - 0x77] ; ret 0xf66
0x0000000000110c11 : dec qword ptr [rdi] ; test byte ptr [rdi], dl ; add eax, dword ptr [rax] ; add byte ptr [rax], bh ; ret
0x000000000011026b : dec qword ptr [rdi] ; test byte ptr [rip + 0x38000003], bl ; ret
0x00000000000afebd : div byte ptr [rax + rcx + 0x4c] ; mov edi, esi ; call 0x8c108
0x000000000008d02a : div byte ptr [rbp + 3] ; ret
0x000000000008cb38 : div byte ptr [rbp + 5] ; ret
0x000000000012ce50 : div byte ptr [rbp + rdi*4 - 0x15] ; retf
0x00000000000c1e36 : div byte ptr [rbp - 4] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000157f41 : div dh ; call qword ptr [rbx]
0x0000000000157f59 : div dh ; call qword ptr [rdx]
0x00000000000a8270 : div dword ptr [rbp - 0x13] ; ret
0x000000000009040a : div dword ptr [rbp - 0x15] ; ret
0x00000000000e0bbc : div dword ptr [rcx] ; ror byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000000df933 : div dword ptr [rcx] ; ror byte ptr [rcx + rcx*4 - 0x11], cl ; call rcx
0x000000000000602d : div dword ptr [rsi - 0x26f2f39a] ; retf 0x3c78
0x000000000009c9b6 : div ebx ; mov r13, rax ; call 0x89437
0x000000000009c9b5 : div rbx ; mov r13, rax ; call 0x89438
0x0000000000108155 : enter -0x2dcf, -0x18 ; ret
0x00000000000d674b : enter -0x3eb8, -0x18 ; add cl, byte ptr [rax + 1] ; ret
0x00000000001429d8 : enter -0x588, -1 ; jns 0x1429e0 ; call qword ptr [rax]
0x00000000000dd2c6 : enter -0x74b8, 0x4d ; mov byte ptr [rdi], cl ; ret 0x189
0x00000000000a16ec : enter -0x78f1, -0x13 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a4cc7 : enter -0x78f1, -0x4c ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a1682 : enter -0x78f1, 0x4b ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a4c4f : enter -0x78f1, 0x71 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000126d8f : enter -0x7cb8, -8 ; push qword ptr [rbp - 0x16] ; ret
0x00000000000ff44e : enter -8, -0x18 ; retf -0x739
0x00000000001451b5 : enter 0, 0x74 ; xor dh, dh ; call rsp
0x0000000000127edd : enter 0x3948, -0xe ; ja 0x127ed7 ; ret
0x00000000000e3b1d : enter 0x3948, -0xe ; ja 0xe3b17 ; ret
0x0000000000101e8e : enter 0x3948, -0xe ; jne 0x101e87 ; ret
0x00000000000d8dde : enter 0x3948, -0xe ; jne 0xd8dd7 ; ret
0x0000000000006b96 : enter 0x3a2c, -0x1f ; add ecx, dword ptr [rcx] ; ret 0xca53
0x00000000000d3695 : enter 0x415d, 0x5c ; ret
0x0000000000005b9e : enter 0x52eb, 0x42 ; ret 0xb01
0x000000000000832b : enter 0x86d, 0x6d ; ret 0x5c64
0x0000000000002198 : enter 0xa, 0 ; retf
0x00000000000d5ce6 : enter 0xf48, 0x43 ; ret 0x8348
0x000000000013a815 : enter 0xf48, 0x43 ; ret 0xfc3
0x000000000017624b : enter 2, -0x48 ; add dword ptr [rbx - 0x6e], ecx ; add al, byte ptr [rax] ; ret
0x00000000000f92f3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016911d : fadd dword ptr [rcx] ; add byte ptr [rax], dh ; popfq ; cli ; jmp qword ptr [rsi]
0x0000000000006c14 : fadd qword ptr [rbp + 0x7d] ; ret
0x00000000001264e8 : fadd qword ptr [rdi - 0x76b7ffff] ; ret 0x8348
0x0000000000166f48 : fadd st(3) ; stc ; jmp qword ptr [rdx]
0x00000000000b231a : fadd st(6) ; or byte ptr [r9], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139619 : fadd st(7) ; add al, 0xb2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000124853 : fbld dword ptr [rip + 0x48e57400] ; mov edi, ebx ; pop rbx ; jmp rax
0x00000000000bb68a : fbstp dword ptr [rax + 0x31489908] ; ret 0x8948
0x00000000000fd0e2 : fcmovu st(0), st(3) ; clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf8eb
0x0000000000167978 : fcom st(0) ; stc ; call rcx
0x0000000000005652 : fcom st(0), st(5) ; jo 0x56d3 ; rcl byte ptr [rsi], 5 ; lahf ; ret 0xc2cb
0x000000000012e0f8 : fcomi st(5) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000051f6 : fcomp dword ptr [rax - 0x2d] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000000c1b0b : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r14 ; pop rbp ; ret
0x00000000000d2e90 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009d21d : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000b22a3 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008d9f2 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000d2b8b : fcomp dword ptr [rbx - 0x3d] ; nop ; mov rax, qword ptr [rdi] ; ret
0x0000000000127c03 : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000000044be : fcomp qword ptr [rcx + 0x31] ; ret 0x5a81
0x000000000014e741 : fcompi st(4) ; jmp qword ptr [rdx]
0x000000000010dcc3 : fcompi st(7) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000008328 : fcompi st(7) ; mov edx, 0x6d086dc8 ; ret 0x5c64
0x00000000000d9bac : fdiv dword ptr [rbp + 0x15] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008d149 : fdiv dword ptr [rbp + 0x2b] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008cc42 : fdiv dword ptr [rbp + 0x2d] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd999 : fdiv dword ptr [rbp + 0x2e] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010035b : fdiv dword ptr [rbp + 0x32] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd2d3 : fdiv dword ptr [rbp + 0x34] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000100a2d : fdiv dword ptr [rbp + 0x37] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000100212 : fdiv dword ptr [rbp + 0x38] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fd19c : fdiv dword ptr [rbp + 0x3a] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b62a6 : fdiv dword ptr [rbp + 0x3a] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001132b8 : fdiv dword ptr [rbp + 0x3c] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc4d0 : fdiv dword ptr [rbp + 0x48] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fc74b : fdiv dword ptr [rbp + 0x5f] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ff78b : fdiv dword ptr [rbp + 0x64] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e49c4 : fdiv dword ptr [rbp + 0xd] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000102daa : fdiv dword ptr [rbp + 0xf] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d4ebc : fdiv dword ptr [rbp + 7] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b5d0e : fdiv dword ptr [rbp - 0x11] ; pop rbx ; ret
0x00000000000fdf64 : fdiv st(0), st(0) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fca44 : fdiv st(1) ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000008d804 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; ret 0xffff
0x00000000000adde3 : fdivp st(5) ; dec dword ptr [rax - 0x77] ; ret
0x000000000009d17e : fdivp st(6) ; dec dword ptr [rax - 0x77] ; ret
0x000000000009c8a3 : fdivp st(6) ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000fe324 : fdivr st(0) ; dec dword ptr [rax - 0x77] ; ret
0x000000000009d7ce : fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x000000000015e861 : fdivr st(7), st(0) ; call rax
0x000000000000547b : fiadd dword ptr [rdi] ; fistp qword ptr [rax - 0x22] ; retf
0x00000000000048ab : fiadd dword ptr [rsi] ; loop 0x4852 ; or ch, byte ptr [rdx] ; fucomp st(6) ; push rbp ; retf
0x00000000001696bd : fiadd word ptr [rcx] ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000001696d5 : fiadd word ptr [rcx] ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x000000000016bd54 : fiadd word ptr [rcx] ; add byte ptr [rax], al ; add al, 0xae ; retf 0
0x00000000001784a8 : fiadd word ptr [rdx] ; mov bh, 1 ; ret
0x00000000000eabce : ficom dword ptr [rcx + 0x55] ; mov rcx, r12 ; mov r8, r14 ; call rax
0x0000000000006868 : ficom word ptr [rbx] ; test eax, 0x15b7a352 ; retf -0xff6
0x0000000000005c4d : ficomp dword ptr [rbp + rbp*4 - 0x6ab6edf0] ; jno 0x5c12 ; retf
0x0000000000092aa5 : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000c164e : ficomp word ptr [rcx - 0x76b70004] ; ret
0x000000000000590d : ficomp word ptr [rdx] ; adc byte ptr [rcx + 0x740f9c59], 0x77 ; ret
0x00000000000fdaf8 : fidivr dword ptr [rsi + 0x20] ; mov rdi, r13 ; call rax
0x0000000000148425 : fild dword ptr [rcx] ; add ah, dl ; ret 0xfffa
0x0000000000169545 : fild dword ptr [rcx] ; add byte ptr [rax - 0x5b], ch ; cli ; jmp qword ptr [rbx]
0x00000000001693ad : fild dword ptr [rcx] ; add byte ptr [rax - 0x5f], dh ; cli ; call qword ptr [rbx]
0x000000000014b585 : fild dword ptr [rdx] ; add byte ptr [rsp + rbx*2 - 1], al ; call rsp
0x0000000000092990 : fild word ptr [rax - 0x6bf0b006] ; ret 0xd009
0x000000000001e320 : fild word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000173981 : fild word ptr [rdx] ; ret
0x0000000000109411 : fimul dword ptr [rax + 0x39] ; ror dword ptr [rcx - 0x76b75bb3], 1 ; retf
0x00000000000d2652 : fimul dword ptr [rcx - 0x76b30005] ; dec dword ptr [rax - 0x77] ; ret
0x000000000017316f : fimul dword ptr [rsi] ; add eax, 0xca000fac ; syscall
0x00000000000b7499 : fimul word ptr [rax - 0x77] ; out dx, eax ; call rax
0x00000000000ba28b : fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000009121a : fimul word ptr [rcx + rcx*4 - 0x19] ; call r14
0x0000000000007720 : fist dword ptr [rsi] ; xchg dword ptr [rax], esi ; retf
0x00000000000067ef : fist word ptr [rdx + 0x3c] ; sbb cl, dh ; ret
0x000000000000547d : fistp qword ptr [rax - 0x22] ; retf
0x00000000000ad7a4 : fistp word ptr [rbx + 0x5d] ; jmp 0x89a55
0x00000000000ba3af : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000ba3d6 : fistp word ptr [rbx + 0x5d] ; jmp rdx
0x00000000000ddb54 : fistp word ptr [rbx + 0x5d] ; pop r12 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000bed59 : fistp word ptr [rbx - 0x17] ; nop ; retf
0x00000000000a1d86 : fistp word ptr [rbx - 0x17] ; ret
0x000000000008d809 : fistp word ptr [rbx - 0x17] ; ret 0xffff
0x00000000000beace : fistp word ptr [rbx - 0x17] ; retf
0x000000000012485a : fistp word ptr [rbx - 1] ; loopne 0x1248cb ; nop ; call rax
0x00000000000c7c1a : fisttp dword ptr [rax - 0x75] ; jl 0xc7c4a ; or al, ch ; retf
0x00000000000b22d1 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000b5d0b : fisttp dword ptr [rax - 0x77] ; fdiv dword ptr [rbp - 0x11] ; pop rbx ; ret
0x00000000000b5165 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xc539
0x00000000000a5366 : fisttp qword ptr [rax - 0x77] ; ret
0x0000000000091067 : fisttp word ptr [rax + 0x29] ; out dx, eax ; call r15
0x00000000000eadd3 : fisttp word ptr [rax - 0x77] ; ret
0x000000000008f3c5 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000009d8e9 : fisttp word ptr [rax - 0x7d] ; ret 0x4810
0x00000000001133d9 : fisttp word ptr [rbx - 0x317cdf89] ; add al, 0xe8 ; retf
0x00000000000ba06c : fisttp word ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000095aaa : fisttp word ptr [rcx - 0x77] ; ret
0x000000000013db61 : fisttp word ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000004463 : fisub dword ptr [rsi] ; ret 0x5a81
0x0000000000004482 : fisubr dword ptr [rbp + 0x2a] ; ret 0x5a81
0x0000000000004035 : fisubr dword ptr [rbx + 5] ; sbb eax, 0xb79ea101 ; ret
0x00000000000d4b3f : fisubr dword ptr [rdx] ; add byte ptr [rbp + 0x1c], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000065dd : fisubr word ptr [rdi + 0x18] ; ret
0x00000000000bd12e : fisubr word ptr [rdx - 0x76b7ffd4] ; ret
0x00000000000cb9a8 : fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8341
0x0000000000169215 : fld dword ptr [rcx] ; add al, ch ; popfq ; cli ; call qword ptr [rbx]
0x000000000016bc34 : fld dword ptr [rcx] ; add byte ptr [rax], al ; add al, 0x79 ; retf
0x000000000014848d : fld qword ptr [rcx] ; add ah, al ; sar dl, cl ; call rsp
0x00000000000d66a3 : fld st(0) ; sub al, byte ptr [rax] ; ret
0x00000000000068ec : fld xword ptr [r8 - 0x7dbcadcb] ; ret 0xfc56
0x00000000000068ed : fld xword ptr [rax - 0x7dbcadcb] ; ret 0xfc56
0x00000000000c0f02 : fld1 ; sub byte ptr [rcx - 0x76b70004], ah ; ret
0x00000000000b78d3 : fldcw word ptr [rax] ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000012469b : fldenv dword ptr [rip + 0x48087500] ; mov eax, edi ; ret
0x0000000000090582 : fmul dword ptr [rax + 0x29] ; ret 0x8548
0x00000000000e5a58 : fmul dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x39 ; ret 0x870f
0x00000000000926d9 : fmul dword ptr [rcx - 0x77] ; imul ecx, dword ptr [rax + 0x5b], 0x5d ; ret
0x000000000009c5de : fmul qword ptr [rax - 0x77] ; ret
0x000000000013cb8c : fmul qword ptr [rbp + rsi*8 - 0xa731301] ; call rsp
0x00000000000bf687 : fmul qword ptr [rcx + rcx*4 - 2] ; call 0x8b966
0x000000000015032c : fmul qword ptr [rdx] ; add byte ptr [rax], al ; pop rsi ; cmc ; call qword ptr [rax]
0x00000000000ff144 : fmul st(2) ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b41ee : fnstcw word ptr [rax + 1] ; ret
0x0000000000006a08 : fnstenv dword ptr [rdi + 0x65] ; retf -0x2fdc
0x0000000000151d61 : fprem1 ; call rcx
0x00000000000bc7d3 : frndint ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004b2f : frstor dword ptr [rcx] ; js 0x4b01 ; push rbp ; retf -0x2850
0x000000000008d0a3 : fst dword ptr [rsi + 0x2f] ; add byte ptr [rbp + 7], dh ; ret
0x0000000000007dff : fst qword ptr [rip - 0x1bbcf368] ; ret
0x00000000000b906f : fst qword ptr [rsi] ; std ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000009b826 : fstp xword ptr [rax] ; ret 0x3575
0x0000000000150878 : fsub dword ptr [rdi - 0xb] ; call qword ptr [rbx]
0x0000000000149db4 : fsub qword ptr [rbp + 2] ; add byte ptr [rbx + rdi - 3], dh ; jmp rsp
0x0000000000023a58 : fsub qword ptr [rip + 0x210000] ; str ebp ; ret 0x13
0x00000000000c6e50 : fsub qword ptr [rip - 0x76b70004] ; ret
0x0000000000124b50 : fsub qword ptr [rip - 0xcec8b00] ; ret
0x0000000000005af5 : fsub st(5) ; and bh, byte ptr [rax] ; xlatb ; ret 0x9d0c
0x0000000000007fec : fsub st(6), st(0) ; scasb al, byte ptr [rdi] ; ret
0x0000000000091344 : fsubr dword ptr [rax - 0x76b70001] ; ret
0x0000000000115044 : fsubr dword ptr [rbx - 9] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000162fa8 : fsubr dword ptr [rcx] ; stc ; jmp rdi
0x000000000016662c : fsubr qword ptr [rbp - 0x46bfffff] ; stc ; call qword ptr [rbx]
0x0000000000005f97 : fucomp st(4) ; ret
0x00000000000048b1 : fucomp st(6) ; push rbp ; retf
0x00000000000e3596 : fucompi st(0) ; adc al, 0x87 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133499 : fucompi st(0) ; adc dword ptr [rax - 0x76b7000b], ecx ; ret
0x00000000000a2397 : fucompi st(0) ; adc ebx, dword ptr [rcx - 0x7cb70002] ; ret 0x4801
0x00000000000a0c97 : fucompi st(0) ; adc esi, dword ptr [rax - 0x76b70002] ; ret
0x00000000000dbaaa : fucompi st(0) ; add byte ptr [rdx], al ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133fa9 : fucompi st(0) ; add dword ptr [rbp - 0xb], edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ad6b1 : fucompi st(0) ; cdq ; ret
0x00000000000ad7b1 : fucompi st(0) ; cdq ; ret 0xfffd
0x0000000000107a65 : fucompi st(0) ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114a63 : fucompi st(0) ; jb 0x114a67 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114863 : fucompi st(0) ; je 0x114867 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114c43 : fucompi st(0) ; jo 0x114c47 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bf6c7 : fucompi st(0) ; jrcxz 0xbf698 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000012d7fd : fucompi st(0) ; lodsd eax, dword ptr [rsi] ; in al, -0xb ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e46f6 : fucompi st(0) ; mov ah, 0x75 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000001082f5 : fucompi st(0) ; mov ch, 0x39 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012e0f5 : fucompi st(0) ; mov ch, 0xdb ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000108105 : fucompi st(0) ; movsd dword ptr [rdi], dword ptr [rsi] ; cmp edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ec8a0 : fucompi st(0) ; or dh, ah ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009e63b : fucompi st(0) ; outsd dx, dword ptr [rsi] ; retf
0x00000000000ff152 : fucompi st(0) ; pop rax ; retf
0x00000000000f6a4d : fucompi st(0) ; pop rbp ; push rdx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f14d : fucompi st(0) ; pop rbp ; retf
0x00000000000ff44b : fucompi st(0) ; pop rdi ; enter -8, -0x18 ; retf -0x739
0x00000000000e685b : fucompi st(0) ; push r12 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000099e19 : fucompi st(0) ; push rcx ; adc eax, 0xe7e90000 ; ret 0xffff
0x000000000009ef53 : fucompi st(0) ; push rdi ; ret 0xfffe
0x0000000000128b53 : fucompi st(0) ; push rdi ; xor esi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e2156 : fucompi st(0) ; push rsp ; wait ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fa2d9 : fucompi st(0) ; rcr dword ptr [rcx], 1 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x000000000008d1e7 : fucompi st(0) ; ret
0x0000000000097918 : fucompi st(0) ; ret 0x26
0x00000000000fd0e8 : fucompi st(0) ; ret 0xf8eb
0x00000000000f82b8 : fucompi st(0) ; ret 0xf929
0x00000000000c7f38 : fucompi st(0) ; ret 0xfc35
0x00000000000b6a88 : fucompi st(0) ; ret 0xfd56
0x00000000000ab328 : fucompi st(0) ; ret 0xfdfb
0x0000000000094788 : fucompi st(0) ; ret 0xffd9
0x000000000009867f : fucompi st(0) ; retf
0x000000000009fa70 : fucompi st(0) ; retf -0x140
0x000000000010f280 : fucompi st(0) ; retf -0x860
0x0000000000132b80 : fucompi st(0) ; retf -0xa73
0x0000000000099f1b : fucompi st(0) ; scasd eax, dword ptr [rdi] ; cmp edi, 0xff ; jmp 0x961d8
0x00000000000914da : fucompi st(0) ; shl byte ptr [rdi - 0x76b70001], 1 ; ret
0x00000000000f99e9 : fucompi st(0) ; shl dword ptr [rdx], -7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000099de3 : fucompi st(0) ; xchg dword ptr [rip - 0x1d170000], edx ; ret
0x0000000000114e23 : fucompi st(0) ; xchg dword ptr [rsi - 9], ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114623 : fucompi st(0) ; xchg dword ptr [rsi - 9], esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000115213 : fucompi st(0) ; xchg eax, edi ; push 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000010d714 : fucompi st(0) ; xchg eax, esi ; ret
0x000000000014e571 : fxtract ; jmp qword ptr [rsi]
0x0000000000147fe8 : hlt ; adc edx, edi ; jmp rsp
0x000000000015f944 : hlt ; add dword ptr [rax], eax ; js 0x15f995 ; clc ; call qword ptr [rbx]
0x000000000015ef44 : hlt ; add dword ptr ss:[rax], eax ; test al, 0xf5 ; idiv edi ; ret
0x000000000015da44 : hlt ; and dword ptr [rcx], eax ; add al, bh ; mov bl, 0xf7 ; call qword ptr [rbx]
0x000000000014b268 : hlt ; and edi, edi ; jmp rsp
0x000000000014de42 : hlt ; call qword ptr [rax]
0x000000000014bd82 : hlt ; call qword ptr [rbx]
0x000000000014bde2 : hlt ; call qword ptr [rcx]
0x000000000014bc12 : hlt ; call qword ptr [rdi]
0x000000000014bf02 : hlt ; call qword ptr [rdx]
0x000000000014c93a : hlt ; call qword ptr [rsi]
0x000000000014e98a : hlt ; call rdi
0x000000000014414a : hlt ; call rsp
0x0000000000146fe9 : hlt ; clc ; call rsp
0x00000000000fc81b : hlt ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000147e38 : hlt ; cli ; stc ; call rsp
0x0000000000139ea3 : hlt ; dec dword ptr [rax - 0x75] ; or byte ptr [r8 + 0x39], r9b ; retf
0x000000000013b63a : hlt ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013bcdb : hlt ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x000000000013bcd3 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x000000000013a95a : hlt ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000001443da : hlt ; dec esp ; add dword ptr [rax], 0xf49eb400 ; jmp rsp
0x00000000001441ca : hlt ; dec esp ; jns 0x1441d8 ; add byte ptr [rdi + rcx*4 - 0xc], ah ; jmp rsp
0x0000000000005b9d : hlt ; enter 0x52eb, 0x42 ; ret 0xb01
0x0000000000144e88 : hlt ; in eax, -0xb ; call rsp
0x00000000001447c2 : hlt ; inc dword ptr [rcx + rdx*4] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014b982 : hlt ; jmp qword ptr [rax]
0x000000000014b93a : hlt ; jmp qword ptr [rbx]
0x000000000014b96a : hlt ; jmp qword ptr [rdi]
0x000000000014e742 : hlt ; jmp qword ptr [rdx]
0x000000000014e572 : hlt ; jmp qword ptr [rsi]
0x00000000001440ea : hlt ; jmp rsp
0x000000000014493a : hlt ; lcall ptr [rax + rbx*4 - 0x2d5c0000] ; hlt ; jmp rsp
0x00000000001444da : hlt ; lcall ptr [rbp + rax*4 - 0x5b6c0000] ; hlt ; jmp rsp
0x000000000014489a : hlt ; lcall ptr [rsp + rdx*4 - 0x35dc0000] ; hlt ; call rsp
0x000000000014b1e0 : hlt ; loope 0x14b1e6 ; call qword ptr [rbx + rcx*8]
0x0000000000156e44 : hlt ; mov ch, 0 ; add al, bl ; ret
0x00000000000b36d0 : hlt ; mov ch, 8 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000166f44 : hlt ; mov dh, 1 ; add al, bl ; ret
0x00000000000067ac : hlt ; mov ecx, 0x96b8ae8e ; retf
0x000000000010d159 : hlt ; mov rdi, rbx ; call rax
0x0000000000004886 : hlt ; or dword ptr [rbx + rcx - 0x54], edx ; ret 0x6da5
0x000000000016c644 : hlt ; or eax, 0x78b80002 ; sti ; call qword ptr [rdx]
0x0000000000161344 : hlt ; pop rdx ; add dword ptr [rax], eax ; call 0x13160c21
0x0000000000148b48 : hlt ; pop rsi ; sti ; call rsp
0x00000000001440e2 : hlt ; push qword ptr [rdi + rbx + 1] ; add byte ptr [rdx - 0x7f], ah ; hlt ; jmp rsp
0x000000000014411a : hlt ; push qword ptr [rdx + rbp*8] ; add ah, dh ; test esi, esp ; jmp rsp
0x00000000001489e0 : hlt ; push rcx ; sti ; jmp rsp
0x00000000000a788b : hlt ; ret
0x0000000000157b44 : hlt ; ret 0
0x000000000010fad8 : hlt ; ret 0xfff7
0x00000000000cf9b8 : hlt ; ret 0xfffb
0x0000000000167b44 : hlt ; ret 1
0x0000000000003703 : hlt ; retf
0x0000000000105ff0 : hlt ; retf 0x27
0x00000000001481fc : hlt ; retf 1
0x0000000000005c7e : hlt ; scasd eax, dword ptr [rdi] ; jle 0x5cf7 ; sbb dword ptr [rdi], ebx ; ret
0x00000000000051e6 : hlt ; shl byte ptr [rdx + 0x2f], 1 ; ret 0x5749
0x0000000000147820 : hlt ; stc ; call rsp
0x00000000000ec8a3 : hlt ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000145140 : hlt ; sub dh, dh ; jmp rsp
0x00000000000a364f : hlt ; sub eax, 0x3c894c00 ; ret 0x8b4c
0x00000000000050e3 : hlt ; test byte ptr [rsi + rdi - 0x24], bl ; sub dword ptr [rsi - 0x5d], esp ; retf
0x0000000000144120 : hlt ; test esi, esp ; jmp rsp
0x000000000010d0ab : hlt ; xor edx, edx ; mov rdi, rbx ; call rcx
0x00000000000baba0 : idiv ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fc57e : idiv al ; dec dword ptr [rax - 0x77] ; ret
0x00000000001276c0 : idiv bh ; add rsp, 0x18 ; ret
0x0000000000127b6d : idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000128cc1 : idiv bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001257a9 : idiv bh ; add rsp, 8 ; ret
0x0000000000145232 : idiv bh ; cld ; retf 0
0x000000000015826a : idiv bh ; in al, 0 ; add byte ptr [rax], al ; add al, 0x27 ; retf
0x000000000014525a : idiv bh ; in al, dx ; retf
0x00000000001450d2 : idiv bh ; insb byte ptr [rdi], dx ; ret 0
0x0000000000145202 : idiv bh ; insb byte ptr [rdi], dx ; retf 0
0x000000000015831a : idiv bh ; jg 0x158327 ; add byte ptr [rax], al ; add al, 0xa7 ; retf 1
0x00000000001450fa : idiv bh ; lodsb al, byte ptr [rsi] ; ret
0x00000000001455ca : idiv bh ; mov esp, 0x640000e2 ; jrcxz 0x1455d2 ; jmp rsp
0x0000000000144efa : idiv bh ; mov esp, 0xd40000ba ; adc dh, dh ; call rsp
0x00000000001278e9 : idiv bh ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123f0b : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x000000000011eaf1 : idiv bh ; nop dword ptr [rax + rax] ; ret
0x000000000012501b : idiv bh ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000001274ab : idiv bh ; nop dword ptr [rax] ; mov qword ptr [rdi], rsi ; ret
0x0000000000124e52 : idiv bh ; nop dword ptr [rax] ; ret
0x00000000001582c2 : idiv bh ; out 0, eax ; add byte ptr [rax], al ; add al, 0xe8 ; retf 1
0x0000000000127bfe : idiv bh ; pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000001581da : idiv bh ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rax*4], al ; retf
0x00000000001450ca : idiv bh ; push rsp ; ret 0
0x00000000001451fa : idiv bh ; push rsp ; retf 0
0x0000000000145212 : idiv bh ; pushfq ; retf 0
0x000000000014524a : idiv bh ; retf
0x000000000012abc9 : idiv bh ; test rax, rax ; je 0x12abdf ; pop rbx ; ret
0x00000000001451b2 : idiv bh ; xchg eax, esp ; enter 0, 0x74 ; xor dh, dh ; call rsp
0x0000000000145252 : idiv bh ; xchg eax, esp ; retf
0x00000000001583a2 : idiv bh ; xlatb ; add byte ptr [rax], al ; add byte ptr [rdx + rdi], al ; retf 1
0x0000000000004586 : idiv byte ptr [rip - 0x15322fea] ; ret 0xd9b1
0x000000000012467a : idiv dil ; mov rax, rbx ; pop rbx ; ret
0x000000000012501a : idiv dil ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x0000000000008329 : idiv dword ptr [rdx + 0x6d086dc8] ; ret 0x5c64
0x00000000000fc428 : idiv eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001493d9 : idiv ebx ; call rsp
0x00000000001142d6 : idiv edi ; add rsp, 0x18 ; ret
0x0000000000135092 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000094cc4 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008f98e : idiv edi ; inc dword ptr [rax + rax*8 - 0x7917e58c] ; ret 0xffff
0x00000000001463d2 : idiv edi ; mov ah, 0x26 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x0000000000113103 : idiv edi ; mov rax, rbx ; pop rbx ; ret
0x000000000011957c : idiv edi ; nop ; ret
0x00000000001090f7 : idiv edi ; nop dword ptr [rax] ; jmp rax
0x0000000000112fca : idiv edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015d542 : idiv edi ; ret
0x00000000000be3da : idiv edi ; ror byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000145962 : idiv edi ; xchg eax, esp ; add byte ptr [rax], al ; adc dil, r14b ; jmp rsp
0x000000000016aea9 : idiv edx ; jmp rdx
0x0000000000149a29 : idiv esp ; jmp rsp
0x0000000000145259 : idiv r15b ; in al, dx ; retf
0x0000000000125a54 : idiv r15b ; mov rax, rbx ; pop rbx ; ret
0x0000000000124e51 : idiv r15b ; nop dword ptr [rax] ; ret
0x0000000000145249 : idiv r15b ; retf
0x0000000000145251 : idiv r15b ; xchg eax, esp ; retf
0x00000000000ecfab : imul al ; call rdx
0x00000000000af2c7 : imul al ; ret
0x00000000000e640f : imul al ; retf
0x00000000000059ee : imul byte ptr [rbx - 0x1951058b] ; sbb eax, ebp ; xchg eax, edi ; retf 0x31bf
0x00000000000e6436 : imul byte ptr [rdi] ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dcdb3 : imul cl ; retf -2
0x0000000000005012 : imul dword ptr [rdx + 0x48e6cd20] ; insb byte ptr [rdi], dx ; retf 0x71a7
0x00000000000045a9 : imul dword ptr [rsi + rbp - 0x7c] ; retf
0x000000000011dceb : imul eax ; call rcx
0x00000000000b78d1 : imul eax ; fldcw word ptr [rax] ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000efaad : imul eax ; insd dword ptr [rdi], dx ; ret
0x00000000000afac8 : imul eax ; ret 0xfd9f
0x00000000000d2ddf : imul eax ; retf
0x000000000015218d : imul eax, dword ptr [rax], 0xf5fee000 ; jmp rbx
0x00000000000e7919 : imul eax, dword ptr [rbx + 0x5174fffb], 0x39 ; retf
0x0000000000004036 : imul eax, dword ptr [rip - 0x615efee3], -0x49 ; ret
0x0000000000090405 : imul eax, ecx ; cmp rdi, rsi ; jne 0x90401 ; ret
0x00000000000a02cd : imul eax, edi ; cmp rdx, rcx ; jne 0xa02c9 ; ret
0x00000000000a031d : imul eax, edi ; cmp rdx, rcx ; jne 0xa0319 ; ret
0x00000000000c271d : imul eax, edi ; cmp rdx, rcx ; jne 0xc2719 ; ret
0x00000000000a0245 : imul eax, edi ; cmp rdx, rsi ; jne 0xa0241 ; ret
0x00000000000a0285 : imul eax, edi ; cmp rdx, rsi ; jne 0xa0281 ; ret
0x00000000000c26d5 : imul eax, edi ; cmp rdx, rsi ; jne 0xc26d1 ; ret
0x0000000000005511 : imul ebp, eax, 0xa2b620f5 ; out dx, al ; clc ; retf
0x00000000000cb3b1 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000926dc : imul ecx, dword ptr [rax + 0x5b], 0x5d ; ret
0x00000000000d3879 : imul ecx, dword ptr [rax - 0x7d], 0x5d5b18c4 ; ret
0x0000000000007449 : imul ecx, dword ptr [rbx], 0x53 ; xchg eax, esi ; stc ; jp 0x73f3 ; retf 0x6fab
0x000000000013ce7c : imul ecx, ebx, -0xb ; call qword ptr [rdx - 0x35]
0x00000000000d52b8 : imul edi, ebx, 0x38948ff ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000100295 : imul edi, edi, 0x8948ffff ; ret
0x00000000000d5141 : imul edx, dword ptr [rbx - 5], -1 ; mov rax, rbx ; pop rbx ; ret
0x0000000000004489 : imul edx, dword ptr [rdx - 0x2c], 0x2a ; ret 0x5a81
0x00000000000a6275 : imul esi, dword ptr [rax], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000090e21 : imul esi, edi ; lea rax, qword ptr [rsi + rdx] ; ret
0x0000000000112f63 : imul esi, edi, 0x58b48ff ; ret
0x00000000000067bc : imul esp, dword ptr [rbp + 0x7e], 0x2280e881 ; retf
0x00000000000bcce3 : imul esp, dword ptr [rdx + 0x2c], 0xc894800 ; ret 0x8b48
0x0000000000090e20 : imul rsi, rdi ; lea rax, qword ptr [rsi + rdx] ; ret
0x0000000000146ed8 : in al, -0x16 ; clc ; call rsp
0x0000000000148538 : in al, -0x1e ; cli ; jmp rsp
0x00000000000039bd : in al, -0x32 ; shl byte ptr [rax + 0x4a], 1 ; ret 0x9ddd
0x0000000000158574 : in al, -0x35 ; add byte ptr [rax], al ; pop rax ; add edi, esi ; jmp rdi
0x0000000000167974 : in al, -0x41 ; add dword ptr [rax], eax ; fcom st(0) ; stc ; call rcx
0x000000000012d7d8 : in al, -0x46 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000148ef0 : in al, -0x57 ; sti ; call rsp
0x00000000000a0219 : in al, -0x64 ; retf
0x00000000000e78d7 : in al, -0x77 ; ret
0x000000000012d800 : in al, -0xb ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b5a83 : in al, -1 ; inc dword ptr [rax + rax*8 - 0x7cb6b98c] ; ret 0x4904
0x00000000000fd7e8 : in al, -8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000015826c : in al, 0 ; add byte ptr [rax], al ; add al, 0x27 ; retf
0x000000000014b934 : in al, 0 ; add byte ptr [rax], al ; clc ; adc esp, esi ; jmp qword ptr [rbx]
0x000000000014c934 : in al, 0x10 ; add byte ptr [rax], al ; test al, 0x23 ; hlt ; call qword ptr [rsi]
0x000000000014d634 : in al, 0x1d ; add byte ptr [rax], al ; test al, 0x35 ; hlt ; jmp qword ptr [rbx]
0x000000000014d734 : in al, 0x1e ; add byte ptr [rax], al ; pop rax ; hlt ; call qword ptr [rdi]
0x0000000000014350 : in al, 0x25 ; add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt cx ; ret 0x13
0x0000000000148048 : in al, 0x27 ; cli ; call rsp
0x0000000000147668 : in al, 0x2f ; stc ; call rsp
0x00000000001467c8 : in al, 0x31 ; clc ; jmp rsp
0x000000000015f734 : in al, 0x3e ; add dword ptr [rax], eax ; clc ; clc ; call qword ptr [rbx]
0x000000000015fa34 : in al, 0x41 ; add dword ptr [rax], eax ; or byte ptr [rdi - 8], al ; call rax
0x0000000000146a24 : in al, 0x4b ; add dword ptr [rax], eax ; push rsp ; clc ; call rsp
0x0000000000147930 : in al, 0x4d ; stc ; call rsp
0x0000000000150874 : in al, 0x4e ; add byte ptr [rax], al ; fsub dword ptr [rdi - 0xb] ; call qword ptr [rbx]
0x00000000001479a8 : in al, 0x50 ; stc ; call rsp
0x0000000000171074 : in al, 0x56 ; add al, byte ptr [rax] ; test al, 0x5e ; cld ; call rsi
0x000000000000443f : in al, 0x57 ; retf
0x0000000000162674 : in al, 0x6c ; add dword ptr [rax], eax ; js 0x162693 ; stc ; jmp rsp
0x0000000000152b34 : in al, 0x72 ; add byte ptr [rax], al ; pop rax ; cdq ; jmp qword ptr [rax]
0x00000000001466d8 : in al, 0xc ; clc ; call rsp
0x0000000000146698 : in al, 8 ; clc ; call rsp
0x0000000000115c2f : in al, dx ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014e73c : in al, dx ; add byte ptr cs:[rax], al ; rcr bh, 0xf4 ; jmp qword ptr [rdx]
0x0000000000163b7c : in al, dx ; add dword ptr [rcx], 0xf947c000 ; call rdi
0x000000000014da3c : in al, dx ; and dword ptr [rax], eax ; add al, dl ; cmp dh, ah ; call qword ptr [rdi]
0x000000000014de3c : in al, dx ; and eax, 0x4de00000 ; hlt ; call qword ptr [rax]
0x00000000000fcf8e : in al, dx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fc130 : in al, dx ; cli ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001520e1 : in al, dx ; cmc ; jmp qword ptr [rbx]
0x00000000000082ab : in al, dx ; mov ah, 0xc5 ; xchg eax, edx ; sar eax, -0x2e ; ret 0xed0c
0x0000000000157f3c : in al, dx ; mov byte ptr [rax], 0 ; nop ; div dh ; call qword ptr [rbx]
0x000000000013cb90 : in al, dx ; mov ebp, dr0 ; call rsp
0x00000000000bf6b0 : in al, dx ; mov ebx, 0x8948fffc ; ret
0x00000000000b31d8 : in al, dx ; mov edx, 0x89480008 ; ret 0x8348
0x00000000000ce53c : in al, dx ; mov rsi, r12 ; call 0x8a766
0x00000000000f9b6a : in al, dx ; or al, ch ; jmp qword ptr [rax]
0x00000000000f5596 : in al, dx ; or al, ch ; ret
0x00000000000d86c7 : in al, dx ; or al, ch ; ret 0xfb0a
0x00000000000d3fe7 : in al, dx ; or al, ch ; ret 0xfb5c
0x00000000000ad697 : in al, dx ; or al, ch ; ret 0xfdba
0x000000000008fd22 : in al, dx ; or bh, bh ; xlatb ; call 0x8bf56
0x00000000000e00a5 : in al, dx ; or byte ptr [rax + 0x21], cl ; ret 0x8944
0x00000000000c7a38 : in al, dx ; or byte ptr [rax + 0x39], cl ; retf 0x4173
0x000000000009a00a : in al, dx ; or byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000b30ca : in al, dx ; or byte ptr [rax - 0x75], cl ; cmovs ebp, dword ptr [rcx] ; retf
0x0000000000126c4b : in al, dx ; or byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x2773
0x0000000000106f40 : in al, dx ; or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d288d : in al, dx ; or byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000014c13c : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax + 0x1b], al ; hlt ; call qword ptr [rdx]
0x000000000016143c : in al, dx ; pop rbx ; add dword ptr [rax], eax ; mov al, 0xce ; clc ; call qword ptr [rdx]
0x00000000000baefb : in al, dx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015213c : in al, dx ; push -0xa400000 ; cmc ; jmp qword ptr [rsi]
0x0000000000007d80 : in al, dx ; push rdx ; ret 0x78cb
0x0000000000005f98 : in al, dx ; ret
0x00000000000147c0 : in al, dx ; ret 0x13
0x0000000000099f30 : in al, dx ; ret 0xffff
0x0000000000006f06 : in al, dx ; retf
0x000000000015847c : in al, dx ; retf 0
0x0000000000005af3 : in al, dx ; sub al, 0xd8 ; in eax, 0x22 ; cmp bh, dl ; ret 0x9d0c
0x00000000000b2e55 : in al, dx ; sub byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x2cfc
0x000000000016e63c : in al, dx ; sub eax, 0x97f00002 ; sti ; call qword ptr [rbx]
0x000000000016627c : in al, dx ; test al, 1 ; add al, al ; mov bl, 0xf9 ; jmp qword ptr [rdi]
0x00000000001448ac : in al, dx ; xchg eax, esp ; add byte ptr [rax], al ; retf -0xc
0x0000000000003d2f : in eax, -0x17 ; retf
0x0000000000005254 : in eax, -0x37 ; retf
0x000000000000576f : in eax, -0x40 ; jae 0x573b ; pop rdi ; mov ch, 0x75 ; jrcxz 0x57f0 ; ret
0x0000000000144e89 : in eax, -0xb ; call rsp
0x0000000000005c7d : in eax, -0xc ; scasd eax, dword ptr [rdi] ; jle 0x5cf8 ; sbb dword ptr [rdi], ebx ; ret
0x000000000013aa92 : in eax, -0xd ; ret
0x00000000000fd6b8 : in eax, -8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000015e09 : in eax, 0 ; add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], al ; retf 0x37
0x0000000000003765 : in eax, 0 ; retf -0x3597
0x0000000000005af6 : in eax, 0x22 ; cmp bh, dl ; ret 0x9d0c
0x00000000000c7047 : in eax, 0x23 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000124400 : in eax, 0x25 ; add byte ptr [rbp + 0x13], dh ; ret
0x00000000001240cf : in eax, 0x48 ; mov edi, ebx ; pop rbx ; jmp rax
0x0000000000007c6f : in eax, 0x6f ; ret 0xa486
0x000000000000756c : in eax, 0x71 ; add al, 9 ; retf 0xd3ed
0x0000000000005972 : in eax, 0x7a ; mov al, 0x87 ; ret 0x454a
0x0000000000007308 : in eax, 1 ; mov esi, 0xd7d6a254 ; in eax, dx ; retf -0xe8a
0x0000000000004435 : in eax, 3 ; or dword ptr [rdx], esp ; ret 0x5a81
0x0000000000070061 : in eax, dx ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x37
0x0000000000070031 : in eax, dx ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x00000000000a16ef : in eax, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000178d6f : in eax, dx ; add dword ptr [rcx], eax ; retf 0x501
0x00000000000fce55 : in eax, dx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000014ea99 : in eax, dx ; hlt ; call qword ptr [rcx]
0x0000000000105f59 : in eax, dx ; jmp 0x105f29
0x0000000000106539 : in eax, dx ; jmp 0x106509
0x00000000000051e1 : in eax, dx ; mov al, 0xd4 ; xchg eax, esi ; or al, 0xf4 ; shl byte ptr [rdx + 0x2f], 1 ; ret 0x5749
0x00000000000955ae : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000912e2 : in eax, dx ; mov rdi, rbp ; call r12
0x00000000000072c3 : in eax, dx ; pop rax ; ret
0x00000000000a8272 : in eax, dx ; ret
0x000000000000730f : in eax, dx ; retf -0xe8a
0x000000000008e53f : in eax, dx ; retf -1
0x00000000000083a2 : in eax, dx ; retf 0x577a
0x000000000017317a : in eax, dx ; syscall
0x000000000009bf3e : inc bl ; mov eax, 0xfffffffd ; ret
0x000000000016b6bd : inc byte ptr [rcx] ; add byte ptr [rax + 0x2b], al ; sti ; jmp qword ptr [rbx]
0x000000000014898d : inc byte ptr [rcx] ; add byte ptr [rcx + rdx*2], al ; sti ; jmp rsp
0x0000000000007447 : inc cl ; imul ecx, dword ptr [rbx], 0x53 ; xchg eax, esi ; stc ; jp 0x73f5 ; retf 0x6fab
0x000000000013c93f : inc dword ptr [rax + 0x62] ; cmc ; inc dword ptr [rax + 0x62] ; cmc ; jmp qword ptr [rax]
0x000000000013c83f : inc dword ptr [rax + 0x62] ; cmc ; jmp qword ptr [rax]
0x000000000008c1c6 : inc dword ptr [rax + 8] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000000b8c20 : inc dword ptr [rax + rax*8 - 0x76b3e68b] ; out -0x77, eax ; ret
0x000000000008f990 : inc dword ptr [rax + rax*8 - 0x7917e58c] ; ret 0xffff
0x00000000000b5a85 : inc dword ptr [rax + rax*8 - 0x7cb6b98c] ; ret 0x4904
0x00000000000b470b : inc dword ptr [rax + rax*8 - 0x7cbe3a8c] ; or byte ptr [rcx], al ; ret
0x00000000000b46ee : inc dword ptr [rax + rax*8 - 0x7cbef28c] ; and dh, bh ; ret
0x000000000014258f : inc dword ptr [rax - 0x16] ; stc ; jmp rsp
0x000000000016bc94 : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, 0x28 ; retf
0x0000000000110bae : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xf41
0x000000000013cdf3 : inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rax
0x000000000013cdef : inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; call rax
0x0000000000105f56 : inc dword ptr [rbp + 0x31] ; in eax, dx ; jmp 0x105f2c
0x0000000000106536 : inc dword ptr [rbp + 0x31] ; in eax, dx ; jmp 0x10650c
0x00000000000b5e2b : inc dword ptr [rbp + 0x480575c0] ; add esp, 8 ; ret
0x000000000009bfa5 : inc dword ptr [rbp + 0x480875c0] ; add esp, 8 ; ret
0x00000000000b8508 : inc dword ptr [rbp + 0x5b0a75c0] ; pop rbp ; pop r12 ; ret
0x00000000000b88ba : inc dword ptr [rbp + 0x5b1d75c0] ; pop rbp ; pop r12 ; ret
0x00000000000bba8e : inc dword ptr [rbp + 0x5b1f75c0] ; ret
0x000000000009c84a : inc dword ptr [rbp + 0x5b2975c0] ; pop rbp ; pop r12 ; ret
0x00000000000a38f1 : inc dword ptr [rbp + 0x5b4d75c0] ; pop rbp ; pop r12 ; ret
0x000000000014848b : inc dword ptr [rbp + rbx*8 - 0x2d3bffff] ; cli ; call rsp
0x00000000000bba3c : inc dword ptr [rbp - 0x17408b40] ; retf -0x2d5
0x00000000000b399b : inc dword ptr [rbp - 0x77] ; retf -0x7cbf
0x000000000010f059 : inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x00000000000a8ec2 : inc dword ptr [rbx - 0x7bf00008] ; retf
0x0000000000109a1f : inc dword ptr [rcx + 0x38] ; sal dword ptr [rsi + rdx + 0x48], -0x7d ; ret 0x4801
0x00000000000c7c06 : inc dword ptr [rcx + 0xf] ; les r9d, ptr [rax - 0x7d] ; ret
0x0000000000144bbb : inc dword ptr [rcx + rbp*4 - 0x688c0000] ; cmc ; call rsp
0x0000000000149b3b : inc dword ptr [rcx + rbx*2 + 0xdb40002] ; std ; call rsp
0x00000000001447c3 : inc dword ptr [rcx + rdx*4] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000e0967 : inc dword ptr [rcx - 0x77] ; ret
0x0000000000109faf : inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000001066e8 : inc dword ptr [rcx - 0x80] ; jle 0x10672d ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000108645 : inc dword ptr [rcx - 9] ; ret
0x0000000000178539 : inc dword ptr [rcx] ; adc eax, 0x55b ; retf 0x502
0x00000000001489dd : inc dword ptr [rcx] ; add ah, dh ; push rcx ; sti ; jmp rsp
0x000000000016b8b5 : inc dword ptr [rcx] ; add byte ptr [rax + 0x32], cl ; sti ; jmp rdx
0x00000000001744ff : inc dword ptr [rcx] ; pop rsi ; xor eax, dword ptr [rip + 0x5600000] ; retf
0x00000000001739c9 : inc dword ptr [rcx] ; sbb dh, byte ptr [rdi] ; add eax, 0x56c0000 ; ret 2
0x0000000000163e8b : inc dword ptr [rdi + 0x4000000] ; ret
0x000000000016330b : inc dword ptr [rdi + 0x4000000] ; retf
0x0000000000149adb : inc dword ptr [rdi + rdx*2 + 0x5b40002] ; std ; call rsp
0x0000000000144e83 : inc dword ptr [rdi + rsi*4 - 0x1a0c0000] ; cmc ; call rsp
0x00000000001429e7 : inc dword ptr [rdx + 0x75] ; cli ; call rax
0x00000000001429e3 : inc dword ptr [rdx + 0x75] ; cli ; inc dword ptr [rdx + 0x75] ; cli ; call rax
0x00000000001429cb : inc dword ptr [rdx + 0x75] ; cli ; inc eax ; jo 0x1429d5 ; call rax
0x000000000016be0b : inc dword ptr [rdx] ; add eax, dword ptr [rax] ; add byte ptr [rax + rsi], al ; retf 0
0x00000000001643c3 : inc dword ptr [rsi + 0x4000000] ; ret
0x000000000015821b : inc dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx + rbx*2], al ; retf
0x000000000014336f : inc eax ; cmp esp, 0xfc8090ff ; call qword ptr [rax]
0x00000000001429cf : inc eax ; jo 0x1429d1 ; call rax
0x0000000000143bc3 : inc eax ; sar dh, cl ; jmp rcx
0x00000000000d3b3d : inc ebx ; nop ; ret
0x0000000000124161 : inc ebx ; nop dword ptr [rax + rax] ; jmp rdx
0x00000000000a594b : inc ebx ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000147433 : inc esp ; add dword ptr [rcx], 0xf91bc400 ; jmp rsp
0x000000000014a27b : inc esp ; add dword ptr [rdx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; std ; jmp rsp
0x00000000001467c3 : inc esp ; cmp al, 1 ; add ah, ah ; xor eax, edi ; jmp rsp
0x000000000013cb4f : inc esp ; jle 0x13cb4c ; jmp rdx
0x0000000000147cc3 : inc esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; and al, 0xa0 ; stc ; jmp rsp
0x000000000014b7e3 : inc esp ; out 2, eax ; add ah, al ; jne 0x14b7f2 ; jmp rsp
0x000000000014822b : inc esp ; retf
0x0000000000149f15 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add al, 0x5f ; std ; call rsp
0x0000000000149884 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; je 0x149822 ; cld ; call rsp
0x000000000016eebc : insb byte ptr [rdi], dx ; add al, byte ptr ss:[rax] ; loopne 0x16ee69 ; sti ; jmp qword ptr [rdx]
0x000000000014fcbc : insb byte ptr [rdi], dx ; add byte ptr [rax], r8b ; mov al, 0x58 ; cmc ; call qword ptr [rbx]
0x0000000000162675 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; js 0x162692 ; stc ; jmp rsp
0x000000000010cc2a : insb byte ptr [rdi], dx ; and al, 0x10 ; call 0x88ed5
0x0000000000105da2 : insb byte ptr [rdi], dx ; and al, 0x18 ; mov rsi, rbp ; mov rdi, r13 ; call rax
0x0000000000105772 : insb byte ptr [rdi], dx ; and al, 0x20 ; mov rsi, rbp ; mov rdi, r13 ; call rax
0x00000000001057c2 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov rsi, rbp ; mov rdi, r13 ; call rax
0x0000000000141c50 : insb byte ptr [rdi], dx ; clc ; call qword ptr [rax]
0x0000000000141c4c : insb byte ptr [rdi], dx ; clc ; ljmp ptr [rsp + rax*2 - 8] ; call qword ptr [rax]
0x0000000000171161 : insb byte ptr [rdi], dx ; cld ; call rsi
0x0000000000150a89 : insb byte ptr [rdi], dx ; cmc ; call rsi
0x00000000001343e8 : insb byte ptr [rdi], dx ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000000790b : insb byte ptr [rdi], dx ; cmp eax, 0xc0b15e23 ; ret
0x00000000001696bc : insb byte ptr [rdi], dx ; fiadd word ptr [rcx] ; add al, ah ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x000000000016b6bc : insb byte ptr [rdi], dx ; inc byte ptr [rcx] ; add byte ptr [rax + 0x2b], al ; sti ; jmp qword ptr [rbx]
0x0000000000005b99 : insb byte ptr [rdi], dx ; jb 0x5b5c ; pop rdx ; hlt ; enter 0x52eb, 0x42 ; ret 0xb01
0x0000000000162ffc : insb byte ptr [rdi], dx ; jbe 0x163007 ; add byte ptr [rax + 0x2a], dh ; stc ; call rdi
0x00000000001142b0 : insb byte ptr [rdi], dx ; jns 0x1142b0 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000166cbc : insb byte ptr [rdi], dx ; mov ah, 1 ; add byte ptr [rax - 0x40], al ; stc ; jmp qword ptr [rdx]
0x000000000000347b : insb byte ptr [rdi], dx ; mov gs, ecx ; nop ; pop rax ; jbe 0x340d ; ret 0x9349
0x0000000000019858 : insb byte ptr [rdi], dx ; ret
0x00000000001450d4 : insb byte ptr [rdi], dx ; ret 0
0x0000000000145204 : insb byte ptr [rdi], dx ; retf 0
0x0000000000005018 : insb byte ptr [rdi], dx ; retf 0x71a7
0x00000000000fc2b0 : insb byte ptr [rdi], dx ; stc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000007833 : insb byte ptr [rdi], dx ; xchg eax, esi ; ret 0x46a4
0x000000000016e8bc : insb byte ptr [rdi], dx ; xor byte ptr [rdx], al ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x0000000000149f35 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; xchg eax, esp ; std ; jmp rsp
0x000000000016c60c : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rcx + rbx*2], al ; ret
0x0000000000134285 : insd dword ptr [rdi], dx ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004b06 : insd dword ptr [rdi], dx ; mov cl, 0x3f ; test dword ptr [rbx + 0x2d], eax ; ret 0xfda5
0x00000000001002af : insd dword ptr [rdi], dx ; mov ecx, 0x8948fff8 ; ret
0x0000000000007216 : insd dword ptr [rdi], dx ; ret
0x0000000000023dd8 : insd dword ptr [rdi], dx ; ret 0x13
0x0000000000105fc7 : insd dword ptr [rdi], dx ; ret 0x27
0x000000000000832e : insd dword ptr [rdi], dx ; ret 0x5c64
0x00000000000b1e4f : int 0xcb
0x000000000016aa25 : int1 ; add dword ptr [rax], eax ; test al, 0xe2 ; cli ; jmp qword ptr [rbx]
0x000000000014877d : int1 ; add dword ptr [rax], eax ; xor al, 0x22 ; sti ; jmp rsp
0x0000000000023aa0 : int1 ; and eax, 0x210000 ; lldt si ; ret 0x13
0x00000000000fca45 : int1 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012ce4b : int1 ; cmc ; dec dword ptr [rbp - 0x7b] ; div byte ptr [rbp + rdi*4 - 0x15] ; retf
0x000000000012a996 : int1 ; cmc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d287c : int1 ; jb 0xd2885 ; ret
0x00000000000d591c : int1 ; jb 0xd5925 ; ret
0x0000000000007697 : int1 ; jle 0x768e ; wait ; call rdi
0x00000000000928eb : int1 ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x00000000000cb334 : int1 ; mov qword ptr [rdi + 0x28], rcx ; ret
0x00000000000d30ce : int1 ; mov rax, -1 ; ret
0x000000000000749f : int1 ; push rax ; ret 0x2a62
0x00000000000a6553 : int1 ; ret
0x0000000000023e80 : int1 ; ret 0x13
0x0000000000006e87 : int1 ; retf
0x000000000009e3fb : int1 ; retf -2
0x0000000000005d39 : int1 ; retf 0x1e75
0x000000000000831d : int1 ; scasb al, byte ptr [rdi] ; wait ; ret 0x7cdd
0x0000000000104ddc : int1 ; xor edx, edx ; mov rdi, r12 ; call rax
0x00000000000de9b7 : int1 ; xor edx, edx ; mov rdi, r13 ; call r8
0x000000000010a907 : int1 ; xor edx, edx ; mov rdi, rbx ; call r8
0x0000000000105d5f : iretd ; call rax
0x00000000001677b1 : iretd ; stc ; call qword ptr [rdx]
0x000000000011e396 : ja 0x11e3e7 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011e5f0 : ja 0x11e640 ; xor edx, edx ; jmp 0x8a816
0x0000000000124365 : ja 0x124379 ; ret
0x00000000001243b5 : ja 0x1243e1 ; ret
0x00000000001243c6 : ja 0x1243ee ; mov qword ptr [rdi + 0x30], rdx ; ret
0x0000000000124432 : ja 0x124446 ; ret
0x0000000000124442 : ja 0x12446e ; ret
0x0000000000124ab9 : ja 0x124acd ; ret
0x0000000000124b09 : ja 0x124b35 ; ret
0x0000000000124b16 : ja 0x124b3e ; mov qword ptr [rdi + 0x30], rdx ; ret
0x0000000000124b86 : ja 0x124b9a ; ret
0x0000000000124b96 : ja 0x124bc2 ; ret
0x0000000000124d62 : ja 0x124d6e ; ret
0x0000000000124da2 : ja 0x124db6 ; ret
0x0000000000124db5 : ja 0x124dc5 ; mov byte ptr [rax + rsi], 0 ; ret
0x0000000000124f3a : ja 0x124f41 ; ret
0x0000000000124f6f : ja 0x124f81 ; cmp rsi, rdx ; jb 0x124f80 ; ret
0x00000000001254b5 : ja 0x125527 ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x0000000000125c50 : ja 0x125c61 ; mov byte ptr [rax + rsi], 0 ; ret
0x0000000000127ee1 : ja 0x127ed3 ; ret
0x0000000000127ee0 : ja 0x127ed4 ; ret
0x000000000012a995 : ja 0x12a990 ; cmc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000138862 : ja 0x13886e ; ret
0x00000000001388a2 : ja 0x1388b6 ; ret
0x00000000001388b5 : ja 0x1388c8 ; mov dword ptr [rax + rsi*4], 0 ; ret
0x0000000000138a4a : ja 0x138a51 ; ret
0x0000000000138a7f : ja 0x138a91 ; cmp rsi, rdx ; jb 0x138a90 ; ret
0x00000000000141b8 : ja 0x141e9 ; add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt word ptr [rax] ; ret
0x0000000000152f55 : ja 0x152f5d ; add al, cl ; adc dh, dh ; call qword ptr [rbx]
0x0000000000152f6d : ja 0x152f75 ; add al, dl ; adc dh, dh ; call qword ptr [rdx]
0x00000000001630bd : ja 0x1630c6 ; add al, dh ; sub edi, ecx ; jmp rdi
0x0000000000171491 : ja 0x171491 ; jmp qword ptr [rax]
0x00000000001714a9 : ja 0x1714a9 ; jmp rax
0x0000000000004e0e : ja 0x4e7c ; mov word ptr [rax], dr0 ; mov eax, 0xde3a7577 ; ret
0x0000000000004e13 : ja 0x4e8e ; cmp bl, dh ; ret
0x0000000000006a09 : ja 0x6a72 ; retf -0x2fdc
0x000000000009df91 : ja 0x9dfba ; or esi, 4 ; call 0x8a9b7
0x00000000000b2fc6 : ja 0xb2fca ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000b3a36 : ja 0xb39f0 ; add rdx, 2 ; mov qword ptr [rdi], rdx ; ret
0x00000000000b3e92 : ja 0xb3ed8 ; lea rdx, qword ptr [r8 + rdx*2] ; mov qword ptr [rdi], rdx ; ret
0x00000000000b3f3c : ja 0xb3f43 ; ret
0x00000000000b4170 : ja 0xb417b ; ret
0x00000000000b4560 : ja 0xb458b ; ret
0x00000000000b90b6 : ja 0xb90d5 ; je 0xb90c5 ; ret
0x00000000000bdd55 : ja 0xbdce1 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000c1ca7 : ja 0xc1caa ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1d27 : ja 0xc1d2a ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cb20b : ja 0xcb25e ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cca7b : ja 0xccace ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cd91b : ja 0xcd96e ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000ceaab : ja 0xceafe ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cee6b : ja 0xceebe ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000cf716 : ja 0xcf767 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d06fb : ja 0xd074e ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000d158b : ja 0xd15de ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000d271b : ja 0xd276e ; lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000d49e9 : ja 0xd4a05 ; jb 0xd49f5 ; ret
0x00000000000d7550 : ja 0xd755d ; add byte ptr [rax - 0x77], cl ; retf -0x7cb8
0x00000000000d7b99 : ja 0xd7bb5 ; jb 0xd7ba5 ; ret
0x00000000000e3b21 : ja 0xe3b13 ; ret
0x00000000000e3b20 : ja 0xe3b14 ; ret
0x00000000000e8995 : ja 0xe89b0 ; cli ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f923b : ja 0xf9261 ; mov dword ptr [rdi + 0x20], esi ; jne 0xf9255 ; ret
0x00000000000f923e : ja 0xf9265 ; jne 0xf9252 ; ret
0x00000000000f9274 : ja 0xf9297 ; jne 0xf927f ; ret
0x00000000000f9271 : ja 0xf929b ; test dword ptr [rdi + 0x1c], esi ; jne 0xf9282 ; ret
0x00000000000f9c9b : ja 0xf9cc1 ; mov dword ptr [rdi + 0x20], esi ; jne 0xf9cb5 ; ret
0x00000000000f9c9e : ja 0xf9cc5 ; jne 0xf9cb2 ; ret
0x00000000000f9cd4 : ja 0xf9cf7 ; jne 0xf9cdf ; ret
0x00000000000f9cd1 : ja 0xf9cfb ; test dword ptr [rdi + 0x1c], esi ; jne 0xf9ce2 ; ret
0x000000000011489d : jae 0x11489b ; dec dword ptr [rax - 0x77] ; ret
0x00000000001177af : jae 0x1177cd ; movzx eax, byte ptr [rax] ; ret
0x000000000012408c : jae 0x1240c6 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001241a8 : jae 0x1241b5 ; movzx eax, byte ptr [rax] ; ret
0x0000000000124815 : jae 0x12484d ; mov eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001248f8 : jae 0x124904 ; mov eax, dword ptr [rax] ; ret
0x0000000000125807 : jae 0x125818 ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x0000000000125837 : jae 0x125848 ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x0000000000132f49 : jae 0x132f48 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000132f48 : jae 0x132f49 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x00000000001393c7 : jae 0x1393da ; mov rax, qword ptr [rdi] ; lea rax, qword ptr [rax + rsi*4] ; ret
0x00000000001393f7 : jae 0x13940a ; mov rax, qword ptr [rdi] ; lea rax, qword ptr [rax + rsi*4] ; ret
0x0000000000144ad9 : jae 0x144ad2 ; jmp rsp
0x0000000000149fed : jae 0x149ff7 ; add byte ptr [rdi + rcx*4], dh ; std ; call rsp
0x000000000014b7b9 : jae 0x14b7bc ; call rsp
0x000000000014b7b8 : jae 0x14b7bd ; call rsp
0x00000000000042b9 : jae 0x42f3 ; retf 0x2f8
0x0000000000005771 : jae 0x5739 ; pop rdi ; mov ch, 0x75 ; jrcxz 0x57ee ; ret
0x00000000000072c2 : jae 0x72b4 ; pop rax ; ret
0x0000000000094bc7 : jae 0x94bdb ; xchg eax, esp ; ret 0x8b48
0x00000000000a62b6 : jae 0xa62d8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b2687 : jae 0xb268b ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c2090 : jae 0xc2093 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c904f : jae 0xc906d ; movzx eax, byte ptr [rax] ; ret
0x00000000000d2a8a : jae 0xd2a95 ; add rax, rsi ; ret
0x00000000000d5b8a : jae 0xd5b97 ; lea rax, qword ptr [rax + rsi*4] ; ret
0x00000000000de5e4 : jae 0xde5f9 ; movzx eax, byte ptr [rax] ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000114a66 : jb 0x114a64 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114a65 : jb 0x114a65 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001177ff : jb 0x117802 ; ret
0x000000000011788f : jb 0x11788f ; ret
0x000000000011957a : jb 0x119591 ; idiv edi ; nop ; ret
0x0000000000124f74 : jb 0x124f7b ; ret
0x0000000000125796 : jb 0x1257a3 ; ret
0x0000000000138a84 : jb 0x138a8b ; ret
0x0000000000139346 : jb 0x139353 ; ret
0x0000000000146a99 : jb 0x146a95 ; call rsp
0x0000000000152a6d : jb 0x152a75 ; add byte ptr [rax], al ; or al, 0xf6 ; call qword ptr [rbx]
0x0000000000152b35 : jb 0x152b3d ; add byte ptr [rax - 0x67], bl ; jmp qword ptr [rax]
0x0000000000005b9a : jb 0x5b5b ; pop rdx ; hlt ; enter 0x52eb, 0x42 ; ret 0xb01
0x0000000000007064 : jb 0x7051 ; retf
0x0000000000007ad5 : jb 0x7ad7 ; xchg eax, esp ; ret 0xc9ac
0x000000000008cb97 : jb 0x8cb9e ; ret
0x000000000008d087 : jb 0x8d08e ; ret
0x00000000000a58e7 : jb 0xa58ec ; mov eax, esi ; ret
0x00000000000c21d8 : jb 0xc21db ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c909f : jb 0xc90a2 ; ret
0x00000000000c912f : jb 0xc912f ; ret
0x00000000000d287d : jb 0xd2884 ; ret
0x00000000000d45db : jb 0xd45e3 ; ret
0x00000000000d49eb : jb 0xd49f3 ; ret
0x00000000000d591d : jb 0xd5924 ; ret
0x00000000000d776b : jb 0xd7773 ; ret
0x00000000000d7b9b : jb 0xd7ba3 ; ret
0x00000000000eec68 : jb 0xeec74 ; xor eax, eax ; ret
0x00000000000eec98 : jb 0xeeca4 ; xor eax, eax ; ret
0x0000000000107ab6 : jbe 0x107ad7 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114626 : jbe 0x114624 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001178d6 : jbe 0x1178e4 ; mov eax, dword ptr [rax] ; ret
0x0000000000152efd : jbe 0x152f05 ; add al, al ; adc dh, dh ; call qword ptr [rdx]
0x0000000000152f1d : jbe 0x152f25 ; add al, al ; adc dh, dh ; call qword ptr [rbx]
0x0000000000152f35 : jbe 0x152f3d ; add al, cl ; adc dh, dh ; call qword ptr [rdx]
0x00000000001588a8 : jbe 0x1588e6 ; jmp qword ptr [rdi]
0x0000000000162fa5 : jbe 0x162fae ; add al, bl ; sub ecx, edi ; jmp rdi
0x0000000000162ffd : jbe 0x163006 ; add byte ptr [rax + 0x2a], dh ; stc ; call rdi
0x0000000000171389 : jbe 0x171389 ; jmp qword ptr [rsi]
0x0000000000171419 : jbe 0x171419 ; jmp qword ptr [rbx]
0x0000000000173fb1 : jbe 0x173fba ; retf 3
0x000000000001aa38 : jbe 0x1aa42 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000003480 : jbe 0x3408 ; ret 0x9349
0x0000000000003da8 : jbe 0x3dfc ; push rsp ; cmc ; outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; loop 0x3dfc ; retf -0x40c3
0x00000000000044f0 : jbe 0x44c2 ; pop rdi ; jns 0x4530 ; ret 0x5a81
0x000000000000468c : jbe 0x4633 ; add al, 0xf8 ; ret 0x4c89
0x0000000000004af8 : jbe 0x4b49 ; retf -0x10e2
0x0000000000005180 : jbe 0x51ef ; mov dh, 0xa8 ; push 0x1b ; jge 0x5133 ; ret
0x000000000000517f : jbe 0x51f0 ; mov dh, 0xa8 ; push 0x1b ; jge 0x5134 ; ret
0x000000000008d564 : jbe 0x8d574 ; mov qword ptr [rsi], rsi ; ret
0x000000000008d674 : jbe 0x8d684 ; mov qword ptr [rsi], rsi ; ret
0x00000000000a1194 : jbe 0xa11a4 ; mov qword ptr [rsi], rsi ; ret
0x00000000000a12a4 : jbe 0xa12b4 ; mov qword ptr [rsi], rsi ; ret
0x00000000000a1434 : jbe 0xa1444 ; mov qword ptr [rsi], rsi ; ret
0x00000000000b3ec8 : jbe 0xb3ee0 ; mov eax, 0xffffffff ; ret
0x00000000000b43dd : jbe 0xb4394 ; mov eax, 2 ; pop rbx ; ret
0x00000000000c1d87 : jbe 0xc1d8a ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1ddf : jbe 0xc1de2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1dde : jbe 0xc1de3 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c9176 : jbe 0xc9184 ; mov eax, dword ptr [rax] ; ret
0x00000000000f2a20 : jbe 0xf2a20 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000104b6e : je 0x104b7a ; pop rbx ; ret
0x000000000010547e : je 0x10548a ; pop rbx ; ret
0x00000000001054ce : je 0x1054da ; pop rbx ; ret
0x000000000010551e : je 0x10552a ; pop rbx ; ret
0x000000000010597e : je 0x10598a ; pop rbx ; ret
0x00000000001059ce : je 0x1059da ; pop rbx ; ret
0x0000000000105a1e : je 0x105a2a ; pop rbx ; ret
0x0000000000105ffe : je 0x10600a ; pop rbx ; ret
0x000000000010646b : je 0x10649a ; adc eax, 0x24048948 ; call 0x1026f9
0x000000000010648b : je 0x1064ba ; adc al, 0x48 ; mov dword ptr [rsp], eax ; call 0x1026f9
0x00000000001065de : je 0x1065ea ; pop rbx ; ret
0x000000000010662e : je 0x10663a ; pop rbx ; ret
0x000000000010667e : je 0x10668a ; pop rbx ; ret
0x000000000010685e : je 0x10686a ; pop rbx ; ret
0x00000000001068ae : je 0x1068ba ; pop rbx ; ret
0x00000000001068fe : je 0x10690a ; pop rbx ; ret
0x00000000001130e1 : je 0x1130f6 ; mov rax, rbx ; pop rbx ; ret
0x000000000011392b : je 0x113948 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000113b58 : je 0x113b56 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113d5b : je 0x113d2c ; mov rdi, rbx ; call rax
0x0000000000114866 : je 0x114864 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114865 : je 0x114865 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000115601 : je 0x115616 ; mov rax, rbx ; pop rbx ; ret
0x0000000000115e5b : je 0x115e78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001177fb : je 0x117813 ; mov byte ptr [rdx - 1], sil ; ret
0x000000000011788c : je 0x1178a7 ; mov dword ptr [rdx - 4], esi ; ret
0x000000000011cf70 : je 0x11cf7b ; call 0x89a54
0x0000000000123a79 : je 0x123a79 ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x000000000012405e : je 0x12404c ; jmp rdx
0x0000000000124048 : je 0x124053 ; ret
0x00000000001240ce : je 0x1240bb ; mov rdi, rbx ; pop rbx ; jmp rax
0x0000000000124223 : je 0x124212 ; movzx esi, sil ; jmp rdx
0x0000000000124421 : je 0x124430 ; add qword ptr [rbx + 0x10], 1 ; pop rbx ; ret
0x00000000001247bb : je 0x1247d1 ; sub rax, rdx ; sar rax, 2 ; ret
0x0000000000124856 : je 0x124843 ; mov rdi, rbx ; pop rbx ; jmp rax
0x0000000000124973 : je 0x12495b ; jmp rdx
0x0000000000124b71 : je 0x124b80 ; add qword ptr [rbx + 0x10], 4 ; pop rbx ; ret
0x0000000000124fc4 : je 0x124fe0 ; test rdx, rdx ; jne 0x124fd8 ; ret
0x0000000000124fe4 : je 0x125000 ; test rdx, rdx ; jne 0x124ff8 ; ret
0x0000000000125004 : je 0x125028 ; test rsi, rsi ; jne 0x125018 ; ret
0x0000000000125037 : je 0x125050 ; test rdx, rdx ; jne 0x125048 ; ret
0x0000000000125057 : je 0x125070 ; test rdx, rdx ; jne 0x125068 ; ret
0x0000000000125077 : je 0x125090 ; test rdx, rdx ; jne 0x125088 ; ret
0x0000000000125097 : je 0x1250b0 ; test rdx, rdx ; jne 0x1250a8 ; ret
0x0000000000125657 : je 0x125666 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x0000000000127150 : je 0x127143 ; ret
0x0000000000127228 : je 0x1271f4 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001272cb : je 0x127297 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012748a : je 0x12744e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012abce : je 0x12abda ; pop rbx ; ret
0x000000000012b28e : je 0x12b29a ; pop rbx ; ret
0x000000000012b2de : je 0x12b2ea ; pop rbx ; ret
0x000000000012b32e : je 0x12b33a ; pop rbx ; ret
0x000000000012b7ae : je 0x12b7ba ; pop rbx ; ret
0x000000000012b7fe : je 0x12b80a ; pop rbx ; ret
0x000000000012b84e : je 0x12b85a ; pop rbx ; ret
0x000000000012bcd6 : je 0x12bd05 ; adc eax, 0x24048948 ; call 0x128739
0x000000000012be5e : je 0x12be6a ; pop rbx ; ret
0x000000000012c46e : je 0x12c47a ; pop rbx ; ret
0x000000000012c4be : je 0x12c4ca ; pop rbx ; ret
0x000000000012c50e : je 0x12c51a ; pop rbx ; ret
0x000000000012c68e : je 0x12c69a ; pop rbx ; ret
0x000000000012c6de : je 0x12c6ea ; pop rbx ; ret
0x000000000012c72e : je 0x12c73a ; pop rbx ; ret
0x000000000012ce51 : je 0x12ce13 ; jmp 0x12ce23
0x000000000013709d : je 0x1370c9 ; sub byte ptr [rax + 0xf], cl ; ret 0xd231
0x0000000000137fbd : je 0x137fe9 ; sub byte ptr [rax + 0xf], cl ; ret 0xd231
0x0000000000138ad4 : je 0x138af0 ; test rdx, rdx ; jne 0x138ae8 ; ret
0x0000000000138af4 : je 0x138b10 ; test rdx, rdx ; jne 0x138b08 ; ret
0x0000000000138b16 : je 0x138b38 ; test rsi, rsi ; jne 0x138b28 ; ret
0x0000000000138b4b : je 0x138b68 ; test rdx, rdx ; jne 0x138b60 ; ret
0x0000000000138b7b : je 0x138b98 ; test rdx, rdx ; jne 0x138b90 ; ret
0x0000000000138bab : je 0x138bc8 ; test rdx, rdx ; jne 0x138bc0 ; ret
0x0000000000138bdb : je 0x138bf8 ; test rdx, rdx ; jne 0x138bf0 ; ret
0x0000000000139207 : je 0x139216 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000013ae5f : je 0x13ae53 ; ret
0x000000000013af39 : je 0x13af04 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013afe0 : je 0x13afa7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b19b : je 0x13b15e ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000142538 : je 0x142513 ; stc ; ljmp ptr [rbx - 0x5400063d] ; ret
0x0000000000143309 : je 0x143309 ; call qword ptr [rax]
0x0000000000143305 : je 0x143309 ; dec esi ; je 0x14330d ; call qword ptr [rax]
0x000000000014411c : je 0x14410f ; add byte ptr [rax], al ; hlt ; test esi, esp ; jmp rsp
0x00000000001445f8 : je 0x1445aa ; hlt ; call rsp
0x0000000000144a08 : je 0x1449f6 ; hlt ; call rsp
0x0000000000144b30 : je 0x144ab8 ; cmc ; call rsp
0x0000000000144bc0 : je 0x144b5c ; cmc ; call rsp
0x00000000001450d0 : je 0x1450f7 ; idiv bh ; insb byte ptr [rdi], dx ; ret 0
0x0000000000145ff1 : je 0x145fec ; jmp rsp
0x0000000000146c30 : je 0x146be3 ; clc ; jmp rsp
0x0000000000147145 : je 0x14714e ; add byte ptr [rcx + rax - 7], al ; jmp rsp
0x00000000001475d0 : je 0x1475fe ; stc ; jmp rsp
0x0000000000147c38 : je 0x147bd7 ; stc ; jmp rsp
0x0000000000148914 : je 0x148919 ; add dword ptr [rax], eax ; adc al, 0x49 ; sti ; jmp rsp
0x0000000000148938 : je 0x148988 ; sti ; call rsp
0x0000000000149888 : je 0x14981e ; cld ; call rsp
0x0000000000149984 : je 0x1499dd ; add al, byte ptr [rax] ; xor al, 0xee ; cld ; jmp rsp
0x0000000000149db8 : je 0x149df8 ; std ; jmp rsp
0x000000000014c3c4 : je 0x14c3d8 ; add byte ptr [rax], al ; call 0x1314b7f0
0x000000000014c9c4 : je 0x14c9de ; add byte ptr [rax], al ; test al, 0x23 ; hlt ; call qword ptr [rdi]
0x000000000014d1c4 : je 0x14d1e6 ; add byte ptr [rax], al ; js 0x14d203 ; hlt ; call qword ptr [rdx]
0x000000000014d3c4 : je 0x14d3e8 ; add byte ptr [rax], al ; clc ; xor dh, ah ; call qword ptr [rbx]
0x000000000014fdc4 : je 0x14fe12 ; add byte ptr [rax], al ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x000000000015fcc4 : je 0x15fd11 ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 8], cl ; jmp qword ptr [rdx]
0x000000000015fec4 : je 0x15ff13 ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x0000000000160609 : je 0x160605 ; call qword ptr [rdx]
0x0000000000160608 : je 0x160606 ; call qword ptr [rdx]
0x0000000000162e25 : je 0x162e2e ; add byte ptr [rax + 0x26], ch ; stc ; call rdi
0x0000000000163fc4 : je 0x163f54 ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 7], dl ; jmp qword ptr [rax]
0x00000000001698c4 : je 0x1698ad ; add dword ptr [rax], eax ; call 0x28169381
0x000000000016d7c4 : je 0x16d7ec ; add al, byte ptr [rax] ; pop rax ; mov ebx, edi ; call qword ptr [rcx]
0x0000000000004941 : je 0x492e ; ret
0x0000000000004edc : je 0x4f34 ; sbb al, byte ptr [rax + 0x59c99768] ; clc ; retf 0x1b41
0x0000000000005929 : je 0x594b ; sub ecx, dword ptr [rdi] ; adc bh, byte ptr [rsi] ; or ah, al ; retf 0x297c
0x0000000000005914 : je 0x598f ; ret
0x00000000000060e8 : je 0x60f0 ; xlatb ; xchg eax, r13d ; ret 0x9d2e
0x00000000000060e7 : je 0x60f1 ; xlatb ; xchg eax, r13d ; ret 0x9d2e
0x000000000008c991 : je 0x8c9a3 ; pop rbp ; jmp rax
0x000000000008c9e2 : je 0x8c9f3 ; pop rbp ; jmp rax
0x000000000008caf4 : je 0x8cb10 ; test rdx, rdx ; jne 0x8cb08 ; ret
0x000000000008cb14 : je 0x8cb30 ; test rdx, rdx ; jne 0x8cb28 ; ret
0x000000000008cb34 : je 0x8cb58 ; test rsi, rsi ; jne 0x8cb48 ; ret
0x000000000008cfe4 : je 0x8d000 ; test rdx, rdx ; jne 0x8cff8 ; ret
0x000000000008d004 : je 0x8d020 ; test rdx, rdx ; jne 0x8d018 ; ret
0x000000000008d026 : je 0x8d048 ; test rsi, rsi ; jne 0x8d038 ; ret
0x000000000008ec84 : je 0x8ecd7 ; mov dword ptr [rdi + 0x28], edx ; add rsp, 8 ; ret
0x000000000008f162 : je 0x8f170 ; cmp al, 0x10 ; jne 0x8f180 ; xor eax, eax ; ret
0x000000000008f3c0 : je 0x8f3ee ; sub byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000008f993 : je 0x8f9b3 ; call 0x8bc24
0x000000000008fa31 : je 0x8fa3d ; mov rdi, rbx ; call rax
0x000000000008fa86 : je 0x8fa95 ; lock add dword ptr [rax - 0x80], 1 ; ret
0x000000000008facd : je 0x8fad6 ; call rax
0x000000000008fd7e : je 0x8fd8b ; pop rbx ; ret
0x000000000008fe98 : je 0x8fea4 ; mov rdi, rbx ; call rax
0x000000000009049b : je 0x904a3 ; pop rbx ; ret
0x00000000000904a8 : je 0x904b0 ; call rax
0x0000000000090518 : je 0x90507 ; call rax
0x000000000009059b : je 0x905b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000905b0 : je 0x905b8 ; call rax
0x0000000000091063 : je 0x91077 ; mov rdi, rbx ; sub rdi, rbp ; call r15
0x00000000000921b3 : je 0x921c3 ; test rcx, rcx ; jne 0x9217e ; xor eax, eax ; ret
0x00000000000921d5 : je 0x921e5 ; mov rax, rsi ; ret
0x00000000000921d4 : je 0x921e6 ; mov rax, rsi ; ret
0x0000000000092809 : je 0x928cc ; ret
0x0000000000092808 : je 0x928cd ; ret
0x0000000000092907 : je 0x92917 ; mov eax, 1 ; ret
0x0000000000092bc3 : je 0x92bd4 ; xor eax, eax ; ret
0x0000000000092bbe : je 0x92c01 ; cmp esi, 0x76 ; je 0x92bd9 ; xor eax, eax ; ret
0x0000000000095fc5 : je 0x95ff8 ; xor eax, eax ; pop rbx ; ret
0x0000000000095fc4 : je 0x95ff9 ; xor eax, eax ; pop rbx ; ret
0x000000000009b46a : je 0x9b474 ; xor eax, eax ; ret
0x000000000009b469 : je 0x9b475 ; xor eax, eax ; ret
0x000000000009c439 : je 0x9c451 ; lea rax, qword ptr [rip + 0x2e8a1e] ; ret
0x000000000009c739 : je 0x9c751 ; lea rax, qword ptr [rip + 0x2e879e] ; ret
0x000000000009c799 : je 0x9c7b1 ; lea rax, qword ptr [rip + 0x2e86fe] ; ret
0x000000000009e9b8 : je 0x9e9e6 ; xor byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x8ac58
0x00000000000a0d2d : je 0xa0d47 ; ret
0x00000000000a1b18 : je 0xa1b43 ; pop rbx ; ret
0x00000000000a1d6a : je 0xa1d7f ; pop rbx ; ret
0x00000000000a26b9 : je 0xa26d1 ; lea rax, qword ptr [rip + 0x2e4fde] ; ret
0x00000000000a384c : je 0xa3876 ; add rsp, 8 ; ret
0x00000000000a3863 : je 0xa3883 ; ret
0x00000000000a5928 : je 0xa5935 ; movzx eax, byte ptr [rax] ; ret
0x00000000000a5b99 : je 0xa5ba8 ; mov eax, edx ; sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a5bba : je 0xa5bc2 ; jmp rax
0x00000000000a5d9f : je 0xa5db2 ; jmp rax
0x00000000000a78ab : je 0xa78a3 ; ret
0x00000000000a8023 : je 0xa8088 ; mov dword ptr [rcx], 1 ; ret
0x00000000000af635 : je 0xaf648 ; mov rdi, qword ptr [rsp] ; call 0x8c108
0x00000000000af648 : je 0xaf659 ; mov rdi, rax ; call 0x8c107
0x00000000000af655 : je 0xaf666 ; mov rdi, r15 ; call 0x8c107
0x00000000000af6c9 : je 0xaf6d8 ; call 0x8c104
0x00000000000af6e2 : je 0xaf6f1 ; call 0x8c104
0x00000000000afeaf : je 0xafec4 ; mov rdi, qword ptr [rsp + 8] ; call 0x8c109
0x00000000000afebe : je 0xafecf ; mov rdi, r14 ; call 0x8c107
0x00000000000afecf : je 0xafee0 ; mov rdi, rax ; call 0x8c107
0x00000000000b229f : je 0xb22b9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b2381 : je 0xb2372 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000000b23d4 : je 0xb23dc ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b28e4 : je 0xb28eb ; pop rbx ; ret
0x00000000000b2969 : je 0xb2986 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b2c69 : je 0xb2c81 ; lea rax, qword ptr [rip + 0x2d4a6e] ; ret
0x00000000000b455a : je 0xb4571 ; cmp rdx, 1 ; ja 0xb4591 ; ret
0x00000000000b470e : je 0xb46db ; or dword ptr [r8], 1 ; ret
0x00000000000b46f1 : je 0xb4706 ; and dword ptr [r8], 0xfffffffe ; ret
0x00000000000b4e0c : je 0xb4e1d ; xor eax, eax ; ret
0x00000000000b8763 : je 0xb8772 ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rdx], rsi ; ret
0x00000000000b8867 : je 0xb8873 ; ret
0x00000000000b8862 : je 0xb8880 ; cmp qword ptr [rdi], rsi ; je 0xb8878 ; ret
0x00000000000b8fb3 : je 0xb8fc2 ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rdx], rsi ; ret
0x00000000000b90b8 : je 0xb90c3 ; ret
0x00000000000b90b2 : je 0xb90d1 ; cmp qword ptr [rdi + 0x18], rsi ; je 0xb90c9 ; ret
0x00000000000b9264 : je 0xb928f ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000ba219 : je 0xba231 ; lea rax, qword ptr [rip + 0x2ca90e] ; ret
0x00000000000ba34f : je 0xba376 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb3bb : je 0xbb3f4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbdb6 : je 0xbbdc3 ; ret
0x00000000000bbf9d : je 0xbbfab ; pop rbx ; ret
0x00000000000be226 : je 0xbe232 ; mov rdi, rbx ; call rdx
0x00000000000be327 : je 0xbe333 ; mov rdi, rbx ; call rdx
0x00000000000be39e : je 0xbe3aa ; mov rdi, r14 ; call rax
0x00000000000be3d6 : je 0xbe3e2 ; mov rdi, r14 ; call rdx
0x00000000000be44e : je 0xbe45a ; mov rdi, r14 ; call rax
0x00000000000be486 : je 0xbe492 ; mov rdi, r14 ; call rdx
0x00000000000be505 : je 0xbe511 ; mov rdi, r14 ; call rax
0x00000000000be53d : je 0xbe549 ; mov rdi, r14 ; call rdx
0x00000000000be5c5 : je 0xbe5d1 ; mov rdi, r14 ; call rax
0x00000000000be5fd : je 0xbe609 ; mov rdi, r14 ; call rdx
0x00000000000bf5f1 : je 0xbf5fd ; mov rdi, r12 ; call rax
0x00000000000bf6df : je 0xbf6be ; mov rsi, r15 ; call 0x8c1d5
0x00000000000bf6be : je 0xbf6ca ; mov rdi, r12 ; call rax
0x00000000000bf781 : je 0xbf78d ; mov rdi, r12 ; call rax
0x00000000000bf84e : je 0xbf85a ; mov rdi, r12 ; call rax
0x00000000000bf897 : je 0xbf8b1 ; ret
0x00000000000bfdfa : je 0xbfe25 ; psubsb mm1, mm4 ; ret
0x00000000000bfe1b : je 0xbfe46 ; psubsb mm2, mm3 ; ret
0x00000000000bfe81 : je 0xbfe8d ; mov rdi, rbx ; call rax
0x00000000000bff1b : je 0xbff30 ; lea rsi, qword ptr [rsp + 0xf] ; call 0x8c1ff
0x00000000000bff1f : je 0xbff4a ; psubsb mm1, mm7 ; ret 0xfffc
0x00000000000bff61 : je 0xbff6d ; mov rdi, rbx ; call rax
0x00000000000c1080 : je 0xc108c ; mov rdi, rbx ; call rax
0x00000000000c1220 : je 0xc122c ; mov rdi, rbx ; call rax
0x00000000000c160f : je 0xc161b ; mov rdi, r13 ; call rax
0x00000000000c179f : je 0xc17ab ; mov rdi, r13 ; call rax
0x00000000000c1f78 : je 0xc1f7b ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c2849 : je 0xc2861 ; lea rax, qword ptr [rip + 0x2c22fe] ; ret
0x00000000000c364e : je 0xc365a ; mov rdi, r12 ; call rax
0x00000000000c375c : je 0xc3768 ; mov rdi, r12 ; call rdx
0x00000000000c394e : je 0xc395a ; mov rdi, r12 ; call rax
0x00000000000c3a5c : je 0xc3a68 ; mov rdi, r12 ; call rdx
0x00000000000c3b54 : je 0xc3b60 ; mov rdi, rbx ; call rdx
0x00000000000c3bd4 : je 0xc3be0 ; mov rdi, r14 ; call rax
0x00000000000c3c0c : je 0xc3c18 ; mov rdi, r14 ; call rdx
0x00000000000c3c8b : je 0xc3c97 ; mov rdi, r14 ; call rax
0x00000000000c3cc3 : je 0xc3ccf ; mov rdi, r14 ; call rdx
0x00000000000c3dc2 : je 0xc3dce ; mov rdi, rbx ; call rdx
0x00000000000c3e4d : je 0xc3e59 ; mov rdi, r14 ; call rax
0x00000000000c3e85 : je 0xc3e91 ; mov rdi, r14 ; call rdx
0x00000000000c3f14 : je 0xc3f20 ; mov rdi, r14 ; call rax
0x00000000000c3f4c : je 0xc3f58 ; mov rdi, r14 ; call rdx
0x00000000000c515f : je 0xc516b ; mov rdi, rbx ; call rax
0x00000000000c521a : je 0xc5226 ; mov rdi, rbx ; call rax
0x00000000000c5d8a : je 0xc5d96 ; mov rdi, rbp ; call rax
0x00000000000c5ec9 : je 0xc5edd ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x00000000000c622f : je 0xc623b ; mov rdi, r14 ; call rax
0x00000000000c637f : je 0xc638b ; mov rdi, r14 ; call rax
0x00000000000c76e1 : je 0xc77e8 ; xor eax, eax ; ret
0x00000000000c909b : je 0xc90b3 ; mov byte ptr [rdx - 1], sil ; ret
0x00000000000c912c : je 0xc9147 ; mov dword ptr [rdx - 4], esi ; ret
0x00000000000d28c7 : je 0xd28e0 ; test rdx, rdx ; jne 0xd28d8 ; ret
0x00000000000d28e7 : je 0xd2900 ; test rdx, rdx ; jne 0xd28f8 ; ret
0x00000000000d2907 : je 0xd2920 ; test rdx, rdx ; jne 0xd2918 ; ret
0x00000000000d2927 : je 0xd2940 ; test rdx, rdx ; jne 0xd2938 ; ret
0x00000000000d31f0 : je 0xd31e3 ; ret
0x00000000000d32cd : je 0xd329a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d3380 : je 0xd334d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d3537 : je 0xd3501 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d570b : je 0xd5744 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d596b : je 0xd5988 ; test rdx, rdx ; jne 0xd5980 ; ret
0x00000000000d599b : je 0xd59b8 ; test rdx, rdx ; jne 0xd59b0 ; ret
0x00000000000d59cb : je 0xd59e8 ; test rdx, rdx ; jne 0xd59e0 ; ret
0x00000000000d59fb : je 0xd5a18 ; test rdx, rdx ; jne 0xd5a10 ; ret
0x00000000000d630f : je 0xd6303 ; ret
0x00000000000d63ee : je 0xd63ba ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d64a2 : je 0xd646d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d6668 : je 0xd6631 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000da9d3 : je 0xda9fe ; sub byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000db273 : je 0xdb29e ; sub byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000de07e : je 0xde08a ; pop rbx ; ret
0x00000000000de0ce : je 0xde0da ; pop rbx ; ret
0x00000000000de11e : je 0xde12a ; pop rbx ; ret
0x00000000000de16e : je 0xde17a ; pop rbx ; ret
0x00000000000de1be : je 0xde1ca ; pop rbx ; ret
0x00000000000de20e : je 0xde21a ; pop rbx ; ret
0x00000000000de25e : je 0xde26a ; pop rbx ; ret
0x00000000000de2ae : je 0xde2ba ; pop rbx ; ret
0x00000000000de5ce : je 0xde5db ; ret
0x00000000000e56c8 : je 0xe56d3 ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000e5a42 : je 0xe5a6d ; cmp byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000e62f2 : je 0xe631d ; cmp byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000e8cae : je 0xe8cba ; pop rbx ; ret
0x00000000000e8cfe : je 0xe8d0a ; pop rbx ; ret
0x00000000000e8d4e : je 0xe8d5a ; pop rbx ; ret
0x00000000000e8d9e : je 0xe8daa ; pop rbx ; ret
0x00000000000e8dee : je 0xe8dfa ; pop rbx ; ret
0x00000000000e8e3e : je 0xe8e4a ; pop rbx ; ret
0x00000000000e8e8e : je 0xe8e9a ; pop rbx ; ret
0x00000000000e8ede : je 0xe8eea ; pop rbx ; ret
0x00000000000e9213 : je 0xe9223 ; ret
0x00000000000e9233 : je 0xe9246 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000ee1d9 : je 0xee1ee ; mov edi, eax ; jmp 0x8ac96
0x00000000000f0a31 : je 0xf0a3b ; ret
0x00000000000f2861 : je 0xf286b ; ret
0x00000000000f5db0 : je 0xf5dbb ; pop rbx ; ret
0x00000000000f5de0 : je 0xf5deb ; pop rbx ; ret
0x00000000000f5e10 : je 0xf5e1b ; pop rbx ; ret
0x00000000000f8680 : je 0xf868b ; pop rbx ; ret
0x00000000000f86b0 : je 0xf86bb ; pop rbx ; ret
0x00000000000f86e0 : je 0xf86eb ; pop rbx ; ret
0x00000000000f8d78 : je 0xf8da6 ; stc ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x00000000000f9347 : je 0xf9361 ; movzx eax, byte ptr [rdi + 0xe0] ; ret
0x00000000000f946e : je 0xf947e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9da7 : je 0xf9db8 ; mov eax, dword ptr [rdi + 0xe0] ; ret
0x00000000000ff141 : je 0xff15c ; call 0x8bc24
0x0000000000113cd5 : jg 0x113cd3 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113cd4 : jg 0x113cd4 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113cdf : jg 0x113cdd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113cde : jg 0x113cde ; dec dword ptr [rax - 0x77] ; ret
0x0000000000147bb9 : jg 0x147bb6 ; call rsp
0x0000000000147bb8 : jg 0x147bb7 ; call rsp
0x000000000015831c : jg 0x158325 ; add byte ptr [rax], al ; add al, 0xa7 ; retf 1
0x0000000000005251 : jg 0x51e6 ; push rdx ; in eax, -0x37 ; retf
0x0000000000005a62 : jg 0x5a97 ; retf -0x23b2
0x000000000008d53f : jg 0x8d54e ; mov qword ptr [rdi], rdi ; ret
0x000000000008d64f : jg 0x8d65e ; mov qword ptr [rdi], rdi ; ret
0x00000000000a116f : jg 0xa117e ; mov qword ptr [rdi], rdi ; ret
0x00000000000a127f : jg 0xa128e ; mov qword ptr [rdi], rdi ; ret
0x00000000000a140f : jg 0xa141e ; mov qword ptr [rdi], rdi ; ret
0x00000000000bf686 : jg 0xbf66b ; mov rsi, r15 ; call 0x8b967
0x00000000000c2338 : jg 0xc236c ; add byte ptr [rax - 0x77], cl ; add ebp, ecx ; ret 0xfff7
0x00000000000c3426 : jg 0xc3446 ; push 0 ; call 0xbfe46
0x00000000000cb54d : jg 0xcb59e ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ceec6 : jg 0xcee62 ; lea rsi, qword ptr [rbp - 0x21] ; call 0x8b968
0x00000000000cf1bd : jg 0xcf20e ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d3b35 : jg 0xd3b51 ; mov dword ptr [rax - 8], 0xffffffff ; ret
0x00000000000d4995 : jg 0xd4951 ; jmp 0xd495f
0x00000000000d6c75 : jg 0xd6c91 ; mov dword ptr [rax - 8], 0xffffffff ; ret
0x000000000010fad2 : jge 0x10faeb ; mov rdx, rbx ; call 0x8bdd7
0x0000000000133fac : jge 0x133fa8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000171ae1 : jge 0x171ae1 ; call qword ptr [rcx]
0x0000000000171b29 : jge 0x171b29 ; call qword ptr [rcx]
0x0000000000171bb9 : jge 0x171bb9 ; call qword ptr [rbx]
0x0000000000177de5 : jge 0x177def ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; retf
0x0000000000177ec9 : jge 0x177ed3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x0000000000177f0f : jge 0x177f17 ; add byte ptr [rax], al ; add ah, dl ; retf 0x20
0x0000000000025cd8 : jge 0x25d09 ; add byte ptr [rax], al ; and dword ptr [rax], eax ; lldt word ptr [rdx] ; ret
0x0000000000004180 : jge 0x4167 ; mov al, 0xdd ; retf -0x7e6e
0x0000000000004433 : jge 0x44b5 ; in eax, 3 ; or dword ptr [rdx], esp ; ret 0x5a81
0x0000000000005186 : jge 0x512d ; ret
0x0000000000007208 : jge 0x71a9 ; ret
0x00000000000077b8 : jge 0x77ee ; ret
0x00000000000a3c7a : jge 0xa3cfb ; or byte ptr [rax + 0x38], al ; xor cl, byte ptr [rdi] ; sahf ; ret 0xd021
0x00000000000ae4ea : jge 0xae478 ; call 0x8aff4
0x00000000000d922f : jge 0xd9246 ; sti ; dec dword ptr [rax + 1] ; ret
0x00000000001057aa : jl 0x1057d9 ; xor byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r15 ; call rax
0x000000000010ccb0 : jl 0x10ccdb ; pop rax ; call 0x89745
0x000000000010dae2 : jl 0x10db0d ; sbb byte ptr [rax - 0x77], cl ; ret 0xf631
0x000000000010e582 : jl 0x10e5ad ; sbb byte ptr [rax - 0x77], cl ; ret 0xf631
0x000000000010f30c : jl 0x10f339 ; pop rax ; push qword ptr [rsi + rbx*2 + 0x38] ; ret
0x000000000010fccc : jl 0x10fcf9 ; pop rax ; push qword ptr [rsi + rbx*2 + 0x38] ; ret
0x0000000000110706 : jl 0x110733 ; push qword ptr [rsp + 0x38] ; ret
0x00000000001110ad : jl 0x1110da ; push qword ptr [rbp + rbx*2 + 0x38] ; ret
0x000000000011ac05 : jl 0x11ac30 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000011b045 : jl 0x11b06f ; xor al, ch ; ret
0x000000000011c0e5 : jl 0x11c110 ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000011d8c5 : jl 0x11d8f0 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000001202b8 : jl 0x1202e3 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000121868 : jl 0x121893 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000123138 : jl 0x123163 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000134e2a : jl 0x134e57 ; pop rax ; push qword ptr [rax + 0x38] ; ret
0x00000000001357fe : jl 0x13582b ; pop rax ; push qword ptr [rsp + rbx*2 + 0x38] ; ret
0x00000000001361d7 : jl 0x136204 ; pop rax ; push qword ptr [rbx + 0x38] ; ret
0x0000000000136bba : jl 0x136be7 ; pop rax ; push qword ptr [rax + 0x38] ; ret
0x0000000000137125 : jl 0x137153 ; sbb byte ptr [rbx - 0x6bf00008], al ; ret
0x0000000000137644 : jl 0x137671 ; push 0x385e74ff ; ret
0x0000000000138045 : jl 0x138073 ; sbb byte ptr [rbx - 0x6bf00008], al ; ret
0x0000000000138564 : jl 0x138591 ; push 0x385e74ff ; ret
0x000000000013c9c1 : jl 0x13c9be ; lcall ptr [rax + 0x7b] ; cmc ; jmp qword ptr [rax]
0x0000000000143339 : jl 0x143339 ; jmp rax
0x00000000001442ad : jl 0x1442b5 ; add byte ptr [rdi + rdx*4], dh ; hlt ; call rsp
0x0000000000147d74 : jl 0x147d30 ; add dword ptr [rax], eax ; adc al, 0xe1 ; stc ; call rsp
0x0000000000148894 : jl 0x148895 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp al, 0xfb ; jmp rsp
0x00000000001488d4 : jl 0x1488d8 ; add dword ptr [rax], eax ; mov ah, 0x45 ; sti ; call rsp
0x000000000014f4cc : jl 0x14f511 ; add byte ptr [rax], al ; and byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x00000000001550cc : jl 0x15506d ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rdx]
0x00000000001557cc : jl 0x155774 ; add byte ptr [rax], al ; and byte ptr [rsi - 0xa], ah ; call qword ptr [rdx]
0x00000000001606a1 : jl 0x16069d ; call qword ptr [rcx]
0x000000000016630c : jl 0x1662be ; add dword ptr [rax], eax ; mov al, 0xb5 ; stc ; jmp qword ptr [rdi]
0x00000000001671cc : jl 0x16718e ; add dword ptr [rax], eax ; add al, cl ; stc ; jmp qword ptr [rdx]
0x000000000016ad0c : jl 0x16ad08 ; add dword ptr [rax], eax ; xor al, dh ; cli ; call qword ptr [rcx]
0x000000000016c9f1 : jl 0x16c9f0 ; call qword ptr [rdx]
0x00000000001716cc : jl 0x171733 ; add al, byte ptr [rax] ; push rax ; jp 0x1716d6 ; call qword ptr [rdx]
0x0000000000171a89 : jl 0x171a89 ; call qword ptr [rdx]
0x0000000000171a88 : jl 0x171a8a ; call qword ptr [rdx]
0x00000000000263c0 : jl 0x263ca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x00000000000035f6 : jl 0x3580 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x6f97006c
0x00000000000035f5 : jl 0x3581 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x6f97006d
0x00000000000035f4 : jl 0x3582 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x6f97006e
0x0000000000003ea1 : jl 0x3e91 ; sar dh, 0x5a ; ret 0x7373
0x0000000000004b54 : jl 0x4b19 ; retf
0x0000000000004ca5 : jl 0x4c7b ; retf
0x0000000000005d34 : jl 0x5d4a ; out dx, eax ; xchg eax, edi ; sbb ecx, esi ; retf 0x1e75
0x0000000000007188 : jl 0x7201 ; retf
0x0000000000008322 : jl 0x82b3 ; ret 0x48e6
0x00000000000981e7 : jl 0x98200 ; jmp qword ptr [rax]
0x00000000000a3a3f : jl 0xa3a6a ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000a3b0c : jl 0xa3b37 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000afeb3 : jl 0xafede ; or al, ch ; ret 0xfffd
0x00000000000b20c3 : jl 0xb2092 ; or byte ptr [rax], al ; ret
0x00000000000b2b35 : jl 0xb2b39 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ba0ea : jl 0xba115 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba1b5 : jl 0xba1e0 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba1d6 : jl 0xba201 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000bc80d : jl 0xbc838 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000c2a57 : jl 0xc2a82 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2b8b : jl 0xc2bb6 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2da5 : jl 0xc2dd0 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000c2ed1 : jl 0xc2efc ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5c19 : jl 0xc5c44 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5c52 : jl 0xc5c7d ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5cb9 : jl 0xc5ce4 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5cf2 : jl 0xc5d1d ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5dce : jl 0xc5df9 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5e1b : jl 0xc5e46 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c7c1d : jl 0xc7c47 ; or al, ch ; retf
0x00000000000d5e11 : jl 0xd5d9d ; add byte ptr [rax - 0x77], cl ; retf -0x6b18
0x00000000000d92e3 : jl 0xd930e ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000da95b : jl 0xda986 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x394c
0x00000000000db1fb : jl 0xdb226 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x394c
0x00000000000decbd : jl 0xdece8 ; xor al, ch ; wait ; retf -6
0x00000000000df68d : jl 0xdf6b7 ; xor al, ch ; retf
0x00000000000e0b3d : jl 0xe0b66 ; push rax ; call rax
0x00000000000e1bf6 : jl 0xe1c21 ; adc byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000e3036 : jl 0xe3061 ; adc byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000eb378 : jl 0xeb3a1 ; call rax
0x00000000000ec55e : jl 0xec589 ; and byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000ed96e : jl 0xed999 ; and byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000102706 : jle 0x102720 ; ret
0x00000000001066eb : jle 0x10672a ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001276be : jle 0x1276fe ; idiv bh ; add rsp, 0x18 ; ret
0x0000000000128746 : jle 0x128760 ; ret
0x0000000000128916 : jle 0x128930 ; ret
0x000000000013cb51 : jle 0x13cb4a ; jmp rdx
0x000000000014733d : jle 0x147346 ; add byte ptr [rax + rbx - 7], al ; jmp rsp
0x000000000016bd1c : jle 0x16bd25 ; add byte ptr [rax], al ; add al, 0xc7 ; retf 0
0x000000000001cc88 : jle 0x1cc95 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000468a : jle 0x4691 ; jbe 0x4635 ; add al, 0xf8 ; ret 0x4c89
0x0000000000004c4c : jle 0x4cc6 ; cwde ; ret 0x4cc6
0x0000000000005c80 : jle 0x5cf5 ; sbb dword ptr [rdi], ebx ; ret
0x0000000000006c05 : jle 0x6bb4 ; ret 0x66a
0x0000000000006c04 : jle 0x6bb5 ; ret 0x66a
0x0000000000006c03 : jle 0x6bb6 ; ret 0x66a
0x0000000000007375 : jle 0x73f7 ; jmp rdi
0x0000000000007698 : jle 0x768d ; wait ; call rdi
0x000000000008d5d4 : jle 0x8d5e0 ; ret
0x000000000008d6e4 : jle 0x8d6f0 ; ret
0x000000000008d764 : jle 0x8d770 ; ret
0x00000000000a1204 : jle 0xa1210 ; ret
0x00000000000a1314 : jle 0xa1320 ; ret
0x00000000000a1394 : jle 0xa13a0 ; ret
0x00000000000a14a4 : jle 0xa14b0 ; ret
0x00000000000a1524 : jle 0xa1530 ; ret
0x00000000000bbdb4 : jle 0xbbdc3 ; je 0xbbdc5 ; ret
0x00000000000d3746 : jle 0xd3760 ; ret
0x00000000000d6886 : jle 0xd68a0 ; ret
0x000000000010010b : jmp 0x1000d1
0x0000000000100235 : jmp 0x100203
0x000000000010049d : jmp 0x100463
0x0000000000105f5a : jmp 0x105f28
0x000000000010653a : jmp 0x106508
0x000000000010d486 : jmp 0x10d454
0x000000000010df26 : jmp 0x10def4
0x000000000012ce53 : jmp 0x12ce21
0x0000000000132bd1 : jmp 0x132b9f
0x00000000001336e1 : jmp 0x1336af
0x0000000000138f9d : jmp 0x138f6b
0x000000000012ce39 : jmp 0x89082
0x000000000008d80b : jmp 0x89a52
0x000000000008df90 : jmp 0x8a292
0x00000000000fe0c0 : jmp 0x8a3a2
0x000000000011e5f4 : jmp 0x8a812
0x00000000000fe9b1 : jmp 0x8ac82
0x00000000000ee1dd : jmp 0x8ac92
0x000000000012e4e0 : jmp 0x8af62
0x000000000010f5c0 : jmp 0x8b872
0x000000000008e756 : jmp 0x8e724
0x0000000000099e1f : jmp 0x9610d
0x0000000000099f21 : jmp 0x961d2
0x0000000000099f2f : jmp 0x96222
0x00000000000962c6 : jmp 0x96294
0x00000000000964be : jmp 0x9648c
0x0000000000099aff : jmp 0x965a1
0x000000000009682e : jmp 0x967fc
0x00000000000968a6 : jmp 0x96874
0x000000000009691e : jmp 0x968ec
0x0000000000096ba6 : jmp 0x96b74
0x0000000000096c1e : jmp 0x96bec
0x0000000000096c96 : jmp 0x96c64
0x0000000000096d0e : jmp 0x96cdc
0x0000000000096d86 : jmp 0x96d54
0x0000000000096dfe : jmp 0x96dcc
0x0000000000096e76 : jmp 0x96e44
0x0000000000096eee : jmp 0x96ebc
0x0000000000096f6e : jmp 0x96f3c
0x0000000000096fe6 : jmp 0x96fb4
0x000000000009705e : jmp 0x9702c
0x00000000000970d6 : jmp 0x970a4
0x000000000009714e : jmp 0x9711c
0x00000000000971c6 : jmp 0x97194
0x000000000009723e : jmp 0x9720c
0x0000000000097336 : jmp 0x97304
0x000000000009754e : jmp 0x9751c
0x00000000000975c6 : jmp 0x97594
0x000000000009773e : jmp 0x9770c
0x00000000000979a6 : jmp 0x97974
0x0000000000097a1e : jmp 0x979ec
0x0000000000097a96 : jmp 0x97a64
0x0000000000097b0e : jmp 0x97adc
0x0000000000097b86 : jmp 0x97b54
0x0000000000097bfe : jmp 0x97bcc
0x0000000000097c76 : jmp 0x97c44
0x0000000000097d6e : jmp 0x97d3c
0x0000000000097de6 : jmp 0x97db4
0x0000000000097f1e : jmp 0x97eec
0x00000000000980b6 : jmp 0x98084
0x000000000009826e : jmp 0x9823c
0x0000000000098bee : jmp 0x98bbc
0x0000000000098c5e : jmp 0x98c2c
0x0000000000098cde : jmp 0x98cac
0x0000000000098e2e : jmp 0x98dfc
0x0000000000098ea2 : jmp 0x98e70
0x0000000000099170 : jmp 0x9913e
0x000000000009a08e : jmp 0x9a05c
0x000000000009a126 : jmp 0x9a0f4
0x000000000009a1a6 : jmp 0x9a174
0x000000000009a226 : jmp 0x9a1f4
0x000000000009a4fe : jmp 0x9a4cc
0x000000000009a576 : jmp 0x9a544
0x000000000009a5f6 : jmp 0x9a5c4
0x000000000009a676 : jmp 0x9a644
0x000000000009a6f6 : jmp 0x9a6c4
0x000000000009a776 : jmp 0x9a744
0x000000000009a7f6 : jmp 0x9a7c4
0x000000000009ae4e : jmp 0x9ae14
0x000000000009b5be : jmp 0x9b58c
0x000000000009c5a8 : jmp 0x9c576
0x00000000000a19fd : jmp 0xa19cb
0x00000000000a6f86 : jmp 0xa6f54
0x00000000000b24ab : jmp 0xb2479
0x00000000000c0a56 : jmp 0xc0a24
0x00000000000c0e26 : jmp 0xc0df4
0x00000000000c2bb9 : jmp 0xc2b87
0x00000000000d4688 : jmp 0xd464e
0x00000000000d4760 : jmp 0xd4726
0x00000000000d4997 : jmp 0xd495d
0x00000000000d781b : jmp 0xd77e1
0x00000000000d78f4 : jmp 0xd78ba
0x00000000000e0fba : jmp 0xe0f88
0x00000000000e23fa : jmp 0xe23c8
0x00000000000eb731 : jmp 0xeb6ff
0x00000000000ecb41 : jmp 0xecb0f
0x00000000000f206f : jmp 0xf2035
0x00000000000f3ef1 : jmp 0xf3eb7
0x00000000000fd09b : jmp 0xfd061
0x00000000000fd40d : jmp 0xfd3d3
0x000000000008e563 : jmp 0xffffffffc308f046
0x00000000000bc053 : jmp 0xffffffffc30bece6
0x000000000014b1e9 : jmp 0xffffffffcb91b1f0
0x000000000016a38d : jmp 0xffffffffcba6a397
0x00000000000075c4 : jmp qword ptr [rax]
0x00000000001424cb : jmp qword ptr [rbp + rax*8 - 0x3c540007]
0x0000000000148fb3 : jmp qword ptr [rbp + rbx - 0x3cabfffe]
0x000000000014b93b : jmp qword ptr [rbx]
0x0000000000155e4b : jmp qword ptr [rcx]
0x0000000000102074 : jmp qword ptr [rdi]
0x000000000014e743 : jmp qword ptr [rdx]
0x0000000000112e54 : jmp qword ptr [rsi]
0x000000000008c994 : jmp rax
0x00000000001100ed : jmp rbx
0x0000000000003408 : jmp rcx
0x0000000000007377 : jmp rdi
0x000000000008dc79 : jmp rdx
0x00000000000fba10 : jmp rsi
0x000000000013cb9b : jmp rsp
0x0000000000100213 : jne 0x100255 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010035c : jne 0x100397 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000100470 : jne 0x1004c5 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000100586 : jne 0x1005b8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000100a2e : jne 0x100a6f ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000101cd9 : jne 0x101ce6 ; add rsp, 0x18 ; ret
0x0000000000101d19 : jne 0x101d26 ; add rsp, 0x18 ; ret
0x0000000000101d89 : jne 0x101d96 ; add rsp, 0x18 ; ret
0x0000000000101dc9 : jne 0x101dd6 ; add rsp, 0x18 ; ret
0x0000000000101e92 : jne 0x101e83 ; ret
0x0000000000101e91 : jne 0x101e84 ; ret
0x0000000000102dab : jne 0x102dc3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102e1b : jne 0x102e33 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102e8b : jne 0x102ea3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102efb : jne 0x102f13 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102f2e : jne 0x102f49 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000102f9e : jne 0x102fac ; add rsp, 0x18 ; jmp rax
0x0000000000102f89 : jne 0x102fac ; add rsp, 0x18 ; ret
0x0000000000102ffe : jne 0x10300c ; add rsp, 0x18 ; jmp rax
0x0000000000102fe9 : jne 0x10300c ; add rsp, 0x18 ; ret
0x00000000001031ab : jne 0x1031c3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010321b : jne 0x103233 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010328b : jne 0x1032a3 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001032fb : jne 0x103313 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010332e : jne 0x103349 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010339e : jne 0x1033ac ; add rsp, 0x18 ; jmp rax
0x0000000000103389 : jne 0x1033ac ; add rsp, 0x18 ; ret
0x00000000001033fe : jne 0x10340c ; add rsp, 0x18 ; jmp rax
0x00000000001033e9 : jne 0x10340c ; add rsp, 0x18 ; ret
0x0000000000103a4b : jne 0x103a63 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103abb : jne 0x103ad3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103b2b : jne 0x103b43 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000104884 : jne 0x104896 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104914 : jne 0x104926 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106e4d : jne 0x106dfe ; pop rbx ; pop rbp ; ret
0x000000000010727f : jne 0x107260 ; mov rax, rdi ; sub rax, r8 ; ret
0x000000000010733f : jne 0x107320 ; mov rax, rdi ; sub rax, r8 ; ret
0x000000000010f5de : jne 0x10f5ec ; jmp 0x8b874
0x00000000001131ca : jne 0x113203 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001132b9 : jne 0x1132fe ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001133a9 : jne 0x1133ee ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000114316 : jne 0x114323 ; add rsp, 0x18 ; ret
0x0000000000114366 : jne 0x114373 ; add rsp, 0x18 ; ret
0x000000000011465d : jne 0x11465b ; dec dword ptr [rax - 0x77] ; ret
0x00000000001156ea : jne 0x115723 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001157d9 : jne 0x11581e ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001158c9 : jne 0x11590e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011681a : jne 0x11682e ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000118e65 : jne 0x118ed6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000118fa5 : jne 0x118fe3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000119047 : jne 0x119088 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000119ceb : jne 0x119d0e ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000011e395 : jne 0x11e416 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011e4ed : jne 0x11e52b ; add rsp, 0x20 ; pop rbx ; ret
0x000000000011e591 : jne 0x11e5d0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123b4e : jne 0x123b67 ; mov eax, 0xffffffff ; ret
0x0000000000123c6e : jne 0x123c87 ; mov eax, 0xffffffff ; ret
0x0000000000123f2e : jne 0x123f3d ; mov rax, rdi ; ret
0x0000000000123f96 : jne 0x123fa4 ; add rsp, 0x18 ; jmp rax
0x0000000000123f7b : jne 0x123fa4 ; add rsp, 0x18 ; ret
0x0000000000124006 : jne 0x124014 ; add rsp, 0x18 ; jmp rax
0x0000000000123feb : jne 0x124014 ; add rsp, 0x18 ; ret
0x000000000012402e : jne 0x12403c ; xor eax, eax ; ret
0x00000000001240b3 : jne 0x124100 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000012415b : jne 0x124177 ; mov eax, 0xffffffff ; ret
0x00000000001241c3 : jne 0x1241d3 ; ret
0x0000000000124263 : jne 0x124273 ; ret
0x00000000001242ae : jne 0x1242c7 ; mov eax, 0xffffffff ; ret
0x0000000000124403 : jne 0x12441b ; ret
0x00000000001245ec : jne 0x1245f9 ; add rsp, 0x18 ; ret
0x000000000012469e : jne 0x1246ad ; mov rax, rdi ; ret
0x0000000000124706 : jne 0x124714 ; add rsp, 0x18 ; jmp rax
0x00000000001246eb : jne 0x124714 ; add rsp, 0x18 ; ret
0x0000000000124776 : jne 0x124784 ; add rsp, 0x18 ; jmp rax
0x000000000012475b : jne 0x124784 ; add rsp, 0x18 ; ret
0x000000000012479e : jne 0x1247ac ; xor eax, eax ; ret
0x00000000001247d8 : jne 0x1247e3 ; ret
0x000000000012483b : jne 0x124868 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001248b3 : jne 0x1248cf ; mov eax, 0xffffffff ; ret
0x0000000000124913 : jne 0x124923 ; ret
0x00000000001249b3 : jne 0x1249c3 ; ret
0x0000000000124a03 : jne 0x124a13 ; ret
0x0000000000124b53 : jne 0x124b6b ; ret
0x0000000000124d3c : jne 0x124d49 ; add rsp, 0x18 ; ret
0x0000000000124fc9 : jne 0x124fd3 ; ret
0x0000000000124fe9 : jne 0x124ff3 ; ret
0x0000000000125009 : jne 0x125013 ; ret
0x000000000012503c : jne 0x125043 ; ret
0x000000000012505c : jne 0x125063 ; ret
0x000000000012507c : jne 0x125083 ; ret
0x000000000012509c : jne 0x1250a3 ; ret
0x0000000000126d94 : jne 0x126d83 ; ret
0x000000000012702d : jne 0x127029 ; mov rax, -1 ; ret
0x0000000000127d29 : jne 0x127d36 ; add rsp, 0x18 ; ret
0x0000000000127d28 : jne 0x127d37 ; add rsp, 0x18 ; ret
0x0000000000127d27 : jne 0x127d38 ; add rsp, 0x18 ; ret
0x0000000000127d69 : jne 0x127d76 ; add rsp, 0x18 ; ret
0x0000000000127dd9 : jne 0x127de6 ; add rsp, 0x18 ; ret
0x0000000000127dd8 : jne 0x127de7 ; add rsp, 0x18 ; ret
0x0000000000127dd7 : jne 0x127de8 ; add rsp, 0x18 ; ret
0x0000000000127e19 : jne 0x127e26 ; add rsp, 0x18 ; ret
0x0000000000128d8e : jne 0x128da9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x0000000000128dbe : jne 0x128dd9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x28] ; ret
0x0000000000128e2b : jne 0x128e43 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128e9b : jne 0x128eb3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128f0b : jne 0x128f23 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128f7b : jne 0x128f93 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128fae : jne 0x128fc9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x60] ; ret
0x000000000012901e : jne 0x12902c ; add rsp, 0x18 ; jmp rax
0x0000000000129009 : jne 0x12902c ; add rsp, 0x18 ; ret
0x0000000000129008 : jne 0x12902d ; add rsp, 0x18 ; ret
0x0000000000129007 : jne 0x12902e ; add rsp, 0x18 ; ret
0x000000000012907e : jne 0x12908c ; add rsp, 0x18 ; jmp rax
0x0000000000129069 : jne 0x12908c ; add rsp, 0x18 ; ret
0x000000000012918e : jne 0x1291a9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000000001291be : jne 0x1291d9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x28] ; ret
0x000000000012922b : jne 0x129243 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012929b : jne 0x1292b3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012930b : jne 0x129323 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012937b : jne 0x129393 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001293ae : jne 0x1293c9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x60] ; ret
0x000000000012941e : jne 0x12942c ; add rsp, 0x18 ; jmp rax
0x0000000000129409 : jne 0x12942c ; add rsp, 0x18 ; ret
0x0000000000129408 : jne 0x12942d ; add rsp, 0x18 ; ret
0x0000000000129407 : jne 0x12942e ; add rsp, 0x18 ; ret
0x000000000012947e : jne 0x12948c ; add rsp, 0x18 ; jmp rax
0x0000000000129469 : jne 0x12948c ; add rsp, 0x18 ; ret
0x0000000000129a2e : jne 0x129a49 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x0000000000129a5e : jne 0x129a79 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000129acb : jne 0x129ae3 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129b3b : jne 0x129b53 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129bab : jne 0x129bc3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a8e4 : jne 0x12a8f6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a974 : jne 0x12a986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cc9f : jne 0x12cc50 ; pop rbx ; pop rbp ; ret
0x000000000012e4fe : jne 0x12e50c ; jmp 0x8af64
0x000000000012e541 : jne 0x12e588 ; movzx r9d, r9b ; call 0x8af68
0x0000000000138ad9 : jne 0x138ae3 ; ret
0x0000000000138af9 : jne 0x138b03 ; ret
0x0000000000138b1b : jne 0x138b23 ; ret
0x0000000000138b50 : jne 0x138b5b ; ret
0x0000000000138b80 : jne 0x138b8b ; ret
0x0000000000138bb0 : jne 0x138bbb ; ret
0x0000000000138be0 : jne 0x138beb ; ret
0x000000000013aa91 : jne 0x13aa7b ; ret
0x000000000013ad3c : jne 0x13ad39 ; mov rax, -1 ; ret
0x0000000000142995 : jne 0x142993 ; jmp rax
0x0000000000142999 : jne 0x142997 ; call qword ptr [rax]
0x00000000001429cd : jne 0x1429cf ; inc eax ; jo 0x1429d3 ; call rax
0x00000000001429cc : jne 0x1429d0 ; inc eax ; jo 0x1429d4 ; call rax
0x00000000001429e9 : jne 0x1429e7 ; call rax
0x00000000001429e5 : jne 0x1429e7 ; inc dword ptr [rdx + 0x75] ; cli ; call rax
0x00000000001429e8 : jne 0x1429e8 ; call rax
0x00000000001429e4 : jne 0x1429e8 ; inc dword ptr [rdx + 0x75] ; cli ; call rax
0x00000000001429fd : jne 0x1429fb ; call rax
0x00000000001429f9 : jne 0x1429fb ; inc dword ptr [rdx + 0x75] ; cli ; call rax
0x00000000001429fc : jne 0x1429fc ; call rax
0x00000000001429f8 : jne 0x1429fc ; inc dword ptr [rdx + 0x75] ; cli ; call rax
0x0000000000146ac9 : jne 0x146ac5 ; call rsp
0x000000000014717d : jne 0x147186 ; add ah, al ; add edi, ecx ; call rsp
0x000000000014b7e9 : jne 0x14b7ec ; jmp rsp
0x0000000000003564 : jne 0x358e ; ret
0x00000000000040f8 : jne 0x4084 ; retf
0x0000000000004c4d : jne 0x4be9 ; ret 0x4cc6
0x00000000000052b9 : jne 0x52c4 ; sal dword ptr [rbp - 0x50ae4846], cl ; push rcx ; ret 0xb220
0x0000000000005775 : jne 0x575d ; outsd dx, dword ptr [rsi] ; ret
0x00000000000061cb : jne 0x6151 ; call rdi
0x000000000000613b : jne 0x61b7 ; call rdi
0x0000000000006bff : jne 0x6c6b ; sbb al, bh ; jle 0x6bba ; ret 0x66a
0x0000000000006bfe : jne 0x6c6c ; sbb al, bh ; jle 0x6bbb ; ret 0x66a
0x0000000000006ff9 : jne 0x6f93 ; sbb al, 0xba ; cmp dword ptr [rdi], -0x77 ; ret
0x000000000008c763 : jne 0x8c76e ; mov byte ptr [rax], 1 ; ret
0x000000000008c7e3 : jne 0x8c7ee ; mov byte ptr [rax], 1 ; ret
0x000000000008c89f : jne 0x8c8aa ; mov byte ptr [rax], 1 ; ret
0x000000000008c95f : jne 0x8c96a ; mov byte ptr [rax], 1 ; ret
0x000000000008caf9 : jne 0x8cb03 ; ret
0x000000000008cb19 : jne 0x8cb23 ; ret
0x000000000008cb39 : jne 0x8cb43 ; ret
0x000000000008cbb7 : jne 0x8cbc3 ; ret
0x000000000008cc43 : jne 0x8cc79 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008cfe9 : jne 0x8cff3 ; ret
0x000000000008d009 : jne 0x8d013 ; ret
0x000000000008d02b : jne 0x8d033 ; ret
0x000000000008d0a7 : jne 0x8d0b3 ; ret
0x000000000008d14a : jne 0x8d17e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008d5bc : jne 0x8d5ab ; ret
0x000000000008d6cc : jne 0x8d6bb ; ret
0x000000000008d74c : jne 0x8d73b ; ret
0x000000000008db9c : jne 0x8db98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008dc62 : jne 0x8dc7f ; pop rbx ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000008dd5c : jne 0x8dd75 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008ddd3 : jne 0x8dde0 ; add rsp, 0x38 ; ret
0x000000000008de54 : jne 0x8de68 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000008df09 : jne 0x8df16 ; add rsp, 0x28 ; ret
0x000000000008e1dd : jne 0x8e1ec ; add rsp, 0x20 ; pop rbx ; ret
0x000000000008e736 : jne 0x8e797 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ec06 : jne 0x8ec4a ; mov qword ptr [rax], rsi ; xor eax, eax ; pop rbx ; ret
0x000000000008f04d : jne 0x8f097 ; add rsp, 0x18 ; ret
0x000000000008f166 : jne 0x8f17c ; xor eax, eax ; ret
0x0000000000090205 : jne 0x90253 ; add rsp, 0x18 ; ret
0x000000000009029a : jne 0x902e7 ; add rsp, 0x18 ; ret
0x000000000009040b : jne 0x903fb ; ret
0x0000000000091381 : jne 0x913a2 ; call rbx
0x0000000000091393 : jne 0x913bf ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000921b8 : jne 0x92179 ; xor eax, eax ; ret
0x00000000000929eb : jne 0x929dc ; xor eax, eax ; ret
0x00000000000929f0 : jne 0x929f3 ; mov rax, qword ptr [rdi + 8] ; ret
0x0000000000092aa4 : jne 0x92a86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095075 : jne 0x950bb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000099f29 : jne 0x99b7a ; jmp 0x96228
0x0000000000099f91 : jne 0x99fdf ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000009bfa8 : jne 0x9bfb8 ; add rsp, 8 ; ret
0x000000000009c048 : jne 0x9c033 ; ret
0x000000000009c84d : jne 0x9c87e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a024b : jne 0xa023b ; ret
0x00000000000a024a : jne 0xa023c ; ret
0x00000000000a028b : jne 0xa027b ; ret
0x00000000000a028a : jne 0xa027c ; ret
0x00000000000a02d3 : jne 0xa02c3 ; ret
0x00000000000a0323 : jne 0xa0313 ; ret
0x00000000000a038d : jne 0xa03d2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a1090 : jne 0xa10a1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a11ec : jne 0xa11db ; ret
0x00000000000a12fc : jne 0xa12eb ; ret
0x00000000000a137c : jne 0xa136b ; ret
0x00000000000a148c : jne 0xa147b ; ret
0x00000000000a150c : jne 0xa14fb ; ret
0x00000000000a15ae : jne 0xa15bd ; add dword ptr [rax], 1 ; ret
0x00000000000a1a95 : jne 0xa1a6d ; ret
0x00000000000a244d : jne 0xa243e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a38f4 : jne 0xa3949 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3bc4 : jne 0xa3b86 ; mov byte ptr [rsi], 0x66 ; mov byte ptr [rdx], 0 ; ret
0x00000000000a46e8 : jne 0xa46ed ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a548d : jne 0xa54d2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a563d : jne 0xa5682 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a5945 : jne 0xa5931 ; mov eax, 0xffffffff ; ret
0x00000000000a788a : jne 0xa7883 ; ret
0x00000000000a78da : jne 0xa78d3 ; ret
0x00000000000a7a90 : jne 0xa7a51 ; mov dword ptr [rsi], 1 ; ret
0x00000000000a8271 : jne 0xa8263 ; ret
0x00000000000b0d9c : jne 0xb0da7 ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x00000000000b171c : jne 0xb172d ; mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000b2eb7 : jne 0xb2f24 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b38a9 : jne 0xb38b6 ; add rsp, 0x28 ; ret
0x00000000000b38fc : jne 0xb3909 ; add rsp, 0x28 ; ret
0x00000000000b4202 : jne 0xb41b5 ; mov eax, 1 ; ret
0x00000000000b41ed : jne 0xb41cf ; mov eax, 1 ; ret
0x00000000000b4286 : jne 0xb4295 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000b4306 : jne 0xb4315 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000b4484 : jne 0xb44ba ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000b4528 : jne 0xb4539 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b46d3 : jne 0xb46e3 ; ret
0x00000000000b54fe : jne 0xb550f ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b5581 : jne 0xb5592 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b5614 : jne 0xb5625 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b5838 : jne 0xb5849 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b58b8 : jne 0xb58c9 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b5938 : jne 0xb5949 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b59d5 : jne 0xb5a0d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000b5b50 : jne 0xb5b7b ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b5d0f : jne 0xb5d03 ; pop rbx ; ret
0x00000000000b5d5f : jne 0xb5d58 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b5e2e : jne 0xb5e3b ; add rsp, 8 ; ret
0x00000000000b5e4b : jne 0xb5e58 ; add rsp, 8 ; ret
0x00000000000b5e6b : jne 0xb5e78 ; add rsp, 8 ; ret
0x00000000000b5f8b : jne 0xb5fd1 ; add rsp, 0x18 ; ret
0x00000000000b6094 : jne 0xb60a5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b6184 : jne 0xb6195 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b623c : jne 0xb6249 ; add rsp, 0x18 ; ret
0x00000000000b62a7 : jne 0xb62ea ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000b7734 : jne 0xb7746 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7802 : jne 0xb77fb ; ret
0x00000000000b7892 : jne 0xb788b ; ret
0x00000000000b850b : jne 0xb851d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b88bd : jne 0xb88e2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b910d : jne 0xb9132 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000baefa : jne 0xbaeee ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb353 : jne 0xbb36c ; add rsp, 0x18 ; ret
0x00000000000bb596 : jne 0xbb5af ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bb932 : jne 0xbb951 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bba0e : jne 0xbba4e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000bba91 : jne 0xbbab5 ; pop rbx ; ret
0x00000000000bbe69 : jne 0xbbe7a ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000bc147 : jne 0xbc154 ; mov eax, esi ; ret
0x00000000000bc4e0 : jne 0xbc4ef ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000bc77c : jne 0xbc7cf ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000bf492 : jne 0xbf4d9 ; add rsp, 0x18 ; ret
0x00000000000bf512 : jne 0xbf559 ; add rsp, 0x18 ; ret
0x00000000000bfec6 : jne 0xbff0b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000bffa6 : jne 0xbffeb ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c1e37 : jne 0xc1e3a ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1e87 : jne 0xc1e8a ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c22b7 : jne 0xc2330 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c26db : jne 0xc26cb ; ret
0x00000000000c26da : jne 0xc26cc ; ret
0x00000000000c2723 : jne 0xc2713 ; ret
0x00000000000c51ac : jne 0xc51bd ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c7586 : jne 0xc7573 ; ret
0x00000000000c75c6 : jne 0xc75b3 ; ret
0x00000000000c7658 : jne 0xc7666 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7b2b : jne 0xc7b13 ; ret
0x00000000000c924e : jne 0xc92a3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c9360 : jne 0xc93b2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9469 : jne 0xc94ba ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c956d : jne 0xc95b2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9656 : jne 0xc96a2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c973d : jne 0xc9782 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9816 : jne 0xc985a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9918 : jne 0xc9962 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9a11 : jne 0xc9a62 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9b11 : jne 0xc9b62 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9c05 : jne 0xc9c4a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9cee : jne 0xc9d42 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9e00 : jne 0xc9e52 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c9f0e : jne 0xc9f63 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ca019 : jne 0xca06a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca115 : jne 0xca15a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca1fe : jne 0xca252 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca2f5 : jne 0xca33a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca3de : jne 0xca432 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca4d5 : jne 0xca51a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca5be : jne 0xca612 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca6c1 : jne 0xca712 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca7c8 : jne 0xca812 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca8c1 : jne 0xca912 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca9ad : jne 0xca9f2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000caa86 : jne 0xcaaca ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cab7d : jne 0xcabc2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cac66 : jne 0xcacb2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cad14 : jne 0xcad5a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cadc4 : jne 0xcae0a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cae6c : jne 0xcaeb2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000caf0c : jne 0xcaf52 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cb38c : jne 0xcb3c8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cb54c : jne 0xcb5d5 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000cbaa5 : jne 0xcbb16 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cbbe5 : jne 0xcbc23 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cc2ef : jne 0xcc33b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cd1f7 : jne 0xcd23b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ce2a7 : jne 0xce2f3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ceeca : jne 0xceeaf ; call 0x8b964
0x00000000000cefec : jne 0xcf038 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf1bc : jne 0xcf245 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000cf715 : jne 0xcf796 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cf86d : jne 0xcf8ab ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cff6f : jne 0xcffbb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d0e77 : jne 0xd0ebb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d1f17 : jne 0xd1f63 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d28cc : jne 0xd28d3 ; ret
0x00000000000d28ec : jne 0xd28f3 ; ret
0x00000000000d290c : jne 0xd2913 ; ret
0x00000000000d292c : jne 0xd2933 ; ret
0x00000000000d2e32 : jne 0xd2e23 ; ret
0x00000000000d30cd : jne 0xd30c9 ; mov rax, -1 ; ret
0x00000000000d3690 : jne 0xd36c1 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000d3777 : jne 0xd3783 ; ret
0x00000000000d37e2 : jne 0xd3829 ; add rsp, 0x18 ; ret
0x00000000000d3878 : jne 0xd38eb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d3dc6 : jne 0xd3dd3 ; ret
0x00000000000d4457 : jne 0xd4466 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d4575 : jne 0xd45d3 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d4b42 : jne 0xd4b66 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d4bc0 : jne 0xd4c05 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d4ebd : jne 0xd4ece ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d4f25 : jne 0xd4f71 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000d4fde : jne 0xd5031 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000d5100 : jne 0xd512a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d522e : jne 0xd5281 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000d57f2 : jne 0xd5833 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d5970 : jne 0xd597b ; ret
0x00000000000d59a0 : jne 0xd59ab ; ret
0x00000000000d59d0 : jne 0xd59db ; ret
0x00000000000d5a00 : jne 0xd5a0b ; ret
0x00000000000d5f41 : jne 0xd5f33 ; ret
0x00000000000d61ec : jne 0xd61e9 ; mov rax, -1 ; ret
0x00000000000d68b7 : jne 0xd68c3 ; ret
0x00000000000d6922 : jne 0xd6969 ; add rsp, 0x18 ; ret
0x00000000000d69b8 : jne 0xd6a2b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d6f0d : jne 0xd6f1b ; ret
0x00000000000d75f7 : jne 0xd7606 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d765b : jne 0xd7689 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7705 : jne 0xd7763 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d7c24 : jne 0xd7c36 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7c94 : jne 0xd7ca9 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7cd2 : jne 0xd7cf6 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d7d50 : jne 0xd7d95 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d804d : jne 0xd805e ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8202 : jne 0xd822c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d8c29 : jne 0xd8c36 ; add rsp, 0x18 ; ret
0x00000000000d8c69 : jne 0xd8c76 ; add rsp, 0x18 ; ret
0x00000000000d8cd9 : jne 0xd8ce6 ; add rsp, 0x18 ; ret
0x00000000000d8d19 : jne 0xd8d26 ; add rsp, 0x18 ; ret
0x00000000000d8de2 : jne 0xd8dd3 ; ret
0x00000000000d8de1 : jne 0xd8dd4 ; ret
0x00000000000d9bad : jne 0xd9bcc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d9c3d : jne 0xd9c5c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d9ccd : jne 0xd9cec ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d9d5d : jne 0xd9d7c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d9d8e : jne 0xd9da9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000d9dfe : jne 0xd9e0c ; add rsp, 0x18 ; jmp rax
0x00000000000d9de9 : jne 0xd9e0c ; add rsp, 0x18 ; ret
0x00000000000d9e5e : jne 0xd9e6c ; add rsp, 0x18 ; jmp rax
0x00000000000d9e49 : jne 0xd9e6c ; add rsp, 0x18 ; ret
0x00000000000da02d : jne 0xda04c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000da0bd : jne 0xda0dc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000da14d : jne 0xda16c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000da1dd : jne 0xda1fc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000da20e : jne 0xda229 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000da27e : jne 0xda28c ; add rsp, 0x18 ; jmp rax
0x00000000000da269 : jne 0xda28c ; add rsp, 0x18 ; ret
0x00000000000da2de : jne 0xda2ec ; add rsp, 0x18 ; jmp rax
0x00000000000da2c9 : jne 0xda2ec ; add rsp, 0x18 ; ret
0x00000000000dbcad : jne 0xdbccc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000dbd3d : jne 0xdbd5c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000dbdcd : jne 0xdbdec ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ddd44 : jne 0xddd56 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3969 : jne 0xe3976 ; add rsp, 0x18 ; ret
0x00000000000e3968 : jne 0xe3977 ; add rsp, 0x18 ; ret
0x00000000000e3967 : jne 0xe3978 ; add rsp, 0x18 ; ret
0x00000000000e39a9 : jne 0xe39b6 ; add rsp, 0x18 ; ret
0x00000000000e3a19 : jne 0xe3a26 ; add rsp, 0x18 ; ret
0x00000000000e3a18 : jne 0xe3a27 ; add rsp, 0x18 ; ret
0x00000000000e3a17 : jne 0xe3a28 ; add rsp, 0x18 ; ret
0x00000000000e3a59 : jne 0xe3a66 ; add rsp, 0x18 ; ret
0x00000000000e46f9 : jne 0xe46fa ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e480e : jne 0xe4829 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000000000e483e : jne 0xe4859 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x28] ; ret
0x00000000000e49c5 : jne 0xe49dc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4a55 : jne 0xe4a6c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4ae5 : jne 0xe4afc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4b0e : jne 0xe4b29 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x60] ; ret
0x00000000000e4b7e : jne 0xe4b8c ; add rsp, 0x18 ; jmp rax
0x00000000000e4b69 : jne 0xe4b8c ; add rsp, 0x18 ; ret
0x00000000000e4b68 : jne 0xe4b8d ; add rsp, 0x18 ; ret
0x00000000000e4b67 : jne 0xe4b8e ; add rsp, 0x18 ; ret
0x00000000000e4bde : jne 0xe4bec ; add rsp, 0x18 ; jmp rax
0x00000000000e4bc9 : jne 0xe4bec ; add rsp, 0x18 ; ret
0x00000000000e4cee : jne 0xe4d09 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000000000e4d1e : jne 0xe4d39 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x28] ; ret
0x00000000000e4ea5 : jne 0xe4ebc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4f35 : jne 0xe4f4c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4fc5 : jne 0xe4fdc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4fee : jne 0xe5009 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x60] ; ret
0x00000000000e505e : jne 0xe506c ; add rsp, 0x18 ; jmp rax
0x00000000000e5049 : jne 0xe506c ; add rsp, 0x18 ; ret
0x00000000000e5048 : jne 0xe506d ; add rsp, 0x18 ; ret
0x00000000000e5047 : jne 0xe506e ; add rsp, 0x18 ; ret
0x00000000000e50be : jne 0xe50cc ; add rsp, 0x18 ; jmp rax
0x00000000000e50a9 : jne 0xe50cc ; add rsp, 0x18 ; ret
0x00000000000e699e : jne 0xe69b9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x00000000000e69ce : jne 0xe69e9 ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000e6b55 : jne 0xe6b6c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e6be5 : jne 0xe6bfc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e8974 : jne 0xe8986 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee26c : jne 0xee27b ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee2dc : jne 0xee2eb ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee55d : jne 0xee588 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee576 : jne 0xee58a ; add rsp, 0x10 ; xor edx, edx ; pop rbx ; jmp rax
0x00000000000ee5ed : jne 0xee618 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ee606 : jne 0xee61a ; add rsp, 0x10 ; xor edx, edx ; pop rbx ; jmp rax
0x00000000000f9240 : jne 0xf9250 ; ret
0x00000000000f9276 : jne 0xf927d ; ret
0x00000000000f9ca0 : jne 0xf9cb0 ; ret
0x00000000000f9cd6 : jne 0xf9cdd ; ret
0x00000000000fc4d1 : jne 0xfc523 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fc68a : jne 0xfc655 ; call 0x89114
0x00000000000fc617 : jne 0xfc685 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc74c : jne 0xfc7b5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fce3b : jne 0xfce0e ; call 0x89114
0x00000000000fcdd3 : jne 0xfce36 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fd19d : jne 0xfd1e1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fd2d4 : jne 0xfd311 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd3e0 : jne 0xfd435 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fd4f6 : jne 0xfd528 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd99a : jne 0xfd9d2 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fe1c1 : jne 0xfe1e6 ; call 0x8acc4
0x00000000000ff501 : jne 0xff553 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ff64f : jne 0xff6d2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ff78c : jne 0xff7fa ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ffe37 : jne 0xffe9f ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000100e0e : jno 0x100e2a ; ret
0x0000000000100e30 : jno 0x100e4c ; ret
0x0000000000113e2e : jno 0x113e4a ; ret
0x0000000000113e50 : jno 0x113e6c ; ret
0x0000000000114a9d : jno 0x114a9b ; dec dword ptr [rax - 0x77] ; ret
0x000000000011630e : jno 0x11632a ; ret
0x0000000000116330 : jno 0x11634c ; ret
0x000000000012789b : jno 0x1278c6 ; idiv bh ; add rsp, 0x18 ; ret
0x0000000000145309 : jno 0x145303 ; jmp rsp
0x00000000001729a5 : jno 0x1729af ; add byte ptr [rax - 0x71], bl ; cld ; call qword ptr [rdi]
0x000000000000415b : jno 0x4167 ; retf
0x0000000000004507 : jno 0x4541 ; ret 0x5a81
0x00000000000048f0 : jno 0x48ab ; or eax, 0x1deed6cb ; xchg eax, ecx ; stosb byte ptr [rdi], al ; ret
0x00000000000056a2 : jno 0x5676 ; lodsd eax, dword ptr [rsi] ; retf 0x10e2
0x0000000000005c54 : jno 0x5c0b ; retf
0x0000000000007fae : jno 0x7f64 ; xchg eax, ebx ; sub edx, dword ptr [rsi + 0x27] ; ret 0x84e7
0x0000000000007fad : jno 0x7f65 ; xchg eax, ebx ; sub edx, dword ptr [rsi + 0x27] ; ret 0x84e7
0x0000000000007fac : jno 0x7f66 ; xchg eax, ebx ; sub edx, dword ptr [rsi + 0x27] ; ret 0x84e7
0x0000000000008149 : jno 0x8185 ; adc cl, cl ; retf -0x73c9
0x00000000000c2265 : jno 0xc2268 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c22b8 : jno 0xc22bb ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c2301 : jno 0xc2304 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fdb1e : jno 0xfdb3a ; ret
0x00000000000fdb40 : jno 0xfdb5c ; ret
0x00000000001024d9 : jnp 0x1024db ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x00000000001024d8 : jnp 0x1024dc ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x000000000013346f : jnp 0x13346b ; dec dword ptr [rax - 0x77] ; ret
0x000000000013c9c5 : jnp 0x13c9be ; jmp qword ptr [rax]
0x0000000000147285 : jnp 0x14728e ; add byte ptr [rdx + rdx], dl ; stc ; call rsp
0x00000000001652e1 : jnp 0x1652de ; call qword ptr [rcx]
0x0000000000171861 : jnp 0x171861 ; call qword ptr [rdx]
0x00000000001718c1 : jnp 0x1718c1 ; jmp qword ptr [rbx]
0x00000000001718d9 : jnp 0x1718d9 ; jmp qword ptr [rbx]
0x0000000000005c65 : jnp 0x5c18 ; ret
0x000000000008dfa3 : jnp 0x8df88 ; or al, byte ptr [rax] ; ret
0x00000000000b2c42 : jnp 0xb2c46 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000bbf9b : jnp 0xbbfaa ; je 0xbbfad ; pop rbx ; ret
0x00000000000f4190 : jnp 0xf4190 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001142a7 : jns 0x1142a5 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001142b1 : jns 0x1142af ; dec dword ptr [rax - 0x77] ; ret
0x00000000001429dd : jns 0x1429db ; call qword ptr [rax]
0x00000000001429dc : jns 0x1429dc ; call qword ptr [rax]
0x00000000001441cd : jns 0x1441d5 ; add byte ptr [rdi + rcx*4 - 0xc], ah ; jmp rsp
0x000000000016bbc4 : jns 0x16bbd0 ; add byte ptr [rax], al ; add al, 0xda ; retf
0x000000000016c6d9 : jns 0x16c6d8 ; jmp qword ptr [rdx]
0x0000000000171571 : jns 0x171571 ; call qword ptr [rdi]
0x0000000000171589 : jns 0x171589 ; call qword ptr [rdi]
0x00000000000041a3 : jns 0x4143 ; retf -0x2a2
0x00000000000044f3 : jns 0x452d ; ret 0x5a81
0x000000000008eefe : jns 0x8ef0b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000092930 : jns 0x9290c ; ret
0x00000000000a1d81 : jns 0xa1d89 ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; ret
0x00000000000b24a3 : jns 0xb24e9 ; add rbp, rax ; sub r15, rax ; jmp 0xb2481
0x00000000000b9ad3 : jns 0xb9ae7 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bd6f3 : jns 0xbd6c2 ; cld ; dec dword ptr [rcx + rcx*4 + 0x2c] ; ret
0x00000000000fc6a3 : jns 0xfc6a0 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fe0a3 : jns 0xfe086 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fe5a3 : jns 0xfe581 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000106afc : jo 0x106b39 ; clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000114c46 : jo 0x114c44 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114c45 : jo 0x114c45 ; dec dword ptr [rax - 0x77] ; ret
0x000000000011cf6c : jo 0x11cfbe ; cmp edi, eax ; je 0x11cf7f ; call 0x89a58
0x000000000011cf6b : jo 0x11cfbf ; cmp edi, eax ; je 0x11cf80 ; call 0x89a59
0x0000000000133f7f : jo 0x133f7b ; dec dword ptr [rax - 0x77] ; ret
0x000000000014258c : jo 0x142580 ; stc ; inc dword ptr [rax - 0x16] ; stc ; jmp rsp
0x00000000001429d1 : jo 0x1429cf ; call rax
0x000000000014f410 : jo 0x14f434 ; cmc ; call qword ptr [rdi]
0x000000000014f720 : jo 0x14f74b ; cmc ; call rax
0x000000000014f9d8 : jo 0x14f9de ; ret
0x0000000000150020 : jo 0x150080 ; cmc ; call qword ptr [rdx]
0x0000000000152040 : jo 0x15202f ; cmc ; jmp qword ptr [rsi]
0x0000000000160a20 : jo 0x1609a6 ; clc ; call rcx
0x0000000000163000 : jo 0x16302f ; stc ; call rdi
0x0000000000016830 : jo 0x1688c ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000001693b0 : jo 0x169356 ; cli ; call qword ptr [rbx]
0x0000000000171490 : jo 0x17150c ; cld ; jmp qword ptr [rax]
0x0000000000019850 : jo 0x1985b ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000004506 : jo 0x457c ; ret 0x5a81
0x0000000000004c4b : jo 0x4ccf ; jne 0x4beb ; ret 0x4cc6
0x0000000000005654 : jo 0x56d1 ; rcl byte ptr [rsi], 5 ; lahf ; ret 0xc2cb
0x0000000000005a48 : jo 0x5a08 ; test al, bh ; shl byte ptr [rbx - 0x52], 1 ; ret 0x5245
0x00000000000086a1 : jo 0x863f ; mov dl, 0x5a ; leave ; xchg eax, edi ; retf -0x547d
0x000000000008cb92 : jo 0x8cb84 ; cmp rsi, rdx ; jb 0x8cba3 ; ret
0x000000000008d082 : jo 0x8d074 ; cmp rsi, rdx ; jb 0x8d093 ; ret
0x000000000008d520 : jo 0x8d52c ; ret
0x000000000008d53b : jo 0x8d54e ; mov qword ptr [rdi + 8], rdi ; mov qword ptr [rdi], rdi ; ret
0x000000000008d630 : jo 0x8d63c ; ret
0x000000000008d64b : jo 0x8d65e ; mov qword ptr [rdi + 8], rdi ; mov qword ptr [rdi], rdi ; ret
0x00000000000a1150 : jo 0xa115c ; ret
0x00000000000a116b : jo 0xa117e ; mov qword ptr [rdi + 8], rdi ; mov qword ptr [rdi], rdi ; ret
0x00000000000a1260 : jo 0xa126c ; ret
0x00000000000a127b : jo 0xa128e ; mov qword ptr [rdi + 8], rdi ; mov qword ptr [rdi], rdi ; ret
0x00000000000a13f0 : jo 0xa13fc ; ret
0x00000000000a140b : jo 0xa141e ; mov qword ptr [rdi + 8], rdi ; mov qword ptr [rdi], rdi ; ret
0x000000000000a5f8 : jo 0xa604 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; retf 1
0x00000000000b8767 : jo 0xb877e ; mov qword ptr [rdx], rsi ; ret
0x00000000000b8fb7 : jo 0xb8fce ; mov qword ptr [rdx], rsi ; ret
0x00000000000bb520 : jo 0xbb528 ; add byte ptr [rax], al ; ret
0x00000000000c23f3 : jo 0xc23f6 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000000d02 : jo 0xc8f ; retf 0x101
0x00000000000e8efc : jo 0xe8f15 ; cli ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000ff14c : jo 0xff112 ; clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; pop rax ; retf
0x00000000000bbc90 : jo 0xffffffff941ae296 ; ret 0xb60f
0x000000000012e4fa : jp 0x12e54a ; and eax, 0xe9087500 ; pop rbx ; retf -0xb
0x000000000013cad1 : jp 0x13caca ; jmp rdx
0x000000000013cacd : jp 0x13caca ; ljmp ptr [rdx + rdi*2] ; cmc ; jmp rdx
0x000000000013cb4d : jp 0x13cb4a ; inc esp ; jle 0x13cb4e ; jmp rdx
0x0000000000144205 : jp 0x14420d ; add byte ptr [rsp + rdx*4], al ; hlt ; call rsp
0x000000000015a421 : jp 0x15a41c ; call qword ptr [rax]
0x00000000001652b9 : jp 0x1652b6 ; call qword ptr [rdx]
0x00000000001716d1 : jp 0x1716d1 ; call qword ptr [rdx]
0x00000000001716e9 : jp 0x1716e9 ; call qword ptr [rdx]
0x0000000000171761 : jp 0x171761 ; call qword ptr [rdx]
0x0000000000171760 : jp 0x171762 ; call qword ptr [rdx]
0x00000000001717d9 : jp 0x1717d9 ; call qword ptr [rsi]
0x0000000000004689 : jp 0x4710 ; push qword ptr [rsi - 0x5f] ; add al, 0xf8 ; ret 0x4c89
0x0000000000005c7c : jp 0x5c6b ; hlt ; scasd eax, dword ptr [rdi] ; jle 0x5cf9 ; sbb dword ptr [rdi], ebx ; ret
0x000000000000744e : jp 0x73ee ; retf 0x6fab
0x00000000000a23b2 : jp 0xa23b7 ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000bbc8e : jp 0xbbd0c ; jo 0xffffffff941ae298 ; ret 0xb60f
0x00000000000ff650 : jp 0xff6a0 ; add esp, 0x10 ; pop rbx ; ret
0x000000000013bcd9 : jrcxz 0x13bcd2 ; hlt ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x00000000001455d1 : jrcxz 0x1455cb ; jmp rsp
0x00000000001455d0 : jrcxz 0x1455cc ; jmp rsp
0x000000000014e8e9 : jrcxz 0x14e8e1 ; jmp qword ptr [rax]
0x0000000000005776 : jrcxz 0x57e9 ; ret
0x0000000000088d39 : jrcxz 0x88d76 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000095aa5 : jrcxz 0x95aae ; dec dword ptr [rax - 0x77] ; fisttp word ptr [rcx - 0x77] ; ret
0x000000000009c5b5 : jrcxz 0x9c5a2 ; push rbp ; retf
0x00000000000bf6c9 : jrcxz 0xbf696 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c7b2c : jrcxz 0xc7b23 ; ret
0x00000000000ec8d9 : jrcxz 0xec8c6 ; stc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x00000000000ec8da : jrcxz 0xec8dc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x000000000011297a : js 0x1129b1 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3145
0x0000000000113039 : js 0x113028 ; add rdi, rbx ; call rsi
0x0000000000113059 : js 0x113048 ; add rdi, rbx ; call rsi
0x00000000001142d4 : js 0x114347 ; idiv edi ; add rsp, 0x18 ; ret
0x0000000000115559 : js 0x115548 ; add rdi, rbx ; call rsi
0x0000000000115579 : js 0x115568 ; add rdi, rbx ; call rsi
0x000000000013ce74 : js 0x13ce14 ; cmc ; dec ecx ; retf
0x00000000001429d9 : js 0x1429db ; dec dword ptr [rax + 0x79] ; cli ; call qword ptr [rax]
0x0000000000147205 : js 0x14720e ; add ah, al ; or bh, cl ; jmp rsp
0x000000000014b821 : js 0x14b824 ; jmp rsp
0x000000000014b820 : js 0x14b825 ; jmp rsp
0x000000000014baa8 : js 0x14bac2 ; hlt ; jmp qword ptr [rbx]
0x000000000014ce88 : js 0x14cebb ; hlt ; call qword ptr [rcx]
0x000000000014d1c8 : js 0x14d1ff ; hlt ; call qword ptr [rdx]
0x000000000014e898 : js 0x14e87f ; hlt ; jmp qword ptr [rdx]
0x0000000000150da8 : js 0x150d34 ; cmc ; call qword ptr [rdi]
0x000000000015f928 : js 0x15f971 ; clc ; call qword ptr [rdx]
0x000000000015f948 : js 0x15f991 ; clc ; call qword ptr [rbx]
0x000000000015f9f8 : js 0x15fa43 ; clc ; call rax
0x0000000000162678 : js 0x16268f ; stc ; jmp rsp
0x00000000001654b8 : js 0x165441 ; stc ; call qword ptr [rax]
0x0000000000165918 : js 0x1658ad ; stc ; jmp qword ptr [rsi]
0x0000000000168368 : js 0x168370 ; cli ; jmp qword ptr [rdx]
0x000000000016c609 : js 0x16c60f ; ljmp ptr [rbp] ; add byte ptr [rax], al ; add al, 0x59 ; ret
0x000000000016c649 : js 0x16c648 ; call qword ptr [rdx]
0x000000000016eba8 : js 0x16eb47 ; sti ; call qword ptr [rdx]
0x00000000001714a8 : js 0x171524 ; cld ; jmp rax
0x000000000000026c : js 0x21b ; mov ah, 0x50 ; ret 0x6b05
0x0000000000004b31 : js 0x4aff ; push rbp ; retf -0x2850
0x000000000000547e : js 0x5460 ; retf
0x000000000009ea27 : js 0x9ea13 ; ret
0x00000000000a7972 : js 0xa798a ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a7985 : js 0xa799d ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a7996 : js 0xa79ae ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a79d2 : js 0xa79f2 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a79e5 : js 0xa7a05 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a79f6 : js 0xa7a16 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000af6c4 : js 0xaf6df ; test rdi, rdi ; je 0xaf6dd ; call 0x8c109
0x00000000000af6dd : js 0xaf720 ; test rdi, rdi ; je 0xaf6f6 ; call 0x8c109
0x00000000000c6db4 : js 0xc6de2 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e0b3a : js 0xe0b8a ; mov edi, dword ptr [rsp + 0x50] ; call rax
0x00000000000fba29 : js 0xfba18 ; add rdi, rbx ; call rsi
0x00000000000fba49 : js 0xfba38 ; add rdi, rbx ; call rsi
0x00000000000fe9af : js 0xfe99d ; jmp 0x8ac84
0x00000000000feaa9 : js 0xfea98 ; add rdi, rbx ; call rsi
0x00000000000feac9 : js 0xfeab8 ; add rdi, rbx ; call rsi
0x000000000015579d : lahf ; add byte ptr [rax], al ; adc byte ptr [rsi - 0xa], ah ; call qword ptr [rsi]
0x00000000001557cd : lahf ; add byte ptr [rax], al ; and byte ptr [rsi - 0xa], ah ; call qword ptr [rdx]
0x00000000001557b5 : lahf ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xa], ah ; call qword ptr [rbx]
0x00000000001785bf : lahf ; add eax, dword ptr [rax] ; retf 0x502
0x0000000000101c54 : lahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000144429 : lahf ; hlt ; call rsp
0x00000000000fc57d : lahf ; idiv al ; dec dword ptr [rax - 0x77] ; ret
0x000000000013458d : lahf ; push 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000007574 : lahf ; ret
0x000000000000a6a8 : lahf ; ret 0
0x0000000000110bba : lahf ; ret 0x5408
0x0000000000005659 : lahf ; ret 0xc2cb
0x0000000000006b79 : lahf ; ret 0xf731
0x0000000000015a90 : lahf ; retf 0
0x00000000000261b8 : lahf ; retf 3
0x000000000016edf1 : lahf ; sti ; jmp qword ptr [rdx]
0x0000000000005a60 : lahf ; xchg dword ptr [rdi + 0x31], edi ; retf -0x23b2
0x0000000000149ca3 : lcall ptr [rax + 0x27040002] ; std ; call rsp
0x0000000000127bff : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000013c9c3 : lcall ptr [rax + 0x7b] ; cmc ; jmp qword ptr [rax]
0x00000000001581db : lcall ptr [rax + rax] ; add byte ptr [rdi + rax*4], al ; retf
0x000000000014493b : lcall ptr [rax + rbx*4 - 0x2d5c0000] ; hlt ; jmp rsp
0x000000000014a0b3 : lcall ptr [rax + rdi*2 - 0x4d7bfffe] ; std ; call rsp
0x00000000000d45f7 : lcall ptr [rax - 0x17] ; ret 0xfb66
0x00000000000d2ea7 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000148b43 : lcall ptr [rbp + rax + 0x5ef40002] ; sti ; call rsp
0x00000000001444db : lcall ptr [rbp + rax*4 - 0x5b6c0000] ; hlt ; jmp rsp
0x0000000000149f33 : lcall ptr [rbp + rbp*2 + 0x65940002] ; std ; jmp rsp
0x0000000000146a93 : lcall ptr [rbp + rcx*2 + 0x72140001] ; clc ; call rsp
0x00000000000a530a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a621e : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a040e : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001479a3 : lcall ptr [rbx + rbx*4 + 0x50e40001] ; stc ; call rsp
0x000000000014944b : lcall ptr [rcx + rsi - 0x47bfffe] ; sti ; call rsp
0x00000000001391f8 : lcall ptr [rdi] ; ret
0x0000000000149c33 : lcall ptr [rsi + rbx*2 + 0x20540002] ; std ; call rsp
0x000000000014489b : lcall ptr [rsp + rdx*4 - 0x35dc0000] ; hlt ; call rsp
0x000000000014832b : lcall ptr [rsp + rdx*8 - 0x5bbbffff] ; cli ; call rsp
0x00000000000bb868 : lds r8d, ptr [rax] ; pop rbp ; ret
0x000000000008ef1c : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000008e1f8 : lea eax, dword ptr [rax + rax*4 + 1] ; ret
0x00000000000d6d83 : lea eax, dword ptr [rax + rbp*4] ; pop rbx ; pop rbp ; ret
0x00000000000f1704 : lea eax, dword ptr [rax + rdx - 1] ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000d2ac8 : lea eax, dword ptr [rax + rdx - 1] ; ret
0x00000000000f3584 : lea eax, dword ptr [rax + rdx*4 - 4] ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000d5bc8 : lea eax, dword ptr [rax + rdx*4 - 4] ; ret
0x00000000000d5908 : lea eax, dword ptr [rax + rdx*4] ; ret
0x00000000000d5b74 : lea eax, dword ptr [rax + rsi*4] ; ret
0x000000000009c420 : lea eax, dword ptr [rax + rsi*8 - 8] ; ret
0x00000000000aa3e5 : lea eax, dword ptr [rax + rsi*8] ; ret
0x00000000000bb867 : lea eax, dword ptr [rbp + rax*8] ; pop rbp ; ret
0x000000000012cc9c : lea eax, dword ptr [rbx + rcx] ; jne 0x12cc53 ; pop rbx ; pop rbp ; ret
0x0000000000106e4a : lea eax, dword ptr [rbx + rsi] ; jne 0x106e01 ; pop rbx ; pop rbp ; ret
0x000000000008feff : lea eax, dword ptr [rbx - 0x80] ; pop rbx ; ret
0x0000000000094afa : lea eax, dword ptr [rcx + rdi*8 - 1] ; dec dword ptr [rax + 0x63] ; ret 0xc283
0x00000000001646dd : lea eax, dword ptr [rcx] ; add byte ptr [rax], dh ; pop rbx ; stc ; call rsp
0x000000000014769d : lea eax, dword ptr [rcx] ; add byte ptr [rdx + rsi - 7], al ; call rsp
0x0000000000124dc1 : lea eax, dword ptr [rdi + 0x10] ; cmp qword ptr [rdi], rax ; sete al ; ret
0x00000000000a6de1 : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a7821 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000004dfe : lea eax, dword ptr [rdi + 0x5f] ; sub dl, byte ptr [rdx - 0x44] ; ret 0x3790
0x00000000000a71d1 : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000125888 : lea eax, dword ptr [rdx + rax - 1] ; ret
0x000000000014a525 : lea eax, dword ptr [rdx] ; add byte ptr [rsi + rcx - 2], al ; call rsp
0x00000000000c284c : lea eax, dword ptr [rip + 0x2c22fe] ; ret
0x00000000000bc061 : lea eax, dword ptr [rip + 0x2c8ae1] ; ret
0x00000000000bc051 : lea eax, dword ptr [rip + 0x2c8ae9] ; ret
0x00000000000ba21c : lea eax, dword ptr [rip + 0x2ca90e] ; ret
0x00000000000b3841 : lea eax, dword ptr [rip + 0x2d3ef9] ; ret
0x00000000000b2c6c : lea eax, dword ptr [rip + 0x2d4a6e] ; ret
0x00000000000a26bc : lea eax, dword ptr [rip + 0x2e4fde] ; ret
0x000000000009c79c : lea eax, dword ptr [rip + 0x2e86fe] ; ret
0x000000000009c73c : lea eax, dword ptr [rip + 0x2e879e] ; ret
0x000000000009c43c : lea eax, dword ptr [rip + 0x2e8a1e] ; ret
0x000000000008fd41 : lea eax, dword ptr [rip + 0x2f4cb9] ; mov rax, qword ptr [rax] ; ret
0x000000000008fcf1 : lea eax, dword ptr [rip + 0x2f4d01] ; mov rax, qword ptr [rax] ; ret
0x000000000008da21 : lea eax, dword ptr [rip + 0x2f7149] ; ret
0x000000000008d9c1 : lea eax, dword ptr [rip + 0x2f71a1] ; ret
0x00000000000c2731 : lea eax, dword ptr [rip + 0x7abb9] ; ret
0x00000000000bbd91 : lea eax, dword ptr [rip + 0x80021] ; ret
0x00000000000bbd81 : lea eax, dword ptr [rip + 0x80029] ; ret
0x00000000000bb7f1 : lea eax, dword ptr [rip + 0x85cf9] ; ret
0x00000000000b9e21 : lea eax, dword ptr [rip + 0x8650f] ; ret
0x00000000000b9c71 : lea eax, dword ptr [rip + 0x8668c] ; ret
0x00000000000b20d1 : lea eax, dword ptr [rip + 0x8b23b] ; ret
0x00000000000b20e1 : lea eax, dword ptr [rip + 0x8b309] ; ret
0x00000000000b2141 : lea eax, dword ptr [rip + 0x8c4ee] ; ret
0x00000000000b2131 : lea eax, dword ptr [rip + 0x8c8fc] ; ret
0x00000000000b2121 : lea eax, dword ptr [rip + 0x8c90f] ; ret
0x00000000000b2111 : lea eax, dword ptr [rip + 0x8c919] ; ret
0x00000000000b2101 : lea eax, dword ptr [rip + 0x8c943] ; ret
0x00000000000b20f1 : lea eax, dword ptr [rip + 0x8c94f] ; ret
0x00000000000b20c1 : lea eax, dword ptr [rip + 0x8c97c] ; ret
0x00000000000b20b1 : lea eax, dword ptr [rip + 0x8c989] ; ret
0x00000000000b20a1 : lea eax, dword ptr [rip + 0x8c995] ; ret
0x00000000000b2091 : lea eax, dword ptr [rip + 0x8c9a2] ; ret
0x00000000000a1b51 : lea eax, dword ptr [rip + 0x9c5cb] ; ret
0x000000000008ed61 : lea eax, dword ptr [rip + 0xad391] ; ret
0x000000000008ed51 : lea eax, dword ptr [rip + 0xad392] ; ret
0x000000000008e551 : lea eax, dword ptr [rip + 0xadad1] ; ret
0x000000000008e561 : lea eax, dword ptr [rip + 0xadae9] ; ret
0x000000000008e121 : lea eax, dword ptr [rip + 0xade9d] ; ret
0x000000000008e0d1 : lea eax, dword ptr [rip + 0xaded2] ; ret
0x000000000008e081 : lea eax, dword ptr [rip + 0xadeee] ; ret
0x000000000008dff1 : lea eax, dword ptr [rip + 0xadf4e] ; ret
0x000000000008dfa1 : lea eax, dword ptr [rip + 0xadf7b] ; ret
0x000000000008d7a1 : lea eax, dword ptr [rip + 0xae611] ; ret
0x000000000008d781 : lea eax, dword ptr [rip + 0xae619] ; ret
0x000000000008fb99 : lea eax, dword ptr [rip - 0x19f] ; xor edx, edx ; ret
0x00000000000d6f45 : lea eax, dword ptr [rsi + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000cef97 : lea eax, dword ptr [rsi + rcx*4] ; mov qword ptr [rdi + 0x28], rax ; ret
0x0000000000090e15 : lea eax, dword ptr [rsi + rcx] ; ret
0x0000000000090e25 : lea eax, dword ptr [rsi + rdx] ; ret
0x00000000000c0def : lea ebp, dword ptr [rax - 0x76b70004] ; ret
0x0000000000007aba : lea ebp, dword ptr [rdx] ; push rax ; scasd eax, dword ptr [rdi] ; retf
0x0000000000094bdf : lea ebx, dword ptr [rax + rax + 0x63480000] ; ret 0xc283
0x00000000000d365d : lea ecx, dword ptr [rax + 0x18] ; mov rax, rcx ; ret
0x0000000000006e85 : lea ecx, dword ptr [rax] ; int1 ; retf
0x00000000000dc50d : lea ecx, dword ptr [rsp + 0x50] ; call 0x88f66
0x00000000000b3e95 : lea edx, dword ptr [rax + rdx*2] ; mov qword ptr [rdi], rdx ; ret
0x0000000000003dc4 : lea edx, dword ptr [rdi + 0x1a] ; xchg eax, ecx ; ret
0x00000000000d5aab : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rdi], rdx ; ret
0x00000000000935c9 : lea edx, dword ptr [rdx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf -0x67b8
0x00000000000dba7b : lea edx, dword ptr [rsi + rbx] ; call r8
0x000000000012698f : lea edx, dword ptr [rsi + rsi*8 - 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000ceec9 : lea esi, dword ptr [rbp - 0x21] ; call 0x8b965
0x00000000001063f1 : lea esi, dword ptr [rsp + 0x17] ; call 0x1026f6
0x000000000012bc61 : lea esi, dword ptr [rsp + 0x17] ; call 0x128736
0x00000000000bff1e : lea esi, dword ptr [rsp + 0xf] ; call 0x8c1fc
0x00000000000bbc24 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000be3b8 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x000000000011e105 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r14 ; pop rbp ; ret
0x00000000000ddd51 : lea esp, dword ptr [rbx + 0x10] ; mov rdi, r12 ; call 0x8a028
0x00000000000ddd50 : lea r12, qword ptr [rbx + 0x10] ; mov rdi, r12 ; call 0x8a029
0x00000000001646dc : lea r8, qword ptr [rcx] ; add byte ptr [rax], dh ; pop rbx ; stc ; call rsp
0x00000000000dc50c : lea r9, qword ptr [rsp + 0x50] ; call 0x88f67
0x000000000008ef1b : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000000d6d82 : lea rax, qword ptr [rax + rbp*4] ; pop rbx ; pop rbp ; ret
0x00000000000f1703 : lea rax, qword ptr [rax + rdx - 1] ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000d2ac7 : lea rax, qword ptr [rax + rdx - 1] ; ret
0x00000000000f3583 : lea rax, qword ptr [rax + rdx*4 - 4] ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000d5bc7 : lea rax, qword ptr [rax + rdx*4 - 4] ; ret
0x00000000000d5907 : lea rax, qword ptr [rax + rdx*4] ; ret
0x00000000000d5b73 : lea rax, qword ptr [rax + rsi*4] ; ret
0x000000000009c41f : lea rax, qword ptr [rax + rsi*8 - 8] ; ret
0x00000000000aa3e4 : lea rax, qword ptr [rax + rsi*8] ; ret
0x00000000000bb866 : lea rax, qword ptr [rbp + rax*8] ; pop rbp ; ret
0x000000000012cc9b : lea rax, qword ptr [rbx + rcx] ; jne 0x12cc54 ; pop rbx ; pop rbp ; ret
0x0000000000106e49 : lea rax, qword ptr [rbx + rsi] ; jne 0x106e02 ; pop rbx ; pop rbp ; ret
0x000000000008fefe : lea rax, qword ptr [rbx - 0x80] ; pop rbx ; ret
0x00000000000a6de0 : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7820 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a71d0 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000125887 : lea rax, qword ptr [rdx + rax - 1] ; ret
0x00000000000c284b : lea rax, qword ptr [rip + 0x2c22fe] ; ret
0x00000000000bc060 : lea rax, qword ptr [rip + 0x2c8ae1] ; ret
0x00000000000bc050 : lea rax, qword ptr [rip + 0x2c8ae9] ; ret
0x00000000000ba21b : lea rax, qword ptr [rip + 0x2ca90e] ; ret
0x00000000000b3840 : lea rax, qword ptr [rip + 0x2d3ef9] ; ret
0x00000000000b2c6b : lea rax, qword ptr [rip + 0x2d4a6e] ; ret
0x00000000000a26bb : lea rax, qword ptr [rip + 0x2e4fde] ; ret
0x000000000009c79b : lea rax, qword ptr [rip + 0x2e86fe] ; ret
0x000000000009c73b : lea rax, qword ptr [rip + 0x2e879e] ; ret
0x000000000009c43b : lea rax, qword ptr [rip + 0x2e8a1e] ; ret
0x000000000008da20 : lea rax, qword ptr [rip + 0x2f7149] ; ret
0x000000000008d9c0 : lea rax, qword ptr [rip + 0x2f71a1] ; ret
0x00000000000c2730 : lea rax, qword ptr [rip + 0x7abb9] ; ret
0x00000000000bbd90 : lea rax, qword ptr [rip + 0x80021] ; ret
0x00000000000bbd80 : lea rax, qword ptr [rip + 0x80029] ; ret
0x00000000000bb7f0 : lea rax, qword ptr [rip + 0x85cf9] ; ret
0x00000000000b9e20 : lea rax, qword ptr [rip + 0x8650f] ; ret
0x00000000000b9c70 : lea rax, qword ptr [rip + 0x8668c] ; ret
0x00000000000b20d0 : lea rax, qword ptr [rip + 0x8b23b] ; ret
0x00000000000b20e0 : lea rax, qword ptr [rip + 0x8b309] ; ret
0x00000000000b2140 : lea rax, qword ptr [rip + 0x8c4ee] ; ret
0x00000000000b2130 : lea rax, qword ptr [rip + 0x8c8fc] ; ret
0x00000000000b2120 : lea rax, qword ptr [rip + 0x8c90f] ; ret
0x00000000000b2110 : lea rax, qword ptr [rip + 0x8c919] ; ret
0x00000000000b2100 : lea rax, qword ptr [rip + 0x8c943] ; ret
0x00000000000b20f0 : lea rax, qword ptr [rip + 0x8c94f] ; ret
0x00000000000b20c0 : lea rax, qword ptr [rip + 0x8c97c] ; ret
0x00000000000b20b0 : lea rax, qword ptr [rip + 0x8c989] ; ret
0x00000000000b20a0 : lea rax, qword ptr [rip + 0x8c995] ; ret
0x00000000000b2090 : lea rax, qword ptr [rip + 0x8c9a2] ; ret
0x00000000000a1b50 : lea rax, qword ptr [rip + 0x9c5cb] ; ret
0x000000000008ed60 : lea rax, qword ptr [rip + 0xad391] ; ret
0x000000000008ed50 : lea rax, qword ptr [rip + 0xad392] ; ret
0x000000000008e550 : lea rax, qword ptr [rip + 0xadad1] ; ret
0x000000000008e560 : lea rax, qword ptr [rip + 0xadae9] ; ret
0x000000000008e120 : lea rax, qword ptr [rip + 0xade9d] ; ret
0x000000000008e0d0 : lea rax, qword ptr [rip + 0xaded2] ; ret
0x000000000008e080 : lea rax, qword ptr [rip + 0xadeee] ; ret
0x000000000008dff0 : lea rax, qword ptr [rip + 0xadf4e] ; ret
0x000000000008dfa0 : lea rax, qword ptr [rip + 0xadf7b] ; ret
0x000000000008d7a0 : lea rax, qword ptr [rip + 0xae611] ; ret
0x000000000008d780 : lea rax, qword ptr [rip + 0xae619] ; ret
0x000000000008fb98 : lea rax, qword ptr [rip - 0x19f] ; xor edx, edx ; ret
0x00000000000d6f44 : lea rax, qword ptr [rsi + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000cef96 : lea rax, qword ptr [rsi + rcx*4] ; mov qword ptr [rdi + 0x28], rax ; ret
0x0000000000090e14 : lea rax, qword ptr [rsi + rcx] ; ret
0x0000000000090e24 : lea rax, qword ptr [rsi + rdx] ; ret
0x00000000000d365c : lea rcx, qword ptr [rax + 0x18] ; mov rax, rcx ; ret
0x00000000000b3e94 : lea rdx, qword ptr [r8 + rdx*2] ; mov qword ptr [rdi], rdx ; ret
0x00000000000d5aaa : lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rdi], rdx ; ret
0x00000000000dba7a : lea rdx, qword ptr [rsi + rbx] ; call r8
0x00000000000ceec8 : lea rsi, qword ptr [rbp - 0x21] ; call 0x8b966
0x00000000001063f0 : lea rsi, qword ptr [rsp + 0x17] ; call 0x1026f7
0x000000000012bc60 : lea rsi, qword ptr [rsp + 0x17] ; call 0x128737
0x00000000000bff1d : lea rsi, qword ptr [rsp + 0xf] ; call 0x8c1fd
0x00000000000bbc23 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000be3b7 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000000be3b6 : lea rsp, qword ptr cs:[rbp - 0x10] ; pop rbx ; pop r14 ; pop rbp ; ret
0x00000000001481ad : leave ; add dword ptr [rax], eax ; add al, 0x4c ; cli ; call rsp
0x00000000000cb331 : leave ; add rcx, rsi ; mov qword ptr [rdi + 0x28], rcx ; ret
0x000000000012e546 : leave ; call 0x8af63
0x00000000000ff2e1 : leave ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001498f1 : leave ; cld ; jmp rsp
0x000000000016a289 : leave ; cli ; jmp qword ptr [rdi]
0x00000000000923e7 : leave ; cmovne eax, edx ; ret
0x00000000000068eb : leave ; fld xword ptr [r8 - 0x7dbcadcb] ; ret 0xfc56
0x0000000000125a53 : leave ; idiv r15b ; mov rax, rbx ; pop rbx ; ret
0x00000000000a8022 : leave ; je 0xa8089 ; mov dword ptr [rcx], 1 ; ret
0x000000000008ec05 : leave ; jne 0x8ec4b ; mov qword ptr [rax], rsi ; xor eax, eax ; pop rbx ; ret
0x00000000000921b7 : leave ; jne 0x9217a ; xor eax, eax ; ret
0x000000000009c047 : leave ; jne 0x9c034 ; ret
0x0000000000101c53 : leave ; lahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cef95 : leave ; lea rax, qword ptr [rsi + rcx*4] ; mov qword ptr [rdi + 0x28], rax ; ret
0x0000000000007ada : leave ; mov ah, 0xb ; mov edx, 0xbfc411e0 ; ret
0x00000000000f93ad : leave ; mov esi, 0x20 ; mov rdi, rbp ; call rdx
0x00000000000d68b3 : leave ; mov esi, 0x775002a ; ret
0x00000000000da6d6 : leave ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da6e6 : leave ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000b7496 : leave ; mov rsi, rbx ; mov rdi, rbp ; call rax
0x0000000000101753 : leave ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000103dc6 : leave ; movsx r8d, r8b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da715 : leave ; movsx r9d, r9b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da725 : leave ; movsx r9d, r9b ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000008eed0 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000000b2094 : leave ; or byte ptr [rax], al ; ret
0x00000000000fd453 : leave ; out -8, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004ee2 : leave ; pop rcx ; clc ; retf 0x1b41
0x0000000000004b32 : leave ; push rbp ; retf -0x2850
0x00000000000c6752 : leave ; ret
0x0000000000005255 : leave ; retf
0x000000000000814e : leave ; retf -0x73c9
0x00000000000077bb : leave ; retf 0x54e7
0x0000000000101253 : leave ; test eax, 0x8948fff8 ; ret
0x00000000000086a5 : leave ; xchg eax, edi ; retf -0x547d
0x00000000000cd61f : leave ; xor edx, edx ; mov rdi, rbp ; call 0x8a0b8
0x00000000000c7c09 : les r9d, ptr [rax - 0x7d] ; ret
0x0000000000148d43 : ljmp ptr [rax + rdx - 0x79dbfffe] ; sti ; call rsp
0x000000000016c60b : ljmp ptr [rbp] ; add byte ptr [rax], al ; add al, 0x59 ; ret
0x0000000000142563 : ljmp ptr [rbx + 0x4cfff9c3] ; retf
0x0000000000147283 : ljmp ptr [rbx + rdi*2 + 0x12140001] ; stc ; call rsp
0x0000000000149feb : ljmp ptr [rbx + rsi*2 - 0x70cbfffe] ; std ; call rsp
0x000000000013ce7b : ljmp ptr [rbx - 0x35] ; cmc ; call qword ptr [rdx - 0x35]
0x00000000001424ab : ljmp ptr [rbx - 0x5400063d] ; ret
0x000000000013cbe7 : ljmp ptr [rbx - 0x72] ; cmc ; jmp qword ptr [rax]
0x0000000000146c2b : ljmp ptr [rcx + rbx*2 - 0x518bffff] ; clc ; jmp rsp
0x0000000000146a1b : ljmp ptr [rcx + rcx*2 + 0x64640001] ; clc ; jmp rsp
0x0000000000147fe3 : ljmp ptr [rdi + rdi*4 + 0x11f40001] ; cli ; jmp rsp
0x0000000000149223 : ljmp ptr [rdi - 0x1e2bfffe] ; sti ; call rsp
0x00000000001560c3 : ljmp ptr [rdx + 0x4000000] ; ret
0x000000000016bdb3 : ljmp ptr [rdx + rax + 0x6f040000] ; retf 0
0x0000000000149883 : ljmp ptr [rdx + rcx*2 + 2] ; add byte ptr [rcx + rdx*4 - 4], dh ; call rsp
0x00000000001475fb : ljmp ptr [rdx + rcx*4 + 0x2ca40001] ; stc ; call rsp
0x000000000013cb4b : ljmp ptr [rdx + rdi*2] ; cmc ; inc esp ; jle 0x13cb50 ; jmp rdx
0x000000000013cacf : ljmp ptr [rdx + rdi*2] ; cmc ; jmp rdx
0x000000000013cacb : ljmp ptr [rdx + rdi*2] ; cmc ; ljmp ptr [rdx + rdi*2] ; cmc ; jmp rdx
0x0000000000165933 : ljmp ptr [rsi + 0x4000000] ; retf
0x0000000000147fb3 : ljmp ptr [rsi + rdi*4 + 0xe940001] ; cli ; jmp rsp
0x0000000000141c4f : ljmp ptr [rsp + rax*2 - 8] ; call qword ptr [rax]
0x0000000000141c4b : ljmp ptr [rsp + rax*2 - 8] ; ljmp ptr [rsp + rax*2 - 8] ; call qword ptr [rax]
0x0000000000147663 : ljmp ptr [rsp + rcx*4 + 0x2fe40001] ; stc ; call rsp
0x00000000001472bb : ljmp ptr [rsp + rdi*2 + 0x15140001] ; stc ; jmp rsp
0x0000000000147f53 : ljmp ptr [rsp + rdi*4 + 0x9b40001] ; cli ; jmp rsp
0x0000000000025e16 : lldt bx ; ret 0x13
0x0000000000014356 : lldt cx ; ret 0x13
0x0000000000023aa6 : lldt si ; ret 0x13
0x00000000000141be : lldt word ptr [rax] ; ret
0x0000000000025cde : lldt word ptr [rdx] ; ret
0x000000000008fa88 : lock add dword ptr [rax - 0x80], 1 ; ret
0x00000000000a391a : lock add dword ptr [rax], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a15b8 : lock add dword ptr [rax], 1 ; ret
0x0000000000090ad1 : lock add dword ptr [rbx + 0x5d], ebx ; ret
0x00000000000adeb0 : lock add dword ptr [rdi], esi ; ret
0x000000000008fd7a : lock sub dword ptr [rbx], 1 ; je 0x8fd8f ; pop rbx ; ret
0x00000000000adea2 : lock xadd dword ptr [rdi], eax ; ret
0x0000000000148d44 : lodsb al, byte ptr [rsi] ; adc byte ptr [rdx], al ; add byte ptr [rsi + rax*4], ah ; sti ; call rsp
0x000000000016bdb4 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rdi + rbp*2], al ; retf 0
0x000000000014fdfc : lodsb al, byte ptr [rsi] ; add byte ptr [r8], r8b ; pop rcx ; cmc ; call qword ptr [rdx]
0x00000000000f0378 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sbb r11b, r14b ; ret
0x000000000015203c : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jo 0x152033 ; cmc ; jmp qword ptr [rsi]
0x0000000000147cc5 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; and al, 0xa0 ; stc ; jmp rsp
0x00000000001664f5 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; call 0x14165ebb
0x0000000000146a1c : lodsb al, byte ptr [rsi] ; add qword ptr [r8], rax ; clc ; jmp rsp
0x0000000000100fd4 : lodsb al, byte ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c0a20 : lodsb al, byte ptr [rsi] ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000016f2fc : lodsb al, byte ptr [rsi] ; cmp al, byte ptr [rdx] ; add byte ptr [rax - 0x59], dl ; sti ; jmp qword ptr [rdx]
0x00000000001445a9 : lodsb al, byte ptr [rsi] ; hlt ; call rsp
0x00000000001254a0 : lodsb al, byte ptr [rsi] ; idiv r15b ; nop dword ptr [rax] ; ret
0x0000000000149fec : lodsb al, byte ptr [rsi] ; jae 0x149ff8 ; add byte ptr [rdi + rcx*4], dh ; std ; call rsp
0x0000000000152efc : lodsb al, byte ptr [rsi] ; jbe 0x152f06 ; add al, al ; adc dh, dh ; call qword ptr [rdx]
0x0000000000147284 : lodsb al, byte ptr [rsi] ; jnp 0x14728f ; add byte ptr [rdx + rdx], dl ; stc ; call rsp
0x0000000000007ad9 : lodsb al, byte ptr [rsi] ; leave ; mov ah, 0xb ; mov edx, 0xbfc411e0 ; ret
0x0000000000147fe4 : lodsb al, byte ptr [rsi] ; mov edi, 0x11f40001 ; cli ; jmp rsp
0x0000000000147fb4 : lodsb al, byte ptr [rsi] ; mov esi, 0xe940001 ; cli ; jmp rsp
0x0000000000147f54 : lodsb al, byte ptr [rsi] ; mov esp, 0x9b40001 ; cli ; jmp rsp
0x000000000014c3fc : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x0000000000146c2c : lodsb al, byte ptr [rsi] ; pop rcx ; add dword ptr [rax], eax ; je 0x146be7 ; clc ; jmp rsp
0x00000000001450fc : lodsb al, byte ptr [rsi] ; ret
0x0000000000157afc : lodsb al, byte ptr [rsi] ; ret 0
0x000000000000488a : lodsb al, byte ptr [rsi] ; ret 0x6da5
0x0000000000100d70 : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000000493e : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; pop rsi ; je 0x4931 ; ret
0x000000000000493d : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; pop rsi ; je 0x4932 ; ret
0x000000000000493c : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; pop rsi ; je 0x4933 ; ret
0x0000000000173172 : lodsb al, byte ptr [rsi] ; str edx ; syscall
0x0000000000153dfc : lodsb al, byte ptr [rsi] ; test dword ptr [rax], eax ; add byte ptr [rax], dh ; sub esi, esi ; call qword ptr [rdx]
0x000000000016e8fc : lodsb al, byte ptr [rsi] ; xor byte ptr [rdx], al ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x0000000000005c4f : lodsd eax, dword ptr [rsi] ; adc byte ptr [rdx], dl ; xchg rax, r13 ; jno 0x5c10 ; retf
0x0000000000166555 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x14165f1b
0x00000000000c0310 : lodsd eax, dword ptr [rsi] ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001698c9 : lodsd eax, dword ptr [rsi] ; cli ; jmp qword ptr [rdi]
0x00000000001445f9 : lodsd eax, dword ptr [rsi] ; hlt ; call rsp
0x000000000015d541 : lodsd eax, dword ptr [rsi] ; idiv edi ; ret
0x000000000012d7ff : lodsd eax, dword ptr [rsi] ; in al, -0xb ; dec dword ptr [rax - 0x77] ; ret
0x0000000000007307 : lodsd eax, dword ptr [rsi] ; in eax, 1 ; mov esi, 0xd7d6a254 ; in eax, dx ; retf -0xe8a
0x00000000000b43de : lodsd eax, dword ptr [rsi] ; mov eax, 2 ; pop rbx ; ret
0x00000000000b515f : lodsd eax, dword ptr [rsi] ; out -1, eax ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xc539
0x0000000000006135 : lodsd eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000d547f : lodsd eax, dword ptr [rsi] ; pop rbx ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000014280 : lodsd eax, dword ptr [rsi] ; ret 0x13
0x00000000000b62f7 : lodsd eax, dword ptr [rsi] ; ret 0x2c
0x00000000000ae6ef : lodsd eax, dword ptr [rsi] ; retf
0x00000000000056a5 : lodsd eax, dword ptr [rsi] ; retf 0x10e2
0x0000000000166071 : lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x0000000000166059 : lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rcx]
0x00000000001660d1 : lodsd eax, dword ptr [rsi] ; stc ; jmp qword ptr [rdi]
0x0000000000007faf : lodsd eax, dword ptr [rsi] ; xchg eax, ebx ; sub edx, dword ptr [rsi + 0x27] ; ret 0x84e7
0x0000000000100e70 : loop 0x100e2e ; or edx, ecx ; mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000113e90 : loop 0x113e4e ; or edx, ecx ; mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000116370 : loop 0x11632e ; or edx, ecx ; mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000145599 : loop 0x145593 ; jmp rsp
0x00000000001455cd : loop 0x1455d5 ; add byte ptr [rbx - 0xa], ah ; jmp rsp
0x0000000000148539 : loop 0x148537 ; jmp rsp
0x000000000014e899 : loop 0x14e891 ; jmp qword ptr [rdx]
0x000000000016aa29 : loop 0x16aa27 ; jmp qword ptr [rbx]
0x0000000000003479 : loop 0x3429 ; insb byte ptr [rdi], dx ; mov gs, ecx ; nop ; pop rax ; jbe 0x340f ; ret 0x9349
0x0000000000003daf : loop 0x3df5 ; retf -0x40c3
0x00000000000048ad : loop 0x4850 ; or ch, byte ptr [rdx] ; fucomp st(6) ; push rbp ; retf
0x00000000000056a7 : loop 0x56bb ; retf 0x7388
0x0000000000006ff7 : loop 0x6ffd ; jne 0x6f95 ; sbb al, 0xba ; cmp dword ptr [rdi], -0x77 ; ret
0x0000000000097e69 : loop 0x97dfb ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000983b1 : loop 0x98343 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000098568 : loop 0x984fa ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000098d81 : loop 0x98d13 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000009a92a : loop 0x9a925 ; ret 0x3107
0x00000000000a98de : loop 0xa98d0 ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000000b5c93 : loop 0xb5c9d ; inc dword ptr [rax + rax*8 - 0x7cb6b98c] ; ret 0x4904
0x00000000000e640d : loop 0xe6444 ; imul al ; retf
0x00000000000fdb80 : loop 0xfdb3e ; or edx, ecx ; mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000110467 : loope 0x11046c ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x0000000000147d79 : loope 0x147d76 ; call rsp
0x0000000000148535 : loope 0x14853e ; add ah, ah ; loop 0x14853b ; jmp rsp
0x0000000000149229 : loope 0x149228 ; call rsp
0x000000000014b1e1 : loope 0x14b1e5 ; call qword ptr [rbx + rcx*8]
0x000000000014e811 : loope 0x14e809 ; jmp qword ptr [rax]
0x0000000000169aad : loope 0x169ab6 ; add al, dl ; mov bl, 0xfa ; call rdx
0x0000000000004480 : loope 0x4427 ; fisubr dword ptr [rbp + 0x2a] ; ret 0x5a81
0x0000000000005211 : loope 0x525d ; cmp bl, ah ; retf 0x3ca1
0x0000000000006b99 : loope 0x6ba3 ; or edx, eax ; push rbx ; retf 0x1771
0x00000000000074bb : loope 0x74c9 ; retf
0x00000000000aab6b : loope 0xaab5a ; std ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000000adb14 : loope 0xadb18 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b762c : loope 0xb767d ; mov esi, ebx ; mov rdi, rbp ; call rax
0x00000000000bc063 : loope 0xbbff3 ; sub al, 0 ; ret
0x00000000000bdd2b : loope 0xbdda8 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000bdf3b : loope 0xbdfb6 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000bff02 : loope 0xbfef4 ; sub byte ptr [rcx - 0x76b70004], dh ; ret
0x00000000000bffe2 : loope 0xbffd4 ; mov al, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d4454 : loope 0xd4489 ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000db807 : loope 0xdb808 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000db806 : loope 0xdb809 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000eabd3 : loope 0xeac26 ; mov eax, esi ; call rax
0x00000000000f940b : loope 0xf9416 ; add byte ptr [rax], al ; add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000fd23b : loope 0xfd22c ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fda2d : loope 0xfda2c ; dec dword ptr [rax - 0x77] ; ret
0x0000000000106c8c : loopne 0x106cc7 ; clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001137c6 : loopne 0x113828 ; pop rbp ; pop r12 ; ret
0x0000000000115cf4 : loopne 0x115d56 ; pop rbp ; pop r12 ; ret
0x00000000001174d0 : loopne 0x117536 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000123d02 : loopne 0x123d69 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001247d5 : loopne 0x124802 ; add byte ptr [rbp + 6], dh ; ret
0x00000000001247d4 : loopne 0x124803 ; add byte ptr [rbp + 6], dh ; ret
0x000000000012485d : loopne 0x1248c8 ; nop ; call rax
0x0000000000012480 : loopne 0x124d0 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000012c88c : loopne 0x12c86b ; cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000142998 : loopne 0x142a12 ; cli ; call qword ptr [rax]
0x0000000000145571 : loopne 0x14556b ; jmp rsp
0x0000000000146d81 : loopne 0x146d7d ; call rsp
0x0000000000146d80 : loopne 0x146d7e ; call rsp
0x00000000001491f1 : loopne 0x1491f0 ; call rsp
0x000000000014b6ad : loopne 0x14b6b7 ; add byte ptr [rax + rbp*2 - 1], dh ; call rsp
0x000000000014c3b0 : loopne 0x14c3d1 ; hlt ; call qword ptr [rbx]
0x000000000014c400 : loopne 0x14c421 ; hlt ; call qword ptr [rbx]
0x000000000014c450 : loopne 0x14c471 ; hlt ; call qword ptr [rbx]
0x000000000014de40 : loopne 0x14de92 ; hlt ; call qword ptr [rax]
0x0000000000152190 : loopne 0x152193 ; cmc ; jmp rbx
0x000000000015f690 : loopne 0x15f6d8 ; clc ; call qword ptr [rbx]
0x000000000015f6f0 : loopne 0x15f738 ; clc ; call qword ptr [rbx]
0x00000000001660a0 : loopne 0x166052 ; stc ; call qword ptr [rbx]
0x0000000000166160 : loopne 0x166114 ; stc ; jmp qword ptr [rdi]
0x00000000001696c0 : loopne 0x16966c ; cli ; call qword ptr [rbx]
0x00000000001698c5 : loopne 0x1698ce ; add al, ch ; lodsd eax, dword ptr [rsi] ; cli ; jmp qword ptr [rdi]
0x000000000016eec0 : loopne 0x16ee65 ; sti ; jmp qword ptr [rdx]
0x0000000000171160 : loopne 0x1711d1 ; cld ; call rsi
0x0000000000070180 : loopne 0x7019f ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf
0x000000000000710b : loopne 0x718e ; ret
0x000000000000749c : loopne 0x7470 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; push rax ; ret 0x2a62
0x000000000000812e : loopne 0x80d8 ; clc ; retf 0x582c
0x000000000008dbfe : loopne 0x8dc14 ; add rax, rdx ; ret
0x0000000000090d5f : loopne 0x90d56 ; ret
0x0000000000092398 : loopne 0x9239e ; ret
0x00000000000929ae : loopne 0x929b3 ; ret
0x000000000009bf3d : loopne 0x9bf3f ; ret
0x000000000009c5a0 : loopne 0x9c5f4 ; add esp, ecx ; mov qword ptr [r13], r12 ; jmp 0x9c57e
0x000000000009eede : loopne 0x9eee6 ; add byte ptr [rax], al ; call 0x8b0f6
0x00000000000a1a7e : loopne 0xa1a18 ; mov eax, 4 ; ret
0x00000000000a6164 : loopne 0xa61c9 ; pop r12 ; pop r13 ; ret
0x00000000000aa2e8 : loopne 0xaa34f ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b2bed : loopne 0xb2c51 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b3afc : loopne 0xb3b00 ; add eax, 6 ; ret
0x00000000000b3b1c : loopne 0xb3b20 ; add eax, 7 ; ret
0x00000000000b3b3c : loopne 0xb3b40 ; add eax, 7 ; ret
0x00000000000b3b5c : loopne 0xb3b61 ; add eax, 4 ; ret
0x00000000000b3b7c : loopne 0xb3b81 ; add eax, 6 ; ret
0x00000000000b3b9c : loopne 0xb3ba1 ; add eax, 6 ; ret
0x00000000000b3bbc : loopne 0xb3bc0 ; add eax, 7 ; ret
0x00000000000b3bdc : loopne 0xb3be0 ; add eax, 7 ; ret
0x00000000000b3bfc : loopne 0xb3c00 ; add eax, 7 ; ret
0x00000000000b7494 : loopne 0xb74d0 ; leave ; mov rsi, rbx ; mov rdi, rbp ; call rax
0x00000000000be39a : loopne 0xbe3ed ; test eax, eax ; je 0xbe3ae ; mov rdi, r14 ; call rax
0x00000000000be44a : loopne 0xbe49d ; test eax, eax ; je 0xbe45e ; mov rdi, r14 ; call rax
0x00000000000be501 : loopne 0xbe554 ; test eax, eax ; je 0xbe515 ; mov rdi, r14 ; call rax
0x00000000000be5c1 : loopne 0xbe614 ; test eax, eax ; je 0xbe5d5 ; mov rdi, r14 ; call rax
0x00000000000c3bd0 : loopne 0xc3c23 ; test eax, eax ; je 0xc3be4 ; mov rdi, r14 ; call rax
0x00000000000c3c87 : loopne 0xc3cda ; test eax, eax ; je 0xc3c9b ; mov rdi, r14 ; call rax
0x000000000000c888 : loopne 0xc8da ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000d4011 : loopne 0xd4075 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d402d : loopne 0xd4091 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d7437 : loopne 0xd749d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d765f : loopne 0xd76c1 ; pop rbp ; pop r12 ; ret
0x00000000000e908c : loopne 0xe90a3 ; cli ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000ee580 : loopne 0xee56d ; stosb byte ptr [rdi], al ; retf -7
0x00000000000f92a6 : loopne 0xf92ab ; ret
0x00000000000f92c4 : loopne 0xf92c9 ; ret
0x00000000000f934c : loopne 0xf9352 ; add byte ptr [rax], al ; ret
0x00000000000f93dc : loopne 0xf93e6 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9d06 : loopne 0xf9d0b ; ret
0x00000000000f9d24 : loopne 0xf9d29 ; ret
0x00000000000f9dab : loopne 0xf9db1 ; add byte ptr [rax], al ; ret
0x00000000000faf06 : loopne 0xfaf6b ; pop r12 ; pop r13 ; ret
0x00000000000fb644 : loopne 0xfb6a9 ; pop r12 ; pop r13 ; ret
0x00000000000fbe46 : loopne 0xfbeab ; pop r12 ; pop r13 ; ret
0x00000000000fee94 : loopne 0xfeef9 ; pop r12 ; pop r13 ; ret
0x0000000000023ad6 : ltr di ; ret 0x13
0x000000000001439e : ltr dx ; ret 0x13
0x0000000000025e46 : ltr sp ; ret 0x13
0x000000000008db73 : mfence ; ret
0x00000000000daa5f : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001491ac : mov ah, 0x25 ; add al, byte ptr [rax] ; xor al, 0xdf ; sti ; call rsp
0x00000000001491ec : mov ah, 0x26 ; add al, byte ptr [rax] ; xor al, 0xe0 ; sti ; call rsp
0x00000000001463d4 : mov ah, 0x26 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x00000000001487c0 : mov ah, 0x26 ; sti ; call rsp
0x0000000000146614 : mov ah, 0x33 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, al ; call rsp
0x0000000000146800 : mov ah, 0x33 ; clc ; jmp rsp
0x000000000016ee04 : mov ah, 0x35 ; add al, byte ptr [rax] ; test al, 0x9f ; sti ; jmp qword ptr [rdx]
0x0000000000146694 : mov ah, 0x35 ; add dword ptr [rax], eax ; in al, 8 ; clc ; call rsp
0x00000000001466d4 : mov ah, 0x36 ; add dword ptr [rax], eax ; in al, 0xc ; clc ; call rsp
0x0000000000147738 : mov ah, 0x39 ; stc ; jmp rsp
0x00000000001467fc : mov ah, 0x3d ; add dword ptr [rax], eax ; mov ah, 0x33 ; clc ; jmp rsp
0x0000000000003a74 : mov ah, 0x3f ; push rax ; ret
0x0000000000149e28 : mov ah, 0x43 ; std ; jmp rsp
0x00000000001488d8 : mov ah, 0x45 ; sti ; call rsp
0x0000000000160604 : mov ah, 0x4d ; add dword ptr [rax], eax ; je 0x16060a ; call qword ptr [rdx]
0x000000000000026e : mov ah, 0x50 ; ret 0x6b05
0x0000000000149a24 : mov ah, 0x53 ; add al, byte ptr [rax] ; mov ah, 0xf7 ; cld ; jmp rsp
0x0000000000150e44 : mov ah, 0x54 ; add byte ptr [rax], al ; test al, 0x8e ; cmc ; jmp qword ptr [rax]
0x0000000000146c5c : mov ah, 0x5a ; add dword ptr [rax], eax ; xchg eax, esp ; mov cl, 0xf8 ; jmp rsp
0x0000000000004461 : mov ah, 0x5c ; fisub dword ptr [rsi] ; ret 0x5a81
0x0000000000147ac0 : mov ah, 0x60 ; stc ; call rsp
0x0000000000003b91 : mov ah, 0x63 ; retf
0x0000000000152c04 : mov ah, 0x73 ; add byte ptr [rax], al ; call 0x13152222
0x00000000000e46f8 : mov ah, 0x75 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bdf18 : mov ah, 0x7c ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000154204 : mov ah, 0x89 ; add byte ptr [rax], al ; call 0x13153841
0x00000000001475cc : mov ah, 0x89 ; add dword ptr [rax], eax ; je 0x147602 ; stc ; jmp rsp
0x000000000014792c : mov ah, 0x99 ; add dword ptr [rax], eax ; in al, 0x4d ; stc ; call rsp
0x000000000014796c : mov ah, 0x9a ; add dword ptr [rax], eax ; add al, 0x4f ; stc ; call rsp
0x00000000001443e0 : mov ah, 0x9e ; hlt ; jmp rsp
0x0000000000147a8c : mov ah, 0xa0 ; add dword ptr [rax], eax ; push rsp ; pop rsi ; stc ; jmp rsp
0x0000000000144ad4 : mov ah, 0xa3 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jae 0x144ad7 ; jmp rsp
0x000000000014aa64 : mov ah, 0xa4 ; add al, byte ptr [rax] ; test byte ptr [rsi + rdi*8], bh ; call rsp
0x0000000000007adb : mov ah, 0xb ; mov edx, 0xbfc411e0 ; ret
0x0000000000166b04 : mov ah, 0xb2 ; add dword ptr [rax], eax ; test al, 0xbb ; stc ; call qword ptr [rbx]
0x0000000000147e74 : mov ah, 0xb7 ; add dword ptr [rax], eax ; add al, 0xfc ; stc ; call rsp
0x0000000000157104 : mov ah, 0xb8 ; add byte ptr [rax], al ; clc ; ret
0x0000000000147ed4 : mov ah, 0xb9 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edx, edi ; jmp rsp
0x00000000001151c2 : mov ah, 0xbe ; and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r14 ; call rdx
0x00000000000082ac : mov ah, 0xc5 ; xchg eax, edx ; sar eax, -0x2e ; ret 0xed0c
0x00000000001481ac : mov ah, 0xc9 ; add dword ptr [rax], eax ; add al, 0x4c ; cli ; call rsp
0x00000000001481ec : mov ah, 0xca ; add dword ptr [rax], eax ; test byte ptr [rsi - 6], cl ; call rsp
0x0000000000149b40 : mov ah, 0xd ; std ; call rsp
0x000000000014b7b4 : mov ah, 0xe6 ; add al, byte ptr [rax] ; jae 0x14b7c1 ; call rsp
0x0000000000148624 : mov ah, 0xe7 ; add dword ptr [rax], eax ; mov ah, 0xff ; cli ; call rsp
0x000000000008e53d : mov ah, 0xe8 ; in eax, dx ; retf -1
0x000000000013458b : mov ah, 0xe8 ; lahf ; push 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001486c4 : mov ah, 0xeb ; add dword ptr [rax], eax ; add al, 0xe ; sti ; call rsp
0x000000000012deb9 : mov ah, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x000000000015da61 : mov ah, 0xf7 ; call qword ptr [rbx]
0x000000000015dc09 : mov ah, 0xf7 ; call qword ptr [rdx]
0x0000000000149a28 : mov ah, 0xf7 ; cld ; jmp rsp
0x000000000015da79 : mov ah, 0xf7 ; jmp qword ptr [rax]
0x0000000000005011 : mov ah, 0xf7 ; stosb byte ptr [rdi], al ; and ch, cl ; out 0x48, al ; insb byte ptr [rdi], dx ; retf 0x71a7
0x0000000000100748 : mov ah, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001662c9 : mov ah, 0xf9 ; jmp qword ptr [rdi]
0x0000000000148934 : mov ah, 0xfc ; add dword ptr [rax], eax ; je 0x14898c ; sti ; call rsp
0x0000000000148628 : mov ah, 0xff ; cli ; call rsp
0x0000000000147d95 : mov ah, 1 ; add byte ptr [rax + rdi*8 - 7], ah ; call rsp
0x0000000000166cbd : mov ah, 1 ; add byte ptr [rax - 0x40], al ; stc ; jmp qword ptr [rdx]
0x0000000000166cd5 : mov ah, 1 ; add byte ptr [rax - 0x40], bl ; stc ; jmp qword ptr [rdx]
0x0000000000166de5 : mov ah, 1 ; add byte ptr [rax], ch ; ret 0xfff9
0x0000000000149ae0 : mov ah, 5 ; std ; call rsp
0x00000000000b37f1 : mov ah, 8 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000147f58 : mov ah, 9 ; cli ; jmp rsp
0x0000000000139814 : mov al, 0 ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000f03ce : mov al, 0 ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x10], rax ; ret
0x00000000000f21a8 : mov al, 0 ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rax ; ret
0x000000000014baf0 : mov al, 0x15 ; hlt ; jmp qword ptr [rbx]
0x000000000014bc10 : mov al, 0x19 ; hlt ; call qword ptr [rdi]
0x000000000014f320 : mov al, 0x1e ; cmc ; jmp qword ptr [rax]
0x000000000014c980 : mov al, 0x23 ; hlt ; call qword ptr [rbx]
0x000000000014c950 : mov al, 0x23 ; hlt ; call qword ptr [rcx]
0x000000000012e7a6 : mov al, 0x29 ; ret 0x4589
0x000000000014d160 : mov al, 0x31 ; hlt ; call qword ptr [rdi]
0x00000000001069bc : mov al, 0x33 ; clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000014fcc0 : mov al, 0x58 ; cmc ; call qword ptr [rbx]
0x000000000014fca0 : mov al, 0x58 ; cmc ; call qword ptr [rdx]
0x00000000000042b8 : mov al, 0x73 ; retf 0x2f8
0x00000000001652e0 : mov al, 0x7b ; stc ; call qword ptr [rcx]
0x0000000000005974 : mov al, 0x87 ; ret 0x454a
0x00000000000e7fa7 : mov al, 0x89 ; retf 0x552b
0x0000000000165720 : mov al, 0x89 ; stc ; jmp qword ptr [rdi]
0x0000000000169690 : mov al, 0xa7 ; cli ; call qword ptr [rbx]
0x000000000015d540 : mov al, 0xad ; idiv edi ; ret
0x0000000000006134 : mov al, 0xad ; pop rbx ; ret
0x0000000000166070 : mov al, 0xad ; stc ; call qword ptr [rbx]
0x0000000000166310 : mov al, 0xb5 ; stc ; jmp qword ptr [rdi]
0x0000000000003560 : mov al, 0xb7 ; retf
0x00000000000de3bc : mov al, 0xb9 ; cli ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000166b20 : mov al, 0xbb ; stc ; jmp qword ptr [rax]
0x0000000000161440 : mov al, 0xce ; clc ; call qword ptr [rdx]
0x00000000000048f1 : mov al, 0xd ; retf
0x000000000012cabc : mov al, 0xd2 ; cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000051e2 : mov al, 0xd4 ; xchg eax, esi ; or al, 0xf4 ; shl byte ptr [rdx + 0x2f], 1 ; ret 0x5749
0x000000000014e570 : mov al, 0xd9 ; hlt ; jmp qword ptr [rsi]
0x0000000000004182 : mov al, 0xdd ; retf -0x7e6e
0x00000000000080f0 : mov al, 0xe7 ; mov al, 0xfc ; or al, 0x4b ; xchg eax, ebx ; retf 0x42b0
0x00000000000fd36c : mov al, 0xe8 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013ce31 : mov al, 0xf5 ; call rsp
0x000000000015d669 : mov al, 0xf7 ; call qword ptr [rbx]
0x000000000015d779 : mov al, 0xf7 ; jmp qword ptr [rax]
0x00000000001661a9 : mov al, 0xf9 ; jmp qword ptr [rdi]
0x000000000016faa9 : mov al, 0xfb ; call rcx
0x00000000000bffe5 : mov al, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000080f2 : mov al, 0xfc ; or al, 0x4b ; xchg eax, ebx ; retf 0x42b0
0x0000000000011eb0 : mov al, 0xfd ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000a0c0c : mov al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000000138f0 : mov al, 0xff ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000028bc8 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000705e : mov al, byte ptr [rbp + 0x2b] ; xor ch, byte ptr [rdx + 0x5a] ; jb 0x7057 ; retf
0x0000000000005f95 : mov al, byte ptr [rbp - 0x23] ; in al, dx ; ret
0x00000000000dba20 : mov al, ch ; retf -0x50c
0x0000000000144e85 : mov bh, 0 ; add ah, dh ; in eax, -0xb ; call rsp
0x000000000000686d : mov bh, 0x15 ; retf -0xff6
0x000000000008d0bc : mov bh, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c2895 : mov bh, 0x22 ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000052be : mov bh, 0x51 ; scasd eax, dword ptr [rdi] ; push rcx ; ret 0xb220
0x0000000000005b9b : mov bh, 0x5a ; hlt ; enter 0x52eb, 0x42 ; ret 0xb01
0x0000000000006f02 : mov bh, 0x62 ; out 0xec, al ; retf
0x0000000000004b05 : mov bh, 0x6d ; mov cl, 0x3f ; test dword ptr [rbx + 0x2d], eax ; ret 0xfda5
0x00000000000bdfc5 : mov bh, 0x80 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000003561 : mov bh, 0xcb ; or dh, byte ptr [rbp + 0x26] ; ret
0x00000000000d4996 : mov bh, 0xeb ; ret
0x000000000015dea1 : mov bh, 0xf7 ; call qword ptr [rbx]
0x00000000001004e4 : mov bh, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001663a1 : mov bh, 0xf9 ; jmp qword ptr [rdi]
0x0000000000166f5d : mov bh, 1 ; add al, dh ; ret
0x0000000000147e75 : mov bh, 1 ; add byte ptr [rsp + rdi*8], al ; stc ; call rsp
0x00000000001784aa : mov bh, 1 ; ret
0x00000000000b3581 : mov bh, 8 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000165769 : mov bh, cl ; jmp qword ptr [rdi]
0x000000000011335a : mov bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000014b091 : mov bh, dh ; jmp rsp
0x0000000000003b8d : mov bl, 0x15 ; retf -0x4bf4
0x00000000000bc98b : mov bl, 0x2c ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xc ; ret 0x8b48
0x0000000000004c4a : mov bl, 0x70 ; jle 0x4cc8 ; cwde ; ret 0x4cc6
0x000000000000355d : mov bl, 0x8f ; xchg eax, edx ; mov al, 0xb7 ; retf
0x0000000000003f93 : mov bl, 0xa9 ; ret
0x00000000000f19c0 : mov bl, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000015d971 : mov bl, 0xf7 ; call qword ptr [rbx]
0x0000000000100878 : mov bl, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000166281 : mov bl, 0xf9 ; jmp qword ptr [rdi]
0x0000000000169ab1 : mov bl, 0xfa ; call rdx
0x0000000000147d75 : mov bl, 1 ; add byte ptr [rcx], dl ; stc ; call rsp
0x00000000000a3ba0 : mov byte ptr [r14], r8b ; mov byte ptr [rdx], 0 ; ret
0x00000000000dd2c9 : mov byte ptr [r15], r9b ; ret 0x189
0x00000000000d2b13 : mov byte ptr [r8], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000a3bf7 : mov byte ptr [r9], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000e5a5b : mov byte ptr [rax + rcx*2], 0x39 ; ret 0x870f
0x0000000000124db7 : mov byte ptr [rax + rsi], 0 ; ret
0x00000000000fca01 : mov byte ptr [rax - 0x77], cl ; ret
0x000000000012cd07 : mov byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x3de8
0x000000000012cdb1 : mov byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x93e8
0x000000000012cd61 : mov byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xe3e8
0x0000000000157f3d : mov byte ptr [rax], 0 ; nop ; div dh ; call qword ptr [rbx]
0x000000000012548c : mov byte ptr [rax], 0 ; ret
0x000000000008c765 : mov byte ptr [rax], 1 ; ret
0x0000000000104079 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x30], rax ; ret
0x00000000000d2b14 : mov byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000000909 : mov byte ptr [rax], al ; ret 2
0x00000000000b40bc : mov byte ptr [rax], dh ; mov eax, 1 ; ret
0x00000000001269a3 : mov byte ptr [rax], dl ; mov rax, rbx ; pop rbx ; ret
0x00000000000b40bb : mov byte ptr [rax], sil ; mov eax, 1 ; ret
0x000000000009cb04 : mov byte ptr [rbp + 0x40], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099af8 : mov byte ptr [rbx + 0x108], 0x20 ; jmp 0x965a8
0x00000000000f9dd1 : mov byte ptr [rbx + 0xe4], 1 ; pop rbx ; ret
0x00000000000b231b : mov byte ptr [rbx + 8], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7fa3 : mov byte ptr [rbx + rcx*4 + 0x65], cl ; mov al, 0x89 ; retf 0x552b
0x00000000000b0d9e : mov byte ptr [rbx], 0 ; pop rbx ; ret
0x00000000001138d8 : mov byte ptr [rbx], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000000376b : mov byte ptr [rcx + 0x2b], 0x15 ; retf -0x742a
0x000000000008eed4 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000171588 : mov byte ptr [rcx - 4], bh ; call qword ptr [rdi]
0x00000000001263f5 : mov byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000016405d : mov byte ptr [rcx], al ; add byte ptr [rax], dl ; push rdx ; stc ; call qword ptr [rbx]
0x00000000000a3bf8 : mov byte ptr [rcx], al ; mov byte ptr [rdx], 0 ; ret
0x000000000012539c : mov byte ptr [rdi + 0x10], 0 ; mov qword ptr [rdi], rax ; ret
0x00000000000ddbcf : mov byte ptr [rdi + 0x10], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000104404 : mov byte ptr [rdi + 0x188], 0 ; ret
0x00000000000a5b62 : mov byte ptr [rdi + 0x50], al ; ret
0x0000000000102b82 : mov byte ptr [rdi + 0x6f], 0 ; ret
0x0000000000128c04 : mov byte ptr [rdi + 0x98], 0 ; ret
0x00000000000b21c7 : mov byte ptr [rdi + 8], 0 ; ret
0x000000000008cbca : mov byte ptr [rdi + rsi + 0x18], 0 ; ret
0x000000000008db70 : mov byte ptr [rdi], 0 ; mfence ; ret
0x000000000008db50 : mov byte ptr [rdi], 0 ; ret
0x000000000008cb0b : mov byte ptr [rdi], al ; ret
0x00000000000dd2ca : mov byte ptr [rdi], cl ; ret 0x189
0x000000000008cb50 : mov byte ptr [rdi], dl ; ret
0x0000000000125a6a : mov byte ptr [rdx + rsi], 0 ; pop rbx ; ret
0x00000000000a58e6 : mov byte ptr [rdx - 1], dh ; mov eax, esi ; ret
0x00000000000c909e : mov byte ptr [rdx - 1], dh ; ret
0x00000000000a58e5 : mov byte ptr [rdx - 1], sil ; mov eax, esi ; ret
0x00000000000c909d : mov byte ptr [rdx - 1], sil ; ret
0x000000000012550f : mov byte ptr [rdx], 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a3ba3 : mov byte ptr [rdx], 0 ; ret
0x0000000000091ac9 : mov byte ptr [rdx], bh ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret 0x3948
0x000000000014bdf8 : mov byte ptr [rdx], bl ; hlt ; call qword ptr [rcx]
0x000000000012428f : mov byte ptr [rdx], dh ; add qword ptr [rdi + 0x28], 1 ; ret
0x00000000000b4078 : mov byte ptr [rdx], dh ; mov eax, 1 ; ret
0x000000000012428e : mov byte ptr [rdx], sil ; add qword ptr [rdi + 0x28], 1 ; ret
0x00000000000b4077 : mov byte ptr [rdx], sil ; mov eax, 1 ; ret
0x000000000008ca28 : mov byte ptr [rip + 0x2f8131], 1 ; pop rbp ; ret
0x0000000000125411 : mov byte ptr [rsi + 0x10], 0 ; ret
0x00000000000043f8 : mov byte ptr [rsi + 0x399578c9], bh ; xchg eax, ebx ; cdq ; ret 0x5414
0x00000000000c7580 : mov byte ptr [rsi - 1], cl ; cmp rax, rsi ; jne 0xc7579 ; ret
0x00000000000c75c0 : mov byte ptr [rsi - 1], cl ; cmp rax, rsi ; jne 0xc75b9 ; ret
0x0000000000117594 : mov byte ptr [rsi - 9], al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a3bc6 : mov byte ptr [rsi], 0x66 ; mov byte ptr [rdx], 0 ; ret
0x00000000000a3ba1 : mov byte ptr [rsi], al ; mov byte ptr [rdx], 0 ; ret
0x00000000000e0cac : mov byte ptr [rsp + 0x40], cl ; mov rdi, r13 ; call rax
0x00000000000e09e7 : mov byte ptr [rsp + 0x40], dl ; mov rdi, rax ; call rdx
0x00000000000e09e6 : mov byte ptr [rsp + 0x40], r10b ; mov rdi, rax ; call rdx
0x000000000014c1e8 : mov byte ptr [rsp + rsi*8], bl ; call qword ptr [rdx]
0x0000000000156e45 : mov ch, 0 ; add al, bl ; ret
0x0000000000156e15 : mov ch, 0 ; add al, cl ; ret
0x0000000000156e2d : mov ch, 0 ; add al, dl ; ret
0x0000000000004933 : mov ch, 0x14 ; add cl, byte ptr [rax] ; nop ; ret
0x0000000000003d2d : mov ch, 0x33 ; in eax, -0x17 ; retf
0x00000000001082f7 : mov ch, 0x39 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004ed1 : mov ch, 0x64 ; retf 0x1f43
0x00000000000c1f77 : mov ch, 0x74 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000005774 : mov ch, 0x75 ; jrcxz 0x57eb ; ret
0x00000000000075ea : mov ch, 0x85 ; mov dword ptr [rax - 0x5a], esp ; ret 0xc9d1
0x00000000000052bc : mov ch, 0xba ; mov bh, 0x51 ; scasd eax, dword ptr [rdi] ; push rcx ; ret 0xb220
0x000000000012e0f7 : mov ch, 0xdb ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001340d1 : mov ch, 0xe8 ; pop rcx ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000138247 : mov ch, 0xf ; sti ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x0000000000166311 : mov ch, 0xf9 ; jmp qword ptr [rdi]
0x00000000000bfafd : mov ch, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000147de5 : mov ch, 1 ; add ah, dl ; stc ; stc ; jmp rsp
0x00000000000b36d1 : mov ch, 8 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000fdb81 : mov ch, 9 ; retf 0x5789
0x00000000000bc054 : mov ch, byte ptr [rax + rax] ; ret
0x0000000000123f2a : mov ch, cl ; and eax, 0x48087500 ; mov eax, edi ; ret
0x000000000013349c : mov ch, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e7aab : mov cl, 0x13 ; cli ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000d75f4 : mov cl, 0x2a ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000004b07 : mov cl, 0x3f ; test dword ptr [rbx + 0x2d], eax ; ret 0xfda5
0x000000000000790f : mov cl, 0xc0 ; ret
0x00000000000d474e : mov cl, 0xeb ; ret 0x1f0f
0x0000000000151559 : mov cl, 0xf5 ; call rcx
0x0000000000100aca : mov cl, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000146c61 : mov cl, 0xf8 ; jmp rsp
0x00000000001661f1 : mov cl, 0xf9 ; jmp qword ptr [rdi]
0x00000000000bff05 : mov cl, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001123f6 : mov cl, 0xfc ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x00000000001656d9 : mov cl, bh ; jmp qword ptr [rdi]
0x00000000000ab9d1 : mov cl, byte ptr [rcx + rax - 0x2f] ; jmp rcx
0x00000000000d73b3 : mov cs, word ptr [rax + 0x39] ; ret 0x1f76
0x0000000000156edd : mov dh, 0 ; add al, al ; ret
0x0000000000156e65 : mov dh, 0 ; add al, bl ; ret
0x0000000000156eb5 : mov dh, 0 ; add al, cl ; ret
0x0000000000156e8d : mov dh, 0 ; add al, dl ; ret
0x000000000009280b : mov dh, 0 ; add byte ptr [rax], al ; ret
0x00000000000de5e7 : mov dh, 0 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000012408f : mov dh, 0 ; pop rbx ; ret
0x00000000000a592b : mov dh, 0 ; ret
0x0000000000108376 : mov dh, 0x10 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000112af7 : mov dh, 0x14 ; xor bh, byte ptr [rax] ; ret 0x940f
0x00000000001269a1 : mov dh, 0x16 ; mov byte ptr [rax], dl ; mov rax, rbx ; pop rbx ; ret
0x00000000000c6876 : mov dh, 0x2b ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000010b72a : mov dh, 0x31 ; ror byte ptr [rdi], cl ; mov esi, 0xdf8948f0 ; call rcx
0x0000000000123b12 : mov dh, 0x36 ; mov rdi, rbp ; call rax
0x0000000000124209 : mov dh, 0x40 ; push rbx ; ret
0x00000000000d8d75 : mov dh, 0x40 ; ret
0x00000000000f94dc : mov dh, 0x44 ; xor edi, dword ptr [rcx] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010ecf0 : mov dh, 0x4d ; and byte ptr [rax], bh ; ret 0x940f
0x00000000000a1f31 : mov dh, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000053c7 : mov dh, 0x5c ; retf -0x20ef
0x0000000000093ffa : mov dh, 0x6a ; add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x0000000000104c90 : mov dh, 0x84 ; or al, 0x39 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x3f7c
0x00000000000f934a : mov dh, 0x87 ; loopne 0xf9354 ; add byte ptr [rax], al ; ret
0x000000000008f3d4 : mov dh, 0x8c ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000005515 : mov dh, 0xa2 ; out dx, al ; clc ; retf
0x0000000000005182 : mov dh, 0xa8 ; push 0x1b ; jge 0x5131 ; ret
0x0000000000005181 : mov dh, 0xa8 ; push 0x1b ; jge 0x5132 ; ret
0x000000000012e176 : mov dh, 0xb2 ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012d876 : mov dh, 0xbb ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004c48 : mov dh, 0xc ; mov bl, 0x70 ; jle 0x4cca ; cwde ; ret 0x4cc6
0x00000000000b3938 : mov dh, 0xc0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000c13b3 : mov dh, 0xc0 ; movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x000000000013063f : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000943a7 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000095617 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ee1fe : mov dh, 0xc0 ; neg eax ; ret
0x00000000000ab215 : mov dh, 0xc0 ; or eax, edx ; ret
0x000000000009299a : mov dh, 0xc0 ; ret
0x000000000012e545 : mov dh, 0xc9 ; call 0x8af64
0x00000000000da6d5 : mov dh, 0xc9 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da6e5 : mov dh, 0xc9 ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000008eecf : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000000055ac : mov dh, 0xce ; ret 0x9e0c
0x00000000000de7ff : mov dh, 0xd2 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000095978 : mov dh, 0xd2 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000110e06 : mov dh, 0xd7 ; cld ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x0000000000007dfe : mov dh, 0xdd ; adc eax, 0xe4430c98 ; ret
0x0000000000004af5 : mov dh, 0xdd ; xchg eax, ebx ; jbe 0x4b4c ; retf -0x10e2
0x0000000000124227 : mov dh, 0xf6 ; jmp rdx
0x00000000000c7556 : mov dh, 0xf6 ; mov eax, dword ptr [rax + rsi*4] ; ret
0x00000000000c7af2 : mov dh, 0xf6 ; mov eax, dword ptr [rdi + rsi*4 + 0x9c] ; ret
0x0000000000100619 : mov dh, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000166359 : mov dh, 0xf9 ; jmp qword ptr [rdi]
0x000000000014b199 : mov dh, 0xfe ; jmp rsp
0x0000000000147e35 : mov dh, 1 ; add ah, dh ; cli ; stc ; call rsp
0x0000000000166f45 : mov dh, 1 ; add al, bl ; ret
0x0000000000166ecd : mov dh, 1 ; add byte ptr [rax], al ; ret
0x000000000008ca51 : mov dh, 6 ; cmp byte ptr [rdi], al ; sete al ; ret
0x00000000000d2b11 : mov dh, 6 ; mov byte ptr [r8], al ; mov rax, rbx ; pop rbx ; ret
0x000000000008cb09 : mov dh, 6 ; mov byte ptr [rdi], al ; ret
0x00000000000fd801 : mov dh, 7 ; ret
0x00000000000b35da : mov dh, 8 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000113165 : mov dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000015b3e1 : mov dh, bh ; jmp qword ptr [rax]
0x000000000008fc32 : mov dh, byte ptr [rdi + rdi*8 - 0x2776b701] ; pop rbx ; ret
0x0000000000144b89 : mov dh, ch ; call rsp
0x000000000008d0bb : mov dil, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000b3580 : mov dil, 8 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000144d6d : mov dl, 0 ; add byte ptr [rdx + rdx*8], ah ; cmc ; call rsp
0x0000000000003e71 : mov dl, 0x39 ; xchg dword ptr [rcx + rbp*4], eax ; cmovno edx, dword ptr [rsi + rsi*4] ; retf -0x4fea
0x00000000000086a3 : mov dl, 0x5a ; leave ; xchg eax, edi ; retf -0x547d
0x0000000000006442 : mov dl, 0x78 ; retf 0x6613
0x000000000013227a : mov dl, 0x8d ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001744f8 : mov dl, 0xa ; ret
0x00000000000077b6 : mov dl, 0xaf ; jge 0x77f0 ; ret
0x0000000000006a6c : mov dl, 0xcb ; add ah, 0xb2 ; retf
0x00000000001515b9 : mov dl, 0xf5 ; call rcx
0x000000000012e177 : mov dl, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000166239 : mov dl, 0xf9 ; jmp qword ptr [rdi]
0x000000000014a0b9 : mov dl, 0xfd ; call rsp
0x00000000000b09f4 : mov dl, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000003b0e : mov dl, 0xfe ; retf
0x000000000016a078 : mov dl, al ; cli ; call qword ptr [rcx]
0x0000000000166e78 : mov dl, al ; stc ; jmp qword ptr [rdx]
0x000000000013cbe9 : mov dr0, ebp ; jmp qword ptr [rax]
0x0000000000127bae : mov dr0, word ptr [rdi] ; idiv bh ; add rsp, 0x18 ; ret
0x0000000000165889 : mov dr1, ecx ; jmp qword ptr [rdi]
0x000000000000443c : mov dr1, edi ; adc esp, esp ; push rdi ; retf
0x00000000000d5c12 : mov dword ptr [r8], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000b3f2c : mov dword ptr [r8], esi ; add qword ptr [rdi], 2 ; ret
0x00000000000d362d : mov dword ptr [rax + 0x10], 0 ; pop rbx ; ret
0x00000000000921a4 : mov dword ptr [rax + 0x10], ecx ; ret
0x00000000000a7971 : mov dword ptr [rax + 0x10], edi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000b8766 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rdx], rsi ; ret
0x00000000000a79d1 : mov dword ptr [rax + 0x18], edi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f4068 : mov dword ptr [rax + 0x8c], edx ; pop rbx ; ret
0x0000000000094eb9 : mov dword ptr [rax + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000921a0 : mov dword ptr [rax + 8], edx ; mov qword ptr [rax + 0x10], rcx ; ret
0x000000000008d5b6 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0x8d5b1 ; ret
0x000000000008d6c6 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0x8d6c1 ; ret
0x000000000008d746 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0x8d741 ; ret
0x00000000000a11e6 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0xa11e1 ; ret
0x00000000000a12f6 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0xa12f1 ; ret
0x00000000000a1376 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0xa1371 ; ret
0x00000000000a1486 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0xa1481 ; ret
0x00000000000a1506 : mov dword ptr [rax + 8], edx ; mov rax, rdx ; jne 0xa1501 ; ret
0x000000000008d5eb : mov dword ptr [rax + 8], edx ; ret
0x000000000008d51f : mov dword ptr [rax + 8], esi ; ret
0x00000000001388b7 : mov dword ptr [rax + rsi*4], 0 ; ret
0x00000000000075ec : mov dword ptr [rax - 0x5a], esp ; ret 0xc9d1
0x0000000000101393 : mov dword ptr [rax - 0x76b70008], ebp ; ret
0x00000000001058f0 : mov dword ptr [rax - 0x77], ecx ; ret
0x00000000000d3b5a : mov dword ptr [rax - 8], 0xffffffff ; pop rbx ; ret
0x00000000000d3b37 : mov dword ptr [rax - 8], 0xffffffff ; ret
0x000000000013937b : mov dword ptr [rax], 0 ; ret
0x0000000000157f55 : mov dword ptr [rax], 0xf6f69800 ; call qword ptr [rdx]
0x0000000000027968 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xa8
0x00000000001445f5 : mov dword ptr [rax], eax ; add byte ptr [rbp + rbp*4 - 0xc], dh ; call rsp
0x00000000000d5c13 : mov dword ptr [rax], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000008e754 : mov dword ptr [rax], ecx ; jmp 0x8e726
0x000000000009d839 : mov dword ptr [rax], ecx ; mov eax, 3 ; ret
0x000000000008d5d0 : mov dword ptr [rax], edi ; mov qword ptr [rsi + 8], rdi ; ret
0x00000000000a1cfb : mov dword ptr [rax], edx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009d851 : mov dword ptr [rax], edx ; mov eax, 3 ; ret
0x000000000009c869 : mov dword ptr [rax], edx ; mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bad0d : mov dword ptr [rax], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c1ca : mov dword ptr [rax], edx ; pop rbx ; ret
0x00000000000b3f2d : mov dword ptr [rax], esi ; add qword ptr [rdi], 2 ; ret
0x000000000008ec39 : mov dword ptr [rax], esi ; mov rax, qword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x000000000008d519 : mov dword ptr [rax], esi ; mov rax, qword ptr [rsi] ; mov qword ptr [rax + 8], rsi ; ret
0x000000000009c97d : mov dword ptr [rax], esi ; ret
0x000000000008ec09 : mov dword ptr [rax], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000cc8f1 : mov dword ptr [rbp + 0x40], edx ; mov qword ptr [rbx + 0x40], rax ; call 0x89329
0x000000000009e68d : mov dword ptr [rbp - 0x140], eax ; call 0x8b0f8
0x00000000000be1e9 : mov dword ptr [rbp - 0x68], edx ; mov rdi, rbx ; call rcx
0x00000000000d565d : mov dword ptr [rbp], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000bd21d : mov dword ptr [rbp], eax ; call 0x89cf5
0x00000000000bb3b8 : mov dword ptr [rbp], eax ; je 0xbb3f7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5708 : mov dword ptr [rbp], eax ; je 0xd5747 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d3ca9 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009c5a5 : mov dword ptr [rbp], esp ; jmp 0x9c579
0x000000000009da51 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009d9e8 : mov dword ptr [rbx + 0x10], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fa91f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f206c : mov dword ptr [rbx + 0x10], ecx ; jmp 0xf2038
0x00000000000f3eee : mov dword ptr [rbx + 0x10], ecx ; jmp 0xf3eba
0x0000000000123b77 : mov dword ptr [rbx + 0x10], edx ; pop rbx ; ret
0x00000000000dda51 : mov dword ptr [rbx + 0x18], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cb3b0 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fabf5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000953d6 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; ret
0x00000000000a62b5 : mov dword ptr [rbx + 0x18], esi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f9a4f : mov dword ptr [rbx + 0x20], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c7692 : mov dword ptr [rbx + 0x30], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6274 : mov dword ptr [rbx + 0x30], ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000928ec : mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x00000000000cc8f5 : mov dword ptr [rbx + 0x40], eax ; call 0x89325
0x00000000000ee18c : mov dword ptr [rbx + 0x48], 0xffffffff ; pop rbx ; ret
0x00000000000cafc0 : mov dword ptr [rbx + 0x48], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ee13d : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000000926db : mov dword ptr [rbx + 0x48], ebp ; pop rbx ; pop rbp ; ret
0x00000000000ee4d7 : mov dword ptr [rbx + 0x48], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000094fa2 : mov dword ptr [rbx + 0x58], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cc59e : mov dword ptr [rbx + 0x60], eax ; mov qword ptr [rbx], rdx ; call 0x89008
0x00000000000ce631 : mov dword ptr [rbx + 0x68], eax ; call 0x8b0f5
0x00000000000f0a50 : mov dword ptr [rbx + 0x98], eax ; pop rbx ; ret
0x00000000000fea3b : mov dword ptr [rbx + 8], 0 ; call 0x8ac89
0x00000000000cf9b0 : mov dword ptr [rbx + 8], 0 ; call 0x8bcb9
0x00000000000cd09e : mov dword ptr [rbx + 8], eax ; call 0x89395
0x00000000001135a2 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx], rdx ; pop rbx ; ret
0x00000000000de5e9 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000a71a9 : mov dword ptr [rbx + rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008fefb : mov dword ptr [rbx - 0x18], eax ; lea rax, qword ptr [rbx - 0x80] ; pop rbx ; ret
0x0000000000101893 : mov dword ptr [rbx - 0x76b70008], esp ; ret
0x000000000001d078 : mov dword ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000008fada : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000bb796 : mov dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b28e2 : mov dword ptr [rbx], eax ; je 0xb28ed ; pop rbx ; ret
0x00000000000d4f99 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000009c86c : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a57b5 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000107236 : mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a6f81 : mov dword ptr [rbx], ebp ; mov r12, rax ; jmp 0xa6f59
0x00000000000b59d3 : mov dword ptr [rbx], ecx ; jne 0xb5a0f ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cc5a2 : mov dword ptr [rbx], edx ; call 0x89004
0x00000000000b4284 : mov dword ptr [rbx], edx ; jne 0xb4297 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000b4304 : mov dword ptr [rbx], edx ; jne 0xb4317 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001135a6 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x00000000000928e9 : mov dword ptr [rcx + rsi*8], eax ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x00000000000c7b25 : mov dword ptr [rcx - 4], eax ; cmp rax, rsi ; jne 0xc7b19 ; ret
0x00000000000013d8 : mov dword ptr [rcx], 0x1ca0000 ; add byte ptr [rax], al ; retf
0x00000000000a8025 : mov dword ptr [rcx], 1 ; ret
0x00000000001263a2 : mov dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001642f5 : mov dword ptr [rcx], eax ; add byte ptr [rax], ch ; push rsi ; stc ; call rsp
0x00000000001475cd : mov dword ptr [rcx], eax ; add byte ptr [rcx + rbp - 7], dh ; jmp rsp
0x00000000000d35b0 : mov dword ptr [rdi + 0x10], 0 ; ret
0x00000000000d35a0 : mov dword ptr [rdi + 0x10], 0xffffffff ; ret
0x00000000000a58e2 : mov dword ptr [rdi + 0x10], eax ; mov byte ptr [rdx - 1], sil ; mov eax, esi ; ret
0x00000000000cb2ea : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000000f2202 : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000000f03d3 : mov dword ptr [rdi + 0x10], eax ; ret
0x0000000000124375 : mov dword ptr [rdi + 0x10], edx ; mov qword ptr [rdi + 0x18], rcx ; ret
0x0000000000124205 : mov dword ptr [rdi + 0x10], edx ; movzx eax, byte ptr [rax - 1] ; ret
0x00000000000a58f5 : mov dword ptr [rdi + 0x10], edx ; ret
0x0000000000124da1 : mov dword ptr [rdi + 0x10], esi ; ret
0x00000000000b8937 : mov dword ptr [rdi + 0x18], 0 ; ret
0x00000000000b90c1 : mov dword ptr [rdi + 0x18], eax ; ret
0x0000000000124379 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000f2206 : mov dword ptr [rdi + 0x18], edx ; ret
0x00000000000f923d : mov dword ptr [rdi + 0x20], esi ; jne 0xf9253 ; ret
0x00000000000f9c9d : mov dword ptr [rdi + 0x20], esi ; jne 0xf9cb3 ; ret
0x00000000001243c5 : mov dword ptr [rdi + 0x20], esi ; mov qword ptr [rdi + 0x30], rdx ; ret
0x00000000000b9202 : mov dword ptr [rdi + 0x210], edx ; ret
0x00000000000cef9b : mov dword ptr [rdi + 0x28], eax ; ret
0x00000000000cb336 : mov dword ptr [rdi + 0x28], ecx ; ret
0x000000000008ec86 : mov dword ptr [rdi + 0x28], edx ; add rsp, 8 ; ret
0x00000000001249e3 : mov dword ptr [rdi + 0x28], edx ; ret
0x00000000000f16d4 : mov dword ptr [rdi + 0x30], 0 ; ret
0x00000000000f1709 : mov dword ptr [rdi + 0x30], eax ; ret
0x0000000000119522 : mov dword ptr [rdi + 0x30], edx ; ret
0x00000000001038a7 : mov dword ptr [rdi + 0x48], eax ; ret
0x00000000000f9308 : mov dword ptr [rdi + 0xd8], esi ; ret
0x00000000000f9591 : mov dword ptr [rdi + 0xe8], esi ; ret
0x00000000000faa93 : mov dword ptr [rdi + 8], 0 ; ret
0x0000000000126a0c : mov dword ptr [rdi + 8], eax ; mov qword ptr [rsi + 8], rdx ; ret
0x00000000000ba7ec : mov dword ptr [rdi + 8], eax ; mov rax, qword ptr [r8] ; ret
0x00000000000a7975 : mov dword ptr [rdi + 8], eax ; ret
0x000000000008d53e : mov dword ptr [rdi + 8], edi ; mov qword ptr [rdi], rdi ; ret
0x000000000009bff5 : mov dword ptr [rdi + 8], edx ; ret
0x0000000000124db4 : mov dword ptr [rdi + 8], esi ; mov byte ptr [rax + rsi], 0 ; ret
0x0000000000124d61 : mov dword ptr [rdi + 8], esi ; ret
0x000000000011300f : mov dword ptr [rdi + rax], edx ; ret
0x00000000000fdbbe : mov dword ptr [rdi + rdx + 0x10], esi ; ret
0x00000000000fdb9e : mov dword ptr [rdi + rdx + 8], esi ; ret
0x000000000008d0ba : mov dword ptr [rdi + rsi*4 + 0x18], 0 ; ret
0x000000000008fa61 : mov dword ptr [rdi], 0 ; ret
0x0000000000001d08 : mov dword ptr [rdi], 0x7c90000 ; add byte ptr [rax], al ; retf
0x00000000000a15ac : mov dword ptr [rdi], eax ; jne 0xa15bf ; add dword ptr [rax], 1 ; ret
0x00000000000d2b63 : mov dword ptr [rdi], eax ; mov qword ptr [rsi], rdx ; ret
0x000000000008cffa : mov dword ptr [rdi], eax ; ret
0x00000000000a1f88 : mov dword ptr [rdi], eax ; sub rax, 1 ; ret
0x00000000001038a2 : mov dword ptr [rdi], eax ; xor eax, eax ; mov word ptr [rdi + 0x48], ax ; ret
0x00000000000b3e34 : mov dword ptr [rdi], ecx ; ret
0x000000000008d542 : mov dword ptr [rdi], edi ; ret
0x000000000008fb17 : mov dword ptr [rdi], edx ; mov qword ptr [rsi], rax ; ret
0x000000000008d040 : mov dword ptr [rdi], edx ; ret
0x000000000008cbc8 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + rsi + 0x18], 0 ; ret
0x00000000000a15c1 : mov dword ptr [rdi], esi ; ret
0x0000000000092c0f : mov dword ptr [rdx + 0x18], eax ; mov eax, 1 ; ret
0x000000000009249e : mov dword ptr [rdx + 0x18], edx ; ret
0x00000000000925bf : mov dword ptr [rdx + 0x48], edx ; mov rax, rdx ; ret
0x0000000000092458 : mov dword ptr [rdx + 8], eax ; mov rax, r10 ; ret
0x000000000008d593 : mov dword ptr [rdx + 8], ecx ; mov qword ptr [rsi + 8], rax ; ret
0x000000000013961a : mov dword ptr [rdx + rsi*4], 0 ; pop rbx ; ret
0x00000000000c912e : mov dword ptr [rdx - 4], esi ; ret
0x000000000009250f : mov dword ptr [rdx], 5 ; mov rax, rdx ; ret
0x000000000008c301 : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000008d5e8 : mov dword ptr [rdx], eax ; mov qword ptr [rax + 8], rdx ; ret
0x000000000008ef04 : mov dword ptr [rdx], eax ; ret
0x00000000000b876a : mov dword ptr [rdx], esi ; ret
0x00000000000bacb6 : mov dword ptr [rip + 0x2ccc24], edx ; ret
0x0000000000138fd1 : mov dword ptr [rsi + 0x10], 0 ; ret
0x000000000010407e : mov dword ptr [rsi + 0x30], eax ; ret
0x0000000000104174 : mov dword ptr [rsi + 0x58], eax ; ret
0x000000000008d597 : mov dword ptr [rsi + 8], eax ; ret
0x000000000008d5d3 : mov dword ptr [rsi + 8], edi ; ret
0x0000000000126a10 : mov dword ptr [rsi + 8], edx ; ret
0x000000000008d563 : mov dword ptr [rsi + 8], esi ; mov qword ptr [rsi], rsi ; ret
0x00000000000a7a92 : mov dword ptr [rsi], 1 ; ret
0x000000000008fb1a : mov dword ptr [rsi], eax ; ret
0x000000000009c97a : mov dword ptr [rsi], edx ; mov qword ptr [rax], rsi ; ret
0x00000000000d2b66 : mov dword ptr [rsi], edx ; ret
0x000000000008d567 : mov dword ptr [rsi], esi ; ret
0x000000000010cc29 : mov dword ptr [rsp + 0x10], ebp ; call 0x88ed6
0x00000000000c13f9 : mov dword ptr [rsp + 0x10], ebx ; pop rbx ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000c1429 : mov dword ptr [rsp + 0x10], ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000c13e1 : mov dword ptr [rsp + 0x10], ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000c1411 : mov dword ptr [rsp + 0x10], ebx ; pop rbx ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x00000000000c13c9 : mov dword ptr [rsp + 0x10], ebx ; pop rbx ; mov rax, qword ptr [rax + 0x38] ; jmp rax
0x00000000000dc2dd : mov dword ptr [rsp + 0x10], ecx ; call rax
0x00000000000e01d9 : mov dword ptr [rsp + 0x10], edx ; mov rdi, rax ; call r11
0x00000000000bd1ed : mov dword ptr [rsp + 0x28], eax ; xor eax, eax ; call 0x89438
0x00000000000ae038 : mov dword ptr [rsp + 0x38], eax ; mov esi, dword ptr [r15] ; call 0x8ab49
0x000000000009eedb : mov dword ptr [rsp + 0xe0], eax ; call 0x8b0f9
0x000000000009ed30 : mov dword ptr [rsp + 8], eax ; call 0x8b7f6
0x0000000000105d59 : mov dword ptr [rsp + 8], ecx ; mov rdi, rcx ; call rax
0x00000000000bd2a4 : mov dword ptr [rsp + 8], edx ; call 0x89d76
0x0000000000104449 : mov dword ptr [rsp + 8], edx ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000104448 : mov dword ptr [rsp + 8], r10d ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000010644f : mov dword ptr [rsp], eax ; call 0x1026f5
0x000000000012bcba : mov dword ptr [rsp], eax ; call 0x128735
0x0000000000112211 : mov dword ptr [rsp], eax ; call 0xde4f5
0x0000000000104d82 : mov dword ptr [rsp], ecx ; xor edx, edx ; mov rdi, r12 ; call rax
0x00000000001642f4 : mov dword ptr fs:[rcx], eax ; add byte ptr [rax], ch ; push rsi ; stc ; call rsp
0x00000000000a10f4 : mov eax, 0 ; cmove rax, rdi ; ret
0x00000000000a1ae0 : mov eax, 0x10 ; ret
0x00000000000a1ad0 : mov eax, 0x20 ; ret
0x00000000000701f8 : mov eax, 0x37cb ; add byte ptr [rax], al ; add al, bh ; retf
0x00000000000a1ac0 : mov eax, 0x3f ; ret
0x00000000000b25b6 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000000050a3 : mov eax, 0x5f366fc6 ; ret
0x00000000001390de : mov eax, 0x78b4890 ; ret
0x00000000000a0214 : mov eax, 0x84222325 ; in al, -0x64 ; retf
0x00000000000b33f5 : mov eax, 0x89480008 ; ret 0x8348
0x00000000001003f3 : mov eax, 0x8948fff8 ; ret
0x00000000000ee8f6 : mov eax, 0x8948fff9 ; out dx, eax ; call 0x8b3b8
0x00000000000bfdc2 : mov eax, 0x8948fffc ; ret
0x00000000000e74c5 : mov eax, 0x89fff883 ; ret 0xb8
0x00000000000de4ad : mov eax, 0x8b48fffa ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000a3bc5 : mov eax, 0xc66606c6 ; add al, byte ptr [rax] ; ret
0x00000000001670f5 : mov eax, 0xc7480001 ; stc ; call qword ptr [rax]
0x00000000001670dd : mov eax, 0xc7500001 ; stc ; call qword ptr [rax]
0x0000000000004e12 : mov eax, 0xde3a7577 ; ret
0x0000000000125660 : mov eax, 0xf ; ret
0x0000000000144ead : mov eax, 0xf8c40000 ; cmc ; call rsp
0x000000000009bf40 : mov eax, 0xfffffffd ; ret
0x00000000000b3ef0 : mov eax, 0xfffffffe ; ret
0x000000000012496e : mov eax, 0xffffffff ; je 0x124960 ; jmp rdx
0x0000000000100498 : mov eax, 0xffffffff ; jmp 0x100468
0x00000000000fd408 : mov eax, 0xffffffff ; jmp 0xfd3d8
0x00000000001241be : mov eax, 0xffffffff ; jne 0x1241d8 ; ret
0x000000000012425e : mov eax, 0xffffffff ; jne 0x124278 ; ret
0x000000000012490e : mov eax, 0xffffffff ; jne 0x124928 ; ret
0x00000000001249ae : mov eax, 0xffffffff ; jne 0x1249c8 ; ret
0x00000000001249fe : mov eax, 0xffffffff ; jne 0x124a18 ; ret
0x0000000000123b7c : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000924b8 : mov eax, 0xffffffff ; ret
0x00000000000b3f69 : mov eax, 1 ; add qword ptr [rdi], 2 ; ret
0x00000000000b418c : mov eax, 1 ; add qword ptr [rdi], 3 ; ret
0x00000000000b7c21 : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000a19f8 : mov eax, 1 ; jmp 0xa19d0
0x00000000000b3e2e : mov eax, 1 ; mov qword ptr [rdi], rcx ; ret
0x00000000000b5795 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000b43f8 : mov eax, 1 ; pop rbx ; ret
0x0000000000090040 : mov eax, 1 ; ret
0x000000000008db60 : mov eax, 1 ; xchg byte ptr [rdi], al ; ret
0x00000000000b57c1 : mov eax, 2 ; pop rbp ; pop r12 ; ret
0x00000000000b43df : mov eax, 2 ; pop rbx ; ret
0x00000000000a1ab0 : mov eax, 2 ; ret
0x000000000009d83b : mov eax, 3 ; ret
0x00000000000a1a80 : mov eax, 4 ; ret
0x0000000000090bcd : mov eax, 6 ; pop rbx ; pop rbp ; ret
0x00000000000a1aa0 : mov eax, 8 ; ret
0x0000000000102996 : mov eax, dr1 ; dec dword ptr [rax + 0x39] ; ret
0x000000000008dc66 : mov eax, dword ptr [rax + 0x10] ; jmp rax
0x00000000000c13ff : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000103fbc : mov eax, dword ptr [rax + 0x18] ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000b77fc : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; jne 0xb7801 ; ret
0x00000000000b788c : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; jne 0xb7891 ; ret
0x00000000000a5b3a : mov eax, dword ptr [rax + 0x20] ; add rsp, 0x18 ; jmp rax
0x0000000000090a80 : mov eax, dword ptr [rax + 0x20] ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000000c142f : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000e3914 : mov eax, dword ptr [rax + 0x24] ; ret
0x00000000000c13e7 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000103fdc : mov eax, dword ptr [rax + 0x28] ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000e3924 : mov eax, dword ptr [rax + 0x28] ; ret
0x00000000000c1417 : mov eax, dword ptr [rax + 0x30] ; jmp rax
0x00000000000c13cf : mov eax, dword ptr [rax + 0x38] ; jmp rax
0x0000000000103ffc : mov eax, dword ptr [rax + 0x38] ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000090b7c : mov eax, dword ptr [rax + 0x40] ; add rsp, 0x28 ; pop rbx ; pop rbp ; jmp rax
0x0000000000103df8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000103e08 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000010402c : mov eax, dword ptr [rax + 0x48] ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000e3ab4 : mov eax, dword ptr [rax + 0x48] ; ret
0x00000000000e3ac4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d8bf4 : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000101cd6 : mov eax, dword ptr [rax + 0x5c] ; jne 0x101ce9 ; add rsp, 0x18 ; ret
0x0000000000101d86 : mov eax, dword ptr [rax + 0x5c] ; jne 0x101d99 ; add rsp, 0x18 ; ret
0x0000000000102f86 : mov eax, dword ptr [rax + 0x5c] ; jne 0x102faf ; add rsp, 0x18 ; ret
0x0000000000103386 : mov eax, dword ptr [rax + 0x5c] ; jne 0x1033af ; add rsp, 0x18 ; ret
0x00000000000d8c26 : mov eax, dword ptr [rax + 0x5c] ; jne 0xd8c39 ; add rsp, 0x18 ; ret
0x00000000000d8cd6 : mov eax, dword ptr [rax + 0x5c] ; jne 0xd8ce9 ; add rsp, 0x18 ; ret
0x00000000000d9de6 : mov eax, dword ptr [rax + 0x5c] ; jne 0xd9e0f ; add rsp, 0x18 ; ret
0x00000000000da266 : mov eax, dword ptr [rax + 0x5c] ; jne 0xda28f ; add rsp, 0x18 ; ret
0x0000000000101d16 : mov eax, dword ptr [rax + 0x60] ; jne 0x101d29 ; add rsp, 0x18 ; ret
0x0000000000101dc6 : mov eax, dword ptr [rax + 0x60] ; jne 0x101dd9 ; add rsp, 0x18 ; ret
0x0000000000102fe6 : mov eax, dword ptr [rax + 0x60] ; jne 0x10300f ; add rsp, 0x18 ; ret
0x00000000001033e6 : mov eax, dword ptr [rax + 0x60] ; jne 0x10340f ; add rsp, 0x18 ; ret
0x00000000000d8c66 : mov eax, dword ptr [rax + 0x60] ; jne 0xd8c79 ; add rsp, 0x18 ; ret
0x00000000000d8d16 : mov eax, dword ptr [rax + 0x60] ; jne 0xd8d29 ; add rsp, 0x18 ; ret
0x00000000000d9e46 : mov eax, dword ptr [rax + 0x60] ; jne 0xd9e6f ; add rsp, 0x18 ; ret
0x00000000000da2c6 : mov eax, dword ptr [rax + 0x60] ; jne 0xda2ef ; add rsp, 0x18 ; ret
0x00000000000e3934 : mov eax, dword ptr [rax + 0x60] ; ret
0x0000000000127d26 : mov eax, dword ptr [rax + 0x64] ; jne 0x127d39 ; add rsp, 0x18 ; ret
0x0000000000127dd6 : mov eax, dword ptr [rax + 0x64] ; jne 0x127de9 ; add rsp, 0x18 ; ret
0x0000000000129006 : mov eax, dword ptr [rax + 0x64] ; jne 0x12902f ; add rsp, 0x18 ; ret
0x0000000000129406 : mov eax, dword ptr [rax + 0x64] ; jne 0x12942f ; add rsp, 0x18 ; ret
0x00000000000e3966 : mov eax, dword ptr [rax + 0x64] ; jne 0xe3979 ; add rsp, 0x18 ; ret
0x00000000000e3a16 : mov eax, dword ptr [rax + 0x64] ; jne 0xe3a29 ; add rsp, 0x18 ; ret
0x00000000000e4b66 : mov eax, dword ptr [rax + 0x64] ; jne 0xe4b8f ; add rsp, 0x18 ; ret
0x00000000000e5046 : mov eax, dword ptr [rax + 0x64] ; jne 0xe506f ; add rsp, 0x18 ; ret
0x00000000000c736a : mov eax, dword ptr [rax + 0x68] ; add rsp, 8 ; ret
0x0000000000127d66 : mov eax, dword ptr [rax + 0x68] ; jne 0x127d79 ; add rsp, 0x18 ; ret
0x0000000000127e16 : mov eax, dword ptr [rax + 0x68] ; jne 0x127e29 ; add rsp, 0x18 ; ret
0x0000000000129066 : mov eax, dword ptr [rax + 0x68] ; jne 0x12908f ; add rsp, 0x18 ; ret
0x0000000000129466 : mov eax, dword ptr [rax + 0x68] ; jne 0x12948f ; add rsp, 0x18 ; ret
0x00000000000e39a6 : mov eax, dword ptr [rax + 0x68] ; jne 0xe39b9 ; add rsp, 0x18 ; ret
0x00000000000e3a56 : mov eax, dword ptr [rax + 0x68] ; jne 0xe3a69 ; add rsp, 0x18 ; ret
0x00000000000e4bc6 : mov eax, dword ptr [rax + 0x68] ; jne 0xe4bef ; add rsp, 0x18 ; ret
0x00000000000e50a6 : mov eax, dword ptr [rax + 0x68] ; jne 0xe50cf ; add rsp, 0x18 ; ret
0x000000000008ed09 : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x000000000009274b : mov eax, dword ptr [rax + rcx*8] ; ret
0x00000000000c7558 : mov eax, dword ptr [rax + rsi*4] ; ret
0x00000000000d2a54 : mov eax, dword ptr [rax - 0x10] ; ret
0x00000000000d2a24 : mov eax, dword ptr [rax - 0x18] ; ret
0x000000000008ffeb : mov eax, dword ptr [rax - 0x70] ; add rsp, 8 ; ret
0x000000000008fbb4 : mov eax, dword ptr [rax - 0x70] ; ret
0x000000000012498e : mov eax, dword ptr [rax - 4] ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000000bb2f5 : mov eax, dword ptr [rax] ; add rsp, 8 ; jmp rax
0x000000000008ef19 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000008ef01 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x0000000000124817 : mov eax, dword ptr [rax] ; pop rbx ; ret
0x000000000008fcf8 : mov eax, dword ptr [rax] ; ret
0x00000000000d78f1 : mov eax, dword ptr [rbp] ; jmp 0xd78bd
0x00000000000a5b7f : mov eax, dword ptr [rbx + 8] ; pop rbx ; ret
0x000000000008ec3c : mov eax, dword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x00000000000d7819 : mov eax, dword ptr [rbx] ; jmp 0xd77e3
0x00000000000d3c64 : mov eax, dword ptr [rbx] ; pop rbx ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000000a1b46 : mov eax, dword ptr [rbx] ; pop rbx ; ret
0x00000000000a1b13 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0xa1b48 ; pop rbx ; ret
0x0000000000147635 : mov eax, dword ptr [rcx] ; add byte ptr [rsi + rbp - 7], al ; jmp rsp
0x00000000000e3911 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000000000e3921 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x28] ; ret
0x00000000000e3ab1 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x00000000000e3ac1 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d8bf1 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000e3931 : mov eax, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x60] ; ret
0x00000000000d8bd1 : mov eax, dword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x21] ; ret
0x00000000000d8be1 : mov eax, dword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x22] ; ret
0x00000000000d8d71 : mov eax, dword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x48] ; ret
0x00000000000d8d81 : mov eax, dword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x49] ; ret
0x0000000000124341 : mov eax, dword ptr [rdi + 0x10] ; ret
0x00000000000d3580 : mov eax, dword ptr [rdi + 0x10] ; shr eax, 0x1f ; ret
0x00000000000d3590 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; setg al ; ret
0x00000000000a78b1 : mov eax, dword ptr [rdi + 0x18] ; ret
0x00000000000f92d0 : mov eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000f92c0 : mov eax, dword ptr [rdi + 0x20] ; and eax, 1 ; ret
0x00000000000f9220 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000f92a0 : mov eax, dword ptr [rdi + 0x20] ; shr eax, 1 ; and eax, 1 ; ret
0x00000000000f9290 : mov eax, dword ptr [rdi + 0x20] ; test eax, eax ; sete al ; ret
0x0000000000124391 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000001243a1 : mov eax, dword ptr [rdi + 0x30] ; ret
0x00000000000ee8b1 : mov eax, dword ptr [rdi + 0x40] ; ret
0x00000000000f92f1 : mov eax, dword ptr [rdi + 0xd8] ; ret
0x00000000000f9da9 : mov eax, dword ptr [rdi + 0xe0] ; ret
0x00000000000f9311 : mov eax, dword ptr [rdi + 0xe8] ; ret
0x0000000000125581 : mov eax, dword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x00000000000de5c8 : mov eax, dword ptr [rdi + 8] ; cmp eax, 0xff ; je 0xde5e1 ; ret
0x00000000000e920d : mov eax, dword ptr [rdi + 8] ; cmp eax, 0xff ; je 0xe9229 ; ret
0x00000000000aa3e1 : mov eax, dword ptr [rdi + 8] ; lea rax, qword ptr [rax + rsi*8] ; ret
0x00000000000929f3 : mov eax, dword ptr [rdi + 8] ; ret
0x00000000000c7af4 : mov eax, dword ptr [rdi + rsi*4 + 0x9c] ; ret
0x000000000008ebd1 : mov eax, dword ptr [rdi - 8] ; ret
0x00000000000d4990 : mov eax, dword ptr [rdi - 8] ; test eax, eax ; jg 0xd4956 ; jmp 0xd4964
0x00000000000d2861 : mov eax, dword ptr [rdi] ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000000d2a71 : mov eax, dword ptr [rdi] ; add rax, rsi ; ret
0x0000000000139445 : mov eax, dword ptr [rdi] ; lea rax, qword ptr [rax + rdx*4 - 4] ; ret
0x0000000000139105 : mov eax, dword ptr [rdi] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000000000d5b71 : mov eax, dword ptr [rdi] ; lea rax, qword ptr [rax + rsi*4] ; ret
0x00000000000d2a51 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax - 0x10] ; ret
0x00000000000d2a21 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax - 0x18] ; ret
0x000000000008fbb1 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax - 0x70] ; ret
0x000000000008fb01 : mov eax, dword ptr [rdi] ; ret
0x00000000000d2841 : mov eax, dword ptr [rdi] ; sub rax, 0x18 ; ret
0x000000000008dcd0 : mov eax, dword ptr [rdx + rax - 1] ; add rsp, 8 ; jmp rax
0x000000000014a495 : mov eax, dword ptr [rdx] ; add ah, al ; or bh, dh ; call rsp
0x00000000000d66a1 : mov eax, dword ptr [rip + 0x2ac0d9] ; ret
0x00000000000d5a41 : mov eax, dword ptr [rip + 0x2acd39] ; ret
0x00000000000d3571 : mov eax, dword ptr [rip + 0x2af031] ; ret
0x00000000000d2961 : mov eax, dword ptr [rip + 0x2afc41] ; ret
0x0000000000090471 : mov eax, dword ptr [rip + 0x2f47a9] ; ret
0x000000000008ca60 : mov eax, dword ptr [rsi] ; cmp dword ptr [rdi], eax ; sete al ; ret
0x000000000008fbc1 : mov eax, dword ptr [rsi] ; cmp qword ptr [rdi], rax ; sete al ; ret
0x00000000000d5c10 : mov eax, dword ptr [rsi] ; mov dword ptr [r8], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000008cff8 : mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x000000000008d51c : mov eax, dword ptr [rsi] ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000ddbb1 : mov eax, dword ptr [rsi] ; ret
0x000000000011912d : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000009118f : mov eax, dword ptr [rsp + 8] ; sub rdi, rbp ; call rax
0x000000000008f04a : mov eax, dword ptr [rsp] ; jne 0x8f09a ; add rsp, 0x18 ; ret
0x000000000013aa8b : mov eax, eax ; cmp rax, 0xff ; jne 0x13aa81 ; ret
0x000000000009d884 : mov eax, eax ; cmp rcx, r8 ; cmovbe rax, rcx ; ret
0x00000000000c7b63 : mov eax, ebp ; cmovne eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d80f0 : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000aa1c8 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008da89 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008db0b : mov eax, ebp ; pop rbp ; ret
0x000000000008da5d : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e33e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008daf9 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000bfafa : mov eax, ebp ; xor byte ptr [rbp - 0x76b70004], dh ; ret
0x000000000010035a : mov eax, ebx ; jne 0x100399 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102da9 : mov eax, ebx ; jne 0x102dc5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102e19 : mov eax, ebx ; jne 0x102e35 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102e89 : mov eax, ebx ; jne 0x102ea5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102ef9 : mov eax, ebx ; jne 0x102f15 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001031a9 : mov eax, ebx ; jne 0x1031c5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103219 : mov eax, ebx ; jne 0x103235 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103289 : mov eax, ebx ; jne 0x1032a5 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001032f9 : mov eax, ebx ; jne 0x103315 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103a49 : mov eax, ebx ; jne 0x103a65 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103ab9 : mov eax, ebx ; jne 0x103ad5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000103b29 : mov eax, ebx ; jne 0x103b45 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001132b7 : mov eax, ebx ; jne 0x113300 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001133a7 : mov eax, ebx ; jne 0x1133f0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001157d7 : mov eax, ebx ; jne 0x115820 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001158c7 : mov eax, ebx ; jne 0x115910 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128e29 : mov eax, ebx ; jne 0x128e45 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128e99 : mov eax, ebx ; jne 0x128eb5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128f09 : mov eax, ebx ; jne 0x128f25 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000128f79 : mov eax, ebx ; jne 0x128f95 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129229 : mov eax, ebx ; jne 0x129245 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129299 : mov eax, ebx ; jne 0x1292b5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129309 : mov eax, ebx ; jne 0x129325 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129379 : mov eax, ebx ; jne 0x129395 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129ac9 : mov eax, ebx ; jne 0x129ae5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129b39 : mov eax, ebx ; jne 0x129b55 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129ba9 : mov eax, ebx ; jne 0x129bc5 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008cc41 : mov eax, ebx ; jne 0x8cc7b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008d148 : mov eax, ebx ; jne 0x8d180 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b5d0d : mov eax, ebx ; jne 0xb5d05 ; pop rbx ; ret
0x00000000000b62a5 : mov eax, ebx ; jne 0xb62ec ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fd2d2 : mov eax, ebx ; jne 0xfd313 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125a68 : mov eax, ebx ; mov byte ptr [rdx + rsi], 0 ; pop rbx ; ret
0x00000000000926d8 : mov eax, ebx ; mov qword ptr [r11 + 0x48], rbp ; pop rbx ; pop rbp ; ret
0x00000000000c1b0a : mov eax, ebx ; pop rbx ; pop r12 ; pop r14 ; pop rbp ; ret
0x000000000009d21c : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b22a2 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d9f1 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000008ca96 : mov eax, ebx ; pop rbx ; ret
0x0000000000127c02 : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000013a814 : mov eax, ecx ; cmovae rax, rdx ; ret
0x0000000000126d8e : mov eax, ecx ; cmp rax, 0xff ; jne 0x126d89 ; ret
0x00000000000d3694 : mov eax, ecx ; pop rbp ; pop r12 ; ret
0x00000000000d44c8 : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000008d7c7 : mov eax, ecx ; pop rbx ; ret
0x00000000000d3661 : mov eax, ecx ; ret
0x0000000000104708 : mov eax, edi ; add rdx, 0x18 ; mov qword ptr [rdi], rdx ; ret
0x00000000000d29c4 : mov eax, edi ; add rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x0000000000139128 : mov eax, edi ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rdi], rdx ; ret
0x00000000000d29d4 : mov eax, edi ; mov qword ptr [rdi], rdx ; ret
0x0000000000092a2d : mov eax, edi ; ret
0x000000000012d014 : mov eax, edi ; sar rax, 2 ; ret
0x0000000000107282 : mov eax, edi ; sub rax, r8 ; ret
0x000000000008fce8 : mov eax, edi ; xchg qword ptr [rdx], rax ; ret
0x0000000000090461 : mov eax, edi ; xchg qword ptr [rip + 0x2f47b6], rax ; ret
0x000000000008ea6f : mov eax, edx ; add rsp, 8 ; ret
0x000000000012714a : mov eax, edx ; cmp byte ptr [rcx + rax], sil ; je 0x127149 ; ret
0x00000000000d31ea : mov eax, edx ; cmp byte ptr [rcx + rax], sil ; je 0xd31e9 ; ret
0x000000000013ae5a : mov eax, edx ; cmp dword ptr [rcx + rax*4], esi ; je 0x13ae58 ; ret
0x00000000000d630a : mov eax, edx ; cmp dword ptr [rcx + rax*4], esi ; je 0xd6308 ; ret
0x00000000000d2e2c : mov eax, edx ; cmp rax, 0xff ; jne 0xd2e29 ; ret
0x00000000000d5f3b : mov eax, edx ; cmp rax, 0xff ; jne 0xd5f39 ; ret
0x000000000010f5e1 : mov eax, edx ; idiv edi ; nop dword ptr [rax] ; jmp rax
0x000000000008d5ba : mov eax, edx ; jne 0x8d5ad ; ret
0x000000000008d6ca : mov eax, edx ; jne 0x8d6bd ; ret
0x000000000008d74a : mov eax, edx ; jne 0x8d73d ; ret
0x00000000000a11ea : mov eax, edx ; jne 0xa11dd ; ret
0x00000000000a12fa : mov eax, edx ; jne 0xa12ed ; ret
0x00000000000a137a : mov eax, edx ; jne 0xa136d ; ret
0x00000000000a148a : mov eax, edx ; jne 0xa147d ; ret
0x00000000000a150a : mov eax, edx ; jne 0xa14fd ; ret
0x00000000000ab9cc : mov eax, edx ; movsxd rcx, dword ptr [r10 + r9*4] ; add rcx, r10 ; jmp rcx
0x00000000000f949c : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e9d5 : mov eax, edx ; pop rbx ; ret
0x0000000000090411 : mov eax, edx ; ret
0x00000000000a5b9b : mov eax, edx ; sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000000c901d : mov eax, edx ; sub rax, qword ptr [rdi + 0x10] ; ret
0x00000000000eabd5 : mov eax, esi ; call rax
0x0000000000124f35 : mov eax, esi ; cmp rsi, rcx ; ja 0x124f46 ; ret
0x0000000000138a45 : mov eax, esi ; cmp rsi, rcx ; ja 0x138a56 ; ret
0x00000000001177f9 : mov eax, esi ; je 0x117815 ; mov byte ptr [rdx - 1], sil ; ret
0x000000000011788a : mov eax, esi ; je 0x1178a9 ; mov dword ptr [rdx - 4], esi ; ret
0x00000000000c9099 : mov eax, esi ; je 0xc90b5 ; mov byte ptr [rdx - 1], sil ; ret
0x00000000000c912a : mov eax, esi ; je 0xc9149 ; mov dword ptr [rdx - 4], esi ; ret
0x00000000000d3dc4 : mov eax, esi ; jne 0xd3dd5 ; ret
0x00000000000adea0 : mov eax, esi ; lock xadd dword ptr [rdi], eax ; ret
0x00000000000a6f7e : mov eax, esi ; mov qword ptr [rbx], r13 ; mov r12, rax ; jmp 0xa6f5c
0x00000000000d2831 : mov eax, esi ; mov qword ptr [rdi], rsi ; ret
0x000000000009215d : mov eax, esi ; movsxd rax, dword ptr [r9 + r8*4] ; add rax, r9 ; jmp rax
0x00000000000ab568 : mov eax, esi ; pop r13 ; pop r14 ; ret
0x00000000000ab52f : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000921d8 : mov eax, esi ; ret
0x00000000000aa2e7 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a6163 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b2bec : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d765e : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6162 : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013dc20 : mov ebp, 0x47e7 ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; retf
0x00000000000ddd66 : mov ebp, 0x5d5bfffa ; pop r12 ; ret
0x0000000000006e32 : mov ebp, 0x62a36bed ; ret
0x00000000001243ff : mov ebp, 0x750025e5 ; adc esi, ebx ; ret
0x000000000011f314 : mov ebp, 0x8948fff6 ; ret
0x00000000000ffebe : mov ebp, 0x8948fff8 ; ret
0x000000000013afe1 : mov ebp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000147f85 : mov ebp, 0xbd40001 ; cli ; call rsp
0x0000000000167585 : mov ebp, 0xcea80001 ; stc ; jmp qword ptr [rbx]
0x000000000009e3ed : mov ebp, 0xfffffde0 ; call 0x8aef7
0x00000000000c5ecd : mov ebp, 0xffffff78 ; call rax
0x000000000010d481 : mov ebp, 1 ; jmp 0x10d459
0x000000000010df21 : mov ebp, 1 ; jmp 0x10def9
0x0000000000132bcc : mov ebp, 1 ; jmp 0x132ba4
0x00000000001336dc : mov ebp, 1 ; jmp 0x1336b4
0x000000000013cb91 : mov ebp, dr0 ; call rsp
0x000000000013cb99 : mov ebp, dr0 ; jmp rsp
0x000000000009c9b9 : mov ebp, eax ; call 0x89434
0x00000000000f2069 : mov ebp, eax ; mov qword ptr [rbx + 0x10], rcx ; jmp 0xf203b
0x00000000000f3eeb : mov ebp, eax ; mov qword ptr [rbx + 0x10], rcx ; jmp 0xf3ebd
0x0000000000091111 : mov ebp, eax ; mov rdi, rax ; call rbx
0x00000000000ad7ad : mov ebp, eax ; mov rdi, rbx ; call 0x89a57
0x000000000009ef4f : mov ebp, eax ; mov rdi, rbx ; call 0x8b1b7
0x000000000012748b : mov ebx, 0x10c48348 ; pop rbx ; ret
0x000000000000af99 : mov ebx, 0x11 ; add byte ptr [rax], al ; retf 2
0x00000000000d3701 : mov ebx, 0x48fffb5e ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000052e1 : mov ebx, 0x6a59f901 ; test esi, edi ; ret 0xb232
0x0000000000147f25 : mov ebx, 0x6f40001 ; cli ; call rsp
0x00000000000db156 : mov ebx, 0x89480002 ; ret 0x2b48
0x000000000012d877 : mov ebx, 0x8948fff5 ; ret
0x00000000000ff14d : mov ebx, 0x8948fff8 ; fucompi st(0) ; pop rax ; retf
0x00000000000ff167 : mov ebx, 0x8948fff8 ; fucompi st(0) ; retf
0x00000000000bf6b1 : mov ebx, 0x8948fffc ; ret
0x00000000000ffbf1 : mov ebx, 0x8b000000 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000167375 : mov ebx, 0xca480001 ; stc ; call qword ptr [rcx]
0x00000000000ef2c5 : mov ebx, dword ptr [rax + 0xf000000] ; xchg eax, ebp ; ret 0x83c6
0x00000000000fe1ce : mov ebx, eax ; call 0x8acc4
0x000000000009137f : mov ebx, eax ; jne 0x913a4 ; call rbx
0x000000000008ebe2 : mov ebx, edi ; call 0x8aed4
0x000000000016d791 : mov ebx, edi ; call qword ptr [rcx]
0x0000000000123b62 : mov ebx, edi ; call rax
0x00000000000fba25 : mov ebx, edi ; mov rdi, qword ptr [rax - 0x18] ; add rdi, rbx ; call rsi
0x00000000000b7d69 : mov ebx, esi ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000147ed5 : mov ecx, 0x1a40001 ; cli ; jmp rsp
0x0000000000008318 : mov ecx, 0x29d3bfba ; int1 ; scasb al, byte ptr [rdi] ; wait ; ret 0x7cdd
0x000000000008fd43 : mov ecx, 0x48002f4c ; mov eax, dword ptr [rax] ; ret
0x0000000000116753 : mov ecx, 0x48fff746 ; add esp, 0x18 ; ret
0x00000000000b3305 : mov ecx, 0x89480008 ; ret 0x8348
0x00000000001002b0 : mov ecx, 0x8948fff8 ; ret
0x00000000000de3bd : mov ecx, 0x8b48fffa ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000067ad : mov ecx, 0x96b8ae8e ; retf
0x00000000001671b5 : mov ecx, 0xc7e80001 ; stc ; jmp qword ptr [rdx]
0x00000000001671cd : mov ecx, 0xc8000001 ; stc ; jmp qword ptr [rdx]
0x00000000001058eb : mov ecx, 0xeb0027cc ; mov dword ptr [rax - 0x77], ecx ; ret
0x00000000000a85d9 : mov ecx, 0xebfffffe ; retf -0x3a15
0x00000000001346f5 : mov ecx, 0xf56935e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001343e5 : mov ecx, 0xf56c45e8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001657f9 : mov ecx, dr1 ; jmp qword ptr [rdi]
0x00000000000e38d5 : mov ecx, dword ptr [rbp - 0x80] ; mov rsi, r15 ; mov rdi, r14 ; call rax
0x00000000000d2877 : mov ecx, dword ptr [rcx - 0x18] ; cmp rcx, rsi ; jb 0xd288a ; ret
0x00000000000d5917 : mov ecx, dword ptr [rcx - 0x18] ; cmp rcx, rsi ; jb 0xd592a ; ret
0x00000000000fdb39 : mov ecx, dword ptr [rdx - 0x18] ; add rcx, rdi ; and dword ptr [rcx + 0x18], esi ; ret
0x00000000000fdb17 : mov ecx, dword ptr [rdx - 0x18] ; add rcx, rdi ; or dword ptr [rcx + 0x18], esi ; ret
0x00000000000e0b37 : mov ecx, dword ptr [rsp + 0x78] ; mov rdi, qword ptr [rsp + 0x50] ; call rax
0x00000000000a8089 : mov ecx, eax ; mov dword ptr [rcx], 1 ; ret
0x000000000009c043 : mov ecx, eax ; test rcx, rcx ; jne 0x9c038 ; ret
0x00000000000b20b3 : mov ecx, ecx ; or byte ptr [rax], al ; ret
0x0000000000165721 : mov ecx, edi ; jmp qword ptr [rdi]
0x00000000000bf63e : mov ecx, edi ; mov rdi, r13 ; call 0x8b8c7
0x00000000000eabd2 : mov ecx, esp ; mov r8, r14 ; call rax
0x00000000000b762b : mov ecx, esp ; mov rsi, rbx ; mov rdi, rbp ; call rax
0x0000000000148534 : mov ecx, fs ; add dword ptr [rax], eax ; in al, -0x1e ; cli ; jmp rsp
0x0000000000147fe5 : mov edi, 0x11f40001 ; cli ; jmp rsp
0x00000000001463d1 : mov edi, 0x26b4fff7 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x00000000000acd03 : mov edi, 0x40007 ; call 0x88f47
0x00000000000ac50b : mov edi, 0x40008 ; call 0x88f47
0x000000000008e7ba : mov edi, 0x8348ffff ; ret 0x4801
0x0000000000134e3d : mov edi, 0x89fffb43 ; ret
0x000000000013741c : mov edi, 0x89fffffc ; ret
0x00000000000f0a2b : mov edi, 0x98 ; add byte ptr [rbp + rax - 0xd], dh ; ret
0x000000000012d190 : mov edi, 0xa0 ; call 0x89437
0x000000000000831a : mov edi, 0xaef129d3 ; wait ; ret 0x7cdd
0x00000000001677ad : mov edi, 0xcf500001 ; stc ; call qword ptr [rdx]
0x0000000000167975 : mov edi, 0xd0d80001 ; stc ; call rcx
0x000000000000812a : mov edi, 0xe02dd08d ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; retf 0x582c
0x0000000000005772 : mov edi, 0xe375b55f ; outsd dx, dword ptr [rsi] ; ret
0x00000000000fba28 : mov edi, dword ptr [rax - 0x18] ; add rdi, rbx ; call rsi
0x000000000010fad1 : mov edi, dword ptr [rbp + 0x10] ; mov rdx, rbx ; call 0x8bdd8
0x000000000009e3ec : mov edi, dword ptr [rbp - 0x220] ; call 0x8aef8
0x00000000000ae4e9 : mov edi, dword ptr [rbp - 0x78] ; call 0x8aff5
0x00000000000c5ecc : mov edi, dword ptr [rbp - 0x88] ; call rax
0x00000000000048c3 : mov edi, dword ptr [rbp*4 - 0x397fa9f2] ; retf
0x00000000000c3425 : mov edi, dword ptr [rdi + 0x18] ; push 0 ; call 0xbfe47
0x0000000000106849 : mov edi, dword ptr [rdi + 0x358b4800] ; xchg eax, esp ; ret 0x27
0x000000000008fac8 : mov edi, dword ptr [rdi] ; test rax, rax ; je 0x8fadb ; call rax
0x0000000000095914 : mov edi, dword ptr [rdx] ; call 0x92384
0x00000000001141b1 : mov edi, dword ptr [rsp + 0x18] ; call rax
0x000000000012d52a : mov edi, dword ptr [rsp + 0x20] ; mov esi, dword ptr [rax] ; call 0x89fc8
0x00000000000df4d8 : mov edi, dword ptr [rsp + 0x30] ; call 0x8b766
0x00000000000eb377 : mov edi, dword ptr [rsp + 0x48] ; call rax
0x00000000000e0b3c : mov edi, dword ptr [rsp + 0x50] ; call rax
0x000000000010ccaf : mov edi, dword ptr [rsp + 0x58] ; call 0x89746
0x00000000000afeb2 : mov edi, dword ptr [rsp + 8] ; call 0x8c106
0x00000000000af638 : mov edi, dword ptr [rsp] ; call 0x8c105
0x000000000011235f : mov edi, dword ptr [rsp] ; call 0xde5c5
0x00000000000aceab : mov edi, eax ; call 0x89114
0x00000000000afed2 : mov edi, eax ; call 0x8c104
0x00000000000e01de : mov edi, eax ; call r11
0x00000000000dff5f : mov edi, eax ; call r8
0x0000000000090fed : mov edi, eax ; call rbx
0x00000000000e09ec : mov edi, eax ; call rdx
0x00000000001029c3 : mov edi, eax ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000000ee1db : mov edi, eax ; jmp 0x8ac94
0x00000000000fc688 : mov edi, eax ; jne 0xfc657 ; call 0x89116
0x00000000000fce39 : mov edi, eax ; jne 0xfce10 ; call 0x89116
0x000000000009ed2d : mov edi, eax ; mov qword ptr [rsp + 8], rax ; call 0x8b7f9
0x00000000000cd623 : mov edi, ebp ; call 0x8a0b4
0x000000000009e9bc : mov edi, ebp ; call 0x8ac54
0x00000000000ee8fa : mov edi, ebp ; call 0x8b3b4
0x00000000000bf641 : mov edi, ebp ; call 0x8b8c4
0x0000000000090f31 : mov edi, ebp ; call r12
0x00000000000de9bb : mov edi, ebp ; call r8
0x00000000000de989 : mov edi, ebp ; call r9
0x00000000000b749b : mov edi, ebp ; call rax
0x00000000000913cd : mov edi, ebp ; call rbx
0x00000000000df937 : mov edi, ebp ; call rcx
0x00000000000f93b4 : mov edi, ebp ; call rdx
0x00000000000dba78 : mov edi, ebp ; lea rdx, qword ptr [rsi + rbx] ; call r8
0x00000000000ad7b0 : mov edi, ebx ; call 0x89a54
0x000000000009ef52 : mov edi, ebx ; call 0x8b1b4
0x0000000000090ebc : mov edi, ebx ; call r12
0x000000000010a90b : mov edi, ebx ; call r8
0x000000000010a8d1 : mov edi, ebx ; call r9
0x000000000008fa34 : mov edi, ebx ; call rax
0x00000000000be1ed : mov edi, ebx ; call rcx
0x00000000000be229 : mov edi, ebx ; call rdx
0x00000000000ba06b : mov edi, ebx ; mov rsi, r13 ; call rax
0x00000000000f9517 : mov edi, ebx ; movsx esi, sil ; pop rbx ; jmp rdx
0x000000000008d808 : mov edi, ebx ; pop rbx ; jmp 0x89a55
0x00000000001240d1 : mov edi, ebx ; pop rbx ; jmp rax
0x00000000000ad7a3 : mov edi, ebx ; pop rbx ; pop rbp ; jmp 0x89a56
0x00000000000ba3ae : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000000ba3d5 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rdx
0x0000000000091066 : mov edi, ebx ; sub rdi, rbp ; call r15
0x0000000000105d5e : mov edi, ecx ; call rax
0x00000000001657b1 : mov edi, ecx ; jmp qword ptr [rdi]
0x000000000009fa77 : mov edi, edi ; call 0x8bcb4
0x00000000000af658 : mov edi, edi ; call 0x8c104
0x00000000001057b1 : mov edi, edi ; call rax
0x00000000001145d9 : mov edi, edi ; call rdx
0x00000000000bc151 : mov edi, edx ; jmp rax
0x00000000000afec1 : mov edi, esi ; call 0x8c104
0x000000000015b1c1 : mov edi, esi ; call qword ptr [rdx]
0x00000000000be3a1 : mov edi, esi ; call rax
0x0000000000106807 : mov edi, esi ; call rcx
0x00000000000be3d9 : mov edi, esi ; call rdx
0x0000000000113264 : mov edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000015b1d9 : mov edi, esi ; jmp qword ptr [rdx]
0x00000000000a5bb5 : mov edi, esi ; test rax, rax ; je 0xa5bc7 ; jmp rax
0x00000000000a5d9a : mov edi, esi ; test rax, rax ; je 0xa5db7 ; jmp rax
0x00000000000ddd55 : mov edi, esp ; call 0x8a024
0x00000000000cde9c : mov edi, esp ; call 0x8a0b4
0x000000000009e3f8 : mov edi, esp ; call 0x8aef4
0x000000000009121c : mov edi, esp ; call r14
0x00000000000bf5f4 : mov edi, esp ; call rax
0x00000000000c375f : mov edi, esp ; call rdx
0x000000000013b19c : mov edx, 0x10c48348 ; pop rbx ; ret
0x0000000000147efd : mov edx, 0x3340001 ; cli ; call rsp
0x00000000000052bd : mov edx, 0x51af51b7 ; ret 0xb220
0x00000000000a040c : mov edx, 0x5d5bfffe ; pop r12 ; ret
0x0000000000006a06 : mov edx, 0x6577d9ce ; retf -0x2fdc
0x000000000000832a : mov edx, 0x6d086dc8 ; ret 0x5c64
0x00000000000b31d9 : mov edx, 0x89480008 ; ret 0x8348
0x000000000012d7d9 : mov edx, 0x8948fff5 ; ret
0x000000000010014b : mov edx, 0x8948fff8 ; ret
0x00000000000bf841 : mov edx, 0x8948fffc ; ret
0x00000000000de2cd : mov edx, 0x8b48fffa ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000007add : mov edx, 0xbfc411e0 ; ret
0x00000000000e6652 : mov edx, 0xebfffa2a ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000008319 : mov edx, 0xf129d3bf ; scasb al, byte ptr [rdi] ; wait ; ret 0x7cdd
0x00000000000a78d4 : mov edx, dword ptr [rax + 0x10] ; test rdx, rdx ; jne 0xa78d9 ; ret
0x00000000000a7884 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; jne 0xa7889 ; ret
0x00000000000d2ac4 : mov edx, dword ptr [rax - 0x18] ; lea rax, qword ptr [rax + rdx - 1] ; ret
0x00000000000d5bc4 : mov edx, dword ptr [rax - 0x18] ; lea rax, qword ptr [rax + rdx*4 - 4] ; ret
0x00000000000d5904 : mov edx, dword ptr [rax - 0x18] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000000000009b465 : mov edx, dword ptr [rax] ; cmp byte ptr [rdx], 0x66 ; je 0x9b479 ; xor eax, eax ; ret
0x000000000009c977 : mov edx, dword ptr [rax] ; mov qword ptr [rsi], rdx ; mov qword ptr [rax], rsi ; ret
0x0000000000125885 : mov edx, dword ptr [rdi] ; lea rax, qword ptr [rdx + rax - 1] ; ret
0x0000000000095911 : mov edx, dword ptr [rdx + 8] ; mov edi, dword ptr [rdx] ; call 0x92387
0x00000000000fdbba : mov edx, dword ptr [rdx - 0x18] ; mov qword ptr [rdi + rdx + 0x10], rsi ; ret
0x00000000000fdb9a : mov edx, dword ptr [rdx - 0x18] ; mov qword ptr [rdi + rdx + 8], rsi ; ret
0x000000000011300b : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi + rax], rdx ; ret
0x000000000008fb14 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; mov qword ptr [rsi], rax ; ret
0x00000000000d29d1 : mov edx, dword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x00000000000962c0 : mov edx, eax ; add rax, 1 ; jmp 0x9629a
0x00000000000964b8 : mov edx, eax ; add rax, 1 ; jmp 0x96492
0x0000000000096828 : mov edx, eax ; add rax, 1 ; jmp 0x96802
0x00000000000968a0 : mov edx, eax ; add rax, 1 ; jmp 0x9687a
0x0000000000096918 : mov edx, eax ; add rax, 1 ; jmp 0x968f2
0x0000000000096ba0 : mov edx, eax ; add rax, 1 ; jmp 0x96b7a
0x0000000000096c18 : mov edx, eax ; add rax, 1 ; jmp 0x96bf2
0x0000000000096c90 : mov edx, eax ; add rax, 1 ; jmp 0x96c6a
0x0000000000096d08 : mov edx, eax ; add rax, 1 ; jmp 0x96ce2
0x0000000000096d80 : mov edx, eax ; add rax, 1 ; jmp 0x96d5a
0x0000000000096df8 : mov edx, eax ; add rax, 1 ; jmp 0x96dd2
0x0000000000096e70 : mov edx, eax ; add rax, 1 ; jmp 0x96e4a
0x0000000000096ee8 : mov edx, eax ; add rax, 1 ; jmp 0x96ec2
0x0000000000096f68 : mov edx, eax ; add rax, 1 ; jmp 0x96f42
0x0000000000096fe0 : mov edx, eax ; add rax, 1 ; jmp 0x96fba
0x0000000000097058 : mov edx, eax ; add rax, 1 ; jmp 0x97032
0x00000000000970d0 : mov edx, eax ; add rax, 1 ; jmp 0x970aa
0x0000000000097148 : mov edx, eax ; add rax, 1 ; jmp 0x97122
0x00000000000971c0 : mov edx, eax ; add rax, 1 ; jmp 0x9719a
0x0000000000097238 : mov edx, eax ; add rax, 1 ; jmp 0x97212
0x0000000000097330 : mov edx, eax ; add rax, 1 ; jmp 0x9730a
0x0000000000097548 : mov edx, eax ; add rax, 1 ; jmp 0x97522
0x00000000000975c0 : mov edx, eax ; add rax, 1 ; jmp 0x9759a
0x0000000000097738 : mov edx, eax ; add rax, 1 ; jmp 0x97712
0x00000000000979a0 : mov edx, eax ; add rax, 1 ; jmp 0x9797a
0x0000000000097a18 : mov edx, eax ; add rax, 1 ; jmp 0x979f2
0x0000000000097a90 : mov edx, eax ; add rax, 1 ; jmp 0x97a6a
0x0000000000097b08 : mov edx, eax ; add rax, 1 ; jmp 0x97ae2
0x0000000000097b80 : mov edx, eax ; add rax, 1 ; jmp 0x97b5a
0x0000000000097bf8 : mov edx, eax ; add rax, 1 ; jmp 0x97bd2
0x0000000000097c70 : mov edx, eax ; add rax, 1 ; jmp 0x97c4a
0x0000000000097de0 : mov edx, eax ; add rax, 1 ; jmp 0x97dba
0x0000000000097f18 : mov edx, eax ; add rax, 1 ; jmp 0x97ef2
0x00000000000980b0 : mov edx, eax ; add rax, 1 ; jmp 0x9808a
0x0000000000098268 : mov edx, eax ; add rax, 1 ; jmp 0x98242
0x0000000000098be8 : mov edx, eax ; add rax, 1 ; jmp 0x98bc2
0x0000000000098c58 : mov edx, eax ; add rax, 1 ; jmp 0x98c32
0x0000000000098cd8 : mov edx, eax ; add rax, 1 ; jmp 0x98cb2
0x0000000000098e28 : mov edx, eax ; add rax, 1 ; jmp 0x98e02
0x0000000000098e9c : mov edx, eax ; add rax, 1 ; jmp 0x98e76
0x000000000009916a : mov edx, eax ; add rax, 1 ; jmp 0x99144
0x000000000009a088 : mov edx, eax ; add rax, 1 ; jmp 0x9a062
0x000000000009a120 : mov edx, eax ; add rax, 1 ; jmp 0x9a0fa
0x000000000009a1a0 : mov edx, eax ; add rax, 1 ; jmp 0x9a17a
0x000000000009a220 : mov edx, eax ; add rax, 1 ; jmp 0x9a1fa
0x000000000009a4f8 : mov edx, eax ; add rax, 1 ; jmp 0x9a4d2
0x000000000009a570 : mov edx, eax ; add rax, 1 ; jmp 0x9a54a
0x000000000009a5f0 : mov edx, eax ; add rax, 1 ; jmp 0x9a5ca
0x000000000009a670 : mov edx, eax ; add rax, 1 ; jmp 0x9a64a
0x000000000009a6f0 : mov edx, eax ; add rax, 1 ; jmp 0x9a6ca
0x000000000009a770 : mov edx, eax ; add rax, 1 ; jmp 0x9a74a
0x000000000009a7f0 : mov edx, eax ; add rax, 1 ; jmp 0x9a7ca
0x000000000009ae48 : mov edx, eax ; add rax, 1 ; jmp 0x9ae1a
0x000000000009b5b8 : mov edx, eax ; add rax, 1 ; jmp 0x9b592
0x00000000000baa0c : mov edx, eax ; mov eax, 1 ; ret
0x000000000008d9ef : mov edx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000903d6 : mov edx, eax ; shr rdx, 0x2f ; xor rax, rdx ; ret
0x000000000009292a : mov edx, eax ; xor eax, eax ; test edx, edx ; jns 0x92912 ; ret
0x00000000000d99dc : mov edx, ebp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010fad5 : mov edx, ebx ; call 0x8bdd4
0x00000000000bbda1 : mov edx, edi ; mov eax, esi ; ret
0x00000000000c3151 : mov edx, edi ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x00000000000ba068 : mov edx, esi ; mov rdi, rbx ; mov rsi, r13 ; call rax
0x00000000000960a8 : mov edx, esi ; movsxd rax, dword ptr [rdi + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000c3150 : mov edx, r15d ; mov rsi, r14 ; mov rdi, rbx ; call rax
0x000000000009c0ff : mov es, word ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9436 : mov esi, 0x20 ; mov rdi, r12 ; call rdx
0x00000000000f98c9 : mov esi, 0x20 ; mov rdi, r13 ; call rax
0x000000000011422a : mov esi, 0x20 ; mov rdi, r14 ; call rax
0x0000000000114fbb : mov esi, 0x20 ; mov rdi, r14 ; call rdx
0x00000000001145d3 : mov esi, 0x20 ; mov rdi, r15 ; call rdx
0x00000000000f93ae : mov esi, 0x20 ; mov rdi, rbp ; call rdx
0x0000000000106801 : mov esi, 0x25 ; mov rdi, r14 ; call rcx
0x00000000000dff59 : mov esi, 0x25 ; mov rdi, rax ; call r8
0x00000000001071e4 : mov esi, 0x2d ; mov rdi, r14 ; call rcx
0x00000000000043f9 : mov esi, 0x399578c9 ; xchg eax, ebx ; cdq ; ret 0x5414
0x0000000000103df5 : mov esi, 0x408b48c0 ; jmp rax
0x000000000010a8cc : mov esi, 0x48d231f0 ; mov edi, ebx ; call r9
0x000000000010a906 : mov esi, 0x48d231f1 ; mov edi, ebx ; call r8
0x000000000010d0aa : mov esi, 0x48d231f4 ; mov edi, ebx ; call rcx
0x000000000010d1a5 : mov esi, 0x48d231f5 ; mov edi, ebx ; call r8
0x000000000010b652 : mov esi, 0x48d231f7 ; mov edi, ebx ; call rcx
0x00000000000de984 : mov esi, 0x4cd231f0 ; mov edi, ebp ; call r9
0x00000000000de9b6 : mov esi, 0x4cd231f1 ; mov edi, ebp ; call r8
0x0000000000104ddb : mov esi, 0x4cd231f1 ; mov edi, esp ; call rax
0x00000000000e0bbb : mov esi, 0x4cd231f7 ; mov edi, ebp ; call rax
0x00000000000df932 : mov esi, 0x4cd231f7 ; mov edi, ebp ; call rcx
0x00000000000d68b4 : mov esi, 0x775002a ; ret
0x00000000001168b5 : mov esi, 0x83480075 ; ret
0x000000000008e93c : mov esi, 0x8348ffff ; ret 0x4801
0x00000000000ffd62 : mov esi, 0x8948fff8 ; ret
0x00000000000d589d : mov esi, 0xa ; mov rdi, rbx ; call rax
0x00000000000f94aa : mov esi, 0xbe0f40d4 ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000000af2c2 : mov esi, 0xbe0f41fd ; imul al ; ret
0x000000000000730a : mov esi, 0xd7d6a254 ; in eax, dx ; retf -0xe8a
0x000000000010b720 : mov esi, 0xdf8948f0 ; call rcx
0x000000000010d158 : mov esi, 0xdf8948f4 ; call rax
0x00000000001028f6 : mov esi, 0xdf8948f5 ; pop rbx ; pop rbp ; jmp rax
0x00000000000f94ae : mov esi, 0xdf8948f6 ; call rax
0x0000000000147fb5 : mov esi, 0xe940001 ; cli ; jmp rsp
0x000000000012c576 : mov esi, 0xeac3e8ed ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dfa51 : mov esi, 0xef894cf0 ; call rcx
0x0000000000005c9e : mov esi, dr1 ; or ch, byte ptr [rsp - 0x7412ed2a] ; ret
0x0000000000123c30 : mov esi, dword ptr [r14] ; mov rdi, r12 ; call rax
0x00000000000ae03c : mov esi, dword ptr [r15] ; call 0x8ab45
0x000000000012d52e : mov esi, dword ptr [rax] ; call 0x89fc4
0x000000000009df90 : mov esi, dword ptr [rdi + 0x20] ; or esi, 4 ; call 0x8a9b8
0x000000000011e5ef : mov esi, dword ptr [rdi + 0x48] ; xor edx, edx ; jmp 0x8a817
0x00000000000ae03d : mov esi, dword ptr [rdi] ; call 0x8ab44
0x0000000000123c31 : mov esi, dword ptr [rsi] ; mov rdi, r12 ; call rax
0x00000000000e0214 : mov esi, dword ptr [rsp + 0x20] ; call rax
0x000000000009e9b7 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call 0x8ac59
0x00000000000c3ba3 : mov esi, eax ; call 0xbfe54
0x0000000000124270 : mov esi, eax ; jmp rdx
0x00000000000c3ba0 : mov esi, eax ; mov r14, rax ; call 0xbfe57
0x00000000000ba06e : mov esi, ebp ; call rax
0x00000000000acd01 : mov esi, ebp ; mov edi, 0x40007 ; call 0x88f49
0x00000000000ac509 : mov esi, ebp ; mov edi, 0x40008 ; call 0x88f49
0x0000000000105776 : mov esi, ebp ; mov rdi, r13 ; call rax
0x00000000001057ae : mov esi, ebp ; mov rdi, r15 ; call rax
0x0000000000123ee1 : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000091219 : mov esi, ebx ; mov rdi, r12 ; call r14
0x00000000000b7498 : mov esi, ebx ; mov rdi, rbp ; call rax
0x00000000000a7c11 : mov esi, ecx ; mov dword ptr [rsi], 1 ; ret
0x00000000000bf689 : mov esi, edi ; call 0x8b964
0x00000000000bf6e2 : mov esi, edi ; call 0x8c1d2
0x000000000015b471 : mov esi, edi ; call qword ptr [rcx]
0x00000000000a262e : mov esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e38d9 : mov esi, edi ; mov rdi, r14 ; call rax
0x00000000000fe9ab : mov esi, edx ; add rdi, qword ptr [rax - 0x18] ; jmp 0x8ac88
0x0000000000097d68 : mov esi, edx ; add rdx, 1 ; jmp 0x97d42
0x00000000000c2b2e : mov esi, esi ; mov rdi, r12 ; call rax
0x00000000000c3154 : mov esi, esi ; mov rdi, rbx ; call rax
0x00000000000ce53e : mov esi, esp ; call 0x8a764
0x000000000011220e : mov esi, esp ; mov qword ptr [rsp], rax ; call 0xde4f8
0x000000000016d60c : mov esp, 0x1000021d ; xchg bl, bh ; call qword ptr [rdx]
0x00000000001145d2 : mov esp, 0x20be ; add byte ptr [rcx + rcx*4 - 1], cl ; call rdx
0x0000000000114fba : mov esp, 0x20be ; add byte ptr [rcx + rcx*4 - 9], cl ; call rdx
0x00000000001447ac : mov esp, 0x24000090 ; ret
0x0000000000144d6c : mov esp, 0x240000b2 ; sal ch, cl ; call rsp
0x00000000001442ac : mov esp, 0x3400007c ; xchg eax, edi ; hlt ; call rsp
0x00000000001493d4 : mov esp, 0x3400022f ; idiv ebx ; call rsp
0x000000000014b234 : mov esp, 0x340002cd ; adc bh, bh ; call rsp
0x0000000000144204 : mov esp, 0x400007a ; xchg eax, esp ; hlt ; call rsp
0x0000000000146cc4 : mov esp, 0x400015d ; ret 0xfff8
0x000000000014a994 : mov esp, 0x40002a0 ; xor al, 0xfe ; call rsp
0x0000000000147634 : mov esp, 0x4400018b ; stc ; jmp rsp
0x000000000014769c : mov esp, 0x4400018d ; xor bh, cl ; call rsp
0x0000000000127a80 : mov esp, 0x48fff638 ; add esp, 0x18 ; ret
0x000000000008d910 : mov esp, 0x48ffffe6 ; add esp, 0x10 ; pop rbx ; ret
0x000000000014e80c : mov esp, 0x5000002f ; loope 0x14e80e ; jmp qword ptr [rax]
0x000000000016a00c : mov esp, 0x600001e7 ; ret 0xfffa
0x0000000000151b0c : mov esp, 0x62 ; retf
0x00000000001455cc : mov esp, 0x640000e2 ; jrcxz 0x1455d0 ; jmp rsp
0x0000000000147bb4 : mov esp, 0x640001a6 ; jg 0x147bbb ; call rsp
0x0000000000147d94 : mov esp, 0x640001b4 ; clc ; stc ; call rsp
0x00000000001445f4 : mov esp, 0x74000089 ; lodsd eax, dword ptr [rsi] ; hlt ; call rsp
0x000000000016750c : mov esp, 0x800001bc ; retf
0x00000000000e5d2e : mov esp, 0x8024 ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000fffee : mov esp, 0x8948fff8 ; ret
0x00000000000cf405 : mov esp, 0x8948fffb ; ret
0x00000000000daf27 : mov esp, 0x9024 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001445a4 : mov esp, 0x94000088 ; lodsb al, byte ptr [rsi] ; hlt ; call rsp
0x0000000000148b6c : mov esp, 0x94000206 ; movsxd rdi, ebx ; jmp rsp
0x0000000000147f55 : mov esp, 0x9b40001 ; cli ; jmp rsp
0x00000000000e5d10 : mov esp, 0xa024 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014738c : mov esp, 0xa400017f ; sbb ecx, edi ; call rsp
0x000000000014bc0c : mov esp, 0xb0000003 ; sbb esp, esi ; call qword ptr [rdi]
0x0000000000147734 : mov esp, 0xb4000190 ; cmp ecx, edi ; jmp rsp
0x000000000014c30c : mov esp, 0xc000000a ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014fd0c : mov esp, 0xc0000044 ; pop rax ; cmc ; call qword ptr [rdx]
0x0000000000144424 : mov esp, 0xc4000082 ; lahf ; hlt ; call rsp
0x0000000000146fe4 : mov esp, 0xc400016e ; hlt ; clc ; call rsp
0x000000000014717c : mov esp, 0xc4000175 ; add edi, ecx ; call rsp
0x0000000000148d94 : mov esp, 0xc4000212 ; xchg eax, edx ; sti ; jmp rsp
0x000000000014a31c : mov esp, 0xc4000286 ; add esi, edi ; call rsp
0x0000000000144efc : mov esp, 0xd40000ba ; adc dh, dh ; call rsp
0x000000000014781c : mov esp, 0xf4000195 ; stc ; call rsp
0x0000000000147e34 : mov esp, 0xf40001b6 ; cli ; stc ; call rsp
0x000000000014b1dc : mov esp, 0xf40002ca ; loope 0x14b1ea ; call qword ptr [rbx + rcx*8]
0x00000000000e0fb5 : mov esp, 1 ; jmp 0xe0f8d
0x00000000000e23f5 : mov esp, 1 ; jmp 0xe23cd
0x00000000000eb72c : mov esp, 1 ; jmp 0xeb704
0x00000000000ecb3c : mov esp, 1 ; jmp 0xecb14
0x0000000000172779 : mov esp, dr1 ; call qword ptr [rdi]
0x00000000000a6f84 : mov esp, eax ; jmp 0xa6f56
0x0000000000144149 : mov esp, esi ; call rsp
0x0000000000003b0c : mov fs, edi ; mov dl, 0xfe ; retf
0x0000000000003f91 : mov gs, ebx ; mov bl, 0xa9 ; ret
0x000000000000347c : mov gs, ecx ; nop ; pop rax ; jbe 0x340c ; ret 0x9349
0x00000000000d859e : mov gs, word ptr [rdx] ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000092c0e : mov qword ptr [r10 + 0x18], rax ; mov eax, 1 ; ret
0x000000000009249d : mov qword ptr [r10 + 0x18], rdx ; ret
0x00000000000925be : mov qword ptr [r10 + 0x48], rdx ; mov rax, rdx ; ret
0x0000000000092457 : mov qword ptr [r10 + 8], rax ; mov rax, r10 ; ret
0x000000000008ef03 : mov qword ptr [r10], r8 ; ret
0x00000000000926da : mov qword ptr [r11 + 0x48], rbp ; pop rbx ; pop rbp ; ret
0x000000000009c5a4 : mov qword ptr [r13], r12 ; jmp 0x9c57a
0x00000000000bd21c : mov qword ptr [r13], rax ; call 0x89cf6
0x000000000009d850 : mov qword ptr [r8], rdx ; mov eax, 3 ; ret
0x00000000000921a3 : mov qword ptr [rax + 0x10], rcx ; ret
0x00000000000a7970 : mov qword ptr [rax + 0x10], rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000b8765 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rdx], rsi ; ret
0x00000000000a79d0 : mov qword ptr [rax + 0x18], rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f4067 : mov qword ptr [rax + 0x8c], rdx ; pop rbx ; ret
0x000000000009219f : mov qword ptr [rax + 8], rdx ; mov qword ptr [rax + 0x10], rcx ; ret
0x000000000008d5ea : mov qword ptr [rax + 8], rdx ; ret
0x000000000008d51e : mov qword ptr [rax + 8], rsi ; ret
0x000000000008e753 : mov qword ptr [rax], r9 ; jmp 0x8e727
0x000000000009d838 : mov qword ptr [rax], r9 ; mov eax, 3 ; ret
0x000000000008d5cf : mov qword ptr [rax], rdi ; mov qword ptr [rsi + 8], rdi ; ret
0x00000000000a1cfa : mov qword ptr [rax], rdx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bad0c : mov qword ptr [rax], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c1c9 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000008ec38 : mov qword ptr [rax], rsi ; mov rax, qword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x000000000009c97c : mov qword ptr [rax], rsi ; ret
0x000000000008ec08 : mov qword ptr [rax], rsi ; xor eax, eax ; pop rbx ; ret
0x000000000009e68c : mov qword ptr [rbp - 0x140], rax ; call 0x8b0f9
0x00000000000be1e8 : mov qword ptr [rbp - 0x68], rdx ; mov rdi, rbx ; call rcx
0x000000000009da50 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fa91e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f206b : mov qword ptr [rbx + 0x10], rcx ; jmp 0xf2039
0x00000000000f3eed : mov qword ptr [rbx + 0x10], rcx ; jmp 0xf3ebb
0x0000000000123b76 : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; ret
0x00000000000fabf4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000953d5 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; ret
0x00000000000c7691 : mov qword ptr [rbx + 0x30], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc8f4 : mov qword ptr [rbx + 0x40], rax ; call 0x89326
0x00000000000cc8f3 : mov qword ptr [rbx + 0x40], rax ; call 0x89327
0x00000000000cc59d : mov qword ptr [rbx + 0x60], rax ; mov qword ptr [rbx], rdx ; call 0x89009
0x00000000000ce630 : mov qword ptr [rbx + 0x68], rax ; call 0x8b0f6
0x00000000000f0a4f : mov qword ptr [rbx + 0x98], rax ; pop rbx ; ret
0x00000000000cd09d : mov qword ptr [rbx + 8], rax ; call 0x89396
0x00000000001135a1 : mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx], rdx ; pop rbx ; ret
0x000000000008fefa : mov qword ptr [rbx - 0x18], rax ; lea rax, qword ptr [rbx - 0x80] ; pop rbx ; ret
0x000000000008fad9 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000a6f80 : mov qword ptr [rbx], r13 ; mov r12, rax ; jmp 0xa6f5a
0x00000000000bb795 : mov qword ptr [rbx], rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b28e1 : mov qword ptr [rbx], rax ; je 0xb28ee ; pop rbx ; ret
0x00000000000d4f98 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000009c86b : mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a57b4 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000cc5a1 : mov qword ptr [rbx], rdx ; call 0x89005
0x00000000001135a5 : mov qword ptr [rbx], rdx ; pop rbx ; ret
0x00000000000928e8 : mov qword ptr [rcx + rsi*8], rax ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x00000000000cb2e9 : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000000f2201 : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000000f03d2 : mov qword ptr [rdi + 0x10], rax ; ret
0x0000000000124374 : mov qword ptr [rdi + 0x10], rdx ; mov qword ptr [rdi + 0x18], rcx ; ret
0x0000000000124204 : mov qword ptr [rdi + 0x10], rdx ; movzx eax, byte ptr [rax - 1] ; ret
0x00000000000a58f4 : mov qword ptr [rdi + 0x10], rdx ; ret
0x0000000000124da0 : mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000000b8936 : mov qword ptr [rdi + 0x18], 0 ; ret
0x00000000000b90c0 : mov qword ptr [rdi + 0x18], rax ; ret
0x0000000000124378 : mov qword ptr [rdi + 0x18], rcx ; ret
0x00000000000f2205 : mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000001243c4 : mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x30], rdx ; ret
0x00000000000b9201 : mov qword ptr [rdi + 0x210], rdx ; ret
0x00000000000cef9a : mov qword ptr [rdi + 0x28], rax ; ret
0x00000000000cb335 : mov qword ptr [rdi + 0x28], rcx ; ret
0x000000000008ec85 : mov qword ptr [rdi + 0x28], rdx ; add rsp, 8 ; ret
0x00000000001249e2 : mov qword ptr [rdi + 0x28], rdx ; ret
0x00000000000f16d3 : mov qword ptr [rdi + 0x30], 0 ; ret
0x00000000000f1708 : mov qword ptr [rdi + 0x30], rax ; ret
0x0000000000119521 : mov qword ptr [rdi + 0x30], rdx ; ret
0x00000000000f9307 : mov qword ptr [rdi + 0xd8], rsi ; ret
0x00000000000f9590 : mov qword ptr [rdi + 0xe8], rsi ; ret
0x00000000000faa92 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000126a0b : mov qword ptr [rdi + 8], rax ; mov qword ptr [rsi + 8], rdx ; ret
0x00000000000ba7eb : mov qword ptr [rdi + 8], rax ; mov rax, qword ptr [r8] ; ret
0x00000000000a7974 : mov qword ptr [rdi + 8], rax ; ret
0x000000000008d53d : mov qword ptr [rdi + 8], rdi ; mov qword ptr [rdi], rdi ; ret
0x000000000009bff4 : mov qword ptr [rdi + 8], rdx ; ret
0x0000000000124db3 : mov qword ptr [rdi + 8], rsi ; mov byte ptr [rax + rsi], 0 ; ret
0x0000000000124d60 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000011300e : mov qword ptr [rdi + rax], rdx ; ret
0x00000000000fdbbd : mov qword ptr [rdi + rdx + 0x10], rsi ; ret
0x00000000000fdb9d : mov qword ptr [rdi + rdx + 8], rsi ; ret
0x000000000008fa60 : mov qword ptr [rdi], 0 ; ret
0x00000000000a15ab : mov qword ptr [rdi], rax ; jne 0xa15c0 ; add dword ptr [rax], 1 ; ret
0x00000000000d2b62 : mov qword ptr [rdi], rax ; mov qword ptr [rsi], rdx ; ret
0x000000000008d92b : mov qword ptr [rdi], rax ; ret
0x00000000000a1f87 : mov qword ptr [rdi], rax ; sub rax, 1 ; ret
0x00000000001038a1 : mov qword ptr [rdi], rax ; xor eax, eax ; mov word ptr [rdi + 0x48], ax ; ret
0x00000000000b3e33 : mov qword ptr [rdi], rcx ; ret
0x000000000008d541 : mov qword ptr [rdi], rdi ; ret
0x000000000008fb16 : mov qword ptr [rdi], rdx ; mov qword ptr [rsi], rax ; ret
0x00000000000b393a : mov qword ptr [rdi], rdx ; ret
0x000000000008cbc7 : mov qword ptr [rdi], rsi ; mov byte ptr [rdi + rsi + 0x18], 0 ; ret
0x00000000000a15c0 : mov qword ptr [rdi], rsi ; ret
0x000000000008d592 : mov qword ptr [rdx + 8], rcx ; mov qword ptr [rsi + 8], rax ; ret
0x000000000008c300 : mov qword ptr [rdx], rax ; add rsp, 8 ; ret
0x000000000008d5e7 : mov qword ptr [rdx], rax ; mov qword ptr [rax + 8], rdx ; ret
0x00000000000b8769 : mov qword ptr [rdx], rsi ; ret
0x000000000010407d : mov qword ptr [rsi + 0x30], rax ; ret
0x0000000000104173 : mov qword ptr [rsi + 0x58], rax ; ret
0x000000000008d596 : mov qword ptr [rsi + 8], rax ; ret
0x000000000008d5d2 : mov qword ptr [rsi + 8], rdi ; ret
0x0000000000126a0f : mov qword ptr [rsi + 8], rdx ; ret
0x000000000008d562 : mov qword ptr [rsi + 8], rsi ; mov qword ptr [rsi], rsi ; ret
0x000000000008fb19 : mov qword ptr [rsi], rax ; ret
0x000000000009c979 : mov qword ptr [rsi], rdx ; mov qword ptr [rax], rsi ; ret
0x00000000000d2b65 : mov qword ptr [rsi], rdx ; ret
0x000000000008d566 : mov qword ptr [rsi], rsi ; ret
0x00000000000dc2dc : mov qword ptr [rsp + 0x10], r9 ; call rax
0x000000000010cc28 : mov qword ptr [rsp + 0x10], rbp ; call 0x88ed7
0x00000000000e01d8 : mov qword ptr [rsp + 0x10], rdx ; mov rdi, rax ; call r11
0x00000000000bd1ec : mov qword ptr [rsp + 0x28], rax ; xor eax, eax ; call 0x89439
0x000000000009ed2f : mov qword ptr [rsp + 8], rax ; call 0x8b7f7
0x0000000000105d58 : mov qword ptr [rsp + 8], rcx ; mov rdi, rcx ; call rax
0x00000000000bd2a3 : mov qword ptr [rsp + 8], rdx ; call 0x89d77
0x0000000000104d81 : mov qword ptr [rsp], r9 ; xor edx, edx ; mov rdi, r12 ; call rax
0x000000000010644e : mov qword ptr [rsp], rax ; call 0x1026f6
0x000000000012bcb9 : mov qword ptr [rsp], rax ; call 0x128736
0x0000000000112210 : mov qword ptr [rsp], rax ; call 0xde4f6
0x0000000000104e25 : mov qword ptr [rsp], rcx ; xor edx, edx ; mov rdi, r12 ; call rax
0x00000000000a6f83 : mov r12, rax ; jmp 0xa6f57
0x00000000000e0fb4 : mov r12d, 1 ; jmp 0xe0f8e
0x00000000000e23f4 : mov r12d, 1 ; jmp 0xe23ce
0x00000000000eb72b : mov r12d, 1 ; jmp 0xeb705
0x00000000000ecb3b : mov r12d, 1 ; jmp 0xecb15
0x000000000009c9b8 : mov r13, rax ; call 0x89435
0x000000000009c9b7 : mov r13, rax ; call 0x89436
0x0000000000091110 : mov r13, rax ; mov rdi, rax ; call rbx
0x00000000000ffed7 : mov r13d, 0x8948fff8 ; ret
0x000000000010d480 : mov r13d, 1 ; jmp 0x10d45a
0x000000000010df20 : mov r13d, 1 ; jmp 0x10defa
0x0000000000132bcb : mov r13d, 1 ; jmp 0x132ba5
0x00000000001336db : mov r13d, 1 ; jmp 0x1336b5
0x00000000000c3ba2 : mov r14, rax ; call 0xbfe55
0x000000000014b090 : mov r15b, sil ; jmp rsp
0x000000000008ef00 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000000eabd4 : mov r8, r14 ; call rax
0x000000000012e7a5 : mov r8b, 0x29 ; ret 0x4589
0x00000000000ee8f5 : mov r8d, 0x8948fff9 ; out dx, eax ; call 0x8b3b9
0x00000000000e74c4 : mov r8d, 0x89fff883 ; ret 0xb8
0x00000000001240b4 : mov r8d, 0xffffffff ; pop rbx ; ret
0x00000000000c9028 : mov rax, -1 ; ret
0x00000000000ba7ef : mov rax, qword ptr [r8] ; ret
0x000000000008dc65 : mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000c13fe : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000103fbb : mov rax, qword ptr [rax + 0x18] ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000a5b39 : mov rax, qword ptr [rax + 0x20] ; add rsp, 0x18 ; jmp rax
0x00000000000c142e : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000c13e6 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000103fdb : mov rax, qword ptr [rax + 0x28] ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000c1416 : mov rax, qword ptr [rax + 0x30] ; jmp rax
0x00000000000c13ce : mov rax, qword ptr [rax + 0x38] ; jmp rax
0x0000000000103ffb : mov rax, qword ptr [rax + 0x38] ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000103df7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000103e07 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010402b : mov rax, qword ptr [rax + 0x48] ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000c7369 : mov rax, qword ptr [rax + 0x68] ; add rsp, 8 ; ret
0x000000000009274a : mov rax, qword ptr [rax + rcx*8] ; ret
0x00000000000d2a53 : mov rax, qword ptr [rax - 0x10] ; ret
0x00000000000d2a23 : mov rax, qword ptr [rax - 0x18] ; ret
0x000000000008ffea : mov rax, qword ptr [rax - 0x70] ; add rsp, 8 ; ret
0x000000000008fbb3 : mov rax, qword ptr [rax - 0x70] ; ret
0x00000000000bb2f4 : mov rax, qword ptr [rax] ; add rsp, 8 ; jmp rax
0x000000000008fcf7 : mov rax, qword ptr [rax] ; ret
0x00000000000d78f0 : mov rax, qword ptr [rbp] ; jmp 0xd78be
0x00000000000a5b7e : mov rax, qword ptr [rbx + 8] ; pop rbx ; ret
0x000000000008ec3b : mov rax, qword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x00000000000d7818 : mov rax, qword ptr [rbx] ; jmp 0xd77e4
0x00000000000d3c63 : mov rax, qword ptr [rbx] ; pop rbx ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000000a1b45 : mov rax, qword ptr [rbx] ; pop rbx ; ret
0x00000000000a1b12 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0xa1b49 ; pop rbx ; ret
0x00000000000e3910 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000000000e3920 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x28] ; ret
0x00000000000e3ab0 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x48] ; ret
0x00000000000e3ac0 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d8bf0 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000e3930 : mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x60] ; ret
0x00000000000d8bd0 : mov rax, qword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x21] ; ret
0x00000000000d8be0 : mov rax, qword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x22] ; ret
0x00000000000d8d70 : mov rax, qword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x48] ; ret
0x00000000000d8d80 : mov rax, qword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x49] ; ret
0x0000000000124340 : mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a78b0 : mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000124380 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000124390 : mov rax, qword ptr [rdi + 0x28] ; ret
0x00000000001243a0 : mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000000ee8b0 : mov rax, qword ptr [rdi + 0x40] ; ret
0x00000000000f92f0 : mov rax, qword ptr [rdi + 0xd8] ; ret
0x00000000000f9310 : mov rax, qword ptr [rdi + 0xe8] ; ret
0x0000000000125580 : mov rax, qword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x00000000000aa3e0 : mov rax, qword ptr [rdi + 8] ; lea rax, qword ptr [rax + rsi*8] ; ret
0x00000000000929f2 : mov rax, qword ptr [rdi + 8] ; ret
0x000000000008ebd0 : mov rax, qword ptr [rdi - 8] ; ret
0x00000000000d2860 : mov rax, qword ptr [rdi] ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000000d2a70 : mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x0000000000139444 : mov rax, qword ptr [rdi] ; lea rax, qword ptr [rax + rdx*4 - 4] ; ret
0x0000000000139104 : mov rax, qword ptr [rdi] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000000000d5b70 : mov rax, qword ptr [rdi] ; lea rax, qword ptr [rax + rsi*4] ; ret
0x00000000000d2a50 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x10] ; ret
0x00000000000d2a20 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x18] ; ret
0x000000000008fbb0 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x70] ; ret
0x000000000008fb00 : mov rax, qword ptr [rdi] ; ret
0x00000000000d2840 : mov rax, qword ptr [rdi] ; sub rax, 0x18 ; ret
0x000000000008dccf : mov rax, qword ptr [rdx + rax - 1] ; add rsp, 8 ; jmp rax
0x00000000000d66a0 : mov rax, qword ptr [rip + 0x2ac0d9] ; ret
0x00000000000d5a40 : mov rax, qword ptr [rip + 0x2acd39] ; ret
0x00000000000d3570 : mov rax, qword ptr [rip + 0x2af031] ; ret
0x00000000000d2960 : mov rax, qword ptr [rip + 0x2afc41] ; ret
0x0000000000090470 : mov rax, qword ptr [rip + 0x2f47a9] ; ret
0x000000000008fbc0 : mov rax, qword ptr [rsi] ; cmp qword ptr [rdi], rax ; sete al ; ret
0x000000000008d51b : mov rax, qword ptr [rsi] ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000ddbb0 : mov rax, qword ptr [rsi] ; ret
0x000000000011912c : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000009118e : mov rax, qword ptr [rsp + 8] ; sub rdi, rbp ; call rax
0x000000000009245b : mov rax, r10 ; ret
0x00000000000faf04 : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b2beb : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d765d : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d80ef : mov rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000000b21b1 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ab567 : mov rax, r14 ; pop r13 ; pop r14 ; ret
0x00000000000936ad : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000095442 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008fb6b : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b5d0c : mov rax, rbx ; jne 0xb5d06 ; pop rbx ; ret
0x0000000000125a67 : mov rax, rbx ; mov byte ptr [rdx + rsi], 0 ; pop rbx ; ret
0x00000000000926d7 : mov rax, rbx ; mov qword ptr [r11 + 0x48], rbp ; pop rbx ; pop rbp ; ret
0x00000000000c1b09 : mov rax, rbx ; pop rbx ; pop r12 ; pop r14 ; pop rbp ; ret
0x000000000009d21b : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b22a1 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e86b : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000008ca95 : mov rax, rbx ; pop rbx ; ret
0x0000000000127c01 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000013a813 : mov rax, rcx ; cmovae rax, rdx ; ret
0x00000000000d3693 : mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000d44c7 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000d3660 : mov rax, rcx ; ret
0x00000000000d29d3 : mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x0000000000092a2c : mov rax, rdi ; ret
0x000000000012d013 : mov rax, rdi ; sar rax, 2 ; ret
0x0000000000107281 : mov rax, rdi ; sub rax, r8 ; ret
0x000000000008fce7 : mov rax, rdi ; xchg qword ptr [rdx], rax ; ret
0x000000000008ea6e : mov rax, rdx ; add rsp, 8 ; ret
0x000000000013ae59 : mov rax, rdx ; cmp dword ptr [rcx + rax*4], esi ; je 0x13ae59 ; ret
0x00000000000d6309 : mov rax, rdx ; cmp dword ptr [rcx + rax*4], esi ; je 0xd6309 ; ret
0x000000000008d5b9 : mov rax, rdx ; jne 0x8d5ae ; ret
0x000000000008d6c9 : mov rax, rdx ; jne 0x8d6be ; ret
0x000000000008d749 : mov rax, rdx ; jne 0x8d73e ; ret
0x00000000000a11e9 : mov rax, rdx ; jne 0xa11de ; ret
0x00000000000a12f9 : mov rax, rdx ; jne 0xa12ee ; ret
0x00000000000a1379 : mov rax, rdx ; jne 0xa136e ; ret
0x00000000000a1489 : mov rax, rdx ; jne 0xa147e ; ret
0x00000000000a1509 : mov rax, rdx ; jne 0xa14fe ; ret
0x000000000008e9d4 : mov rax, rdx ; pop rbx ; ret
0x0000000000090410 : mov rax, rdx ; ret
0x00000000000c901c : mov rax, rdx ; sub rax, qword ptr [rdi + 0x10] ; ret
0x0000000000124f34 : mov rax, rsi ; cmp rsi, rcx ; ja 0x124f47 ; ret
0x0000000000138a44 : mov rax, rsi ; cmp rsi, rcx ; ja 0x138a57 ; ret
0x00000000000d3dc3 : mov rax, rsi ; jne 0xd3dd6 ; ret
0x00000000000d3dc2 : mov rax, rsi ; jne 0xd3dd7 ; ret
0x00000000000d2830 : mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x00000000000921d7 : mov rax, rsi ; ret
0x00000000000f2068 : mov rbp, rax ; mov qword ptr [rbx + 0x10], rcx ; jmp 0xf203c
0x00000000000f3eea : mov rbp, rax ; mov qword ptr [rbx + 0x10], rcx ; jmp 0xf3ebe
0x00000000000ad7ac : mov rbp, rax ; mov rdi, rbx ; call 0x89a58
0x000000000009ef4e : mov rbp, rax ; mov rdi, rbx ; call 0x8b1b8
0x000000000009137e : mov rbx, r8 ; jne 0x913a5 ; call rbx
0x00000000000fe1cd : mov rbx, rax ; call 0x8acc5
0x000000000008ebe1 : mov rbx, rdi ; call 0x8aed5
0x0000000000123b61 : mov rbx, rdi ; call rax
0x00000000000eabd1 : mov rcx, r12 ; mov r8, r14 ; call rax
0x00000000000b762a : mov rcx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call rax
0x00000000000bf63d : mov rcx, r15 ; mov rdi, r13 ; call 0x8b8c8
0x00000000000a8088 : mov rcx, r8 ; mov dword ptr [rcx], 1 ; ret
0x000000000009c042 : mov rcx, r8 ; test rcx, rcx ; jne 0x9c039 ; ret
0x00000000000fba27 : mov rdi, qword ptr [rax - 0x18] ; add rdi, rbx ; call rsi
0x000000000010fad0 : mov rdi, qword ptr [rbp + 0x10] ; mov rdx, rbx ; call 0x8bdd9
0x000000000009e3eb : mov rdi, qword ptr [rbp - 0x220] ; call 0x8aef9
0x00000000000ae4e8 : mov rdi, qword ptr [rbp - 0x78] ; call 0x8aff6
0x00000000000c5ecb : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x00000000000c3424 : mov rdi, qword ptr [rdi + 0x18] ; push 0 ; call 0xbfe48
0x000000000008fac7 : mov rdi, qword ptr [rdi] ; test rax, rax ; je 0x8fadc ; call rax
0x00000000001141b0 : mov rdi, qword ptr [rsp + 0x18] ; call rax
0x000000000012d529 : mov rdi, qword ptr [rsp + 0x20] ; mov esi, dword ptr [rax] ; call 0x89fc9
0x00000000000df4d7 : mov rdi, qword ptr [rsp + 0x30] ; call 0x8b767
0x00000000000eb376 : mov rdi, qword ptr [rsp + 0x48] ; call rax
0x00000000000e0b3b : mov rdi, qword ptr [rsp + 0x50] ; call rax
0x000000000010ccae : mov rdi, qword ptr [rsp + 0x58] ; call 0x89747
0x00000000000afeb1 : mov rdi, qword ptr [rsp + 8] ; call 0x8c107
0x00000000000af637 : mov rdi, qword ptr [rsp] ; call 0x8c106
0x000000000011235e : mov rdi, qword ptr [rsp] ; call 0xde5c6
0x00000000000ddd54 : mov rdi, r12 ; call 0x8a025
0x00000000000cde9b : mov rdi, r12 ; call 0x8a0b5
0x000000000009e3f7 : mov rdi, r12 ; call 0x8aef5
0x000000000009121b : mov rdi, r12 ; call r14
0x00000000000bf5f3 : mov rdi, r12 ; call rax
0x00000000000c375e : mov rdi, r12 ; call rdx
0x00000000000bf640 : mov rdi, r13 ; call 0x8b8c5
0x00000000000de9ba : mov rdi, r13 ; call r8
0x00000000000de988 : mov rdi, r13 ; call r9
0x00000000000c1611 : mov rdi, r13 ; call rax
0x00000000000df936 : mov rdi, r13 ; call rcx
0x00000000000dba77 : mov rdi, r13 ; lea rdx, qword ptr [rsi + rbx] ; call r8
0x00000000000afec0 : mov rdi, r14 ; call 0x8c105
0x00000000000be3a0 : mov rdi, r14 ; call rax
0x0000000000106806 : mov rdi, r14 ; call rcx
0x00000000000be3d8 : mov rdi, r14 ; call rdx
0x000000000009fa76 : mov rdi, r15 ; call 0x8bcb5
0x00000000000af657 : mov rdi, r15 ; call 0x8c105
0x00000000001057b0 : mov rdi, r15 ; call rax
0x00000000001145d8 : mov rdi, r15 ; call rdx
0x00000000000aceaa : mov rdi, rax ; call 0x89115
0x00000000000afed1 : mov rdi, rax ; call 0x8c105
0x00000000000e01dd : mov rdi, rax ; call r11
0x00000000000dff5e : mov rdi, rax ; call r8
0x0000000000090fec : mov rdi, rax ; call rbx
0x00000000000e09eb : mov rdi, rax ; call rdx
0x00000000000fc687 : mov rdi, rax ; jne 0xfc658 ; call 0x89117
0x00000000000fce38 : mov rdi, rax ; jne 0xfce11 ; call 0x89117
0x00000000000cd622 : mov rdi, rbp ; call 0x8a0b5
0x000000000009e9bb : mov rdi, rbp ; call 0x8ac55
0x00000000000ee8f9 : mov rdi, rbp ; call 0x8b3b5
0x0000000000090f30 : mov rdi, rbp ; call r12
0x00000000000b749a : mov rdi, rbp ; call rax
0x00000000000913cc : mov rdi, rbp ; call rbx
0x00000000000f93b3 : mov rdi, rbp ; call rdx
0x00000000000ad7af : mov rdi, rbx ; call 0x89a55
0x000000000009ef51 : mov rdi, rbx ; call 0x8b1b5
0x0000000000090ebb : mov rdi, rbx ; call r12
0x000000000010a90a : mov rdi, rbx ; call r8
0x000000000010a8d0 : mov rdi, rbx ; call r9
0x000000000008fa33 : mov rdi, rbx ; call rax
0x00000000000be1ec : mov rdi, rbx ; call rcx
0x00000000000be228 : mov rdi, rbx ; call rdx
0x00000000000ba06a : mov rdi, rbx ; mov rsi, r13 ; call rax
0x00000000000f9516 : mov rdi, rbx ; movsx esi, sil ; pop rbx ; jmp rdx
0x000000000008d807 : mov rdi, rbx ; pop rbx ; jmp 0x89a56
0x00000000001240d0 : mov rdi, rbx ; pop rbx ; jmp rax
0x00000000000ad7a2 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp 0x89a57
0x00000000000ba3ad : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000ba3d4 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rdx
0x0000000000091065 : mov rdi, rbx ; sub rdi, rbp ; call r15
0x0000000000105d5d : mov rdi, rcx ; call rax
0x00000000000bc150 : mov rdi, rdx ; jmp rax
0x00000000000a5bb4 : mov rdi, rsi ; test rax, rax ; je 0xa5bc8 ; jmp rax
0x00000000000a5bb3 : mov rdi, rsi ; test rax, rax ; je 0xa5bc9 ; jmp rax
0x00000000000a5d99 : mov rdi, rsi ; test rax, rax ; je 0xa5db8 ; jmp rax
0x00000000000a5d98 : mov rdi, rsi ; test rax, rax ; je 0xa5db9 ; jmp rax
0x00000000000d2ac3 : mov rdx, qword ptr [rax - 0x18] ; lea rax, qword ptr [rax + rdx - 1] ; ret
0x00000000000d5bc3 : mov rdx, qword ptr [rax - 0x18] ; lea rax, qword ptr [rax + rdx*4 - 4] ; ret
0x00000000000d5903 : mov rdx, qword ptr [rax - 0x18] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000000000009c976 : mov rdx, qword ptr [rax] ; mov qword ptr [rsi], rdx ; mov qword ptr [rax], rsi ; ret
0x0000000000125884 : mov rdx, qword ptr [rdi] ; lea rax, qword ptr [rdx + rax - 1] ; ret
0x0000000000095910 : mov rdx, qword ptr [rdx + 8] ; mov edi, dword ptr [rdx] ; call 0x92388
0x00000000000fdbb9 : mov rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi + rdx + 0x10], rsi ; ret
0x00000000000fdb99 : mov rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi + rdx + 8], rsi ; ret
0x000000000011300a : mov rdx, qword ptr [rsi + 8] ; mov qword ptr [rdi + rax], rdx ; ret
0x000000000008fb13 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; mov qword ptr [rsi], rax ; ret
0x00000000000d29d0 : mov rdx, qword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x00000000000962bf : mov rdx, rax ; add rax, 1 ; jmp 0x9629b
0x00000000000964b7 : mov rdx, rax ; add rax, 1 ; jmp 0x96493
0x0000000000096827 : mov rdx, rax ; add rax, 1 ; jmp 0x96803
0x000000000009689f : mov rdx, rax ; add rax, 1 ; jmp 0x9687b
0x0000000000096917 : mov rdx, rax ; add rax, 1 ; jmp 0x968f3
0x0000000000096b9f : mov rdx, rax ; add rax, 1 ; jmp 0x96b7b
0x0000000000096c17 : mov rdx, rax ; add rax, 1 ; jmp 0x96bf3
0x0000000000096c8f : mov rdx, rax ; add rax, 1 ; jmp 0x96c6b
0x0000000000096d07 : mov rdx, rax ; add rax, 1 ; jmp 0x96ce3
0x0000000000096d7f : mov rdx, rax ; add rax, 1 ; jmp 0x96d5b
0x0000000000096df7 : mov rdx, rax ; add rax, 1 ; jmp 0x96dd3
0x0000000000096e6f : mov rdx, rax ; add rax, 1 ; jmp 0x96e4b
0x0000000000096ee7 : mov rdx, rax ; add rax, 1 ; jmp 0x96ec3
0x0000000000096f67 : mov rdx, rax ; add rax, 1 ; jmp 0x96f43
0x0000000000096fdf : mov rdx, rax ; add rax, 1 ; jmp 0x96fbb
0x0000000000097057 : mov rdx, rax ; add rax, 1 ; jmp 0x97033
0x00000000000970cf : mov rdx, rax ; add rax, 1 ; jmp 0x970ab
0x0000000000097147 : mov rdx, rax ; add rax, 1 ; jmp 0x97123
0x00000000000971bf : mov rdx, rax ; add rax, 1 ; jmp 0x9719b
0x0000000000097237 : mov rdx, rax ; add rax, 1 ; jmp 0x97213
0x000000000009732f : mov rdx, rax ; add rax, 1 ; jmp 0x9730b
0x0000000000097547 : mov rdx, rax ; add rax, 1 ; jmp 0x97523
0x00000000000975bf : mov rdx, rax ; add rax, 1 ; jmp 0x9759b
0x0000000000097737 : mov rdx, rax ; add rax, 1 ; jmp 0x97713
0x000000000009799f : mov rdx, rax ; add rax, 1 ; jmp 0x9797b
0x0000000000097a17 : mov rdx, rax ; add rax, 1 ; jmp 0x979f3
0x0000000000097a8f : mov rdx, rax ; add rax, 1 ; jmp 0x97a6b
0x0000000000097b07 : mov rdx, rax ; add rax, 1 ; jmp 0x97ae3
0x0000000000097b7f : mov rdx, rax ; add rax, 1 ; jmp 0x97b5b
0x0000000000097bf7 : mov rdx, rax ; add rax, 1 ; jmp 0x97bd3
0x0000000000097c6f : mov rdx, rax ; add rax, 1 ; jmp 0x97c4b
0x0000000000097ddf : mov rdx, rax ; add rax, 1 ; jmp 0x97dbb
0x0000000000097f17 : mov rdx, rax ; add rax, 1 ; jmp 0x97ef3
0x00000000000980af : mov rdx, rax ; add rax, 1 ; jmp 0x9808b
0x0000000000098267 : mov rdx, rax ; add rax, 1 ; jmp 0x98243
0x0000000000098be7 : mov rdx, rax ; add rax, 1 ; jmp 0x98bc3
0x0000000000098c57 : mov rdx, rax ; add rax, 1 ; jmp 0x98c33
0x0000000000098cd7 : mov rdx, rax ; add rax, 1 ; jmp 0x98cb3
0x0000000000098e27 : mov rdx, rax ; add rax, 1 ; jmp 0x98e03
0x0000000000098e9b : mov rdx, rax ; add rax, 1 ; jmp 0x98e77
0x0000000000099169 : mov rdx, rax ; add rax, 1 ; jmp 0x99145
0x000000000009a087 : mov rdx, rax ; add rax, 1 ; jmp 0x9a063
0x000000000009a11f : mov rdx, rax ; add rax, 1 ; jmp 0x9a0fb
0x000000000009a19f : mov rdx, rax ; add rax, 1 ; jmp 0x9a17b
0x000000000009a21f : mov rdx, rax ; add rax, 1 ; jmp 0x9a1fb
0x000000000009a4f7 : mov rdx, rax ; add rax, 1 ; jmp 0x9a4d3
0x000000000009a56f : mov rdx, rax ; add rax, 1 ; jmp 0x9a54b
0x000000000009a5ef : mov rdx, rax ; add rax, 1 ; jmp 0x9a5cb
0x000000000009a66f : mov rdx, rax ; add rax, 1 ; jmp 0x9a64b
0x000000000009a6ef : mov rdx, rax ; add rax, 1 ; jmp 0x9a6cb
0x000000000009a76f : mov rdx, rax ; add rax, 1 ; jmp 0x9a74b
0x000000000009a7ef : mov rdx, rax ; add rax, 1 ; jmp 0x9a7cb
0x000000000009ae47 : mov rdx, rax ; add rax, 1 ; jmp 0x9ae1b
0x000000000009b5b7 : mov rdx, rax ; add rax, 1 ; jmp 0x9b593
0x00000000000baa0b : mov rdx, rax ; mov eax, 1 ; ret
0x000000000008d9ee : mov rdx, rax ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000d99db : mov rdx, rbp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010fad4 : mov rdx, rbx ; call 0x8bdd5
0x00000000000bbda0 : mov rdx, rdi ; mov eax, esi ; ret
0x000000000011e5ee : mov rsi, qword ptr [rdi + 0x48] ; xor edx, edx ; jmp 0x8a818
0x00000000000e0213 : mov rsi, qword ptr [rsp + 0x20] ; call rax
0x00000000000ce53d : mov rsi, r12 ; call 0x8a765
0x000000000011220d : mov rsi, r12 ; mov qword ptr [rsp], rax ; call 0xde4f9
0x00000000000ba06d : mov rsi, r13 ; call rax
0x0000000000123ee0 : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000c2b2d : mov rsi, r14 ; mov rdi, r12 ; call rax
0x00000000000c3153 : mov rsi, r14 ; mov rdi, rbx ; call rax
0x00000000000bf688 : mov rsi, r15 ; call 0x8b965
0x00000000000bf6e1 : mov rsi, r15 ; call 0x8c1d3
0x00000000000e38d8 : mov rsi, r15 ; mov rdi, r14 ; call rax
0x00000000000a7c10 : mov rsi, r9 ; mov dword ptr [rsi], 1 ; ret
0x00000000000c3b9f : mov rsi, rax ; mov r14, rax ; call 0xbfe58
0x0000000000105775 : mov rsi, rbp ; mov rdi, r13 ; call rax
0x00000000001057ad : mov rsi, rbp ; mov rdi, r15 ; call rax
0x0000000000091218 : mov rsi, rbx ; mov rdi, r12 ; call r14
0x00000000000b7497 : mov rsi, rbx ; mov rdi, rbp ; call rax
0x00000000000fe9aa : mov rsi, rdx ; add rdi, qword ptr [rax - 0x18] ; jmp 0x8ac89
0x0000000000097d67 : mov rsi, rdx ; add rdx, 1 ; jmp 0x97d43
0x0000000000005252 : mov ss, word ptr [rdx - 0x1b] ; leave ; retf
0x00000000000b3f2b : mov word ptr [r8], si ; add qword ptr [rdi], 2 ; ret
0x0000000000160a1c : mov word ptr [rax + 1], ss ; add byte ptr [rax - 0x7f], dh ; clc ; call rcx
0x000000000014c4dc : mov word ptr [rax + rax], cs ; add byte ptr [rax + 0x1d], al ; hlt ; call qword ptr [rdi]
0x000000000008f3d5 : mov word ptr [rax + rbp*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001670dc : mov word ptr [rax - 0x38afffff], dr1 ; stc ; call qword ptr [rax]
0x0000000000172dfb : mov word ptr [rax - 0x5dfefc3b], es ; add al, 5 ; retf 0x504
0x000000000016e8dc : mov word ptr [rax], dr0 ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x0000000000004e10 : mov word ptr [rax], dr0 ; mov eax, 0xde3a7577 ; ret
0x00000000000f406a : mov word ptr [rax], es ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000015fddc : mov word ptr [rbp + 1], es ; add byte ptr [rax], ah ; clc ; jmp qword ptr [rdx]
0x00000000001498ec : mov word ptr [rbp + 2], cs ; add byte ptr [rcx + rcx*8], al ; cld ; jmp rsp
0x000000000016571c : mov word ptr [rbp - 0x764fffff], ds ; stc ; jmp qword ptr [rdi]
0x0000000000146d7c : mov word ptr [rbx + 1], fs ; add byte ptr [rax - 8], ah ; call rsp
0x000000000014d3dc : mov word ptr [rbx], ds ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; hlt ; call qword ptr [rdi]
0x000000000017667f : mov word ptr [rbx], es ; add ebp, dword ptr [rbx + rax + 0x3e005] ; retf
0x000000000015fcdc : mov word ptr [rcx + rax], es ; push rax ; clc ; jmp qword ptr [rdx]
0x00000000000a1d80 : mov word ptr [rcx - 2], dr1 ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; ret
0x000000000016448d : mov word ptr [rcx], es ; add byte ptr [rax + 0x58], al ; stc ; call qword ptr [rbx]
0x0000000000176e3a : mov word ptr [rcx], es ; add byte ptr [rax], al ; ret
0x00000000001038a6 : mov word ptr [rdi + 0x48], ax ; ret
0x000000000015ffdc : mov word ptr [rdi + 1], es ; add byte ptr [rax], al ; push rax ; clc ; jmp qword ptr [rdx]
0x000000000016e7dc : mov word ptr [rdi], gs ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x0000000000146f2c : mov word ptr [rdx + 1], gs ; add byte ptr [rsi + rbp*8], al ; clc ; jmp rsp
0x0000000000171adc : mov word ptr [rdx + 2], fs ; add byte ptr [rax], al ; jge 0x171ae6 ; call qword ptr [rcx]
0x0000000000149f14 : mov word ptr [rdx + rax], gs ; add al, 0x5f ; std ; call rsp
0x0000000000003455 : mov word ptr [rdx - 0x3f031ba7], cs ; retf -0x1dfc
0x000000000000329d : mov word ptr [rdx], es ; retf 0x70ec
0x0000000000151adc : mov word ptr [rdx], fs ; add al, ah ; retf -0xb
0x000000000014bddc : mov word ptr [rip + 0x1a800000], es ; hlt ; call qword ptr [rcx]
0x000000000014f71c : mov word ptr [rip + 0x26700000], dr1 ; cmc ; call rax
0x000000000014d5dc : mov word ptr [rip + 0x35600000], ds ; hlt ; call qword ptr [rdi]
0x000000000015fedc : mov word ptr [rsi + 1], es ; add byte ptr [rax], dh ; clc ; jmp qword ptr [rdx]
0x00000000001605f0 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; retf
0x000000000015e55c : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; ret
0x0000000000000cfb : mov word ptr [rsi], es ; xor al, 0x15 ; push rcx ; jo 0xc96 ; retf 0x101
0x0000000000004414 : movabs al, byte ptr [0x20849a932c3ed89d] ; ret 0x5a81
0x00000000001775e6 : movabs al, byte ptr [0x305fc0502af0307] ; ret
0x00000000001643c0 : movabs al, byte ptr [0x400000086fff957] ; ret
0x000000000013b102 : movabs al, byte ptr [0x74c085fff4e528e8] ; ret 0x5d5b
0x00000000000bf63c : movabs al, byte ptr [0x78e8ef894cf9894c] ; ret 0xfffc
0x000000000012c9cc : movabs al, byte ptr [0x89480b8b48fff5d3] ; ret 0xc031
0x00000000000de2cc : movabs al, byte ptr [0x89480b8b48fffaba] ; ret 0xc031
0x0000000000070060 : movabs al, byte ptr [0x90000000000013ed] ; ret 0x37
0x0000000000007248 : movabs byte ptr [0x80a1f01d6ffa317e], al ; ret 0x2b5
0x0000000000003559 : movabs byte ptr [0xb7b0928fb3b0c758], al ; retf
0x0000000000005928 : movabs byte ptr [0xe00a3e120f2b1874], al ; retf 0x297c
0x00000000001783e6 : movabs dword ptr [0x4c80502ea0004], eax ; ret
0x00000000000d4c71 : movabs dword ptr [0x5b20c48348000000], eax ; ret
0x00000000000bbe43 : movabs dword ptr [0x8348243c8b48ffff], eax ; ret
0x00000000000a8c29 : movabs dword ptr [0x8948001f0ffffffe], eax ; retf -0x76b4
0x0000000000174f1a : movabs eax, dword ptr [0x501b30002880501] ; retf
0x00000000000144b8 : movabs eax, dword ptr [0x52000f0021000026] ; ret
0x0000000000104703 : movabs eax, dword ptr [0x8348f889480027de] ; ret 0x4818
0x0000000000003452 : movabs eax, dword ptr [0xc0fce4598a8c781d] ; retf -0x1dfc
0x000000000009ae46 : movabs eax, dword ptr [0xeb01c08348c28948] ; ret
0x000000000000592c : movlps xmm7, qword ptr [rsi] ; or ah, al ; retf 0x297c
0x0000000000149580 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0xfc ; jmp rsp
0x000000000014aa65 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; test byte ptr [rsi + rdi*8], bh ; call rsp
0x0000000000148a74 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rdx] ; add byte ptr [rdx + rbx*2], dh ; sti ; call rsp
0x0000000000146618 : movsb byte ptr [rdi], byte ptr [rsi] ; add bh, al ; call rsp
0x00000000001458c0 : movsb byte ptr [rdi], byte ptr [rsi] ; add bh, dh ; jmp rsp
0x000000000015f9f4 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [r8], eax ; js 0x15fa47 ; clc ; call rax
0x00000000001487bc : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; mov ah, 0x26 ; sti ; call rsp
0x0000000000146884 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; xor al, 0x3a ; clc ; jmp rsp
0x000000000014bdf4 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x1a880000 ; hlt ; call qword ptr [rcx]
0x0000000000147ed8 : movsb byte ptr [rdi], byte ptr [rsi] ; add edx, edi ; jmp rsp
0x0000000000146ac4 : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; and al, 0x75 ; clc ; call rsp
0x000000000015daf4 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rcx] ; add byte ptr [rax], cl ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x0000000000101754 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000148331 : movsb byte ptr [rdi], byte ptr [rsi] ; cli ; call rsp
0x0000000000148898 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp al, 0xfb ; jmp rsp
0x000000000014f3f4 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], ch ; cmc ; jmp qword ptr [rax]
0x0000000000144b84 : movsb byte ptr [rdi], byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; push rsp ; mov dh, ch ; call rsp
0x00000000001444e1 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp rsp
0x0000000000144ad8 : movsb byte ptr [rdi], byte ptr [rsi] ; jae 0x144ad3 ; jmp rsp
0x00000000001664f4 : movsb byte ptr [rdi], byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; call 0x14165ebc
0x0000000000145570 : movsb byte ptr [rdi], byte ptr [rsi] ; loopne 0x14556c ; jmp rsp
0x000000000014b6ac : movsb byte ptr [rdi], byte ptr [rsi] ; loopne 0x14b6b8 ; add byte ptr [rax + rbp*2 - 1], dh ; call rsp
0x00000000001670f4 : movsb byte ptr [rdi], byte ptr [rsi] ; mov eax, 0xc7480001 ; stc ; call qword ptr [rax]
0x0000000000147f84 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebp, 0xbd40001 ; cli ; call rsp
0x0000000000147f24 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ebx, 0x6f40001 ; cli ; call rsp
0x0000000000147efc : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0x3340001 ; cli ; call rsp
0x0000000000005479 : movsb byte ptr [rdi], byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; fiadd dword ptr [rdi] ; fistp qword ptr [rax - 0x22] ; retf
0x00000000000007d1 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rax ; sti ; retf -0x5ef3
0x00000000001469d0 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rdx ; clc ; jmp rsp
0x00000000001555f4 : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add byte ptr [rax], al ; sub byte ptr [rdx - 0xa], ah ; call qword ptr [rdx]
0x00000000000ad6a8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000014100 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x13
0x00000000001463d8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x00000000000ad7a8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffd
0x00000000000051f9 : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001448c0 : movsb byte ptr [rdi], byte ptr [rsi] ; retf -0xc
0x0000000000144940 : movsb byte ptr [rdi], byte ptr [rsi] ; sal ah, cl ; jmp rsp
0x0000000000145008 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dh, dh ; jmp rsp
0x0000000000147390 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb ecx, edi ; call rsp
0x000000000014a280 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; std ; jmp rsp
0x0000000000149a88 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; cld ; jmp rsp
0x0000000000147600 : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0xf9 ; call rsp
0x0000000000166234 : movsb byte ptr [rdi], byte ptr [rsi] ; test al, 1 ; add al, cl ; mov dl, 0xf9 ; jmp qword ptr [rdi]
0x00000000001474ec : movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rcx], eax ; add byte ptr [rcx], al ; stc ; call rsp
0x0000000000144b2d : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; je 0x144abb ; cmc ; call rsp
0x000000000000812f : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; retf 0x582c
0x00000000000c0a5a : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000169549 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp qword ptr [rbx]
0x0000000000151451 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rsi
0x0000000000108107 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004b2e : movsd dword ptr [rdi], dword ptr [rsi] ; frstor dword ptr [rcx] ; js 0x4b02 ; push rbp ; retf -0x2850
0x000000000000347a : movsd dword ptr [rdi], dword ptr [rsi] ; insb byte ptr [rdi], dx ; mov gs, ecx ; nop ; pop rax ; jbe 0x340e ; ret 0x9349
0x0000000000100877 : movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b3861 : movsd dword ptr [rdi], dword ptr [rsi] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x000000000000401c : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x80fc
0x00000000000b3860 : movsq qword ptr [rdi], qword ptr [rsi] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x0000000000103dc8 : movsx eax, al ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000103de4 : movsx eax, al ; mov rax, qword ptr [rax + 0x38] ; jmp rax
0x0000000000103df4 : movsx eax, al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000103e04 : movsx eax, al ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000da717 : movsx ecx, cl ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da727 : movsx ecx, cl ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000010d157 : movsx esi, ah ; mov rdi, rbx ; call rax
0x000000000010d0a9 : movsx esi, ah ; xor edx, edx ; mov rdi, rbx ; call rcx
0x00000000000dfa50 : movsx esi, al ; mov rdi, r13 ; call rcx
0x000000000010b71f : movsx esi, al ; mov rdi, rbx ; call rcx
0x00000000000de983 : movsx esi, al ; xor edx, edx ; mov rdi, r13 ; call r9
0x000000000010a8cb : movsx esi, al ; xor edx, edx ; mov rdi, rbx ; call r9
0x00000000000e0bba : movsx esi, bh ; xor edx, edx ; mov rdi, r13 ; call rax
0x00000000000df931 : movsx esi, bh ; xor edx, edx ; mov rdi, r13 ; call rcx
0x000000000010b651 : movsx esi, bh ; xor edx, edx ; mov rdi, rbx ; call rcx
0x00000000001028f4 : movsx esi, bpl ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001028f5 : movsx esi, ch ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010d1a4 : movsx esi, ch ; xor edx, edx ; mov rdi, rbx ; call r8
0x0000000000104dda : movsx esi, cl ; xor edx, edx ; mov rdi, r12 ; call rax
0x00000000000de9b5 : movsx esi, cl ; xor edx, edx ; mov rdi, r13 ; call r8
0x000000000010a905 : movsx esi, cl ; xor edx, edx ; mov rdi, rbx ; call r8
0x00000000000f94ad : movsx esi, dh ; mov rdi, rbx ; call rax
0x00000000000f951a : movsx esi, dh ; pop rbx ; jmp rdx
0x000000000010d156 : movsx esi, r12b ; mov rdi, rbx ; call rax
0x000000000010d0a8 : movsx esi, r12b ; xor edx, edx ; mov rdi, rbx ; call rcx
0x00000000000e0bb9 : movsx esi, r15b ; xor edx, edx ; mov rdi, r13 ; call rax
0x00000000000df930 : movsx esi, r15b ; xor edx, edx ; mov rdi, r13 ; call rcx
0x000000000010b650 : movsx esi, r15b ; xor edx, edx ; mov rdi, rbx ; call rcx
0x0000000000104dd9 : movsx esi, r9b ; xor edx, edx ; mov rdi, r12 ; call rax
0x00000000000f94ac : movsx esi, sil ; mov rdi, rbx ; call rax
0x00000000000f9519 : movsx esi, sil ; pop rbx ; jmp rdx
0x0000000000114229 : movsx esp, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rax
0x0000000000103dc7 : movsx r8d, r8b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000103de3 : movsx r8d, r8b ; mov rax, qword ptr [rax + 0x38] ; jmp rax
0x0000000000103df3 : movsx r8d, r8b ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000103e03 : movsx r8d, r8b ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000da716 : movsx r9d, r9b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da726 : movsx r9d, r9b ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000c13b5 : movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x00000000000da993 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000008eed1 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000009215f : movsxd rax, dword ptr [r9 + r8*4] ; add rax, r9 ; jmp rax
0x000000000009225a : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x0000000000095840 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000960aa : movsxd rax, dword ptr [rdi + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000999a8 : movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000000943a9 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000b2083 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x0000000000095619 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000de801 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ab9ce : movsxd rcx, dword ptr [r10 + r9*4] ; add rcx, r10 ; jmp rcx
0x000000000000839a : movsxd rcx, ebx ; xchg eax, ebp ; cmp bl, byte ptr [rbp - 0x12e9b167] ; retf 0x577a
0x00000000000cb330 : movsxd rcx, ecx ; add rcx, rsi ; mov qword ptr [rdi + 0x28], rcx ; ret
0x0000000000148b71 : movsxd rdi, ebx ; jmp rsp
0x000000000009597a : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000011587a : movsxd rsi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000124361 : movsxd rsi, esi ; add qword ptr [rdi + 0x10], rsi ; ret
0x00000000001243b1 : movsxd rsi, esi ; add qword ptr [rdi + 0x28], rsi ; ret
0x00000000001556d1 : movsxd rsi, esi ; call rax
0x00000000001452b9 : movsxd rsi, esi ; jmp rsp
0x00000000000c7b71 : movsxd rsi, esi ; movzx eax, byte ptr [rdi + rsi + 0x19] ; ret
0x000000000008df35 : movups xmmword ptr [rbx + 0x30], xmm0 ; movups xmmword ptr [rbx + 0x40], xmm0 ; pop rbx ; ret
0x000000000008df39 : movups xmmword ptr [rbx + 0x40], xmm0 ; pop rbx ; ret
0x00000000000b5e07 : movups xmmword ptr [rdi + 0x10], xmm0 ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000000b5e0b : movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000000b3937 : movzx eax, al ; mov qword ptr [rdi], rdx ; ret
0x00000000000ee1fd : movzx eax, al ; neg eax ; ret
0x00000000000ab214 : movzx eax, al ; or eax, edx ; ret
0x0000000000092999 : movzx eax, al ; ret
0x00000000000d8bd4 : movzx eax, byte ptr [rax + 0x21] ; ret
0x00000000000d8be4 : movzx eax, byte ptr [rax + 0x22] ; ret
0x00000000000d8d74 : movzx eax, byte ptr [rax + 0x48] ; ret
0x00000000000d8d84 : movzx eax, byte ptr [rax + 0x49] ; ret
0x0000000000124208 : movzx eax, byte ptr [rax - 1] ; ret
0x00000000000de5e6 : movzx eax, byte ptr [rax] ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000012408e : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000a592a : movzx eax, byte ptr [rax] ; ret
0x00000000000f9349 : movzx eax, byte ptr [rdi + 0xe0] ; ret
0x00000000000c7b73 : movzx eax, byte ptr [rdi + rsi + 0x19] ; ret
0x00000000000fd800 : movzx eax, byte ptr [rdi] ; ret
0x000000000008ca50 : movzx eax, byte ptr [rsi] ; cmp byte ptr [rdi], al ; sete al ; ret
0x000000000008cb08 : movzx eax, byte ptr [rsi] ; mov byte ptr [rdi], al ; ret
0x00000000000b3936 : movzx eax, r8b ; mov qword ptr [rdi], rdx ; ret
0x000000000012e544 : movzx ecx, cl ; call 0x8af65
0x00000000000da6d4 : movzx ecx, cl ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da6e4 : movzx ecx, cl ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000001269a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rax], dl ; mov rax, rbx ; pop rbx ; ret
0x0000000000123b10 : movzx esi, byte ptr [r14] ; mov rdi, rbp ; call rax
0x0000000000123b11 : movzx esi, byte ptr [rsi] ; mov rdi, rbp ; call rax
0x0000000000124226 : movzx esi, dh ; jmp rdx
0x00000000000c7555 : movzx esi, dh ; mov eax, dword ptr [rax + rsi*4] ; ret
0x0000000000124225 : movzx esi, sil ; jmp rdx
0x00000000000c7554 : movzx esi, sil ; mov eax, dword ptr [rax + rsi*4] ; ret
0x000000000012e543 : movzx r9d, r9b ; call 0x8af66
0x00000000000da6d3 : movzx r9d, r9b ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000da6e3 : movzx r9d, r9b ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000052e7 : mul dword ptr [rsi] ; ret 0xb232
0x000000000000861d : neg dword ptr [rsi] ; ret
0x00000000000ee200 : neg eax ; ret
0x00000000000949ec : nop ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000daa61 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000daf29 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001447ad : nop ; add byte ptr [rax], al ; and al, 0xc3 ; hlt ; call rsp
0x000000000014479d : nop ; add byte ptr [rax], al ; push rsp ; ret 0xfff4
0x00000000001447b5 : nop ; add byte ptr [rax], al ; ret
0x0000000000147735 : nop ; add dword ptr [rax], eax ; mov ah, 0x39 ; stc ; jmp rsp
0x000000000012443f : nop ; add qword ptr [rdi + 0x28], rsi ; ret
0x000000000008ffed : nop ; add rsp, 8 ; ret
0x0000000000026880 : nop ; call qword ptr [rax]
0x00000000000e49cf : nop ; call rax
0x00000000000bbfaf : nop ; call rdx
0x00000000000f3586 : nop ; cld ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000d5bca : nop ; cld ; ret
0x00000000001257cf : nop ; cmp qword ptr [rdi + 8], 0 ; sete al ; ret
0x0000000000157f40 : nop ; div dh ; call qword ptr [rbx]
0x000000000016edf0 : nop ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000000a6ddf : nop ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000f3fcf : nop ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a71cf : nop ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000008df9f : nop ; lea rax, qword ptr [rip + 0xadf7b] ; ret
0x000000000008d77f : nop ; lea rax, qword ptr [rip + 0xae619] ; ret
0x000000000012bc5f : nop ; lea rsi, qword ptr [rsp + 0x17] ; call 0x128738
0x000000000008db4f : nop ; mov byte ptr [rdi], 0 ; ret
0x000000000012565f : nop ; mov eax, 0xf ; ret
0x000000000013920f : nop ; mov eax, 3 ; ret
0x00000000000a1a7f : nop ; mov eax, 4 ; ret
0x00000000000ade9f : nop ; mov eax, esi ; lock xadd dword ptr [rdi], eax ; ret
0x00000000000b3aaf : nop ; mov qword ptr [r8], rdx ; mov eax, 3 ; ret
0x00000000000be1e7 : nop ; mov qword ptr [rbp - 0x68], rdx ; mov rdi, rbx ; call rcx
0x0000000000124d9f : nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000000f958f : nop ; mov qword ptr [rdi + 0xe8], rsi ; ret
0x0000000000124d5f : nop ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000001274bf : nop ; mov qword ptr [rdi], rsi ; ret
0x00000000000e39bf : nop ; mov rax, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000000000d8c7f : nop ; mov rax, qword ptr [rdi + 0x10] ; movzx eax, byte ptr [rax + 0x21] ; ret
0x000000000012433f : nop ; mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a78af : nop ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000012438f : nop ; mov rax, qword ptr [rdi + 0x28] ; ret
0x000000000012439f : nop ; mov rax, qword ptr [rdi + 0x30] ; ret
0x00000000000f930f : nop ; mov rax, qword ptr [rdi + 0xe8] ; ret
0x000000000012557f : nop ; mov rax, qword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x00000000000aa3df : nop ; mov rax, qword ptr [rdi + 8] ; lea rax, qword ptr [rax + rsi*8] ; ret
0x00000000000a541f : nop ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000000d285f : nop ; mov rax, qword ptr [rdi] ; add rax, qword ptr [rax - 0x18] ; ret
0x000000000008faff : nop ; mov rax, qword ptr [rdi] ; ret
0x00000000000d669f : nop ; mov rax, qword ptr [rip + 0x2ac0d9] ; ret
0x00000000000d356f : nop ; mov rax, qword ptr [rip + 0x2af031] ; ret
0x00000000000d2baf : nop ; mov rax, rdi ; ret
0x000000000009040f : nop ; mov rax, rdx ; ret
0x00000000000d282f : nop ; mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x0000000000090f2f : nop ; mov rdi, rbp ; call r12
0x00000000000bc59f : nop ; mov rdi, rbx ; call rax
0x00000000000f4069 : nop ; mov word ptr [rax], es ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012435f : nop ; movsxd rsi, esi ; add qword ptr [rdi + 0x10], rsi ; ret
0x00000000001243af : nop ; movsxd rsi, esi ; add qword ptr [rdi + 0x28], rsi ; ret
0x0000000000165930 : nop ; nop ; stc ; ljmp ptr [rsi + 0x4000000] ; retf
0x00000000000e90dc : nop ; or al, 0xfa ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000004ecb : nop ; or eax, 0xa3d66dd6 ; mov ch, 0x64 ; retf 0x1f43
0x000000000000347e : nop ; pop rax ; jbe 0x340a ; ret 0x9349
0x000000000008ec3f : nop ; pop rbx ; ret
0x000000000008ebdf : nop ; push rbx ; mov rbx, rdi ; call 0x8aed7
0x00000000000009ee : nop ; ret
0x0000000000070068 : nop ; ret 0x37
0x000000000016a090 : nop ; ret 0xfffa
0x000000000001db38 : nop ; retf
0x0000000000014448 : nop ; retf 0x37
0x0000000000143ba4 : nop ; sar dh, 1 ; jmp qword ptr [rax]
0x0000000000165919 : nop ; stc ; jmp qword ptr [rsi]
0x000000000014247d : nop ; stc ; jmp rsp
0x0000000000165931 : nop ; stc ; ljmp ptr [rsi + 0x4000000] ; retf
0x00000000000b2638 : nop ; std ; dec dword ptr [rax + 0x29] ; ret
0x00000000000f9c5f : nop ; test byte ptr [rdi + 0x20], 5 ; sete al ; ret
0x00000000000b46cf : nop ; test byte ptr [rsi], 4 ; jne 0xb46e7 ; ret
0x00000000000b46ce : nop ; test byte ptr [rsi], 4 ; jne 0xb46e8 ; ret
0x0000000000102a9c : nop ; test edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001655a0 : nop ; test edi, ecx ; call qword ptr [rbx]
0x000000000016e380 : nop ; xchg eax, ebp ; sti ; call qword ptr [rdi]
0x0000000000106cdc : nop ; xor al, bh ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000009240f : nop ; xor eax, eax ; ret
0x000000000009245f : nop ; xor r10d, r10d ; mov rax, r10 ; ret
0x000000000012442b : nop dword ptr [rax + rax] ; add qword ptr [rdi + 0x10], rsi ; ret
0x00000000000ba3c3 : nop dword ptr [rax + rax] ; call rax
0x00000000000ba54b : nop dword ptr [rax + rax] ; call rdx
0x00000000000d9d98 : nop dword ptr [rax + rax] ; jmp rax
0x0000000000124163 : nop dword ptr [rax + rax] ; jmp rdx
0x00000000000fba0b : nop dword ptr [rax + rax] ; jmp rsi
0x00000000000cc9db : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000cea0b : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000cd87b : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000008d03b : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000b886b : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rax ; ret
0x00000000000d355b : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rsi ; ret
0x000000000012561b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000000d29db : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000000bc6c3 : nop dword ptr [rax + rax] ; mov rdi, rbp ; call rax
0x00000000000ba53b : nop dword ptr [rax + rax] ; mov rdi, rbx ; call rax
0x00000000000fd7fb : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi] ; ret
0x000000000008c998 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000008dc73 : nop dword ptr [rax + rax] ; pop rbx ; jmp rdx
0x00000000000b91db : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008dc6b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000012416b : nop dword ptr [rax + rax] ; push rbx ; mov rbx, rdi ; call rax
0x000000000008dc18 : nop dword ptr [rax + rax] ; ret
0x000000000008fcbb : nop dword ptr [rax + rax] ; sub rsp, 8 ; call rdi
0x00000000000953db : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000092aab : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d3c6c : nop dword ptr [rax] ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000001240f1 : nop dword ptr [rax] ; call rax
0x000000000012486d : nop dword ptr [rax] ; call rdx
0x000000000012e4d9 : nop dword ptr [rax] ; jmp 0x8af69
0x000000000010f5bc : nop dword ptr [rax] ; jmp 0x8b876
0x00000000000d9af9 : nop dword ptr [rax] ; jmp rax
0x00000000001247dc : nop dword ptr [rax] ; jmp rdx
0x000000000011301d : nop dword ptr [rax] ; jmp rsi
0x00000000000b642c : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a15b4 : nop dword ptr [rax] ; lock add dword ptr [rax], 1 ; ret
0x000000000008cb4d : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000001238cd : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000b3add : nop dword ptr [rax] ; mov eax, 4 ; ret
0x000000000008cff5 : nop dword ptr [rax] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x00000000000b717c : nop dword ptr [rax] ; mov eax, esi ; ret
0x00000000000b90bc : nop dword ptr [rax] ; mov qword ptr [rdi + 0x18], rax ; ret
0x00000000000a15bd : nop dword ptr [rax] ; mov qword ptr [rdi], rsi ; ret
0x000000000012437d : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000d281d : nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000000a594d : nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000012bb95 : nop dword ptr [rax] ; mov rdi, rbp ; call rax
0x00000000000bc14c : nop dword ptr [rax] ; mov rdi, rdx ; jmp rax
0x0000000000113cec : nop dword ptr [rax] ; movzx eax, byte ptr [rdi] ; ret
0x000000000008cb05 : nop dword ptr [rax] ; movzx eax, byte ptr [rsi] ; mov byte ptr [rdi], al ; ret
0x00000000000b8a84 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008fa41 : nop dword ptr [rax] ; pop rbx ; ret
0x000000000008ca31 : nop dword ptr [rax] ; ret
0x0000000000090d6c : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000baa14 : nop dword ptr [rax] ; xor edx, edx ; xor eax, eax ; ret
0x00000000000d9bb7 : nop dword ptr cs:[rax + rax] ; call rax
0x00000000001240d7 : nop dword ptr cs:[rax + rax] ; call rdx
0x00000000000e492a : nop word ptr [rax + rax] ; call rax
0x00000000000ba54a : nop word ptr [rax + rax] ; call rdx
0x00000000001241c7 : nop word ptr [rax + rax] ; jmp rdx
0x000000000008d03a : nop word ptr [rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000d355a : nop word ptr [rax + rax] ; mov qword ptr [rdi], rsi ; ret
0x00000000000d29da : nop word ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x0000000000105782 : nop word ptr [rax + rax] ; mov rdi, rbp ; call rax
0x000000000008dc72 : nop word ptr [rax + rax] ; pop rbx ; jmp rdx
0x000000000008fae2 : nop word ptr [rax + rax] ; ret
0x000000000009603a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000b9156 : not byte ptr [rip - 0x7cb70003] ; ret 0x4801
0x000000000000592f : or ah, al ; retf 0x297c
0x0000000000003290 : or ah, bl ; ret
0x0000000000003702 : or ah, dh ; retf
0x000000000014c465 : or al, 0 ; add al, ch ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014c4dd : or al, 0 ; add byte ptr [rax + 0x1d], al ; hlt ; call qword ptr [rdi]
0x0000000000017e58 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xce
0x000000000014d15c : or al, 0x19 ; add byte ptr [rax], al ; mov al, 0x31 ; hlt ; call qword ptr [rdi]
0x0000000000104d83 : or al, 0x24 ; xor edx, edx ; mov rdi, r12 ; call rax
0x000000000016e85c : or al, 0x30 ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x00000000000051dc : or al, 0x33 ; retf
0x0000000000104c92 : or al, 0x39 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x3f7c
0x00000000000b455b : or al, 0x48 ; cmp edx, 1 ; ja 0xb4590 ; ret
0x00000000000080f4 : or al, 0x4b ; xchg eax, ebx ; retf 0x42b0
0x00000000000c2e9b : or al, 0x4c ; mov esi, esi ; mov rdi, r12 ; call rax
0x000000000008c9e3 : or al, 0x5d ; jmp rax
0x000000000017175c : or al, 0x5f ; add al, byte ptr [rax] ; jp 0x171766 ; call qword ptr [rdx]
0x000000000017185c : or al, 0x60 ; add al, byte ptr [rax] ; adc byte ptr [rbx - 4], bh ; call qword ptr [rdx]
0x00000000000bded0 : or al, 0x85 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000000000016405c : or al, 0x88 ; add dword ptr [rax], eax ; adc byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x00000000000ab9d0 : or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000000bc592 : or al, 0x8d ; push rax ; dec dword ptr [rcx - 0x2d14f3ad] ; call rdx
0x0000000000004c49 : or al, 0xb3 ; jo 0x4cd1 ; jne 0x4bed ; ret 0x4cc6
0x000000000016735c : or al, 0xbb ; add dword ptr [rax], eax ; retf -7
0x000000000015839c : or al, 0xca ; add byte ptr [rax], al ; sar ah, 0xf6 ; call rdi
0x0000000000008128 : or al, 0xcc ; mov edi, 0xe02dd08d ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; retf 0x582c
0x000000000017856f : or al, 0xce ; add dh, byte ptr [rdi + 0x5b301] ; ret
0x00000000000051e5 : or al, 0xf4 ; shl byte ptr [rdx + 0x2f], 1 ; ret 0x5749
0x0000000000152a71 : or al, 0xf6 ; call qword ptr [rbx]
0x00000000001466d9 : or al, 0xf8 ; call rsp
0x00000000001624f1 : or al, 0xf9 ; call rdx
0x00000000000e908d : or al, 0xfa ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000b9ad4 : or al, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000146699 : or al, bh ; call rsp
0x0000000000095fc1 : or al, byte ptr [rax + 0x2c7445f9] ; xor eax, eax ; pop rbx ; ret
0x000000000014c28d : or al, byte ptr [rax] ; add al, al ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000014c30d : or al, byte ptr [rax] ; add al, al ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014c2a5 : or al, byte ptr [rax] ; add al, cl ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000001c0d0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rcx ; retf 0
0x0000000000025202 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000d589e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000008c480 : or al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; rep stosd dword ptr [rdi], eax ; ret
0x00000000000999a6 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x000000000008d785 : or al, byte ptr [rax] ; ret
0x00000000000f9b6b : or al, ch ; jmp qword ptr [rax]
0x00000000000bd30c : or al, ch ; pop rsi ; retf -4
0x00000000000bd2a7 : or al, ch ; ret
0x00000000000d86c8 : or al, ch ; ret 0xfb0a
0x00000000000d3fe8 : or al, ch ; ret 0xfb5c
0x00000000000bd5a8 : or al, ch ; ret 0xfcc7
0x00000000000ad698 : or al, ch ; ret 0xfdba
0x00000000000afeb5 : or al, ch ; ret 0xfffd
0x000000000009339f : or al, ch ; retf
0x00000000000f8a20 : or al, ch ; retf -0x6dc
0x00000000001388b6 : or bh, al ; add al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008fd23 : or bh, bh ; xlatb ; call 0x8bf55
0x0000000000147209 : or bh, cl ; jmp rsp
0x00000000001588d9 : or bh, dh ; call qword ptr [rax]
0x000000000014a499 : or bh, dh ; call rsp
0x00000000000ab1d6 : or bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000009bfad : or bl, al ; nop ; ret
0x000000000008e983 : or bl, al ; nop dword ptr [rax] ; ret
0x000000000009ca17 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b7735 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000042b3 : or bl, byte ptr [rdi - 0x4f755199] ; jae 0x42f9 ; retf 0x2f8
0x000000000009c5dc : or bl, ch ; fmul qword ptr [rax - 0x77] ; ret
0x00000000001390dc : or bl, ch ; mov eax, 0x78b4890 ; ret
0x000000000008e755 : or bl, ch ; retf
0x000000000013b575 : or bl, ch ; retf 0x1f0f
0x000000000008d599 : or bl, dh ; ret
0x000000000008d598 : or bl, r14b ; ret
0x0000000000125794 : or byte ptr [r10 + 8], r14b ; ret
0x00000000000bf892 : or byte ptr [r11 + 0x157401f8], r8b ; ret
0x00000000000de5c9 : or byte ptr [r11 + 0x874fff8], r8b ; ret
0x00000000000e920e : or byte ptr [r11 + 0xb74fff8], r8b ; ret
0x000000000009c0c5 : or byte ptr [r8 + 0x39], r9b ; ret
0x000000000012683c : or byte ptr [r8 + 0x39], r9b ; ret 0x577
0x0000000000126337 : or byte ptr [r8 + 0x39], r9b ; retf
0x00000000000b30d4 : or byte ptr [r8 + 0x39], r9b ; retf 0x1d74
0x0000000000126c4f : or byte ptr [r8 + 0x39], r9b ; retf 0x2773
0x00000000000aa3e2 : or byte ptr [r8 - 0x73], r9b ; add al, 0xf0 ; ret
0x00000000000dba1b : or byte ptr [r8 - 0x77], 0x55 ; mov al, ch ; retf -0x50c
0x00000000000a7d96 : or byte ptr [r8 - 0x77], r9b ; retf -0x76b8
0x00000000000cf9b1 : or byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; hlt ; ret 0xfffb
0x00000000000ce032 : or byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000f84aa : or byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000000f79ab : or byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; retf -0x6ce
0x000000000011cae7 : or byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret 0x894c
0x00000000001257c5 : or byte ptr [r8], r8b ; add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x00000000000b21c8 : or byte ptr [r8], r8b ; ret
0x00000000000e38d6 : or byte ptr [r9 + rcx*4 - 2], 0x4c ; mov edi, esi ; call rax
0x0000000000095fab : or byte ptr [r9 - 0x76b7ef87], cl ; ret 0x8948
0x00000000000b231c : or byte ptr [r9], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e00a6 : or byte ptr [rax + 0x21], cl ; ret 0x8944
0x0000000000091192 : or byte ptr [rax + 0x29], cl ; out dx, eax ; call rax
0x00000000000b4120 : or byte ptr [rax + 0x29], cl ; retf -0x7cb8
0x00000000000a3c7c : or byte ptr [rax + 0x38], al ; xor cl, byte ptr [rdi] ; sahf ; ret 0xd021
0x00000000000a78a6 : or byte ptr [rax + 0x39], cl ; push rax ; adc byte ptr [rbx + rsi*8 - 0xd], dh ; ret
0x000000000009c0c6 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000127bc4 : or byte ptr [rax + 0x39], cl ; ret 0x3d77
0x000000000012683d : or byte ptr [rax + 0x39], cl ; ret 0x577
0x00000000000a1eda : or byte ptr [rax + 0x39], cl ; ret 0xf075
0x0000000000126338 : or byte ptr [rax + 0x39], cl ; retf
0x00000000000b30d5 : or byte ptr [rax + 0x39], cl ; retf 0x1d74
0x0000000000126c50 : or byte ptr [rax + 0x39], cl ; retf 0x2773
0x00000000000c7a39 : or byte ptr [rax + 0x39], cl ; retf 0x4173
0x0000000000124f70 : or byte ptr [rax + 0x39], cl ; salc ; jb 0x124f7f ; ret
0x0000000000138a80 : or byte ptr [rax + 0x39], cl ; salc ; jb 0x138a8f ; ret
0x0000000000124fb0 : or byte ptr [rax + 0x39], cl ; salc ; seta al ; ret
0x0000000000127bc3 : or byte ptr [rax + 0x39], r9b ; ret 0x3d77
0x00000000001134f4 : or byte ptr [rax + 0x5d5bfff7], al ; pop r12 ; ret
0x000000000009a00b : or byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000aa4b9 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf -0x76b8
0x00000000000b4795 : or byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000000b30b3 : or byte ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000bbce0 : or byte ptr [rax + 1], cl ; ret
0x00000000000cbad3 : or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000b47b3 : or byte ptr [rax + 2], bh ; pop rbx ; ret
0x000000000009d83a : or byte ptr [rax + 3], bh ; ret
0x000000000008ee03 : or byte ptr [rax + 5], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000d6667 : or byte ptr [rax + rax*8 + 0x48], dh ; add esp, 0x10 ; pop rbx ; ret
0x00000000000bbdb5 : or byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000000d2da3 : or byte ptr [rax - 0x39], cl ; ret
0x00000000000d6f43 : or byte ptr [rax - 0x73], cl ; add al, 0x1e ; pop rbx ; pop rbp ; ret
0x00000000000d6d81 : or byte ptr [rax - 0x73], cl ; add al, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000090e13 : or byte ptr [rax - 0x73], cl ; add al, 0xe ; ret
0x00000000000aa3e3 : or byte ptr [rax - 0x73], cl ; add al, 0xf0 ; ret
0x00000000000b30cb : or byte ptr [rax - 0x75], cl ; cmovs ebp, dword ptr [rcx] ; retf
0x0000000000126c4c : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x2773
0x000000000011a7a7 : or byte ptr [rax - 0x75], cl ; push rbp ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011bca7 : or byte ptr [rax - 0x75], cl ; push rbp ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011d13d : or byte ptr [rax - 0x75], cl ; push rbp ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011a4c3 : or byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011b9df : or byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000001194e5 : or byte ptr [rax - 0x75], cl ; push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000dba1c : or byte ptr [rax - 0x77], 0x55 ; mov al, ch ; retf -0x50c
0x000000000011300d : or byte ptr [rax - 0x77], cl ; adc al, 7 ; ret
0x0000000000123f2f : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000008d5ce : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0x8d5e6 ; ret
0x000000000008d6de : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0x8d6f6 ; ret
0x000000000008d75e : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0x8d776 ; ret
0x00000000000a11fe : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0xa1216 ; ret
0x00000000000a130e : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0xa1326 ; ret
0x00000000000a138e : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0xa13a6 ; ret
0x00000000000a149e : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0xa14b6 ; ret
0x00000000000a151e : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x77], cl ; jle 0xa1536 ; ret
0x000000000008e86a : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000ad7a1 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp 0x89a58
0x00000000000ba3ac : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000ba3d3 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rdx
0x00000000000beacb : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx - 0x17] ; retf
0x0000000000105d5c : or byte ptr [rax - 0x77], cl ; iretd ; call rax
0x000000000008d561 : or byte ptr [rax - 0x77], cl ; jbe 0x8d577 ; mov qword ptr [rsi], rsi ; ret
0x000000000008d671 : or byte ptr [rax - 0x77], cl ; jbe 0x8d687 ; mov qword ptr [rsi], rsi ; ret
0x00000000000a1191 : or byte ptr [rax - 0x77], cl ; jbe 0xa11a7 ; mov qword ptr [rsi], rsi ; ret
0x00000000000a12a1 : or byte ptr [rax - 0x77], cl ; jbe 0xa12b7 ; mov qword ptr [rsi], rsi ; ret
0x00000000000a1431 : or byte ptr [rax - 0x77], cl ; jbe 0xa1447 ; mov qword ptr [rsi], rsi ; ret
0x000000000008d53c : or byte ptr [rax - 0x77], cl ; jg 0x8d551 ; mov qword ptr [rdi], rdi ; ret
0x000000000008d64c : or byte ptr [rax - 0x77], cl ; jg 0x8d661 ; mov qword ptr [rdi], rdi ; ret
0x00000000000a116c : or byte ptr [rax - 0x77], cl ; jg 0xa1181 ; mov qword ptr [rdi], rdi ; ret
0x00000000000a127c : or byte ptr [rax - 0x77], cl ; jg 0xa1291 ; mov qword ptr [rdi], rdi ; ret
0x00000000000a140c : or byte ptr [rax - 0x77], cl ; jg 0xa1421 ; mov qword ptr [rdi], rdi ; ret
0x000000000008d595 : or byte ptr [rax - 0x77], cl ; or bl, r14b ; ret
0x00000000000997a4 : or byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; retf -0x74b8
0x000000000008d565 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000a9a31 : or byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000106f41 : or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000008d906 : or byte ptr [rax - 0x77], cl ; ret 0x8be
0x00000000000d288e : or byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000008d9ed : or byte ptr [rax - 0x77], cl ; ret 0xd889
0x000000000008e30a : or byte ptr [rax - 0x77], cl ; retf
0x00000000000a7d97 : or byte ptr [rax - 0x77], cl ; retf -0x76b8
0x000000000008d5b8 : or byte ptr [rax - 0x77], cl ; sal byte ptr [rbp - 0x16], 1 ; ret
0x000000000008d5cd : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0x8d5e7 ; ret
0x000000000008d6dd : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0x8d6f7 ; ret
0x000000000008d75d : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0x8d777 ; ret
0x00000000000a11fd : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0xa1217 ; ret
0x00000000000a130d : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0xa1327 ; ret
0x00000000000a138d : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0xa13a7 ; ret
0x00000000000a149d : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0xa14b7 ; ret
0x00000000000a151d : or byte ptr [rax - 0x77], r9b ; cmp byte ptr [rax - 0x77], cl ; jle 0xa1537 ; ret
0x00000000000a1b92 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000b93d0 : or byte ptr [rax - 0x7d], cl ; retf 0x4cff
0x000000000014f488 : or byte ptr [rax], ah ; cmc ; call qword ptr [rdi]
0x00000000000ac50c : or byte ptr [rax], al ; add al, 0 ; call 0x88f46
0x000000000014c13d : or byte ptr [rax], al ; add byte ptr [rax + 0x1b], al ; hlt ; call qword ptr [rdx]
0x00000000000cf9b2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; hlt ; ret 0xfffb
0x00000000000ce033 : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000c308b : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000000f79ac : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf -0x6ce
0x000000000011cae8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret 0x894c
0x00000000000a4020 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000071ba0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; retf
0x000000000006d568 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000071b70 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf 0x37
0x000000000006de80 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006d760 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d2
0x000000000006de50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d3
0x000000000006e618 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x13d4
0x0000000000070070 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x37
0x0000000000027440 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3af
0x0000000000012530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4a
0x000000000006dec8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000275d8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0xa3
0x000000000006d508 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x000000000006fc80 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edx ; ret 0x13
0x000000000006fc68 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esi ; ret 0x13
0x0000000000011eb2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000fbc5d : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012540c : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; adc byte ptr [rax], r8b ; ret
0x0000000000125487 : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x00000000000a1aa1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000003dad : or byte ptr [rax], al ; loop 0x3df7 ; retf -0x40c3
0x00000000000b2081 : or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x0000000000158476 : or byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add ah, ch ; retf 0
0x00000000000b2095 : or byte ptr [rax], al ; ret
0x0000000000172faf : or byte ptr [rax], al ; retf 0x507
0x00000000001257d3 : or byte ptr [rax], al ; sete al ; ret
0x000000000014d0a8 : or byte ptr [rax], dh ; hlt ; call qword ptr [rdi]
0x0000000000125486 : or byte ptr [rax], r8b ; add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x000000000015829c : or byte ptr [rbp + 0xb], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; retf 0
0x0000000000092439 : or byte ptr [rbp + rcx*4 + 0x14], cl ; retf -0x38bf
0x000000000010727e : or byte ptr [rbp - 0x29], dh ; mov rax, rdi ; sub rax, r8 ; ret
0x00000000000142c8 : or byte ptr [rbx + 0x10], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000bf893 : or byte ptr [rbx + 0x157401f8], al ; ret
0x00000000000b347b : or byte ptr [rbx + 0x48], bl ; add eax, ebp ; pop rbp ; ret
0x000000000008e3b2 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x000000000008e38c : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f946f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008dba1 : or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f2ab8 : or byte ptr [rbx + 0x5d], bl ; sar rax, 2 ; ret
0x00000000000de5ca : or byte ptr [rbx + 0x874fff8], al ; ret
0x00000000000e920f : or byte ptr [rbx + 0xb74fff8], al ; ret
0x00000000000a8032 : or byte ptr [rbx + r9*4 + 0x52], r9b ; sbb cl, ch ; retf -2
0x00000000001556b5 : or byte ptr [rbx + rcx + 0x4a], al ; ret
0x00000000000a8033 : or byte ptr [rbx + rcx*4 + 0x52], cl ; sbb cl, ch ; retf -2
0x0000000000127489 : or byte ptr [rbx + rdi*4 + 0x48], dh ; add esp, 0x10 ; pop rbx ; ret
0x000000000008da5c : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000092459 : or byte ptr [rcx + r9*4 - 0x30], cl ; ret
0x00000000000d3536 : or byte ptr [rcx + rax*8 + 0x48], dh ; add esp, 0x10 ; pop rbx ; ret
0x00000000000b41b4 : or byte ptr [rcx + rbx*2 - 0x75], dh ; add byte ptr [rcx + 0x39], cl ; ret 0x8948
0x00000000000b41b3 : or byte ptr [rcx + rbx*2 - 0x75], sil ; add byte ptr [rcx + 0x39], cl ; ret 0x8948
0x00000000000bbf9c : or byte ptr [rcx + rcx + 0x5b], dh ; ret
0x000000000009245a : or byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x00000000000af656 : or byte ptr [rcx + rcx*4 - 1], cl ; call 0x8c106
0x00000000000e38d7 : or byte ptr [rcx + rcx*4 - 2], 0x4c ; mov edi, esi ; call rax
0x00000000000afebf : or byte ptr [rcx + rcx*4 - 9], cl ; call 0x8c106
0x0000000000095fac : or byte ptr [rcx - 0x76b7ef87], cl ; ret 0x8948
0x00000000000a7e85 : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; retf -0x74b8
0x0000000000099afa : or byte ptr [rcx], al ; add byte ptr [rax], al ; and cl, ch ; wait ; retf -1
0x000000000009b42e : or byte ptr [rcx], al ; add byte ptr [rax], al ; sub dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000b231d : or byte ptr [rcx], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4712 : or byte ptr [rcx], al ; ret
0x0000000000177632 : or byte ptr [rcx], al ; retf 0x501
0x00000000000b224e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000a8263 : or byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf0fec1], cl ; ret 0xd001
0x00000000000baa80 : or byte ptr [rcx], dh ; sal byte ptr [rcx], 0xd2 ; add rsp, 0x18 ; ret
0x0000000000125c26 : or byte ptr [rdi + rcx - 0x42], al ; ret 0xd231
0x000000000015fa38 : or byte ptr [rdi - 8], al ; call rax
0x00000000000d3246 : or byte ptr [rdi], 0x4d ; ret
0x00000000000ee1fc : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000ab213 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; or eax, edx ; ret
0x0000000000125795 : or byte ptr [rdx + 8], dh ; ret
0x000000000013b19a : or byte ptr [rdx + rdi*4 + 0x48], dh ; add esp, 0x10 ; pop rbx ; ret
0x0000000000163f78 : or byte ptr [rdx - 7], dl ; call qword ptr [rbx]
0x0000000000107a24 : or byte ptr [rsi], dh ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b8861 : or byte ptr [rsp + rdx + 0x48], dh ; cmp dword ptr [rdi], esi ; je 0xb8879 ; ret
0x00000000000b9e24 : or byte ptr gs:[rax], al ; ret
0x00000000000bc5af : or ch, al ; pop rbx ; retf
0x0000000000004241 : or ch, byte ptr [rax] ; retf 0x7c17
0x00000000000048af : or ch, byte ptr [rdx] ; fucomp st(6) ; push rbp ; retf
0x0000000000005ca0 : or ch, byte ptr [rsp - 0x7412ed2a] ; ret
0x00000000000aea02 : or cl, ah ; std ; dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x00000000000bff1c : or cl, byte ptr [rax - 0x73] ; je 0xbff4d ; psubsb mm1, mm7 ; ret 0xfffc
0x00000000000afeb0 : or cl, byte ptr [rax - 0x75] ; jl 0xafee1 ; or al, ch ; ret 0xfffd
0x00000000000997a7 : or cl, byte ptr [rax - 0x77] ; retf -0x74b8
0x000000000009137a : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rcx + rcx*4 - 0x3d], cl ; jne 0x913a9 ; call rbx
0x0000000000092c60 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000de5e5 : or cl, byte ptr [rdi] ; mov dh, 0 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000001556b3 : or cl, byte ptr [rsi] ; or byte ptr [rbx + rcx + 0x4a], al ; ret
0x000000000010f5df : or cl, ch ; mov eax, edx ; idiv edi ; nop dword ptr [rax] ; jmp rax
0x000000000012e4ff : or cl, ch ; pop rbx ; retf -0xb
0x00000000000a22d4 : or cl, ch ; ret
0x0000000000135abf : or cl, ch ; retf
0x000000000016a288 : or cl, cl ; cli ; jmp qword ptr [rdi]
0x0000000000006e86 : or cl, dh ; retf
0x000000000000519a : or dh, 0x50 ; ret 0xb496
0x0000000000003b07 : or dh, 0xb4 ; sbb dh, bh ; mov fs, edi ; mov dl, 0xfe ; retf
0x00000000000ec8a2 : or dh, ah ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000125c51 : or dh, al ; add al, 0x30 ; add bl, dh ; ret
0x00000000000086a0 : or dh, byte ptr [rax - 0x6a] ; mov dl, 0x5a ; leave ; xchg eax, edi ; retf -0x547d
0x0000000000003563 : or dh, byte ptr [rbp + 0x26] ; ret
0x000000000000524f : or dl, byte ptr [rbx] ; jg 0x51e8 ; push rdx ; in eax, -0x37 ; retf
0x0000000000114a52 : or dl, byte ptr [rdx - 9] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b4710 : or dword ptr [r8], 1 ; ret
0x00000000000eefd9 : or dword ptr [rax + 0x39], ecx ; ret 0x840f
0x00000000000a593d : or dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000000af636 : or dword ptr [rax - 0x75], ecx ; cmp al, 0x24 ; call 0x8c107
0x00000000000c5eca : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x0000000000091064 : or dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax + 0x29] ; out dx, eax ; call r15
0x00000000000a9691 : or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a8b4a : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000099af9 : or dword ptr [rax], 1 ; add byte ptr [rax], al ; and cl, ch ; wait ; retf -1
0x00000000000b4711 : or dword ptr [rax], 1 ; ret
0x0000000000025058 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x355
0x00000000000204e0 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000a1a74 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000a1b55 : or dword ptr [rax], eax ; ret
0x0000000000004887 : or dword ptr [rbx + rcx - 0x54], edx ; ret 0x6da5
0x0000000000101113 : or dword ptr [rbx - 0x76b70008], ebp ; ret
0x00000000000fdb1d : or dword ptr [rcx + 0x18], esi ; ret
0x0000000000101b13 : or dword ptr [rcx - 0x76b70008], esp ; ret
0x0000000000004bf4 : or dword ptr [rcx], ebx ; sbb ecx, dword ptr [rdi + 0x461a9395] ; ret 0xf928
0x0000000000004bf3 : or dword ptr [rcx], r11d ; sbb ecx, dword ptr [rdi + 0x461a9395] ; ret 0xf928
0x00000000000f9270 : or dword ptr [rdi + 0x20], esi ; test dword ptr [rdi + 0x1c], esi ; jne 0xf9283 ; ret
0x00000000000f9cd0 : or dword ptr [rdi + 0x20], esi ; test dword ptr [rdi + 0x1c], esi ; jne 0xf9ce3 ; ret
0x0000000000094b75 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8966
0x0000000000004437 : or dword ptr [rdx], esp ; ret 0x5a81
0x00000000000065d7 : or dword ptr [rsi - 0x393c21b4], ebx ; fisubr word ptr [rdi + 0x18] ; ret
0x0000000000101613 : or dword ptr [rsi - 0x76b70008], esp ; ret
0x000000000000260d : or eax, 0 ; add byte ptr [rax], al ; retf 0xd
0x0000000000177990 : or eax, 0x12a161 ; ret
0x00000000000e49c6 : or eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x00000000000048f2 : or eax, 0x1deed6cb ; xchg eax, ecx ; stosb byte ptr [rdi], al ; ret
0x00000000001130e2 : or eax, 0x5bd88948 ; ret
0x000000000000520c : or eax, 0x6efcfb16 ; loope 0x5262 ; cmp bl, ah ; retf 0x3ca1
0x000000000016c645 : or eax, 0x78b80002 ; sti ; call qword ptr [rdx]
0x000000000009d814 : or eax, 0x8348ffff ; ret 0x4801
0x00000000000e8f9d : or eax, 0x8b48fffa ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000004ecc : or eax, 0xa3d66dd6 ; mov ch, 0x64 ; retf 0x1f43
0x00000000000ee1da : or eax, 0xaee9c789 ; retf -7
0x0000000000002601 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000092392 : or eax, 0xe8d34800 ; and eax, 1 ; ret
0x0000000000004882 : or eax, 0xf4fd20fe ; or dword ptr [rbx + rcx - 0x54], edx ; ret 0x6da5
0x00000000000c284a : or eax, 0xfe058d48 ; and ch, byte ptr [rax + rax] ; ret
0x00000000000b46f2 : or eax, 0xfe208341 ; ret
0x000000000015829e : or eax, dword ptr [rax] ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000014c3ad : or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000014c35d : or eax, dword ptr [rax] ; add al, al ; sbb al, 0xf4 ; call qword ptr [rdx]
0x000000000014c415 : or eax, dword ptr [rax] ; add al, ch ; sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014c3c5 : or eax, dword ptr [rax] ; add al, ch ; sbb al, 0xf4 ; call qword ptr [rdx]
0x0000000000168345 : or eax, dword ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 1
0x0000000000157adc : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000070122 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0x37
0x0000000000167b3c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret 1
0x0000000000167bf4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000001683a4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x0000000000177685 : or eax, dword ptr [rbx] ; retf
0x0000000000092997 : or eax, edx ; movzx eax, al ; ret
0x00000000000ab217 : or eax, edx ; ret
0x00000000000a5b60 : or eax, esi ; mov byte ptr [rdi + 0x50], al ; ret
0x00000000000ee724 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e7e9 : or ebx, eax ; call 0x8b2e4
0x00000000000d6f0e : or ebx, esi ; ret
0x00000000000d4398 : or ecx, dword ptr [rax + 1] ; retf -0x76b8
0x00000000000de2d2 : or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000009acf2 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4408
0x000000000009acd2 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4410
0x0000000000006d5e : or ecx, dword ptr [rbx - 0x3ae7c7e3] ; ret 0xd60b
0x00000000000adb13 : or ecx, esp ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b2c41 : or edi, dword ptr [rbx - 3] ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000007adc : or edi, dword ptr [rdx - 0x403bee20] ; ret
0x0000000000147f89 : or edi, edx ; call rsp
0x00000000001684e9 : or edi, edx ; jmp qword ptr [rdx]
0x0000000000158959 : or edi, esi ; call qword ptr [rax]
0x000000000000744a : or edx, dword ptr [rbx - 0x6a] ; stc ; jp 0x73f2 ; retf 0x6fab
0x0000000000006b9b : or edx, eax ; push rbx ; retf 0x1771
0x0000000000108b84 : or edx, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdb82 : or edx, ecx ; mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000168489 : or edx, edi ; jmp qword ptr [rdx]
0x0000000000147f59 : or edx, edi ; jmp rsp
0x000000000009cbcb : or esi, 0xf390fffe ; ret
0x000000000009df93 : or esi, 4 ; call 0x8a9b5
0x00000000000b59d4 : or esi, dword ptr [rbp + 0x2f] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000003754 : or esi, dword ptr [rbp + rbx + 0x1995d836] ; push rdi ; ret 0x50f3
0x000000000012cc9e : or esi, dword ptr [rbp - 0x55] ; pop rbx ; pop rbp ; ret
0x00000000000039bb : or esi, eax ; in al, -0x32 ; shl byte ptr [rax + 0x4a], 1 ; ret 0x9ddd
0x00000000000b46d4 : or esi, ebx ; ret
0x0000000000152809 : or esi, esi ; call qword ptr [rcx]
0x00000000000b8541 : or esp, dword ptr [rdx] ; std ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ab1d5 : or r15b, r14b ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f8a1f : or r8b, bpl ; retf -0x6dc
0x000000000015829d : or r8d, dword ptr [r8] ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; retf 0
0x0000000000006d5d : or r9, qword ptr [r11 - 0x3ae7c7e3] ; ret 0xd60b
0x0000000000168344 : or rax, qword ptr [r8] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 1
0x000000000010e7e8 : or rbx, rax ; call 0x8b2e5
0x0000000000158958 : or rdi, rsi ; call qword ptr [rax]
0x0000000000108b83 : or rdx, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e3f9 : out -0x18, eax ; int1 ; retf -2
0x00000000000b9ad1 : out -0x18, eax ; jns 0xb9ae9 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f90d : out -0x18, eax ; popfq ; ret
0x00000000000e1827 : out -0x18, eax ; ret
0x00000000000e5458 : out -0x18, eax ; ret 0xfa4b
0x00000000000a6fe8 : out -0x18, eax ; ret 0xfe31
0x00000000000c88ff : out -0x18, eax ; retf
0x00000000000ce950 : out -0x18, eax ; retf -0x457
0x00000000000f0820 : out -0x18, eax ; retf -0x65a
0x000000000011af20 : out -0x18, eax ; retf -0x901
0x00000000000080f1 : out -0x50, eax ; cld ; or al, 0x4b ; xchg eax, ebx ; retf 0x42b0
0x000000000000846e : out -0x73, eax ; ret
0x00000000000b8c27 : out -0x77, eax ; ret
0x0000000000098990 : out -0x77, eax ; ret 0xeac1
0x00000000000c80c9 : out -0x7d, eax ; retf -0x17f0
0x00000000000c7e16 : out -0x7d, eax ; retf -0x17f8
0x0000000000157c31 : out -0xa, eax ; call qword ptr [rsi]
0x000000000008d459 : out -1, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b5160 : out -1, eax ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xc539
0x00000000000aa1b9 : out -1, eax ; push rax ; push 0x75fff883 ; retf
0x00000000000e7de6 : out -1, eax ; push rax ; xor byte ptr [rcx], bh ; ret
0x00000000000aab6c : out -3, eax ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000000ec8d2 : out -7, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fd454 : out -8, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001582c4 : out 0, eax ; add byte ptr [rax], al ; add al, 0xe8 ; retf 1
0x00000000000238f1 : out 0, eax ; add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], bl ; retf 0x37
0x0000000000124224 : out 0x40, eax ; movzx esi, dh ; jmp rdx
0x000000000009121d : out 0x41, eax ; call rsi
0x000000000013dc21 : out 0x47, eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; retf
0x0000000000005016 : out 0x48, al ; insb byte ptr [rdi], dx ; retf 0x71a7
0x000000000011220f : out 0x48, al ; mov dword ptr [rsp], eax ; call 0xde4f7
0x0000000000005c7b : out 0x7a, al ; in eax, -0xc ; scasd eax, dword ptr [rdi] ; jle 0x5cfa ; sbb dword ptr [rdi], ebx ; ret
0x0000000000006711 : out 0xa, al ; ret 0xdc79
0x00000000000b9d96 : out 0xbf, al ; retf 0
0x00000000000db646 : out 0xdd, al ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000006867 : out 0xde, al ; adc ebp, dword ptr [rcx + 0x15b7a352] ; retf -0xff6
0x00000000001142ae : out 0xe8, al ; insb byte ptr [rdi], dx ; jns 0x1142b2 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113cdc : out 0xe8, al ; jg 0x113ce0 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f1f8f : out 0xe8, al ; retf
0x0000000000131e67 : out 0xe9, al ; retf
0x0000000000006f05 : out 0xec, al ; retf
0x000000000009c049 : out 0xf3, al ; ret
0x00000000000a364e : out 0xf4, al ; sub eax, 0x3c894c00 ; ret 0x8b4c
0x000000000010c965 : out 0xf7, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fd589 : out 0xf8, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dada7 : out 0xfa, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000016a0ed : out 1, eax ; add al, dl ; ret 0xfffa
0x0000000000175f7c : out 1, eax ; ret 2
0x000000000014b7b5 : out 2, al ; add byte ptr [rbx + rsi*2 - 1], al ; call rsp
0x0000000000124ab5 : out 2, al ; add qword ptr [rdi + 0x10], rsi ; ret
0x0000000000124b05 : out 2, al ; add qword ptr [rdi + 0x28], rsi ; ret
0x000000000014b7e5 : out 2, eax ; add ah, al ; jne 0x14b7f0 ; jmp rsp
0x00000000001458bd : out dx, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, dh ; jmp rsp
0x00000000000929e6 : out dx, al ; add dword ptr [rax - 0x7b], ecx ; push qword ptr [rbp - 0x15] ; xor eax, eax ; ret
0x00000000000ba06f : out dx, al ; call rax
0x0000000000146f31 : out dx, al ; clc ; jmp rsp
0x0000000000005517 : out dx, al ; clc ; retf
0x0000000000149989 : out dx, al ; cld ; jmp rsp
0x00000000000acd02 : out dx, al ; mov edi, 0x40007 ; call 0x88f48
0x00000000000ac50a : out dx, al ; mov edi, 0x40008 ; call 0x88f48
0x0000000000105d57 : out dx, al ; mov qword ptr [rsp + 8], rcx ; mov rdi, rcx ; call rax
0x000000000009118d : out dx, al ; mov rax, qword ptr [rsp + 8] ; sub rdi, rbp ; call rax
0x0000000000105777 : out dx, al ; mov rdi, r13 ; call rax
0x00000000001057af : out dx, al ; mov rdi, r15 ; call rax
0x0000000000123ee2 : out dx, al ; mov rdi, rbx ; call rax
0x00000000000048b2 : out dx, al ; push rbp ; retf
0x0000000000104881 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x104899 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104911 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x104929 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a8e1 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x12a8f9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a971 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x12a989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7731 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xb7749 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7655 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xc7669 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ddd41 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xddd59 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8971 : out dx, al ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xe8989 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d31f1 : out dx, al ; ret
0x00000000000261a8 : out dx, al ; ret 0x13
0x000000000000b308 : out dx, al ; ret 1
0x0000000000007fed : out dx, al ; scasb al, byte ptr [rdi] ; ret
0x0000000000149341 : out dx, al ; sti ; jmp rsp
0x00000000000d3774 : out dx, al ; sub al, byte ptr [rax] ; jne 0xd3786 ; ret
0x0000000000174b70 : out dx, eax ; add al, 0 ; xchg eax, ecx ; add al, 0x10 ; add byte ptr [rax], al ; ret
0x00000000000b5d60 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000006c53 : out dx, eax ; and cl, bl ; outsb dx, byte ptr [rsi] ; retf
0x00000000000cd624 : out dx, eax ; call 0x8a0b3
0x000000000009e9bd : out dx, eax ; call 0x8ac53
0x00000000000ee8fb : out dx, eax ; call 0x8b3b3
0x00000000000bf642 : out dx, eax ; call 0x8b8c3
0x0000000000090f32 : out dx, eax ; call r12
0x000000000009106a : out dx, eax ; call r15
0x00000000000de9bc : out dx, eax ; call r8
0x00000000000de98a : out dx, eax ; call r9
0x0000000000091195 : out dx, eax ; call rax
0x00000000000913ce : out dx, eax ; call rbx
0x00000000000df938 : out dx, eax ; call rcx
0x00000000000f93b5 : out dx, eax ; call rdx
0x00000000000fccd7 : out dx, eax ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013bcda : out dx, eax ; hlt ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x00000000000dba79 : out dx, eax ; lea rdx, qword ptr [rsi + rbx] ; call r8
0x00000000000b5d10 : out dx, eax ; pop rbx ; ret
0x0000000000124c2d : out dx, eax ; pop rsi ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000d6310 : out dx, eax ; ret
0x000000000001cbb8 : out dx, eax ; ret 0
0x00000000000ae3fd : out dx, eax ; retf
0x00000000000fe53d : out dx, eax ; retf -8
0x0000000000005d36 : out dx, eax ; xchg eax, edi ; sbb ecx, esi ; retf 0x1e75
0x00000000001429b1 : outsb dx, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x0000000000005210 : outsb dx, byte ptr [rsi] ; loope 0x525e ; cmp bl, ah ; retf 0x3ca1
0x0000000000004af4 : outsb dx, byte ptr [rsi] ; mov dh, 0xdd ; xchg eax, ebx ; jbe 0x4b4d ; retf -0x10e2
0x0000000000006c56 : outsb dx, byte ptr [rsi] ; retf
0x000000000012bcbe : outsb dx, byte ptr [rsi] ; retf -1
0x0000000000015d30 : outsb dx, byte ptr [rsi] ; retf 0
0x000000000001fa38 : outsb dx, byte ptr [rsi] ; retf 1
0x0000000000004af3 : outsb dx, byte ptr ds:[rsi] ; mov dh, 0xdd ; xchg eax, ebx ; jbe 0x4b4e ; retf -0x10e2
0x00000000000c1f74 : outsd dx, dword ptr [rsi] ; add al, ch ; mov ch, 0x74 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c208c : outsd dx, dword ptr [rsi] ; add al, ch ; popfq ; jae 0xc2097 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c6ac4 : outsd dx, dword ptr [rsi] ; add al, ch ; sub esp, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c6bdc : outsd dx, dword ptr [rsi] ; add al, ch ; sub r12b, r15b ; dec dword ptr [rax - 0x77] ; ret
0x00000000001176ed : outsd dx, dword ptr [rsi] ; and eax, 0x8948fff7 ; ret
0x00000000000c24f8 : outsd dx, dword ptr [rsi] ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001340d4 : outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000000547a : outsd dx, dword ptr [rsi] ; fiadd dword ptr [rdi] ; fistp qword ptr [rax - 0x22] ; retf
0x0000000000003dac : outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; loop 0x3df8 ; retf -0x40c3
0x00000000000050a5 : outsd dx, dword ptr [rsi] ; pop rdi ; ret
0x00000000000006a5 : outsd dx, dword ptr [rsi] ; ret
0x0000000000007c70 : outsd dx, dword ptr [rsi] ; ret 0xa486
0x000000000009e63d : outsd dx, dword ptr [rsi] ; retf
0x000000000016bdb9 : outsd dx, dword ptr [rsi] ; retf 0
0x0000000000005c81 : outsd dx, dword ptr [rsi] ; sbb dword ptr [rdi], ebx ; ret
0x00000000001171ed : outsd dx, dword ptr [rsi] ; sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000116aed : outsd dx, dword ptr [rsi] ; xor edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004034 : pminub mm5, qword ptr [rbx + 5] ; sbb eax, 0xb79ea101 ; ret
0x000000000014a5ad : pop qword ptr [rdx] ; add byte ptr [rdx + rdx - 2], ah ; call rsp
0x00000000000d4f26 : pop r11 ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000a38f5 : pop r11 ; pop rbp ; pop r12 ; ret
0x00000000000909f8 : pop r12 ; jmp rax
0x00000000000ddb57 : pop r12 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000d80ed : pop r12 ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000000ab565 : pop r12 ; mov rax, r14 ; pop r13 ; pop r14 ; ret
0x000000000008e3b5 : pop r12 ; pop r13 ; jmp rax
0x00000000000908a7 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000009b9da : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008ce3d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001174d2 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000091309 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008da61 : pop r12 ; pop r13 ; ret
0x00000000000c1b0d : pop r12 ; pop r14 ; pop rbp ; ret
0x00000000000bbc28 : pop r12 ; pop rbp ; ret
0x000000000008e342 : pop r12 ; ret
0x000000000008e3b7 : pop r13 ; jmp rax
0x000000000012ce33 : pop r13 ; pop r14 ; pop r15 ; jmp 0x89088
0x00000000000908a9 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000009b9dc : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008ce3f : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001174d4 : pop r13 ; pop r14 ; pop rbp ; ret
0x000000000009130b : pop r13 ; pop r14 ; ret
0x000000000008da63 : pop r13 ; ret
0x000000000012ce35 : pop r14 ; pop r15 ; jmp 0x89086
0x00000000000908ab : pop r14 ; pop r15 ; jmp rax
0x000000000009b9de : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008ce41 : pop r14 ; pop r15 ; ret
0x00000000000be3bc : pop r14 ; pop rbp ; ret
0x000000000009130d : pop r14 ; ret
0x000000000012ce37 : pop r15 ; jmp 0x89084
0x00000000000908ad : pop r15 ; jmp rax
0x000000000009b9e0 : pop r15 ; pop rbp ; ret
0x000000000008ce43 : pop r15 ; ret
0x0000000000004dff : pop r15 ; sub dl, byte ptr [rdx - 0x44] ; ret 0x3790
0x00000000000e44a5 : pop rax ; adc byte ptr [rax - 0x77], cl ; retf -0x76b7
0x000000000011e9db : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db922 : pop rax ; add dword ptr [rax + 0x63], ecx ; ret
0x0000000000099764 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; retf -0x76b8
0x0000000000158578 : pop rax ; add edi, esi ; jmp rdi
0x0000000000094fa4 : pop rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ccb2 : pop rax ; call 0x89743
0x0000000000152b38 : pop rax ; cdq ; jmp qword ptr [rax]
0x000000000014fc51 : pop rax ; cmc ; call qword ptr [rbx]
0x000000000014fc31 : pop rax ; cmc ; call qword ptr [rdx]
0x00000000000051f5 : pop rax ; fcomp dword ptr [rax - 0x2d] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000014d738 : pop rax ; hlt ; call qword ptr [rdi]
0x000000000000347f : pop rax ; jbe 0x3409 ; ret 0x9349
0x000000000013c9c4 : pop rax ; jnp 0x13c9bf ; jmp qword ptr [rax]
0x00000000001716e8 : pop rax ; jp 0x1716ea ; call qword ptr [rdx]
0x000000000014e8e8 : pop rax ; jrcxz 0x14e8e2 ; jmp qword ptr [rax]
0x000000000016d7c8 : pop rax ; mov ebx, edi ; call qword ptr [rcx]
0x0000000000127c00 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000d4f9b : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000134e2c : pop rax ; push qword ptr [rax + 0x38] ; ret
0x00000000001361d9 : pop rax ; push qword ptr [rbx + 0x38] ; ret
0x000000000010f30e : pop rax ; push qword ptr [rsi + rbx*2 + 0x38] ; ret
0x0000000000135800 : pop rax ; push qword ptr [rsp + rbx*2 + 0x38] ; ret
0x00000000000072c4 : pop rax ; ret
0x00000000000d68c3 : pop rax ; ret 0x2a
0x00000000000ba889 : pop rax ; ret 0xf66
0x000000000016a028 : pop rax ; ret 0xfffa
0x0000000000070188 : pop rax ; retf
0x000000000009e694 : pop rax ; retf -2
0x00000000001700a8 : pop rax ; retf -5
0x000000000016a318 : pop rax ; retf -6
0x0000000000167318 : pop rax ; retf -7
0x0000000000070128 : pop rax ; retf 0x37
0x000000000014bd98 : pop rax ; sbb dh, ah ; jmp qword ptr [rax]
0x0000000000164491 : pop rax ; stc ; call qword ptr [rbx]
0x00000000000b63bf : pop rax ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000007d2 : pop rax ; sti ; retf -0x5ef3
0x000000000016d5b8 : pop rax ; test edi, ebx ; call qword ptr [rdx]
0x0000000000015991 : pop rbp ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000171585 : pop rbp ; add al, byte ptr [rax] ; mov byte ptr [rcx - 4], bh ; call qword ptr [rdi]
0x000000000009c0c1 : pop rbp ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x39], r9b ; ret
0x0000000000161615 : pop rbp ; add dword ptr [rax], eax ; sar al, 1 ; call qword ptr [rdx]
0x0000000000168cc1 : pop rbp ; cli ; jmp rsi
0x000000000014dfb1 : pop rbp ; hlt ; jmp qword ptr [rbx]
0x00000000000ad7a6 : pop rbp ; jmp 0x89a53
0x000000000008c993 : pop rbp ; jmp rax
0x00000000000ba3d8 : pop rbp ; jmp rdx
0x00000000000c0a1f : pop rbp ; lodsb al, byte ptr [rsi] ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000909f7 : pop rbp ; pop r12 ; jmp rax
0x00000000000ddb56 : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000008e3b4 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000908a6 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000008ce3c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000091308 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008da60 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e341 : pop rbp ; pop r12 ; ret
0x000000000012ce34 : pop rbp ; pop r14 ; pop r15 ; jmp 0x89087
0x00000000000908aa : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000009b9dd : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008ce40 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000001174d5 : pop rbp ; pop r14 ; pop rbp ; ret
0x000000000009130c : pop rbp ; pop r14 ; ret
0x00000000000f6a4f : pop rbp ; push rdx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000025d40 : pop rbp ; ret
0x000000000011f14f : pop rbp ; retf
0x00000000000f2aba : pop rbp ; sar rax, 2 ; ret
0x0000000000007909 : pop rbp ; stosd dword ptr [rdi], eax ; insb byte ptr [rdi], dx ; cmp eax, 0xc0b15e23 ; ret
0x0000000000007831 : pop rbp ; stosd dword ptr [rdi], eax ; insb byte ptr [rdi], dx ; xchg eax, esi ; ret 0x46a4
0x0000000000007c85 : pop rbx ; adc dword ptr [rbx - 0x7fe4aeba], ecx ; retf 0x610a
0x0000000000171415 : pop rbx ; add al, byte ptr [rax] ; clc ; jbe 0x17141d ; jmp qword ptr [rbx]
0x000000000000a670 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 2
0x000000000015144d : pop rbx ; add byte ptr [rax], al ; push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rsi
0x000000000016143d : pop rbx ; add dword ptr [rax], eax ; mov al, 0xce ; clc ; call qword ptr [rdx]
0x00000000000d3c66 : pop rbx ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000000b347c : pop rbx ; add rax, rbp ; pop rbp ; ret
0x000000000014ffe9 : pop rbx ; cmc ; call qword ptr [rdi]
0x0000000000150021 : pop rbx ; cmc ; call qword ptr [rdx]
0x000000000013c83d : pop rbx ; cmc ; inc dword ptr [rax + 0x62] ; cmc ; jmp qword ptr [rax]
0x000000000008d80a : pop rbx ; jmp 0x89a53
0x00000000000ee57e : pop rbx ; jmp rax
0x000000000008dc78 : pop rbx ; jmp rdx
0x00000000000bb865 : pop rbx ; lea rax, qword ptr [rbp + rax*8] ; pop rbp ; ret
0x0000000000006a6b : pop rbx ; mov dl, 0xcb ; add ah, 0xb2 ; retf
0x00000000000a8024 : pop rbx ; mov dword ptr [rcx], 1 ; ret
0x00000000000b5794 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000b57c0 : pop rbx ; mov eax, 2 ; pop rbp ; pop r12 ; ret
0x000000000008da88 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008db0a : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000000a6161 : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008dc64 : pop rbx ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000c13fd : pop rbx ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000c142d : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000c13e5 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000c1415 : pop rbx ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x00000000000c13cd : pop rbx ; mov rax, qword ptr [rax + 0x38] ; jmp rax
0x00000000000a1b3a : pop rbx ; mov rax, qword ptr [rax] ; ret
0x00000000000faf03 : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d3692 : pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000d6da6 : pop rbx ; mov rdx, qword ptr [rax - 0x18] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000000000ec8d1 : pop rbx ; out -7, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001174d1 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000c1b0c : pop rbx ; pop r12 ; pop r14 ; pop rbp ; ret
0x00000000000bbc27 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000be3bb : pop rbx ; pop r14 ; pop rbp ; ret
0x00000000000ad7a5 : pop rbx ; pop rbp ; jmp 0x89a54
0x0000000000090a87 : pop rbx ; pop rbp ; jmp rax
0x00000000000ba3d7 : pop rbx ; pop rbp ; jmp rdx
0x00000000000909f6 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ddb55 : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x000000000008e3b3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000091307 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008da5f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e340 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d9f3 : pop rbx ; pop rbp ; ret
0x00000000000f2ab9 : pop rbx ; pop rbp ; sar rax, 2 ; ret
0x0000000000006136 : pop rbx ; ret
0x00000000000bc5b1 : pop rbx ; retf
0x000000000012e501 : pop rbx ; retf -0xb
0x00000000000bbfaa : pop rbx ; sete al ; ret
0x00000000001646e1 : pop rbx ; stc ; call rsp
0x00000000000d5480 : pop rbx ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bbcf6 : pop rbx ; sub rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b2328 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149b3d : pop rcx ; add al, byte ptr [rax] ; mov ah, 0xd ; std ; call rsp
0x0000000000146c2d : pop rcx ; add dword ptr [rax], eax ; je 0x146be6 ; clc ; jmp rsp
0x0000000000004ee3 : pop rcx ; clc ; retf 0x1b41
0x000000000014fd79 : pop rcx ; cmc ; call qword ptr [rbx]
0x000000000014fd59 : pop rcx ; cmc ; call qword ptr [rdx]
0x00000000001340d3 : pop rcx ; outsd dx, dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000052e4 : pop rcx ; push 0x85 ; mul dword ptr [rsi] ; ret 0xb232
0x00000000000067ba : pop rcx ; pushfq ; imul esp, dword ptr [rbp + 0x7e], 0x2280e881 ; retf
0x000000000016c611 : pop rcx ; ret
0x0000000000112363 : pop rcx ; ret 0xfffc
0x0000000000106493 : pop rcx ; ret 0xffff
0x00000000000b28eb : pop rcx ; ret 8
0x000000000017175d : pop rdi ; add al, byte ptr [rax] ; jp 0x171765 ; call qword ptr [rdx]
0x00000000001717d5 : pop rdi ; add al, byte ptr [rax] ; sub byte ptr [rdx - 4], bh ; call qword ptr [rsi]
0x0000000000149c75 : pop rdi ; add al, byte ptr [rax] ; test byte ptr [rdx], ah ; std ; jmp rsp
0x00000000001518a5 : pop rdi ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x00000000000fc74d : pop rdi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ffe38 : pop rdi ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fc6bd : pop rdi ; cmc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff44d : pop rdi ; enter -8, -0x18 ; retf -0x739
0x000000000009d7cd : pop rdi ; fdivr st(6) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000092906 : pop rdi ; je 0x92918 ; mov eax, 1 ; ret
0x000000000012ce38 : pop rdi ; jmp 0x89083
0x00000000000908ae : pop rdi ; jmp rax
0x00000000000044f2 : pop rdi ; jns 0x452e ; ret 0x5a81
0x0000000000005773 : pop rdi ; mov ch, 0x75 ; jrcxz 0x57ec ; ret
0x00000000000ffebd : pop rdi ; mov ebp, 0x8948fff8 ; ret
0x000000000009b9e1 : pop rdi ; pop rbp ; ret
0x0000000000000268 : pop rdi ; rcl byte ptr [rax + rdi*2 - 0x57], 0xb4 ; push rax ; ret 0x6b05
0x00000000000050a7 : pop rdi ; ret
0x0000000000021898 : pop rdi ; retf
0x0000000000008171 : pop rdi ; retf -0x51b4
0x00000000000068a4 : pop rdi ; sbb al, 0x7c ; retf 0x3122
0x0000000000149f19 : pop rdi ; std ; call rsp
0x0000000000004687 : pop rdi ; stosb byte ptr [rdi], al ; jp 0x4712 ; push qword ptr [rsi - 0x5f] ; add al, 0xf8 ; ret 0x4c89
0x0000000000004e00 : pop rdi ; sub dl, byte ptr [rdx - 0x44] ; ret 0x3790
0x00000000000239b0 : pop rdx ; add byte ptr es:[rax], al ; and dword ptr [rax], eax ; sldt word ptr [rbx] ; ret
0x0000000000161345 : pop rdx ; add dword ptr [rax], eax ; call 0x13160c20
0x0000000000146c5d : pop rdx ; add dword ptr [rax], eax ; xchg eax, esp ; mov cl, 0xf8 ; jmp rsp
0x00000000000fcdd4 : pop rdx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000c1942 : pop rdx ; cdq ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001469d1 : pop rdx ; clc ; jmp rsp
0x0000000000005b9c : pop rdx ; hlt ; enter 0x52eb, 0x42 ; ret 0xb01
0x0000000000007063 : pop rdx ; jb 0x7052 ; retf
0x00000000000086a4 : pop rdx ; leave ; xchg eax, edi ; retf -0x547d
0x000000000000443b : pop rdx ; mov dr1, edi ; adc esp, esp ; push rdi ; retf
0x00000000000d4f9c : pop rdx ; pop rbx ; ret
0x0000000000004487 : pop rdx ; push rbx ; imul edx, dword ptr [rdx - 0x2c], 0x2a ; ret 0x5a81
0x0000000000000bd0 : pop rdx ; push rcx ; adc al, cl ; ret
0x0000000000003ea5 : pop rdx ; ret 0x7373
0x00000000000b0cc2 : pop rdx ; scasd eax, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000148a79 : pop rdx ; sti ; call rsp
0x00000000000c3e49 : pop rdx ; test rax, rax ; je 0xc3e5d ; mov rdi, r14 ; call rax
0x00000000000c3f10 : pop rdx ; test rax, rax ; je 0xc3f24 ; mov rdi, r14 ; call rax
0x00000000001716e5 : pop rsi ; add al, byte ptr [rax] ; pop rax ; jp 0x1716ed ; call qword ptr [rdx]
0x00000000001716cd : pop rsi ; add al, byte ptr [rax] ; push rax ; jp 0x1716d5 ; call qword ptr [rdx]
0x0000000000149c35 : pop rsi ; add al, byte ptr [rax] ; push rsp ; and ch, bh ; call rsp
0x0000000000171079 : pop rsi ; cld ; call rsi
0x0000000000150331 : pop rsi ; cmc ; call qword ptr [rax]
0x0000000000124c2e : pop rsi ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x0000000000004940 : pop rsi ; je 0x492f ; ret
0x000000000000790e : pop rsi ; mov cl, 0xc0 ; ret
0x000000000010e7e7 : pop rsi ; or rbx, rax ; call 0x8b2e6
0x000000000010e7e6 : pop rsi ; or rbx, rax ; call 0x8b2e7
0x000000000012ce36 : pop rsi ; pop r15 ; jmp 0x89085
0x00000000000908ac : pop rsi ; pop r15 ; jmp rax
0x000000000009b9df : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000008ce42 : pop rsi ; pop r15 ; ret
0x00000000000b63be : pop rsi ; pop rax ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000be3bd : pop rsi ; pop rbp ; ret
0x000000000009130e : pop rsi ; ret
0x00000000000aceae : pop rsi ; ret 0xfffd
0x00000000000a5de6 : pop rsi ; retf
0x00000000000bd30e : pop rsi ; retf -4
0x0000000000147a91 : pop rsi ; stc ; jmp rsp
0x0000000000148b49 : pop rsi ; sti ; call rsp
0x0000000000174501 : pop rsi ; xor eax, dword ptr [rip + 0x5600000] ; retf
0x000000000017148d : pop rsp ; add al, byte ptr [rax] ; jo 0x17150f ; cld ; jmp qword ptr [rax]
0x00000000001714a5 : pop rsp ; add al, byte ptr [rax] ; js 0x171527 ; cld ; jmp rax
0x000000000014fdac : pop rsp ; add byte ptr [r8], r8b ; xor byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x00000000001581dc : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rax*4], al ; retf
0x00000000000c13fa : pop rsp ; and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000c142a : pop rsp ; and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000c13e2 : pop rsp ; and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000c1412 : pop rsp ; and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x30] ; jmp rax
0x00000000000c13ca : pop rsp ; and al, 0x10 ; pop rbx ; mov rax, qword ptr [rax + 0x38] ; jmp rax
0x0000000000150099 : pop rsp ; cmc ; jmp rdx
0x000000000014f3ac : pop rsp ; cmp eax, dword ptr [rax] ; add byte ptr [rax + 0x1f], dl ; cmc ; call qword ptr [rdi]
0x00000000001693ac : pop rsp ; fild dword ptr [rcx] ; add byte ptr [rax - 0x5f], dh ; cli ; call qword ptr [rbx]
0x0000000000004462 : pop rsp ; fisub dword ptr [rsi] ; ret 0x5a81
0x00000000000909f9 : pop rsp ; jmp rax
0x0000000000101cd8 : pop rsp ; jne 0x101ce7 ; add rsp, 0x18 ; ret
0x0000000000101cd7 : pop rsp ; jne 0x101ce8 ; add rsp, 0x18 ; ret
0x0000000000101d88 : pop rsp ; jne 0x101d97 ; add rsp, 0x18 ; ret
0x0000000000101d87 : pop rsp ; jne 0x101d98 ; add rsp, 0x18 ; ret
0x0000000000102f88 : pop rsp ; jne 0x102fad ; add rsp, 0x18 ; ret
0x0000000000102f87 : pop rsp ; jne 0x102fae ; add rsp, 0x18 ; ret
0x0000000000103388 : pop rsp ; jne 0x1033ad ; add rsp, 0x18 ; ret
0x0000000000103387 : pop rsp ; jne 0x1033ae ; add rsp, 0x18 ; ret
0x00000000000d8c28 : pop rsp ; jne 0xd8c37 ; add rsp, 0x18 ; ret
0x00000000000d8c27 : pop rsp ; jne 0xd8c38 ; add rsp, 0x18 ; ret
0x00000000000d8cd8 : pop rsp ; jne 0xd8ce7 ; add rsp, 0x18 ; ret
0x00000000000d8cd7 : pop rsp ; jne 0xd8ce8 ; add rsp, 0x18 ; ret
0x00000000000d9de8 : pop rsp ; jne 0xd9e0d ; add rsp, 0x18 ; ret
0x00000000000d9de7 : pop rsp ; jne 0xd9e0e ; add rsp, 0x18 ; ret
0x00000000000da268 : pop rsp ; jne 0xda28d ; add rsp, 0x18 ; ret
0x00000000000da267 : pop rsp ; jne 0xda28e ; add rsp, 0x18 ; ret
0x0000000000003a73 : pop rsp ; mov ah, 0x3f ; push rax ; ret
0x00000000001677ac : pop rsp ; mov edi, 0xcf500001 ; stc ; call qword ptr [rdx]
0x00000000000bf840 : pop rsp ; mov edx, 0x8948fffc ; ret
0x00000000000ddb58 : pop rsp ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000d80ee : pop rsp ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000000ab566 : pop rsp ; mov rax, r14 ; pop r13 ; pop r14 ; ret
0x00000000000bb7f4 : pop rsp ; or byte ptr [rax], al ; ret
0x000000000014c3ac : pop rsp ; or eax, dword ptr [rax] ; add al, ah ; sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000016a0ec : pop rsp ; out 1, eax ; add al, dl ; ret 0xfffa
0x000000000008e3b6 : pop rsp ; pop r13 ; jmp rax
0x000000000012ce32 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x89089
0x00000000000908a8 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000009b9db : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008ce3e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001174d3 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000009130a : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000008da62 : pop rsp ; pop r13 ; ret
0x00000000000c1b0e : pop rsp ; pop r14 ; pop rbp ; ret
0x00000000000bbc29 : pop rsp ; pop rbp ; ret
0x00000000000c31f0 : pop rsp ; push 0x1f0ffffc ; add bl, sil ; ret
0x000000000008e343 : pop rsp ; ret
0x0000000000157bec : pop rsp ; ret 0
0x00000000000af0c0 : pop rsp ; retf
0x00000000000053c8 : pop rsp ; retf -0x20ef
0x00000000001682ac : pop rsp ; retf 1
0x000000000014d4ac : pop rsp ; sbb al, 0 ; add al, dl ; xor al, 0xf4 ; call qword ptr [rdi]
0x000000000014d3ac : pop rsp ; sbb eax, dword ptr [rax] ; add al, dh ; xor dh, ah ; call qword ptr [rcx]
0x0000000000148ac1 : pop rsp ; sti ; jmp rsp
0x00000000001661ec : pop rsp ; test al, 1 ; add al, dl ; mov cl, 0xf9 ; jmp qword ptr [rdi]
0x0000000000007211 : pop rsp ; xchg eax, esi ; cwde ; xor al, dh ; insd dword ptr [rdi], dx ; ret
0x00000000001759c3 : popfq ; add al, 1 ; retf
0x00000000000ee333 : popfq ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001555dd : popfq ; add byte ptr [rax], al ; and byte ptr [rdx - 0xa], ah ; call qword ptr [rbx]
0x00000000001555f5 : popfq ; add byte ptr [rax], al ; sub byte ptr [rdx - 0xa], ah ; call qword ptr [rdx]
0x000000000016571d : popfq ; add dword ptr [rax], eax ; mov al, 0x89 ; stc ; jmp qword ptr [rdi]
0x000000000016559d : popfq ; add dword ptr [rax], eax ; nop ; test edi, ecx ; call qword ptr [rbx]
0x0000000000165765 : popfq ; add dword ptr [rax], eax ; test al, 0x8a ; stc ; jmp qword ptr [rdi]
0x0000000000174c35 : popfq ; add dword ptr [rbx + 0x2b201], eax ; retf 0x502
0x00000000000b86af : popfq ; and ch, bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000169219 : popfq ; cli ; call qword ptr [rbx]
0x0000000000169121 : popfq ; cli ; jmp qword ptr [rsi]
0x00000000000c208f : popfq ; jae 0xc2094 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f2a1f : popfq ; jbe 0xf2a21 ; dec dword ptr [rax + 0x39] ; ret
0x000000000000524e : popfq ; or dl, byte ptr [rbx] ; jg 0x51e9 ; push rdx ; in eax, -0x37 ; retf
0x00000000000c7cf9 : popfq ; pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000007209 : popfq ; ret
0x0000000000025c20 : popfq ; ret 0x13
0x0000000000006a03 : popfq ; sbb eax, esp ; mov edx, 0x6577d9ce ; retf -0x2fdc
0x00000000000bfdfc : psubsb mm1, mm4 ; ret
0x00000000000bff21 : psubsb mm1, mm7 ; ret 0xfffc
0x00000000000bfe1d : psubsb mm2, mm3 ; ret
0x000000000011096d : psubw mm7, mm7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001520dd : push -0x13600000 ; cmc ; jmp qword ptr [rbx]
0x0000000000146ed5 : push -0x151bffff ; clc ; call rsp
0x0000000000143c2c : push -0x1e00012a ; sar dh, cl ; jmp rcx
0x00000000001115eb : push -0x4a7bf001 ; add al, 0 ; add byte ptr [rax], bh ; ret
0x0000000000110f54 : push -0x7600032a ; ret
0x00000000001153f6 : push -0x76b70009 ; ret
0x0000000000004ee0 : push -0x7a63669 ; retf 0x1b41
0x0000000000133a59 : push -0x7ab7000b ; ror byte ptr [rdi], 0x84 ; retf
0x000000000015213d : push -0xa400000 ; cmc ; jmp qword ptr [rsi]
0x00000000000c3428 : push 0 ; call 0xbfe44
0x0000000000005184 : push 0x1b ; jge 0x512f ; ret
0x00000000000c31f1 : push 0x1f0ffffc ; add bl, sil ; ret
0x00000000000051d7 : push 0x20bdabe8 ; or al, 0x33 ; retf
0x0000000000025c78 : push 0x21000026 ; add byte ptr [rdi], cl ; add byte ptr [rcx], cl ; ret
0x0000000000004444 : push 0x25ec0c50 ; ret 0x5a81
0x00000000000c7690 : push 0x30438948 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001118f4 : push 0x38000002 ; ret
0x0000000000137646 : push 0x385e74ff ; ret
0x00000000000b1c83 : push 0x3d0d8d48 ; retf 8
0x0000000000007201 : push 0x40952438 ; sub dword ptr ss:[rbp - 0x63], edi ; ret
0x00000000000d7814 : push 0x48fffb18 ; mov eax, dword ptr [rbx] ; jmp 0xd77e8
0x0000000000007062 : push 0x5a ; jb 0x7053 ; retf
0x00000000000a19dd : push 0x5c415d5b ; pop r13 ; ret
0x00000000001118f0 : push 0x68840fff ; add al, byte ptr [rax] ; add byte ptr [rax], bh ; ret
0x00000000000aa1bc : push 0x75fff883 ; retf
0x00000000000052e5 : push 0x85 ; mul dword ptr [rsi] ; ret 0xb232
0x00000000000c736c : push 0x8c48348 ; ret
0x000000000013458e : push 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000155b51 : push 0xf6 ; call qword ptr [rbx]
0x0000000000115216 : push 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000164e21 : push 0xf9 ; jmp qword ptr [rsi]
0x0000000000146f2d : push 1 ; add byte ptr [rsi + rbp*8], al ; clc ; jmp rsp
0x0000000000006c08 : push 6 ; retf
0x0000000000134e2d : push qword ptr [rax + 0x38] ; ret
0x0000000000147a8b : push qword ptr [rax + 0x5e540001] ; stc ; jmp rsp
0x00000000000af654 : push qword ptr [rax + rcx + 0x4c] ; mov edi, edi ; call 0x8c108
0x00000000000de5cd : push qword ptr [rax + rcx - 0xd] ; ret
0x0000000000149983 : push qword ptr [rax + rdx*2 + 2] ; add byte ptr [rsi + rbp*8], dh ; cld ; jmp rsp
0x000000000014258b : push qword ptr [rax - 0x15] ; stc ; inc dword ptr [rax - 0x16] ; stc ; jmp rsp
0x0000000000143bab : push qword ptr [rax - 0x1e00012f] ; sar dh, cl ; jmp rcx
0x0000000000143bbf : push qword ptr [rax - 0x3f000133] ; sar dh, cl ; jmp rcx
0x00000000001241c2 : push qword ptr [rbp + 0xb] ; ret
0x0000000000124420 : push qword ptr [rbp + rax + 0x48] ; add dword ptr [rbx + 0x10], 1 ; pop rbx ; ret
0x0000000000124b70 : push qword ptr [rbp + rax + 0x48] ; add dword ptr [rbx + 0x10], 4 ; pop rbx ; ret
0x00000000001110b0 : push qword ptr [rbp + rbx*2 + 0x38] ; ret
0x00000000001130e0 : push qword ptr [rbp + rcx + 0x48] ; mov eax, ebx ; pop rbx ; ret
0x00000000001467fb : push qword ptr [rbp + rdi + 0x33b40001] ; clc ; jmp rsp
0x0000000000146693 : push qword ptr [rbp + rsi + 0x8e40001] ; clc ; call rsp
0x00000000000d5f40 : push qword ptr [rbp - 0x13] ; ret
0x00000000000d2e31 : push qword ptr [rbp - 0x14] ; ret
0x00000000000929ea : push qword ptr [rbp - 0x15] ; xor eax, eax ; ret
0x0000000000126d93 : push qword ptr [rbp - 0x16] ; ret
0x000000000013aa90 : push qword ptr [rbp - 0x1b] ; ret
0x00000000001491ab : push qword ptr [rbp - 0x20cbfffe] ; sti ; call rsp
0x00000000000a1a94 : push qword ptr [rbp - 0x2d] ; ret
0x00000000001361da : push qword ptr [rbx + 0x38] ; ret
0x0000000000144ad3 : push qword ptr [rbx + 0x73a40000] ; cmc ; jmp rsp
0x00000000001486c3 : push qword ptr [rbx + rbp*8 + 0xe040001] ; sti ; call rsp
0x00000000000e9212 : push qword ptr [rbx + rcx - 0xd] ; ret
0x000000000014967b : push qword ptr [rbx + rdi + 0x1f540002] ; cld ; call rsp
0x000000000011392a : push qword ptr [rbx + rdx + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149a23 : push qword ptr [rbx + rdx*2 - 0x84bfffe] ; cld ; jmp rsp
0x0000000000146613 : push qword ptr [rbx + rsi + 0x2a40001] ; clc ; call rsp
0x000000000014792b : push qword ptr [rcx + rbx*4 + 0x4de40001] ; stc ; call rsp
0x00000000001475cb : push qword ptr [rcx + rcx*4 + 0x29740001] ; stc ; jmp rsp
0x00000000001481ab : push qword ptr [rcx + rcx*8 + 0x4c040001] ; cli ; call rsp
0x0000000000147ed3 : push qword ptr [rcx + rdi*4 + 0x1a40001] ; cli ; jmp rsp
0x00000000000e791c : push qword ptr [rcx + rdx*2 + 0x39] ; retf
0x000000000008f4ce : push qword ptr [rcx] ; dec dword ptr [rax - 0x77] ; ret 0xc931
0x000000000010b71c : push qword ptr [rcx] ; ror byte ptr [rdi], cl ; mov esi, 0xdf8948f0 ; call rcx
0x00000000000dfa4d : push qword ptr [rcx] ; ror byte ptr [rdi], cl ; mov esi, 0xef894cf0 ; call rcx
0x0000000000124222 : push qword ptr [rdi + 0x40] ; movzx esi, dh ; jmp rdx
0x00000000001440e3 : push qword ptr [rdi + rbx + 1] ; add byte ptr [rdx - 0x7f], ah ; hlt ; jmp rsp
0x00000000000ad736 : push qword ptr [rdi + rdx - 0x18] ; ret 0xfde9
0x00000000000ad636 : push qword ptr [rdi + rdx - 0x18] ; ret 0xfdea
0x0000000000147e73 : push qword ptr [rdi + rsi*4 - 0x3fbffff] ; stc ; call rsp
0x0000000000148623 : push qword ptr [rdi - 0x4bffff] ; cli ; call rsp
0x000000000014411b : push qword ptr [rdx + rbp*8] ; add ah, dh ; test esi, esp ; jmp rsp
0x0000000000146c5b : push qword ptr [rdx + rbx*2 - 0x4e6bffff] ; clc ; jmp rsp
0x000000000014796b : push qword ptr [rdx + rbx*4 + 0x4f040001] ; stc ; call rsp
0x00000000000f2dba : push qword ptr [rdx + rcx - 0x77] ; sub cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000001481eb : push qword ptr [rdx + rcx*8 + 0x4e840001] ; cli ; call rsp
0x0000000000148563 : push qword ptr [rdx - 0x162bffff] ; cli ; jmp rsp
0x000000000016b593 : push qword ptr [rip + 0x4000004] ; ret
0x000000000010f30f : push qword ptr [rsi + rbx*2 + 0x38] ; ret
0x00000000001466d3 : push qword ptr [rsi + rsi + 0xce40001] ; clc ; call rsp
0x0000000000148853 : push qword ptr [rsi + rsi*8 + 0x35a40001] ; sti ; call rsp
0x00000000001491eb : push qword ptr [rsi - 0x1fcbfffe] ; sti ; call rsp
0x000000000000468b : push qword ptr [rsi - 0x5f] ; add al, 0xf8 ; ret 0x4c89
0x0000000000110709 : push qword ptr [rsp + 0x38] ; ret
0x0000000000135801 : push qword ptr [rsp + rbx*2 + 0x38] ; ret
0x0000000000106ff1 : push qword ptr [rsp + rdi*4 - 0x15] ; retf 0x2e66
0x0000000000148933 : push qword ptr [rsp + rdi*8 + 0x4b740001] ; sti ; call rsp
0x0000000000148913 : push qword ptr [rsp + rdi*8 + 1] ; add byte ptr [rcx + rcx*2], dl ; sti ; jmp rsp
0x0000000000146653 : push qword ptr [rsp + rsi + 0x5a40001] ; clc ; call rsp
0x00000000000e685d : push r12 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000003da9 : push r12 ; cmc ; outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; loop 0x3dfb ; retf -0x40c3
0x000000000013bcd1 : push r12 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e0210 : push r15 ; push rbx ; mov rsi, qword ptr [rsp + 0x20] ; call rax
0x00000000000a5b63 : push r8 ; ret
0x0000000000006a69 : push r9 ; pop rbx ; mov dl, 0xcb ; add ah, 0xb2 ; retf
0x00000000001324ee : push rax ; adc byte ptr [rax + rax*8 - 0x7cb7f68c], al ; ret
0x00000000000c5c15 : push rax ; adc byte ptr [rax - 0x75], cl ; jl 0xc5c48 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5cb5 : push rax ; adc byte ptr [rax - 0x75], cl ; jl 0xc5ce8 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000a78d5 : push rax ; adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x00000000000dd0d8 : push rax ; adc byte ptr [rax], bh ; ret
0x00000000000a78a9 : push rax ; adc byte ptr [rbx + rsi*8 - 0xd], dh ; ret
0x0000000000149985 : push rax ; add al, byte ptr [rax] ; xor al, 0xee ; cld ; jmp rsp
0x0000000000109301 : push rax ; add dword ptr [rax + 0x63], ecx ; ret 0x9589
0x00000000001609c5 : push rax ; add dword ptr [rax], eax ; call 0xffffffffd2160253
0x0000000000160a1d : push rax ; add dword ptr [rax], eax ; jo 0x1609a9 ; clc ; call rcx
0x000000000013b37d : push rax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016b590 : push rax ; and edi, ebx ; push qword ptr [rip + 0x4000004] ; ret
0x00000000000dc510 : push rax ; call 0x88f63
0x00000000000d45d9 : push rax ; call 0xffffffffc4004956
0x00000000000d7769 : push rax ; call 0xffffffffc4007ae6
0x00000000000e0b3f : push rax ; call rax
0x000000000015fce0 : push rax ; clc ; jmp qword ptr [rdx]
0x000000000012498c : push rax ; cld ; mov eax, dword ptr [rax - 4] ; mov qword ptr [rdi + 0x10], rdx ; ret
0x000000000016f300 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x000000000016e8a0 : push rax ; cwde ; sti ; call qword ptr [rdx]
0x000000000016e7c0 : push rax ; cwde ; sti ; jmp qword ptr [rax]
0x00000000000bc594 : push rax ; dec dword ptr [rcx - 0x2d14f3ad] ; call rdx
0x00000000001677b0 : push rax ; iretd ; stc ; call qword ptr [rdx]
0x0000000000143338 : push rax ; jl 0x14333a ; jmp rax
0x00000000001606a0 : push rax ; jl 0x16069e ; call qword ptr [rcx]
0x0000000000142994 : push rax ; jne 0x142994 ; jmp rax
0x00000000001716d0 : push rax ; jp 0x1716d2 ; call qword ptr [rdx]
0x000000000014e810 : push rax ; loope 0x14e80a ; jmp qword ptr [rax]
0x000000000016d790 : push rax ; mov ebx, edi ; call qword ptr [rcx]
0x00000000000de31c : push rax ; mov edx, 0x8b48fffa ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000b3e97 : push rax ; mov qword ptr [rdi], rdx ; ret
0x000000000011e5ed : push rax ; mov rsi, qword ptr [rdi + 0x48] ; xor edx, edx ; jmp 0x8a819
0x0000000000151450 : push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; call rsi
0x00000000000a153c : push rax ; or bl, al ; nop ; ret
0x00000000000beaca : push rax ; or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx - 0x17] ; retf
0x000000000008d5b7 : push rax ; or byte ptr [rax - 0x77], cl ; sal byte ptr [rbp - 0x16], 1 ; ret
0x00000000000a22d3 : push rax ; or cl, ch ; ret
0x00000000001429b0 : push rax ; outsb dx, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x00000000000ba12b : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b7bdb : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aa1bb : push rax ; push 0x75fff883 ; retf
0x0000000000003a76 : push rax ; ret
0x00000000000074a0 : push rax ; ret 0x2a62
0x0000000000070050 : push rax ; ret 0x37
0x000000000000026f : push rax ; ret 0x6b05
0x000000000000519c : push rax ; ret 0xb496
0x000000000016a040 : push rax ; ret 0xfffa
0x000000000000fbd0 : push rax ; retf
0x000000000016a330 : push rax ; retf -6
0x0000000000167330 : push rax ; retf -7
0x0000000000070110 : push rax ; retf 0x37
0x00000000000209a0 : push rax ; retf 8
0x000000000012ca1c : push rax ; sal ebp, cl ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000004c9f : push rax ; sbb byte ptr [rax + 0x7c050641], ch ; sal dword ptr [rsi], 1 ; retf
0x00000000000a7885 : push rax ; sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x000000000014bd80 : push rax ; sbb dh, ah ; call qword ptr [rbx]
0x0000000000007abc : push rax ; scasd eax, dword ptr [rdi] ; retf
0x00000000001479a9 : push rax ; stc ; call rsp
0x00000000001540a0 : push rax ; sub al, 0xf6 ; call qword ptr [rdx]
0x000000000010691c : push rax ; xor al, 0xf8 ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000e7de8 : push rax ; xor byte ptr [rcx], bh ; ret
0x000000000011ec25 : push rbp ; adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x0000000000149a85 : push rbp ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; cld ; jmp rsp
0x000000000011a7aa : push rbp ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000be1ea : push rbp ; cwde ; mov rdi, rbx ; call rcx
0x0000000000108154 : push rbp ; enter -0x2dcf, -0x18 ; ret
0x00000000000c21d7 : push rbp ; jb 0xc21dc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dba1f : push rbp ; mov al, ch ; retf -0x50c
0x00000000000043f7 : push rbp ; mov byte ptr [rsi + 0x399578c9], bh ; xchg eax, ebx ; cdq ; ret 0x5414
0x00000000000cc8f2 : push rbp ; mov qword ptr [rbx + 0x40], rax ; call 0x89328
0x00000000000eabd0 : push rbp ; mov rcx, r12 ; mov r8, r14 ; call rax
0x00000000000048b3 : push rbp ; retf
0x00000000000050d1 : push rbp ; retf -0x25e2
0x0000000000004b33 : push rbp ; retf -0x2850
0x000000000011bcaa : push rbp ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011ec38 : push rbp ; sbb byte ptr [rax + 0x29], cl ; ret 0xc148
0x000000000011a7b6 : push rbp ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000012ad05 : push rbp ; sub byte ptr [rbx - 0x6bf00008], al ; ret
0x000000000011d14c : push rbp ; xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000124869 : push rbx ; adc bl, ch ; xchg eax, ecx ; nop dword ptr [rax] ; call rdx
0x0000000000149a25 : push rbx ; add al, byte ptr [rax] ; mov ah, 0xf7 ; cld ; jmp rsp
0x0000000000025d08 : push rbx ; add byte ptr es:[rax], al ; and dword ptr [rax], eax ; sldt word ptr [rax] ; ret
0x00000000000d721c : push rbx ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000009db6f : push rbx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ee4d8 : push rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011a4c6 : push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000928ed : push rbx ; cmp byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x0000000000115622 : push rbx ; idiv edi ; mov rax, rbx ; pop rbx ; ret
0x0000000000004488 : push rbx ; imul edx, dword ptr [rdx - 0x2c], 0x2a ; ret 0x5a81
0x0000000000100ac9 : push rbx ; mov cl, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000008ebe0 : push rbx ; mov rbx, rdi ; call 0x8aed6
0x0000000000123b60 : push rbx ; mov rbx, rdi ; call rax
0x00000000000e0212 : push rbx ; mov rsi, qword ptr [rsp + 0x20] ; call rax
0x00000000000ae6b9 : push rbx ; ret
0x00000000001737bc : push rbx ; ret 0x306
0x000000000000ee60 : push rbx ; ret 1
0x0000000000006b9d : push rbx ; retf 0x1771
0x00000000000b1c99 : push rbx ; retf 8
0x000000000011b9e2 : push rbx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000ef5ab : push rbx ; sbb byte ptr [rax + 0x39], cl ; ret 0x2e76
0x00000000000efddb : push rbx ; sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000009583e : push rbx ; sbb byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000095657 : push rbx ; sbb byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000095b35 : push rbx ; sbb byte ptr [rax - 0x7af0a0c6], al ; retf
0x00000000000fabf6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000094bc1 : push rbx ; sbb byte ptr [rcx], dh ; rol byte ptr [rax - 0x6bf08cc8], cl ; ret 0x8b48
0x00000000000a85d6 : push rbx ; sbb cl, ch ; mov ecx, 0xebfffffe ; retf -0x3a15
0x00000000000b8bf9 : push rbx ; sbb edi, ebp ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000011a4d2 : push rbx ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000000744b : push rbx ; xchg eax, esi ; stc ; jp 0x73f1 ; retf 0x6fab
0x000000000011d725 : push rbx ; xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000000bd1 : push rcx ; adc al, cl ; ret
0x0000000000099e1b : push rcx ; adc eax, 0xe7e90000 ; ret 0xffff
0x0000000000104936 : push rcx ; clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000148229 : push rcx ; cli ; inc esp ; retf
0x00000000000a23eb : push rcx ; dec dword ptr [rax + 0x39] ; ret 0x1c72
0x0000000000000d01 : push rcx ; jo 0xc90 ; retf 0x101
0x0000000000000d00 : push rcx ; jo 0xc91 ; retf 0x101
0x0000000000000cff : push rcx ; jo 0xc92 ; retf 0x101
0x0000000000006a6a : push rcx ; pop rbx ; mov dl, 0xcb ; add ah, 0xb2 ; retf
0x00000000000eabcf : push rcx ; push rbp ; mov rcx, r12 ; mov r8, r14 ; call rax
0x00000000000a65f3 : push rcx ; ret
0x00000000000052c1 : push rcx ; ret 0xb220
0x00000000000069cd : push rcx ; ret 0xdae8
0x00000000000bc5bb : push rcx ; retf
0x0000000000007769 : push rcx ; retf -0x7e2
0x00000000000997cb : push rcx ; retf -1
0x000000000001c0d8 : push rcx ; retf 0
0x00000000000f5f5b : push rcx ; retf 0x28
0x00000000000052bf : push rcx ; scasd eax, dword ptr [rdi] ; push rcx ; ret 0xb220
0x0000000000148991 : push rcx ; sti ; jmp rsp
0x00000000000a375b : push rcx ; xor ch, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c9140 : push rdi ; adc bl, dh ; ret
0x000000000011eb72 : push rdi ; adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000001194ef : push rdi ; adc byte ptr [rax - 0x75], cl ; push rsi ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000124206 : push rdi ; adc byte ptr [rdi], cl ; mov dh, 0x40 ; push rbx ; ret
0x000000000017115d : push rdi ; add al, byte ptr [rax] ; loopne 0x1711d4 ; cld ; call rsi
0x0000000000149add : push rdi ; add al, byte ptr [rax] ; mov ah, 5 ; std ; call rsp
0x0000000000127819 : push rdi ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e737 : push rdi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eec66 : push rdi ; and byte ptr [rdx + 6], dh ; xor eax, eax ; ret
0x00000000001154ec : push rdi ; idiv edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000004932 : push rdi ; mov ch, 0x14 ; add cl, byte ptr [rax] ; nop ; ret
0x00000000000b411f : push rdi ; or byte ptr [rax + 0x29], cl ; retf -0x7cb8
0x0000000000124faf : push rdi ; or byte ptr [rax + 0x39], cl ; salc ; seta al ; ret
0x00000000000cbad2 : push rdi ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000001194e4 : push rdi ; or byte ptr [rax - 0x75], cl ; push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000092438 : push rdi ; or byte ptr [rbp + rcx*4 + 0x14], cl ; retf -0x38bf
0x00000000000e0211 : push rdi ; push rbx ; mov rsi, qword ptr [rsp + 0x20] ; call rax
0x0000000000023bb0 : push rdi ; ret
0x000000000000375b : push rdi ; ret 0x50f3
0x00000000000a5a4f : push rdi ; ret 0xfffd
0x000000000009ef55 : push rdi ; ret 0xfffe
0x0000000000004440 : push rdi ; retf
0x00000000000cc5a5 : push rdi ; retf -5
0x00000000000f2207 : push rdi ; sbb bl, dh ; ret
0x000000000011eb82 : push rdi ; sbb byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000a5943 : push rdi ; sbb byte ptr [rbp - 0x1d], dh ; mov eax, 0xffffffff ; ret
0x00000000001643c1 : push rdi ; stc ; inc dword ptr [rsi + 0x4000000] ; ret
0x0000000000119523 : push rdi ; xor bl, dh ; ret
0x0000000000128b55 : push rdi ; xor esi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000016831 : push rdx ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000d29c8 : push rdx ; call 0xffffffffc324b31b
0x00000000000d2a08 : push rdx ; call 0xffffffffc324b35b
0x00000000001048a6 : push rdx ; clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000115a18 : push rdx ; idiv edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000005253 : push rdx ; in eax, -0x37 ; retf
0x00000000000925c0 : push rdx ; mov rax, rdx ; ret
0x00000000000144c0 : push rdx ; ret
0x0000000000007d81 : push rdx ; ret 0x78cb
0x0000000000005ba0 : push rdx ; ret 0xb01
0x000000000013ce80 : push rdx ; retf
0x00000000000a8036 : push rdx ; sbb cl, ch ; retf -2
0x0000000000163f79 : push rdx ; stc ; call qword ptr [rbx]
0x00000000000f6a50 : push rdx ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000163fa9 : push rdx ; stc ; jmp qword ptr [rax]
0x000000000016bdb1 : push rdx ; sti ; ljmp ptr [rdx + rax + 0x6f040000] ; retf 0
0x00000000001194e8 : push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000171075 : push rsi ; add al, byte ptr [rax] ; test al, 0x5e ; cld ; call rsi
0x0000000000021290 : push rsi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 3
0x0000000000006ae1 : push rsi ; clc ; retf
0x0000000000110466 : push rsi ; loope 0x11046d ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x00000000000ff166 : push rsi ; mov ebx, 0x8948fff8 ; fucompi st(0) ; retf
0x0000000000126a11 : push rsi ; or bl, al ; nop dword ptr [rax] ; ret
0x000000000011300c : push rsi ; or byte ptr [rax - 0x77], cl ; adc al, 7 ; ret
0x00000000000075c2 : push rsi ; push rsp ; jmp qword ptr [rax]
0x00000000000ba88d : push rsi ; ret
0x00000000000bab6d : push rsi ; retf
0x00000000001194f3 : push rsi ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000003f14 : push rsi ; shl byte ptr [rsi], cl ; retf -0x728b
0x00000000001642f9 : push rsi ; stc ; call rsp
0x00000000000c69d6 : push rsi ; sub bh, ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c68d6 : push rsi ; sub edi, esp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000119518 : push rsi ; xor byte ptr [rax - 0x77], cl ; sub byte ptr [r8 + 0x29], r9b ; ret 0x8948
0x0000000000148028 : push rsp ; adc al, 0xfa ; jmp rsp
0x000000000014baa4 : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax + 0x15], bh ; hlt ; jmp qword ptr [rbx]
0x00000000000a4dd0 : push rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001700a4 : push rsp ; add al, byte ptr [rax] ; pop rax ; retf -5
0x0000000000158570 : push rsp ; add byte ptr [rax], al ; add ah, ah ; retf
0x0000000000158478 : push rsp ; add byte ptr [rax], al ; add ah, ch ; retf 0
0x000000000015e4e0 : push rsp ; add byte ptr [rax], al ; add byte ptr [rbx + rbp + 1], dl ; add al, ch ; retf -9
0x000000000016a0e8 : push rsp ; add byte ptr [rax], al ; add byte ptr [rdi + 1], bl ; add al, dl ; ret 0xfffa
0x0000000000150da5 : push rsp ; add byte ptr [rax], al ; js 0x150d37 ; cmc ; call qword ptr [rdi]
0x0000000000150e45 : push rsp ; add byte ptr [rax], al ; test al, 0x8e ; cmc ; jmp qword ptr [rax]
0x000000000016bcd4 : push rsp ; add dword ptr [rax], eax ; add byte ptr [rbx + rdi*8], al ; retf 0
0x000000000015f6a4 : push rsp ; add dword ptr ds:[rax], eax ; call 0x1415eef7
0x00000000000d4576 : push rsp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e01da : push rsp ; and al, 0x10 ; mov rdi, rax ; call r11
0x00000000000ae094 : push rsp ; and al, 0x18 ; add rbx, 4 ; call 0x8ab49
0x00000000000e09e8 : push rsp ; and al, 0x40 ; mov rdi, rax ; call rdx
0x00000000000c2e99 : push rsp ; and al, 0xc ; mov rsi, r14 ; mov rdi, r12 ; call rax
0x00000000000bd2a5 : push rsp ; and al, 8 ; call 0x89d75
0x000000000010444a : push rsp ; and al, 8 ; mov rax, qword ptr [rax + 0x10] ; jmp rax
0x0000000000149c38 : push rsp ; and ch, bh ; call rsp
0x0000000000146a28 : push rsp ; clc ; call rsp
0x00000000000e685e : push rsp ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000003daa : push rsp ; cmc ; outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; loop 0x3dfa ; retf -0x40c3
0x000000000013bcd2 : push rsp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000123f0a : push rsp ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000075c3 : push rsp ; jmp qword ptr [rax]
0x00000000001729a4 : push rsp ; jno 0x1729b0 ; add byte ptr [rax - 0x71], bl ; cld ; call qword ptr [rdi]
0x000000000000026b : push rsp ; js 0x21c ; mov ah, 0x50 ; ret 0x6b05
0x0000000000166de4 : push rsp ; mov ah, 1 ; add byte ptr [rax], ch ; ret 0xfff9
0x0000000000144b88 : push rsp ; mov dh, ch ; call rsp
0x00000000001463d0 : push rsp ; mov edi, 0x26b4fff7 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff7
0x000000000014c2a4 : push rsp ; or al, byte ptr [rax] ; add al, cl ; sbb al, 0xf4 ; call qword ptr [rdi]
0x0000000000147a90 : push rsp ; pop rsi ; stc ; jmp rsp
0x00000000001714a4 : push rsp ; pop rsp ; add al, byte ptr [rax] ; js 0x171528 ; cld ; jmp rax
0x0000000000133a58 : push rsp ; push -0x7ab7000b ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000e020f : push rsp ; push r15 ; push rbx ; mov rsi, qword ptr [rsp + 0x20] ; call rax
0x0000000000025f08 : push rsp ; ret
0x000000000001f720 : push rsp ; ret 0
0x00000000001447a0 : push rsp ; ret 0xfff4
0x0000000000007662 : push rsp ; retf
0x000000000014249c : push rsp ; retf -7
0x00000000001451fc : push rsp ; retf 0
0x00000000001481d4 : push rsp ; retf 1
0x000000000014b1d4 : push rsp ; retf 2
0x00000000001588a4 : push rsp ; rol byte ptr [rax], 1 ; add byte ptr [rsi + 0x39], dh ; jmp qword ptr [rdi]
0x0000000000146cc0 : push rsp ; sar al, 0xff ; mov esp, 0x400015d ; ret 0xfff8
0x000000000014a750 : push rsp ; sbb al, 0xfe ; jmp rsp
0x000000000014d0a4 : push rsp ; sbb byte ptr [rax], al ; add byte ptr [rax], cl ; xor ah, dh ; call qword ptr [rdi]
0x000000000013a958 : push rsp ; stc ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000016be09 : push rsp ; sti ; inc dword ptr [rdx] ; add eax, dword ptr [rax] ; add byte ptr [rax + rsi], al ; retf 0
0x000000000015e4e4 : push rsp ; sub eax, dword ptr [rcx] ; add al, ch ; retf -9
0x00000000000e2158 : push rsp ; wait ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000153ea4 : push rsp ; xchg byte ptr [rax], al ; add al, bh ; sub esi, esi ; call qword ptr [rdx]
0x0000000000163fa4 : push rsp ; xchg dword ptr [rcx], eax ; add byte ptr [rax], bl ; push rdx ; stc ; jmp qword ptr [rax]
0x000000000016eba4 : push rsp ; xor eax, dword ptr [rdx] ; add byte ptr [rax - 0x66], bh ; sti ; call qword ptr [rdx]
0x0000000000094be0 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000000c7cfa : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000144a05 : pushfq ; add byte ptr [rax], al ; je 0x1449f9 ; hlt ; call rsp
0x00000000001554ed : pushfq ; add byte ptr [rax], al ; shl byte ptr [rax - 0xa], 1 ; jmp rsp
0x000000000015f6ec : pushfq ; add dword ptr ds:[rax], eax ; loopne 0x15f73c ; clc ; call qword ptr [rbx]
0x0000000000148b44 : pushfq ; add eax, 0x5ef40002 ; sti ; call rsp
0x0000000000146a94 : pushfq ; add qword ptr [r8], r8 ; adc al, 0x72 ; clc ; call rsp
0x00000000001690e9 : pushfq ; cli ; jmp qword ptr [rsi]
0x00000000000ac680 : pushfq ; cmc ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000015f52c : pushfq ; cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; clc ; call rdi
0x000000000014493c : pushfq ; cwde ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sal ah, cl ; jmp rsp
0x00000000001550ec : pushfq ; cwde ; add byte ptr [rax], al ; xor byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000000067bb : pushfq ; imul esp, dword ptr [rbp + 0x7e], 0x2280e881 ; retf
0x0000000000149f34 : pushfq ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; xchg eax, esp ; std ; jmp rsp
0x0000000000112e98 : pushfq ; jmp qword ptr [rsi]
0x000000000014a524 : pushfq ; lea eax, dword ptr [rdx] ; add byte ptr [rsi + rcx - 2], al ; call rsp
0x0000000000005c4e : pushfq ; lodsd eax, dword ptr [rsi] ; adc byte ptr [rdx], dl ; xchg rax, r13 ; jno 0x5c11 ; retf
0x0000000000149c34 : pushfq ; pop rsi ; add al, byte ptr [rax] ; push rsp ; and ch, bh ; call rsp
0x00000000001554ec : pushfq ; pushfq ; add byte ptr [rax], al ; shl byte ptr [rax - 0xa], 1 ; jmp rsp
0x0000000000157c2c : pushfq ; ret 0
0x00000000000253c0 : pushfq ; ret 2
0x00000000000a021a : pushfq ; retf
0x00000000000041a4 : pushfq ; retf -0x2a2
0x0000000000145214 : pushfq ; retf 0
0x000000000000744f : pushfq ; retf 0x6fab
0x000000000016d3ec : pushfq ; sbb eax, dword ptr [rdx] ; add byte ptr [rax], dl ; test bh, bl ; jmp qword ptr [rdx]
0x00000000001479a4 : pushfq ; wait ; add dword ptr [rax], eax ; in al, 0x50 ; stc ; call rsp
0x000000000014489c : pushfq ; xchg eax, esp ; add byte ptr [rax], al ; and al, 0xca ; hlt ; call rsp
0x000000000016edec : pushfq ; xor eax, 0x9f900002 ; sti ; jmp qword ptr [rdx]
0x0000000000167aa0 : rcl bh, 1 ; stc ; call rax
0x00000000000053c1 : rcl byte ptr [rax + 0x3fcd94a7], 1 ; mov dh, 0x5c ; retf -0x20ef
0x0000000000003094 : rcl byte ptr [rax + rax], 0 ; ret 0x14
0x000000000000026a : rcl byte ptr [rax + rdi*2 - 0x57], 0xb4 ; push rax ; ret 0x6b05
0x00000000000ce62e : rcl byte ptr [rax], 0x48 ; mov dword ptr [rbx + 0x68], eax ; call 0x8b0f8
0x00000000000cd09b : rcl byte ptr [rax], 0x48 ; mov dword ptr [rbx + 8], eax ; call 0x89398
0x00000000000a57b2 : rcl byte ptr [rax], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000008d929 : rcl byte ptr [rax], 0x48 ; mov dword ptr [rdi], eax ; ret
0x00000000000bd21a : rcl byte ptr [rax], 0x49 ; mov dword ptr [rbp], eax ; call 0x89cf8
0x0000000000152f20 : rcl byte ptr [rax], 0xf6 ; call qword ptr [rbx]
0x0000000000152f00 : rcl byte ptr [rax], 0xf6 ; call qword ptr [rdx]
0x00000000000701c8 : rcl byte ptr [rip + 0x14], 0 ; add al, bl ; retf
0x0000000000005656 : rcl byte ptr [rsi], 5 ; lahf ; ret 0xc2cb
0x000000000015e620 : rcl ch, 0xf7 ; jmp qword ptr [rdx]
0x000000000012c79c : rcl ch, 1 ; cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000143bc4 : rcl dl, 0xfe ; jmp rcx
0x000000000014e740 : rcr bh, 0xf4 ; jmp qword ptr [rdx]
0x00000000000d2979 : rcr byte ptr [rax], 0x48 ; mov dword ptr [rdi], eax ; ret
0x00000000000d298f : rcr byte ptr [rax], 0x48 ; mov dword ptr [rsi], eax ; ret
0x0000000000015990 : rcr byte ptr [rbp + 0x12], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000b232a : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008e28e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000090a05 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f949d : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000000ee57d : rcr byte ptr [rbx - 1], cl ; loopne 0xee570 ; stosb byte ptr [rdi], al ; retf -7
0x00000000000b8d8c : rcr byte ptr [rcx], 0xfd ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008e0d3 : rcr dh, cl ; or al, byte ptr [rax] ; ret
0x0000000000006ada : rcr dword ptr [rbx + 0x60204526], 0x1a ; push rsi ; clc ; retf
0x00000000000fa2db : rcr dword ptr [rcx], 1 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000007cc : rcr dword ptr [rdi], 0x20 ; add byte ptr [rdx], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rax ; sti ; retf -0x5ef3
0x0000000000008327 : rcr edi, 1 ; idiv dword ptr [rdx + 0x6d086dc8] ; ret 0x5c64
0x000000000008e553 : rcr edx, 1 ; or al, byte ptr [rax] ; ret
0x0000000000008326 : rcr rdi, 1 ; idiv dword ptr [rdx + 0x6d086dc8] ; ret 0x5c64
0x00000000000b385f : rep movsq qword ptr [rdi], qword ptr [rsi] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x000000000008c486 : rep stosd dword ptr [rdi], eax ; ret
0x000000000008e9d1 : rep stosq qword ptr [rdi], rax ; mov rax, rdx ; pop rbx ; ret
0x00000000000c752f : rep stosq qword ptr [rdi], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104882 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x104898 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104912 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x104928 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a8e2 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x12a8f8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a972 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x12a988 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b7732 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xb7748 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7656 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xc7668 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ddd42 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xddd58 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8972 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xe8988 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000002e9 : ret
0x000000000000a6a9 : ret 0
0x0000000000083b2c : ret 0x10
0x00000000000002b2 : ret 0x1002
0x00000000000003a4 : ret 0x1020
0x0000000000095c3b : ret 0x10be
0x000000000007f17c : ret 0x11
0x0000000000095d42 : ret 0x11be
0x0000000000095ddc : ret 0x12be
0x0000000000014101 : ret 0x13
0x0000000000095afc : ret 0x13be
0x000000000006d768 : ret 0x13d2
0x000000000006de58 : ret 0x13d3
0x000000000006e620 : ret 0x13d4
0x000000000000c780 : ret 0x13ef
0x0000000000003098 : ret 0x14
0x0000000000000b5b : ret 0x1400
0x000000000000b808 : ret 0x1412
0x0000000000008619 : ret 0x1431
0x00000000000d2d05 : ret 0x148
0x000000000010ee07 : ret 0x149
0x0000000000095c5c : ret 0x14be
0x00000000000a8773 : ret 0x14d
0x0000000000126d79 : ret 0x14eb
0x0000000000008090 : ret 0x15a8
0x0000000000095d5c : ret 0x15be
0x00000000001268e5 : ret 0x15e9
0x000000000001c0f0 : ret 0x166
0x0000000000109fe5 : ret 0x1674
0x0000000000095c06 : ret 0x17be
0x00000000000d5190 : ret 0x1877
0x0000000000007c2a : ret 0x187a
0x00000000000dd2cd : ret 0x189
0x000000000009b844 : ret 0x1973
0x00000000000bbf94 : ret 0x1975
0x000000000015baa1 : ret 0x19a
0x0000000000005d19 : ret 0x1a05
0x0000000000006c24 : ret 0x1a41
0x00000000000ff0f3 : ret 0x1ae9
0x000000000013891a : ret 0x1b76
0x00000000000baa0d : ret 0x1b8
0x000000000009d171 : ret 0x1b9
0x00000000000a23ef : ret 0x1c72
0x0000000000007c6c : ret 0x1dbe
0x00000000000a437d : ret 0x1de8
0x000000000001da10 : ret 0x1e9
0x00000000000ee23c : ret 0x1ee8
0x000000000009acea : ret 0x1f0f
0x0000000000007d0e : ret 0x1f37
0x00000000000d73b6 : ret 0x1f76
0x00000000000247c0 : ret 0x1fc
0x000000000017496b : ret 0x205
0x00000000000a417a : ret 0x20e8
0x00000000000072cc : ret 0x2105
0x0000000000139a22 : ret 0x2141
0x00000000000c73d2 : ret 0x2144
0x0000000000094709 : ret 0x21be
0x0000000000096429 : ret 0x21e8
0x00000000000d2cf6 : ret 0x2273
0x0000000000127a64 : ret 0x2277
0x000000000009465c : ret 0x22be
0x00000000000bd408 : ret 0x22e8
0x000000000009462c : ret 0x23be
0x000000000000066a : ret 0x2454
0x0000000000094544 : ret 0x24be
0x00000000001365e2 : ret 0x24bf
0x00000000000b4ef5 : ret 0x2566
0x00000000000945fc : ret 0x25be
0x000000000009791a : ret 0x26
0x000000000011ce3a : ret 0x2654
0x0000000000094574 : ret 0x26be
0x00000000000ec76f : ret 0x26e9
0x0000000000105fc8 : ret 0x27
0x0000000000102d0a : ret 0x27f5
0x0000000000103262 : ret 0x27fa
0x00000000000f6220 : ret 0x28
0x00000000001028da : ret 0x2806
0x00000000000fb11a : ret 0x2876
0x00000000000944e4 : ret 0x28be
0x00000000000d7a62 : ret 0x28e9
0x00000000000198d0 : ret 0x290
0x00000000000a9a34 : ret 0x2948
0x00000000000efb89 : ret 0x294c
0x0000000000000e9a : ret 0x2999
0x00000000000d6874 : ret 0x2a
0x00000000000e2852 : ret 0x2a03
0x00000000000074a1 : ret 0x2a62
0x0000000000003917 : ret 0x2ab
0x0000000000005b72 : ret 0x2ade
0x0000000000118bc0 : ret 0x2ae8
0x00000000000c66ad : ret 0x2b
0x00000000000cfd72 : ret 0x2b31
0x00000000000da8bb : ret 0x2b48
0x0000000000007251 : ret 0x2b5
0x00000000000b59fe : ret 0x2b8
0x000000000000dab0 : ret 0x2ba
0x000000000013a43f : ret 0x2be9
0x00000000000b60cd : ret 0x2c
0x00000000000b8692 : ret 0x2c22
0x00000000000b2e5a : ret 0x2cfc
0x00000000000a6021 : ret 0x2d
0x00000000000afbc2 : ret 0x2d2a
0x00000000000a3662 : ret 0x2df2
0x000000000008e629 : ret 0x2e
0x00000000000a2e7e : ret 0x2e40
0x00000000000c0350 : ret 0x2e66
0x00000000000ef5af : ret 0x2e76
0x0000000000120868 : ret 0x2e8
0x0000000000095014 : ret 0x2ebe
0x00000000000905ca : ret 0x2f1b
0x000000000008ca1a : ret 0x2f7f
0x000000000008bf42 : ret 0x2f89
0x000000000008bd42 : ret 0x2f8a
0x000000000008bb42 : ret 0x2f8b
0x000000000008b942 : ret 0x2f8c
0x000000000008b742 : ret 0x2f8d
0x000000000008b542 : ret 0x2f8e
0x000000000008b342 : ret 0x2f8f
0x000000000008b142 : ret 0x2f90
0x000000000008af42 : ret 0x2f91
0x000000000008ad42 : ret 0x2f92
0x000000000008ab42 : ret 0x2f93
0x000000000008a942 : ret 0x2f94
0x000000000008a742 : ret 0x2f95
0x000000000008a542 : ret 0x2f96
0x000000000008a342 : ret 0x2f97
0x000000000008a142 : ret 0x2f98
0x0000000000089f42 : ret 0x2f99
0x0000000000089d42 : ret 0x2f9a
0x0000000000089b42 : ret 0x2f9b
0x0000000000089942 : ret 0x2f9c
0x0000000000089742 : ret 0x2f9d
0x0000000000089542 : ret 0x2f9e
0x0000000000089342 : ret 0x2f9f
0x0000000000089142 : ret 0x2fa0
0x0000000000088f42 : ret 0x2fa1
0x0000000000093ca0 : ret 0x2fbe
0x0000000000016828 : ret 0x302
0x00000000001737bd : ret 0x306
0x0000000000000c37 : ret 0x3080
0x0000000000112b4d : ret 0x30e9
0x00000000000924aa : ret 0x3101
0x000000000009a92c : ret 0x3107
0x000000000011297f : ret 0x3145
0x000000000001b6e8 : ret 0x316
0x00000000000bd4f8 : ret 0x32e8
0x000000000000a480 : ret 0x32f
0x00000000000d7ba7 : ret 0x33e9
0x000000000009fa36 : ret 0x34e8
0x0000000000006ac5 : ret 0x34ea
0x0000000000025060 : ret 0x355
0x0000000000119468 : ret 0x3574
0x000000000009b828 : ret 0x3575
0x0000000000007bec : ret 0x3639
0x000000000000cdc9 : ret 0x37
0x000000000008ffbe : ret 0x374
0x0000000000004e04 : ret 0x3790
0x00000000000a4563 : ret 0x37e8
0x00000000000201e8 : ret 0x381
0x0000000000010198 : ret 0x38b
0x0000000000093196 : ret 0x38be
0x00000000000b4b2c : ret 0x3941
0x0000000000110699 : ret 0x3944
0x000000000008d2c7 : ret 0x3948
0x000000000009d370 : ret 0x3949
0x00000000000b5761 : ret 0x394c
0x00000000000b4677 : ret 0x394d
0x000000000008ea43 : ret 0x3a74
0x0000000000027448 : ret 0x3af
0x000000000011187a : ret 0x3b4c
0x00000000000a405f : ret 0x3be8
0x00000000000d416e : ret 0x3ce9
0x0000000000127bc7 : ret 0x3d77
0x000000000012cd0d : ret 0x3de8
0x000000000010a829 : ret 0x3e9
0x0000000000000b54 : ret 0x4001
0x00000000000de9a9 : ret 0x40e9
0x00000000000b3934 : ret 0x4101
0x000000000000115e : ret 0x4102
0x00000000000963c0 : ret 0x4120
0x0000000000004b3f : ret 0x42bb
0x0000000000094494 : ret 0x42be
0x0000000000007fbf : ret 0x42dc
0x000000000011e128 : ret 0x42e8
0x0000000000126a22 : ret 0x4374
0x0000000000091f77 : ret 0x43e9
0x0000000000093cd6 : ret 0x4401
0x000000000009acf5 : ret 0x4408
0x000000000009acd5 : ret 0x4410
0x0000000000111039 : ret 0x4466
0x00000000000be126 : ret 0x44e8
0x00000000000958d3 : ret 0x453c
0x0000000000005976 : ret 0x454a
0x000000000012e2f0 : ret 0x4589
0x000000000013a525 : ret 0x45e9
0x0000000000007835 : ret 0x46a4
0x000000000008cea2 : ret 0x4801
0x0000000000095494 : ret 0x4802
0x000000000009583a : ret 0x4803
0x000000000008d126 : ret 0x4804
0x00000000000a20a9 : ret 0x4808
0x000000000008e061 : ret 0x4810
0x000000000010470c : ret 0x4818
0x000000000009953f : ret 0x4820
0x0000000000092795 : ret 0x4838
0x0000000000095ae6 : ret 0x48be
0x00000000000a7904 : ret 0x48c3
0x0000000000008324 : ret 0x48e6
0x000000000009249b : ret 0x4901
0x00000000000aa26a : ret 0x4904
0x00000000000bb609 : ret 0x4908
0x0000000000095ec3 : ret 0x49be
0x0000000000114401 : ret 0x49e8
0x0000000000012538 : ret 0x4a
0x0000000000005dcb : ret 0x4a40
0x0000000000092ec2 : ret 0x4abe
0x0000000000094691 : ret 0x4b3b
0x0000000000093d52 : ret 0x4c01
0x00000000000bb0f0 : ret 0x4c10
0x0000000000004690 : ret 0x4c89
0x0000000000004c4f : ret 0x4cc6
0x0000000000095f7b : ret 0x4d01
0x00000000000b599a : ret 0x4d04
0x00000000000bcf66 : ret 0x4e8
0x00000000000a434c : ret 0x4ee8
0x0000000000173f95 : ret 0x501
0x000000000017339a : ret 0x502
0x0000000000175600 : ret 0x505
0x000000000017379f : ret 0x507
0x0000000000000b66 : ret 0x50a3
0x000000000000375d : ret 0x50f3
0x0000000000114521 : ret 0x50ff
0x0000000000005a4f : ret 0x5245
0x0000000000110215 : ret 0x5408
0x0000000000004400 : ret 0x5414
0x000000000010772e : ret 0x5488
0x00000000000cbb68 : ret 0x5574
0x0000000000139765 : ret 0x55e8
0x000000000000393d : ret 0x55f0
0x0000000000139c24 : ret 0x56e8
0x00000000000051ea : ret 0x5749
0x0000000000126840 : ret 0x577
0x00000000000a4243 : ret 0x57e8
0x00000000000933c2 : ret 0x58e9
0x0000000000005d94 : ret 0x5963
0x00000000000d53c1 : ret 0x59e8
0x000000000000441d : ret 0x5a81
0x000000000000832f : ret 0x5c64
0x000000000009ea9e : ret 0x5ce8
0x00000000000cb3c9 : ret 0x5d5b
0x00000000000cf7e8 : ret 0x5d74
0x0000000000121e08 : ret 0x62e8
0x000000000017889d : ret 0x6302
0x0000000000106eb3 : ret 0x634d
0x00000000000bd3c6 : ret 0x64e8
0x0000000000177a05 : ret 0x650a
0x0000000000005609 : ret 0x652e
0x00000000000055da : ret 0x6537
0x000000000000486c : ret 0x6568
0x0000000000126895 : ret 0x65e9
0x00000000000b4a17 : ret 0x6602
0x0000000000006c07 : ret 0x66a
0x00000000000d28b0 : ret 0x66c3
0x0000000000125ba3 : ret 0x67e8
0x00000000000e7fb6 : ret 0x689
0x00000000000a4532 : ret 0x68e8
0x00000000000d3ea2 : ret 0x68e9
0x00000000000d519c : ret 0x6a
0x0000000000000270 : ret 0x6b05
0x000000000009160c : ret 0x6b8
0x00000000000ba880 : ret 0x6c2
0x00000000000a402e : ret 0x6ce8
0x000000000000488b : ret 0x6da5
0x00000000000dcd2d : ret 0x6de9
0x0000000000003778 : ret 0x6e78
0x00000000000baae8 : ret 0x6f1
0x00000000000bab50 : ret 0x6f8
0x00000000000bd5bb : ret 0x6fe8
0x0000000000003871 : ret 0x6ff4
0x00000000000bd2ba : ret 0x70e8
0x000000000000354c : ret 0x7185
0x0000000000127899 : ret 0x71e8
0x00000000000a01d2 : ret 0x71e9
0x00000000000ffdb8 : ret 0x72e9
0x0000000000003ea6 : ret 0x7373
0x000000000009c37a : ret 0x7401
0x00000000000070e7 : ret 0x7452
0x000000000009277b : ret 0x74b9
0x00000000000058ba : ret 0x74d8
0x000000000008ecc1 : ret 0x7501
0x00000000000c9015 : ret 0x776
0x0000000000007d82 : ret 0x78cb
0x00000000000a3972 : ret 0x78e8
0x0000000000006970 : ret 0x7906
0x000000000011b170 : ret 0x7ae8
0x0000000000008320 : ret 0x7cdd
0x00000000000bd9ae : ret 0x7ce8
0x0000000000004f27 : ret 0x7fff
0x000000000000401d : ret 0x80fc
0x0000000000006c67 : ret 0x8160
0x00000000001236e8 : ret 0x82e8
0x00000000000dfa6a : ret 0x82eb
0x0000000000092612 : ret 0x8301
0x0000000000094ca5 : ret 0x830f
0x00000000000cb9ac : ret 0x8341
0x0000000000092355 : ret 0x8348
0x00000000000dc90d : ret 0x8349
0x00000000000082ca : ret 0x837
0x00000000000ef2cc : ret 0x83c6
0x0000000000091e49 : ret 0x840f
0x00000000000eb8ba : ret 0x841
0x0000000000093fff : ret 0x8440
0x00000000000ec33f : ret 0x8489
0x0000000000007fb5 : ret 0x84e7
0x00000000000b4671 : ret 0x8508
0x0000000000090865 : ret 0x850f
0x0000000000090585 : ret 0x8548
0x00000000000b494b : ret 0x854d
0x00000000000a8c19 : ret 0x860f
0x00000000000b7985 : ret 0x8672
0x00000000000d47cb : ret 0x870f
0x00000000000c9175 : ret 0x876
0x00000000000bd0c3 : ret 0x87e8
0x00000000000a4212 : ret 0x88e8
0x00000000000bbcb8 : ret 0x8908
0x000000000009bc2b : ret 0x8910
0x00000000001191da : ret 0x8941
0x00000000000e00a9 : ret 0x8944
0x000000000008cb42 : ret 0x8948
0x00000000000916f0 : ret 0x8949
0x000000000009d39f : ret 0x894c
0x00000000000b466b : ret 0x894d
0x0000000000094b78 : ret 0x8966
0x00000000000bcac1 : ret 0x89e8
0x000000000010d056 : ret 0x89e9
0x0000000000137b9b : ret 0x8a74
0x00000000000bd8a0 : ret 0x8ae8
0x0000000000175267 : ret 0x8b01
0x0000000000001120 : ret 0x8b3
0x0000000000091bbc : ret 0x8b44
0x0000000000093039 : ret 0x8b48
0x00000000000bcaf7 : ret 0x8b49
0x00000000000a3655 : ret 0x8b4c
0x000000000008d909 : ret 0x8be
0x00000000000cbac9 : ret 0x8c0f
0x000000000009f4de : ret 0x8ce8
0x0000000000092c63 : ret 0x8d04
0x00000000000ab633 : ret 0x8d48
0x000000000009899d : ret 0x8d49
0x00000000000d42e0 : ret 0x8d4a
0x0000000000126020 : ret 0x8d4b
0x0000000000124f9d : ret 0x90c3
0x00000000000d84e9 : ret 0x91e8
0x000000000009b821 : ret 0x920f
0x00000000000d8bb8 : ret 0x92e9
0x0000000000003482 : ret 0x9349
0x000000000012cdb7 : ret 0x93e8
0x0000000000132957 : ret 0x93e9
0x000000000008e1f4 : ret 0x940f
0x0000000000109305 : ret 0x9589
0x00000000000bd495 : ret 0x95e8
0x00000000000aba05 : ret 0x95e9
0x00000000000958da : ret 0x975
0x00000000000a593b : ret 0x976
0x00000000000d7322 : ret 0x98e9
0x00000000000a4938 : ret 0x9a2
0x0000000000095d82 : ret 0x9be
0x0000000000005afa : ret 0x9d0c
0x00000000000060ef : ret 0x9d2e
0x00000000000039c3 : ret 0x9ddd
0x00000000000055ae : ret 0x9e0c
0x00000000001355c8 : ret 0x9f0f
0x00000000000e1146 : ret 0xa
0x000000000009bcd9 : ret 0xa0e9
0x000000000013bd38 : ret 0xa2e9
0x0000000000007c71 : ret 0xa486
0x00000000000a45f6 : ret 0xa4e8
0x00000000000bd384 : ret 0xa6e8
0x000000000010a8a8 : ret 0xa6e9
0x00000000001143a1 : ret 0xa9e8
0x000000000011c640 : ret 0xaae8
0x0000000000007830 : ret 0xab5d
0x0000000000095da2 : ret 0xabe
0x00000000000abaf0 : ret 0xadeb
0x00000000000bd920 : ret 0xae8
0x00000000000ee2ac : ret 0xaee8
0x0000000000005ba2 : ret 0xb01
0x0000000000003695 : ret 0xb182
0x00000000000052c2 : ret 0xb220
0x00000000000052ea : ret 0xb232
0x0000000000007de5 : ret 0xb26f
0x000000000000452c : ret 0xb312
0x00000000000d49f7 : ret 0xb3e9
0x000000000008ea8f : ret 0xb475
0x0000000000003896 : ret 0xb485
0x000000000000519d : ret 0xb496
0x000000000008d176 : ret 0xb4e8
0x00000000000abaa7 : ret 0xb60f
0x000000000010b728 : ret 0xb6eb
0x00000000000d4166 : ret 0xb77
0x00000000000e74ca : ret 0xb8
0x00000000000903ae : ret 0xb848
0x00000000000cb3a1 : ret 0xb9e8
0x000000000010d165 : ret 0xb9e9
0x00000000000b7488 : ret 0xb9eb
0x000000000011de30 : ret 0xbae8
0x0000000000095cd2 : ret 0xbbe
0x00000000000e9e7e : ret 0xbe
0x00000000000da974 : ret 0xbe0f
0x00000000000bd31f : ret 0xbe8
0x00000000000de916 : ret 0xbee9
0x000000000009345b : ret 0xbfe9
0x000000000000e8b1 : ret 0xc
0x000000000008f3dd : ret 0xc031
0x000000000009383e : ret 0xc083
0x000000000008dbc9 : ret 0xc148
0x000000000009496e : ret 0xc283
0x000000000000565a : ret 0xc2cb
0x00000000000bd967 : ret 0xc3e8
0x00000000000b5168 : ret 0xc539
0x00000000000c31e9 : ret 0xc74
0x000000000009083f : ret 0xc789
0x00000000000abab4 : ret 0xc809
0x00000000000d41e2 : ret 0xc8e9
0x000000000008f4d3 : ret 0xc931
0x0000000000007ad8 : ret 0xc9ac
0x00000000000075f0 : ret 0xc9d1
0x0000000000006b9c : ret 0xca53
0x000000000011e712 : ret 0xca77
0x0000000000095dfc : ret 0xcbe
0x00000000000d454e : ret 0xcce8
0x00000000000aa050 : ret 0xcd77
0x00000000000071a6 : ret 0xce49
0x00000000000bd25c : ret 0xcee8
0x00000000000a44cb : ret 0xcfe8
0x000000000010b736 : ret 0xcfeb
0x0000000000002608 : ret 0xd
0x00000000000a826b : ret 0xd001
0x0000000000003b38 : ret 0xd002
0x000000000010ef62 : ret 0xd008
0x0000000000092996 : ret 0xd009
0x00000000000a3c82 : ret 0xd021
0x00000000000a163e : ret 0xd108
0x00000000000b2a02 : ret 0xd148
0x0000000000006f25 : ret 0xd21d
0x000000000011150b : ret 0xd231
0x0000000000007db6 : ret 0xd256
0x000000000009bc1e : ret 0xd285
0x000000000011020d : ret 0xd2f7
0x0000000000003f97 : ret 0xd424
0x00000000000bd556 : ret 0xd4e8
0x00000000000f94b6 : ret 0xd4eb
0x00000000000071fb : ret 0xd540
0x00000000000a45c5 : ret 0xd5e8
0x0000000000006d64 : ret 0xd60b
0x00000000000a7c79 : ret 0xd6e9
0x00000000000d513a : ret 0xd77
0x000000000008d9f0 : ret 0xd889
0x000000000000458d : ret 0xd9b1
0x00000000001746db : ret 0xda03
0x00000000000069ce : ret 0xdae8
0x0000000000024e68 : ret 0xdb
0x0000000000095dbc : ret 0xdbe
0x0000000000008938 : ret 0xdc
0x0000000000006713 : ret 0xdc79
0x000000000009ef1e : ret 0xdce8
0x00000000000b4b38 : ret 0xdd75
0x00000000000b4957 : ret 0xde75
0x000000000009340d : ret 0xde9
0x00000000000d31dc : ret 0xdeb
0x0000000000005a95 : ret 0xdf82
0x00000000001509c7 : ret 0xe0a
0x00000000000bd44a : ret 0xe0e8
0x0000000000005e07 : ret 0xe10c
0x00000000000b5173 : ret 0xe275
0x0000000000093139 : ret 0xe281
0x0000000000095165 : ret 0xe283
0x00000000000bd748 : ret 0xe2e8
0x000000000012cd67 : ret 0xe3e8
0x0000000000000d3f : ret 0xe4c0
0x0000000000006742 : ret 0xe6f
0x00000000000c905e : ret 0xe7eb
0x00000000000a449a : ret 0xe8
0x00000000000bac75 : ret 0xe875
0x0000000000098b32 : ret 0xe883
0x00000000000dca4a : ret 0xe901
0x00000000000cf63d : ret 0xe9c1
0x0000000000114461 : ret 0xe9e8
0x0000000000007372 : ret 0xea68
0x0000000000098992 : ret 0xeac1
0x0000000000097d6c : ret 0xeb01
0x0000000000099770 : ret 0xeb08
0x0000000000095c7c : ret 0xebe
0x00000000000d748f : ret 0xebe8
0x00000000000d72cf : ret 0xebe9
0x00000000000d76de : ret 0xece8
0x000000000012680e : ret 0xece9
0x00000000000082b2 : ret 0xed0c
0x00000000000d5f2c : ret 0xeeb
0x00000000000b5b2c : ret 0xeee8
0x0000000000003822 : ret 0xef3b
0x00000000000a41ab : ret 0xefe8
0x0000000000003aa8 : ret 0xefff
0x000000000000d4a1 : ret 0xf
0x000000000008f4e2 : ret 0xf01
0x00000000000a1edd : ret 0xf075
0x000000000012d03f : ret 0xf14
0x0000000000127799 : ret 0xf1e8
0x0000000000110bb2 : ret 0xf41
0x00000000000dcd4c : ret 0xf44
0x0000000000090374 : ret 0xf48
0x000000000009ff76 : ret 0xf4e8
0x000000000012ab5a : ret 0xf5f4
0x000000000012616a : ret 0xf62c
0x00000000000d3e99 : ret 0xf631
0x00000000000aba96 : ret 0xf66
0x0000000000122e2a : ret 0xf682
0x0000000000094f90 : ret 0xf685
0x000000000011d5ea : ret 0xf6e6
0x000000000011872a : ret 0xf729
0x0000000000006b7a : ret 0xf731
0x000000000010edfe : ret 0xf748
0x000000000009ce34 : ret 0xf749
0x000000000000ef98 : ret 0xf8
0x0000000000101a2a : ret 0xf87f
0x000000000010152a : ret 0xf884
0x000000000010102a : ret 0xf889
0x00000000000ff32a : ret 0xf8a6
0x00000000001003fa : ret 0xf8a8
0x00000000000ff85a : ret 0xf8c3
0x00000000000fe5fa : ret 0xf8d1
0x00000000000fe0fa : ret 0xf8d6
0x00000000000fdbfa : ret 0xf8db
0x00000000000d41b2 : ret 0xf8e9
0x00000000000fd0ea : ret 0xf8eb
0x00000000000fc2fa : ret 0xf8f4
0x00000000000fbdca : ret 0xf8f8
0x0000000000004bfc : ret 0xf928
0x00000000000f82ba : ret 0xf929
0x00000000000f727a : ret 0xf94b
0x00000000000f642a : ret 0xf94c
0x00000000000f169a : ret 0xf985
0x00000000000f01da : ret 0xf9a3
0x00000000000bcd71 : ret 0xf9e8
0x0000000000009b20 : ret 0xfa
0x00000000000e8b5a : ret 0xfa14
0x00000000000e545a : ret 0xfa4b
0x00000000000e366a : ret 0xfa62
0x000000000010094f : ret 0xfa83
0x00000000000ab207 : ret 0xfac1
0x000000000009e600 : ret 0xfae8
0x00000000000d86ca : ret 0xfb0a
0x00000000000d3fea : ret 0xfb5c
0x00000000000d45fa : ret 0xfb66
0x00000000000d4f5a : ret 0xfb6e
0x000000000008f47b : ret 0xfb80
0x0000000000095d03 : ret 0xfbe
0x00000000000c853a : ret 0xfc2f
0x00000000000923ea : ret 0xfc3
0x00000000000c7f3a : ret 0xfc35
0x00000000000068f3 : ret 0xfc56
0x00000000000c11fa : ret 0xfca6
0x00000000000bd5aa : ret 0xfcc7
0x00000000000b846a : ret 0xfd2b
0x00000000000b6a8a : ret 0xfd56
0x00000000000b28da : ret 0xfd7e
0x00000000000afaca : ret 0xfd9f
0x0000000000004b0c : ret 0xfda5
0x00000000000ad69a : ret 0xfdba
0x00000000000ad73a : ret 0xfde9
0x00000000000ad63a : ret 0xfdea
0x00000000000ab32a : ret 0xfdfb
0x00000000000a90fa : ret 0xfe1b
0x00000000000a6fea : ret 0xfe31
0x00000000000a5eea : ret 0xfe5d
0x00000000000a535a : ret 0xfe68
0x00000000000d2e1c : ret 0xfeb
0x00000000000b55e2 : ret 0xff3d
0x000000000009116a : ret 0xff9e
0x00000000000b4441 : ret 0xffb8
0x000000000010652a : ret 0xffc1
0x000000000009478a : ret 0xffd9
0x0000000000095d9a : ret 0xffe5
0x0000000000144799 : ret 0xfff4
0x000000000012ce3b : ret 0xfff5
0x000000000011e5f6 : ret 0xfff6
0x00000000000c233f : ret 0xfff7
0x00000000000e1dbe : ret 0xfff8
0x0000000000166de9 : ret 0xfff9
0x00000000000ddd59 : ret 0xfffa
0x0000000000093c05 : ret 0xfffb
0x00000000000bd1f5 : ret 0xfffc
0x00000000000a5a51 : ret 0xfffd
0x000000000009e9c0 : ret 0xfffe
0x000000000008d80d : ret 0xffff
0x00000000000013d0 : ret 1
0x000000000000090b : ret 2
0x000000000000c521 : ret 3
0x00000000000019f8 : ret 5
0x000000000007812c : ret 6
0x0000000000001d00 : ret 7
0x0000000000001e74 : ret 8
0x000000000000100a : ret 9
0x00000000000013e0 : retf
0x0000000000004afa : retf -0x10e2
0x00000000000073e2 : retf -0x1153
0x000000000009c3e2 : retf -0x11c
0x00000000000ea452 : retf -0x14
0x000000000009fa72 : retf -0x140
0x00000000000a02d2 : retf -0x148b
0x000000000009fa62 : retf -0x14b
0x00000000000e78b3 : retf -0x1601
0x00000000000c80cb : retf -0x17f0
0x00000000000c7e18 : retf -0x17f8
0x0000000000003fac : retf -0x180b
0x00000000000b4556 : retf -0x197d
0x00000000000a42d2 : retf -0x19f
0x00000000000bda25 : retf -0x1a15
0x00000000000a5072 : retf -0x1b8
0x000000000000434c : retf -0x1bff
0x0000000000095980 : retf -0x1d01
0x000000000000345b : retf -0x1dfc
0x00000000000053c9 : retf -0x20ef
0x00000000000abee2 : retf -0x21e
0x0000000000092838 : retf -0x2289
0x0000000000005a64 : retf -0x23b2
0x00000000000b0552 : retf -0x24a
0x00000000000050d2 : retf -0x25e2
0x00000000000b2762 : retf -0x278
0x0000000000004b34 : retf -0x2850
0x00000000000041a5 : retf -0x2a2
0x00000000000003ca : retf -0x2bdf
0x0000000000007571 : retf -0x2c13
0x00000000000bba42 : retf -0x2d5
0x0000000000094b55 : retf -0x2dcf
0x000000000008de62 : retf -0x2f
0x0000000000006a0b : retf -0x2fdc
0x0000000000092883 : retf -0x3015
0x00000000000ffa42 : retf -0x317d
0x00000000000f5045 : retf -0x3315
0x0000000000003767 : retf -0x3597
0x0000000000005ce5 : retf -0x3653
0x0000000000006b3b : retf -0x36c3
0x0000000000126bcd : retf -0x38b8
0x000000000009243d : retf -0x38bf
0x00000000000c2462 : retf -0x391
0x0000000000003769 : retf -0x39c8
0x00000000000a85de : retf -0x3a15
0x00000000000957b0 : retf -0x3d7d
0x00000000000069cc : retf -0x3daf
0x00000000000c8892 : retf -0x3dd
0x00000000000b466e : retf -0x3e9a
0x000000000009cff7 : retf -0x3eb8
0x0000000000104c99 : retf -0x3f7c
0x00000000001266aa : retf -0x3fcf
0x00000000000cac22 : retf -0x3fe
0x00000000000062e3 : retf -0x4018
0x0000000000003db1 : retf -0x40c3
0x000000000008d442 : retf -0x44
0x00000000000cee82 : retf -0x445
0x0000000000007879 : retf -0x447
0x00000000000ce2d2 : retf -0x452
0x00000000000ce952 : retf -0x457
0x0000000000003b8f : retf -0x4bf4
0x00000000000a8f64 : retf -0x4f15
0x0000000000003e7a : retf -0x4fea
0x00000000000dba22 : retf -0x50c
0x00000000000070c3 : retf -0x5115
0x0000000000008172 : retf -0x51b4
0x00000000000086a7 : retf -0x547d
0x0000000000007f30 : retf -0x5681
0x000000000015f063 : retf -0x57f2
0x00000000000076d8 : retf -0x5a13
0x0000000000099429 : retf -0x5b15
0x00000000000df4a2 : retf -0x5c
0x00000000000bbe42 : retf -0x5d
0x00000000000007d4 : retf -0x5ef3
0x0000000000090f62 : retf -0x60
0x00000000000efad2 : retf -0x656
0x00000000000f0822 : retf -0x65a
0x0000000000092f56 : retf -0x67b8
0x00000000000f32e2 : retf -0x688
0x0000000000005e47 : retf -0x68c8
0x00000000000a01ff : retf -0x6b15
0x00000000000d5e16 : retf -0x6b18
0x0000000000005c0c : retf -0x6c09
0x0000000000007429 : retf -0x6c24
0x00000000000f79b2 : retf -0x6ce
0x00000000000f8822 : retf -0x6d8
0x00000000000f8a22 : retf -0x6dc
0x00000000000d683b : retf -0x7018
0x00000000000fb932 : retf -0x705
0x0000000000003f18 : retf -0x728b
0x000000000008e77a : retf -0x72b4
0x00000000000bb3da : retf -0x72b8
0x00000000000ff452 : retf -0x739
0x000000000000814f : retf -0x73c9
0x00000000000fe9b2 : retf -0x73e
0x000000000000376f : retf -0x742a
0x00000000000dd094 : retf -0x74b4
0x0000000000094e69 : retf -0x74b7
0x0000000000094044 : retf -0x74b8
0x00000000000a877c : retf -0x76b3
0x00000000000a8356 : retf -0x76b4
0x00000000000bb2c2 : retf -0x76b7
0x000000000009976a : retf -0x76b8
0x0000000000091913 : retf -0x76bc
0x00000000000ab9c8 : retf -0x76bf
0x00000000000da8c8 : retf -0x78f1
0x00000000000a876c : retf -0x7ab8
0x0000000000090859 : retf -0x7af1
0x00000000001061b2 : retf -0x7b1
0x00000000001052f2 : retf -0x7b8
0x0000000000104c62 : retf -0x7bc0
0x0000000000091770 : retf -0x7bf1
0x000000000008fc11 : retf -0x7cb8
0x00000000000b399e : retf -0x7cbf
0x000000000000776a : retf -0x7e2
0x0000000000005086 : retf -0x7e3c
0x0000000000004184 : retf -0x7e6e
0x0000000000000d19 : retf -0x7ec0
0x0000000000109862 : retf -0x7f0
0x00000000000e7d24 : retf -0x7f17
0x000000000010ff62 : retf -0x850
0x000000000010f282 : retf -0x860
0x000000000011af22 : retf -0x901
0x000000000011a642 : retf -0x917
0x0000000000121862 : retf -0x969
0x0000000000092559 : retf -0x9bf
0x000000000011cf74 : retf -0xa
0x0000000000132b82 : retf -0xa73
0x000000000012d532 : retf -0xb
0x00000000000e1dec : retf -0xc
0x000000000013ad3b : retf -0xd8b
0x0000000000007310 : retf -0xe8a
0x000000000012702c : retf -0xe8b
0x00000000000b6314 : retf -0xf01
0x000000000000686f : retf -0xff6
0x000000000008e540 : retf -1
0x000000000009c9bd : retf -2
0x00000000000ac512 : retf -3
0x00000000000aa072 : retf -4
0x00000000000cc5a6 : retf -5
0x00000000000c223b : retf -6
0x00000000000ee1df : retf -7
0x00000000000fc653 : retf -8
0x000000000010ccb5 : retf -9
0x0000000000000ee0 : retf 0
0x00000000000756b4 : retf 0x10
0x0000000000000d04 : retf 0x101
0x00000000000056a6 : retf 0x10e2
0x0000000000016561 : retf 0x12
0x0000000000074cac : retf 0x13
0x000000000012a8d6 : retf 0x139
0x0000000000025030 : retf 0x13c
0x0000000000025dd0 : retf 0x13c2
0x0000000000024a68 : retf 0x13ef
0x000000000000b658 : retf 0x1413
0x000000000001efa0 : retf 0x143
0x00000000000d5319 : retf 0x148
0x0000000000123b03 : retf 0x14d
0x0000000000127a26 : retf 0x14e8
0x0000000000015be0 : retf 0x153
0x000000000000411d : retf 0x1631
0x0000000000019c78 : retf 0x165
0x0000000000003743 : retf 0x16fd
0x0000000000006b9e : retf 0x1771
0x00000000000003f7 : retf 0x19
0x0000000000016d80 : retf 0x198
0x0000000000127a14 : retf 0x1a77
0x0000000000096c7e : retf 0x1b
0x0000000000004ee5 : retf 0x1b41
0x000000000013b774 : retf 0x1b77
0x00000000000d4241 : retf 0x1c76
0x00000000000b30d8 : retf 0x1d74
0x00000000000147a0 : retf 0x1e3
0x0000000000005d3a : retf 0x1e75
0x000000000008f060 : retf 0x1f0f
0x0000000000004ed3 : retf 0x1f43
0x0000000000177f15 : retf 0x20
0x000000000001f858 : retf 0x215
0x0000000000150661 : retf 0x22f
0x0000000000026ae8 : retf 0x23
0x00000000000d5e06 : retf 0x2473
0x000000000012e9aa : retf 0x253c
0x00000000000b3460 : retf 0x2574
0x0000000000016348 : retf 0x261
0x0000000000120f92 : retf 0x2617
0x000000000011cf7a : retf 0x2659
0x000000000011ba32 : retf 0x2668
0x000000000001b790 : retf 0x27
0x0000000000014d58 : retf 0x273
0x000000000010d84a : retf 0x2753
0x0000000000126c53 : retf 0x2773
0x0000000000103182 : retf 0x27f7
0x00000000000f5e55 : retf 0x28
0x00000000000e5e15 : retf 0x29
0x000000000009d01f : retf 0x2948
0x0000000000005931 : retf 0x297c
0x00000000000e699a : retf 0x29be
0x00000000000d183f : retf 0x2a
0x0000000000007a2d : retf 0x2a62
0x00000000000d4fda : retf 0x2ad5
0x00000000000d00b2 : retf 0x2b26
0x00000000000abae7 : retf 0x2b8
0x00000000000c2882 : retf 0x2c22
0x00000000000bb7c2 : retf 0x2c6a
0x0000000000018598 : retf 0x2c7
0x00000000000a56a4 : retf 0x2d
0x00000000000a0451 : retf 0x2e26
0x000000000009eed2 : retf 0x2e35
0x00000000000a08be : retf 0x2e49
0x0000000000106ff5 : retf 0x2e66
0x00000000001092b2 : retf 0x2ebe
0x00000000000904c2 : retf 0x2f1c
0x00000000000042bb : retf 0x2f8
0x000000000008bf32 : retf 0x2f89
0x000000000008bd32 : retf 0x2f8a
0x000000000008bb32 : retf 0x2f8b
0x000000000008b932 : retf 0x2f8c
0x000000000008b732 : retf 0x2f8d
0x000000000008b532 : retf 0x2f8e
0x000000000008b332 : retf 0x2f8f
0x000000000008b132 : retf 0x2f90
0x000000000008af32 : retf 0x2f91
0x000000000008ad32 : retf 0x2f92
0x000000000008ab32 : retf 0x2f93
0x000000000008a932 : retf 0x2f94
0x000000000008a732 : retf 0x2f95
0x000000000008a532 : retf 0x2f96
0x000000000008a332 : retf 0x2f97
0x000000000008a132 : retf 0x2f98
0x0000000000089f32 : retf 0x2f99
0x0000000000089d32 : retf 0x2f9a
0x0000000000089b32 : retf 0x2f9b
0x0000000000089932 : retf 0x2f9c
0x0000000000089732 : retf 0x2f9d
0x0000000000089532 : retf 0x2f9e
0x0000000000089332 : retf 0x2f9f
0x0000000000089132 : retf 0x2fa0
0x0000000000088f32 : retf 0x2fa1
0x0000000000176671 : retf 0x301
0x0000000000127010 : retf 0x3073
0x00000000000068a7 : retf 0x3122
0x00000000000dd3b1 : retf 0x3145
0x00000000000bb6e6 : retf 0x3148
0x00000000000059f7 : retf 0x31bf
0x00000000000d4442 : retf 0x31ff
0x000000000013ad1d : retf 0x3373
0x0000000000007f5f : retf 0x340b
0x00000000000074f1 : retf 0x345c
0x0000000000028888 : retf 0x36a
0x0000000000014449 : retf 0x37
0x0000000000013c00 : retf 0x371
0x000000000001b618 : retf 0x384b
0x000000000001e3b8 : retf 0x38f
0x000000000008cdc2 : retf 0x3948
0x000000000001ea00 : retf 0x3b1
0x00000000000ba942 : retf 0x3b48
0x00000000000b3893 : retf 0x3b9a
0x0000000000006033 : retf 0x3c78
0x0000000000005215 : retf 0x3ca1
0x0000000000007416 : retf 0x3cdb
0x0000000000022780 : retf 0x3cf
0x00000000000c65eb : retf 0x3fe8
0x00000000000c7a3c : retf 0x4173
0x00000000000942f8 : retf 0x41c7
0x00000000000080f7 : retf 0x42b0
0x00000000000925f1 : retf 0x42c7
0x0000000000094052 : retf 0x4389
0x0000000000006cc4 : retf 0x44b7
0x0000000000094854 : retf 0x45c7
0x00000000000061bc : retf 0x4628
0x00000000001138a4 : retf 0x4804
0x00000000000c8018 : retf 0x4808
0x00000000000c82b8 : retf 0x4810
0x0000000000000342 : retf 0x4814
0x0000000000092854 : retf 0x488d
0x0000000000095e92 : retf 0x48e9
0x000000000009d32e : retf 0x4c08
0x0000000000005efb : retf 0x4c15
0x00000000000b9291 : retf 0x4cff
0x0000000000091829 : retf 0x4e01
0x000000000017354e : retf 0x501
0x0000000000172e2b : retf 0x502
0x00000000001743dc : retf 0x503
0x0000000000172e04 : retf 0x504
0x0000000000172fb1 : retf 0x507
0x0000000000173175 : retf 0x50f
0x0000000000175c72 : retf 0x523
0x00000000000d84a1 : retf 0x5477
0x00000000000077bc : retf 0x54e7
0x00000000000dd2bc : retf 0x552b
0x00000000000b4986 : retf 0x5541
0x000000000008eeb6 : retf 0x5774
0x00000000000083a3 : retf 0x577a
0x00000000000fdb83 : retf 0x5789
0x0000000000007241 : retf 0x57ea
0x0000000000008131 : retf 0x582c
0x0000000000025690 : retf 0x5b
0x00000000000e6f58 : retf 0x5c41
0x0000000000175410 : retf 0x5e01
0x000000000000585b : retf 0x5e3
0x00000000000dded6 : retf 0x603
0x0000000000007c8c : retf 0x610a
0x00000000000dbf30 : retf 0x62c
0x0000000000006444 : retf 0x6613
0x00000000000039ac : retf 0x697f
0x00000000000d506d : retf 0x6a
0x00000000000d75cf : retf 0x6ad
0x0000000000008557 : retf 0x6b25
0x00000000000035fb : retf 0x6f96
0x0000000000007450 : retf 0x6fab
0x000000000000329f : retf 0x70ec
0x0000000000005019 : retf 0x71a7
0x00000000000a88ab : retf 0x7276
0x00000000000c39ba : retf 0x7374
0x00000000000056a9 : retf 0x7388
0x00000000000140e0 : retf 0x77
0x00000000000c7630 : retf 0x775
0x0000000000027a90 : retf 0x7b
0x0000000000004243 : retf 0x7c17
0x000000000013b84c : retf 0x82
0x00000000000b1cce : retf 0x8cb
0x000000000007f2b4 : retf 0xa
0x0000000000167c50 : retf 0xa02
0x0000000000152117 : retf 0xa04
0x00000000000275e0 : retf 0xa3
0x0000000000027970 : retf 0xa8
0x00000000000943a2 : retf 0xa85
0x0000000000002348 : retf 0xb
0x00000000000079e3 : retf 0xbad
0x0000000000002498 : retf 0xc
0x0000000000017e60 : retf 0xce
0x0000000000002614 : retf 0xd
0x0000000000007570 : retf 0xd3ed
0x00000000000853d4 : retf 0xe
0x000000000016259f : retf 0xe0a
0x0000000000014881 : retf 0xf
0x00000000000d36fb : retf 0xf40
0x00000000000a8b10 : retf 0xf48
0x00000000000e7da5 : retf 0xf4c
0x000000000000765b : retf 0xf5b
0x00000000000bab6a : retf 0xf66
0x00000000000013dc : retf 1
0x0000000000001578 : retf 2
0x000000000001a831 : retf 3
0x000000000008364c : retf 4
0x00000000000793a4 : retf 6
0x0000000000074b5c : retf 7
0x0000000000011bf9 : retf 8
0x0000000000001ff0 : retf 9
0x00000000000929ee : rol bl, 0x75 ; sti ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000000bbfad : rol bl, 0x90 ; call rdx
0x000000000009245d : rol bl, 1 ; nop ; xor r10d, r10d ; mov rax, r10 ; ret
0x0000000000172add : rol byte ptr [r10], cl ; add byte ptr [rax], al ; xchg dword ptr [rdx + rbp], eax ; retf
0x000000000012714b : rol byte ptr [rax + 0x38], 1 ; xor al, 1 ; je 0x127148 ; ret
0x00000000000d31eb : rol byte ptr [rax + 0x38], 1 ; xor al, 1 ; je 0xd31e8 ; ret
0x00000000000e3ed1 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000094bc4 : rol byte ptr [rax - 0x6bf08cc8], cl ; ret 0x8b48
0x0000000000145305 : rol byte ptr [rax], 1 ; add ah, dl ; jno 0x145307 ; jmp rsp
0x00000000000a3d6b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001588a5 : rol byte ptr [rax], 1 ; add byte ptr [rsi + 0x39], dh ; jmp qword ptr [rdi]
0x00000000000a3bd9 : rol byte ptr [rbp - 0x78], 6 ; mov byte ptr [rdx], 0 ; ret
0x00000000000b3b5a : rol byte ptr [rbx - 0x3f7c0120], 4 ; ret
0x00000000000b3b7a : rol byte ptr [rbx - 0x3f7c0120], 6 ; ret
0x00000000000b3afa : rol byte ptr [rbx - 0x3f7c0220], 6 ; ret
0x00000000000b3b1a : rol byte ptr [rbx - 0x3f7c0220], 7 ; ret
0x00000000000a8265 : rol byte ptr [rbx - 0x6bf0fec1], cl ; ret 0xd001
0x0000000000173252 : rol byte ptr [rbx], 0 ; retf
0x000000000010d155 : rol byte ptr [rcx + 0xf], cl ; mov esi, 0xdf8948f4 ; call rax
0x00000000000cf639 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0xe9c1
0x00000000000bacb4 : rol byte ptr [rcx + rcx*4], 0x15 ; and al, 0xcc ; sub al, 0 ; ret
0x00000000000a3bf6 : rol byte ptr [rcx - 0x78], 1 ; mov byte ptr [rdx], 0 ; ret
0x0000000000143370 : rol byte ptr [rcx - 0x7f6f0004], 0xfc ; call qword ptr [rax]
0x0000000000148025 : rol byte ptr [rcx], 0 ; push rsp ; adc al, 0xfa ; jmp rsp
0x00000000001243dc : rol byte ptr [rcx], 0x48 ; mov dword ptr [rdi + 0x10], eax ; ret
0x000000000009ae4c : rol byte ptr [rcx], 0xeb ; ret
0x00000000000962c4 : rol byte ptr [rcx], 0xeb ; retf
0x0000000000168a65 : rol byte ptr [rcx], 1 ; add byte ptr [rax], bl ; xor bh, dl ; call rax
0x00000000000a3b9f : rol byte ptr [rdi - 0x78], 6 ; mov byte ptr [rdx], 0 ; ret
0x0000000000172ade : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; xchg dword ptr [rdx + rbp], eax ; retf
0x000000000013a5f4 : rol byte ptr [rsi], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000016a0c0 : rol dl, 0xfa ; call qword ptr [rbx]
0x00000000000a1d65 : rol dword ptr [rbx], -0x7d ; clc ; add dword ptr [rax + rdx + 0x5b], esi ; ret
0x00000000000cbb23 : rol dword ptr [rcx - 0x77], cl ; retf
0x0000000000148045 : rol dword ptr [rcx], 0 ; in al, 0x27 ; cli ; call rsp
0x00000000000d3741 : rol dword ptr [rdi + 0x10], -0x7b ; sar byte ptr [rsi + 0x15], 0xf3 ; ret
0x00000000000bf891 : rol dword ptr [rdi + 8], -0x7d ; clc ; add dword ptr [rbp + rdx - 0xd], esi ; ret
0x0000000000113449 : rol dword ptr [rdi - 0x76b70009], cl ; ret
0x00000000000a0d28 : rol dword ptr [rdx], -0x7d ; clc ; add dh, byte ptr [rbp + rdx - 0xd] ; ret
0x000000000014b395 : rol dword ptr [rdx], cl ; add byte ptr [rbx + rcx*2 - 1], ah ; jmp rsp
0x000000000009d88c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000a808a : rol edi, 1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d4392 : ror byte ptr [r9 + r15 - 0x37], 0x77 ; or ecx, dword ptr [rax + 1] ; retf -0x76b8
0x000000000013a94b : ror byte ptr [rax + 0x29], 1 ; ror dword ptr [rax - 0x77], 1 ; retf -0x72b8
0x0000000000126c5b : ror byte ptr [rax + 0x29], 1 ; ror dword ptr [rax - 0x77], 1 ; retf 0xf40
0x00000000000bbf98 : ror byte ptr [rax + 0x39], 0x7b ; or byte ptr [rcx + rcx + 0x5b], dh ; ret
0x00000000000a826d : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rbp - 0x13] ; ret
0x00000000000bbdb1 : ror byte ptr [rax + 0x3b], 0x7e ; or byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000000e0cab : ror byte ptr [rax + 0x4c40244c], cl ; mov edi, ebp ; call rax
0x0000000000095979 : ror byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x00000000000de800 : ror byte ptr [rax + 0x63], cl ; add al, 0x96 ; add rax, rsi ; jmp rax
0x0000000000126d75 : ror byte ptr [rax + 0xf], 1 ; ret 0x14eb
0x00000000000d28ac : ror byte ptr [rax + 0xf], 1 ; ret 0x66c3
0x00000000000a965a : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000013aa65 : ror byte ptr [rax + 0xf], 1 ; ret 0x8d48
0x0000000000124f99 : ror byte ptr [rax + 0xf], 1 ; ret 0x90c3
0x00000000000d31d8 : ror byte ptr [rax + 0xf], 1 ; ret 0xdeb
0x00000000000d5f28 : ror byte ptr [rax + 0xf], 1 ; ret 0xeeb
0x00000000000d2e18 : ror byte ptr [rax + 0xf], 1 ; ret 0xfeb
0x00000000000b7f39 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000103df6 : ror byte ptr [rax - 0x75], 0x40 ; jmp rax
0x00000000001263f4 : ror byte ptr [rax - 0x76b7ffff], 1 ; ret 0x8348
0x00000000000b3939 : ror byte ptr [rax - 0x77], 0x17 ; ret
0x00000000000c913d : ror byte ptr [rax - 0x77], 0x57 ; adc bl, dh ; ret
0x00000000000d5ce3 : ror byte ptr [rax - 0x77], 1 ; enter 0xf48, 0x43 ; ret 0x8348
0x000000000013a812 : ror byte ptr [rax - 0x77], 1 ; enter 0xf48, 0x43 ; ret 0xfc3
0x00000000000cbae9 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000000bb707 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000bb677 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x00000000000a7e88 : ror byte ptr [rax - 0x77], 1 ; retf -0x74b8
0x00000000000b28e0 : ror byte ptr [rax - 0x77], 3 ; je 0xb28ef ; pop rbx ; ret
0x0000000000119cd4 : ror byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000000be3dc : ror byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000000cd621 : ror byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x8a0b6
0x00000000000b432c : ror byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000000bf6ba : ror byte ptr [rax - 0x7b], 0xc0 ; je 0xbf6ce ; mov rdi, r12 ; call rax
0x00000000000bf84a : ror byte ptr [rax - 0x7b], 0xc0 ; je 0xbf85e ; mov rdi, r12 ; call rax
0x0000000000094e7b : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013aa8c : ror byte ptr [rax - 0x7d], 0xf8 ; push qword ptr [rbp - 0x1b] ; ret
0x00000000000d5f3c : ror byte ptr [rax - 0x7d], 1 ; clc ; push qword ptr [rbp - 0x13] ; ret
0x00000000000d2e2d : ror byte ptr [rax - 0x7d], 1 ; clc ; push qword ptr [rbp - 0x14] ; ret
0x00000000000a2087 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000092832 : ror byte ptr [rbp + 0x39d0884c], cl ; retf -0x2289
0x000000000009403c : ror byte ptr [rbx + 0x433b3843], cl ; cmp al, 0x7d ; retf -0x74b8
0x00000000000ab9cd : ror byte ptr [rbx + 0x63], 1 ; or al, 0x8a ; add rcx, r10 ; jmp rcx
0x00000000000de9b9 : ror byte ptr [rcx + rcx*4 - 0x11], cl ; call r8
0x00000000000de987 : ror byte ptr [rcx + rcx*4 - 0x11], cl ; call r9
0x00000000000e0bbe : ror byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000000df935 : ror byte ptr [rcx + rcx*4 - 0x11], cl ; call rcx
0x00000000000cde9a : ror byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x8a0b6
0x0000000000104d86 : ror byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000092462 : ror byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x000000000009137d : ror byte ptr [rcx + rcx*4 - 0x3d], cl ; jne 0x913a6 ; call rbx
0x00000000000d4393 : ror byte ptr [rcx + rdi - 0x37], 0x77 ; or ecx, dword ptr [rax + 1] ; retf -0x76b8
0x000000000009d885 : ror byte ptr [rcx + rdi - 0x3f], 0x48 ; cmovbe eax, ecx ; ret
0x00000000001204dd : ror byte ptr [rcx - 0x3f], 0xf8 ; add cl, byte ptr [rcx + 0x29] ; retf -0x76b4
0x00000000000aa4d5 : ror byte ptr [rcx - 0x75], 0xc ; ret 0x8949
0x00000000000925bd : ror byte ptr [rcx - 0x77], cl ; push rdx ; mov rax, rdx ; ret
0x00000000000ab216 : ror byte ptr [rcx], 0xd0 ; ret
0x00000000000bc47f : ror byte ptr [rdi], 0x48 ; ret 0x8348
0x00000000000997c8 : ror byte ptr [rdi], 0x84 ; push rcx ; retf -1
0x00000000000dc55e : ror byte ptr [rdi], 0x84 ; retf
0x00000000000e046f : ror byte ptr [rdi], 0x84 ; retf -2
0x00000000000dd58f : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000009c1f3 : ror byte ptr [rdi], 0x85 ; ret 1
0x00000000000df87e : ror byte ptr [rdi], 0x85 ; retf
0x000000000008e7f6 : ror byte ptr [rdi], 0x85 ; sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000958d0 : ror byte ptr [rdi], 0x94 ; ret 0x453c
0x0000000000091f74 : ror byte ptr [rdi], 0x95 ; ret 0x43e9
0x00000000000a163b : ror byte ptr [rdi], 0x95 ; ret 0xd108
0x0000000000092998 : ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; ret
0x00000000000a4f8e : ror byte ptr [rdi], 1 ; xchg dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a4dcd : ror byte ptr [rdi], 1 ; xchg dword ptr [rdx + rax], edx ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a17ab : ror byte ptr [rdi], 1 ; xchg ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a4b94 : ror byte ptr [rdi], 1 ; xchg edi, ecx ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000010b71e : ror byte ptr [rdi], cl ; mov esi, 0xdf8948f0 ; call rcx
0x00000000000dfa4f : ror byte ptr [rdi], cl ; mov esi, 0xef894cf0 ; call rcx
0x00000000000b4b29 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3941
0x00000000000182a0 : ror byte ptr [rdx + 0x11], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000000e8f9c : ror byte ptr [rip - 0x74b70006], 1 ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000090378 : ror dword ptr [rax + 0x31], 1 ; ret 0x8948
0x0000000000090407 : ror dword ptr [rax + 0x39], -9 ; jne 0x903ff ; ret
0x00000000000d3618 : ror dword ptr [rax + 0x39], cl ; ret
0x0000000000138917 : ror dword ptr [rax + 0x39], cl ; ret 0x1b76
0x00000000000d5e0e : ror dword ptr [rax - 0x73], 1 ; jl 0xd5da0 ; add byte ptr [rax - 0x77], cl ; retf -0x6b18
0x000000000012cd0a : ror dword ptr [rax - 0x77], 1 ; ret 0x3de8
0x000000000012cdb4 : ror dword ptr [rax - 0x77], 1 ; ret 0x93e8
0x00000000000d5118 : ror dword ptr [rax - 0x77], 1 ; ret 0xc031
0x000000000012cd64 : ror dword ptr [rax - 0x77], 1 ; ret 0xe3e8
0x000000000013a94e : ror dword ptr [rax - 0x77], 1 ; retf -0x72b8
0x0000000000126c5e : ror dword ptr [rax - 0x77], 1 ; retf 0xf40
0x00000000000a98e0 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000009c044 : ror dword ptr [rax - 0x7b], -0x37 ; jne 0x9c037 ; ret
0x00000000000d64a3 : ror dword ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000106f3d : ror dword ptr [rax - 0x7d], 1 ; in al, dx ; or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000bb0ed : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c10
0x00000000000b2e52 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x2cfc
0x00000000000d57cb : ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a5ae2 : ror dword ptr [rbp + 0x29], cl ; retf
0x000000000008e752 : ror dword ptr [rcx + rcx*4 + 8], 1 ; jmp 0x8e728
0x00000000000e3665 : ror dword ptr [rcx + rcx*4 - 6], -0x18 ; ret 0xfa62
0x00000000000f0e4c : ror dword ptr [rcx - 0x1e3eb70e], 1 ; and byte ptr [rax + 9], cl ; retf -0x74b8
0x0000000000109414 : ror dword ptr [rcx - 0x76b75bb3], 1 ; retf
0x00000000000abab1 : ror dword ptr [rdi], -0x49 ; ret 0xc809
0x0000000000112b4a : ror dword ptr [rdi], -0x6a ; ret 0x30e9
0x0000000000110bb8 : ror dword ptr [rdi], 1 ; lahf ; ret 0x5408
0x0000000000106d51 : ror dword ptr [rdi], 1 ; xchg byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000139a1f : ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0x2141
0x0000000000120f8b : ror dword ptr [rdx - 0x74b7000a], 5 ; retf 0x2617
0x00000000000061f4 : ror dword ptr [rsi - 0x440d00d5], 1 ; retf
0x00000000001657f5 : sahf ; add dword ptr [rax], eax ; cwde ; mov ecx, dr1 ; jmp qword ptr [rdi]
0x00000000000a37ae : sahf ; cmp byte ptr [rsi], ch ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001443e1 : sahf ; hlt ; jmp rsp
0x0000000000006133 : sahf ; mov al, 0xad ; pop rbx ; ret
0x0000000000070121 : sahf ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0x37
0x000000000013c83c : sahf ; pop rbx ; cmc ; inc dword ptr [rax + 0x62] ; cmc ; jmp qword ptr [rax]
0x00000000000a3c81 : sahf ; ret 0xd021
0x000000000010cc2e : sahf ; ret 0xfff7
0x0000000000144941 : sal ah, cl ; jmp rsp
0x00000000000ee1ff : sal bh, 0xd8 ; ret
0x000000000008c485 : sal bl, 0xab ; ret
0x00000000000a3c84 : sal bl, 1 ; ret
0x0000000000138b15 : sal byte ptr [rax + rbx + 0x48], 1 ; test esi, esi ; jne 0x138b29 ; ret
0x000000000008d025 : sal byte ptr [rax + rbx + 0x48], 1 ; test esi, esi ; jne 0x8d039 ; ret
0x00000000000f946d : sal byte ptr [rax + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000d723d : sal byte ptr [rax + rdx*8 + 0x4c], 0x89 ; ret 0x894c
0x00000000000b88bc : sal byte ptr [rbp + 0x1d], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000bba90 : sal byte ptr [rbp + 0x1f], 0x5b ; ret
0x000000000009c84c : sal byte ptr [rbp + 0x29], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000d42c0 : sal byte ptr [rbp + 0x4c], 0x89 ; ret 0x8948
0x00000000000a38f3 : sal byte ptr [rbp + 0x4d], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000008e735 : sal byte ptr [rbp + 0x57], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b850a : sal byte ptr [rbp + 0xa], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000d28cb : sal byte ptr [rbp + 2], cl ; ret
0x00000000000b0d9b : sal byte ptr [rbp + 3], 0xc6 ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000b5e2d : sal byte ptr [rbp + 5], 0x48 ; add esp, 8 ; ret
0x000000000008caf8 : sal byte ptr [rbp + 5], cl ; ret
0x00000000000d596f : sal byte ptr [rbp + 6], cl ; ret
0x000000000009bfa7 : sal byte ptr [rbp + 8], 0x48 ; add esp, 8 ; ret
0x00000000000d6f0c : sal byte ptr [rbp + 9], cl ; ret
0x00000000000c5d89 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000be225 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebx ; call rdx
0x00000000000c160e : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000000be3d5 : sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esi ; call rdx
0x00000000000c375b : sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x000000000008fa85 : sal byte ptr [rbp + rax - 0x10], 0x83 ; add byte ptr [rcx], 0xf3 ; ret
0x00000000000a5b98 : sal byte ptr [rbp + rax - 0x77], cl ; shr byte ptr [rbx], 1 ; and r11b, r14b ; ret
0x00000000000b470d : sal byte ptr [rbp + rax*8 + 0x41], 0x83 ; or byte ptr [rcx], al ; ret
0x00000000000b46f0 : sal byte ptr [rbp + rcx + 0x41], 0x83 ; and dh, bh ; ret
0x000000000008d5bb : sal byte ptr [rbp - 0x16], 1 ; ret
0x00000000000a244c : sal byte ptr [rbp - 0x17], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b41ec : sal byte ptr [rbp - 0x27], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b4201 : sal byte ptr [rbp - 0x56], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b7801 : sal byte ptr [rbp - 0xc], 0xf3 ; ret
0x00000000000a7889 : sal byte ptr [rbp - 0xc], cl ; ret
0x000000000008db9b : sal byte ptr [rbp - 0xe], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c904e : sal byte ptr [rbx + 0x17], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000012408b : sal byte ptr [rbx + 0x32], 1 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000d40a2 : sal byte ptr [rbx + rbx + 0x4c], 0x89 ; ret 0x894c
0x00000000000d53bc : sal byte ptr [rbx + rcx*4 + 0x4c], 0x89 ; ret 0x59e8
0x0000000000005770 : sal byte ptr [rbx - 0x41], 0x5f ; mov ch, 0x75 ; jrcxz 0x57ef ; ret
0x000000000000415a : sal byte ptr [rcx + 8], cl ; retf
0x0000000000132b7b : sal byte ptr [rcx + rbx + 0x48], 0x89 ; fucompi st(0) ; retf -0xa73
0x00000000001324f1 : sal byte ptr [rcx + rcx + 0x48], 0x83 ; ret
0x00000000000baa82 : sal byte ptr [rcx], 0xd2 ; add rsp, 0x18 ; ret
0x0000000000106b9c : sal byte ptr [rcx], 1 ; clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000b2950 : sal byte ptr [rdi + rbx + 0x48], 0x89 ; ret 0x8948
0x00000000000d71f6 : sal byte ptr [rdi + rdx + 0x4c], 0x89 ; ret 0x894c
0x000000000008f992 : sal byte ptr [rdx + rbx - 0x18], 0x86 ; ret 0xffff
0x0000000000106aac : sal byte ptr [rdx], 0xf8 ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000b5a87 : sal byte ptr [rsi + rax*2 + 0x49], 0x83 ; ret 0x4904
0x00000000000d7450 : sal byte ptr [rsi + rbx*8 + 0x4c], 0x89 ; ret 0x894c
0x000000000009e57a : sal byte ptr [rsi + rdi*8 + 0x58b48ff], cl ; ret
0x00000000000b43dc : sal byte ptr [rsi - 0x53], 1 ; mov eax, 2 ; pop rbx ; ret
0x00000000000d475c : sal byte ptr [rsi - 5], 0xff ; jmp 0xd472a
0x00000000000d748a : sal byte ptr [rsp + 0x4c], 0x89 ; ret 0xebe8
0x000000000008f161 : sal byte ptr [rsp + rax + 0x3c], 0x10 ; jne 0x8f181 ; xor eax, eax ; ret
0x000000000014d4b0 : sal byte ptr [rsp + rsi*8], 1 ; call qword ptr [rdi]
0x0000000000152140 : sal ch, 0xf5 ; jmp qword ptr [rsi]
0x0000000000144d71 : sal ch, cl ; call rsp
0x000000000012cabd : sal ch, cl ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001269e5 : sal dword ptr [rax + rdi + 0x4c], 0x39 ; ret 0x8b4c
0x000000000000613a : sal dword ptr [rbp + 0x78], 1 ; call rdi
0x00000000000052bb : sal dword ptr [rbp - 0x50ae4846], cl ; push rcx ; ret 0xb220
0x00000000000061ca : sal dword ptr [rbp - 0x7e], 1 ; call rdi
0x0000000000070049 : sal dword ptr [rdi], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x37
0x0000000000127b6b : sal dword ptr [rdi], 1 ; idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000109a22 : sal dword ptr [rsi + rdx + 0x48], -0x7d ; ret 0x4801
0x0000000000004ca6 : sal dword ptr [rsi], 1 ; retf
0x000000000012c97d : sal ebp, cl ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000a1a96 : sal ebx, cl ; ret
0x000000000010dc74 : sal edi, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000158e95 : salc ; add byte ptr [rax], al ; cmp byte ptr [rdi + rsi*8], ah ; jmp qword ptr [rbx]
0x00000000000fe9ac : salc ; add rdi, qword ptr [rax - 0x18] ; jmp 0x8ac87
0x0000000000097d69 : salc ; add rdx, 1 ; jmp 0x97d41
0x00000000000fe5a4 : salc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012c74d : salc ; cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000023c38 : salc ; cmp al, byte ptr [rcx] ; add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], ch ; retf
0x0000000000007694 : salc ; cmpsb byte ptr ds:[rsi], byte ptr [rdi] ; int1 ; jle 0x7691 ; wait ; call rdi
0x0000000000125806 : salc ; jae 0x125819 ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x0000000000125836 : salc ; jae 0x125849 ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x00000000000d2a89 : salc ; jae 0xd2a96 ; add rax, rsi ; ret
0x00000000000d5b89 : salc ; jae 0xd5b98 ; lea rax, qword ptr [rax + rsi*4] ; ret
0x0000000000124f73 : salc ; jb 0x124f7c ; ret
0x0000000000138a83 : salc ; jb 0x138a8c ; ret
0x000000000008cb96 : salc ; jb 0x8cb9f ; ret
0x000000000008d086 : salc ; jb 0x8d08f ; ret
0x00000000000056a1 : salc ; jno 0x5677 ; lodsd eax, dword ptr [rsi] ; retf 0x10e2
0x00000000000fba2f : salc ; mov rax, rbx ; pop rbx ; ret
0x00000000000bf6e0 : salc ; mov rsi, r15 ; call 0x8c1d4
0x0000000000023aa8 : salc ; ret 0x13
0x0000000000106416 : salc ; ret 0xffff
0x000000000008cb73 : salc ; seta al ; ret
0x000000000000730d : salc ; xlatb ; in eax, dx ; retf -0xe8a
0x0000000000094e79 : salc ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001583a0 : sar ah, 0xf6 ; call rdi
0x0000000000146cc1 : sar al, 0xff ; mov esp, 0x400015d ; ret 0xfff8
0x00000000000febf0 : sar al, 0xff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000161619 : sar al, 1 ; call qword ptr [rdx]
0x00000000000fe964 : sar al, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a1a91 : sar bh, 0xff ; push qword ptr [rbp - 0x2d] ; ret
0x00000000000bc59a : sar bh, cl ; shr bl, cl ; xchg eax, ecx ; nop ; mov rdi, rbx ; call rax
0x00000000000b33f4 : sar byte ptr [rax - 0x76b7fff8], 1 ; ret 0x8348
0x0000000000004432 : sar byte ptr [rbp + 0x7a], cl ; in eax, 3 ; or dword ptr [rdx], esp ; ret 0x5a81
0x0000000000143334 : sar byte ptr [rbx - 4], 0xff ; push rax ; jl 0x14333e ; jmp rax
0x000000000009292f : sar byte ptr [rcx - 0x29], cl ; ret
0x0000000000092836 : sar byte ptr [rcx], 1 ; retf -0x2289
0x000000000013ae5b : sar byte ptr [rcx], 1 ; xor al, 0x81 ; je 0x13ae57 ; ret
0x00000000000d630b : sar byte ptr [rcx], 1 ; xor al, 0x81 ; je 0xd6307 ; ret
0x00000000000bf685 : sar byte ptr [rdi - 0x24], cl ; mov rsi, r15 ; call 0x8b968
0x00000000000d4994 : sar byte ptr [rdi - 0x49], 0xeb ; ret
0x00000000000d474c : sar byte ptr [rdi - 0x4f], 0xeb ; ret 0x1f0f
0x00000000000ceec5 : sar byte ptr [rdi - 0x6e], cl ; lea rsi, qword ptr [rbp - 0x21] ; call 0x8b969
0x000000000010014a : sar byte ptr [rdx - 0x76b70008], cl ; ret
0x000000000014da40 : sar byte ptr [rdx], 1 ; hlt ; call qword ptr [rdi]
0x00000000000d3745 : sar byte ptr [rsi + 0x15], 0xf3 ; ret
0x0000000000167979 : sar cl, 1 ; call rcx
0x0000000000142539 : sar cl, 1 ; ljmp ptr [rbx - 0x5400063d] ; ret
0x000000000014252d : sar cl, cl ; ljmp ptr [rbx - 0x5400063d] ; ret
0x0000000000003ea3 : sar dh, 0x5a ; ret 0x7373
0x000000000009fa73 : sar dh, 0xff ; mov rdi, r15 ; call 0x8bcb8
0x0000000000143ba5 : sar dh, 1 ; jmp qword ptr [rax]
0x0000000000143ba1 : sar dh, cl ; call qword ptr [rax + 0x20fffed0]
0x0000000000143b79 : sar dh, cl ; jmp rax
0x0000000000143b71 : sar dh, cl ; jmp rcx
0x0000000000148491 : sar dl, cl ; call rsp
0x000000000000e0f8 : sar dword ptr [rbx], 1 ; add byte ptr [rcx], ah ; add byte ptr [rdi], dl ; add byte ptr [rax], dl ; retf
0x00000000000bdffb : sar dword ptr [rdi], 0 ; add rsp, 0x18 ; ret
0x00000000000f98c8 : sar dword ptr [rsi + 0x20], 0x4c ; mov edi, ebp ; call rax
0x0000000000093bfe : sar dword ptr [rsi + 0x30], -0x17 ; ret 0xfffb
0x00000000000082af : sar eax, -0x2e ; ret 0xed0c
0x000000000011ea89 : sar eax, 2 ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000c90e4 : sar eax, 2 ; ret
0x00000000000fe824 : sar eax, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000149059 : sar ebx, 1 ; jmp rsp
0x00000000000edce2 : sar ecx, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d6f07 : sar edx, 2 ; test rdx, rdx ; jne 0xd6f21 ; ret
0x0000000000143bad : sar esi, 1 ; jmp rcx
0x0000000000143bfd : sar esi, cl ; jmp rcx
0x00000000000edce1 : sar r9, cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000011ea88 : sar rax, 2 ; mov qword ptr [rdi + 0x30], rax ; ret
0x00000000000c90e3 : sar rax, 2 ; ret
0x00000000000045a6 : sbb ah, byte ptr [rbx - 0x4c] ; imul dword ptr [rsi + rbp - 0x7c] ; retf
0x000000000014d525 : sbb al, 0 ; add al, bh ; xor al, 0xf4 ; call qword ptr [rbx]
0x000000000014d495 : sbb al, 0 ; add al, cl ; xor al, 0xf4 ; call qword ptr [rbx]
0x000000000014d4ad : sbb al, 0 ; add al, dl ; xor al, 0xf4 ; call qword ptr [rdi]
0x0000000000156e40 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; mov ch, 0 ; add al, bl ; ret
0x0000000000167b40 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret 1
0x0000000000167bb8 : sbb al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000167bf8 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000001700a0 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; add al, byte ptr [rax] ; pop rax ; retf -5
0x000000000001b616 : sbb al, 0 ; retf 0x384b
0x000000000014d06c : sbb al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; hlt ; call qword ptr [rdi]
0x000000000016e26c : sbb al, 0x2a ; add al, byte ptr [rax] ; xchg eax, esp ; sti ; call qword ptr [rdi]
0x000000000014e56c : sbb al, 0x2d ; add byte ptr [rax], al ; mov al, 0xd9 ; hlt ; jmp qword ptr [rsi]
0x00000000000b5f10 : sbb al, 0x35 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000014f46c : sbb al, 0x3c ; add byte ptr [rax], al ; add byte ptr [rax], ah ; cmc ; jmp qword ptr [rax]
0x00000000000bde8d : sbb al, 0x48 ; add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d4b43 : sbb al, 0x48 ; lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000006d5c : sbb al, 0x4d ; or ecx, dword ptr [rbx - 0x3ae7c7e3] ; ret 0xd60b
0x000000000017076c : sbb al, 0x4f ; add al, byte ptr [rax] ; adc dl, bh ; sti ; call qword ptr [rcx]
0x00000000000bad9f : sbb al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000152a6c : sbb al, 0x72 ; add byte ptr [rax], al ; add byte ptr [rsi + rsi*8], cl ; call qword ptr [rbx]
0x00000000000f9275 : sbb al, 0x75 ; add dh, bl ; ret
0x00000000000068a5 : sbb al, 0x7c ; retf 0x3122
0x00000000000ebc02 : sbb al, 0x83 ; ret
0x00000000000f923c : sbb al, 0x89 ; ja 0xf9267 ; jne 0xf9254 ; ret
0x00000000000f9c9c : sbb al, 0x89 ; ja 0xf9cc7 ; jne 0xf9cb4 ; ret
0x00000000001448bc : sbb al, 0x95 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -0xc
0x000000000016606c : sbb al, 0xa8 ; add dword ptr [rax], eax ; mov al, 0xad ; stc ; call qword ptr [rbx]
0x0000000000005010 : sbb al, 0xb4 ; imul dword ptr [rdx + 0x48e6cd20] ; insb byte ptr [rdi], dx ; retf 0x71a7
0x0000000000006ffb : sbb al, 0xba ; cmp dword ptr [rdi], -0x77 ; ret
0x000000000014c291 : sbb al, 0xf4 ; call qword ptr [rbx]
0x000000000014c2a9 : sbb al, 0xf4 ; call qword ptr [rdi]
0x000000000014c1e9 : sbb al, 0xf4 ; call qword ptr [rdx]
0x000000000015b46c : sbb al, 0xfc ; add byte ptr [rax], al ; mov esi, edi ; call qword ptr [rcx]
0x000000000014a751 : sbb al, 0xfe ; jmp rsp
0x00000000000ff13f : sbb al, 1 ; je 0xff15e ; call 0x8bc26
0x00000000000ff13e : sbb al, 1 ; je 0xff15f ; call 0x8bc27
0x00000000000fe1bf : sbb al, 1 ; jne 0xfe1e8 ; call 0x8acc6
0x00000000000fe1be : sbb al, 1 ; jne 0xfe1e9 ; call 0x8acc7
0x000000000016d5b5 : sbb al, 2 ; add byte ptr [rax - 0x7b], bl ; sti ; call qword ptr [rdx]
0x000000000014bc6c : sbb al, 4 ; add byte ptr [rax], al ; sbb sil, spl ; jmp qword ptr [rax]
0x0000000000006c01 : sbb al, bh ; jle 0x6bb8 ; ret 0x66a
0x0000000000004ede : sbb al, byte ptr [rax + 0x59c99768] ; clc ; retf 0x1b41
0x000000000000590e : sbb al, byte ptr [rax + 0xf9c5991] ; je 0x5995 ; ret
0x00000000000212a8 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a00e4 : sbb al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000000000016d305 : sbb al, byte ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; sti ; call qword ptr [rsi]
0x000000000016d31d : sbb al, byte ptr [rdx] ; add byte ptr [rax - 0x7d], dl ; sti ; call qword ptr [rax]
0x00000000000d1aef : sbb al, ch ; retf
0x0000000000174b6f : sbb bh, ch ; add al, 0 ; xchg eax, ecx ; add al, 0x10 ; add byte ptr [rax], al ; ret
0x00000000000a78b3 : sbb bl, al ; mov rax, rdx ; ret
0x000000000012437b : sbb bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000d7815 : sbb bl, bh ; dec dword ptr [rax - 0x75] ; add ebp, ebx ; ret
0x0000000000148709 : sbb bl, bh ; jmp rsp
0x0000000000003e9f : sbb bl, byte ptr [rbx] ; jl 0x3e93 ; sar dh, 0x5a ; ret 0x7373
0x0000000000006d5b : sbb bl, byte ptr [rcx*2 + 0x381d8b0b] ; sbb ch, al ; ret 0xd60b
0x00000000000cb2f0 : sbb bl, dh ; ret
0x0000000000124813 : sbb byte ptr [r11 + 0x31], sil ; mov eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001248f6 : sbb byte ptr [r11 + 6], r14b ; mov eax, dword ptr [rax] ; ret
0x00000000001241a6 : sbb byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00000000000cba22 : sbb byte ptr [r11 - 0x7bf0fe06], r8b ; retf
0x00000000000a5926 : sbb byte ptr [r14 + r8 + 0xf], r14b ; mov dh, 0 ; ret
0x0000000000093ff7 : sbb byte ptr [r15], cl ; mov dh, 0x6a ; add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x0000000000124042 : sbb byte ptr [r8 + 0x2b], r9b ; adc byte ptr [r14 + r8 - 0xd], r14b ; ret
0x00000000000c916a : sbb byte ptr [r8 - 0x77], r9b ; ret 0x8b48
0x00000000000c905a : sbb byte ptr [r8 - 0x77], r9b ; ret 0xe7eb
0x00000000000dd58b : sbb byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000b2497 : sbb byte ptr [rax + 0x29], cl ; ret
0x00000000001194f4 : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011eb83 : sbb byte ptr [rax + 0x29], cl ; ret 0xc148
0x0000000000124043 : sbb byte ptr [rax + 0x2b], cl ; adc byte ptr [r14 + r8 - 0xd], r14b ; ret
0x00000000000ef5ac : sbb byte ptr [rax + 0x39], cl ; ret 0x2e76
0x00000000000efddc : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000009583f : sbb byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000095658 : sbb byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000004ca0 : sbb byte ptr [rax + 0x7c050641], ch ; sal dword ptr [rsi], 1 ; retf
0x00000000000a7900 : sbb byte ptr [rax + 0xf], cl ; ret 0x48c3
0x0000000000092c11 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000092c10 : sbb byte ptr [rax + 1], dil ; ret
0x000000000011aa56 : sbb byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011bf36 : sbb byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000011d716 : sbb byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000119990 : sbb byte ptr [rax - 0x75], cl ; push rsi ; adc byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000e4255 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000010dbac : sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000000a796f : sbb byte ptr [rax - 0x77], cl ; js 0xa798d ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a79f3 : sbb byte ptr [rax - 0x77], cl ; js 0xa7a19 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000105da4 : sbb byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r13 ; call rax
0x00000000000baa0a : sbb byte ptr [rax - 0x77], cl ; ret 0x1b8
0x00000000000c916b : sbb byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000a7c76 : sbb byte ptr [rax - 0x77], cl ; ret 0xd6e9
0x00000000000c905b : sbb byte ptr [rax - 0x77], cl ; ret 0xe7eb
0x000000000010dae4 : sbb byte ptr [rax - 0x77], cl ; ret 0xf631
0x0000000000095b36 : sbb byte ptr [rax - 0x7af0a0c6], al ; retf
0x000000000008d027 : sbb byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 3] ; ret
0x00000000000dd58c : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000b77fe : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0xf3 ; ret
0x00000000000a7886 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x00000000000a1c02 : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000001cbb0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; out dx, eax ; ret 0
0x000000000001fa30 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; retf 1
0x00000000000201e0 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x381
0x00000000000137a8 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000d7691 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014d08d : sbb byte ptr [rax], al ; add byte ptr [rax], al ; xor ah, dh ; call qword ptr [rbx]
0x000000000014d06d : sbb byte ptr [rax], al ; add byte ptr [rax], al ; xor ah, dh ; call qword ptr [rdi]
0x000000000014d0a5 : sbb byte ptr [rax], al ; add byte ptr [rax], cl ; xor ah, dh ; call qword ptr [rdi]
0x00000000000d44fc : sbb byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008cbcd : sbb byte ptr [rax], al ; ret
0x00000000000a5944 : sbb byte ptr [rbp - 0x1d], dh ; mov eax, 0xffffffff ; ret
0x00000000000cbb65 : sbb byte ptr [rbp - 0x7b], al ; ret 0x5574
0x00000000000cf7e5 : sbb byte ptr [rbp - 0x7b], al ; ret 0x5d74
0x0000000000124814 : sbb byte ptr [rbx + 0x31], dh ; mov eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000090acf : sbb byte ptr [rbx + 0x5d5b01f0], al ; ret
0x0000000000090a86 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000000a5c7b : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008f10e : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fabf7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000091398 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001248f7 : sbb byte ptr [rbx + 6], dh ; mov eax, dword ptr [rax] ; ret
0x00000000001241a7 : sbb byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x00000000000fdb7e : sbb byte ptr [rbx - 0x35f64a1e], al ; mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000137127 : sbb byte ptr [rbx - 0x6bf00008], al ; ret
0x00000000000cba23 : sbb byte ptr [rbx - 0x7bf0fe06], al ; retf
0x00000000001718d8 : sbb byte ptr [rbx - 4], bh ; jmp qword ptr [rbx]
0x00000000000d45f4 : sbb byte ptr [rbx - 5], cl ; lcall ptr [rax - 0x17] ; ret 0xfb66
0x000000000000592a : sbb byte ptr [rbx], ch ; movlps xmm7, qword ptr [rsi] ; or ah, al ; retf 0x297c
0x00000000000dd589 : sbb byte ptr [rcx - 0x7ab7e7b1], cl ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000008e28c : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000094bc2 : sbb byte ptr [rcx], dh ; rol byte ptr [rax - 0x6bf08cc8], cl ; ret 0x8b48
0x00000000000cf09d : sbb byte ptr [rcx], dh ; shr al, 0x6b ; ret
0x0000000000093ff8 : sbb byte ptr [rdi], cl ; mov dh, 0x6a ; add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x0000000000005970 : sbb byte ptr [rdx - 0x784f851b], bl ; ret 0x454a
0x0000000000163fa8 : sbb byte ptr [rdx - 7], dl ; jmp qword ptr [rax]
0x0000000000116204 : sbb byte ptr [rdx - 9], bl ; dec dword ptr [rax - 0x77] ; ret
0x000000000014bde0 : sbb byte ptr [rdx], 0xf4 ; call qword ptr [rcx]
0x0000000000000bcd : sbb byte ptr [rdx], ah ; adc byte ptr [rdx + 0x51], bl ; adc al, cl ; ret
0x00000000000c3427 : sbb byte ptr [rdx], ch ; call 0xbfe45
0x0000000000168a68 : sbb byte ptr [rdx], dh ; cli ; call rax
0x000000000014b968 : sbb byte ptr [rdx], dl ; hlt ; jmp qword ptr [rdi]
0x00000000000a5927 : sbb byte ptr [rsi + rax + 0xf], dh ; mov dh, 0 ; ret
0x00000000000b90b7 : sbb byte ptr [rsi + rax - 0xd], dh ; ret
0x0000000000125cc4 : sbb byte ptr [rsi + rsi*8 - 1], ah ; mov rax, rbx ; pop rbx ; ret
0x00000000001557b8 : sbb byte ptr [rsi - 0xa], ah ; call qword ptr [rbx]
0x000000000015fec8 : sbb byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x0000000000006d62 : sbb ch, al ; ret 0xd60b
0x00000000000b8f00 : sbb ch, bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000147341 : sbb cl, bh ; jmp rsp
0x00000000000d6265 : sbb cl, byte ptr [rax - 0x77] ; ret
0x000000000008cb35 : sbb cl, byte ptr [rax - 0x7b] ; div byte ptr [rbp + 5] ; ret
0x00000000000d30c5 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000a85d7 : sbb cl, ch ; mov ecx, 0xebfffffe ; retf -0x3a15
0x00000000000a8037 : sbb cl, ch ; retf -2
0x00000000000067f2 : sbb cl, dh ; ret
0x0000000000147340 : sbb cl, r15b ; jmp rsp
0x000000000014bd81 : sbb dh, ah ; call qword ptr [rbx]
0x000000000014bde1 : sbb dh, ah ; call qword ptr [rcx]
0x000000000014bc89 : sbb dh, ah ; call qword ptr [rdi]
0x000000000014bf01 : sbb dh, ah ; call qword ptr [rdx]
0x000000000014bc71 : sbb dh, ah ; jmp qword ptr [rax]
0x0000000000003b0a : sbb dh, bh ; mov fs, edi ; mov dl, 0xfe ; retf
0x0000000000006c50 : sbb dh, bl ; sub al, 0xef ; and cl, bl ; outsb dx, byte ptr [rsi] ; retf
0x00000000001739cb : sbb dh, byte ptr [rdi] ; add eax, 0x56c0000 ; ret 2
0x0000000000145009 : sbb dh, dh ; jmp rsp
0x0000000000006ae0 : sbb dl, byte ptr [rsi - 8] ; retf
0x00000000000b7982 : sbb dword ptr [rax + 0x39], ecx ; ret 0x8672
0x0000000000005a47 : sbb dword ptr [rax - 0x49], esi ; test al, bh ; shl byte ptr [rbx - 0x52], 1 ; ret 0x5245
0x0000000000132b7d : sbb dword ptr [rax - 0x77], ecx ; fucompi st(0) ; retf -0xa73
0x00000000000d3146 : sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000c7be5 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000014d1c5 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x32], bh ; hlt ; call qword ptr [rdx]
0x000000000001c0e8 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x166
0x0000000000006a02 : sbb dword ptr [rbp - 0x31453be5], -0x27 ; ja 0x6a79 ; retf -0x2fdc
0x000000000011f313 : sbb dword ptr [rbp - 0x76b7000a], edi ; ret
0x000000000000375a : sbb dword ptr [rdi + 0x4c], edx ; ret 0x50f3
0x0000000000005c82 : sbb dword ptr [rdi], ebx ; ret
0x0000000000004486 : sbb dword ptr [rdx + 0x53], 0x2ad4526b ; ret 0x5a81
0x00000000000044c2 : sbb dword ptr [rdx + 0x7e], 0x32ba1946 ; ret 0x5a81
0x0000000000003dc2 : sbb dword ptr [rdx - 0x6ee5a873], esi ; ret
0x000000000000443a : sbb dword ptr [rdx - 0x72], 0x57e411ff ; retf
0x000000000000450a : sbb dword ptr [rdx - 0xe], 0x7653eb96 ; retf
0x00000000000fd8e2 : sbb eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000003756 : sbb eax, 0x1995d836 ; push rdi ; ret 0x50f3
0x000000000014d5c5 : sbb eax, 0x35580000 ; hlt ; call qword ptr [rbx]
0x000000000014d5dd : sbb eax, 0x35600000 ; hlt ; call qword ptr [rdi]
0x000000000014d635 : sbb eax, 0x35a80000 ; hlt ; jmp qword ptr [rbx]
0x000000000011026f : sbb eax, 0x38000003 ; ret
0x000000000010773d : sbb eax, 0x4634900 ; xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000000d6cdf : sbb eax, 0x48fffb43 ; mov eax, dword ptr [rbx] ; pop rbx ; ret
0x00000000000b88be : sbb eax, 0x5c415d5b ; ret
0x00000000000a5de2 : sbb eax, 0x5e058b48 ; retf
0x00000000000b8a0d : sbb eax, 0x8348fffd ; ret 0x4801
0x000000000016d60d : sbb eax, 0x86100002 ; sti ; call qword ptr [rdx]
0x00000000000ba350 : sbb eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000004038 : sbb eax, 0xb79ea101 ; ret
0x000000000014d3c5 : sbb eax, dword ptr [rax] ; add al, bh ; xor dh, ah ; call qword ptr [rbx]
0x000000000014d3ad : sbb eax, dword ptr [rax] ; add al, dh ; xor dh, ah ; call qword ptr [rcx]
0x000000000014d3dd : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esp ; call qword ptr [rdi]
0x0000000000178d6c : sbb eax, dword ptr [rbp + 5] ; in eax, dx ; add dword ptr [rcx], eax ; retf 0x501
0x000000000016d405 : sbb eax, dword ptr [rdx] ; add byte ptr [rax], ch ; test bh, bl ; jmp qword ptr [rdx]
0x000000000016d3ed : sbb eax, dword ptr [rdx] ; add byte ptr [rax], dl ; test bh, bl ; jmp qword ptr [rdx]
0x000000000009bf36 : sbb eax, eax ; add rsp, 8 ; and eax, 0xfffffffe ; ret
0x00000000000b3af9 : sbb eax, eax ; and eax, 0xfffffffd ; add eax, 6 ; ret
0x00000000000b3b19 : sbb eax, eax ; and eax, 0xfffffffd ; add eax, 7 ; ret
0x00000000000b3b59 : sbb eax, eax ; and eax, 0xfffffffe ; add eax, 4 ; ret
0x00000000000b3b79 : sbb eax, eax ; and eax, 0xfffffffe ; add eax, 6 ; ret
0x00000000000059f4 : sbb eax, ebp ; xchg eax, edi ; retf 0x31bf
0x0000000000107ab7 : sbb eax, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000006a04 : sbb eax, esp ; mov edx, 0x6577d9ce ; retf -0x2fdc
0x00000000000b8d8d : sbb ebp, edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000008395 : sbb ebx, dword ptr [rbp + 0x63332015] ; retf
0x00000000000b9261 : sbb ecx, dword ptr [rax - 0x73] ; je 0xb9292 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000133984 : sbb ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000000d61e4 : sbb ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000004bf6 : sbb ecx, dword ptr [rdi + 0x461a9395] ; ret 0xf928
0x00000000000b2113 : sbb ecx, ecx ; or byte ptr [rax], al ; ret
0x0000000000147391 : sbb ecx, edi ; call rsp
0x00000000000fa2dc : sbb ecx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000005d38 : sbb ecx, esi ; retf 0x1e75
0x0000000000127b21 : sbb edi, dword ptr [rax] ; idiv bh ; add rsp, 0x18 ; ret
0x0000000000005185 : sbb edi, dword ptr [rbp - 0x5d] ; ret
0x00000000000b8bfa : sbb edi, ebp ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000147439 : sbb edi, ecx ; jmp rsp
0x00000000000ee5d3 : sbb edi, edx ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000aa0fd : sbb edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000173fb0 : sbb esi, dword ptr [rsi + 5] ; retf 3
0x00000000000a3864 : sbb esi, ebx ; ret
0x0000000000145041 : sbb esi, esi ; call rsp
0x000000000014c141 : sbb esi, esp ; call qword ptr [rdx]
0x000000000008d783 : sbb esi, esp ; or al, byte ptr [rax] ; ret
0x00000000000a1011 : sbb esp, dword ptr [rax - 0x76b70002] ; ret
0x0000000000023b00 : sbb esp, dword ptr [rsi] ; add byte ptr [rax], al ; and dword ptr [rax], eax ; verw ax ; ret 0x13
0x000000000014bc11 : sbb esp, esi ; call qword ptr [rdi]
0x000000000014bbf9 : sbb esp, esi ; jmp qword ptr [rax]
0x00000000000cb2ef : sbb r11b, r14b ; ret
0x00000000000a78b2 : sbb r11b, r8b ; mov rax, rdx ; ret
0x00000000000b8eff : sbb r13b, r15b ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d1aee : sbb r8b, bpl ; retf
0x0000000000004edd : sbb r8b, byte ptr [r8 + 0x59c99768] ; clc ; retf 0x1b41
0x0000000000006c4f : sbb sil, bl ; sub al, 0xef ; and cl, bl ; outsb dx, byte ptr [rsi] ; retf
0x000000000014bc88 : sbb sil, spl ; call qword ptr [rdi]
0x000000000014bc70 : sbb sil, spl ; jmp qword ptr [rax]
0x000000000017674c : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; ret
0x0000000000100d71 : scasb al, byte ptr [rdi] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000146c31 : scasb al, byte ptr [rdi] ; clc ; jmp rsp
0x00000000000fce6e : scasb al, byte ptr [rdi] ; in eax, dx ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133f7e : scasb al, byte ptr [rdi] ; jo 0x133f7c ; dec dword ptr [rax - 0x77] ; ret
0x000000000000493f : scasb al, byte ptr [rdi] ; pop rsi ; je 0x4930 ; ret
0x0000000000007fee : scasb al, byte ptr [rdi] ; ret
0x0000000000005a4e : scasb al, byte ptr [rdi] ; ret 0x5245
0x00000000000becfe : scasb al, byte ptr [rdi] ; retf
0x00000000000ae57e : scasb al, byte ptr [rdi] ; retf -3
0x00000000000ee1de : scasb al, byte ptr [rdi] ; retf -7
0x0000000000016c48 : scasb al, byte ptr [rdi] ; retf 0
0x0000000000166119 : scasb al, byte ptr [rdi] ; stc ; jmp qword ptr [rdi]
0x000000000016f8e1 : scasb al, byte ptr [rdi] ; sti ; call qword ptr [rdx]
0x000000000000831e : scasb al, byte ptr [rdi] ; wait ; ret 0x7cdd
0x0000000000173700 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; retf 0x501
0x00000000000b3a37 : scasd eax, dword ptr [rdi] ; add rdx, 2 ; mov qword ptr [rdi], rdx ; ret
0x0000000000099f1d : scasd eax, dword ptr [rdi] ; cmp edi, 0xff ; jmp 0x961d6
0x000000000009d17d : scasd eax, dword ptr [rdi] ; fdivp st(6) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000077b7 : scasd eax, dword ptr [rdi] ; jge 0x77ef ; ret
0x0000000000005c7f : scasd eax, dword ptr [rdi] ; jle 0x5cf6 ; sbb dword ptr [rdi], ebx ; ret
0x00000000000fd46d : scasd eax, dword ptr [rdi] ; out -8, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000052c0 : scasd eax, dword ptr [rdi] ; push rcx ; ret 0xb220
0x0000000000005c66 : scasd eax, dword ptr [rdi] ; ret
0x0000000000025d88 : scasd eax, dword ptr [rdi] ; ret 0x13
0x000000000009d36f : scasd eax, dword ptr [rdi] ; ret 0x3949
0x00000000000903bb : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000009bc1d : scasd eax, dword ptr [rdi] ; ret 0xd285
0x0000000000007abd : scasd eax, dword ptr [rdi] ; retf
0x00000000000aa4bc : scasd eax, dword ptr [rdi] ; retf -0x76b8
0x00000000000ee8fd : scasd eax, dword ptr [rdi] ; retf -7
0x0000000000090377 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 0x31], 1 ; ret 0x8948
0x0000000000090406 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 0x39], -9 ; jne 0x90400 ; ret
0x0000000000166161 : scasd eax, dword ptr [rdi] ; stc ; jmp qword ptr [rdi]
0x00000000000b0cc3 : scasd eax, dword ptr [rdi] ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000008cb74 : seta al ; ret
0x00000000000ae378 : sete al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090dd4 : sete al ; add rsp, 8 ; ret
0x000000000008e1f5 : sete al ; lea eax, dword ptr [rax + rax*4 + 1] ; ret
0x000000000008ca55 : sete al ; ret
0x00000000000b8c3b : sete bl ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d7c4 : sete cl ; mov eax, ecx ; pop rbx ; ret
0x0000000000092994 : sete dl ; or eax, edx ; movzx eax, al ; ret
0x00000000000d3595 : setg al ; ret
0x00000000000a3c80 : setle dl ; and eax, edx ; ret
0x000000000008ecee : setne al ; add rsp, 8 ; ret
0x00000000000de303 : setne al ; pop rbx ; ret
0x00000000000b21d4 : setne al ; ret
0x000000000008e7f9 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000039bf : shl byte ptr [rax + 0x4a], 1 ; ret 0x9ddd
0x00000000001554f0 : shl byte ptr [rax - 0xa], 1 ; jmp rsp
0x0000000000005a4c : shl byte ptr [rbx - 0x52], 1 ; ret 0x5245
0x00000000000914dc : shl byte ptr [rdi - 0x76b70001], 1 ; ret
0x00000000001559f0 : shl byte ptr [rdi - 0xa], 1 ; jmp rsp
0x00000000000051e7 : shl byte ptr [rdx + 0x2f], 1 ; ret 0x5749
0x0000000000026068 : shl byte ptr [rip + 0x210000], 0xf ; add cl, al ; ret 0x13
0x00000000001038a5 : shl byte ptr [rsi - 0x77], 0x47 ; ret
0x0000000000003f16 : shl byte ptr [rsi], cl ; retf -0x728b
0x0000000000006866 : shl dh, cl ; ficom word ptr [rbx] ; test eax, 0x15b7a352 ; retf -0xff6
0x00000000000c0a59 : shl dword ptr [rbp - 0x76b70004], cl ; ret
0x0000000000120719 : shl dword ptr [rdi - 0x76b3000a], cl ; imul eax ; retf
0x00000000000f99eb : shl dword ptr [rdx], -7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000124ab4 : shl esi, 2 ; add qword ptr [rdi + 0x10], rsi ; ret
0x0000000000124b04 : shl esi, 2 ; add qword ptr [rdi + 0x28], rsi ; ret
0x0000000000124ab3 : shl rsi, 2 ; add qword ptr [rdi + 0x10], rsi ; ret
0x0000000000124b03 : shl rsi, 2 ; add qword ptr [rdi + 0x28], rsi ; ret
0x00000000000bab9d : shr al, 0x2d ; idiv ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bd1f2 : shr al, 0x38 ; ret 0xfffc
0x00000000000cf09f : shr al, 0x6b ; ret
0x000000000012d7d6 : shr al, 0xe4 ; mov edx, 0x8948fff5 ; ret
0x00000000000ae3fb : shr al, 0xef ; retf
0x000000000012deb6 : shr al, 4 ; mov ah, 0xf5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000108157 : shr al, cl ; ret
0x000000000008e53b : shr bl, 1 ; mov ah, 0xe8 ; in eax, dx ; retf -1
0x00000000000c2bb8 : shr bl, 1 ; retf
0x00000000000bc59c : shr bl, cl ; xchg eax, ecx ; nop ; mov rdi, rbx ; call rax
0x00000000000a5b9c : shr byte ptr [rbx], 1 ; and r11b, r14b ; ret
0x0000000000007ad1 : shr byte ptr [rcx - 0x5a], 1 ; xlatb ; jb 0x7adb ; xchg eax, esp ; ret 0xc9ac
0x0000000000007ad0 : shr byte ptr [rcx - 0x5a], 1 ; xlatb ; jb 0x7adc ; xchg eax, esp ; ret 0xc9ac
0x000000000011524c : shr byte ptr [rcx - 9], 1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d66a4 : shr byte ptr [rdx], 0 ; ret
0x0000000000153f50 : shr byte ptr [rdx], 0xf6 ; call qword ptr [rdx]
0x0000000000105dcc : shr cl, 1 ; retf -4
0x0000000000007448 : shr dword ptr [rbx + 0xb], 0x53 ; xchg eax, esi ; stc ; jp 0x73f4 ; retf 0x6fab
0x000000000000831b : shr dword ptr [rcx], cl ; int1 ; scasb al, byte ptr [rdi] ; wait ; ret 0x7cdd
0x00000000000cb78a : shr eax, -0x60 ; clc ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d3583 : shr eax, 0x1f ; ret
0x00000000000f92a3 : shr eax, 1 ; and eax, 1 ; ret
0x0000000000092395 : shr eax, cl ; and eax, 1 ; ret
0x00000000000bb70c : shr edx, 0x12 ; xor rax, rdx ; pop rbx ; ret
0x00000000000903d9 : shr edx, 0x2f ; xor rax, rdx ; ret
0x000000000009c41c : shr esi, 3 ; lea rax, qword ptr [rax + rsi*8 - 8] ; ret
0x000000000008cf5b : shr esp, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ae3fa : shr r8b, 0xef ; retf
0x0000000000092394 : shr rax, cl ; and eax, 1 ; ret
0x00000000000bb70b : shr rdx, 0x12 ; xor rax, rdx ; pop rbx ; ret
0x00000000000903d8 : shr rdx, 0x2f ; xor rax, rdx ; ret
0x000000000009c41b : shr rsi, 3 ; lea rax, qword ptr [rax + rsi*8 - 8] ; ret
0x000000000000c7f6 : sldt ebp ; ret
0x000000000002606e : sldt ecx ; ret 0x13
0x0000000000023d46 : sldt esp ; ret 0x13
0x000000000001ea40 : sldt word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; retf 2
0x0000000000002935 : sldt word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000025d0e : sldt word ptr [rax] ; ret
0x0000000000026aee : sldt word ptr [rax] ; ret 0x13
0x00000000000239b6 : sldt word ptr [rbx] ; ret
0x00000000000141a6 : sldt word ptr [rdi] ; ret
0x00000000000b4ef0 : stc ; add al, 0x74 ; sub al, 0x89 ; ret 0x2566
0x00000000000b3f3a : stc ; add esi, dword ptr [rdi + 2] ; ret
0x00000000000a9923 : stc ; and bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fdb3e : stc ; and dword ptr [rcx + 0x18], esi ; ret
0x0000000000014398 : stc ; and eax, 0x210000 ; ltr dx ; ret 0x13
0x00000000001654ba : stc ; call qword ptr [rax]
0x0000000000163f7a : stc ; call qword ptr [rbx]
0x00000000001652e2 : stc ; call qword ptr [rcx]
0x00000000001652ba : stc ; call qword ptr [rdx]
0x0000000000167aa2 : stc ; call rax
0x000000000016797a : stc ; call rcx
0x0000000000162e2a : stc ; call rdi
0x00000000001624f2 : stc ; call rdx
0x000000000014251a : stc ; call rsp
0x00000000000fc2b1 : stc ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fbb9d : stc ; clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000f0be1 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f8d7a : stc ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x00000000000ec8db : stc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; retf
0x00000000000ee8f7 : stc ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x8b3b7
0x00000000000ec87e : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ee254 : stc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000147142 : stc ; dec esp ; je 0x147151 ; add byte ptr [rcx + rax - 7], al ; jmp rsp
0x000000000014733a : stc ; dec esp ; jle 0x147349 ; add byte ptr [rax + rbx - 7], al ; jmp rsp
0x0000000000147202 : stc ; dec esp ; js 0x147211 ; add ah, al ; or bh, cl ; jmp rsp
0x0000000000147de2 : stc ; dec esp ; mov ch, 1 ; add ah, dl ; stc ; stc ; jmp rsp
0x0000000000147c32 : stc ; dec esp ; test eax, 0x9a740001 ; stc ; jmp rsp
0x0000000000147892 : stc ; dec esp ; xchg eax, edi ; add dword ptr [rax], eax ; stc ; jmp rsp
0x00000000000fe323 : stc ; fdivr st(0) ; dec dword ptr [rax - 0x77] ; ret
0x000000000013db60 : stc ; fisttp word ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000013a959 : stc ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000001581d9 : stc ; idiv bh ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rax*4], al ; retf
0x000000000014258e : stc ; inc dword ptr [rax - 0x16] ; stc ; jmp rsp
0x0000000000163e8a : stc ; inc dword ptr [rdi + 0x4000000] ; ret
0x000000000016330a : stc ; inc dword ptr [rdi + 0x4000000] ; retf
0x00000000001643c2 : stc ; inc dword ptr [rsi + 0x4000000] ; ret
0x0000000000147432 : stc ; inc esp ; add dword ptr [rcx], 0xf91bc400 ; jmp rsp
0x0000000000147cc2 : stc ; inc esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; and al, 0xa0 ; stc ; jmp rsp
0x0000000000095fc3 : stc ; je 0x95ffa ; xor eax, eax ; pop rbx ; ret
0x00000000000a3c79 : stc ; jge 0xa3cfc ; or byte ptr [rax + 0x38], al ; xor cl, byte ptr [rdi] ; sahf ; ret 0xd021
0x0000000000163faa : stc ; jmp qword ptr [rax]
0x00000000001424ca : stc ; jmp qword ptr [rbp + rax*8 - 0x3c540007]
0x000000000016758a : stc ; jmp qword ptr [rbx]
0x0000000000165602 : stc ; jmp qword ptr [rdi]
0x0000000000166cc2 : stc ; jmp qword ptr [rdx]
0x0000000000164e22 : stc ; jmp qword ptr [rsi]
0x0000000000162faa : stc ; jmp rdi
0x000000000014247e : stc ; jmp rsp
0x000000000000744d : stc ; jp 0x73ef ; retf 0x6fab
0x00000000001479a2 : stc ; lcall ptr [rbx + rbx*4 + 0x50e40001] ; stc ; call rsp
0x0000000000142562 : stc ; ljmp ptr [rbx + 0x4cfff9c3] ; retf
0x0000000000147282 : stc ; ljmp ptr [rbx + rdi*2 + 0x12140001] ; stc ; call rsp
0x00000000001424aa : stc ; ljmp ptr [rbx - 0x5400063d] ; ret
0x00000000001475fa : stc ; ljmp ptr [rdx + rcx*4 + 0x2ca40001] ; stc ; call rsp
0x0000000000165932 : stc ; ljmp ptr [rsi + 0x4000000] ; retf
0x0000000000147662 : stc ; ljmp ptr [rsp + rcx*4 + 0x2fe40001] ; stc ; call rsp
0x00000000001472ba : stc ; ljmp ptr [rsp + rdi*2 + 0x15140001] ; stc ; jmp rsp
0x00000000000bf63f : stc ; mov rdi, r13 ; call 0x8b8c6
0x00000000000dba76 : stc ; mov rdi, r13 ; lea rdx, qword ptr [rsi + rbx] ; call r8
0x00000000000fdb1c : stc ; or dword ptr [rcx + 0x18], esi ; ret
0x000000000009d813 : stc ; or eax, 0x8348ffff ; ret 0x4801
0x00000000000052e3 : stc ; pop rcx ; push 0x85 ; mul dword ptr [rsi] ; ret 0xb232
0x00000000000bb7f3 : stc ; pop rsp ; or byte ptr [rax], al ; ret
0x0000000000147a8a : stc ; push qword ptr [rax + 0x5e540001] ; stc ; jmp rsp
0x000000000014258a : stc ; push qword ptr [rax - 0x15] ; stc ; inc dword ptr [rax - 0x16] ; stc ; jmp rsp
0x000000000014792a : stc ; push qword ptr [rcx + rbx*4 + 0x4de40001] ; stc ; call rsp
0x00000000001475ca : stc ; push qword ptr [rcx + rcx*4 + 0x29740001] ; stc ; jmp rsp
0x0000000000147e72 : stc ; push qword ptr [rdi + rsi*4 - 0x3fbffff] ; stc ; call rsp
0x000000000014796a : stc ; push qword ptr [rdx + rbx*4 + 0x4f040001] ; stc ; call rsp
0x00000000000050d0 : stc ; push rbp ; retf -0x25e2
0x000000000009e3f3 : stc ; retf -2
0x0000000000008dd0 : stc ; retf 0
0x00000000000f606b : stc ; retf 0x28
0x00000000000fe823 : stc ; sar eax, cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000147de9 : stc ; stc ; jmp rsp
0x000000000014a281 : stc ; std ; jmp rsp
0x00000000000a3733 : stc ; xor dword ptr [rsi], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b3afd : std ; add eax, 6 ; ret
0x00000000000b3b1d : std ; add eax, 7 ; ret
0x00000000000a5b5d : std ; add esi, esi ; or eax, esi ; mov byte ptr [rdi + 0x50], al ; ret
0x0000000000149ae2 : std ; call rsp
0x0000000000149a89 : std ; cld ; jmp rsp
0x00000000000b2639 : std ; dec dword ptr [rax + 0x29] ; ret
0x00000000000ba1b1 : std ; dec dword ptr [rax - 0x75] ; jl 0xba1e4 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000b22bf : std ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ac0e2 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000aab6d : std ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000000b294c : std ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rbx + 0x48], 0x89 ; ret 0x8948
0x00000000000b23d5 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b2688 : std ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000b2b36 : std ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ab62f : std ; dec dword ptr [rcx - 0x77] ; ret 0x8d48
0x0000000000149f12 : std ; dec dword ptr [rsp + rbp*2 + 0x5f040002] ; std ; call rsp
0x0000000000149c72 : std ; dec esp ; pop rdi ; add al, byte ptr [rax] ; test byte ptr [rdx], ah ; std ; jmp rsp
0x0000000000004885 : std ; hlt ; or dword ptr [rbx + rcx - 0x54], edx ; ret 0x6da5
0x00000000000bba8d : std ; inc dword ptr [rbp + 0x5b1f75c0] ; ret
0x0000000000149b3a : std ; inc dword ptr [rcx + rbx*2 + 0xdb40002] ; std ; call rsp
0x0000000000109fae : std ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000149ada : std ; inc dword ptr [rdi + rdx*2 + 0x5b40002] ; std ; call rsp
0x000000000014a27a : std ; inc esp ; add dword ptr [rdx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; std ; jmp rsp
0x0000000000149c7a : std ; jmp rsp
0x0000000000149ca2 : std ; lcall ptr [rax + 0x27040002] ; std ; call rsp
0x000000000014a0b2 : std ; lcall ptr [rax + rdi*2 - 0x4d7bfffe] ; std ; call rsp
0x0000000000149f32 : std ; lcall ptr [rbp + rbp*2 + 0x65940002] ; std ; jmp rsp
0x0000000000149c32 : std ; lcall ptr [rsi + rbx*2 + 0x20540002] ; std ; call rsp
0x0000000000007ab9 : std ; lea ebp, dword ptr [rdx] ; push rax ; scasd eax, dword ptr [rdi] ; retf
0x0000000000149fea : std ; ljmp ptr [rbx + rsi*2 - 0x70cbfffe] ; std ; call rsp
0x0000000000011eb1 : std ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000f2db9 : std ; push qword ptr [rdx + rcx - 0x77] ; sub cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000000075c1 : std ; push rsi ; push rsp ; jmp qword ptr [rax]
0x00000000000069b8 : std ; retf
0x00000000001494a1 : std ; sti ; jmp rsp
0x0000000000007ad6 : std ; xchg eax, esp ; ret 0xc9ac
0x0000000000090f2b : std ; xor ebx, ebx ; nop ; mov rdi, rbp ; call r12
0x00000000001488d5 : sti ; add dword ptr [rax], eax ; mov ah, 0x45 ; sti ; call rsp
0x000000000008ebe3 : sti ; call 0x8aed3
0x000000000016d322 : sti ; call qword ptr [rax]
0x000000000016e642 : sti ; call qword ptr [rbx]
0x000000000016d792 : sti ; call qword ptr [rcx]
0x000000000016e272 : sti ; call qword ptr [rdi]
0x000000000016c64a : sti ; call qword ptr [rdx]
0x000000000016d30a : sti ; call qword ptr [rsi]
0x0000000000123b63 : sti ; call rax
0x000000000016faaa : sti ; call rcx
0x00000000001486ca : sti ; call rsp
0x00000000000fb9c1 : sti ; clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000000520e : sti ; cld ; outsb dx, byte ptr [rsi] ; loope 0x5260 ; cmp bl, ah ; retf 0x3ca1
0x00000000000d9231 : sti ; dec dword ptr [rax + 1] ; ret
0x00000000000d7816 : sti ; dec dword ptr [rax - 0x75] ; add ebp, ebx ; ret
0x00000000000d78ee : sti ; dec dword ptr [rax - 0x75] ; add r11b, r13b ; ret
0x00000000000d4f96 : sti ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000d8fda : sti ; dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; retf
0x00000000000cb78e : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d2d0c : sti ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000148aba : sti ; dec esp ; add eax, dword ptr [rdx] ; add byte ptr [rsp + rbx*2], dh ; sti ; jmp rsp
0x0000000000149052 : sti ; dec esp ; and byte ptr [rdx], al ; add ah, al ; sar ebx, 1 ; jmp rsp
0x000000000014898a : sti ; dec esp ; inc byte ptr [rcx] ; add byte ptr [rcx + rdx*2], al ; sti ; jmp rsp
0x00000000001489da : sti ; dec esp ; inc dword ptr [rcx] ; add ah, dh ; push rcx ; sti ; jmp rsp
0x0000000000149372 : sti ; dec esp ; sub eax, 0xf0a40002 ; sti ; jmp rsp
0x0000000000158319 : sti ; idiv bh ; jg 0x158328 ; add byte ptr [rax], al ; add al, 0xa7 ; retf 1
0x0000000000134b29 : sti ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x000000000016be0a : sti ; inc dword ptr [rdx] ; add eax, dword ptr [rax] ; add byte ptr [rax + rsi], al ; retf 0
0x000000000016cfea : sti ; jmp qword ptr [rax]
0x0000000000148fb2 : sti ; jmp qword ptr [rbp + rbx - 0x3cabfffe]
0x000000000016b6c2 : sti ; jmp qword ptr [rbx]
0x000000000016c6da : sti ; jmp qword ptr [rdx]
0x000000000016cee2 : sti ; jmp qword ptr [rsi]
0x000000000016d002 : sti ; jmp rax
0x000000000016b8ba : sti ; jmp rdx
0x000000000014870a : sti ; jmp rsp
0x0000000000006ff8 : sti ; jne 0x6f94 ; sbb al, 0xba ; cmp dword ptr [rdi], -0x77 ; ret
0x00000000000d45f6 : sti ; lcall ptr [rax - 0x17] ; ret 0xfb66
0x0000000000148b42 : sti ; lcall ptr [rbp + rax + 0x5ef40002] ; sti ; call rsp
0x000000000014944a : sti ; lcall ptr [rcx + rsi - 0x47bfffe] ; sti ; call rsp
0x0000000000148d42 : sti ; ljmp ptr [rax + rdx - 0x79dbfffe] ; sti ; call rsp
0x000000000016c60a : sti ; ljmp ptr [rbp] ; add byte ptr [rax], al ; add al, 0x59 ; ret
0x0000000000149222 : sti ; ljmp ptr [rdi - 0x1e2bfffe] ; sti ; call rsp
0x000000000016bdb2 : sti ; ljmp ptr [rdx + rax + 0x6f040000] ; retf 0
0x0000000000006e31 : sti ; mov ebp, 0x62a36bed ; ret
0x00000000000929f1 : sti ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000000fba26 : sti ; mov rdi, qword ptr [rax - 0x18] ; add rdi, rbx ; call rsi
0x000000000008fac6 : sti ; mov rdi, qword ptr [rdi] ; test rax, rax ; je 0x8fadd ; call rax
0x00000000001491aa : sti ; push qword ptr [rbp - 0x20cbfffe] ; sti ; call rsp
0x00000000001486c2 : sti ; push qword ptr [rbx + rbp*8 + 0xe040001] ; sti ; call rsp
0x00000000000e791b : sti ; push qword ptr [rcx + rdx*2 + 0x39] ; retf
0x000000000016b592 : sti ; push qword ptr [rip + 0x4000004] ; ret
0x0000000000148852 : sti ; push qword ptr [rsi + rsi*8 + 0x35a40001] ; sti ; call rsp
0x00000000001491ea : sti ; push qword ptr [rsi - 0x1fcbfffe] ; sti ; call rsp
0x0000000000148932 : sti ; push qword ptr [rsp + rdi*8 + 0x4b740001] ; sti ; call rsp
0x0000000000148912 : sti ; push qword ptr [rsp + rdi*8 + 1] ; add byte ptr [rcx + rcx*2], dl ; sti ; jmp rsp
0x000000000008df91 : sti ; ret 0xffff
0x00000000000007d3 : sti ; retf -0x5ef3
0x000000000016bcd9 : sti ; retf 0
0x00000000000ac0e1 : sti ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000149451 : sti ; sti ; call rsp
0x00000000000999ab : stosb byte ptr [rdi], al ; add rax, rdx ; jmp rax
0x0000000000005013 : stosb byte ptr [rdi], al ; and ch, cl ; out 0x48, al ; insb byte ptr [rdi], dx ; retf 0x71a7
0x000000000009c8a2 : stosb byte ptr [rdi], al ; fdivp st(6) ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000011eaf0 : stosb byte ptr [rdi], al ; idiv bh ; nop dword ptr [rax + rax] ; ret
0x0000000000004688 : stosb byte ptr [rdi], al ; jp 0x4711 ; push qword ptr [rsi - 0x5f] ; add al, 0xf8 ; ret 0x4c89
0x00000000000b4203 : stosb byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000048f8 : stosb byte ptr [rdi], al ; ret
0x0000000000005d18 : stosb byte ptr [rdi], al ; ret 0x1a05
0x0000000000099f22 : stosb byte ptr [rdi], al ; ret 0xffff
0x00000000000ee582 : stosb byte ptr [rdi], al ; retf -7
0x00000000000d7ccf : stosb byte ptr [rdi], al ; sub al, byte ptr [rax] ; jne 0xd7cf9 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000c745f : stosd dword ptr [rdi], eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101114 : stosd dword ptr [rdi], eax ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000000790a : stosd dword ptr [rdi], eax ; insb byte ptr [rdi], dx ; cmp eax, 0xc0b15e23 ; ret
0x0000000000007832 : stosd dword ptr [rdi], eax ; insb byte ptr [rdi], dx ; xchg eax, esi ; ret 0x46a4
0x00000000000f93db : stosd dword ptr [rdi], eax ; loopne 0xf93e7 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ea6d : stosd dword ptr [rdi], eax ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000008e9d3 : stosd dword ptr [rdi], eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000c7531 : stosd dword ptr [rdi], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106e4e : stosd dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x000000000008c487 : stosd dword ptr [rdi], eax ; ret
0x0000000000006c06 : stosd dword ptr [rdi], eax ; ret 0x66a
0x000000000010f5c1 : stosd dword ptr [rdi], eax ; ret 0xfff7
0x00000000000d7c21 : stosd dword ptr [rdi], eax ; sub al, byte ptr [rax] ; jne 0xd7c39 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ea6c : stosq qword ptr [rdi], rax ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000008e9d2 : stosq qword ptr [rdi], rax ; mov rax, rdx ; pop rbx ; ret
0x00000000000c7530 : stosq qword ptr [rdi], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000142de : str eax ; ret 0x13
0x0000000000023a5e : str ebp ; ret 0x13
0x0000000000025dce : str edx ; ret 0x13
0x0000000000173173 : str edx ; syscall
0x0000000000025c7e : str word ptr [rcx] ; ret
0x00000000000c6be0 : sub ah, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000001518a0 : sub al, 0 ; add byte ptr [rax], al ; adc al, 0x5f ; add byte ptr [rax], al ; clc ; ret 0xfff5
0x000000000000be40 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000168438 : sub al, 0 ; add byte ptr [rax], al ; in al, dx ; retf
0x00000000001683f0 : sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001683a8 : sub al, 0 ; add byte ptr [rax], al ; pop rsp ; retf
0x0000000000166de0 : sub al, 0 ; add byte ptr [rax], al ; push rsp ; mov ah, 1 ; add byte ptr [rax], ch ; ret 0xfff9
0x00000000000baccb : sub al, 0 ; add eax, 4 ; ret
0x00000000000ba267 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000bf6dd : sub al, 0 ; je 0xbf6c0 ; mov rsi, r15 ; call 0x8c1d7
0x00000000000bd2a1 : sub al, 0 ; mov qword ptr [rsp + 8], rdx ; call 0x89d79
0x00000000000ba220 : sub al, 0 ; ret
0x0000000000109faa : sub al, 0x10 ; std ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000014c97c : sub al, 0x11 ; add byte ptr [rax], al ; mov al, 0x23 ; hlt ; call qword ptr [rbx]
0x000000000016e37c : sub al, 0x2b ; add al, byte ptr [rax] ; nop ; xchg eax, ebp ; sti ; call qword ptr [rdi]
0x000000000016e87c : sub al, 0x30 ; add al, byte ptr [rax] ; push rax ; cwde ; sti ; jmp qword ptr [rax]
0x0000000000006b97 : sub al, 0x3a ; loope 0x6ba5 ; or edx, eax ; push rbx ; retf 0x1771
0x0000000000172adc : sub al, 0x43 ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; xchg dword ptr [rdx + rbp], eax ; retf
0x000000000000493b : sub al, 0x46 ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; pop rsi ; je 0x4934 ; ret
0x00000000000b4485 : sub al, 0x48 ; add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c2300 : sub al, 0x71 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000013cb4c : sub al, 0x7a ; cmc ; inc esp ; jle 0x13cb4f ; jmp rdx
0x000000000013cad0 : sub al, 0x7a ; cmc ; jmp rdx
0x000000000013cacc : sub al, 0x7a ; cmc ; ljmp ptr [rdx + rdi*2] ; cmc ; jmp rdx
0x00000000000b4ef3 : sub al, 0x89 ; ret 0x2566
0x00000000000ba7e9 : sub al, 0xc0 ; mov qword ptr [rdi + 8], rax ; mov rax, qword ptr [r8] ; ret
0x00000000000ff6f0 : sub al, 0xc5 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ba8a0 : sub al, 0xd0 ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000005af4 : sub al, 0xd8 ; in eax, 0x22 ; cmp bh, dl ; ret 0x9d0c
0x000000000009e909 : sub al, 0xe8 ; ret
0x0000000000006c52 : sub al, 0xef ; and cl, bl ; outsb dx, byte ptr [rsi] ; retf
0x0000000000094af8 : sub al, 0xf ; lea eax, dword ptr [rcx + rdi*8 - 1] ; dec dword ptr [rax + 0x63] ; ret 0xc283
0x0000000000094bdd : sub al, 0xf ; lea ebx, dword ptr [rax + rax + 0x63480000] ; ret 0xc283
0x00000000000935c7 : sub al, 0xf ; lea edx, dword ptr [rdx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf -0x67b8
0x00000000001540a1 : sub al, 0xf6 ; call qword ptr [rdx]
0x000000000011704e : sub al, 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000147601 : sub al, 0xf9 ; call rsp
0x00000000000c67f7 : sub al, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x000000000014b97c : sub al, 1 ; add byte ptr [rax], al ; xor byte ptr [rdx], dl ; hlt ; jmp qword ptr [rax]
0x000000000016e49d : sub al, 2 ; add byte ptr [rax], al ; xchg eax, edi ; sti ; call qword ptr [rdi]
0x0000000000000d3d : sub al, 2 ; ret 0xe4c0
0x000000000014bd7c : sub al, 5 ; add byte ptr [rax], al ; push rax ; sbb dh, ah ; call qword ptr [rbx]
0x0000000000016340 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x261
0x00000000000dc2d8 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rsp + 0x10], r9 ; call rax
0x000000000000c7f1 : sub al, byte ptr [rax] ; add byte ptr [rcx], dl ; add byte ptr [rdi], cl ; add ch, al ; ret
0x00000000000da6c0 : sub al, byte ptr [rax] ; add rax, 0x10 ; mov qword ptr [rdi], rax ; ret
0x00000000000d2975 : sub al, byte ptr [rax] ; add rax, 0x18 ; mov qword ptr [rdi], rax ; ret
0x00000000000d298b : sub al, byte ptr [rax] ; add rax, 0x18 ; mov qword ptr [rsi], rax ; ret
0x00000000000d3775 : sub al, byte ptr [rax] ; jne 0xd3785 ; ret
0x00000000000d4455 : sub al, byte ptr [rax] ; jne 0xd4468 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d4b40 : sub al, byte ptr [rax] ; jne 0xd4b68 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d68b5 : sub al, byte ptr [rax] ; jne 0xd68c5 ; ret
0x00000000000d75f5 : sub al, byte ptr [rax] ; jne 0xd7608 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d7c22 : sub al, byte ptr [rax] ; jne 0xd7c38 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7cd0 : sub al, byte ptr [rax] ; jne 0xd7cf8 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000d365a : sub al, byte ptr [rax] ; lea rcx, qword ptr [rax + 0x18] ; mov rax, rcx ; ret
0x0000000000000907 : sub al, byte ptr [rax] ; mov byte ptr [rax], al ; ret 2
0x00000000000d2965 : sub al, byte ptr [rax] ; ret
0x000000000016e26d : sub al, byte ptr [rdx] ; add byte ptr [rax - 0x6c], al ; sti ; call qword ptr [rdi]
0x0000000000004484 : sub al, dl ; sbb dword ptr [rdx + 0x53], 0x2ad4526b ; ret 0x5a81
0x00000000000c692f : sub bh, ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d859f : sub bh, bl ; dec dword ptr [rax - 0x77] ; ret
0x00000000001003f2 : sub bh, byte ptr [rax - 0x76b70008] ; ret
0x0000000000163001 : sub bh, cl ; call rdi
0x0000000000159039 : sub bh, dh ; call qword ptr [rdx]
0x00000000000a914c : sub bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000148079 : sub bh, dl ; call rsp
0x00000000000d8173 : sub bl, bh ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000fd0f4 : sub bl, ch ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000048b0 : sub bl, ch ; out dx, al ; push rbp ; retf
0x00000000000ee2c2 : sub bl, dl ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000011951c : sub byte ptr [r8 + 0x29], r9b ; ret 0x8948
0x00000000000c7592 : sub byte ptr [r8 + 0xf], r8b ; mov dh, 0xf6 ; mov eax, dword ptr [rax + rsi*4] ; ret
0x00000000000bad0a : sub byte ptr [r8 - 0x77], cl ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000124293 : sub byte ptr [r9], r8b ; ret
0x000000000011951d : sub byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000eec63 : sub byte ptr [rax + 0x39], cl ; push rdi ; and byte ptr [rdx + 6], dh ; xor eax, eax ; ret
0x00000000000daba4 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000c7593 : sub byte ptr [rax + 0xf], al ; mov dh, 0xf6 ; mov eax, dword ptr [rax + rsi*4] ; ret
0x000000000013709f : sub byte ptr [rax + 0xf], cl ; ret 0xd231
0x0000000000090bcc : sub byte ptr [rax + 6], bh ; pop rbx ; pop rbp ; ret
0x0000000000004edf : sub byte ptr [rax - 0x69], 0xc9 ; pop rcx ; clc ; retf 0x1b41
0x00000000000bad0b : sub byte ptr [rax - 0x77], cl ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008f3c2 : sub byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8948
0x00000000001243c3 : sub byte ptr [rax - 0x77], cl ; ja 0x1243f1 ; mov qword ptr [rdi + 0x30], rdx ; ret
0x0000000000124b13 : sub byte ptr [rax - 0x77], cl ; ja 0x124b41 ; mov qword ptr [rdi + 0x30], rdx ; ret
0x00000000001057c4 : sub byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r13 ; call rax
0x00000000000b2205 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000da9d5 : sub byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000ffbde : sub byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014f4e8 : sub byte ptr [rax], ah ; cmc ; call qword ptr [rdi]
0x00000000000ac027 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000000daa8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2ba
0x00000000000baf85 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000171b28 : sub byte ptr [rbp - 4], bh ; call qword ptr [rcx]
0x0000000000090b82 : sub byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000008e505 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000099f96 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b2e56 : sub byte ptr [rbx + rcx*4 + 0x2d], cl ; ret 0x2cfc
0x000000000012ad06 : sub byte ptr [rbx - 0x6bf00008], al ; ret
0x00000000000c0f04 : sub byte ptr [rcx - 0x76b70004], ah ; ret
0x00000000000bff04 : sub byte ptr [rcx - 0x76b70004], dh ; ret
0x000000000014fd78 : sub byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fd58 : sub byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x0000000000124294 : sub byte ptr [rcx], al ; ret
0x00000000000bd1f0 : sub byte ptr [rcx], dh ; shr al, 0x38 ; ret 0xfffc
0x0000000000163308 : sub byte ptr [rcx], dh ; stc ; inc dword ptr [rdi + 0x4000000] ; retf
0x0000000000163b28 : sub byte ptr [rdi - 7], al ; jmp rdi
0x0000000000107721 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3948
0x0000000000112af4 : sub byte ptr [rdx + 0xf], al ; mov dh, 0x14 ; xor bh, byte ptr [rax] ; ret 0x940f
0x00000000001555f8 : sub byte ptr [rdx - 0xa], ah ; call qword ptr [rdx]
0x00000000001717d8 : sub byte ptr [rdx - 4], bh ; call qword ptr [rsi]
0x0000000000161f3e : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 2 ; retf
0x0000000000162596 : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 2 ; retf 0xe0a
0x00000000001642f8 : sub byte ptr [rsi - 7], dl ; call rsp
0x00000000000b78d4 : sub ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f2dbe : sub cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000000d7487 : sub cl, byte ptr [rbp - 0x7b] ; sal byte ptr [rsp + 0x4c], 0x89 ; ret 0xebe8
0x00000000000ab9c2 : sub cl, byte ptr [rcx] ; add byte ptr [rdi + rcx - 0x4a], al ; retf -0x76bf
0x00000000001171ee : sub dh, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000145bc1 : sub dh, bh ; jmp rsp
0x00000000000bc8c2 : sub dh, byte ptr [rsp + rbp + 0xc894800] ; ret 0x8b48
0x0000000000153d41 : sub dh, dh ; call qword ptr [rdx]
0x0000000000145141 : sub dh, dh ; jmp rsp
0x0000000000007abb : sub dl, byte ptr [rax - 0x51] ; retf
0x0000000000114c32 : sub dl, byte ptr [rax - 9] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000004e01 : sub dl, byte ptr [rdx - 0x44] ; ret 0x3790
0x00000000000e54a0 : sub dword ptr [rax], eax ; add rax, 0x10 ; mov qword ptr [rdi], rax ; ret
0x00000000000bbd83 : sub dword ptr [rax], eax ; or byte ptr [rax], al ; ret
0x0000000000007207 : sub dword ptr [rbp - 0x63], edi ; ret
0x000000000009b432 : sub dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000008fd7b : sub dword ptr [rbx], 1 ; je 0x8fd8e ; pop rbx ; ret
0x000000000010f5db : sub dword ptr [rdi], esp ; add byte ptr [rbp + 8], dh ; jmp 0x8b877
0x00000000000b09f3 : sub dword ptr [rdx - 0x76b70003], esi ; ret
0x00000000000050e8 : sub dword ptr [rsi - 0x5d], esp ; retf
0x00000000000261a0 : sub dword ptr [rsi], esp ; add byte ptr [rax], al ; and dword ptr [rax], eax ; verw si ; ret 0x13
0x0000000000007206 : sub dword ptr ss:[rbp - 0x63], edi ; ret
0x000000000008cc44 : sub eax, 0x10c48348 ; pop rbx ; ret
0x00000000000d2844 : sub eax, 0x18 ; ret
0x0000000000176e39 : sub eax, 0x18c ; ret
0x000000000001de31 : sub eax, 0x210000 ; verr ax ; ret
0x00000000000a3650 : sub eax, 0x3c894c00 ; ret 0x8b4c
0x00000000000e57af : sub eax, 0x4634900 ; xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000001071e5 : sub eax, 0x4c000000 ; mov edi, esi ; call rcx
0x0000000000116eb6 : sub eax, 0x8948fff7 ; ret
0x00000000001082cc : sub eax, 0x8948fff8 ; ret
0x000000000016e63d : sub eax, 0x97f00002 ; sti ; call qword ptr [rbx]
0x00000000000b385d : sub eax, 0xa548f300 ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x000000000014e56d : sub eax, 0xd9b00000 ; hlt ; jmp qword ptr [rsi]
0x0000000000149375 : sub eax, 0xf0a40002 ; sti ; jmp rsp
0x00000000000a1f8b : sub eax, 1 ; ret
0x00000000000f0c71 : sub eax, dword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015e4e5 : sub eax, dword ptr [rcx] ; add al, ch ; retf -9
0x000000000008fd7c : sub eax, dword ptr [rcx] ; je 0x8fd8d ; pop rbx ; ret
0x0000000000124045 : sub eax, dword ptr [rdi + 0x10] ; je 0x124056 ; ret
0x00000000000c9020 : sub eax, dword ptr [rdi + 0x10] ; ret
0x00000000000c90e0 : sub eax, dword ptr [rdi + 0x10] ; sar rax, 2 ; ret
0x00000000000a5b9d : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000107285 : sub eax, eax ; ret
0x00000000000bbcf8 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b52cb : sub eax, ebx ; pop rbx ; ret
0x00000000001247be : sub eax, edx ; sar rax, 2 ; ret
0x00000000000d28a8 : sub eax, esi ; cmp rax, rdx ; cmova rax, rdx ; ret
0x00000000000912e1 : sub ebp, ebp ; mov rdi, rbp ; call r12
0x0000000000090eb9 : sub ebx, ebp ; mov rdi, rbx ; call r12
0x00000000001368b8 : sub ebx, edi ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x00000000001136fc : sub ecx, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ae878 : sub ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x000000000000592b : sub ecx, dword ptr [rdi] ; adc bh, byte ptr [rsi] ; or ah, al ; retf 0x297c
0x0000000000162fa9 : sub ecx, edi ; jmp rdi
0x00000000001475d1 : sub ecx, edi ; jmp rsp
0x000000000000831c : sub ecx, esi ; scasb al, byte ptr [rdi] ; wait ; ret 0x7cdd
0x00000000000b24a9 : sub edi, eax ; jmp 0xb247b
0x000000000012d011 : sub edi, eax ; mov rax, rdi ; sar rax, 2 ; ret
0x0000000000091069 : sub edi, ebp ; call r15
0x0000000000091194 : sub edi, ebp ; call rax
0x000000000016b6c1 : sub edi, ebx ; jmp qword ptr [rbx]
0x00000000001630c1 : sub edi, ecx ; jmp rdi
0x00000000000c6877 : sub edi, esp ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a58f1 : sub edx, 1 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000000a5901 : sub edx, 1 ; xor eax, eax ; mov qword ptr [rdi + 0x10], rdx ; ret
0x0000000000124952 : sub edx, 4 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x000000000009bff1 : sub edx, 8 ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000007fb1 : sub edx, dword ptr [rsi + 0x27] ; ret 0x84e7
0x000000000011951f : sub edx, eax ; mov qword ptr [rdi + 0x30], rdx ; ret
0x00000000000b416a : sub edx, ecx ; cmp rdx, 2 ; ja 0xb4181 ; ret
0x00000000000d3dc1 : sub edx, esi ; mov rax, rsi ; jne 0xd3dd8 ; ret
0x00000000000923e3 : sub edx, esi ; test r9d, r9d ; cmovne eax, edx ; ret
0x000000000008cb91 : sub esi, dword ptr [rax - 0x18] ; cmp rsi, rdx ; jb 0x8cba4 ; ret
0x000000000008d081 : sub esi, dword ptr [rax - 0x18] ; cmp rsi, rdx ; jb 0x8d094 ; ret
0x0000000000124f6e : sub esi, dword ptr [rdi + 8] ; cmp rsi, rdx ; jb 0x124f81 ; ret
0x0000000000138a7e : sub esi, dword ptr [rdi + 8] ; cmp rsi, rdx ; jb 0x138a91 ; ret
0x0000000000007060 : sub esi, dword ptr [rdx] ; push 0x5a ; jb 0x7055 ; retf
0x0000000000153e01 : sub esi, esi ; call qword ptr [rdx]
0x0000000000128b7c : sub esi, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000115c2e : sub esp, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cf9b : sub esp, 0x8948ffff ; ret
0x000000000013bd7d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000008fbd1 : sub esp, 8 ; call 0x8bdf5
0x000000000008fcc1 : sub esp, 8 ; call rdi
0x00000000000c6ac8 : sub esp, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000001368b7 : sub r11d, r15d ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x00000000000c6bdf : sub r12b, r15b ; dec dword ptr [rax - 0x77] ; ret
0x000000000000705f : sub r14d, dword ptr [r10] ; push 0x5a ; jb 0x7056 ; retf
0x00000000000b24a8 : sub r15, rax ; jmp 0xb247c
0x00000000000d2843 : sub rax, 0x18 ; ret
0x00000000000a1f8a : sub rax, 1 ; ret
0x0000000000124044 : sub rax, qword ptr [rdi + 0x10] ; je 0x124057 ; ret
0x00000000000c901f : sub rax, qword ptr [rdi + 0x10] ; ret
0x00000000000c90df : sub rax, qword ptr [rdi + 0x10] ; sar rax, 2 ; ret
0x00000000000bbcf7 : sub rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000107284 : sub rax, r8 ; ret
0x00000000000b52ca : sub rax, rbx ; pop rbx ; ret
0x00000000001247bd : sub rax, rdx ; sar rax, 2 ; ret
0x00000000000912e0 : sub rbp, r13 ; mov rdi, rbp ; call r12
0x0000000000090eb8 : sub rbx, r13 ; mov rdi, rbx ; call r12
0x0000000000091068 : sub rdi, rbp ; call r15
0x0000000000091193 : sub rdi, rbp ; call rax
0x00000000000a58f0 : sub rdx, 1 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x0000000000124951 : sub rdx, 4 ; mov qword ptr [rdi + 0x10], rdx ; ret
0x000000000009bff0 : sub rdx, 8 ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000011951e : sub rdx, rax ; mov qword ptr [rdi + 0x30], rdx ; ret
0x00000000000d3dc0 : sub rdx, rsi ; mov rax, rsi ; jne 0xd3dd9 ; ret
0x000000000013bd7c : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000008fbd0 : sub rsp, 8 ; call 0x8bdf6
0x000000000008fcc0 : sub rsp, 8 ; call rdi
0x00000000000eb745 : syscall
0x00000000000a0218 : test ah, ah ; pushfq ; retf
0x0000000000169fd4 : test ah, bh ; add dword ptr [rax], eax ; ret 0xfffa
0x000000000014bbf8 : test al, 0x19 ; hlt ; jmp qword ptr [rax]
0x000000000014c9c8 : test al, 0x23 ; hlt ; call qword ptr [rdi]
0x000000000014c938 : test al, 0x23 ; hlt ; call qword ptr [rsi]
0x000000000012e2ee : test al, 0x29 ; ret 0x4589
0x000000000014d148 : test al, 0x31 ; hlt ; call qword ptr [rbx]
0x000000000014d638 : test al, 0x35 ; hlt ; jmp qword ptr [rbx]
0x00000000000e77b1 : test al, 0x38 ; ret 0x8948
0x000000000014fc88 : test al, 0x58 ; cmc ; call qword ptr [rbx]
0x000000000014fc68 : test al, 0x58 ; cmc ; call qword ptr [rdx]
0x00000000000d6d85 : test al, 0x5b ; pop rbp ; ret
0x0000000000171078 : test al, 0x5e ; cld ; call rsi
0x0000000000005183 : test al, 0x6a ; sbb edi, dword ptr [rbp - 0x5d] ; ret
0x0000000000134284 : test al, 0x6d ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000165768 : test al, 0x8a ; stc ; jmp qword ptr [rdi]
0x0000000000150e48 : test al, 0x8e ; cmc ; jmp qword ptr [rax]
0x000000000016ec68 : test al, 0x9a ; sti ; jmp qword ptr [rax]
0x000000000016ee08 : test al, 0x9f ; sti ; jmp qword ptr [rdx]
0x0000000000169678 : test al, 0xa7 ; cli ; call qword ptr [rcx]
0x0000000000166058 : test al, 0xad ; stc ; call qword ptr [rcx]
0x0000000000166358 : test al, 0xb6 ; stc ; jmp qword ptr [rdi]
0x0000000000166b08 : test al, 0xbb ; stc ; call qword ptr [rbx]
0x0000000000166ae8 : test al, 0xbb ; stc ; jmp qword ptr [rax]
0x0000000000167588 : test al, 0xce ; stc ; jmp qword ptr [rbx]
0x000000000001b610 : test al, 0xe ; add byte ptr [rax], al ; adc dword ptr [rax], eax ; sbb al, 0 ; retf 0x384b
0x000000000016aa28 : test al, 0xe2 ; cli ; jmp qword ptr [rbx]
0x000000000015ef48 : test al, 0xf5 ; idiv edi ; ret
0x000000000016aea8 : test al, 0xf7 ; cli ; jmp rdx
0x0000000000101394 : test al, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c0df0 : test al, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000091345 : test al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000016609d : test al, 1 ; add al, ah ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x000000000016627d : test al, 1 ; add al, al ; mov bl, 0xf9 ; jmp qword ptr [rdi]
0x00000000001661a5 : test al, 1 ; add al, bl ; mov al, 0xf9 ; jmp qword ptr [rdi]
0x00000000001660b5 : test al, 1 ; add al, ch ; lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rbx]
0x0000000000166235 : test al, 1 ; add al, cl ; mov dl, 0xf9 ; jmp qword ptr [rdi]
0x00000000001661ed : test al, 1 ; add al, dl ; mov cl, 0xf9 ; jmp qword ptr [rdi]
0x000000000008f991 : test al, al ; je 0x8f9b5 ; call 0x8bc26
0x00000000000b470c : test al, al ; je 0xb46dd ; or dword ptr [r8], 1 ; ret
0x00000000000b46ef : test al, al ; je 0xb4708 ; and dword ptr [r8], 0xfffffffe ; ret
0x00000000000f946c : test al, al ; je 0xf9480 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4200 : test al, al ; jne 0xb41b7 ; mov eax, 1 ; ret
0x00000000000b41eb : test al, al ; jne 0xb41d1 ; mov eax, 1 ; ret
0x0000000000005a4a : test al, bh ; shl byte ptr [rbx - 0x52], 1 ; ret 0x5245
0x00000000001447c0 : test al, bl ; hlt ; inc dword ptr [rcx + rdx*4] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016d3f1 : test bh, bl ; jmp qword ptr [rdx]
0x0000000000149450 : test bh, bl ; sti ; call rsp
0x00000000001654b9 : test bh, cl ; call qword ptr [rax]
0x000000000010ca19 : test bh, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a24dc : test bl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001696d4 : test bl, dh ; add dword ptr [rax], eax ; call 0x1416918b
0x00000000001718d4 : test byte ptr [rax + 2], ah ; add byte ptr [rax], bl ; jnp 0x1718de ; jmp qword ptr [rbx]
0x00000000000b8597 : test byte ptr [rax + rax - 0x76b80000], bh ; ret
0x0000000000124ab2 : test byte ptr [rax - 0x3f], 0xe6 ; add cl, byte ptr [rax + 1] ; ja 0x124ad4 ; ret
0x0000000000124b02 : test byte ptr [rax - 0x3f], 0xe6 ; add cl, byte ptr [rax + 1] ; ja 0x124b3c ; ret
0x00000000000bc98f : test byte ptr [rax - 0x77], 0xc ; ret 0x8b48
0x00000000000acea9 : test byte ptr [rax - 0x77], 0xc7 ; call 0x89116
0x00000000000c3155 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000000441b : test byte ptr [rax], ah ; ret 0x5a81
0x00000000000d9bba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001240da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000008df8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x8a298
0x00000000000fe0ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x8a3a8
0x00000000000d9d9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001241ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x00000000000adeaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lock add dword ptr [rdi], esi ; ret
0x00000000000f92ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000f921a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000012426a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov esi, eax ; jmp rdx
0x0000000000124d4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000b233a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x00000000000ddbaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi] ; ret
0x0000000000124f0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000012bbea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x000000000008edc9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000113017 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; jmp rsi
0x000000000008c99a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000008feaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008dc1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000b43ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000b214a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014294c : test byte ptr [rax], bh ; cli ; jmp qword ptr [rax]
0x00000000000e7b53 : test byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; retf
0x00000000001115ee : test byte ptr [rbp + 0x38000004], dh ; ret
0x000000000014ae00 : test byte ptr [rbp - 2], bl ; jmp rsp
0x00000000000ff13d : test byte ptr [rbx + 0x1c], 1 ; je 0xff160 ; call 0x8bc28
0x00000000000fe1bd : test byte ptr [rcx + 0x1c], 1 ; jne 0xfe1ea ; call 0x8acc8
0x0000000000166cd4 : test byte ptr [rcx + rax - 0x63fa800], dh ; jmp qword ptr [rdx]
0x00000000000f54f6 : test byte ptr [rcx + rcx*4 - 0x19], 0x83 ; retf -0x17f0
0x00000000000f59f3 : test byte ptr [rcx + rcx*4 - 0x19], 0x83 ; retf -0x17f8
0x0000000000104c91 : test byte ptr [rcx + rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf -0x3f7c
0x000000000010d47f : test byte ptr [rcx - 0x43], 1 ; add byte ptr [rax], al ; add bl, ch ; retf
0x00000000000e0fb3 : test byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000144bbc : test byte ptr [rcx - 0x688c0000], ch ; cmc ; call rsp
0x00000000000a5b5f : test byte ptr [rcx], 0xf0 ; mov byte ptr [rdi + 0x50], al ; ret
0x0000000000000e96 : test byte ptr [rcx], al ; test byte ptr [rcx], bl ; ret 0x2999
0x0000000000000e98 : test byte ptr [rcx], bl ; ret 0x2999
0x00000000000f9200 : test byte ptr [rdi + 0x20], 5 ; sete al ; ret
0x00000000000f9210 : test byte ptr [rdi + 0x20], 5 ; setne al ; ret
0x00000000000c7af5 : test byte ptr [rdi + 0x9c], dh ; ret
0x00000000001717d4 : test byte ptr [rdi + 2], bl ; add byte ptr [rax], ch ; jp 0x1717de ; call qword ptr [rsi]
0x0000000000144e84 : test byte ptr [rdi - 0x1a0c0000], dh ; cmc ; call rsp
0x00000000001667d4 : test byte ptr [rdi - 0x46a7ffff], ch ; stc ; jmp qword ptr [rax]
0x0000000000166114 : test byte ptr [rdi - 0x5117ffff], ah ; stc ; jmp qword ptr [rdi]
0x00000000000b4674 : test byte ptr [rdi], 0x44 ; ret 0x394d
0x000000000011451e : test byte ptr [rdi], 0x94 ; ret 0x50ff
0x0000000000110c14 : test byte ptr [rdi], dl ; add eax, dword ptr [rax] ; add byte ptr [rax], bh ; ret
0x0000000000005a92 : test byte ptr [rdx + rsi*2], al ; ret 0xdf82
0x00000000000b5381 : test byte ptr [rdx - 0x77000000], dh ; ret 0x3948
0x0000000000149c78 : test byte ptr [rdx], ah ; std ; jmp rsp
0x000000000011026e : test byte ptr [rip + 0x38000003], bl ; ret
0x00000000000050e4 : test byte ptr [rsi + rdi - 0x24], bl ; sub dword ptr [rsi - 0x5d], esp ; retf
0x000000000014aa68 : test byte ptr [rsi + rdi*8], bh ; call rsp
0x00000000001666d4 : test byte ptr [rsi - 0x46a7ffff], ch ; stc ; jmp qword ptr [rax]
0x000000000009280a : test byte ptr [rsi - 0xd000000], dh ; ret
0x00000000001481f0 : test byte ptr [rsi - 6], cl ; call rsp
0x00000000000b46d0 : test byte ptr [rsi], 4 ; jne 0xb46e6 ; ret
0x00000000000ae1d9 : test ch, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000012efb0 : test cl, bl ; add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000142500 : test cl, bl ; stc ; ljmp ptr [rbx - 0x5400063d] ; ret
0x0000000000099dd6 : test dh, ch ; ret
0x0000000000005b6f : test dh, dl ; ret 0x2ade
0x00000000000d83c6 : test dword ptr [rax - 0x73], 0x89489634 ; retf -0x7cb8
0x000000000009d107 : test dword ptr [rax - 0x77], 0x1fe81045 ; ret
0x0000000000090e0f : test dword ptr [rax - 0x7d], 0x8d4808c4 ; add al, 0xe ; ret
0x0000000000153dfd : test dword ptr [rax], eax ; add byte ptr [rax], dh ; sub esi, esi ; call qword ptr [rdx]
0x000000000009225d : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000009225c : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x0000000000004b09 : test dword ptr [rbx + 0x2d], eax ; ret 0xfda5
0x0000000000117097 : test dword ptr [rbx - 9], ecx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000208d0 : test dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmc ; retf 1
0x00000000001474ed : test dword ptr [rcx], eax ; add byte ptr [rcx], al ; stc ; call rsp
0x00000000000f9273 : test dword ptr [rdi + 0x1c], esi ; jne 0xf9280 ; ret
0x00000000000f9cd3 : test dword ptr [rdi + 0x1c], esi ; jne 0xf9ce0 ; ret
0x00000000000f923a : test dword ptr [rdi + 0x1c], esi ; mov dword ptr [rdi + 0x20], esi ; jne 0xf9256 ; ret
0x00000000000f9c9a : test dword ptr [rdi + 0x1c], esi ; mov dword ptr [rdi + 0x20], esi ; jne 0xf9cb6 ; ret
0x0000000000094cc2 : test dword ptr [rdi + rsi*8 - 1], edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008e7f8 : test dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009c0fe : test dword ptr [rsi + 0x5b000000], ecx ; pop rbp ; pop r12 ; ret
0x0000000000099695 : test dword ptr [rsi], esi ; retf
0x0000000000095789 : test dword ptr [rsp + rdi*8 - 0x7cb70001], ebp ; ret 0x4801
0x000000000000686a : test eax, 0x15b7a352 ; retf -0xff6
0x00000000000962be : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9629c
0x00000000000964b6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96494
0x0000000000096826 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96804
0x000000000009689e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9687c
0x0000000000096916 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x968f4
0x0000000000096b9e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96b7c
0x0000000000096c16 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96bf4
0x0000000000096c8e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96c6c
0x0000000000096d06 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96ce4
0x0000000000096d7e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96d5c
0x0000000000096df6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96dd4
0x0000000000096e6e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96e4c
0x0000000000096ee6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96ec4
0x0000000000096f66 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96f44
0x0000000000096fde : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x96fbc
0x0000000000097056 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97034
0x00000000000970ce : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x970ac
0x0000000000097146 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97124
0x00000000000971be : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9719c
0x0000000000097236 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97214
0x000000000009732e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9730c
0x0000000000097546 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97524
0x00000000000975be : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9759c
0x0000000000097736 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97714
0x000000000009799e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9797c
0x0000000000097a16 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x979f4
0x0000000000097a8e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97a6c
0x0000000000097b06 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97ae4
0x0000000000097b7e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97b5c
0x0000000000097bf6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97bd4
0x0000000000097c6e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97c4c
0x0000000000097dde : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97dbc
0x0000000000097f16 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x97ef4
0x00000000000980ae : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9808c
0x0000000000098266 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x98244
0x0000000000098be6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x98bc4
0x0000000000098c56 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x98c34
0x0000000000098cd6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x98cb4
0x0000000000098e26 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x98e04
0x0000000000098e9a : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x98e78
0x0000000000099168 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x99146
0x000000000009a086 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a064
0x000000000009a11e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a0fc
0x000000000009a19e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a17c
0x000000000009a21e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a1fc
0x000000000009a4f6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a4d4
0x000000000009a56e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a54c
0x000000000009a5ee : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a5cc
0x000000000009a66e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a64c
0x000000000009a6ee : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a6cc
0x000000000009a76e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a74c
0x000000000009a7ee : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9a7cc
0x000000000009b5b6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x9b594
0x0000000000097d66 : test eax, 0x48d68948 ; add edx, 1 ; jmp 0x97d44
0x000000000013a5d3 : test eax, 0x48fff4ea ; mov eax, ebx ; pop rbx ; ret
0x00000000000d43af : test eax, 0x89480006 ; retf -0x7cb8
0x0000000000101254 : test eax, 0x8948fff8 ; ret
0x00000000000c0660 : test eax, 0x8948fffc ; ret
0x000000000009128a : test eax, 0x8948ffff ; ret
0x000000000012070f : test eax, 0x894cfff6 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d0633 : test eax, 0x894cfffb ; dec dword ptr [rax - 0x77] ; ret
0x0000000000144bbd : test eax, 0x97740000 ; cmc ; call rsp
0x0000000000147c35 : test eax, 0x9a740001 ; stc ; jmp rsp
0x0000000000007acf : test eax, 0xa669d04a ; xlatb ; jb 0x7add ; xchg eax, esp ; ret 0xc9ac
0x00000000001662c5 : test eax, 0xb4b80001 ; stc ; jmp qword ptr [rdi]
0x000000000016630d : test eax, 0xb5b00001 ; stc ; jmp qword ptr [rdi]
0x0000000000003e75 : test eax, 0xb614410f ; retf -0x4fea
0x0000000000166355 : test eax, 0xb6a80001 ; stc ; jmp qword ptr [rdi]
0x0000000000004b3a : test eax, 0xcccb2a52 ; ret 0x42bb
0x00000000000a1a90 : test eax, 0xffffffc0 ; jne 0xa1a72 ; ret
0x00000000000bc47e : test eax, eax ; cmovs eax, edx ; add rsp, 8 ; ret
0x0000000000104b6c : test eax, eax ; je 0x104b7c ; pop rbx ; ret
0x000000000010547c : test eax, eax ; je 0x10548c ; pop rbx ; ret
0x00000000001054cc : test eax, eax ; je 0x1054dc ; pop rbx ; ret
0x000000000010551c : test eax, eax ; je 0x10552c ; pop rbx ; ret
0x000000000010597c : test eax, eax ; je 0x10598c ; pop rbx ; ret
0x00000000001059cc : test eax, eax ; je 0x1059dc ; pop rbx ; ret
0x0000000000105a1c : test eax, eax ; je 0x105a2c ; pop rbx ; ret
0x0000000000105ffc : test eax, eax ; je 0x10600c ; pop rbx ; ret
0x00000000001065dc : test eax, eax ; je 0x1065ec ; pop rbx ; ret
0x000000000010662c : test eax, eax ; je 0x10663c ; pop rbx ; ret
0x000000000010667c : test eax, eax ; je 0x10668c ; pop rbx ; ret
0x000000000010685c : test eax, eax ; je 0x10686c ; pop rbx ; ret
0x00000000001068ac : test eax, eax ; je 0x1068bc ; pop rbx ; ret
0x00000000001068fc : test eax, eax ; je 0x10690c ; pop rbx ; ret
0x000000000012abcc : test eax, eax ; je 0x12abdc ; pop rbx ; ret
0x000000000012b28c : test eax, eax ; je 0x12b29c ; pop rbx ; ret
0x000000000012b2dc : test eax, eax ; je 0x12b2ec ; pop rbx ; ret
0x000000000012b32c : test eax, eax ; je 0x12b33c ; pop rbx ; ret
0x000000000012b7ac : test eax, eax ; je 0x12b7bc ; pop rbx ; ret
0x000000000012b7fc : test eax, eax ; je 0x12b80c ; pop rbx ; ret
0x000000000012b84c : test eax, eax ; je 0x12b85c ; pop rbx ; ret
0x000000000012be5c : test eax, eax ; je 0x12be6c ; pop rbx ; ret
0x000000000012c46c : test eax, eax ; je 0x12c47c ; pop rbx ; ret
0x000000000012c4bc : test eax, eax ; je 0x12c4cc ; pop rbx ; ret
0x000000000012c50c : test eax, eax ; je 0x12c51c ; pop rbx ; ret
0x000000000012c68c : test eax, eax ; je 0x12c69c ; pop rbx ; ret
0x000000000012c6dc : test eax, eax ; je 0x12c6ec ; pop rbx ; ret
0x000000000012c72c : test eax, eax ; je 0x12c73c ; pop rbx ; ret
0x000000000008c98f : test eax, eax ; je 0x8c9a5 ; pop rbp ; jmp rax
0x000000000008c9e0 : test eax, eax ; je 0x8c9f5 ; pop rbp ; jmp rax
0x000000000008fa2f : test eax, eax ; je 0x8fa3f ; mov rdi, rbx ; call rax
0x000000000008facb : test eax, eax ; je 0x8fad8 ; call rax
0x000000000008fe96 : test eax, eax ; je 0x8fea6 ; mov rdi, rbx ; call rax
0x0000000000090499 : test eax, eax ; je 0x904a5 ; pop rbx ; ret
0x00000000000904a6 : test eax, eax ; je 0x904b2 ; call rax
0x0000000000090516 : test eax, eax ; je 0x90509 ; call rax
0x00000000000905ae : test eax, eax ; je 0x905ba ; call rax
0x00000000000a1b16 : test eax, eax ; je 0xa1b45 ; pop rbx ; ret
0x00000000000a5bb8 : test eax, eax ; je 0xa5bc4 ; jmp rax
0x00000000000a5d9d : test eax, eax ; je 0xa5db4 ; jmp rax
0x00000000000af646 : test eax, eax ; je 0xaf65b ; mov rdi, rax ; call 0x8c109
0x00000000000afecd : test eax, eax ; je 0xafee2 ; mov rdi, rax ; call 0x8c109
0x00000000000be39c : test eax, eax ; je 0xbe3ac ; mov rdi, r14 ; call rax
0x00000000000be44c : test eax, eax ; je 0xbe45c ; mov rdi, r14 ; call rax
0x00000000000be503 : test eax, eax ; je 0xbe513 ; mov rdi, r14 ; call rax
0x00000000000be5c3 : test eax, eax ; je 0xbe5d3 ; mov rdi, r14 ; call rax
0x00000000000bf5ef : test eax, eax ; je 0xbf5ff ; mov rdi, r12 ; call rax
0x00000000000bf6bc : test eax, eax ; je 0xbf6cc ; mov rdi, r12 ; call rax
0x00000000000bf77f : test eax, eax ; je 0xbf78f ; mov rdi, r12 ; call rax
0x00000000000bf84c : test eax, eax ; je 0xbf85c ; mov rdi, r12 ; call rax
0x00000000000bfe7f : test eax, eax ; je 0xbfe8f ; mov rdi, rbx ; call rax
0x00000000000bff5f : test eax, eax ; je 0xbff6f ; mov rdi, rbx ; call rax
0x00000000000c107e : test eax, eax ; je 0xc108e ; mov rdi, rbx ; call rax
0x00000000000c121e : test eax, eax ; je 0xc122e ; mov rdi, rbx ; call rax
0x00000000000c160d : test eax, eax ; je 0xc161d ; mov rdi, r13 ; call rax
0x00000000000c179d : test eax, eax ; je 0xc17ad ; mov rdi, r13 ; call rax
0x00000000000c364c : test eax, eax ; je 0xc365c ; mov rdi, r12 ; call rax
0x00000000000c394c : test eax, eax ; je 0xc395c ; mov rdi, r12 ; call rax
0x00000000000c3bd2 : test eax, eax ; je 0xc3be2 ; mov rdi, r14 ; call rax
0x00000000000c3c89 : test eax, eax ; je 0xc3c99 ; mov rdi, r14 ; call rax
0x00000000000c3e4b : test eax, eax ; je 0xc3e5b ; mov rdi, r14 ; call rax
0x00000000000c3f12 : test eax, eax ; je 0xc3f22 ; mov rdi, r14 ; call rax
0x00000000000c515d : test eax, eax ; je 0xc516d ; mov rdi, rbx ; call rax
0x00000000000c5218 : test eax, eax ; je 0xc5228 ; mov rdi, rbx ; call rax
0x00000000000c5d88 : test eax, eax ; je 0xc5d98 ; mov rdi, rbp ; call rax
0x00000000000c622d : test eax, eax ; je 0xc623d ; mov rdi, r14 ; call rax
0x00000000000c637d : test eax, eax ; je 0xc638d ; mov rdi, r14 ; call rax
0x00000000000de07c : test eax, eax ; je 0xde08c ; pop rbx ; ret
0x00000000000de0cc : test eax, eax ; je 0xde0dc ; pop rbx ; ret
0x00000000000de11c : test eax, eax ; je 0xde12c ; pop rbx ; ret
0x00000000000de16c : test eax, eax ; je 0xde17c ; pop rbx ; ret
0x00000000000de1bc : test eax, eax ; je 0xde1cc ; pop rbx ; ret
0x00000000000de20c : test eax, eax ; je 0xde21c ; pop rbx ; ret
0x00000000000de25c : test eax, eax ; je 0xde26c ; pop rbx ; ret
0x00000000000de2ac : test eax, eax ; je 0xde2bc ; pop rbx ; ret
0x00000000000e8cac : test eax, eax ; je 0xe8cbc ; pop rbx ; ret
0x00000000000e8cfc : test eax, eax ; je 0xe8d0c ; pop rbx ; ret
0x00000000000e8d4c : test eax, eax ; je 0xe8d5c ; pop rbx ; ret
0x00000000000e8d9c : test eax, eax ; je 0xe8dac ; pop rbx ; ret
0x00000000000e8dec : test eax, eax ; je 0xe8dfc ; pop rbx ; ret
0x00000000000e8e3c : test eax, eax ; je 0xe8e4c ; pop rbx ; ret
0x00000000000e8e8c : test eax, eax ; je 0xe8e9c ; pop rbx ; ret
0x00000000000e8edc : test eax, eax ; je 0xe8eec ; pop rbx ; ret
0x00000000000f5dae : test eax, eax ; je 0xf5dbd ; pop rbx ; ret
0x00000000000f5dde : test eax, eax ; je 0xf5ded ; pop rbx ; ret
0x00000000000f5e0e : test eax, eax ; je 0xf5e1d ; pop rbx ; ret
0x00000000000f867e : test eax, eax ; je 0xf868d ; pop rbx ; ret
0x00000000000f86ae : test eax, eax ; je 0xf86bd ; pop rbx ; ret
0x00000000000f86de : test eax, eax ; je 0xf86ed ; pop rbx ; ret
0x00000000000d4993 : test eax, eax ; jg 0xd4953 ; jmp 0xd4961
0x0000000000102704 : test eax, eax ; jle 0x102722 ; ret
0x0000000000128744 : test eax, eax ; jle 0x128762 ; ret
0x0000000000128914 : test eax, eax ; jle 0x128932 ; ret
0x00000000000d3744 : test eax, eax ; jle 0xd3762 ; ret
0x00000000000d6884 : test eax, eax ; jle 0xd68a2 ; ret
0x000000000009bfa6 : test eax, eax ; jne 0x9bfba ; add rsp, 8 ; ret
0x000000000009c84b : test eax, eax ; jne 0x9c880 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a38f2 : test eax, eax ; jne 0xa394b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b0d9a : test eax, eax ; jne 0xb0da9 ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x00000000000b5e2c : test eax, eax ; jne 0xb5e3d ; add rsp, 8 ; ret
0x00000000000b5e49 : test eax, eax ; jne 0xb5e5a ; add rsp, 8 ; ret
0x00000000000b5e69 : test eax, eax ; jne 0xb5e7a ; add rsp, 8 ; ret
0x00000000000b7800 : test eax, eax ; jne 0xb77fd ; ret
0x00000000000b7890 : test eax, eax ; jne 0xb788d ; ret
0x00000000000b8509 : test eax, eax ; jne 0xb851f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b88bb : test eax, eax ; jne 0xb88e4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b910b : test eax, eax ; jne 0xb9134 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bba8f : test eax, eax ; jne 0xbbab7 ; pop rbx ; ret
0x00000000000b28df : test eax, eax ; mov qword ptr [rbx], rax ; je 0xb28f0 ; pop rbx ; ret
0x0000000000090dd2 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x00000000000f9293 : test eax, eax ; sete al ; ret
0x00000000000d3593 : test eax, eax ; setg al ; ret
0x000000000008ecec : test eax, eax ; setne al ; add rsp, 8 ; ret
0x00000000000de301 : test eax, eax ; setne al ; pop rbx ; ret
0x00000000000baef8 : test ebx, ebx ; jne 0xbaef0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b5d0a : test ebx, ebx ; mov rax, rbx ; jne 0xb5d08 ; pop rbx ; ret
0x00000000000923e6 : test ecx, ecx ; cmovne eax, edx ; ret
0x00000000000921b6 : test ecx, ecx ; jne 0x9217b ; xor eax, eax ; ret
0x000000000009c046 : test ecx, ecx ; jne 0x9c035 ; ret
0x0000000000102a9d : test edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000016d5b9 : test edi, ebx ; call qword ptr [rdx]
0x00000000001655a1 : test edi, ecx ; call qword ptr [rbx]
0x0000000000165589 : test edi, ecx ; call qword ptr [rcx]
0x0000000000165601 : test edi, ecx ; jmp qword ptr [rdi]
0x00000000000af653 : test edi, edi ; je 0xaf668 ; mov rdi, r15 ; call 0x8c109
0x00000000000af6c7 : test edi, edi ; je 0xaf6da ; call 0x8c106
0x00000000000af6e0 : test edi, edi ; je 0xaf6f3 ; call 0x8c106
0x00000000000929e9 : test edi, edi ; jne 0x929de ; xor eax, eax ; ret
0x00000000000be224 : test edx, edx ; je 0xbe234 ; mov rdi, rbx ; call rdx
0x00000000000be325 : test edx, edx ; je 0xbe335 ; mov rdi, rbx ; call rdx
0x00000000000be3d4 : test edx, edx ; je 0xbe3e4 ; mov rdi, r14 ; call rdx
0x00000000000be484 : test edx, edx ; je 0xbe494 ; mov rdi, r14 ; call rdx
0x00000000000be53b : test edx, edx ; je 0xbe54b ; mov rdi, r14 ; call rdx
0x00000000000be5fb : test edx, edx ; je 0xbe60b ; mov rdi, r14 ; call rdx
0x00000000000c375a : test edx, edx ; je 0xc376a ; mov rdi, r12 ; call rdx
0x00000000000c3a5a : test edx, edx ; je 0xc3a6a ; mov rdi, r12 ; call rdx
0x00000000000c3b52 : test edx, edx ; je 0xc3b62 ; mov rdi, rbx ; call rdx
0x00000000000c3c0a : test edx, edx ; je 0xc3c1a ; mov rdi, r14 ; call rdx
0x00000000000c3cc1 : test edx, edx ; je 0xc3cd1 ; mov rdi, r14 ; call rdx
0x00000000000c3dc0 : test edx, edx ; je 0xc3dd0 ; mov rdi, rbx ; call rdx
0x00000000000c3e83 : test edx, edx ; je 0xc3e93 ; mov rdi, r14 ; call rdx
0x00000000000c3f4a : test edx, edx ; je 0xc3f5a ; mov rdi, r14 ; call rdx
0x00000000000bf684 : test edx, edx ; jg 0xbf66d ; mov rsi, r15 ; call 0x8b969
0x0000000000124fc7 : test edx, edx ; jne 0x124fd5 ; ret
0x0000000000124fe7 : test edx, edx ; jne 0x124ff5 ; ret
0x000000000012503a : test edx, edx ; jne 0x125045 ; ret
0x000000000012505a : test edx, edx ; jne 0x125065 ; ret
0x000000000012507a : test edx, edx ; jne 0x125085 ; ret
0x000000000012509a : test edx, edx ; jne 0x1250a5 ; ret
0x0000000000138ad7 : test edx, edx ; jne 0x138ae5 ; ret
0x0000000000138af7 : test edx, edx ; jne 0x138b05 ; ret
0x0000000000138b4e : test edx, edx ; jne 0x138b5d ; ret
0x0000000000138b7e : test edx, edx ; jne 0x138b8d ; ret
0x0000000000138bae : test edx, edx ; jne 0x138bbd ; ret
0x0000000000138bde : test edx, edx ; jne 0x138bed ; ret
0x000000000008caf7 : test edx, edx ; jne 0x8cb05 ; ret
0x000000000008cb17 : test edx, edx ; jne 0x8cb25 ; ret
0x000000000008cfe7 : test edx, edx ; jne 0x8cff5 ; ret
0x000000000008d007 : test edx, edx ; jne 0x8d015 ; ret
0x00000000000a244b : test edx, edx ; jne 0xa2440 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a7888 : test edx, edx ; jne 0xa7885 ; ret
0x00000000000a78d8 : test edx, edx ; jne 0xa78d5 ; ret
0x00000000000d28ca : test edx, edx ; jne 0xd28d5 ; ret
0x00000000000d28ea : test edx, edx ; jne 0xd28f5 ; ret
0x00000000000d290a : test edx, edx ; jne 0xd2915 ; ret
0x00000000000d292a : test edx, edx ; jne 0xd2935 ; ret
0x00000000000d596e : test edx, edx ; jne 0xd597d ; ret
0x00000000000d599e : test edx, edx ; jne 0xd59ad ; ret
0x00000000000d59ce : test edx, edx ; jne 0xd59dd ; ret
0x00000000000d59fe : test edx, edx ; jne 0xd5a0d ; ret
0x00000000000d6f0b : test edx, edx ; jne 0xd6f1d ; ret
0x000000000009292e : test edx, edx ; jns 0x9290e ; ret
0x000000000009137c : test edx, edx ; mov rbx, r8 ; jne 0x913a7 ; call rbx
0x0000000000112fc9 : test esi, edi ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000052e6 : test esi, edi ; ret 0xb232
0x000000000012ce4f : test esi, esi ; je 0x12ce15 ; jmp 0x12ce25
0x00000000000afebc : test esi, esi ; je 0xafed1 ; mov rdi, r14 ; call 0x8c109
0x0000000000125007 : test esi, esi ; jne 0x125015 ; ret
0x0000000000138b19 : test esi, esi ; jne 0x138b25 ; ret
0x000000000008cb37 : test esi, esi ; jne 0x8cb45 ; ret
0x000000000008d029 : test esi, esi ; jne 0x8d035 ; ret
0x0000000000144121 : test esi, esp ; jmp rsp
0x000000000012ce4e : test r14, r14 ; je 0x12ce16 ; jmp 0x12ce26
0x00000000000923e5 : test r9d, r9d ; cmovne eax, edx ; ret
0x0000000000104b6b : test rax, rax ; je 0x104b7d ; pop rbx ; ret
0x000000000010547b : test rax, rax ; je 0x10548d ; pop rbx ; ret
0x00000000001054cb : test rax, rax ; je 0x1054dd ; pop rbx ; ret
0x000000000010551b : test rax, rax ; je 0x10552d ; pop rbx ; ret
0x000000000010597b : test rax, rax ; je 0x10598d ; pop rbx ; ret
0x00000000001059cb : test rax, rax ; je 0x1059dd ; pop rbx ; ret
0x0000000000105a1b : test rax, rax ; je 0x105a2d ; pop rbx ; ret
0x0000000000105ffb : test rax, rax ; je 0x10600d ; pop rbx ; ret
0x00000000001065db : test rax, rax ; je 0x1065ed ; pop rbx ; ret
0x000000000010662b : test rax, rax ; je 0x10663d ; pop rbx ; ret
0x000000000010667b : test rax, rax ; je 0x10668d ; pop rbx ; ret
0x000000000010685b : test rax, rax ; je 0x10686d ; pop rbx ; ret
0x00000000001068ab : test rax, rax ; je 0x1068bd ; pop rbx ; ret
0x00000000001068fb : test rax, rax ; je 0x10690d ; pop rbx ; ret
0x000000000012abcb : test rax, rax ; je 0x12abdd ; pop rbx ; ret
0x000000000012b28b : test rax, rax ; je 0x12b29d ; pop rbx ; ret
0x000000000012b2db : test rax, rax ; je 0x12b2ed ; pop rbx ; ret
0x000000000012b32b : test rax, rax ; je 0x12b33d ; pop rbx ; ret
0x000000000012b7ab : test rax, rax ; je 0x12b7bd ; pop rbx ; ret
0x000000000012b7fb : test rax, rax ; je 0x12b80d ; pop rbx ; ret
0x000000000012b84b : test rax, rax ; je 0x12b85d ; pop rbx ; ret
0x000000000012be5b : test rax, rax ; je 0x12be6d ; pop rbx ; ret
0x000000000012c46b : test rax, rax ; je 0x12c47d ; pop rbx ; ret
0x000000000012c4bb : test rax, rax ; je 0x12c4cd ; pop rbx ; ret
0x000000000012c50b : test rax, rax ; je 0x12c51d ; pop rbx ; ret
0x000000000012c68b : test rax, rax ; je 0x12c69d ; pop rbx ; ret
0x000000000012c6db : test rax, rax ; je 0x12c6ed ; pop rbx ; ret
0x000000000012c72b : test rax, rax ; je 0x12c73d ; pop rbx ; ret
0x000000000008c98e : test rax, rax ; je 0x8c9a6 ; pop rbp ; jmp rax
0x000000000008c9df : test rax, rax ; je 0x8c9f6 ; pop rbp ; jmp rax
0x000000000008fa2e : test rax, rax ; je 0x8fa40 ; mov rdi, rbx ; call rax
0x000000000008faca : test rax, rax ; je 0x8fad9 ; call rax
0x000000000008fe95 : test rax, rax ; je 0x8fea7 ; mov rdi, rbx ; call rax
0x0000000000090498 : test rax, rax ; je 0x904a6 ; pop rbx ; ret
0x00000000000904a5 : test rax, rax ; je 0x904b3 ; call rax
0x0000000000090515 : test rax, rax ; je 0x9050a ; call rax
0x00000000000905ad : test rax, rax ; je 0x905bb ; call rax
0x00000000000a1b15 : test rax, rax ; je 0xa1b46 ; pop rbx ; ret
0x00000000000a5bb7 : test rax, rax ; je 0xa5bc5 ; jmp rax
0x00000000000a5d9c : test rax, rax ; je 0xa5db5 ; jmp rax
0x00000000000be39b : test rax, rax ; je 0xbe3ad ; mov rdi, r14 ; call rax
0x00000000000be44b : test rax, rax ; je 0xbe45d ; mov rdi, r14 ; call rax
0x00000000000be502 : test rax, rax ; je 0xbe514 ; mov rdi, r14 ; call rax
0x00000000000be5c2 : test rax, rax ; je 0xbe5d4 ; mov rdi, r14 ; call rax
0x00000000000bf5ee : test rax, rax ; je 0xbf600 ; mov rdi, r12 ; call rax
0x00000000000bf6bb : test rax, rax ; je 0xbf6cd ; mov rdi, r12 ; call rax
0x00000000000bf77e : test rax, rax ; je 0xbf790 ; mov rdi, r12 ; call rax
0x00000000000bf84b : test rax, rax ; je 0xbf85d ; mov rdi, r12 ; call rax
0x00000000000bfe7e : test rax, rax ; je 0xbfe90 ; mov rdi, rbx ; call rax
0x00000000000bff5e : test rax, rax ; je 0xbff70 ; mov rdi, rbx ; call rax
0x00000000000c107d : test rax, rax ; je 0xc108f ; mov rdi, rbx ; call rax
0x00000000000c121d : test rax, rax ; je 0xc122f ; mov rdi, rbx ; call rax
0x00000000000c160c : test rax, rax ; je 0xc161e ; mov rdi, r13 ; call rax
0x00000000000c179c : test rax, rax ; je 0xc17ae ; mov rdi, r13 ; call rax
0x00000000000c364b : test rax, rax ; je 0xc365d ; mov rdi, r12 ; call rax
0x00000000000c394b : test rax, rax ; je 0xc395d ; mov rdi, r12 ; call rax
0x00000000000c3bd1 : test rax, rax ; je 0xc3be3 ; mov rdi, r14 ; call rax
0x00000000000c3c88 : test rax, rax ; je 0xc3c9a ; mov rdi, r14 ; call rax
0x00000000000c3e4a : test rax, rax ; je 0xc3e5c ; mov rdi, r14 ; call rax
0x00000000000c3f11 : test rax, rax ; je 0xc3f23 ; mov rdi, r14 ; call rax
0x00000000000c515c : test rax, rax ; je 0xc516e ; mov rdi, rbx ; call rax
0x00000000000c5217 : test rax, rax ; je 0xc5229 ; mov rdi, rbx ; call rax
0x00000000000c5d87 : test rax, rax ; je 0xc5d99 ; mov rdi, rbp ; call rax
0x00000000000c622c : test rax, rax ; je 0xc623e ; mov rdi, r14 ; call rax
0x00000000000c637c : test rax, rax ; je 0xc638e ; mov rdi, r14 ; call rax
0x00000000000de07b : test rax, rax ; je 0xde08d ; pop rbx ; ret
0x00000000000de0cb : test rax, rax ; je 0xde0dd ; pop rbx ; ret
0x00000000000de11b : test rax, rax ; je 0xde12d ; pop rbx ; ret
0x00000000000de16b : test rax, rax ; je 0xde17d ; pop rbx ; ret
0x00000000000de1bb : test rax, rax ; je 0xde1cd ; pop rbx ; ret
0x00000000000de20b : test rax, rax ; je 0xde21d ; pop rbx ; ret
0x00000000000de25b : test rax, rax ; je 0xde26d ; pop rbx ; ret
0x00000000000de2ab : test rax, rax ; je 0xde2bd ; pop rbx ; ret
0x00000000000e8cab : test rax, rax ; je 0xe8cbd ; pop rbx ; ret
0x00000000000e8cfb : test rax, rax ; je 0xe8d0d ; pop rbx ; ret
0x00000000000e8d4b : test rax, rax ; je 0xe8d5d ; pop rbx ; ret
0x00000000000e8d9b : test rax, rax ; je 0xe8dad ; pop rbx ; ret
0x00000000000e8deb : test rax, rax ; je 0xe8dfd ; pop rbx ; ret
0x00000000000e8e3b : test rax, rax ; je 0xe8e4d ; pop rbx ; ret
0x00000000000e8e8b : test rax, rax ; je 0xe8e9d ; pop rbx ; ret
0x00000000000e8edb : test rax, rax ; je 0xe8eed ; pop rbx ; ret
0x00000000000f5dad : test rax, rax ; je 0xf5dbe ; pop rbx ; ret
0x00000000000f5ddd : test rax, rax ; je 0xf5dee ; pop rbx ; ret
0x00000000000f5e0d : test rax, rax ; je 0xf5e1e ; pop rbx ; ret
0x00000000000f867d : test rax, rax ; je 0xf868e ; pop rbx ; ret
0x00000000000f86ad : test rax, rax ; je 0xf86be ; pop rbx ; ret
0x00000000000f86dd : test rax, rax ; je 0xf86ee ; pop rbx ; ret
0x00000000000b0d99 : test rax, rax ; jne 0xb0daa ; mov byte ptr [rbx], 0 ; pop rbx ; ret
0x00000000000b77ff : test rax, rax ; jne 0xb77fe ; ret
0x00000000000b788f : test rax, rax ; jne 0xb788e ; ret
0x00000000000b28de : test rax, rax ; mov qword ptr [rbx], rax ; je 0xb28f1 ; pop rbx ; ret
0x00000000000de300 : test rax, rax ; setne al ; pop rbx ; ret
0x00000000000baef7 : test rbx, rbx ; jne 0xbaef1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b5d09 : test rbx, rbx ; mov rax, rbx ; jne 0xb5d09 ; pop rbx ; ret
0x00000000000921b5 : test rcx, rcx ; jne 0x9217c ; xor eax, eax ; ret
0x000000000009c045 : test rcx, rcx ; jne 0x9c036 ; ret
0x00000000000af6c6 : test rdi, rdi ; je 0xaf6db ; call 0x8c107
0x00000000000af6df : test rdi, rdi ; je 0xaf6f4 ; call 0x8c107
0x00000000000929e8 : test rdi, rdi ; jne 0x929df ; xor eax, eax ; ret
0x00000000000be223 : test rdx, rdx ; je 0xbe235 ; mov rdi, rbx ; call rdx
0x00000000000be324 : test rdx, rdx ; je 0xbe336 ; mov rdi, rbx ; call rdx
0x00000000000be3d3 : test rdx, rdx ; je 0xbe3e5 ; mov rdi, r14 ; call rdx
0x00000000000be483 : test rdx, rdx ; je 0xbe495 ; mov rdi, r14 ; call rdx
0x00000000000be53a : test rdx, rdx ; je 0xbe54c ; mov rdi, r14 ; call rdx
0x00000000000be5fa : test rdx, rdx ; je 0xbe60c ; mov rdi, r14 ; call rdx
0x00000000000c3759 : test rdx, rdx ; je 0xc376b ; mov rdi, r12 ; call rdx
0x00000000000c3a59 : test rdx, rdx ; je 0xc3a6b ; mov rdi, r12 ; call rdx
0x00000000000c3b51 : test rdx, rdx ; je 0xc3b63 ; mov rdi, rbx ; call rdx
0x00000000000c3c09 : test rdx, rdx ; je 0xc3c1b ; mov rdi, r14 ; call rdx
0x00000000000c3cc0 : test rdx, rdx ; je 0xc3cd2 ; mov rdi, r14 ; call rdx
0x00000000000c3dbf : test rdx, rdx ; je 0xc3dd1 ; mov rdi, rbx ; call rdx
0x00000000000c3e82 : test rdx, rdx ; je 0xc3e94 ; mov rdi, r14 ; call rdx
0x00000000000c3f49 : test rdx, rdx ; je 0xc3f5b ; mov rdi, r14 ; call rdx
0x0000000000124fc6 : test rdx, rdx ; jne 0x124fd6 ; ret
0x0000000000124fe6 : test rdx, rdx ; jne 0x124ff6 ; ret
0x0000000000125039 : test rdx, rdx ; jne 0x125046 ; ret
0x0000000000125059 : test rdx, rdx ; jne 0x125066 ; ret
0x0000000000125079 : test rdx, rdx ; jne 0x125086 ; ret
0x0000000000125099 : test rdx, rdx ; jne 0x1250a6 ; ret
0x0000000000138ad6 : test rdx, rdx ; jne 0x138ae6 ; ret
0x0000000000138af6 : test rdx, rdx ; jne 0x138b06 ; ret
0x0000000000138b4d : test rdx, rdx ; jne 0x138b5e ; ret
0x0000000000138b7d : test rdx, rdx ; jne 0x138b8e ; ret
0x0000000000138bad : test rdx, rdx ; jne 0x138bbe ; ret
0x0000000000138bdd : test rdx, rdx ; jne 0x138bee ; ret
0x000000000008caf6 : test rdx, rdx ; jne 0x8cb06 ; ret
0x000000000008cb16 : test rdx, rdx ; jne 0x8cb26 ; ret
0x000000000008cfe6 : test rdx, rdx ; jne 0x8cff6 ; ret
0x000000000008d006 : test rdx, rdx ; jne 0x8d016 ; ret
0x00000000000a244a : test rdx, rdx ; jne 0xa2441 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a7887 : test rdx, rdx ; jne 0xa7886 ; ret
0x00000000000a78d7 : test rdx, rdx ; jne 0xa78d6 ; ret
0x00000000000d28c9 : test rdx, rdx ; jne 0xd28d6 ; ret
0x00000000000d28e9 : test rdx, rdx ; jne 0xd28f6 ; ret
0x00000000000d2909 : test rdx, rdx ; jne 0xd2916 ; ret
0x00000000000d2929 : test rdx, rdx ; jne 0xd2936 ; ret
0x00000000000d596d : test rdx, rdx ; jne 0xd597e ; ret
0x00000000000d599d : test rdx, rdx ; jne 0xd59ae ; ret
0x00000000000d59cd : test rdx, rdx ; jne 0xd59de ; ret
0x00000000000d59fd : test rdx, rdx ; jne 0xd5a0e ; ret
0x00000000000d6f0a : test rdx, rdx ; jne 0xd6f1e ; ret
0x000000000009137b : test rdx, rdx ; mov rbx, r8 ; jne 0x913a8 ; call rbx
0x0000000000125006 : test rsi, rsi ; jne 0x125016 ; ret
0x0000000000138b18 : test rsi, rsi ; jne 0x138b26 ; ret
0x000000000008cb36 : test rsi, rsi ; jne 0x8cb46 ; ret
0x000000000008d028 : test rsi, rsi ; jne 0x8d036 ; ret
0x000000000001de36 : verr ax ; ret
0x0000000000025e8e : verr bp ; ret 0x13
0x000000000001442e : verr bx ; ret 0x13
0x0000000000023b06 : verw ax ; ret 0x13
0x00000000000261a6 : verw si ; ret 0x13
0x00000000000147be : verw sp ; ret 0x13
0x00000000000d34a8 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; ret
0x000000000015db14 : vpshufb xmm9, xmm15, xmmword ptr [rax] ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x00000000000d45e7 : vpsubq ymm15, ymm6, ymm7 ; add rsp, 8 ; ret
0x000000000009085c : wait ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7a2d080e], cl ; ret 0x850f
0x00000000001479a5 : wait ; add dword ptr [rax], eax ; in al, 0x50 ; stc ; call rsp
0x00000000001654b5 : wait ; add dword ptr [rax], eax ; js 0x165444 ; stc ; call qword ptr [rax]
0x0000000000006adb : wait ; and byte ptr es:[r8 + 0x1a], r12b ; push rsi ; clc ; retf
0x0000000000173fad : wait ; and dword ptr [rcx], eax ; sbb esi, dword ptr [rsi + 5] ; retf 3
0x0000000000178d69 : wait ; and eax, 0x5451b01 ; in eax, dx ; add dword ptr [rcx], eax ; retf 0x501
0x000000000000769a : wait ; call rdi
0x00000000000e2159 : wait ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000014178 : wait ; ret 0x13
0x000000000000831f : wait ; ret 0x7cdd
0x00000000000a1583 : wait ; retf
0x0000000000099b00 : wait ; retf -1
0x00000000000decc1 : wait ; retf -6
0x00000000000a1d64 : xadd dword ptr [rbx], eax ; cmp eax, 1 ; je 0xa1d85 ; pop rbx ; ret
0x0000000000102700 : xadd dword ptr [rdi + 0x10], eax ; test eax, eax ; jle 0x102726 ; ret
0x0000000000128740 : xadd dword ptr [rdi + 0x10], eax ; test eax, eax ; jle 0x128766 ; ret
0x0000000000128910 : xadd dword ptr [rdi + 0x10], eax ; test eax, eax ; jle 0x128936 ; ret
0x00000000000d3740 : xadd dword ptr [rdi + 0x10], eax ; test eax, eax ; jle 0xd3766 ; ret
0x00000000000d6880 : xadd dword ptr [rdi + 0x10], eax ; test eax, eax ; jle 0xd68a6 ; ret
0x00000000000adea3 : xadd dword ptr [rdi], eax ; ret
0x00000000000a0d27 : xadd dword ptr [rdx], eax ; cmp eax, 2 ; je 0xa0d4d ; ret
0x00000000000050e2 : xchg ah, dh ; test byte ptr [rsi + rdi - 0x24], bl ; sub dword ptr [rsi - 0x5d], esp ; retf
0x000000000016d611 : xchg bl, bh ; call qword ptr [rdx]
0x0000000000148d49 : xchg bl, bh ; call rsp
0x0000000000153f4d : xchg byte ptr [rax], al ; add al, al ; sub dh, dh ; call qword ptr [rdx]
0x0000000000153ea5 : xchg byte ptr [rax], al ; add al, bh ; sub esi, esi ; call qword ptr [rdx]
0x0000000000106d53 : xchg byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000da996 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000126605 : xchg byte ptr [rcx], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001588c0 : xchg byte ptr [rcx], bh ; jmp qword ptr [rdi]
0x00000000000c1ca6 : xchg byte ptr [rdi - 4], dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000008db65 : xchg byte ptr [rdi], al ; ret
0x000000000014a31d : xchg byte ptr [rdx], al ; add ah, al ; add esi, edi ; call rsp
0x000000000000869f : xchg byte ptr [rdx], cl ; jo 0x8641 ; mov dl, 0x5a ; leave ; xchg eax, edi ; retf -0x547d
0x00000000000ff625 : xchg byte ptr [rsi - 0x75000000], dl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000165649 : xchg cl, bh ; jmp qword ptr [rdi]
0x00000000000dada6 : xchg dh, ah ; cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000104405 : xchg dword ptr [rax + 1], ecx ; ret
0x00000000000f16a5 : xchg dword ptr [rax - 0xa000000], ebx ; ret 0x4808
0x0000000000128c05 : xchg dword ptr [rax], ebx ; ret
0x0000000000007ab7 : xchg dword ptr [rax], edi ; std ; lea ebp, dword ptr [rdx] ; push rax ; scasd eax, dword ptr [rdi] ; retf
0x0000000000007722 : xchg dword ptr [rax], esi ; retf
0x00000000000a4cc9 : xchg dword ptr [rbx + rax - 0x76b80000], esi ; ret 0x894c
0x00000000000bd145 : xchg dword ptr [rbx - 0x76b7ffd4], ebp ; ret
0x0000000000003e73 : xchg dword ptr [rcx + rbp*4], eax ; cmovno edx, dword ptr [rsi + rsi*4] ; retf -0x4fea
0x00000000001264e9 : xchg dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000163fa5 : xchg dword ptr [rcx], eax ; add byte ptr [rax], bl ; push rdx ; stc ; jmp qword ptr [rax]
0x0000000000163f75 : xchg dword ptr [rcx], eax ; add byte ptr [rax], cl ; push rdx ; stc ; call qword ptr [rbx]
0x0000000000163f8d : xchg dword ptr [rcx], eax ; add byte ptr [rax], dl ; push rdx ; stc ; call qword ptr [rbx]
0x00000000000a4f90 : xchg dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000005a61 : xchg dword ptr [rdi + 0x31], edi ; retf -0x23b2
0x00000000000b2fc5 : xchg dword ptr [rdi - 3], esi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000a4dcf : xchg dword ptr [rdx + rax], edx ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000172ae2 : xchg dword ptr [rdx + rbp], eax ; retf
0x000000000008fceb : xchg dword ptr [rdx], eax ; ret
0x0000000000090464 : xchg dword ptr [rip + 0x2f47b6], eax ; ret
0x0000000000099de5 : xchg dword ptr [rip - 0x1d170000], edx ; ret
0x0000000000114e25 : xchg dword ptr [rsi - 9], ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000114625 : xchg dword ptr [rsi - 9], esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000014a74d : xchg eax, ebp ; add al, byte ptr [rax] ; push rsp ; sbb al, 0xfe ; jmp rsp
0x00000000001448bd : xchg eax, ebp ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf -0xc
0x0000000000154e4d : xchg eax, ebp ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xa], cl ; call qword ptr [rbx]
0x000000000014781d : xchg eax, ebp ; add dword ptr [rax], eax ; hlt ; stc ; call rsp
0x000000000000839c : xchg eax, ebp ; cmp bl, byte ptr [rbp - 0x12e9b167] ; retf 0x577a
0x0000000000005c53 : xchg eax, ebp ; jno 0x5c0c ; retf
0x00000000000b20a3 : xchg eax, ebp ; leave ; or byte ptr [rax], al ; ret
0x000000000000861c : xchg eax, ebp ; neg dword ptr [rsi] ; ret
0x000000000009bca2 : xchg eax, ebp ; ret
0x0000000000139a21 : xchg eax, ebp ; ret 0x2141
0x00000000000c73d1 : xchg eax, ebp ; ret 0x2144
0x00000000000b4b2b : xchg eax, ebp ; ret 0x3941
0x0000000000091f76 : xchg eax, ebp ; ret 0x43e9
0x00000000000cb9ab : xchg eax, ebp ; ret 0x8341
0x00000000000ef2cb : xchg eax, ebp ; ret 0x83c6
0x00000000000f015b : xchg eax, ebp ; ret 0x8948
0x00000000000060ec : xchg eax, ebp ; ret 0x9d2e
0x00000000000b5167 : xchg eax, ebp ; ret 0xc539
0x0000000000003b37 : xchg eax, ebp ; ret 0xd002
0x00000000000a163d : xchg eax, ebp ; ret 0xd108
0x0000000000105997 : xchg eax, ebp ; retf
0x0000000000003759 : xchg eax, ebp ; sbb dword ptr [rdi + 0x4c], edx ; ret 0x50f3
0x000000000016e381 : xchg eax, ebp ; sti ; call qword ptr [rdi]
0x0000000000007204 : xchg eax, ebp ; sub dword ptr ss:[rbp - 0x63], edi ; ret
0x0000000000000b58 : xchg eax, ebx ; adc eax, esp ; ret 0x1400
0x00000000000043fe : xchg eax, ebx ; cdq ; ret 0x5414
0x0000000000004af7 : xchg eax, ebx ; jbe 0x4b4a ; retf -0x10e2
0x000000000008e7b9 : xchg eax, ebx ; mov edi, 0x8348ffff ; ret 0x4801
0x00000000000b01af : xchg eax, ebx ; ret
0x00000000000b567e : xchg eax, ebx ; ret 0x8548
0x00000000000b494a : xchg eax, ebx ; ret 0x854d
0x00000000000070c2 : xchg eax, ebx ; retf -0x5115
0x00000000000080f6 : xchg eax, ebx ; retf 0x42b0
0x0000000000007fb0 : xchg eax, ebx ; sub edx, dword ptr [rsi + 0x27] ; ret 0x84e7
0x0000000000091289 : xchg eax, ebx ; test eax, 0x8948ffff ; ret
0x0000000000174b73 : xchg eax, ecx ; add al, 0x10 ; add byte ptr [rax], al ; ret
0x00000000001447c5 : xchg eax, ecx ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000009597d : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x0000000000149889 : xchg eax, ecx ; cld ; call rsp
0x00000000000bc59e : xchg eax, ecx ; nop ; mov rdi, rbx ; call rax
0x000000000012486c : xchg eax, ecx ; nop dword ptr [rax] ; call rdx
0x00000000001154eb : xchg eax, ecx ; push rdi ; idiv edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000003dc7 : xchg eax, ecx ; ret
0x0000000000006ffa : xchg eax, ecx ; sbb al, 0xba ; cmp dword ptr [rdi], -0x77 ; ret
0x00000000000048f7 : xchg eax, ecx ; stosb byte ptr [rdi], al ; ret
0x00000000000b9203 : xchg eax, edi ; adc byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000000bdfe5 : xchg eax, edi ; add byte ptr [rax], 0 ; add rsp, 0x28 ; ret
0x0000000000154f8d : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi - 0xa], cl ; call qword ptr [rdx]
0x0000000000147895 : xchg eax, edi ; add dword ptr [rax], eax ; stc ; jmp rsp
0x00000000000960ad : xchg eax, edi ; add rax, rdi ; jmp rax
0x00000000000c1aa3 : xchg eax, edi ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000144bc1 : xchg eax, edi ; cmc ; call rsp
0x0000000000007feb : xchg eax, edi ; fsub st(6), st(0) ; scasb al, byte ptr [rdi] ; ret
0x00000000001442b1 : xchg eax, edi ; hlt ; call rsp
0x0000000000004ee1 : xchg eax, edi ; leave ; pop rcx ; clc ; retf 0x1b41
0x0000000000115215 : xchg eax, edi ; push 0xf7 ; dec dword ptr [rax - 0x77] ; ret
0x000000000009b820 : xchg eax, edi ; ret 0x920f
0x00000000000086a6 : xchg eax, edi ; retf -0x547d
0x00000000000059f6 : xchg eax, edi ; retf 0x31bf
0x0000000000005efa : xchg eax, edi ; retf 0x4c15
0x0000000000005d37 : xchg eax, edi ; sbb ecx, esi ; retf 0x1e75
0x000000000016e641 : xchg eax, edi ; sti ; call qword ptr [rbx]
0x000000000016e4a1 : xchg eax, edi ; sti ; call qword ptr [rdi]
0x0000000000176251 : xchg eax, edx ; add al, byte ptr [rax] ; ret
0x00000000000ceec7 : xchg eax, edx ; lea rsi, qword ptr [rbp - 0x21] ; call 0x8b967
0x000000000000355f : xchg eax, edx ; mov al, 0xb7 ; retf
0x000000000006fc88 : xchg eax, edx ; ret 0x13
0x000000000010ee06 : xchg eax, edx ; ret 0x149
0x0000000000110214 : xchg eax, edx ; ret 0x5408
0x000000000010e38a : xchg eax, edx ; retf
0x00000000000082ae : xchg eax, edx ; sar eax, -0x2e ; ret 0xed0c
0x0000000000148d99 : xchg eax, edx ; sti ; jmp rsp
0x000000000014a785 : xchg eax, esi ; add al, byte ptr [rax] ; and sil, r15b ; jmp rsp
0x0000000000154e65 : xchg eax, esi ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rdx]
0x00000000000de804 : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000007212 : xchg eax, esi ; cwde ; xor al, dh ; insd dword ptr [rdi], dx ; ret
0x00000000000086a2 : xchg eax, esi ; mov dl, 0x5a ; leave ; xchg eax, edi ; retf -0x547d
0x00000000000051e4 : xchg eax, esi ; or al, 0xf4 ; shl byte ptr [rdx + 0x2f], 1 ; ret 0x5749
0x000000000010d716 : xchg eax, esi ; ret
0x000000000006fc70 : xchg eax, esi ; ret 0x13
0x0000000000112b4c : xchg eax, esi ; ret 0x30e9
0x0000000000007834 : xchg eax, esi ; ret 0x46a4
0x0000000000094b77 : xchg eax, esi ; ret 0x8966
0x0000000000007de4 : xchg eax, esi ; ret 0xb26f
0x000000000012d196 : xchg eax, esi ; ret 0xfff5
0x000000000008fcb6 : xchg eax, esi ; ret 0xffff
0x00000000000067b1 : xchg eax, esi ; retf
0x000000000000a600 : xchg eax, esi ; retf 1
0x000000000000744c : xchg eax, esi ; stc ; jp 0x73f0 ; retf 0x6fab
0x000000000014cde4 : xchg eax, esp ; adc eax, 0x2de80000 ; hlt ; call qword ptr [rcx]
0x000000000014bce4 : xchg eax, esp ; add al, 0 ; add byte ptr [rax + 0x1a], ch ; hlt ; call qword ptr [rdi]
0x000000000014fde4 : xchg eax, esp ; add byte ptr [r8], r8b ; cmp byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x0000000000145964 : xchg eax, esp ; add byte ptr [rax], al ; adc dil, r14b ; jmp rsp
0x000000000014489d : xchg eax, esp ; add byte ptr [rax], al ; and al, 0xca ; hlt ; call rsp
0x00000000001448a5 : xchg eax, esp ; add byte ptr [rax], al ; retf -0xc
0x0000000000163b24 : xchg eax, esp ; add dword ptr [rcx], 0xf9472800 ; jmp rdi
0x0000000000150fc1 : xchg eax, esp ; cmc ; call qword ptr [rdi]
0x000000000014f4e4 : xchg eax, esp ; cmp al, 0 ; add byte ptr [rax], ch ; and ch, dh ; call qword ptr [rdi]
0x000000000016f2e4 : xchg eax, esp ; cmp al, byte ptr [rdx] ; add byte ptr [rax], bh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp qword ptr [rdx]
0x0000000000144300 : xchg eax, esp ; cwde ; hlt ; jmp rsp
0x00000000001451b4 : xchg eax, esp ; enter 0, 0x74 ; xor dh, dh ; call rsp
0x0000000000144209 : xchg eax, esp ; hlt ; call rsp
0x0000000000145250 : xchg eax, esp ; idiv r15b ; xchg eax, esp ; retf
0x000000000014877c : xchg eax, esp ; int1 ; add dword ptr [rax], eax ; xor al, 0x22 ; sti ; jmp rsp
0x0000000000162e24 : xchg eax, esp ; je 0x162e2f ; add byte ptr [rax + 0x26], ch ; stc ; call rdi
0x00000000001445a8 : xchg eax, esp ; lodsb al, byte ptr [rsi] ; hlt ; call rsp
0x00000000000b3730 : xchg eax, esp ; mov ch, 8 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000146c60 : xchg eax, esp ; mov cl, 0xf8 ; jmp rsp
0x0000000000144148 : xchg eax, esp ; mov esp, esi ; call rsp
0x00000000001444e0 : xchg eax, esp ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp rsp
0x0000000000148b70 : xchg eax, esp ; movsxd rdi, ebx ; jmp rsp
0x0000000000177631 : xchg eax, esp ; or byte ptr [rcx], al ; retf 0x501
0x00000000000fd588 : xchg eax, esp ; out 0xf8, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000149340 : xchg eax, esp ; out dx, al ; sti ; jmp rsp
0x00000000001716e4 : xchg eax, esp ; pop rsi ; add al, byte ptr [rax] ; pop rax ; jp 0x1716ee ; call qword ptr [rdx]
0x00000000000b8c3c : xchg eax, esp ; ret
0x0000000000157ae4 : xchg eax, esp ; ret 0
0x0000000000137b1f : xchg eax, esp ; ret 0x1f0f
0x0000000000106850 : xchg eax, esp ; ret 0x27
0x000000000011297e : xchg eax, esp ; ret 0x3145
0x0000000000107723 : xchg eax, esp ; ret 0x3948
0x00000000000da95f : xchg eax, esp ; ret 0x394c
0x00000000000958d2 : xchg eax, esp ; ret 0x453c
0x0000000000114520 : xchg eax, esp ; ret 0x50ff
0x00000000000eb8b9 : xchg eax, esp ; ret 0x841
0x0000000000137b9a : xchg eax, esp ; ret 0x8a74
0x0000000000094bc9 : xchg eax, esp ; ret 0x8b48
0x00000000000bbc95 : xchg eax, esp ; ret 0xb60f
0x0000000000007ad7 : xchg eax, esp ; ret 0xc9ac
0x00000000000a826a : xchg eax, esp ; ret 0xd001
0x000000000010ef61 : xchg eax, esp ; ret 0xd008
0x0000000000092995 : xchg eax, esp ; ret 0xd009
0x00000000000cf63c : xchg eax, esp ; ret 0xe9c1
0x0000000000148074 : xchg eax, esp ; ret 1
0x0000000000099638 : xchg eax, esp ; retf
0x00000000001481e4 : xchg eax, esp ; retf 1
0x00000000000bbfac : xchg eax, esp ; rol bl, 0x90 ; call rdx
0x00000000000ae379 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000165b61 : xchg eax, esp ; stc ; call qword ptr [rdx]
0x00000000000f0be0 : xchg eax, esp ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000149f38 : xchg eax, esp ; std ; jmp rsp
0x000000000016e271 : xchg eax, esp ; sti ; call qword ptr [rdi]
0x00000000000d5e18 : xchg eax, esp ; sti ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000014e8e4 : xchg eax, esp ; xor byte ptr [rax], al ; add byte ptr [rax - 0x1d], bl ; hlt ; jmp qword ptr [rax]
0x00000000000060eb : xchg eax, r13d ; ret 0x9d2e
0x00000000000be1e6 : xchg eax, r8d ; mov qword ptr [rbp - 0x68], rdx ; mov rdi, rbx ; call rcx
0x00000000000a16ee : xchg ebp, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000150da9 : xchg ebp, esi ; call qword ptr [rdi]
0x00000000000a17ad : xchg ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000165691 : xchg ecx, edi ; jmp qword ptr [rdi]
0x00000000000a4b96 : xchg edi, ecx ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000011344a : xchg edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x000000000015b151 : xchg edi, esi ; jmp qword ptr [rdx]
0x00000000000e3599 : xchg edx, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000014b051 : xchg esi, edi ; jmp rsp
0x000000000008fcea : xchg qword ptr [rdx], rax ; ret
0x0000000000090463 : xchg qword ptr [rip + 0x2f47b6], rax ; ret
0x0000000000176250 : xchg rax, r10 ; add al, byte ptr [rax] ; ret
0x00000000000080f5 : xchg rax, r11 ; retf 0x42b0
0x0000000000005c52 : xchg rax, r13 ; jno 0x5c0d ; retf
0x00000000000bdfa5 : xlatb ; add byte ptr [rax], 0 ; add rsp, 0x28 ; ret
0x00000000001583a4 : xlatb ; add byte ptr [rax], al ; add byte ptr [rdx + rdi], al ; retf 1
0x000000000008fd25 : xlatb ; call 0x8bf53
0x00000000000fe464 : xlatb ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000110e07 : xlatb ; cld ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x000000000000730e : xlatb ; in eax, dx ; retf -0xe8a
0x0000000000007ad4 : xlatb ; jb 0x7ad8 ; xchg eax, esp ; ret 0xc9ac
0x00000000000060e6 : xlatb ; je 0x60f2 ; xlatb ; xchg eax, r13d ; ret 0x9d2e
0x00000000000bc152 : xlatb ; jmp rax
0x0000000000107280 : xlatb ; mov rax, rdi ; sub rax, r8 ; ret
0x0000000000113ceb : xlatb ; nop dword ptr [rax] ; movzx eax, byte ptr [rdi] ; ret
0x0000000000172fae : xlatb ; or byte ptr [rax], al ; retf 0x507
0x0000000000004af2 : xlatb ; outsb dx, byte ptr ds:[rsi] ; mov dh, 0xdd ; xchg eax, ebx ; jbe 0x4b4f ; retf -0x10e2
0x0000000000104935 : xlatb ; push rcx ; clc ; lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000092931 : xlatb ; ret
0x0000000000004f26 : xlatb ; ret 0x7fff
0x0000000000005af9 : xlatb ; ret 0x9d0c
0x0000000000112215 : xlatb ; ret 0xfffc
0x00000000000089f8 : xlatb ; retf 0
0x0000000000167aa1 : xlatb ; stc ; call rax
0x00000000000ee544 : xlatb ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000060ea : xlatb ; xchg eax, r13d ; ret 0x9d2e
0x000000000014d091 : xor ah, dh ; call qword ptr [rbx]
0x000000000014d021 : xor ah, dh ; call qword ptr [rdi]
0x0000000000157b40 : xor al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x0000000000157c28 : xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 0
0x0000000000000cfd : xor al, 0x15 ; push rcx ; jo 0xc94 ; retf 0x101
0x000000000014ce84 : xor al, 0x16 ; add byte ptr [rax], al ; js 0x14cebf ; hlt ; call qword ptr [rcx]
0x0000000000005a46 : xor al, 0x19 ; jo 0x5a0a ; test al, bh ; shl byte ptr [rbx - 0x52], 1 ; ret 0x5245
0x0000000000148780 : xor al, 0x22 ; sti ; jmp rsp
0x0000000000146888 : xor al, 0x3a ; clc ; jmp rsp
0x000000000014f484 : xor al, 0x3c ; add byte ptr [rax], al ; or byte ptr [rax], ah ; cmc ; call qword ptr [rdi]
0x000000000014fc84 : xor al, 0x44 ; add byte ptr [rax], al ; test al, 0x58 ; cmc ; call qword ptr [rbx]
0x00000000000da37b : xor al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd2d5 : xor al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000000814a : xor al, 0x4d ; adc cl, cl ; retf -0x73c9
0x00000000001609c4 : xor al, 0x50 ; add dword ptr [rax], eax ; call 0xffffffffd2160254
0x0000000000148a78 : xor al, 0x5a ; sti ; call rsp
0x0000000000148ac0 : xor al, 0x5c ; sti ; jmp rsp
0x0000000000171584 : xor al, 0x5d ; add al, byte ptr [rax] ; mov byte ptr [rcx - 4], bh ; call qword ptr [rdi]
0x000000000013ae5d : xor al, 0x81 ; je 0x13ae55 ; ret
0x00000000000d630d : xor al, 0x81 ; je 0xd6305 ; ret
0x0000000000112fc8 : xor al, 0x85 ; idiv edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149ff0 : xor al, 0x8f ; std ; call rsp
0x00000000001442b0 : xor al, 0x97 ; hlt ; call rsp
0x0000000000167584 : xor al, 0xbd ; add dword ptr [rax], eax ; test al, 0xce ; stc ; jmp qword ptr [rbx]
0x0000000000168484 : xor al, 0xcc ; add dword ptr [rax], eax ; call 0x23167e9d
0x00000000001491b0 : xor al, 0xdf ; sti ; call rsp
0x00000000001491f0 : xor al, 0xe0 ; sti ; call rsp
0x000000000016a284 : xor al, 0xea ; add dword ptr [rax], eax ; or cl, cl ; cli ; jmp qword ptr [rdi]
0x0000000000149988 : xor al, 0xee ; cld ; jmp rsp
0x000000000014d499 : xor al, 0xf4 ; call qword ptr [rbx]
0x000000000014d4b1 : xor al, 0xf4 ; call qword ptr [rdi]
0x00000000001493d8 : xor al, 0xf7 ; sti ; call rsp
0x000000000010691d : xor al, 0xf8 ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001494a0 : xor al, 0xfd ; sti ; jmp rsp
0x000000000014a999 : xor al, 0xfe ; call rsp
0x000000000012714e : xor al, 1 ; je 0x127145 ; ret
0x00000000000d31ee : xor al, 1 ; je 0xd31e5 ; ret
0x0000000000000e94 : xor al, 2 ; test byte ptr [rcx], al ; test byte ptr [rcx], bl ; ret 0x2999
0x0000000000147f00 : xor al, 3 ; cli ; call rsp
0x000000000014bc84 : xor al, 4 ; add byte ptr [rax], al ; sbb sil, spl ; call qword ptr [rdi]
0x00000000001495b0 : xor al, 6 ; cld ; call rsp
0x0000000000106c8d : xor al, bh ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000077b9 : xor al, bl ; leave ; retf 0x54e7
0x00000000000197a8 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000013de33 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10], cl ; retf
0x0000000000125a6c : xor al, byte ptr [rax] ; pop rbx ; ret
0x0000000000022778 : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3cf
0x0000000000105b67 : xor al, ch ; ret
0x00000000000df68f : xor al, ch ; retf
0x000000000008d440 : xor al, ch ; retf -0x44
0x000000000012dc0f : xor al, ch ; stosd dword ptr [rdi], eax ; ret
0x00000000000decbf : xor al, ch ; wait ; retf -6
0x000000000016ad10 : xor al, dh ; cli ; call qword ptr [rcx]
0x0000000000007214 : xor al, dh ; insd dword ptr [rdi], dx ; ret
0x00000000001134f5 : xor bh, 0xff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106aad : xor bh, al ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000016b8b9 : xor bh, bl ; jmp rdx
0x00000000000b4079 : xor bh, byte ptr [rax + 1] ; ret
0x0000000000112af9 : xor bh, byte ptr [rax] ; ret 0x940f
0x00000000001476a1 : xor bh, cl ; call rsp
0x0000000000145c51 : xor bh, dh ; call rsp
0x00000000000a8a01 : xor bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000168a69 : xor bh, dl ; call rax
0x00000000000d8b5a : xor bl, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000119524 : xor bl, dh ; ret
0x00000000000c7693 : xor byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000008df37 : xor byte ptr [r15], cl ; adc dword ptr [rbx + 0x40], eax ; pop rbx ; ret
0x000000000011d14d : xor byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000000e585c : xor byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000b596c : xor byte ptr [rax + 0x39], cl ; retf -0x74b8
0x00000000000d849e : xor byte ptr [rax + 0x39], cl ; retf 0x5477
0x00000000000b40bd : xor byte ptr [rax + 1], bh ; ret
0x00000000000bf5de : xor byte ptr [rax + 9], cl ; ret
0x0000000000004e11 : xor byte ptr [rax - 0x21c58a89], bh ; ret
0x000000000008ec3a : xor byte ptr [rax - 0x75], cl ; clc ; nop ; pop rbx ; ret
0x00000000000fa91d : xor byte ptr [rax - 0x77], cl ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000001057ac : xor byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r15 ; call rax
0x000000000009e9ba : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x8ac56
0x0000000000119519 : xor byte ptr [rax - 0x77], cl ; sub byte ptr [r8 + 0x29], r9b ; ret 0x8948
0x00000000000ad733 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rdx - 0x18] ; ret 0xfde9
0x00000000000ad633 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rdx - 0x18] ; ret 0xfdea
0x000000000014e8e5 : xor byte ptr [rax], al ; add byte ptr [rax - 0x1d], bl ; hlt ; jmp qword ptr [rax]
0x000000000014e895 : xor byte ptr [rax], al ; add byte ptr [rax - 0x1e], bh ; hlt ; jmp qword ptr [rdx]
0x0000000000016d78 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x198
0x0000000000124db9 : xor byte ptr [rax], al ; ret
0x000000000014e894 : xor byte ptr [rax], r8b ; add byte ptr [rax - 0x1e], bh ; hlt ; jmp qword ptr [rdx]
0x00000000000bfafc : xor byte ptr [rbp - 0x76b70004], dh ; ret
0x0000000000092745 : xor byte ptr [rbx + 0x48014047], al ; mov eax, dword ptr [rax + rcx*8] ; ret
0x000000000009bdeb : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b4842 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001646e0 : xor byte ptr [rbx - 7], bl ; call rsp
0x000000000000596e : xor byte ptr [rbx], ah ; sbb byte ptr [rdx - 0x784f851b], bl ; ret 0x454a
0x0000000000152115 : xor byte ptr [rbx], al ; retf 0xa04
0x00000000001249d7 : xor byte ptr [rcx - 0x76eb8910], cl ; xor cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000000000014fdb0 : xor byte ptr [rcx - 0xb], bl ; call qword ptr [rbx]
0x000000000014fd90 : xor byte ptr [rcx - 0xb], bl ; call qword ptr [rdx]
0x0000000000106bec : xor byte ptr [rcx], 0xf8 ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000015e85d : xor byte ptr [rcx], al ; add byte ptr [rax], dh ; fdivr st(7), st(0) ; call rax
0x00000000000e7de9 : xor byte ptr [rcx], bh ; ret
0x0000000000106c3c : xor byte ptr [rcx], dh ; clc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000008df38 : xor byte ptr [rdi], cl ; adc dword ptr [rbx + 0x40], eax ; pop rbx ; ret
0x000000000012d4e6 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3948
0x00000000000da95d : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x394c
0x00000000001550f0 : xor byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000001550d0 : xor byte ptr [rdx - 0xa], dl ; call qword ptr [rdx]
0x000000000015a420 : xor byte ptr [rdx - 9], bh ; call qword ptr [rax]
0x000000000016e89d : xor byte ptr [rdx], al ; add byte ptr [rax - 0x68], dl ; sti ; call qword ptr [rdx]
0x000000000016e85d : xor byte ptr [rdx], al ; add byte ptr [rax - 0x68], dl ; sti ; jmp qword ptr [rax]
0x000000000014b980 : xor byte ptr [rdx], dl ; hlt ; jmp qword ptr [rax]
0x000000000016e89c : xor byte ptr [rdx], r8b ; add byte ptr [rax - 0x68], dl ; sti ; call qword ptr [rdx]
0x00000000000e903c : xor byte ptr [rip - 0x74b70006], cl ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000154e50 : xor byte ptr [rsi - 0xa], cl ; call qword ptr [rbx]
0x000000000015fee0 : xor byte ptr [rsi - 8], cl ; jmp qword ptr [rdx]
0x0000000000007061 : xor ch, byte ptr [rdx + 0x5a] ; jb 0x7054 ; retf
0x00000000000a375c : xor ch, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012c83c : xor ch, dl ; cmc ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000ffaec : xor cl, al ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000008f732 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000001249dd : xor cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000000bb606 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x0000000000124290 : xor cl, byte ptr [rax - 0x7d] ; sub byte ptr [r9], r8b ; ret
0x000000000012408d : xor cl, byte ptr [rdi] ; mov dh, 0 ; pop rbx ; ret
0x00000000000a3c7f : xor cl, byte ptr [rdi] ; sahf ; ret 0xd021
0x000000000014d3c9 : xor dh, ah ; call qword ptr [rbx]
0x000000000014d3b1 : xor dh, ah ; call qword ptr [rcx]
0x000000000014d1c9 : xor dh, ah ; call qword ptr [rdx]
0x00000000001451b9 : xor dh, dh ; call rsp
0x000000000016b8b8 : xor dil, bl ; jmp rdx
0x0000000000008617 : xor dword ptr [rax], eax ; ret 0x1431
0x0000000000000c35 : xor dword ptr [rax], ecx ; ret 0x3080
0x00000000000bb3bc : xor dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000008ca2a : xor dword ptr [rcx + 0x5d01002f], eax ; ret
0x00000000000a237b : xor dword ptr [rcx - 0x7cb70002], ebx ; ret 0x4801
0x00000000000ba8e8 : xor dword ptr [rdi + 8], eax ; mov rax, qword ptr [r8] ; ret
0x00000000000ba8c8 : xor dword ptr [rdi + 8], edx ; ret
0x000000000013c860 : xor dword ptr [rdx - 0xb], esp ; jmp qword ptr [rax]
0x0000000000000b4e : xor dword ptr [rip + 0x2448808], eax ; ret 0x4001
0x00000000000082a9 : xor dword ptr [rip - 0x6d3a4b14], eax ; sar eax, -0x2e ; ret 0xed0c
0x00000000000a3734 : xor dword ptr [rsi], ebp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cbbe6 : xor eax, 0x20c48348 ; pop rbx ; ret
0x000000000016b594 : xor eax, 0x4000004 ; ret
0x00000000001257a7 : xor eax, 0x48fff661 ; add esp, 8 ; ret
0x00000000000d7777 : xor eax, 0x48fffb24 ; add esp, 8 ; ret
0x000000000014957d : xor eax, 0x4a40002 ; cld ; jmp rsp
0x0000000000100a0a : xor eax, 0x8348028b ; ret 0x4804
0x00000000001166e6 : xor eax, 0x8948fff7 ; ret
0x00000000000b5f11 : xor eax, 0x8948fffd ; ret
0x00000000000a8634 : xor eax, 0x8948fffe ; ret
0x000000000011e592 : xor eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000146695 : xor eax, 0x8e40001 ; clc ; call rsp
0x000000000000869e : xor eax, 0x96700a86 ; mov dl, 0x5a ; leave ; xchg eax, edi ; retf -0x547d
0x000000000016eded : xor eax, 0x9f900002 ; sti ; jmp qword ptr [rdx]
0x000000000016ee05 : xor eax, 0x9fa80002 ; sti ; jmp qword ptr [rdx]
0x0000000000090ad0 : xor eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000008fbdd : xor eax, 1 ; ret
0x000000000016eba5 : xor eax, dword ptr [rdx] ; add byte ptr [rax - 0x66], bh ; sti ; call qword ptr [rdx]
0x00000000001494cd : xor eax, dword ptr [rdx] ; add byte ptr [rdi + rdi*8], dl ; sti ; call rsp
0x0000000000174502 : xor eax, dword ptr [rip + 0x5600000] ; retf
0x0000000000094e7a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd1f1 : xor eax, eax ; call 0x89434
0x00000000000bbf97 : xor eax, eax ; cmp qword ptr [rbx + 8], rdi ; je 0xbbfb1 ; pop rbx ; ret
0x00000000000bbdb0 : xor eax, eax ; cmp rdi, qword ptr [rsi + 8] ; je 0xbbdc9 ; ret
0x00000000000924ac : xor eax, eax ; mov qword ptr [r10 + 0x18], rdx ; ret
0x00000000000a5904 : xor eax, eax ; mov qword ptr [rdi + 0x10], rdx ; ret
0x00000000001038a4 : xor eax, eax ; mov word ptr [rdi + 0x48], ax ; ret
0x00000000000b2329 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000008e28d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000090a04 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009537c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008ec0b : xor eax, eax ; pop rbx ; ret
0x000000000008c484 : xor eax, eax ; rep stosd dword ptr [rdi], eax ; ret
0x000000000008f168 : xor eax, eax ; ret
0x000000000009292c : xor eax, eax ; test edx, edx ; jns 0x92910 ; ret
0x00000000000baa81 : xor eax, eax ; xor edx, edx ; add rsp, 0x18 ; ret
0x00000000000a2379 : xor eax, ebp ; xor dword ptr [rcx - 0x7cb70002], ebx ; ret 0x4801
0x0000000000007de2 : xor eax, ebx ; xchg eax, esi ; ret 0xb26f
0x0000000000106b9d : xor eax, edi ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001467c9 : xor eax, edi ; jmp rsp
0x00000000000bb710 : xor eax, edx ; pop rbx ; ret
0x00000000000903dd : xor eax, edx ; ret
0x00000000000d3573 : xor eax, esi ; sub al, byte ptr [rax] ; ret
0x00000000000068a1 : xor ebp, dword ptr [rdi + 0x7c1c5f69] ; retf 0x3122
0x0000000000105f58 : xor ebp, ebp ; jmp 0x105f2a
0x0000000000106538 : xor ebp, ebp ; jmp 0x10650a
0x00000000000955ad : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbfa9 : xor ebx, dword ptr [rbx + 0xf] ; xchg eax, esp ; rol bl, 0x90 ; call rdx
0x00000000000b22d0 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b2383 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000090f2c : xor ebx, ebx ; nop ; mov rdi, rbp ; call r12
0x000000000009057f : xor ecx, dword ptr [rax + 0x21] ; fmul dword ptr [rax + 0x29] ; ret 0x8548
0x00000000000b7b57 : xor ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000126491 : xor ecx, dword ptr [rax - 0x76b7ffff] ; ret 0x8348
0x0000000000095fd4 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x3101
0x00000000000b7495 : xor ecx, ecx ; mov rsi, rbx ; mov rdi, rbp ; call rax
0x00000000000cd61e : xor ecx, ecx ; xor edx, edx ; mov rdi, rbp ; call 0x8a0b9
0x0000000000163309 : xor ecx, edi ; inc dword ptr [rdi + 0x4000000] ; retf
0x00000000000f94de : xor edi, dword ptr [rcx] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001069bd : xor edi, eax ; dec dword ptr [rax - 0x75] ; or ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000146801 : xor edi, eax ; jmp rsp
0x0000000000149d39 : xor edi, ebp ; jmp rsp
0x0000000000135ed8 : xor edi, ebx ; inc dword ptr [rbp - 0x7c] ; in al, -0x77 ; ret
0x0000000000092a2a : xor edi, edi ; mov rax, rdi ; ret
0x00000000000e6603 : xor edi, edx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000145c99 : xor edi, esi ; call rsp
0x0000000000116aee : xor edi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000044c0 : xor edx, eax ; sbb dword ptr [rdx + 0x7e], 0x32ba1946 ; ret 0x5a81
0x00000000000baa83 : xor edx, edx ; add rsp, 0x18 ; ret
0x000000000011e5f2 : xor edx, edx ; jmp 0x8a814
0x00000000000e0caa : xor edx, edx ; mov byte ptr [rsp + 0x40], cl ; mov rdi, r13 ; call rax
0x00000000000925bc : xor edx, edx ; mov qword ptr [r10 + 0x48], rdx ; mov rax, rdx ; ret
0x0000000000092461 : xor edx, edx ; mov rax, r10 ; ret
0x0000000000092520 : xor edx, edx ; mov rax, rdx ; ret
0x00000000000cde99 : xor edx, edx ; mov rdi, r12 ; call 0x8a0b7
0x0000000000104d85 : xor edx, edx ; mov rdi, r12 ; call rax
0x00000000000de9b8 : xor edx, edx ; mov rdi, r13 ; call r8
0x00000000000de986 : xor edx, edx ; mov rdi, r13 ; call r9
0x00000000000e0bbd : xor edx, edx ; mov rdi, r13 ; call rax
0x00000000000df934 : xor edx, edx ; mov rdi, r13 ; call rcx
0x00000000000cd620 : xor edx, edx ; mov rdi, rbp ; call 0x8a0b7
0x000000000010a908 : xor edx, edx ; mov rdi, rbx ; call r8
0x000000000010a8ce : xor edx, edx ; mov rdi, rbx ; call r9
0x000000000010b654 : xor edx, edx ; mov rdi, rbx ; call rcx
0x00000000000dfa4e : xor edx, edx ; movsx esi, al ; mov rdi, r13 ; call rcx
0x000000000010b71d : xor edx, edx ; movsx esi, al ; mov rdi, rbx ; call rcx
0x000000000010d154 : xor edx, edx ; movsx esi, r12b ; mov rdi, rbx ; call rax
0x00000000000ee57c : xor edx, edx ; pop rbx ; jmp rax
0x000000000008fb9f : xor edx, edx ; ret
0x00000000000baa18 : xor edx, edx ; xor eax, eax ; ret
0x0000000000007693 : xor edx, esi ; cmpsb byte ptr ds:[rsi], byte ptr [rdi] ; int1 ; jle 0x7692 ; wait ; call rdi
0x0000000000106e4c : xor esi, dword ptr [rbp - 0x55] ; pop rbx ; pop rbp ; ret
0x00000000000d3773 : xor esi, ebp ; sub al, byte ptr [rax] ; jne 0xd3787 ; ret
0x0000000000116929 : xor esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000128b18 : xor esi, esi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e0fb2 : xor esi, esi ; mov r12d, 1 ; jmp 0xe0f90
0x00000000000e23f2 : xor esi, esi ; mov r12d, 1 ; jmp 0xe23d0
0x00000000000eb729 : xor esi, esi ; mov r12d, 1 ; jmp 0xeb707
0x00000000000ecb39 : xor esi, esi ; mov r12d, 1 ; jmp 0xecb17
0x000000000010d47e : xor esi, esi ; mov r13d, 1 ; jmp 0x10d45c
0x000000000010df1e : xor esi, esi ; mov r13d, 1 ; jmp 0x10defc
0x0000000000132bc9 : xor esi, esi ; mov r13d, 1 ; jmp 0x132ba7
0x00000000001336d9 : xor esi, esi ; mov r13d, 1 ; jmp 0x1336b7
0x00000000000acea8 : xor esi, esi ; mov rdi, rax ; call 0x89117
0x000000000014d3e1 : xor esi, esp ; call qword ptr [rdi]
0x000000000014d149 : xor esp, esi ; call qword ptr [rbx]
0x000000000014d161 : xor esp, esi ; call qword ptr [rdi]
0x00000000000ba8e7 : xor qword ptr [rdi + 8], rax ; mov rax, qword ptr [r8] ; ret
0x00000000000ba8c7 : xor qword ptr [rdi + 8], rdx ; ret
0x0000000000092460 : xor r10d, r10d ; mov rax, r10 ; ret
0x000000000011ea8e : xor r11b, r14b ; ret
0x0000000000105f57 : xor r13d, r13d ; jmp 0x105f2b
0x0000000000106537 : xor r13d, r13d ; jmp 0x10650b
0x00000000000acea7 : xor r14d, r14d ; mov rdi, rax ; call 0x89118
0x00000000001476a0 : xor r15b, cl ; call rsp
0x00000000000f94dd : xor r15d, dword ptr [rcx] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000149d38 : xor r15d, ebp ; jmp rsp
0x00000000000bb70f : xor rax, rdx ; pop rbx ; ret
0x00000000000903dc : xor rax, rdx ; ret
0x000000000011e5f1 : xor rdx, rdx ; jmp 0x8a815
