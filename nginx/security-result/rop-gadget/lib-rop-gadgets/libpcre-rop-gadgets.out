0x0000000000009a83 : adc al, 0 ; add byte ptr [rax], al ; jmp 0x5d35
0x0000000000027aa1 : adc al, 0x11 ; add rax, rdx ; ret
0x000000000002dd4f : adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000000562a : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000001db8 : adc al, 0x93 ; add r10, r11 ; jmp r10
0x000000000000452d : adc al, 0x93 ; add rdx, r11 ; jmp rdx
0x0000000000003a41 : adc al, 0x93 ; add rdx, rbx ; jmp rdx
0x000000000000437e : adc al, 0x94 ; add rdx, r12 ; jmp rdx
0x000000000004e2d9 : adc al, 0x96 ; add rdx, r14 ; jmp rdx
0x0000000000003e70 : adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x0000000000048ac4 : adc al, 0x97 ; add rdx, r15 ; jmp rdx
0x0000000000022d38 : adc al, 0xa9 ; add rdx, rcx ; jmp rdx
0x000000000000c309 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x0000000000050641 : adc al, 0xfb ; call qword ptr [rax]
0x0000000000050801 : adc al, 0xfb ; call rax
0x00000000000507f9 : adc al, 0xfb ; jmp rax
0x00000000000508b9 : adc al, 0xfb ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x000000000005081d : adc al, 0xfb ; push qword ptr [rax] ; adc al, 0xfb ; call rax
0x0000000000053c15 : adc al, 0xfc ; call qword ptr [rax]
0x0000000000053aa9 : adc al, 0xfc ; jmp qword ptr [rax]
0x0000000000038f0f : adc al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000690c9 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x27], ah ; sti ; call rax
0x0000000000006a18 : adc al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; sbb cl, byte ptr [rcx - 0x7d] ; ret 0x440c
0x000000000000cc7f : adc al, byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x0000000000033302 : adc al, byte ptr [rcx - 0x3a] ; add al, 0xd6 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000035c5c : adc al, byte ptr [rcx - 0x3ffff1e] ; add byte ptr [rax + 9], cl ; ret 0xb60f
0x0000000000053cb1 : adc bh, ah ; call rax
0x0000000000027885 : adc bl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, eax ; ret
0x000000000002bd82 : adc bl, ch ; or dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000004b45f : adc byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r8 - 0x77], r9b ; retf 0x8948
0x0000000000001a5a : adc byte ptr [rax + 1], cl ; ret
0x0000000000026094 : adc byte ptr [rax - 0x3f], cl ; out 2, eax ; call qword ptr [rax]
0x0000000000027277 : adc byte ptr [rax - 0x77], cl ; and al, 0x18 ; call rsi
0x0000000000025a76 : adc byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 + 0x54] ; and al, 8 ; call qword ptr [rax]
0x0000000000027ffc : adc byte ptr [rax - 0x77], cl ; push 0x415d5bf8 ; pop rsp ; ret
0x000000000004b460 : adc byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 - 0x77], r9b ; retf 0x8948
0x000000000002e874 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 4
0x000000000002b303 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000007dce : adc byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x81 ; std ; retf
0x000000000006a4d5 : adc byte ptr [rax], al ; add byte ptr [rax - 0x34], bh ; sti ; jmp rbx
0x0000000000025607 : adc byte ptr [rax], bh ; ret
0x000000000006a4d4 : adc byte ptr [rax], r8b ; add byte ptr [rax - 0x34], bh ; sti ; jmp rbx
0x000000000004d8ce : adc byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000002f336 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000031617 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006a1e7 : adc byte ptr [rbx + 0x80e4702], al ; ret
0x0000000000008990 : adc byte ptr [rbx + 0x9443fe2], al ; retf 0xf44
0x0000000000003672 : adc byte ptr [rbx + rdi*2 - 0xa], dh ; ret 0xf08
0x000000000005085c : adc byte ptr [rbx + rdi*8], 0xff ; rcl byte ptr [rbx], 1 ; sti ; call rax
0x0000000000050644 : adc byte ptr [rbx + rdi*8], dl ; call qword ptr [rax]
0x0000000000050884 : adc byte ptr [rbx + rdi*8], dl ; call rax
0x0000000000053ca8 : adc byte ptr [rbx], dl ; cld ; call rax
0x0000000000053ca0 : adc byte ptr [rbx], dl ; cld ; ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x000000000002a5a4 : adc byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000004a11 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa83
0x000000000004d5fd : adc byte ptr [rcx + 1], cl ; ror byte ptr [rax + 1], 1 ; retf 0x8b48
0x000000000002b61d : adc byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003e854 : adc byte ptr [rcx - 0x73], al ; add qword ptr [rcx - 0x7d], rax ; ret 0x4902
0x0000000000008d9c : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000001537d : adc byte ptr [rcx], al ; add byte ptr [rax], al ; call rcx
0x000000000000ea6d : adc byte ptr [rdi + rcx], al ; xchg eax, esp ; ret 0xd038
0x0000000000014904 : adc byte ptr [rdi], cl ; test byte ptr [rax + rbx*4], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000008ee4 : adc byte ptr [rdi], cl ; test byte ptr [rdx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000001cbe6 : adc byte ptr [rdi], cl ; test byte ptr [rsp + rdi*8 - 1], al ; dec dword ptr [rax - 0x7d] ; ret
0x000000000001cb06 : adc byte ptr [rdi], cl ; test dword ptr [rdi*8 - 0x7cb70001], esp ; ret
0x0000000000003804 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x548d
0x000000000003e020 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8548
0x0000000000004239 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x00000000000100f1 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd039
0x0000000000069414 : adc byte ptr [rdx - 2], cl ; jmp qword ptr [rax]
0x00000000000690c8 : adc byte ptr [rdx], 0 ; add byte ptr [rax - 0x27], ah ; sti ; call rax
0x00000000000507b4 : adc byte ptr [rip + 0x13d0fffb], 0xfb ; call rax
0x000000000000dd88 : adc byte ptr [rsi - 0x3f], ah ; ret 0x3d08
0x0000000000053c14 : adc byte ptr [rsp + rdi*8], dl ; call qword ptr [rax]
0x000000000004aa3c : adc cl, byte ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; retf 0x2c89
0x000000000001d663 : adc cl, byte ptr [rcx] ; ret 0x8b48
0x000000000000f23a : adc cl, byte ptr [rcx] ; ret 0xb60f
0x0000000000018bba : adc cl, byte ptr [rcx] ; ret 0xf41
0x0000000000010dfd : adc cl, byte ptr [rcx] ; retf 0xb60f
0x000000000003c094 : adc cl, ch ; shr ebx, -1 ; inc dword ptr [rcx - 0xa] ; ret 0xf10
0x000000000006db09 : adc dh, bh ; call rcx
0x000000000002763c : adc dh, dh ; ret 0x7504
0x0000000000001c13 : adc dword ptr [rax + 1], ecx ; ret
0x000000000003bbe1 : adc dword ptr [rcx], edi ; ret 0x950f
0x00000000000506c1 : adc eax, 0x13d0fffb ; sti ; call rax
0x00000000000506bd : adc eax, 0x15b0fffb ; sti ; call rax
0x000000000000cd30 : adc eax, 0x39c1940f ; retf 0x840f
0x00000000000343b2 : adc eax, 0x86046348 ; add rax, rsi ; jmp rax
0x00000000000231fc : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005652e : adc eax, dword ptr [rax] ; rol dword ptr [rbx], 4 ; add byte ptr [rax], al ; retf 0x403
0x00000000000220aa : adc ebp, dword ptr [rsi - 0x7cb70001] ; ret
0x00000000000680d8 : adc ecx, dword ptr [rcx] ; or al, 0 ; cmp bh, 0xff ; call qword ptr [rbx]
0x000000000000cdd2 : adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd039
0x0000000000050699 : adc edi, ebx ; call qword ptr [rax]
0x0000000000050681 : adc edi, ebx ; call rax
0x00000000000507f5 : adc edi, ebx ; jmp rax
0x000000000005067d : adc edi, ebx ; push qword ptr [rax + 0x13] ; sti ; call rax
0x0000000000050691 : adc edi, ebx ; push qword ptr [rbx + rdx - 5] ; call rax
0x0000000000053ca9 : adc edi, esp ; call rax
0x0000000000053ca1 : adc edi, esp ; ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x00000000000195e2 : adc edx, dword ptr [rbx - 0x76b80000] ; retf 0x13eb
0x0000000000057a75 : add ah, al ; add byte ptr [rax + rax], al ; ret
0x000000000006d94b : add ah, al ; add byte ptr [rax], r8b ; jo 0x6d958 ; std ; jmp qword ptr [rbx]
0x0000000000035c60 : add ah, bh ; add byte ptr [rax + 9], cl ; ret 0xb60f
0x00000000000691cd : add ah, bh ; jmp rax
0x000000000006830b : add ah, bh ; jne 0x68312 ; jmp qword ptr [rcx]
0x000000000006b3a8 : add ah, byte ptr [rcx + 0xa] ; ret
0x0000000000052f1b : add ah, dh ; inc dword ptr [rax] ; add cl, dh ; jmp rsi
0x0000000000006ca9 : add al, 0 ; add byte ptr [rax - 0x73], cl ; push rax ; add al, 0xeb ; ret 0x8341
0x00000000000099bc : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000000d106 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x410c
0x000000000000cbc3 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x830c
0x000000000002ad0c : add al, 0 ; add byte ptr [rbx - 0x76b3fe20], al ; retf
0x000000000004d9db : add al, 0 ; add byte ptr [rcx + 0x55], al ; push r12 ; push rbp ; push rbx ; call qword ptr [rax]
0x000000000002fa48 : add al, 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000002c43c : add al, 0 ; add dh, dh ; ret
0x00000000000565fe : add al, 0 ; cmp al, byte ptr [rax] ; ret
0x0000000000056604 : add al, 0 ; jnp 0x5660c ; retf
0x000000000000c377 : add al, 0 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000002b0e : add al, 0 ; movsxd r14, dword ptr [rax + r14*4] ; add rax, r14 ; jmp rax
0x000000000000dbb7 : add al, 0 ; movsxd r8, dword ptr [rdi + r8*4] ; add rdi, r8 ; jmp rdi
0x000000000000c020 : add al, 0 ; movsxd rax, dword ptr [rax + rbp*4] ; add rax, rdi ; jmp rax
0x000000000000c8fd : add al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000007b14 : add al, 0 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000000e435 : add al, 0 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000006955 : add al, 0 ; movsxd rdi, dword ptr [rsi + rdi*4] ; add rsi, rdi ; jmp rsi
0x0000000000004529 : add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; add rdx, r11 ; jmp rdx
0x000000000000c932 : add al, 0 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000004a55 : add al, 0 ; movsxd rsi, dword ptr [r8 + rcx*4] ; add rsi, r8 ; jmp rsi
0x0000000000005a2e : add al, 0 ; movsxd rsi, dword ptr [rcx + rsi*4] ; add rcx, rsi ; jmp rcx
0x00000000000562f8 : add al, 0 ; or dword ptr [rax], eax ; ret 0x400
0x0000000000057a78 : add al, 0 ; ret
0x0000000000027a59 : add al, 0x10 ; add rax, rsi ; ret
0x0000000000027ab9 : add al, 0x10 ; lea rax, qword ptr [rsi + rax - 1] ; ret
0x0000000000028013 : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000013b06 : add al, 0x39 ; retf 0x3574
0x0000000000026449 : add al, 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000000000002763f : add al, 0x75 ; fdivrp st(6) ; ret 0xf08
0x000000000000398a : add al, 0x76 ; loop 0x3985 ; ret
0x0000000000004d7f : add al, 0x80 ; add rax, r8 ; jmp rax
0x0000000000027b66 : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000147ab : add al, 0x82 ; add rax, rdx ; cmp r14d, r15d ; jmp rax
0x0000000000013ec2 : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000000c901 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000004f972 : add al, 0x83 ; add r8, rbx ; jmp r8
0x000000000000d96b : add al, 0x83 ; ret 0x6601
0x00000000000343b5 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000000f988 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x000000000000dbbb : add al, 0x87 ; add rdi, r8 ; jmp rdi
0x00000000000033ff : add al, 0x87 ; add rdi, rax ; jmp rdi
0x000000000001d7d5 : add al, 0x89 ; ret 0xe283
0x0000000000024c22 : add al, 0x89 ; ret 0xf41
0x00000000000018dc : add al, 0x8b ; sub byte ptr [rdi], cl ; leave ; mov dword ptr [rdx + 0x28], ecx ; ret
0x000000000000c024 : add al, 0xa8 ; add rax, rdi ; jmp rax
0x0000000000022465 : add al, 0xa9 ; add rax, rcx ; jmp rax
0x0000000000033305 : add al, 0xd6 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000006988 : add al, 0xe ; add cl, byte ptr [rax - 0x77] ; retf 0x840f
0x00000000000069b3 : add al, 0xe ; add cl, byte ptr [rax - 0x77] ; retf 0xe575
0x0000000000006caf : add al, 0xeb ; ret 0x8341
0x0000000000004c30 : add al, 0xf ; test dword ptr [rcx], ebx ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0xa801
0x000000000000ea6e : add al, 0xf ; xchg eax, esp ; ret 0xd038
0x0000000000056603 : add al, 4 ; add byte ptr [rbx], bh ; retf
0x000000000002bba3 : add al, 9 ; ret 0x1389
0x00000000000691cb : add al, ah ; add ah, bh ; jmp rax
0x00000000000008f7 : add al, ah ; ret 0
0x0000000000069093 : add al, ah ; wait ; cli ; jmp qword ptr [rax]
0x0000000000069253 : add al, ah ; xor bh, ah ; jmp rax
0x00000000000699bf : add al, al ; mov ah, 0xf9 ; call rax
0x000000000006db07 : add al, bh ; adc dh, bh ; call rcx
0x000000000006da27 : add al, bl ; add bh, dh ; jmp rdi
0x000000000002a720 : add al, bl ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001d716 : add al, byte ptr [r11 - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000003c822 : add al, byte ptr [r11 - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xf41
0x000000000001b69b : add al, byte ptr [r11 - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000002aebd : add al, byte ptr [rax] ; add al, ch ; pop rbx ; retf
0x0000000000032eca : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x000000000002cf1e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000008ee8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000000531c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xb801
0x0000000000028015 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000000c38a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000002aefc : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b3fe20], al ; retf
0x0000000000043eae : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x56 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000009669 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rdi], 0x95 ; ret
0x000000000000f1bb : add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x000000000002c3b8 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000002dd4b : add al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000027a55 : add al, byte ptr [rax] ; movzx eax, byte ptr [rax + rdx] ; add rax, rsi ; ret
0x0000000000026e5e : add al, byte ptr [rbp - 0x77] ; ret 0x8941
0x000000000003ffdc : add al, byte ptr [rbx - 0x1d3ec01e] ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x0000000000010e75 : add al, byte ptr [rbx - 0x1e3ec01f] ; adc cl, byte ptr [rcx] ; retf 0xb60f
0x0000000000010e03 : add al, byte ptr [rbx - 0x1e3ec01f] ; or al, 9 ; retf 0xb60f
0x000000000001f379 : add al, byte ptr [rbx - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0x8b48
0x0000000000010cc2 : add al, byte ptr [rbx - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001bd1b : add al, byte ptr [rbx - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xf41
0x000000000001d66e : add al, byte ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0x8b48
0x000000000001b69c : add al, byte ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000001bc93 : add al, byte ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0xf41
0x0000000000021e03 : add al, byte ptr [rbx - 0x1f3ec020] ; sbb byte ptr [rcx], cl ; ret 0x8b48
0x0000000000069b11 : add al, byte ptr [rcx + 0x283100e] ; ret
0x000000000003f355 : add al, byte ptr [rcx - 0x73] ; add qword ptr [rcx - 0x7d], rax ; ret 0x4902
0x0000000000042dbc : add al, byte ptr [rcx - 0x77] ; ret
0x000000000002d79a : add al, byte ptr [rcx - 0x7d] ; ret 0x4408
0x0000000000032ec9 : add al, byte ptr gs:[rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x00000000000311ed : add al, ch ; lodsd eax, dword ptr [rsi] ; retf 0xffff
0x000000000002aebf : add al, ch ; pop rbx ; retf
0x000000000004194e : add al, ch ; ret
0x0000000000040ed8 : add al, ch ; ret 0xfeb3
0x000000000003d768 : add al, ch ; ret 0xff17
0x000000000003f764 : add al, ch ; retf
0x00000000000466d0 : add al, ch ; retf 0xfe75
0x000000000003f860 : add al, ch ; retf 0xfef6
0x0000000000018709 : add al, ch ; sal dword ptr [rsi + 0x5b41ffff], -0x77 ; ret
0x00000000000310f0 : add al, ch ; stosb byte ptr [rdi], al ; retf
0x00000000000694a7 : add al, cl ; jg 0x694a8 ; call qword ptr [rax]
0x0000000000069193 : add al, dh ; idiv ebx ; jmp rax
0x000000000000084f : add al, dh ; ret 0
0x0000000000009ada : add bh, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5d38
0x0000000000009ac2 : add bh, al ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; jmp 0x5d38
0x0000000000004aed : add bh, byte ptr [rcx] ; retf 0x3fe9
0x000000000006da29 : add bh, dh ; jmp rdi
0x000000000004e715 : add bh, dh ; ret 0x20c
0x000000000000354b : add bh, dh ; ret 0x8c0
0x0000000000057a73 : add bl, al ; add ah, al ; add byte ptr [rax + rax], al ; ret
0x0000000000056601 : add bl, al ; add al, 4 ; add byte ptr [rbx], bh ; retf
0x0000000000057a71 : add bl, al ; add bl, al ; add ah, al ; add byte ptr [rax + rax], al ; ret
0x000000000006aeb6 : add bl, byte ptr [rdx + 0x41180e0a] ; ret
0x00000000000018ef : add bl, dh ; ret
0x000000000004f50e : add bl, sil ; ret
0x000000000003edad : add byte ptr [r14 - 0x3f], r12b ; ret
0x000000000004da02 : add byte ptr [r8 - 0x7d], r9b ; ret 0x8b01
0x000000000000a15b : add byte ptr [r8], al ; add cl, ch ; retf
0x0000000000069459 : add byte ptr [r8], al ; and byte ptr [rbp - 2], ah ; call rax
0x00000000000674a4 : add byte ptr [r8], r8b ; add byte ptr [rcx], ah ; or dword ptr [rax + rax], ecx ; retf 0
0x000000000006d9e5 : add byte ptr [r8], r8b ; call 0x2706d7f2
0x00000000000106cb : add byte ptr [r9 - 0x77], r8b ; push rbp ; or byte ptr [rcx - 0x77], al ; retf
0x0000000000013493 : add byte ptr [rax + 0x29], cl ; ret 0x3840
0x0000000000025b1d : add byte ptr [rax + 0x29], cl ; retf 0x8941
0x000000000001e794 : add byte ptr [rax + 0x39], cl ; ret
0x0000000000008644 : add byte ptr [rax + 0x39], cl ; ret 0x4172
0x000000000003989d : add byte ptr [rax + 0x39], cl ; ret 0xed77
0x000000000004998f : add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000013a63 : add byte ptr [rax + 0x39], cl ; xlatb ; jne 0x13a48 ; sub eax, esi ; ret
0x000000000005407f : add byte ptr [rax + 0x3a], ah ; std ; call rax
0x000000000002dd4c : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000000c933 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000022d35 : add byte ptr [rax + 0x63], cl ; adc al, 0xa9 ; add rdx, rcx ; jmp rdx
0x0000000000015834 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000000c8fe : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000000c021 : add byte ptr [rax + 0x63], cl ; add al, 0xa8 ; add rax, rdi ; jmp rax
0x0000000000006956 : add byte ptr [rax + 0x63], cl ; cmp al, 0xbe ; add rsi, rdi ; jmp rsi
0x00000000000283cf : add byte ptr [rax + 0x63], cl ; inc dword ptr [rcx - 0x77] ; ret 0x8341
0x0000000000007b15 : add byte ptr [rax + 0x63], cl ; or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000000e436 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000001c05d : add byte ptr [rax + 0x63], cl ; ret
0x00000000000081f9 : add byte ptr [rax + 0x63], cl ; ret 0x6348
0x000000000000c578 : add byte ptr [rax + 0x63], cl ; ret 0x894c
0x0000000000005a2f : add byte ptr [rax + 0x63], cl ; xor al, 0xb1 ; add rcx, rsi ; jmp rcx
0x0000000000009fcd : add byte ptr [rax + 0xf3a017b], al ; ret 0x189
0x000000000004dd42 : add byte ptr [rax + 1], bh ; ret
0x0000000000013480 : add byte ptr [rax + 1], cl ; ret 0x3949
0x00000000000274af : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000035c62 : add byte ptr [rax + 9], cl ; ret 0xb60f
0x00000000000694cb : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], ah ; stc ; jmp rsp
0x00000000000562f7 : add byte ptr [rax + rax], al ; or dword ptr [rax], eax ; ret 0x400
0x0000000000057a77 : add byte ptr [rax + rax], al ; ret
0x0000000000009a82 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jmp 0x5d36
0x000000000006a4d3 : add byte ptr [rax + rdx], cl ; add byte ptr [rax - 0x34], bh ; sti ; jmp rbx
0x0000000000001907 : add byte ptr [rax - 0x1c], bh ; ret
0x00000000000690cb : add byte ptr [rax - 0x27], ah ; sti ; call rax
0x0000000000027d86 : add byte ptr [rax - 0x2d], cl ; loop 0x27d86 ; ret 0x7405
0x000000000000353c : add byte ptr [rax - 0x2d], cl ; loop 0x353d ; ret 0x533
0x000000000004e6fa : add byte ptr [rax - 0x2d], cl ; loop 0x4e6fb ; ret 0x533
0x000000000004e7d6 : add byte ptr [rax - 0x2d], cl ; loop 0x4e7d7 ; ret 0x533
0x000000000006a4d7 : add byte ptr [rax - 0x34], bh ; sti ; jmp rbx
0x0000000000008cce : add byte ptr [rax - 0x3f], cl ; out 4, eax ; call qword ptr [rax]
0x0000000000069063 : add byte ptr [rax - 0x43], dh ; stc ; jmp rax
0x00000000000699bb : add byte ptr [rax - 0x4b400000], dh ; stc ; call rax
0x000000000002657a : add byte ptr [rax - 0x68], cl ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000003df12 : add byte ptr [rax - 0x6af09606], al ; ret 0x548d
0x000000000006901b : add byte ptr [rax - 0x6c], al ; stc ; jmp qword ptr [rax]
0x000000000004fcaf : add byte ptr [rax - 0x73], cl ; add eax, 0x18e7d ; ret
0x000000000004d7af : add byte ptr [rax - 0x73], cl ; add eax, 0x8401 ; ret
0x0000000000001936 : add byte ptr [rax - 0x73], cl ; pop rdi ; add ecx, dword ptr [rcx - 0x77] ; retf 0x894d
0x0000000000006cab : add byte ptr [rax - 0x73], cl ; push rax ; add al, 0xeb ; ret 0x8341
0x000000000001969c : add byte ptr [rax - 0x73], cl ; push rbx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000026caf : add byte ptr [rax - 0x75], cl ; add eax, 0x248319 ; jmp qword ptr [rax]
0x0000000000068feb : add byte ptr [rax - 0x77], ah ; stc ; jmp qword ptr [rax]
0x0000000000026af8 : add byte ptr [rax - 0x77], cl ; and al, 8 ; movsxd rdi, edi ; call qword ptr [rax]
0x000000000004d82b : add byte ptr [rax - 0x77], cl ; and rbx, rdx ; call qword ptr [rax]
0x0000000000004e6f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000031a48 : add byte ptr [rax - 0x77], cl ; fild word ptr [rbp + 0x31] ; imul al ; ret 0xffff
0x000000000003c474 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx - 0x7d] ; retf 0x4520
0x000000000004d90a : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax] ; jmp rax
0x0000000000039e38 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; call qword ptr [rbx]
0x0000000000031e44 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000004a1d5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfe3a
0x0000000000039fd5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xff22
0x00000000000338d5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xff89
0x0000000000029ee5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffe1
0x000000000003004e : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x0000000000030ecc : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000032b8c : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; wait ; ret
0x000000000004d502 : add byte ptr [rax - 0x77], cl ; out 0x74, eax ; jo 0x4d551 ; call rbx
0x0000000000006e7a : add byte ptr [rax - 0x77], cl ; ret
0x000000000000b49e : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000025e31 : add byte ptr [rax - 0x77], cl ; ret 0xe083
0x00000000000195e5 : add byte ptr [rax - 0x77], cl ; retf 0x13eb
0x0000000000022905 : add byte ptr [rax - 0x77], cl ; retf 0xbae9
0x00000000000023a6 : add byte ptr [rax - 0x77], cl ; sti ; movsxd rdi, ebp ; call qword ptr [rax]
0x000000000004cb6a : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test ah, cl ; retf
0x000000000004d342 : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test ah, dh ; ret
0x00000000000407b3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000694cf : add byte ptr [rax - 0x7d], ah ; stc ; jmp rsp
0x00000000000019af : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000016d97 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x000000000000494f : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000002d9eb : add byte ptr [rax - 0x7d], cl ; ret 0x4405
0x0000000000008eea : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000018425 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000004da03 : add byte ptr [rax - 0x7d], cl ; ret 0x8b01
0x000000000000467f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000000531e : add byte ptr [rax - 0x7d], cl ; ret 0xb801
0x0000000000025aef : add byte ptr [rax - 0x7d], cl ; ret 0xc704
0x0000000000016792 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000001474a : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000013b1f : add byte ptr [rax - 0x7d], cl ; rol dword ptr [rsp + rax*2], 0x39 ; ret 0x1774
0x00000000000251c1 : add byte ptr [rax - 0x7f], cl ; ret 0x340
0x00000000000265f7 : add byte ptr [rax - 2], bh ; ret
0x000000000006d94f : add byte ptr [rax - 2], dh ; std ; jmp qword ptr [rbx]
0x00000000000265f6 : add byte ptr [rax - 2], dil ; ret
0x000000000000c345 : add byte ptr [rax - 3], bh ; ret
0x0000000000026a1f : add byte ptr [rax - 7], bh ; ret
0x0000000000003573 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000028d07 : add byte ptr [rax], 0 ; add byte ptr [rbp + 0xb], dh ; ret
0x0000000000027296 : add byte ptr [rax], 0 ; ret
0x000000000006a4d2 : add byte ptr [rax], al ; adc byte ptr [rax], r8b ; add byte ptr [rax - 0x34], bh ; sti ; jmp rbx
0x0000000000069412 : add byte ptr [rax], al ; adc byte ptr [rdx - 2], cl ; jmp qword ptr [rax]
0x0000000000052f19 : add byte ptr [rax], al ; add ah, dh ; inc dword ptr [rax] ; add cl, dh ; jmp rsi
0x0000000000069b0f : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; ret
0x00000000000311eb : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; retf 0xffff
0x000000000004194c : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000040ed6 : add byte ptr [rax], al ; add al, ch ; ret 0xfeb3
0x000000000003d766 : add byte ptr [rax], al ; add al, ch ; ret 0xff17
0x000000000003f762 : add byte ptr [rax], al ; add al, ch ; retf
0x00000000000466ce : add byte ptr [rax], al ; add al, ch ; retf 0xfe75
0x000000000003f85e : add byte ptr [rax], al ; add al, ch ; retf 0xfef6
0x00000000000310ee : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; retf
0x00000000000694a5 : add byte ptr [rax], al ; add al, cl ; jg 0x694aa ; call qword ptr [rax]
0x00000000000018ed : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000013491 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x000000000001e792 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000008642 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4172
0x000000000005407d : add byte ptr [rax], al ; add byte ptr [rax + 0x3a], ah ; std ; call rax
0x000000000002fd8f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000009fcb : add byte ptr [rax], al ; add byte ptr [rax + 0xf3a017b], al ; ret 0x189
0x000000000004dd40 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000001347e : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3949
0x0000000000027d84 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loop 0x27d88 ; ret 0x7405
0x000000000000353a : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loop 0x353f ; ret 0x533
0x000000000004e6f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loop 0x4e6fd ; ret 0x533
0x000000000004e7d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loop 0x4e7d9 ; ret 0x533
0x000000000001969a : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rbx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000004d829 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and rbx, rdx ; call qword ptr [rax]
0x0000000000004e6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000003c472 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx - 0x7d] ; retf 0x4520
0x0000000000039e36 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; call qword ptr [rbx]
0x0000000000031e42 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000004a1d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfe3a
0x0000000000039fd3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xff22
0x00000000000338d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xff89
0x0000000000029ee3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffe1
0x000000000003004c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x0000000000030eca : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; retf
0x0000000000032b8a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; wait ; ret
0x0000000000006e78 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b49c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000025e2f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe083
0x000000000004cb68 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test ah, cl ; retf
0x000000000004d340 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test ah, dh ; ret
0x00000000000694cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], ah ; stc ; jmp rsp
0x00000000000019ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002d9e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4405
0x000000000002d8db : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000000467d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000025aed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc704
0x0000000000016790 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000014748 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000000c343 : add byte ptr [rax], al ; add byte ptr [rax - 3], bh ; ret
0x0000000000026c1d : add byte ptr [rax], al ; add byte ptr [rax - 7], bh ; ret
0x00000000000018eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000005407b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3a], ah ; std ; call rax
0x0000000000004e6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000001322b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000019ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000025aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc704
0x0000000000000468 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000046a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000085a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000000752 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000005063a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rbx + rdi*8], dl ; call qword ptr [rax]
0x000000000005063b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; adc al, 0xfb ; call qword ptr [rax]
0x000000000000b715 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x84c7
0x000000000002c72b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000013c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000112db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000000000005016b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000049e5a : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000027a69 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rsi ; ret
0x0000000000052f18 : add byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; inc dword ptr [rax] ; add cl, dh ; jmp rsi
0x0000000000009adc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5d36
0x0000000000026c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffffff9 ; ret
0x000000000000c342 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffffffd ; ret
0x0000000000004e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000026d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rbp, qword ptr [rdi] ; call qword ptr [rbx]
0x000000000000ac58 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add cl, ch ; retf
0x00000000000017ac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000000046c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000085c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000000754 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000005063c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rbx + rdi*8], dl ; call qword ptr [rax]
0x000000000002721c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000003574 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005063d : add byte ptr [rax], al ; add byte ptr [rax], dh ; adc al, 0xfb ; call qword ptr [rax]
0x00000000000694ca : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], ah ; stc ; jmp rsp
0x0000000000028016 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000018a37 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e840fc0], al ; retf 0xffff
0x0000000000019185 : add byte ptr [rax], al ; add byte ptr [rbp + 0x840fc0], al ; ret
0x0000000000028d08 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; ret
0x0000000000016c94 : add byte ptr [rax], al ; add byte ptr [rbp + rdx - 0xa], dh ; ret 0xb808
0x000000000000c96c : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb6fe3b], al ; ret 0x410c
0x0000000000011808 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb6fe3b], al ; ret 0x480c
0x000000000000dd2e : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb6fe3b], al ; ret 0x8318
0x0000000000022b94 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7e020], al ; ret
0x000000000001dd57 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7f820], al ; ret
0x0000000000024d5d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fc20], al ; ret
0x0000000000002d3c : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x394d
0x0000000000002ca1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8d4d
0x000000000003efb2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x2b248
0x000000000003f7e7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x2c2a8
0x00000000000419af : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x2dca8
0x0000000000013636 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000000bbe9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; pop rdx ; or dh, dh ; ret
0x0000000000005158 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76f7dba4], cl ; ret
0x000000000000f38a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; or byte ptr [r9 - 0x77], r8b ; ret
0x000000000004b3b0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000010579 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x95e9
0x0000000000010b89 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000000d108 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x410c
0x000000000000cbc5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x830c
0x0000000000005384 : add byte ptr [rax], al ; add byte ptr [rcx - 0x9e3892f], cl ; ret 0xf20
0x000000000001757a : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], dh ; ret 0xb810
0x000000000006938a : add byte ptr [rax], al ; add byte ptr [rcx - 3], dl ; jmp qword ptr [rax]
0x00000000000674ad : add byte ptr [rax], al ; add byte ptr [rcx], ah ; or dword ptr [rax + rax], ecx ; retf
0x00000000000674a5 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; or dword ptr [rax + rax], ecx ; retf 0
0x0000000000032481 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 0xffff
0x0000000000016c8a : add byte ptr [rax], al ; add byte ptr [rdi + rbx - 0xa], dh ; ret 0xb810
0x0000000000017584 : add byte ptr [rax], al ; add byte ptr [rdi + rdx - 0xa], dh ; ret 0xb808
0x0000000000014a5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x50 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000001c5de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x76 ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000004d513 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3f6
0x000000000004d6d0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x45f6
0x000000000004988b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8489
0x000000000000a92d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8b48
0x0000000000009cab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc931
0x0000000000012df8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x000000000000b717 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x84c7
0x0000000000040f9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x540a
0x0000000000069442 : add byte ptr [rax], al ; add byte ptr [rdx - 2], bl ; call qword ptr [rax]
0x000000000000978c : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000260f5 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff2
0x000000000002db18 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000440f9 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000009ade : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000000000000a15c : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000002c72d : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000013c6d : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x0000000000013b9d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000027d95 : add byte ptr [rax], al ; add dh, dh ; ret 0xb83a
0x00000000000112dd : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000000000050305 : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x000000000005019d : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0x000000000005016d : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x000000000000a0ab : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x6af9
0x000000000004ea35 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000000145b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000006ac5e : add byte ptr [rax], al ; and al, dh ; sti ; call rax
0x000000000006945a : add byte ptr [rax], al ; and byte ptr [rbp - 2], ah ; call rax
0x0000000000068306 : add byte ptr [rax], al ; and dword ptr [rcx], ecx ; or al, 0 ; cld ; jne 0x68317 ; jmp qword ptr [rcx]
0x00000000000674ae : add byte ptr [rax], al ; and dword ptr [rcx], ecx ; or al, 0 ; retf
0x00000000000674a6 : add byte ptr [rax], al ; and dword ptr [rcx], ecx ; or al, 0 ; retf 0
0x000000000006d9e6 : add byte ptr [rax], al ; call 0x2706d7f1
0x000000000002afb1 : add byte ptr [rax], al ; call 0x27a24
0x000000000003f7a7 : add byte ptr [rax], al ; call 0x2c2a4
0x00000000000311ec : add byte ptr [rax], al ; call 0x2dca4
0x000000000000bee2 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000049d79 : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000025f9b : add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000001537f : add byte ptr [rax], al ; call rcx
0x000000000000e650 : add byte ptr [rax], al ; call rdx
0x000000000006db06 : add byte ptr [rax], al ; clc ; adc dh, bh ; call rcx
0x0000000000035c5f : add byte ptr [rax], al ; cld ; add byte ptr [rax + 9], cl ; ret 0xb60f
0x0000000000027a6b : add byte ptr [rax], al ; cmove rax, rsi ; ret
0x000000000006b4f6 : add byte ptr [rax], al ; cmp byte ptr [rdx - 4], al ; call rsi
0x0000000000013a62 : add byte ptr [rax], al ; cmp rdi, rdx ; jne 0x13a49 ; sub eax, esi ; ret
0x0000000000052f1a : add byte ptr [rax], al ; hlt ; inc dword ptr [rax] ; add cl, dh ; jmp rsi
0x000000000006b4f2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add byte ptr [rax], bh ; cld ; call rsi
0x0000000000052f1e : add byte ptr [rax], al ; int1 ; jmp rsi
0x000000000006db02 : add byte ptr [rax], al ; jl 0x6db55 ; add byte ptr [rax], al ; clc ; adc dh, bh ; call rcx
0x0000000000018260 : add byte ptr [rax], al ; jmp 0x1448d
0x0000000000009872 : add byte ptr [rax], al ; jmp 0x5ade
0x0000000000009a85 : add byte ptr [rax], al ; jmp 0x5d33
0x0000000000009bc9 : add byte ptr [rax], al ; jmp 0x5e87
0x000000000000a0af : add byte ptr [rax], al ; jmp 0x6af5
0x00000000000269b5 : add byte ptr [rax], al ; jne 0x269cc ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000027e28 : add byte ptr [rax], al ; jne 0x27ed9 ; ret
0x0000000000028d09 : add byte ptr [rax], al ; jne 0x28d1c ; ret
0x0000000000069062 : add byte ptr [rax], al ; jo 0x69028 ; stc ; jmp rax
0x000000000006d94e : add byte ptr [rax], al ; jo 0x6d955 ; std ; jmp qword ptr [rbx]
0x000000000006a4d6 : add byte ptr [rax], al ; js 0x6a4ab ; sti ; jmp rbx
0x0000000000069092 : add byte ptr [rax], al ; loopne 0x69036 ; cli ; jmp qword ptr [rax]
0x00000000000691ca : add byte ptr [rax], al ; loopne 0x691d3 ; cld ; jmp rax
0x0000000000069252 : add byte ptr [rax], al ; loopne 0x6928d ; cld ; jmp rax
0x0000000000068fca : add byte ptr [rax], al ; mov al, 0x84 ; stc ; jmp rax
0x00000000000692fa : add byte ptr [rax], al ; mov al, 0x95 ; cld ; jmp rax
0x0000000000069032 : add byte ptr [rax], al ; mov al, 0x99 ; stc ; jmp qword ptr [rax]
0x0000000000026a1e : add byte ptr [rax], al ; mov eax, 0xfffffff9 ; ret
0x000000000000c344 : add byte ptr [rax], al ; mov eax, 0xfffffffd ; ret
0x000000000004dd41 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000026421 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x14] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000027ee2 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000311e7 : add byte ptr [rax], al ; mov edx, 0xc ; call 0x2dca9
0x000000000003f7a2 : add byte ptr [rax], al ; mov esi, 0x20 ; call 0x2c2a9
0x000000000000ad0c : add byte ptr [rax], al ; mov qword ptr [r15 + 0x19], rax ; jmp 0x772d
0x000000000001057a : add byte ptr [rax], al ; mov r10, rax ; jmp 0xc820
0x0000000000009112 : add byte ptr [rax], al ; mov r15, rdx ; jmp 0x540f
0x0000000000026cae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x248319] ; jmp qword ptr [rax]
0x0000000000004e6e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000026d3e : add byte ptr [rax], al ; mov rbp, qword ptr [rdi] ; call qword ptr [rbx]
0x000000000004d82a : add byte ptr [rax], al ; mov rbx, rsi ; and rbx, rdx ; call qword ptr [rax]
0x000000000003efb3 : add byte ptr [rax], al ; mov rdi, r13 ; call 0x2b247
0x00000000000419b0 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x2dca7
0x000000000003f7e8 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x2c2a7
0x000000000002b5f1 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x280b7
0x000000000003e1ec : add byte ptr [rax], al ; mov rdi, rbx ; call 0x2a417
0x000000000003004d : add byte ptr [rax], al ; mov rdi, rbx ; call 0x2c2a7
0x0000000000031a78 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x2dca7
0x0000000000037a22 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x33d17
0x000000000004ed7f : add byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000006912a : add byte ptr [rax], al ; nop ; loope 0x6912f ; call qword ptr [rax]
0x000000000000ac5a : add byte ptr [rax], al ; or byte ptr [rax], al ; add cl, ch ; retf
0x000000000004e18d : add byte ptr [rax], al ; or dil, byte ptr [rdx + r10*4] ; mov byte ptr [rsi], dil ; ret
0x0000000000028017 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000000175e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000006d9e2 : add byte ptr [rax], al ; pop rsp ; add byte ptr [r8], r8b ; call 0x2706d7f5
0x000000000004d9dc : add byte ptr [rax], al ; push r13 ; push r12 ; push rbp ; push rbx ; call qword ptr [rax]
0x0000000000027fe0 : add byte ptr [rax], al ; push rbx ; mov rbp, rdx ; mov rbx, rsi ; call qword ptr [rax]
0x000000000006938b : add byte ptr [rax], al ; push rcx ; std ; jmp qword ptr [rax]
0x000000000006911a : add byte ptr [rax], al ; rcr ch, 0xfb ; jmp rax
0x000000000000046e : add byte ptr [rax], al ; ret
0x000000000000085e : add byte ptr [rax], al ; ret 3
0x0000000000068a16 : add byte ptr [rax], al ; retf
0x0000000000000756 : add byte ptr [rax], al ; retf 0
0x0000000000056533 : add byte ptr [rax], al ; retf 0x403
0x000000000006901a : add byte ptr [rax], al ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x000000000005063e : add byte ptr [rax], al ; xor byte ptr [rbx + rdi*8], dl ; call qword ptr [rax]
0x000000000002721e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000003576 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000032482 : add byte ptr [rax], al ; xor esi, esi ; call 0x2ef36
0x000000000006b4f7 : add byte ptr [rax], bh ; cld ; call rsi
0x000000000006b4f3 : add byte ptr [rax], ch ; add byte ptr [rax], bh ; cld ; call rsi
0x000000000005063f : add byte ptr [rax], dh ; adc al, 0xfb ; call qword ptr [rax]
0x00000000000693ab : add byte ptr [rax], dh ; ret 0xfffd
0x000000000000074f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000049e6c : add byte ptr [rax], dl ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000000694cc : add byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], ah ; stc ; jmp rsp
0x000000000006db05 : add byte ptr [rax], r8b ; clc ; adc dh, bh ; call rcx
0x000000000006d94d : add byte ptr [rax], r8b ; jo 0x6d956 ; std ; jmp qword ptr [rbx]
0x0000000000026a1d : add byte ptr [rax], r8b ; mov eax, 0xfffffff9 ; ret
0x000000000000175d : add byte ptr [rax], r8b ; pop rbp ; ret
0x00000000000039b5 : add byte ptr [rax], r8b ; ret
0x000000000004fa9d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000002efa5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000004d6f5 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000028018 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000018a39 : add byte ptr [rbp + 0x4e840fc0], al ; retf 0xffff
0x000000000002d461 : add byte ptr [rbp + 0x63], cl ; retf 0xb841
0x0000000000006a1a : add byte ptr [rbp + 0x63], cl ; sbb cl, byte ptr [rcx - 0x7d] ; ret 0x440c
0x0000000000019187 : add byte ptr [rbp + 0x840fc0], al ; ret
0x00000000000269b6 : add byte ptr [rbp + 0xa], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000028d0a : add byte ptr [rbp + 0xb], dh ; ret
0x0000000000045fc0 : add byte ptr [rbp + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret 0x63e8
0x0000000000016c96 : add byte ptr [rbp + rdx - 0xa], dh ; ret 0xb808
0x000000000002bac3 : add byte ptr [rbp - 0x77], al ; ret 0x2b44
0x000000000004aa48 : add byte ptr [rbx + 0x14808c5], al ; ret
0x0000000000026422 : add byte ptr [rbx + 0x1891447], cl ; xor eax, eax ; ret
0x000000000002efcf : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000027fe1 : add byte ptr [rbx + 0x48], dl ; mov ebp, edx ; mov rbx, rsi ; call qword ptr [rax]
0x0000000000017947 : add byte ptr [rbx + 0xf06863c], al ; xchg eax, ebp ; ret 0x8341
0x00000000000303a2 : add byte ptr [rbx + rcx*4 + 0x54], al ; retf 0x4104
0x000000000003be55 : add byte ptr [rbx + rcx*4 + 0x5c], al ; retf 0x4104
0x000000000004d946 : add byte ptr [rbx - 0x18], dl ; ret
0x00000000000066cc : add byte ptr [rbx - 0x1d3ec01e], al ; or al, 9 ; retf 0xb60f
0x0000000000049c6a : add byte ptr [rbx - 0x3e99fe12], al ; ret 0xf08
0x000000000000da48 : add byte ptr [rbx - 0x57c021e], al ; jge 0xda68 ; xchg eax, esp ; ret 0xc238
0x000000000000de55 : add byte ptr [rbx - 0x57f021e], al ; jge 0xde75 ; xchg eax, esp ; ret 0xe8c1
0x000000000002ac1b : add byte ptr [rbx - 0x76b3fe20], al ; ret
0x000000000002ad0e : add byte ptr [rbx - 0x76b3fe20], al ; retf
0x000000000001f10b : add byte ptr [rbx - 0x79f0f508], al ; retf
0x000000000000c96e : add byte ptr [rbx - 0x7cb6fe3b], al ; ret 0x410c
0x000000000001180a : add byte ptr [rbx - 0x7cb6fe3b], al ; ret 0x480c
0x000000000000dd30 : add byte ptr [rbx - 0x7cb6fe3b], al ; ret 0x8318
0x000000000001d90c : add byte ptr [rbx - 0x7cb7e020], al ; ret
0x000000000001dd59 : add byte ptr [rbx - 0x7cb7f820], al ; ret
0x000000000001de3c : add byte ptr [rbx - 0x7cb7fc20], al ; ret
0x0000000000028d39 : add byte ptr [rbx - 0xca43fcf], cl ; ret
0x0000000000056605 : add byte ptr [rbx], bh ; retf
0x00000000000008f5 : add byte ptr [rbx], cl ; add al, ah ; ret 0
0x000000000000084d : add byte ptr [rbx], cl ; add al, dh ; ret 0
0x000000000001a413 : add byte ptr [rcx + 0x1d8d4cc8], cl ; retf 3
0x0000000000002d3e : add byte ptr [rcx + 0x29], al ; ret 0x394d
0x0000000000002ca3 : add byte ptr [rcx + 0x29], al ; ret 0x8d4d
0x000000000004d9dd : add byte ptr [rcx + 0x55], al ; push r12 ; push rbp ; push rbx ; call qword ptr [rax]
0x000000000000452a : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; add rdx, r11 ; jmp rdx
0x000000000002fa4a : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000002c539 : add byte ptr [rcx + 0x63], cl ; retf 0xc6
0x0000000000004a56 : add byte ptr [rcx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x0000000000002367 : add byte ptr [rcx + 0x63ffffa], al ; add byte ptr [rsi + 8], bh ; ret
0x0000000000012e4f : add byte ptr [rcx + 0x700000e2], al ; add byte ptr [rdi], cl ; ret 0x3d
0x00000000000082e1 : add byte ptr [rcx + 0xf], al ; ret
0x0000000000002480 : add byte ptr [rcx + 0xf], al ; ret 0xfac1
0x000000000004244f : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000003efb4 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x2b246
0x000000000002cae1 : add byte ptr [rcx + rcx*4 - 0x12], al ; mov rdi, rbp ; call 0x28d09
0x000000000004d8c9 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000000bb8d : add byte ptr [rcx + rcx*4 - 0x29], cl ; call qword ptr [rax]
0x000000000003e5b4 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x2a8b6
0x000000000003f7e9 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x2c2a6
0x00000000000419b1 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x2dca6
0x0000000000026a11 : add byte ptr [rcx - 0x3b7cb728], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000002fa3d : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000013638 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000000bbeb : add byte ptr [rcx - 0x75], al ; pop rdx ; or dh, dh ; ret
0x0000000000008d03 : add byte ptr [rcx - 0x75], cl ; jle 0x8d5d ; call qword ptr [rax]
0x000000000000515a : add byte ptr [rcx - 0x76f7dba4], cl ; ret
0x000000000000f38c : add byte ptr [rcx - 0x77], al ; or byte ptr [r9 - 0x77], r8b ; ret
0x00000000000106cc : add byte ptr [rcx - 0x77], al ; push rbp ; or byte ptr [rcx - 0x77], al ; retf
0x000000000000e7db : add byte ptr [rcx - 0x77], al ; ret
0x000000000003ee66 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000003ca33 : add byte ptr [rcx - 0x77], cl ; ret 0x8545
0x000000000004b3b2 : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000003e841 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000001057b : add byte ptr [rcx - 0x77], cl ; ret 0x95e9
0x0000000000012c01 : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x0000000000009113 : add byte ptr [rcx - 0x77], cl ; xlatb ; jmp 0x540e
0x0000000000010b8b : add byte ptr [rcx - 0x7d], al ; ret
0x000000000000c503 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000000e299 : add byte ptr [rcx - 0x7d], al ; ret 0x4c01
0x000000000000d10a : add byte ptr [rcx - 0x7d], cl ; ret 0x410c
0x000000000000cbc7 : add byte ptr [rcx - 0x7d], cl ; ret 0x830c
0x0000000000002d9f : add byte ptr [rcx - 0x7f], al ; stc ; retf
0x0000000000005386 : add byte ptr [rcx - 0x9e3892f], cl ; ret 0xf20
0x000000000003a8c0 : add byte ptr [rcx - 0xa], al ; ret 0x4920
0x000000000001757c : add byte ptr [rcx - 0xa], dh ; ret 0xb810
0x000000000006938c : add byte ptr [rcx - 3], dl ; jmp qword ptr [rax]
0x000000000002e144 : add byte ptr [rcx - 9], al ; ret 0x4000
0x0000000000068307 : add byte ptr [rcx], ah ; or dword ptr [rax + rax], ecx ; cld ; jne 0x68316 ; jmp qword ptr [rcx]
0x00000000000674af : add byte ptr [rcx], ah ; or dword ptr [rax + rax], ecx ; retf
0x00000000000674a7 : add byte ptr [rcx], ah ; or dword ptr [rax + rax], ecx ; retf 0
0x0000000000049d2f : add byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000049d81 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000017ee : add byte ptr [rcx], al ; ret
0x0000000000045bf1 : add byte ptr [rcx], al ; retf 0x5401
0x00000000000290f5 : add byte ptr [rcx], bh ; retf
0x0000000000032483 : add byte ptr [rcx], dh ; imul al ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 0xffff
0x00000000000037ff : add byte ptr [rcx], dh ; rol byte ptr [rax - 0x6af0ef07], cl ; ret 0x548d
0x00000000000100eb : add byte ptr [rcx], dh ; rol byte ptr [rcx - 0x7d], cl ; stc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd039
0x00000000000037fe : add byte ptr [rcx], sil ; rol byte ptr [rax - 0x6af0ef07], cl ; ret 0x548d
0x0000000000049e6a : add byte ptr [rdi + 0x1000], bh ; call qword ptr [rax]
0x0000000000033466 : add byte ptr [rdi + 0x108], bh ; call qword ptr [rax]
0x000000000004c5b0 : add byte ptr [rdi + 0x60], bh ; call qword ptr [rax]
0x000000000004f6f9 : add byte ptr [rdi + 0x6c], bh ; call qword ptr [rax]
0x0000000000049e08 : add byte ptr [rdi + 0x80], bh ; call qword ptr [rax]
0x0000000000016c8c : add byte ptr [rdi + rbx - 0xa], dh ; ret 0xb810
0x0000000000004361 : add byte ptr [rdi + rcx + 0x44], cl ; ret
0x0000000000017586 : add byte ptr [rdi + rdx - 0xa], dh ; ret 0xb808
0x0000000000068fc7 : add byte ptr [rdi - 0x50000000], dl ; test cl, bh ; jmp rax
0x00000000000674a3 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; and dword ptr [rcx], ecx ; or al, 0 ; retf 0
0x0000000000014a5f : add byte ptr [rdi], cl ; mov bh, 0x50 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000004e4ff : add byte ptr [rdi], cl ; mov bh, 0x51 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000043eb0 : add byte ptr [rdi], cl ; mov bh, 0x56 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000000e700 : add byte ptr [rdi], cl ; mov bh, 0x56 ; add esp, dword ptr [rsi - 0x3f] ; ret 0x4808
0x00000000000095d4 : add byte ptr [rdi], cl ; mov bh, 0x56 ; or byte ptr [rcx], bh ; retf 0x8948
0x0000000000020680 : add byte ptr [rdi], cl ; mov dh, 0x44 ; ret 0x3b01
0x00000000000202f0 : add byte ptr [rdi], cl ; mov dh, 0x44 ; ret 0x4801
0x0000000000020762 : add byte ptr [rdi], cl ; mov dh, 0x44 ; ret 0x8d01
0x000000000000692e : add byte ptr [rdi], cl ; mov dh, 0x50 ; add cl, byte ptr [rax - 0x77] ; retf
0x00000000000053d6 : add byte ptr [rdi], cl ; mov dh, 0x54 ; retf 0x8403
0x000000000001c5e0 : add byte ptr [rdi], cl ; mov dh, 0x76 ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000001a56 : add byte ptr [rdi], cl ; mov dh, 4 ; adc byte ptr [rax + 1], cl ; ret
0x0000000000005ff1 : add byte ptr [rdi], cl ; mov dh, 4 ; add dword ptr [rax + 1], ecx ; ret 0x8545
0x000000000002059f : add byte ptr [rdi], cl ; mov dh, 4 ; ret 0x443b
0x000000000000417d : add byte ptr [rdi], cl ; mov dh, 4 ; sub byte ptr [rax + 1], cl ; ret
0x0000000000022b2a : add byte ptr [rdi], cl ; or dword ptr [rip + 0x4800001a], 0xffffff83 ; ret
0x0000000000021b87 : add byte ptr [rdi], cl ; or dword ptr [rsi + 0x30], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000012e55 : add byte ptr [rdi], cl ; ret 0x3d
0x000000000004d515 : add byte ptr [rdi], cl ; ret 0x3f6
0x000000000004d6d2 : add byte ptr [rdi], cl ; ret 0x45f6
0x000000000004988d : add byte ptr [rdi], cl ; ret 0x8489
0x000000000000a92f : add byte ptr [rdi], cl ; ret 0x8b48
0x000000000004e20b : add byte ptr [rdi], cl ; ret 0xc289
0x0000000000009cad : add byte ptr [rdi], cl ; ret 0xc931
0x0000000000012dfa : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x000000000000b719 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x84c7
0x0000000000024ac2 : add byte ptr [rdi], cl ; test byte ptr [rdi - 0x16000027], dh ; ret 0xff09
0x0000000000027e29 : add byte ptr [rdi], cl ; test dword ptr [rax - 0xd000000], esp ; ret
0x000000000004e703 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x8ffffff], ecx ; ret 0x8c0
0x000000000004e70f : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x8ffffff], edx ; ret 0x20c
0x0000000000003545 : add byte ptr [rdi], cl ; test dword ptr [rcx + rax], ebp ; add bh, dh ; ret 0x8c0
0x000000000001538b : add byte ptr [rdi], cl ; test dword ptr [rdx], ebx ; retf
0x000000000004e7eb : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x8ffffff], esp ; ret 0x20c
0x000000000003a52f : add byte ptr [rdi], cl ; test edx, eax ; or al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed77
0x0000000000040fa0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x540a
0x0000000000017653 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xf981
0x0000000000011f63 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xfe81
0x00000000000208cf : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xff3d
0x00000000000037ae : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000000966b : add byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000022462 : add byte ptr [rdx + 0x63], cl ; add al, 0xa9 ; add rax, rcx ; jmp rax
0x000000000004e18e : add byte ptr [rdx + 0xa], al ; cmp al, 0x92 ; mov byte ptr [rsi], dil ; ret
0x00000000000311e8 : add byte ptr [rdx + 0xc], bh ; call 0x2dca8
0x0000000000069444 : add byte ptr [rdx - 2], bl ; call qword ptr [rax]
0x0000000000069b10 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x4e028310 ; ret
0x00000000000565ff : add byte ptr [rdx], bh ; add bl, al ; add al, 4 ; add byte ptr [rbx], bh ; retf
0x0000000000049889 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8489
0x000000000005be57 : add byte ptr [rdx], dh ; jb 0x5be65 ; jb 0x5be67 ; jb 0x5be69 ; ret 0xc201
0x000000000005be59 : add byte ptr [rdx], dh ; jb 0x5be65 ; jb 0x5be67 ; ret 0xc201
0x000000000005be5b : add byte ptr [rdx], dh ; jb 0x5be65 ; ret 0xc201
0x0000000000062475 : add byte ptr [rdx], dh ; jb 0x62483 ; jb 0x62485 ; jb 0x62487 ; ret
0x0000000000062477 : add byte ptr [rdx], dh ; jb 0x62483 ; jb 0x62485 ; ret
0x0000000000062479 : add byte ptr [rdx], dh ; jb 0x62483 ; ret
0x0000000000063937 : add byte ptr [rdx], dh ; jb 0x63945 ; jb 0x63947 ; jb 0x63949 ; ret 0xc200
0x0000000000063939 : add byte ptr [rdx], dh ; jb 0x63945 ; jb 0x63947 ; ret 0xc200
0x000000000006393b : add byte ptr [rdx], dh ; jb 0x63945 ; ret 0xc200
0x0000000000057a99 : add byte ptr [rdx], dh ; ret
0x000000000006393d : add byte ptr [rdx], dh ; ret 0xc200
0x000000000005be5d : add byte ptr [rdx], dh ; ret 0xc201
0x0000000000057c7b : add byte ptr [rdx], dh ; retf
0x0000000000009ac4 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; jmp 0x5d36
0x00000000000008f3 : add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, ah ; ret 0
0x000000000000084b : add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, dh ; ret 0
0x000000000003870c : add byte ptr [rip - 0x76b70001], bl ; ret 0x8548
0x000000000003f7a3 : add byte ptr [rsi + 0x20], bh ; call 0x2c2a8
0x000000000000dbb8 : add byte ptr [rsi + 0x63], cl ; add al, 0x87 ; add rdi, r8 ; jmp rdi
0x0000000000002b0f : add byte ptr [rsi + 0x63], cl ; xor al, 0xb0 ; add rax, r14 ; jmp rax
0x000000000000236d : add byte ptr [rsi + 8], bh ; ret
0x000000000006db03 : add byte ptr [rsi + rax*2], bh ; add al, bh ; adc dh, bh ; call rcx
0x000000000003edae : add byte ptr [rsi - 0x3f], ah ; ret
0x000000000003ba53 : add byte ptr [rsi - 0x75], al ; pop rsp ; ret 0x4104
0x0000000000057a97 : add byte ptr [rsi], dl ; add byte ptr [rdx], dh ; ret
0x0000000000008ccd : add byte ptr es:[rax - 0x3f], cl ; out 4, eax ; call qword ptr [rax]
0x00000000000023a5 : add byte ptr es:[rax - 0x77], cl ; sti ; movsxd rdi, ebp ; call qword ptr [rax]
0x000000000000bb8c : add byte ptr es:[rcx + rcx*4 - 0x29], cl ; call qword ptr [rax]
0x0000000000008d02 : add byte ptr es:[rcx - 0x75], cl ; jle 0x8d5e ; call qword ptr [rax]
0x00000000000017ed : add byte ptr es:[rcx], al ; ret
0x0000000000009da1 : add cl, byte ptr [r8 - 0x77] ; ret 0x8948
0x0000000000007f43 : add cl, byte ptr [rax + 0x39] ; ret 0x820f
0x0000000000003d95 : add cl, byte ptr [rax + 0x39] ; retf 0xe572
0x000000000001fed3 : add cl, byte ptr [rax + 0xf] ; ret 0x8949
0x0000000000001c23 : add cl, byte ptr [rax - 0x77] ; ret
0x0000000000009da2 : add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000018f24 : add cl, byte ptr [rax - 0x77] ; ret 0xabe8
0x0000000000018fdb : add cl, byte ptr [rax - 0x77] ; ret 0xf4e8
0x0000000000006932 : add cl, byte ptr [rax - 0x77] ; retf
0x000000000000698a : add cl, byte ptr [rax - 0x77] ; retf 0x840f
0x00000000000069b5 : add cl, byte ptr [rax - 0x77] ; retf 0xe575
0x000000000004615b : add cl, byte ptr [rax - 0x7d] ; ret 0x4803
0x00000000000271e1 : add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000000000001d4f : add cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x000000000001af5f : add cl, byte ptr [rbp + rcx*4 + 5] ; stc ; ret
0x000000000003e85c : add cl, byte ptr [rcx + 0x63] ; ret 0x8948
0x00000000000276d3 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x0000000000019e45 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000179e3 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8341
0x0000000000053eec : add cl, byte ptr [rdx - 0x77b70004] ; cld ; jmp rbx
0x000000000000978e : add cl, ch ; ret
0x00000000000260f7 : add cl, ch ; ret 0xfff2
0x000000000002db1a : add cl, ch ; ret 0xfffb
0x00000000000440fb : add cl, ch ; ret 0xfffd
0x0000000000009ae0 : add cl, ch ; ret 0xffff
0x000000000000a15e : add cl, ch ; retf
0x000000000000a02d : add cl, ch ; xchg eax, edi ; retf 0xffff
0x0000000000052f1f : add cl, dh ; jmp rsi
0x000000000002807b : add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000001c855 : add dh, byte ptr [rsi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000006986 : add dh, dh ; add al, 0xe ; add cl, byte ptr [rax - 0x77] ; retf 0x840f
0x000000000002c3c7 : add dh, dh ; ret
0x0000000000013c6f : add dh, dh ; ret 0x7408
0x0000000000013b9f : add dh, dh ; ret 0x7420
0x0000000000050147 : add dh, dh ; ret 0x7520
0x0000000000027d97 : add dh, dh ; ret 0xb83a
0x000000000000f1bd : add dh, dh ; ret 0xf04
0x000000000000ed5c : add dh, dh ; ret 0xf08
0x000000000005019f : add dh, dh ; ret 0xf10
0x0000000000003489 : add dh, dh ; ret 0xf20
0x00000000000674ab : add dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; or dword ptr [rax + rax], ecx ; retf
0x0000000000057c79 : add dl, cl ; add byte ptr [rdx], dh ; retf
0x0000000000057c77 : add dl, cl ; add dl, cl ; add byte ptr [rdx], dh ; retf
0x0000000000057c75 : add dl, cl ; add dl, cl ; add dl, cl ; add byte ptr [rdx], dh ; retf
0x000000000001b68f : add dword ptr [r11 - 0x1f3ec020], eax ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x0000000000018ccb : add dword ptr [r11 - 0x1f3ec020], eax ; or al, 9 ; ret 0xb60f
0x000000000001d70a : add dword ptr [r11 - 0x1f3ec020], eax ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x000000000000f233 : add dword ptr [r11 - 0x1f3ec020], r8d ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001c2a0 : add dword ptr [r11 - 0x1f3ec020], r8d ; or al, 9 ; ret 0xb60f
0x000000000001f60d : add dword ptr [r11 - 0x1f3ec020], r8d ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x000000000000e86b : add dword ptr [r15], ecx ; mov ds, word ptr [rsi - 0x7c000024] ; ret
0x000000000000fae2 : add dword ptr [r15], ecx ; mov fs, word ptr [rdi] ; retf 0xffff
0x000000000000f860 : add dword ptr [r15], ecx ; mov gs, word ptr [rcx - 0x7c000034] ; ret
0x000000000001363b : add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000028a6a : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4007
0x000000000001363c : add dword ptr [rax + 0x39], ecx ; ret
0x000000000004cc83 : add dword ptr [rax + 0x39], ecx ; ret 0x850f
0x00000000000114f1 : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000011091 : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x0000000000017ecb : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000004efc6 : add dword ptr [rax + 0x39], ecx ; ret 0xf475
0x0000000000007863 : add dword ptr [rax + 0x39], ecx ; ret 0xf575
0x000000000001caa0 : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000091a7 : add dword ptr [rax + 1], ecx ; ret
0x0000000000005ff5 : add dword ptr [rax + 1], ecx ; ret 0x8545
0x000000000000601b : add dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000004ddc3 : add dword ptr [rax + 1], edi ; ret
0x0000000000001d22 : add dword ptr [rax + rax*8 - 0x3fce1e8b], eax ; ret
0x000000000006adb6 : add dword ptr [rax + rbx*2], 0xa ; ret
0x00000000000498c6 : add dword ptr [rax - 0x75], ecx ; add eax, 0x22566a ; call qword ptr [rax]
0x000000000002af41 : add dword ptr [rax - 0x77], ecx ; fimul word ptr [rcx + rcx*4 - 1] ; call 0x27a29
0x0000000000031613 : add dword ptr [rax - 0x77], ecx ; push rbp ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004d89a : add dword ptr [rax - 0x77], ecx ; ret 0x8948
0x000000000004aec8 : add dword ptr [rax - 0x7d], ecx ; push 0x140c601 ; ret
0x00000000000019bb : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000005340 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000000583a : add dword ptr [rax - 0x7d], ecx ; ret 0xe901
0x000000000000480c : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000002aad5 : add dword ptr [rax - 0x80], -3 ; ja 0x2aaf1 ; xchg eax, esp ; ret
0x000000000004e713 : add dword ptr [rax], eax ; add bh, dh ; ret 0x20c
0x0000000000003549 : add dword ptr [rax], eax ; add bh, dh ; ret 0x8c0
0x0000000000025b1b : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf 0x8941
0x000000000004998d : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000003df10 : add dword ptr [rax], eax ; add byte ptr [rax - 0x6af09606], al ; ret 0x548d
0x00000000000407b1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000016048 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000001c757 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000251bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x340
0x000000000000b713 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x84c7
0x000000000001825e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x1448f
0x000000000000a0ad : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x6af7
0x000000000004dd87 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002b5ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x280b9
0x0000000000001d39 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000000c312 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000002d45f : add dword ptr [rax], eax ; add byte ptr [rbp + 0x63], cl ; retf 0xb841
0x0000000000049c68 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x3e99fe12], al ; ret 0xf08
0x0000000000033912 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000009111 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; xlatb ; jmp 0x5410
0x000000000000c501 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000000290f3 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; retf
0x00000000000095d2 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x56 ; or byte ptr [rcx], bh ; retf 0x8948
0x000000000000692c : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x50 ; add cl, byte ptr [rax - 0x77] ; retf
0x0000000000049887 : add dword ptr [rax], eax ; add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8489
0x00000000000008f1 : add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, ah ; ret 0
0x0000000000000849 : add dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, dh ; ret 0
0x000000000005024e : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000003487 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf20
0x0000000000042e11 : add dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000004fcb5 : add dword ptr [rax], eax ; ret
0x0000000000004977 : add dword ptr [rbp - 0x57f07b0], ecx ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x53c
0x000000000000a790 : add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000025b7e : add dword ptr [rbp - 0x7b], eax ; ror byte ptr [rdi], 0x84 ; retf
0x000000000002bb4b : add dword ptr [rbx + 0x294901e9], eax ; retf
0x00000000000696ce : add dword ptr [rbx + rdx*2], 0xa ; ret
0x0000000000010df7 : add dword ptr [rbx - 0x1d3ec01e], eax ; adc cl, byte ptr [rcx] ; retf 0xb60f
0x000000000000ed7e : add dword ptr [rbx - 0x1d3ec01e], eax ; or al, 9 ; retf 0xb60f
0x0000000000010cb6 : add dword ptr [rbx - 0x1d3ec01e], eax ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x0000000000010e69 : add dword ptr [rbx - 0x1d3ec01e], eax ; sbb byte ptr [rcx], cl ; retf 0xb60f
0x000000000001d65d : add dword ptr [rbx - 0x1f3ec020], eax ; adc cl, byte ptr [rcx] ; ret 0x8b48
0x000000000000f234 : add dword ptr [rbx - 0x1f3ec020], eax ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001bc85 : add dword ptr [rbx - 0x1f3ec020], eax ; adc cl, byte ptr [rcx] ; ret 0xf41
0x000000000001b646 : add dword ptr [rbx - 0x1f3ec020], eax ; or al, 9 ; ret 0x8b48
0x0000000000018ccc : add dword ptr [rbx - 0x1f3ec020], eax ; or al, 9 ; ret 0xb60f
0x0000000000019af5 : add dword ptr [rbx - 0x1f3ec020], eax ; or al, 9 ; ret 0xf41
0x000000000001f368 : add dword ptr [rbx - 0x1f3ec020], eax ; sbb byte ptr [rcx], cl ; ret 0x8b48
0x000000000001d70b : add dword ptr [rbx - 0x1f3ec020], eax ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x000000000001bd0d : add dword ptr [rbx - 0x1f3ec020], eax ; sbb byte ptr [rcx], cl ; ret 0xf41
0x000000000001fd99 : add dword ptr [rbx - 0x1f3ec020], r8d ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001f280 : add dword ptr [rbx - 0x1f3ec020], r8d ; or al, 9 ; ret 0xb60f
0x0000000000021723 : add dword ptr [rbx - 0x1f3ec020], r8d ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x000000000000fa83 : add dword ptr [rbx - 0x7cefdbac], ecx ; ret 0x6601
0x000000000000fa82 : add dword ptr [rbx - 0x7cefdbac], r9d ; ret 0x6601
0x000000000004ddc1 : add dword ptr [rcx + 0x1b801], ecx ; add byte ptr [rax], al ; ret
0x000000000004dfba : add dword ptr [rcx + 0x1b831], ecx ; add byte ptr [rax], al ; ret
0x000000000002bb4e : add dword ptr [rcx + 0x29], ecx ; retf
0x000000000000a6a8 : add dword ptr [rcx + 0x39], eax ; ret
0x000000000000dfba : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000050459 : add dword ptr [rcx + 0x5e], eax ; pop r15 ; ret
0x0000000000005813 : add dword ptr [rcx + 0xf], eax ; mov dh, 4 ; and al, 0x89 ; ret 0xe283
0x0000000000026434 : add dword ptr [rcx + rcx*4 + 9], eax ; ret
0x0000000000013a25 : add dword ptr [rcx + rdi - 0x2a], ecx ; jne 0x13a07 ; ret
0x0000000000017dc0 : add dword ptr [rcx + rdi - 0xf], eax ; jle 0x17d5b ; jmp 0x1481b
0x000000000000d967 : add dword ptr [rcx - 0x75], eax ; push rax ; add al, 0x83 ; ret 0x6601
0x000000000000d966 : add dword ptr [rcx - 0x75], r8d ; push rax ; add al, 0x83 ; ret 0x6601
0x000000000000345c : add dword ptr [rcx - 0x77], eax ; or al, 0x49 ; lea eax, dword ptr [rax + 2] ; ret
0x000000000000e7d7 : add dword ptr [rcx - 0x77], eax ; pop rbp ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000010892 : add dword ptr [rcx - 0x77], eax ; push rbp ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000010edf : add dword ptr [rcx - 0x77], eax ; sbb cl, byte ptr [rcx - 0x7d] ; ret 0xe90c
0x00000000000264ec : add dword ptr [rcx - 0x7d], eax ; loope 0x264fa ; mov dword ptr [rcx], r9d ; ret
0x0000000000008bd6 : add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x000000000003e858 : add dword ptr [rcx - 0x7d], eax ; ret 0x4902
0x000000000000c971 : add dword ptr [rcx - 0x7d], ecx ; ret 0x410c
0x000000000000e6c0 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4118
0x000000000001180d : add dword ptr [rcx - 0x7d], ecx ; ret 0x480c
0x000000000000f67f : add dword ptr [rcx - 0x7d], ecx ; ret 0x830c
0x000000000000dd33 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8318
0x000000000000f8ea : add dword ptr [rcx - 0x7d], ecx ; ret 0x8d0c
0x000000000000e6bf : add dword ptr [rcx - 0x7d], r9d ; ret 0x4118
0x0000000000042db8 : add dword ptr [rcx - 0x80], eax ; sti ; add al, byte ptr [rcx - 0x77] ; ret
0x0000000000009e57 : add dword ptr [rcx], ebp ; ret 0xd089
0x0000000000013abd : add dword ptr [rcx], edi ; retf 0x7e74
0x00000000000333f4 : add dword ptr [rdi + rcx + 0x44], eax ; ret 0x3944
0x0000000000022b34 : add dword ptr [rdi], ecx ; mov dh, 0x43 ; dec dword ptr [rax - 0x77] ; ret 0xe083
0x000000000000e86c : add dword ptr [rdi], ecx ; mov ds, word ptr [rsi - 0x7c000024] ; ret
0x000000000001006c : add dword ptr [rdi], ecx ; mov ds, word ptr [rsi - 0x7c00003c] ; ret 0x8501
0x000000000000ea83 : add dword ptr [rdi], ecx ; mov es, word ptr [rdi - 0x7c000026] ; ret
0x0000000000011769 : add dword ptr [rdi], ecx ; mov fs, word ptr [rcx - 0x7c000053] ; ret
0x000000000000fae3 : add dword ptr [rdi], ecx ; mov fs, word ptr [rdi] ; retf 0xffff
0x000000000000f861 : add dword ptr [rdi], ecx ; mov gs, word ptr [rcx - 0x7c000034] ; ret
0x0000000000011a5b : add dword ptr [rdi], ecx ; mov gs, word ptr [rdi - 0x7c000056] ; ret
0x000000000001cb76 : add dword ptr [rdi], ecx ; test byte ptr [rsp + rdi*8 - 0x7cb70001], dh ; ret
0x000000000001ca96 : add dword ptr [rdi], ecx ; test dword ptr [rbp + rdi*8 - 0x7cb70001], edx ; ret
0x00000000000179bb : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8341
0x0000000000027db3 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000040602 : add dword ptr [rdi], ecx ; xchg eax, edi ; ret 0x9d3c
0x000000000000497d : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x53c
0x000000000000c474 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc083
0x0000000000012770 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c83
0x000000000001af8a : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc8e9
0x00000000000105fd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf4e9
0x00000000000209cb : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf883
0x0000000000016f31 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf983
0x000000000000489c : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xff83
0x0000000000005834 : add dword ptr [rdx + rax*4 + 0xf], esi ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe901
0x00000000000018fb : add dword ptr [rdx + rcx + 0x48], esi ; mov dword ptr [rdi + 0x30], edx ; xor eax, eax ; ret
0x000000000006a99d : add dword ptr [rdx], 0x43 ; ret
0x0000000000069b15 : add dword ptr [rdx], 0x4e ; ret
0x000000000006dba4 : add dword ptr [rdx], 0x61 ; ret
0x000000000006a994 : add dword ptr [rdx], 0x65 ; ret
0x000000000006a1de : add dword ptr [rdx], 0x69 ; ret
0x000000000006cc97 : add dword ptr [rdx], eax ; ret
0x000000000006dc1d : add dword ptr [rdx], ecx ; ret
0x000000000005bebd : add dword ptr [rdx], esi ; ret
0x000000000000e296 : add dword ptr [rip - 0x7cbf0000], esp ; ret 0x4c01
0x000000000000c1bb : add dword ptr [rsi + 0x39], esp ; ret 0x8b41
0x000000000004fdc0 : add dword ptr [rsi + 0x63], ecx ; or al, 0x89 ; add r9, rcx ; jmp r9
0x000000000000d9b3 : add dword ptr [rsi - 0x3f], esp ; ret
0x000000000004959d : add dword ptr [rsi - 0x3f], esp ; ret 0xe908
0x0000000000003993 : add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000006a3b0 : add dword ptr [rsi], 2 ; ret
0x0000000000053cad : add eax, 0x1250fffc ; cld ; call rax
0x000000000004fcb2 : add eax, 0x18e7d ; ret
0x000000000004d8c5 : add eax, 0x221706 ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000049a6e : add eax, 0x2254c5 ; call qword ptr [rax]
0x00000000000498c9 : add eax, 0x22566a ; call qword ptr [rax]
0x0000000000046370 : add eax, 0x228bc3 ; call qword ptr [rax]
0x0000000000026cb2 : add eax, 0x248319 ; jmp qword ptr [rax]
0x000000000001de29 : add eax, 0x2511a2 ; call qword ptr [rax]
0x000000000001de03 : add eax, 0x2511c8 ; xor ebx, ebx ; call qword ptr [rax]
0x000000000001d82d : add eax, 0x25179e ; call qword ptr [rax]
0x000000000001d3b0 : add eax, 0x251b83 ; call qword ptr [rax]
0x0000000000019044 : add eax, 0x255f87 ; xor ebx, ebx ; call qword ptr [rax]
0x000000000000bb89 : add eax, 0x263442 ; mov rdi, r10 ; call qword ptr [rax]
0x0000000000008cca : add eax, 0x266269 ; shl rdi, 4 ; call qword ptr [rax]
0x0000000000008cff : add eax, 0x2662cc ; mov rdi, qword ptr [r14 + 0x50] ; call qword ptr [rax]
0x00000000000023f0 : add eax, 0x26cbdb ; call qword ptr [rax]
0x00000000000017ea : add eax, 0x26d850 ; add ebx, esi ; ret
0x00000000000082e0 : add eax, 0x490f4100 ; ret
0x000000000000247f : add eax, 0x490f4100 ; ret 0xfac1
0x0000000000001a55 : add eax, 0x4b60f00 ; adc byte ptr [rax + 1], cl ; ret
0x0000000000005ff0 : add eax, 0x4b60f00 ; add dword ptr [rax + 1], ecx ; ret 0x8545
0x000000000000417c : add eax, 0x4b60f00 ; sub byte ptr [rax + 1], cl ; ret
0x000000000003157a : add eax, 0x5c415d5b ; ret
0x000000000000c576 : add eax, 0x63480000 ; ret 0x894c
0x000000000004d7b2 : add eax, 0x8401 ; ret
0x000000000001de43 : add eax, 0x8918e0c1 ; ret 0xb60f
0x0000000000018b9e : add eax, 0x8918e0c1 ; ret 0xf41
0x0000000000068fe9 : add eax, 0x89600000 ; stc ; jmp qword ptr [rax]
0x000000000001f35a : add eax, 0x93fe083 ; ret 0x8b48
0x000000000001d702 : add eax, 0x93fe083 ; ret 0xb60f
0x000000000001bd02 : add eax, 0x93fe083 ; ret 0xf41
0x000000000003fc51 : add eax, 0x93fe283 ; ret 0xb60f
0x00000000000699bd : add eax, 0xb4c00000 ; stc ; call rax
0x000000000002713c : add eax, 0xb8fffffd ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000026490 : add eax, 8 ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x000000000001d722 : add eax, dword ptr [r11 - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000003350c : add eax, dword ptr [rax - 0x78] ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000013036 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004dd3f : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002ae04 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x76b3fe20], al ; ret
0x000000000001d90a : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7e020], al ; ret
0x000000000002fa3b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000000a02c : add eax, dword ptr [rax] ; jmp 0x6ace
0x0000000000022461 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + r13*4] ; add rax, rcx ; jmp rax
0x0000000000015833 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000022d34 : add eax, dword ptr [rax] ; movsxd rdx, dword ptr [rcx + rbp*4] ; add rdx, rcx ; jmp rdx
0x0000000000013ad7 : add eax, dword ptr [rbp - 0x77] ; ret
0x000000000005018d : add eax, dword ptr [rbx + 0x9443fe2] ; ret 0x63e9
0x000000000000ad33 : add eax, dword ptr [rbx - 0x1916fe1d] ; retf 0xffff
0x0000000000010e81 : add eax, dword ptr [rbx - 0x1e3ec01f] ; or al, 9 ; retf 0xb60f
0x0000000000021e14 : add eax, dword ptr [rbx - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0x8b48
0x000000000003ffe8 : add eax, dword ptr [rbx - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001f38a : add eax, dword ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0x8b48
0x000000000001d723 : add eax, dword ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000001bd29 : add eax, dword ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0xf41
0x0000000000069f4f : add eax, dword ptr [rbx] ; ret 0xe1a
0x000000000004d7a5 : add eax, dword ptr [rdi + 0x30] ; add rax, qword ptr [rdi + 0x40] ; ret
0x000000000004d7a9 : add eax, dword ptr [rdi + 0x40] ; ret
0x0000000000002534 : add eax, dword ptr [rdx + rdx*8 - 0x7cbe608c] ; ret 0x4802
0x0000000000069fd8 : add eax, dword ptr [rdx] ; retf
0x0000000000004d82 : add eax, eax ; jmp rax
0x0000000000027dba : add eax, eax ; ret
0x000000000000197a : add eax, ebp ; jmp rax
0x000000000003e1bf : add eax, ebp ; retf
0x000000000004f975 : add eax, ebx ; jmp r8
0x0000000000007b1b : add eax, ecx ; jmp rax
0x000000000000c027 : add eax, edi ; jmp rax
0x00000000000147ae : add eax, edx ; cmp r14d, r15d ; jmp rax
0x000000000000562d : add eax, edx ; jmp rax
0x0000000000027aa4 : add eax, edx ; ret
0x0000000000002b15 : add eax, esi ; jmp rax
0x0000000000027a5c : add eax, esi ; ret
0x000000000000b63a : add ebp, 0x40 ; mov rdi, rbp ; call qword ptr [rax]
0x000000000000fd78 : add ebp, 0xc ; mov r11d, eax ; jmp 0xc821
0x0000000000010532 : add ebp, 1 ; jmp 0xc81e
0x000000000003ff2b : add ebp, eax ; outsd dx, dword ptr [rsi] ; ret
0x000000000002809c : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000018422 : add ebx, dword ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000000343c : add ebx, ebp ; test eax, 0xc0894c90 ; ret
0x00000000000017ef : add ebx, esi ; ret
0x000000000004615f : add ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x0000000000048f1b : add ecx, dword ptr [rax - 0x75] ; and byte ptr [r14 - 0x3f], r12b ; ret 0xf08
0x00000000000405f0 : add ecx, dword ptr [rax - 0x77] ; je 0x40621 ; and byte ptr [rsi - 0x3f], ah ; ret
0x0000000000001996 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000498f1 : add ecx, dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000000c46e : add ecx, dword ptr [rbp - 0x57f89b0] ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc083
0x0000000000026d6f : add ecx, dword ptr [rcx + rcx*4 - 0x19] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000000193a : add ecx, dword ptr [rcx - 0x77] ; retf 0x894d
0x0000000000015b72 : add ecx, dword ptr [rdi] ; xchg byte ptr [rax], cl ; ret
0x000000000001c5e4 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000004fdae : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x7e80
0x000000000006d962 : add ecx, dword ptr [rdx + 0xe] ; and byte ptr [rbx + 0xaa20204], al ; ret
0x000000000006a2d2 : add ecx, dword ptr [rsi + rcx + 0x20] ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000012848 : add ecx, ebp ; retf
0x000000000004e800 : add ecx, ebp ; retf 0xfffa
0x000000000004fdc6 : add ecx, ecx ; jmp r9
0x0000000000034545 : add ecx, edx ; jmp rcx
0x0000000000005a35 : add ecx, esi ; jmp rcx
0x0000000000013a23 : add edi, 1 ; cmp rsi, r10 ; jne 0x13a09 ; ret
0x0000000000003402 : add edi, eax ; jmp rdi
0x00000000000264c4 : add edi, eax ; xor eax, eax ; mov qword ptr [rcx], rdi ; ret
0x000000000000d5b3 : add edi, ecx ; jmp rdi
0x0000000000001d20 : add edx, 1 ; test al, al ; jne 0x1d11 ; xor eax, eax ; ret
0x000000000006adb2 : add edx, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rax + rbx*2], 0xa ; ret
0x000000000005bebb : add edx, eax ; add dword ptr [rdx], esi ; ret
0x000000000005beb9 : add edx, eax ; add edx, eax ; add dword ptr [rdx], esi ; ret
0x000000000005beb7 : add edx, eax ; add edx, eax ; add edx, eax ; add dword ptr [rdx], esi ; ret
0x000000000000c904 : add edx, eax ; jmp rdx
0x0000000000001dbb : add edx, ebx ; jmp r10
0x0000000000003a44 : add edx, ebx ; jmp rdx
0x000000000000e43c : add edx, ecx ; jmp rdx
0x0000000000048ac7 : add edx, edi ; jmp rdx
0x0000000000003e73 : add edx, esi ; jmp rdx
0x0000000000004381 : add edx, esp ; jmp rdx
0x000000000000a02a : add esi, eax ; add eax, dword ptr [rax] ; jmp 0x6ad0
0x0000000000004a5c : add esi, eax ; jmp rsi
0x000000000000695c : add esi, edi ; jmp rsi
0x00000000000069b1 : add esi, esi ; add al, 0xe ; add cl, byte ptr [rax - 0x77] ; retf 0xe575
0x0000000000027e9d : add esi, esi ; ret 0x743f
0x000000000002a5a2 : add esp, 0x10 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000028ab5 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004ea38 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000269ba : add esp, 0x20 ; pop rbx ; ret
0x000000000004d53b : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004d6f9 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000027293 : add esp, 0x8038 ; ret
0x0000000000026c9d : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000026a15 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000000145e : add esp, 8 ; ret
0x00000000000272e5 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000000e704 : add esp, dword ptr [rsi - 0x3f] ; ret 0x4808
0x000000000004994f : add esp, dword ptr [rsi - 0x3f] ; ret 0xf08
0x000000000005030d : add qword ptr [r8], r8 ; add dh, dh ; ret 0xf04
0x000000000003e857 : add qword ptr [rcx - 0x7d], rax ; ret 0x4902
0x0000000000001dba : add r10, r11 ; jmp r10
0x000000000000fd77 : add r13, 0xc ; mov r11d, eax ; jmp 0xc822
0x000000000000a029 : add r14d, eax ; add eax, dword ptr [rax] ; jmp 0x6ad1
0x000000000005018c : add r8, qword ptr [rbx + 0x9443fe2] ; ret 0x63e9
0x000000000004f974 : add r8, rbx ; jmp r8
0x0000000000010cc1 : add r8b, byte ptr [r11 - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001e1c5 : add r8b, byte ptr [r11 - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000002172f : add r8b, byte ptr [rbx - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001fda5 : add r8b, byte ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000000ad32 : add r8d, dword ptr [r11 - 0x1916fe1d] ; retf 0xffff
0x000000000003ffe7 : add r8d, dword ptr [r11 - 0x1f3ec020] ; adc cl, byte ptr [rcx] ; ret 0xb60f
0x000000000001f625 : add r8d, dword ptr [r11 - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000002173b : add r8d, dword ptr [rbx - 0x1f3ec020] ; or al, 9 ; ret 0xb60f
0x000000000004fdc5 : add r9, rcx ; jmp r9
0x000000000000247e : add rax, 0x490f4100 ; ret 0xfac1
0x000000000002648f : add rax, 8 ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x000000000002ae03 : add rax, qword ptr [rax] ; add byte ptr [rbx - 0x76b3fe20], al ; ret
0x0000000000010e80 : add rax, qword ptr [rbx - 0x1e3ec01f] ; or al, 9 ; retf 0xb60f
0x000000000004d7a4 : add rax, qword ptr [rdi + 0x30] ; add rax, qword ptr [rdi + 0x40] ; ret
0x000000000004d7a8 : add rax, qword ptr [rdi + 0x40] ; ret
0x0000000000042450 : add rax, r13 ; jmp rax
0x0000000000002b14 : add rax, r14 ; jmp rax
0x0000000000004d81 : add rax, r8 ; jmp rax
0x0000000000001979 : add rax, rbp ; jmp rax
0x0000000000007b1a : add rax, rcx ; jmp rax
0x000000000000c026 : add rax, rdi ; jmp rax
0x00000000000147ad : add rax, rdx ; cmp r14d, r15d ; jmp rax
0x000000000000562c : add rax, rdx ; jmp rax
0x0000000000027aa3 : add rax, rdx ; ret
0x000000000002efc8 : add rax, rsi ; jmp rax
0x0000000000027a5b : add rax, rsi ; ret
0x000000000000b639 : add rbp, 0x40 ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000034544 : add rcx, r10 ; jmp rcx
0x0000000000005a34 : add rcx, rsi ; jmp rcx
0x000000000000dbbd : add rdi, r8 ; jmp rdi
0x0000000000003401 : add rdi, rax ; jmp rdi
0x00000000000264c3 : add rdi, rax ; xor eax, eax ; mov qword ptr [rcx], rdi ; ret
0x000000000000d5b2 : add rdi, rcx ; jmp rdi
0x000000000000452f : add rdx, r11 ; jmp rdx
0x0000000000004380 : add rdx, r12 ; jmp rdx
0x000000000004e2db : add rdx, r14 ; jmp rdx
0x0000000000048ac6 : add rdx, r15 ; jmp rdx
0x000000000000c903 : add rdx, rax ; jmp rdx
0x0000000000003a43 : add rdx, rbx ; jmp rdx
0x000000000000e43b : add rdx, rcx ; jmp rdx
0x0000000000003e72 : add rdx, rsi ; jmp rdx
0x0000000000004a5b : add rsi, r8 ; jmp rsi
0x000000000000f98a : add rsi, rax ; jmp rsi
0x000000000000695b : add rsi, rdi ; jmp rsi
0x000000000004ea37 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000269b9 : add rsp, 0x20 ; pop rbx ; ret
0x000000000004d53a : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004d6f8 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000027292 : add rsp, 0x8038 ; ret
0x0000000000026a14 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000000145d : add rsp, 8 ; ret
0x00000000000272e4 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000006985 : add sil, sil ; add al, 0xe ; add cl, byte ptr [rax - 0x77] ; retf 0x840f
0x0000000000010eee : add sil, sil ; ret 0xf04
0x000000000005020e : add sil, sil ; ret 0xf10
0x0000000000026cb5 : and al, 0 ; jmp qword ptr [rax]
0x000000000001253f : and al, 0x10 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd039
0x000000000000ea6c : and al, 0x10 ; add al, 0xf ; xchg eax, esp ; ret 0xd038
0x000000000000d941 : and al, 0x10 ; cmp cl, byte ptr [rdi] ; sahf ; ret 0xd038
0x0000000000027276 : and al, 0x10 ; mov qword ptr [rsp + 0x18], rax ; call rsi
0x0000000000011ac2 : and al, 0x10 ; mov r14, rax ; call 0x4dd07
0x0000000000026093 : and al, 0x10 ; shl rdi, 2 ; call qword ptr [rax]
0x000000000002727b : and al, 0x18 ; call rsi
0x000000000004d87e : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004998b : and al, 0x1c ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000002dffc : and al, 0x24 ; call 0x2a254
0x000000000004b9fd : and al, 0x28 ; call 0x37d04
0x000000000000531a : and al, 0x30 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xb801
0x0000000000017af2 : and al, 0x30 ; call 0x13dd4
0x0000000000022380 : and al, 0x3d ; mov edi, 0x89000000 ; ret 0x8676
0x000000000004d6c5 : and al, 0x48 ; call rsi
0x000000000004d4ee : and al, 0x48 ; je 0x4d570 ; mov rdi, qword ptr [r10 + 0x50] ; call rax
0x000000000004d4ed : and al, 0x48 ; je 0x4d571 ; mov rdi, qword ptr [r10 + 0x50] ; call rax
0x0000000000049a6a : and al, 0x50 ; mov rax, qword ptr [rip + 0x2254c5] ; call qword ptr [rax]
0x0000000000017aed : and al, 0x50 ; mov rdx, qword ptr [rsp + 0x30] ; call 0x13dd9
0x000000000002f255 : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000025b19 : and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf 0x8941
0x0000000000025b27 : and al, 0x68 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf 0x8941
0x00000000000181c4 : and al, 0x84 ; ror byte ptr [rdi], 0x88 ; ret
0x0000000000025e2d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe083
0x000000000001463c : and al, 0x89 ; ret 0x894c
0x0000000000005818 : and al, 0x89 ; ret 0xe283
0x000000000000b49a : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000010577 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x95e9
0x0000000000008640 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4172
0x0000000000026b85 : and al, 0xbf ; or byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000012df6 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x000000000001347c : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3949
0x000000000001348f : and al, 0xcc ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x00000000000260f3 : and al, 0xd4 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff2
0x0000000000025c5c : and al, 0xdc ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3949
0x000000000002dffd : and al, 0xe8 ; ret 0xffff
0x00000000000344f7 : and al, 0xf ; xchg eax, esp ; ret 0x3948
0x00000000000208bc : and al, 0xf ; xchg eax, esp ; ret 0xca08
0x0000000000025c6f : and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x0000000000016046 : and al, 0xf8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000053c69 : and al, 0xfc ; call rax
0x000000000005402d : and al, 0xfd ; call rsi
0x0000000000054029 : and al, 0xfd ; dec eax ; and al, 0xfd ; call rsi
0x0000000000054065 : and al, 0xfd ; jmp qword ptr [rdi]
0x0000000000006477 : and al, 1 ; retf 0x1089
0x0000000000005246 : and al, 1 ; retf 0x8548
0x0000000000028014 : and al, 2 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000003017e : and al, 4 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf883
0x0000000000025a7d : and al, 8 ; call qword ptr [rax]
0x00000000000182ea : and al, 8 ; jmp 0x1452b
0x00000000000182e9 : and al, 8 ; jmp 0x1452c
0x0000000000026afc : and al, 8 ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000046373 : and al, byte ptr [rax] ; call qword ptr [rax]
0x0000000000049e69 : and al, byte ptr [rax] ; mov edi, 0x1000 ; call qword ptr [rax]
0x000000000004c5af : and al, byte ptr [rax] ; mov edi, 0x60 ; call qword ptr [rax]
0x0000000000049e07 : and al, byte ptr [rax] ; mov edi, 0x80 ; call qword ptr [rax]
0x000000000004d8c8 : and al, byte ptr [rax] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000004d909 : and al, byte ptr [rax] ; mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000043fc0 : and al, ch ; retf 0xff57
0x000000000006ac60 : and al, dh ; sti ; call rax
0x0000000000053c6d : and bh, ah ; call rax
0x0000000000053c99 : and bh, ah ; ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x0000000000048f1e : and byte ptr [r14 - 0x3f], r12b ; ret 0xf08
0x0000000000048dd8 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000078a4 : and byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002bd7e : and byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0xeb ; or dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000069251 : and byte ptr [rax], al ; add al, ah ; xor bh, ah ; jmp rax
0x000000000003f7a5 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2c2a6
0x000000000003f7e6 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x2c2a9
0x000000000003f814 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x2c2a9
0x000000000006b4f5 : and byte ptr [rax], al ; add byte ptr [rax], bh ; cld ; call rsi
0x000000000001f109 : and byte ptr [rax], al ; add byte ptr [rbx - 0x79f0f508], al ; retf
0x000000000006945c : and byte ptr [rbp - 2], ah ; call rax
0x000000000006d965 : and byte ptr [rbx + 0xaa20204], al ; ret
0x000000000000dfe7 : and byte ptr [rbx + rax*4 - 0xa], dh ; ret 0xf10
0x0000000000013ba2 : and byte ptr [rbx + rsi - 0xa], dh ; ret 0xf10
0x000000000006b3a2 : and byte ptr [rbx - 0x73fc79fc], al ; add ah, byte ptr [rcx + 0xa] ; ret
0x000000000000033f : and byte ptr [rcx + 0x3c0ef18d], bh ; retf 0x28ee
0x000000000002e006 : and byte ptr [rcx - 0x77], al ; ret
0x0000000000055a74 : and byte ptr [rcx - 1], dl ; jmp rdx
0x000000000000ed4d : and byte ptr [rdi], cl ; test byte ptr [rdi + rdi*8 - 1], ch ; push rsi ; ret 0xf10
0x00000000000405f5 : and byte ptr [rsi - 0x3f], ah ; ret
0x0000000000048f1f : and byte ptr [rsi - 0x3f], ah ; ret 0xf08
0x0000000000053ea8 : and cl, byte ptr [rsp + rdi*8 - 1] ; js 0x53f24 ; cld ; call rbx
0x000000000004f6f8 : and dword ptr [rax], eax ; mov edi, 0x6c ; call qword ptr [rax]
0x000000000004f501 : and dword ptr [rax], eax ; mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax] ; jmp rax
0x000000000005192c : and dword ptr [rbx - 5], edi ; jmp qword ptr [rcx]
0x0000000000068308 : and dword ptr [rcx], ecx ; or al, 0 ; cld ; jne 0x68315 ; jmp qword ptr [rcx]
0x0000000000068310 : and dword ptr [rcx], ecx ; or al, 0 ; fcomp dword ptr [rdx - 1] ; jmp qword ptr [rcx]
0x0000000000068050 : and dword ptr [rcx], ecx ; or al, 0 ; loop 0x6805d ; call qword ptr [rbx]
0x00000000000674b0 : and dword ptr [rcx], ecx ; or al, 0 ; retf
0x00000000000674a8 : and dword ptr [rcx], ecx ; or al, 0 ; retf 0
0x0000000000054061 : and eax, 0x2412fffd ; std ; jmp qword ptr [rdi]
0x0000000000054055 : and eax, 0x25c0fffd ; std ; call rcx
0x000000000005405d : and eax, 0x25dffffd ; std ; call qword ptr [rdx]
0x0000000000028d06 : and eax, 0x80 ; jne 0x28d1f ; ret
0x000000000000e297 : and eax, 0x83410000 ; ret 0x4c01
0x0000000000050457 : and eax, 1 ; pop r14 ; pop r15 ; ret
0x000000000003004b : and eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x2c2a9
0x0000000000033465 : and eax, dword ptr [rax] ; mov edi, 0x108 ; call qword ptr [rax]
0x000000000000ad34 : and ebx, 1 ; jmp 0x7827
0x000000000002a872 : and ebx, dword ptr [rbx + 0x5d] ; mov eax, r12d ; pop r12 ; ret
0x000000000004d830 : and ebx, edx ; call qword ptr [rax]
0x0000000000026432 : and ecx, 1 ; mov dword ptr [rcx], r9d ; ret
0x0000000000053844 : and ecx, ecx ; sti ; jmp qword ptr [rcx]
0x0000000000053138 : and edi, dword ptr [rdx - 0x5d1e0005] ; sti ; jmp rcx
0x0000000000051780 : and esi, dword ptr [rsi - 5] ; jmp qword ptr [rbx]
0x000000000001757e : and esi, esi ; ret 0xb810
0x000000000004fcdc : and esi, esi ; ret 0xf04
0x0000000000053c9d : and esp, edi ; call qword ptr [rax]
0x0000000000026431 : and r9d, 1 ; mov dword ptr [rcx], r9d ; ret
0x000000000004d82f : and rbx, rdx ; call qword ptr [rax]
0x000000000000a0e2 : bnd jae 0xa0ea ; dec dword ptr [rax + 1] ; ret
0x00000000000018e0 : bswap ecx ; mov dword ptr [rdx + 0x28], ecx ; ret
0x0000000000017af4 : call 0x13dd2
0x00000000000451dc : call 0x149a
0x000000000006d9e8 : call 0x2706d7ef
0x000000000002af48 : call 0x27a22
0x000000000002b5f6 : call 0x280b2
0x000000000002cae8 : call 0x28d02
0x000000000002dffe : call 0x2a252
0x000000000003e1f1 : call 0x2a412
0x000000000003e5b8 : call 0x2a8b2
0x000000000003efb8 : call 0x2b242
0x0000000000030052 : call 0x2c2a2
0x0000000000031a4f : call 0x2dca2
0x0000000000032486 : call 0x2ef32
0x0000000000037a27 : call 0x33d12
0x000000000004b9ff : call 0x37d02
0x0000000000011ac7 : call 0x4dd02
0x00000000000260ee : call 0xffffffff948c2b1e
0x000000000000dcd9 : call 0xffffffffc384dce1
0x0000000000055a94 : call 0xffffffffe30559ec
0x0000000000001593 : call qword ptr [rax]
0x00000000000536e3 : call qword ptr [rbp + 0x17fffbaf]
0x000000000001898f : call qword ptr [rbx]
0x00000000000512b3 : call qword ptr [rdi]
0x0000000000025f9d : call qword ptr [rdx]
0x00000000000531e7 : call qword ptr [rsi]
0x000000000004d508 : call r11
0x0000000000001828 : call rax
0x000000000004d509 : call rbx
0x0000000000015381 : call rcx
0x0000000000053dcf : call rdi
0x000000000000e652 : call rdx
0x000000000002727d : call rsi
0x00000000000168cd : call rsp
0x0000000000053fd4 : cdq ; or ch, bh ; push rcx ; or ch, bh ; jmp rsi
0x0000000000069035 : cdq ; stc ; jmp qword ptr [rax]
0x000000000002657b : cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000004a10 : clc ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xfa83
0x0000000000004238 : clc ; adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca09
0x000000000006db08 : clc ; adc dh, bh ; call rcx
0x0000000000025c70 : clc ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x0000000000016047 : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000179ba : clc ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8341
0x000000000001276f : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c83
0x000000000001af89 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc8e9
0x00000000000105fc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf4e9
0x0000000000016f30 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf983
0x000000000000489b : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xff83
0x000000000004fdad : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x7e80
0x00000000000208bb : clc ; and al, 0xf ; xchg eax, esp ; ret 0xca08
0x000000000004f6f7 : clc ; and dword ptr [rax], eax ; mov edi, 0x6c ; call qword ptr [rax]
0x0000000000054788 : clc ; cmp ch, 0xff ; fdivr dword ptr [rsi - 3] ; call rax
0x000000000003f64e : clc ; jg 0x3f669 ; xchg byte ptr [rdi - 0x7600000f], dh ; ret 0x8d48
0x000000000000c028 : clc ; jmp rax
0x000000000004dd9e : clc ; or eax, 0xc0310674 ; ret
0x0000000000028000 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000004e72 : clc ; ret
0x0000000000053c24 : clc ; sub al, 0xfc ; call rax
0x0000000000053bc0 : clc ; sub edi, esp ; jmp rax
0x0000000000035c61 : cld ; add byte ptr [rax + 9], cl ; ret 0xb60f
0x0000000000053b16 : cld ; call qword ptr [rax]
0x0000000000053c26 : cld ; call rax
0x0000000000053eae : cld ; call rbx
0x0000000000053dce : cld ; call rdi
0x000000000006b4fa : cld ; call rsi
0x0000000000053d82 : cld ; call rsp
0x0000000000053b4a : cld ; dec dword ptr [rax + 0x2b] ; cld ; call qword ptr [rax]
0x0000000000053c1e : cld ; dec dword ptr [rax - 0x70003f4] ; sub al, 0xfc ; call rax
0x0000000000053eee : cld ; dec dword ptr [rax - 0x78] ; cld ; jmp rbx
0x0000000000053dc6 : cld ; dec dword ptr [rcx + 0x39] ; cld ; lcall ptr [rbx + rax*2 - 4] ; call rdi
0x0000000000053eb6 : cld ; dec dword ptr [rsi - 0x73] ; cld ; jmp rdx
0x0000000000053d7e : cld ; dec dword ptr [rsp + rdi] ; cld ; call rsp
0x0000000000053e76 : cld ; inc dword ptr [rbx + 0x33fffc6e] ; outsb dx, byte ptr [rsi] ; cld ; jmp rbx
0x0000000000053e42 : cld ; inc dword ptr [rdi + 0x54] ; cld ; inc dword ptr [rdi + 0x54] ; cld ; jmp qword ptr [rbx]
0x0000000000053e46 : cld ; inc dword ptr [rdi + 0x54] ; cld ; jmp qword ptr [rbx]
0x0000000000053eea : cld ; inc dword ptr [rdx] ; mov bh, ah ; dec dword ptr [rax - 0x78] ; cld ; jmp rbx
0x0000000000053e9a : cld ; inc ecx ; outsd dx, dword ptr [rsi] ; cld ; inc ecx ; outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x0000000000053e9e : cld ; inc ecx ; outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x0000000000053aaa : cld ; jmp qword ptr [rax]
0x0000000000053e4a : cld ; jmp qword ptr [rbx]
0x0000000000053ea6 : cld ; jmp qword ptr [rdx]
0x0000000000053ea2 : cld ; jmp qword ptr [rsi]
0x0000000000053b12 : cld ; jmp rax
0x0000000000053e7e : cld ; jmp rbx
0x0000000000053f06 : cld ; jmp rdi
0x0000000000053eba : cld ; jmp rdx
0x0000000000053f1a : cld ; jmp rsp
0x000000000006830c : cld ; jne 0x68311 ; jmp qword ptr [rcx]
0x0000000000053c96 : cld ; lcall ptr [rax + 0x22] ; cld ; ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x0000000000053c66 : cld ; lcall ptr [rax + 0x24] ; cld ; call rax
0x0000000000053c0e : cld ; lcall ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000053c0a : cld ; lcall ptr [rax + 0x28] ; cld ; lcall ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000069296 : cld ; lcall ptr [rax - 0x5fffffdc] ; cld ; jmp rax
0x0000000000053d7a : cld ; lcall ptr [rbp + 0x3b] ; cld ; dec dword ptr [rsp + rdi] ; cld ; call rsp
0x0000000000053dca : cld ; lcall ptr [rbx + rax*2 - 4] ; call rdi
0x0000000000053f12 : cld ; lcall ptr [rip - 0x400033c] ; leave ; cld ; jmp rsp
0x0000000000053c9a : cld ; ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x0000000000053dfe : cld ; ljmp ptr [rbx + 0x42] ; cld ; call rax
0x0000000000053efa : cld ; ljmp ptr [rbx - 0xa000339] ; retf 0xfffc
0x000000000004a8ce : cld ; or byte ptr [rax + 0x19], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4103
0x0000000000053e7a : cld ; push qword ptr [rbx] ; outsb dx, byte ptr [rsi] ; cld ; jmp rbx
0x0000000000053f46 : cld ; push qword ptr [rsi] ; or edi, ebp ; push qword ptr [rsi] ; or edi, ebp ; jmp rax
0x0000000000053efe : cld ; push rbp ; retf 0xfffc
0x000000000004ba00 : cld ; ret 0xfffe
0x00000000000276d2 : cli ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8348
0x0000000000040601 : cli ; add dword ptr [rdi], ecx ; xchg eax, edi ; ret 0x9d3c
0x000000000000497c : cli ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x53c
0x000000000000c473 : cli ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc083
0x00000000000209ca : cli ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf883
0x0000000000069af2 : cli ; call qword ptr [rax]
0x000000000000da4d : cli ; jge 0xda63 ; xchg eax, esp ; ret 0xc238
0x000000000000de5a : cli ; jge 0xde70 ; xchg eax, esp ; ret 0xe8c1
0x000000000000de5a : cli ; jge 0xde75 ; xchg eax, esp ; ret 0xe8c1
0x0000000000069096 : cli ; jmp qword ptr [rax]
0x0000000000052f08 : cli ; jmp rdi
0x0000000000048ac8 : cli ; jmp rdx
0x0000000000020288 : cli ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000000f358 : cli ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x0000000000053f00 : cmc ; retf 0xfffc
0x0000000000027ea2 : cmc ; shl eax, 8 ; or eax, edx ; ret
0x00000000000263d7 : cmove eax, edx ; ret
0x0000000000027a6e : cmove eax, esi ; ret
0x0000000000027a6d : cmove rax, rsi ; ret
0x000000000004e191 : cmp al, 0x92 ; mov byte ptr [rsi], dil ; ret
0x0000000000006959 : cmp al, 0xbe ; add rsi, rdi ; jmp rsi
0x0000000000009c75 : cmp al, 0xf ; xchg eax, ebp ; sar dword ptr [rdi], 0xf ; xchg eax, ebp ; ret 0xd184
0x0000000000053d81 : cmp al, 0xfc ; call rsp
0x0000000000056600 : cmp al, byte ptr [rax] ; ret
0x0000000000048678 : cmp al, ch ; ret 0xfe2b
0x0000000000001d65 : cmp al, cl ; jne 0x1d1e ; xor eax, eax ; ret
0x00000000000680dc : cmp bh, 0xff ; call qword ptr [rbx]
0x00000000000556b1 : cmp bh, bh ; push rsp ; cmp edi, edi ; jmp rsp
0x0000000000054081 : cmp bh, ch ; call rax
0x0000000000054201 : cmp bh, ch ; push qword ptr [rax] ; cmp bh, ch ; call rax
0x00000000000512b1 : cmp bl, bh ; call qword ptr [rdi]
0x00000000000512ad : cmp bl, bh ; lcall ptr [rax + rdi - 5] ; call qword ptr [rdi]
0x000000000004d7a3 : cmp byte ptr [rax + 3], cl ; xor byte ptr [r8 + 3], r9b ; ret
0x00000000000094ab : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000003350f : cmp byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000549bc : cmp byte ptr [rbp - 0x69270003], dl ; std ; jmp rax
0x00000000000692f8 : cmp byte ptr [rbx], ch ; add byte ptr [rax], al ; mov al, 0x95 ; cld ; jmp rax
0x00000000000065c1 : cmp byte ptr [rcx - 0x77], cl ; fiadd dword ptr [rbx - 0x76b3fe13] ; retf
0x0000000000045ed6 : cmp byte ptr [rcx - 0x7d], al ; ret 0x8102
0x000000000000c4b5 : cmp byte ptr [rcx - 0x7d], al ; ret 0x8301
0x000000000006b4f8 : cmp byte ptr [rdx - 4], al ; call rsi
0x0000000000006308 : cmp byte ptr [rsi - 0x3f], ah ; ret 0xf08
0x0000000000054789 : cmp ch, 0xff ; fdivr dword ptr [rsi - 3] ; call rax
0x0000000000002915 : cmp cl, 0x2c ; je 0x2926 ; ret
0x0000000000003988 : cmp cl, 4 ; jbe 0x3975 ; ret
0x000000000000533a : cmp cl, byte ptr [rax - 0x77] ; rol dword ptr [rbx - 0x7cb7fe40], 1 ; ret 0x4801
0x0000000000009fd1 : cmp cl, byte ptr [rdi] ; ret 0x189
0x000000000000d943 : cmp cl, byte ptr [rdi] ; sahf ; ret 0xd038
0x0000000000054240 : cmp dil, bpl ; call rax
0x0000000000002959 : cmp dl, 0x7d ; sete al ; ret
0x0000000000015b6f : cmp dword ptr [rbx + r8], 0xf ; xchg byte ptr [rax], cl ; ret
0x0000000000015b70 : cmp dword ptr [rbx + rax], 0xf ; xchg byte ptr [rax], cl ; ret
0x000000000004dd9d : cmp eax, 0xd ; je 0x4ddaf ; xor eax, eax ; ret
0x0000000000069389 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; push rcx ; std ; jmp qword ptr [rax]
0x0000000000054085 : cmp ebp, edi ; call rax
0x000000000005423d : cmp ebp, edi ; dec dword ptr [rax + 0x3a] ; std ; call rax
0x00000000000542d1 : cmp ebp, edi ; inc eax ; cmp ebp, edi ; call rax
0x00000000000540b5 : cmp ebp, edi ; jmp rax
0x0000000000026eb5 : cmp ecx, eax ; jae 0x26eaf ; xor eax, eax ; ret
0x0000000000017dc2 : cmp ecx, esi ; jle 0x17d59 ; jmp 0x14819
0x0000000000017dc1 : cmp ecx, r14d ; jle 0x17d5a ; jmp 0x1481a
0x0000000000026eb4 : cmp ecx, r8d ; jae 0x26eb0 ; xor eax, eax ; ret
0x00000000000556b5 : cmp edi, edi ; jmp rsp
0x0000000000026ec1 : cmp edi, edx ; jb 0x26e1a ; ret
0x0000000000013a65 : cmp edi, edx ; jne 0x13a46 ; sub eax, esi ; ret
0x0000000000053d7d : cmp edi, esp ; dec dword ptr [rsp + rdi] ; cld ; call rsp
0x0000000000002368 : cmp edx, 0x63fff ; jle 0x2380 ; ret
0x0000000000013b2d : cmp edx, eax ; jae 0x13b29 ; mov eax, 0xffffffff ; ret
0x0000000000002391 : cmp esi, 0x63 ; jg 0x23a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000147b1 : cmp esi, edi ; jmp rax
0x0000000000013a27 : cmp esi, edx ; jne 0x13a05 ; ret
0x0000000000053dc9 : cmp esp, edi ; lcall ptr [rbx + rax*2 - 4] ; call rdi
0x0000000000053dc8 : cmp r12, rdi ; lcall ptr [rbx + rax*2 - 4] ; call rdi
0x00000000000147b0 : cmp r14d, r15d ; jmp rax
0x0000000000001d64 : cmp r8b, cl ; jne 0x1d1f ; xor eax, eax ; ret
0x0000000000013a64 : cmp rdi, rdx ; jne 0x13a47 ; sub eax, esi ; ret
0x0000000000013a26 : cmp rsi, r10 ; jne 0x13a06 ; ret
0x000000000004e7ee : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add bh, dh ; ret 0x20c
0x0000000000053128 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov edi, 0xc02efffb ; sti ; jmp qword ptr [rdi]
0x00000000000549f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rsi]
0x00000000000531e5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; call qword ptr [rsi]
0x0000000000027887 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, eax ; ret
0x000000000002cf1d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005315d : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rcx
0x0000000000053159 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; push qword ptr [rsi - 0x59] ; sti ; jmp rcx
0x000000000002657c : cwde ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000053239 : cwde ; sti ; call rdx
0x0000000000053cc4 : cwde ; sub ah, bh ; call rax
0x000000000001c8b3 : dec byte ptr [rax + 0xf] ; ret 0x96eb
0x000000000000584f : dec byte ptr [rdi] ; ret
0x0000000000009088 : dec byte ptr [rdi] ; retf
0x000000000001f750 : dec byte ptr [rdi] ; test byte ptr [rdx + rdx*2], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000018dc0 : dec dword ptr [r8 - 0x77] ; ret
0x0000000000022b37 : dec dword ptr [r8 - 0x77] ; ret 0xe083
0x0000000000053b4b : dec dword ptr [rax + 0x2b] ; cld ; call qword ptr [rax]
0x000000000001e02a : dec dword ptr [rax + 0x39] ; ret 0xf077
0x000000000001096f : dec dword ptr [rax + 0x39] ; sbb byte ptr [rdi], r9b ; ret 0x9ae9
0x000000000005423f : dec dword ptr [rax + 0x3a] ; std ; call rax
0x000000000000c306 : dec dword ptr [rax + 0x63] ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x0000000000033bdb : dec dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000000a0e5 : dec dword ptr [rax + 1] ; ret
0x000000000004d8af : dec dword ptr [rax - 0x39] ; ret 0xf000
0x0000000000053c1f : dec dword ptr [rax - 0x70003f4] ; sub al, 0xfc ; call rax
0x0000000000018dbd : dec dword ptr [rax - 0x73] ; dec dword ptr [r8 - 0x77] ; ret
0x000000000005111b : dec dword ptr [rax - 0x770004cf] ; xor ebx, edi ; jmp rax
0x00000000000182e6 : dec dword ptr [rax - 0x77] ; and al, 8 ; jmp 0x1452f
0x000000000002720d : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x77] ; neg dword ptr [rbx + 0x5d] ; jmp rax
0x00000000000351e5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xff56
0x0000000000009a50 : dec dword ptr [rax - 0x77] ; ret
0x0000000000003565 : dec dword ptr [rax - 0x77] ; ret 0x294c
0x00000000000138f9 : dec dword ptr [rax - 0x77] ; ret 0x3949
0x000000000003d620 : dec dword ptr [rax - 0x77] ; ret 0x5b41
0x000000000001777e : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000003870f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000022b38 : dec dword ptr [rax - 0x77] ; ret 0xe083
0x000000000001e047 : dec dword ptr [rax - 0x77] ; retf
0x0000000000053eef : dec dword ptr [rax - 0x78] ; cld ; jmp rbx
0x0000000000043875 : dec dword ptr [rax - 0x7b] ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8548
0x0000000000041cad : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000002aa4c : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rbx + 0x48], 0x89 ; ret
0x000000000001c9fd : dec dword ptr [rax - 0x7d] ; ret
0x000000000001ddba : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000003d91 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x0000000000004c36 : dec dword ptr [rax - 0x7d] ; ret 0xa801
0x0000000000068fe7 : dec dword ptr [rax] ; add eax, 0x89600000 ; stc ; jmp qword ptr [rax]
0x00000000000333f1 : dec dword ptr [rbp + 0xf44017a] ; ret 0x3944
0x000000000002ee96 : dec dword ptr [rbp + rcx*4 + 0xd] ; ret 0x27f
0x000000000000aa44 : dec dword ptr [rbp + rcx*4 + 5] ; hlt ; ret 4
0x000000000000a9bd : dec dword ptr [rbp + rcx*4 + 5] ; pop rbx ; ret
0x000000000004000d : dec dword ptr [rbp - 0x77] ; retf
0x0000000000049b3d : dec dword ptr [rbx + 0x63] ; mov ebp, 0xe8014c00 ; jmp rax
0x000000000001e058 : dec dword ptr [rbx - 0x7ab7db8c] ; test byte ptr [rdi], 0x85 ; retf
0x0000000000010ad3 : dec dword ptr [rbx - 0x7acfdbbc] ; ror byte ptr [rdi], 0x84 ; ret 3
0x000000000000757f : dec dword ptr [rbx - 0x7c8fdbbc] ; ret
0x0000000000055e5f : dec dword ptr [rbx] ; xchg edi, edi ; call rsp
0x0000000000055e5b : dec dword ptr [rbx] ; xchg edi, edi ; dec dword ptr [rbx] ; xchg edi, edi ; call rsp
0x0000000000055e2b : dec dword ptr [rbx] ; xchg edi, edi ; dec dword ptr [rbx] ; xchg edi, edi ; jmp rsp
0x0000000000055e2f : dec dword ptr [rbx] ; xchg edi, edi ; jmp rsp
0x00000000000531e3 : dec dword ptr [rcx + 0x16fffba6] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; call qword ptr [rsi]
0x0000000000053dc7 : dec dword ptr [rcx + 0x39] ; cld ; lcall ptr [rbx + rax*2 - 4] ; call rdi
0x000000000000437b : dec dword ptr [rcx + 0x63] ; adc al, 0x94 ; add rdx, r12 ; jmp rdx
0x000000000002fe31 : dec dword ptr [rcx + 0x63] ; ret 0x8944
0x000000000005383f : dec dword ptr [rcx + rcx*8 - 0x36de0005] ; sti ; jmp qword ptr [rcx]
0x00000000000537d3 : dec dword ptr [rcx - 0x64] ; sti ; call rax
0x00000000000537cf : dec dword ptr [rcx - 0x64] ; sti ; dec dword ptr [rcx - 0x64] ; sti ; call rax
0x00000000000531df : dec dword ptr [rcx - 0x7600045a] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; call qword ptr [rsi]
0x000000000003ff88 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000002f8b : dec dword ptr [rcx - 0x77] ; ret 0x4f6
0x0000000000009711 : dec dword ptr [rcx - 0x77] ; ror dword ptr [rcx - 0x7d], cl ; ret
0x00000000000118dc : dec dword ptr [rcx - 0x7d] ; ret 0x830c
0x0000000000049599 : dec dword ptr [rdi] ; mov bh, 0x50 ; add dword ptr [rsi - 0x3f], esp ; ret 0xe908
0x0000000000004ae9 : dec dword ptr [rdi] ; mov dh, 0x56 ; add bh, byte ptr [rcx] ; retf 0x3fe9
0x0000000000012c97 : dec dword ptr [rdi] ; ret 0x8b48
0x0000000000025279 : dec dword ptr [rdi] ; ret 0xabe9
0x00000000000263d6 : dec dword ptr [rdi] ; ret 0xfc3
0x000000000004cb6d : dec dword ptr [rdi] ; test ah, cl ; retf
0x000000000004d345 : dec dword ptr [rdi] ; test ah, dh ; ret
0x0000000000017b11 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x76000005], bh ; ret
0x000000000002ce6f : dec dword ptr [rdi] ; test dl, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000024e99 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd184
0x0000000000053eb7 : dec dword ptr [rsi - 0x73] ; cld ; jmp rdx
0x0000000000053d7f : dec dword ptr [rsp + rdi] ; cld ; call rsp
0x000000000005471f : dec dword ptr [rsp + rsi*2] ; std ; call rcx
0x000000000005471b : dec dword ptr [rsp + rsi*2] ; std ; dec dword ptr [rsp + rsi*2] ; std ; call rcx
0x000000000005402b : dec eax ; and al, 0xfd ; call rsi
0x0000000000069387 : dec eax ; cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; push rcx ; std ; jmp qword ptr [rax]
0x000000000001784e : dec qword ptr [rax - 0x77] ; ret 0x840f
0x000000000001a415 : enter -0x72b4, 0x1d ; retf 3
0x0000000000028d05 : enter -0x7fdb, 0 ; add byte ptr [rax], al ; jne 0x28d20 ; ret
0x0000000000053885 : enter -5, -0x11 ; out 0xfb, eax ; call rcx
0x0000000000025f99 : enter 0, 0 ; call qword ptr [rdx]
0x000000000001de04 : enter 0x2511, 0 ; xor ebx, ebx ; call qword ptr [rax]
0x0000000000069388 : enter 0x3b, 0 ; add byte ptr [rcx - 3], dl ; jmp qword ptr [rax]
0x0000000000007004 : enter 0xf48, -0x51 ; ret 0x3d48
0x0000000000009bc7 : enter 1, 0 ; jmp 0x5e89
0x0000000000009110 : enter 1, 0 ; mov r15, rdx ; jmp 0x5411
0x000000000004ec79 : fadd dword ptr [rbx - 0x5cf0f820] ; ret 0xde73
0x0000000000013b02 : fadd dword ptr [rcx + 3] ; add al, 0x39 ; retf 0x3574
0x0000000000054060 : fbld dword ptr [rip + 0x2412fffd] ; std ; jmp qword ptr [rdi]
0x00000000000095a2 : fbld dword ptr [rsi - 0x3f] ; ret 0xf08
0x0000000000026c0f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000068314 : fcomp dword ptr [rdx - 1] ; jmp qword ptr [rcx]
0x000000000005478c : fdivr dword ptr [rsi - 3] ; call rax
0x0000000000027641 : fdivrp st(6) ; ret 0xf08
0x00000000000065c4 : fiadd dword ptr [rbx - 0x76b3fe13] ; retf
0x000000000002ef99 : ficomp word ptr [rbx + 0x5d] ; pop r12 ; jmp 0x2b247
0x0000000000001e38 : ficomp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000004e1df : fidivr dword ptr [rcx] ; ret 0x1c7e
0x0000000000002f88 : fild dword ptr [rbp + 0x31] ; dec dword ptr [rcx - 0x77] ; ret 0x4f6
0x0000000000043878 : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8548
0x0000000000031a4b : fild word ptr [rbp + 0x31] ; imul al ; ret 0xffff
0x0000000000017638 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x000000000003c477 : fild word ptr [rcx - 0x7d] ; retf 0x4520
0x0000000000053dfc : fild word ptr [rcx - 4] ; ljmp ptr [rbx + 0x42] ; cld ; call rax
0x000000000004aa3f : fimul dword ptr [rax + 0x29] ; retf 0x2c89
0x00000000000042c3 : fimul dword ptr [rax + 1] ; ret
0x000000000002af44 : fimul word ptr [rcx + rcx*4 - 1] ; call 0x27a26
0x000000000004d90d : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax] ; jmp rax
0x0000000000004f41 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x75], 0x1a ; je 0x4f5d ; call rax
0x000000000002d49c : fisttp dword ptr [rcx + 0x63] ; retf 0x840f
0x0000000000009b69 : fisttp dword ptr [rdi] ; test edx, esp ; retf
0x0000000000012c07 : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x000000000002687f : fisttp qword ptr [rax - 0x77] ; ret 0x8949
0x000000000004d6bf : fisttp word ptr [rax - 0x77] ; out 0x89, eax ; pop rsp ; and al, 0x48 ; call rsi
0x000000000001cc70 : fisttp word ptr [rax - 0x77] ; retf
0x000000000000247d : fisttp word ptr [rcx + 5] ; add byte ptr [rcx + 0xf], al ; ret 0xfac1
0x0000000000025a79 : fisttp word ptr [rcx + rcx*4 + 0x54] ; and al, 8 ; call qword ptr [rax]
0x0000000000053308 : fldcw word ptr [rbx - 0x542e0005] ; sti ; call rcx
0x0000000000027210 : fmul dword ptr [rax - 0x77] ; neg dword ptr [rbx + 0x5d] ; jmp rax
0x00000000000345cc : fmul dword ptr [rax - 0x77] ; ret 0x860f
0x000000000003ca2d : fsin ; inc dword ptr [rbx + rcx*4 + 0x5d] ; add byte ptr [rcx - 0x77], cl ; ret 0x8545
0x000000000005523d : fsin ; jmp qword ptr [rcx]
0x00000000000690cd : fsincos ; call rax
0x00000000000017ec : fsub dword ptr [rsi] ; add byte ptr [rcx], al ; ret
0x0000000000050ce4 : fsubr qword ptr [rip + 0x2e2cfffb] ; sti ; jmp rax
0x0000000000007c5f : fucomi st(1) ; retf 0xffe0
0x0000000000039e3b : fucompi st(0) ; call qword ptr [rbx]
0x0000000000031e47 : fucompi st(0) ; ret
0x000000000004a1d8 : fucompi st(0) ; ret 0xfe3a
0x0000000000039fd8 : fucompi st(0) ; ret 0xff22
0x00000000000351e8 : fucompi st(0) ; ret 0xff56
0x00000000000338d8 : fucompi st(0) ; ret 0xff89
0x0000000000029ee8 : fucompi st(0) ; ret 0xffe1
0x0000000000030051 : fucompi st(0) ; ret 0xffff
0x0000000000030ecf : fucompi st(0) ; retf
0x000000000002b3cd : fucompi st(0) ; std ; retf
0x0000000000032b8f : fucompi st(0) ; wait ; ret
0x00000000000556b4 : hlt ; cmp edi, edi ; jmp rsp
0x0000000000052f1c : hlt ; inc dword ptr [rax] ; add cl, dh ; jmp rsi
0x000000000000fd1d : hlt ; jmp 0xc81c
0x0000000000010529 : hlt ; mov r11d, edx ; jmp 0xc81f
0x0000000000010528 : hlt ; mov r11d, edx ; jmp 0xc820
0x000000000004d348 : hlt ; ret
0x000000000000aa48 : hlt ; ret 4
0x0000000000004c34 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0xa801
0x00000000000066a6 : idiv bh ; push rsi ; ret 0xf08
0x0000000000069195 : idiv ebx ; jmp rax
0x0000000000049597 : idiv edi ; dec dword ptr [rdi] ; mov bh, 0x50 ; add dword ptr [rsi - 0x3f], esp ; ret 0xe908
0x0000000000004ae7 : idiv edi ; dec dword ptr [rdi] ; mov dh, 0x56 ; add bh, byte ptr [rcx] ; retf 0x3fe9
0x0000000000032485 : imul al ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 0xffff
0x0000000000031a4e : imul al ; ret 0xffff
0x0000000000046cd8 : imul eax ; ret 0xfe6f
0x00000000000443d8 : imul eax ; xor ah, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000020760 : imul eax, dword ptr [rax + rax], 0xf ; mov dh, 0x44 ; ret 0x8d01
0x000000000001cc5a : imul eax, dword ptr [rax], 0xc1834800 ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000002df8c : imul ecx ; retf 0xfffe
0x000000000006a2d6 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000053f1c : in al, 0xcb ; cld ; jmp qword ptr [rbx]
0x000000000002aa46 : in al, dx ; or al, ch ; ret
0x0000000000009118 : in al, dx ; ret 0xffff
0x000000000000033e : in eax, 0x20 ; mov ecx, 0x3c0ef18d ; retf 0x28ee
0x00000000000069ba : in eax, 0x89 ; ret
0x000000000000b638 : in eax, dx ; add rbp, 0x40 ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000031576 : in eax, dx ; pop rsi ; pop rdi ; jne 0x31589 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000010428 : in eax, dx ; ret
0x00000000000169a4 : inc byte ptr [rdx + 0xf] ; xchg eax, esp ; ret 0x8041
0x00000000000690c7 : inc dword ptr [rax + 0x60000012] ; fsincos ; call rax
0x0000000000013832 : inc dword ptr [rax + 0x750dff7b] ; ret
0x0000000000053303 : inc dword ptr [rax + rbx*4 - 0x54260005] ; sti ; call rcx
0x0000000000053237 : inc dword ptr [rax + rbx*4 - 0x5b2d0005] ; sti ; call rdx
0x0000000000053233 : inc dword ptr [rax + rbx*4 - 0x677b0005] ; sti ; call rdx
0x00000000000507b3 : inc dword ptr [rax - 0x2f0004eb] ; adc edi, ebx ; call rax
0x000000000005085b : inc dword ptr [rax - 0x2f0004ec] ; adc edi, ebx ; call rax
0x0000000000015cec : inc dword ptr [rax - 0x7af088c8] ; ret 0xffe4
0x0000000000050847 : inc dword ptr [rax - 0x7f0004ec] ; adc al, 0xfb ; call rax
0x000000000006940f : inc dword ptr [rax] ; add byte ptr [rax], al ; adc byte ptr [rdx - 2], cl ; jmp qword ptr [rax]
0x000000000004e209 : inc dword ptr [rax] ; add byte ptr [rdi], cl ; ret 0xc289
0x0000000000052f1d : inc dword ptr [rax] ; add cl, dh ; jmp rsi
0x000000000004e374 : inc dword ptr [rbp + 0x19c78c0] ; ret
0x0000000000051907 : inc dword ptr [rbp - 0x6d] ; sti ; inc dword ptr [rbp - 0x6d] ; sti ; jmp rax
0x000000000005190b : inc dword ptr [rbp - 0x6d] ; sti ; jmp rax
0x000000000003edaa : inc dword ptr [rbp - 0x75] ; add byte ptr [r14 - 0x3f], r12b ; ret
0x00000000000027d4 : inc dword ptr [rbp - 0x77] ; rol dword ptr [rcx - 0x7d], 1 ; ret 0xe901
0x0000000000053e77 : inc dword ptr [rbx + 0x33fffc6e] ; outsb dx, byte ptr [rsi] ; cld ; jmp rbx
0x000000000000584c : inc dword ptr [rbx + 0x450ffefb] ; ret
0x00000000000104af : inc dword ptr [rbx + 0x61e901c5] ; ret
0x00000000000501b7 : inc dword ptr [rbx + 0x9443fe2] ; ret 0xf44
0x000000000003ca2f : inc dword ptr [rbx + rcx*4 + 0x5d] ; add byte ptr [rcx - 0x77], cl ; ret 0x8545
0x0000000000010531 : inc dword ptr [rbx - 0x2016fe3b] ; ret 0xffff
0x0000000000010542 : inc dword ptr [rbx - 0x3116fe3b] ; ret 0xffff
0x000000000005009c : inc dword ptr [rbx - 0x49f0fe0d] ; ret
0x0000000000010568 : inc dword ptr [rbx - 0x5716fe3b] ; ret 0xffff
0x000000000000f353 : inc dword ptr [rbx - 0x57f3f1e] ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x0000000000010583 : inc dword ptr [rbx - 0x7216fe3b] ; ret 0xffff
0x0000000000002c7a : inc dword ptr [rbx - 0x79f09f08] ; retf 5
0x000000000001058b : inc dword ptr [rbx - 0x7a16fe3b] ; ret 0xffff
0x000000000001f4a9 : inc dword ptr [rbx - 0x7cb7fe20] ; ret
0x00000000000208c9 : inc dword ptr [rcx + 0xd75ffa] ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0xff3d
0x000000000000e6bb : inc dword ptr [rcx + 0xf] ; mov bh, 0x46 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4118
0x000000000002b097 : inc dword ptr [rcx + 0xf] ; mov bh, 0x50 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000002c123 : inc dword ptr [rcx + 0xf] ; mov bh, 0x55 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000003e96 : inc dword ptr [rcx + 0xf] ; mov bh, 0x57 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000000d9ae : inc dword ptr [rcx + 0xf] ; mov bh, 0x5e ; add dword ptr [rsi - 0x3f], esp ; ret
0x0000000000036ebc : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000053287 : inc dword ptr [rcx - 0x61] ; sti ; inc dword ptr [rcx - 0x61] ; sti ; jmp qword ptr [rcx]
0x000000000005328b : inc dword ptr [rcx - 0x61] ; sti ; jmp qword ptr [rcx]
0x0000000000009e50 : inc dword ptr [rcx - 0x75] ; pop rsi ; jo 0x9dec ; push rbx ; add dword ptr [rcx], ebp ; ret 0xd089
0x000000000003ee62 : inc dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000002eb74 : inc dword ptr [rcx - 0x77] ; ret
0x00000000000283d2 : inc dword ptr [rcx - 0x77] ; ret 0x8341
0x000000000002fc43 : inc dword ptr [rcx - 0x7b] ; ret
0x000000000003c372 : inc dword ptr [rcx - 0xa] ; ret 0x4408
0x000000000003c099 : inc dword ptr [rcx - 0xa] ; ret 0xf10
0x000000000004e88b : inc dword ptr [rcx] ; ret
0x0000000000053e43 : inc dword ptr [rdi + 0x54] ; cld ; inc dword ptr [rdi + 0x54] ; cld ; jmp qword ptr [rbx]
0x0000000000053e47 : inc dword ptr [rdi + 0x54] ; cld ; jmp qword ptr [rbx]
0x00000000000545fb : inc dword ptr [rdi - 0x2e00028a] ; jbe 0x54608 ; call rcx
0x00000000000545f7 : inc dword ptr [rdi - 0x7800028a] ; jbe 0x54604 ; call rcx
0x0000000000053eeb : inc dword ptr [rdx] ; mov bh, ah ; dec dword ptr [rax - 0x78] ; cld ; jmp rbx
0x000000000006943f : inc eax ; add byte ptr [rax], al ; add byte ptr [rdx - 2], bl ; call qword ptr [rax]
0x00000000000542d3 : inc eax ; cmp ebp, edi ; call rax
0x000000000005329f : inc eax ; lodsb al, byte ptr [rsi] ; sti ; jmp qword ptr [rcx]
0x00000000000537eb : inc eax ; pushfq ; sti ; dec dword ptr [rcx - 0x64] ; sti ; call rax
0x0000000000026618 : inc ebx ; mov eax, 0xfffffffd ; ret
0x000000000000190c : inc ebx ; mov eax, 0xfffffffe ; ret
0x00000000000265fc : inc ebx ; nop ; mov eax, 0xffffffe4 ; ret
0x0000000000053e9b : inc ecx ; outsd dx, dword ptr [rsi] ; cld ; inc ecx ; outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x0000000000053e9f : inc ecx ; outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x0000000000003548 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add bh, dh ; ret 0x8c0
0x000000000006b4f4 : insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add byte ptr [rax], bh ; cld ; call rsi
0x00000000000537f8 : insb byte ptr [rdi], dx ; wait ; sti ; jmp qword ptr [rdi]
0x00000000000264eb : int1 ; add dword ptr [rcx - 0x7d], eax ; loope 0x264fb ; mov dword ptr [rcx], r9d ; ret
0x0000000000017dc3 : int1 ; jle 0x17d58 ; jmp 0x14818
0x0000000000005a36 : int1 ; jmp rcx
0x0000000000052f20 : int1 ; jmp rsi
0x0000000000053fd8 : int1 ; or ch, bh ; jmp rsi
0x0000000000002956 : int1 ; xor eax, eax ; cmp dl, 0x7d ; sete al ; ret
0x000000000000d5b4 : iretd ; jmp rdi
0x0000000000001e37 : ja 0x1e1f ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000001e36 : ja 0x1e20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000027ede : ja 0x27f79 ; mov eax, edx ; ret
0x000000000002aad9 : ja 0x2aaed ; xchg eax, esp ; ret
0x00000000000343b1 : ja 0x343d1 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000000c4fd : ja 0xc517 ; test dword ptr [rax], edx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x0000000000013b2f : jae 0x13b27 ; mov eax, 0xffffffff ; ret
0x0000000000001459 : jae 0x1463 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000026eb7 : jae 0x26ead ; xor eax, eax ; ret
0x0000000000003987 : jae 0x3910 ; stc ; add al, 0x76 ; loop 0x3988 ; ret
0x0000000000003986 : jae 0x3911 ; stc ; add al, 0x76 ; loop 0x3989 ; ret
0x000000000000a0e3 : jae 0xa0e9 ; dec dword ptr [rax + 1] ; ret
0x000000000001475c : jae 0xffffffff86104960 ; retf 0x44
0x0000000000026ec3 : jb 0x26e18 ; ret
0x00000000000517b1 : jb 0x517b0 ; call rcx
0x0000000000057a9a : jb 0x57a9e ; ret
0x0000000000057c7c : jb 0x57c80 ; retf
0x000000000005be58 : jb 0x5be62 ; jb 0x5be64 ; jb 0x5be66 ; jb 0x5be68 ; ret 0xc201
0x000000000005be5a : jb 0x5be62 ; jb 0x5be64 ; jb 0x5be66 ; ret 0xc201
0x000000000005be5c : jb 0x5be62 ; jb 0x5be64 ; ret 0xc201
0x000000000005be5e : jb 0x5be62 ; ret 0xc201
0x000000000005bebe : jb 0x5bec2 ; ret
0x0000000000062476 : jb 0x62480 ; jb 0x62482 ; jb 0x62484 ; jb 0x62486 ; ret
0x0000000000062478 : jb 0x62480 ; jb 0x62482 ; jb 0x62484 ; ret
0x000000000006247a : jb 0x62480 ; jb 0x62482 ; ret
0x000000000006247c : jb 0x62480 ; ret
0x0000000000063938 : jb 0x63942 ; jb 0x63944 ; jb 0x63946 ; jb 0x63948 ; ret 0xc200
0x000000000006393a : jb 0x63942 ; jb 0x63944 ; jb 0x63946 ; ret 0xc200
0x000000000006393c : jb 0x63942 ; jb 0x63944 ; ret 0xc200
0x000000000006393e : jb 0x63942 ; ret 0xc200
0x000000000001c856 : jbe 0x1c85c ; dec dword ptr [rax - 0x77] ; ret
0x000000000000398b : jbe 0x3972 ; ret
0x000000000004d4f1 : jbe 0x4d541 ; mov edi, dword ptr [rdx + 0x50] ; call rax
0x0000000000051781 : jbe 0x51780 ; jmp qword ptr [rbx]
0x0000000000051785 : jbe 0x51784 ; jmp qword ptr [rbx]
0x0000000000051789 : jbe 0x51788 ; jmp qword ptr [rbx]
0x000000000005178d : jbe 0x5178c ; jmp qword ptr [rbx]
0x0000000000051791 : jbe 0x51790 ; jmp qword ptr [rbx]
0x0000000000051795 : jbe 0x51794 ; jmp qword ptr [rbx]
0x0000000000051799 : jbe 0x51798 ; jmp qword ptr [rbx]
0x000000000005179d : jbe 0x5179c ; jmp qword ptr [rbx]
0x00000000000517a1 : jbe 0x517a0 ; jmp qword ptr [rbx]
0x000000000005315c : jbe 0x53108 ; sti ; jmp rcx
0x00000000000531c4 : jbe 0x53170 ; sti ; jmp rcx
0x00000000000545fd : jbe 0x545fe ; call rcx
0x0000000000054601 : jbe 0x54602 ; call rcx
0x0000000000054619 : jbe 0x5461a ; call rcx
0x000000000000c471 : jbe 0xc3f9 ; cli ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc083
0x000000000000f83b : jbe 0xf840 ; ret
0x000000000000f83a : jbe 0xf841 ; ret
0x0000000000001755 : je 0x1763 ; pop rbp ; jmp rax
0x00000000000017a2 : je 0x17b3 ; pop rbp ; jmp rax
0x0000000000001822 : je 0x1813 ; push rbp ; mov rbp, rsp ; call rax
0x00000000000018fc : je 0x1910 ; mov qword ptr [rdi + 0x30], rdx ; xor eax, eax ; ret
0x0000000000019e3f : je 0x19e6e ; or byte ptr [rdi], cl ; mov dh, 0x71 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000020506 : je 0x20530 ; sbb al, ch ; ret 0xff38
0x0000000000024c20 : je 0x24c4a ; add al, 0x89 ; ret 0xf41
0x0000000000026092 : je 0x260bf ; adc byte ptr [rax - 0x3f], cl ; out 2, eax ; call qword ptr [rax]
0x00000000000265ea : je 0x2661d ; mov eax, dword ptr [rdi + 0x10] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000027d8d : je 0x27d9b ; ret
0x0000000000027ea1 : je 0x27e9f ; shl eax, 8 ; or eax, edx ; ret
0x0000000000028d36 : je 0x28d49 ; mov byte ptr [rax], 0x8b ; xor eax, eax ; pop rbx ; ret
0x0000000000002918 : je 0x2923 ; ret
0x000000000002afad : je 0x2b1b0 ; call 0x27a28
0x0000000000003ab8 : je 0x3ae3 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x0000000000040107 : je 0x40110 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004027b : je 0x402aa ; or byte ptr [rax - 0x80], al ; std ; jp 0x4029b ; xchg eax, esp ; ret 0x8040
0x00000000000405f3 : je 0x4061e ; and byte ptr [rsi - 0x3f], ah ; ret
0x0000000000049dc8 : je 0x49df3 ; or byte ptr [rax + 0x63], cl ; ret 0x148
0x000000000004d4f0 : je 0x4d56e ; mov rdi, qword ptr [r10 + 0x50] ; call rax
0x000000000004d4ef : je 0x4d56f ; mov rdi, qword ptr [r10 + 0x50] ; call rax
0x000000000004d506 : je 0x4d57b ; call r11
0x000000000004d87d : je 0x4d8aa ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004dd9b : je 0x4dd8e ; cmp eax, 0xd ; je 0x4ddb1 ; xor eax, eax ; ret
0x000000000004dda0 : je 0x4ddac ; xor eax, eax ; ret
0x0000000000004f48 : je 0x4f56 ; call rax
0x0000000000050694 : je 0x506ac ; sti ; call rax
0x0000000000050690 : je 0x506ac ; sti ; push qword ptr [rbx + rdx - 5] ; call rax
0x0000000000054721 : je 0x54722 ; call rcx
0x000000000005471d : je 0x54722 ; dec dword ptr [rsp + rsi*2] ; std ; call rcx
0x000000000001240e : jg 0x12395 ; jmp qword ptr [rax]
0x0000000000015e2f : jg 0x15e43 ; ret 0x8348
0x000000000001b4b6 : jg 0x1b4ca ; ret 0x8348
0x000000000001b50a : jg 0x1b51e ; ret 0x8348
0x000000000002099f : jg 0x209a4 ; retf 0x8d48
0x0000000000002394 : jg 0x23a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000025d30 : jg 0x25d8e ; jmp rdi
0x000000000002643d : jg 0x264bb ; jmp qword ptr [rdi]
0x0000000000026ceb : jg 0x26d69 ; jmp qword ptr [rdi]
0x000000000003038b : jg 0x30390 ; retf 0x8d48
0x000000000003be3e : jg 0x3be43 ; retf 0x8d48
0x000000000003c5b7 : jg 0x3c5bc ; retf 0x8d48
0x000000000003f64f : jg 0x3f668 ; xchg byte ptr [rdi - 0x7600000f], dh ; ret 0x8d48
0x000000000003f672 : jg 0x3f677 ; retf 0x8d48
0x000000000004d5ad : jg 0x4d60b ; jmp rdi
0x00000000000547ad : jg 0x547ae ; jmp rax
0x00000000000694a9 : jg 0x694a6 ; call qword ptr [rax]
0x000000000000701b : jg 0x7048 ; ret 0xd139
0x0000000000007f18 : jg 0x7f45 ; retf 0xc239
0x000000000000c7b3 : jg 0xc7e0 ; ret 0x8d48
0x000000000004fcb3 : jge 0x4fc47 ; add dword ptr [rax], eax ; ret
0x000000000000da4e : jge 0xda62 ; xchg eax, esp ; ret 0xc238
0x000000000000de5b : jge 0xde6f ; xchg eax, esp ; ret 0xe8c1
0x000000000000de5b : jge 0xde74 ; xchg eax, esp ; ret 0xe8c1
0x00000000000274ad : jl 0x274d8 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000003f687 : jl 0x3f691 ; add byte ptr [rbx + rcx*4 + 0x54], al ; retf 0x4104
0x000000000004b9fc : jl 0x4ba27 ; sub al, ch ; cld ; ret 0xfffe
0x000000000006db04 : jl 0x6db53 ; add byte ptr [rax], al ; clc ; adc dh, bh ; call rcx
0x000000000000ea6b : jl 0xea97 ; adc byte ptr [rdi + rcx], al ; xchg eax, esp ; ret 0xd038
0x0000000000017dc4 : jle 0x17d57 ; jmp 0x14817
0x000000000000236e : jle 0x237a ; ret
0x000000000005478d : jle 0x5478e ; call rax
0x00000000000082de : jle 0x82b5 ; add eax, 0x490f4100 ; ret
0x0000000000008d06 : jle 0x8d5a ; call qword ptr [rax]
0x000000000000fb50 : jle 0xfb58 ; or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x5e9
0x000000000000ffa0 : jle 0xffa8 ; or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb8e9
0x0000000000017d39 : jmp 0x13f62
0x0000000000018262 : jmp 0x1448b
0x00000000000182ec : jmp 0x14529
0x0000000000017dc6 : jmp 0x14815
0x000000000001d4dc : jmp 0x19f6f
0x000000000001f63d : jmp 0x1c04a
0x000000000002ef9e : jmp 0x2b242
0x0000000000009117 : jmp 0x540a
0x0000000000009874 : jmp 0x5adc
0x0000000000009a87 : jmp 0x5d31
0x0000000000009bcb : jmp 0x5e85
0x000000000000a02e : jmp 0x6acc
0x000000000000a0a1 : jmp 0x6af3
0x000000000000ad12 : jmp 0x7727
0x000000000000ad37 : jmp 0x7824
0x000000000001052d : jmp 0xc81b
0x00000000000118d8 : jmp 0xe362
0x000000000002bb4d : jmp 0xffffffffcb2c0457
0x0000000000055ae3 : jmp qword ptr [rax + rdx*2 + 0x51e2ffff]
0x0000000000054993 : jmp qword ptr [rax - 0x1f00026a]
0x0000000000004822 : jmp qword ptr [rax]
0x000000000005176b : jmp qword ptr [rbx]
0x000000000005192b : jmp qword ptr [rcx]
0x000000000002643f : jmp qword ptr [rdi]
0x00000000000517af : jmp qword ptr [rdx - 0x2e00048e]
0x0000000000053ea7 : jmp qword ptr [rdx]
0x0000000000053ea3 : jmp qword ptr [rsi]
0x0000000000001dbd : jmp r10
0x000000000004f977 : jmp r8
0x000000000004fdc8 : jmp r9
0x0000000000001758 : jmp rax
0x0000000000053e7f : jmp rbx
0x0000000000005a37 : jmp rcx
0x0000000000003404 : jmp rdi
0x0000000000001dbe : jmp rdx
0x0000000000004a5e : jmp rsi
0x0000000000053f1b : jmp rsp
0x0000000000013a29 : jne 0x13a03 ; ret
0x0000000000013a67 : jne 0x13a44 ; sub eax, esi ; ret
0x0000000000001d25 : jne 0x1d0c ; xor eax, eax ; ret
0x0000000000001d67 : jne 0x1d1c ; xor eax, eax ; ret
0x00000000000269b7 : jne 0x269ca ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000027290 : jne 0x272a3 ; add rsp, 0x8038 ; ret
0x0000000000027e2a : jne 0x27ed7 ; ret
0x0000000000028099 : jne 0x28058 ; mov eax, dword ptr [rbx] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000028d0b : jne 0x28d1a ; ret
0x0000000000031579 : jne 0x31586 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004b9f8 : jne 0x4b9d9 ; mov rdi, qword ptr [rsp + 0x28] ; call 0x37d09
0x0000000000004dd3 : jne 0x4d53 ; xor eax, eax ; ret
0x000000000004d6f6 : jne 0x4d73f ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000006830d : jne 0x68310 ; jmp qword ptr [rcx]
0x000000000000fd1c : jne 0xfd16 ; jmp 0xc81d
0x0000000000015b9a : jnp 0x15baf ; test byte ptr [rax], ah ; ret
0x0000000000026be4 : jnp 0x26bec ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000003674 : jnp 0x366e ; ret 0xf08
0x0000000000051769 : jnp 0x51768 ; jmp qword ptr [rbx]
0x0000000000051771 : jnp 0x51770 ; jmp qword ptr [rbx]
0x000000000005177d : jnp 0x5177c ; jmp qword ptr [rbx]
0x00000000000517ad : jnp 0x517b0 ; jmp qword ptr [rdx - 0x2e00048e]
0x000000000005192d : jnp 0x5192c ; jmp qword ptr [rcx]
0x0000000000051931 : jnp 0x51930 ; jmp qword ptr [rcx]
0x0000000000051935 : jnp 0x51934 ; jmp qword ptr [rcx]
0x0000000000051939 : jnp 0x51938 ; jmp qword ptr [rcx]
0x000000000005193d : jnp 0x5193c ; jmp qword ptr [rcx]
0x0000000000051941 : jnp 0x51940 ; jmp qword ptr [rcx]
0x0000000000051945 : jnp 0x51944 ; jmp qword ptr [rcx]
0x0000000000051949 : jnp 0x51948 ; jmp qword ptr [rcx]
0x000000000005194d : jnp 0x5194c ; jmp qword ptr [rcx]
0x0000000000051951 : jnp 0x51950 ; jmp qword ptr [rcx]
0x0000000000051955 : jnp 0x51954 ; jmp qword ptr [rcx]
0x0000000000051959 : jnp 0x51958 ; jmp qword ptr [rcx]
0x000000000005195d : jnp 0x5195c ; jmp qword ptr [rcx]
0x0000000000051961 : jnp 0x51960 ; jmp qword ptr [rcx]
0x0000000000051965 : jnp 0x51964 ; jmp qword ptr [rcx]
0x0000000000051969 : jnp 0x51968 ; jmp qword ptr [rcx]
0x000000000005196d : jnp 0x5196c ; jmp qword ptr [rcx]
0x0000000000051971 : jnp 0x51970 ; jmp qword ptr [rcx]
0x0000000000051975 : jnp 0x51974 ; jmp qword ptr [rcx]
0x0000000000051979 : jnp 0x51978 ; jmp qword ptr [rcx]
0x000000000005197d : jnp 0x5197c ; jmp qword ptr [rcx]
0x0000000000051981 : jnp 0x51980 ; jmp qword ptr [rcx]
0x0000000000051985 : jnp 0x51984 ; jmp qword ptr [rcx]
0x0000000000051989 : jnp 0x51988 ; jmp qword ptr [rcx]
0x000000000005198d : jnp 0x5198c ; jmp qword ptr [rcx]
0x0000000000051991 : jnp 0x51990 ; jmp qword ptr [rcx]
0x0000000000051995 : jnp 0x51994 ; jmp qword ptr [rcx]
0x00000000000519a1 : jnp 0x519a0 ; jmp qword ptr [rcx]
0x00000000000519a5 : jnp 0x519a4 ; jmp qword ptr [rcx]
0x00000000000519a9 : jnp 0x519a8 ; jmp qword ptr [rcx]
0x00000000000519ad : jnp 0x519ac ; jmp qword ptr [rcx]
0x00000000000519b1 : jnp 0x519b0 ; jmp qword ptr [rcx]
0x00000000000519b5 : jnp 0x519b4 ; jmp qword ptr [rcx]
0x00000000000519b9 : jnp 0x519b8 ; jmp qword ptr [rcx]
0x00000000000519bd : jnp 0x519bc ; jmp qword ptr [rcx]
0x00000000000519c1 : jnp 0x519c0 ; jmp qword ptr [rcx]
0x00000000000519cd : jnp 0x519cc ; jmp qword ptr [rcx]
0x00000000000519d9 : jnp 0x519d8 ; jmp qword ptr [rcx]
0x00000000000519dd : jnp 0x519dc ; jmp qword ptr [rcx]
0x00000000000519e1 : jnp 0x519e0 ; jmp qword ptr [rcx]
0x00000000000519e5 : jnp 0x519e4 ; jmp qword ptr [rcx]
0x00000000000519e9 : jnp 0x519e8 ; jmp qword ptr [rcx]
0x00000000000519ed : jnp 0x519ec ; jmp qword ptr [rcx]
0x00000000000519f1 : jnp 0x519f0 ; jmp qword ptr [rcx]
0x00000000000519f5 : jnp 0x519f4 ; jmp qword ptr [rcx]
0x00000000000519f9 : jnp 0x519f8 ; jmp qword ptr [rcx]
0x00000000000519fd : jnp 0x519fc ; jmp qword ptr [rcx]
0x0000000000051a01 : jnp 0x51a00 ; jmp qword ptr [rcx]
0x0000000000051a05 : jnp 0x51a04 ; jmp qword ptr [rcx]
0x0000000000051a09 : jnp 0x51a08 ; jmp qword ptr [rcx]
0x0000000000051a0d : jnp 0x51a0c ; jmp qword ptr [rcx]
0x0000000000051a11 : jnp 0x51a10 ; jmp qword ptr [rcx]
0x0000000000051a1d : jnp 0x51a1c ; jmp qword ptr [rcx]
0x0000000000051a21 : jnp 0x51a20 ; jmp qword ptr [rcx]
0x0000000000051a2d : jnp 0x51a2c ; jmp qword ptr [rcx]
0x0000000000051a31 : jnp 0x51a30 ; jmp qword ptr [rcx]
0x0000000000051a35 : jnp 0x51a34 ; jmp qword ptr [rcx]
0x0000000000051a39 : jnp 0x51a38 ; jmp qword ptr [rcx]
0x0000000000051a45 : jnp 0x51a44 ; jmp qword ptr [rcx]
0x0000000000051a49 : jnp 0x51a48 ; jmp qword ptr [rcx]
0x0000000000051a4d : jnp 0x51a4c ; jmp qword ptr [rcx]
0x0000000000056606 : jnp 0x5660a ; retf
0x0000000000009fcf : jnp 0x9fd7 ; cmp cl, byte ptr [rdi] ; ret 0x189
0x0000000000010829 : jns 0x10831 ; or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8fe9
0x0000000000012655 : jns 0x125dc ; jmp qword ptr [rax]
0x0000000000051a40 : jns 0x51abf ; sti ; jmp qword ptr [rcx]
0x0000000000014746 : jo 0x1474f ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000001678e : jo 0x16797 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000202ee : jo 0x202fa ; add byte ptr [rdi], cl ; mov dh, 0x44 ; ret 0x4801
0x000000000002a43e : jo 0x2a44f ; lea rax, qword ptr [rax + rcx + 0x10] ; ret
0x000000000002ef37 : jo 0x2ef31 ; ret 0x4140
0x000000000004d507 : jo 0x4d54c ; call rbx
0x000000000004d935 : jo 0x4d986 ; mov qword ptr [rax + 0x50], rdx ; ret
0x0000000000050680 : jo 0x50698 ; sti ; call rax
0x000000000005067c : jo 0x50698 ; sti ; push qword ptr [rax + 0x13] ; sti ; call rax
0x0000000000054984 : jo 0x5491e ; std ; call qword ptr [rax]
0x0000000000069064 : jo 0x69026 ; stc ; jmp rax
0x000000000006d950 : jo 0x6d953 ; std ; jmp qword ptr [rbx]
0x0000000000007583 : jo 0x750a ; ret
0x000000000000780d : jo 0x779a ; ret
0x0000000000009e54 : jo 0x9de8 ; push rbx ; add dword ptr [rcx], ebp ; ret 0xd089
0x000000000000ad2d : jo 0xacba ; ret
0x0000000000040281 : jp 0x40295 ; xchg eax, esp ; ret 0x8040
0x000000000004d4f4 : jp 0x4d548 ; call rax
0x0000000000051929 : jp 0x51928 ; jmp qword ptr [rcx]
0x000000000005199d : jp 0x5199c ; jmp qword ptr [rcx]
0x00000000000519c9 : jp 0x519c8 ; jmp qword ptr [rcx]
0x00000000000519d5 : jp 0x519d4 ; jmp qword ptr [rcx]
0x0000000000051a19 : jp 0x51a18 ; jmp qword ptr [rcx]
0x0000000000051a29 : jp 0x51a28 ; jmp qword ptr [rcx]
0x0000000000051a41 : jp 0x51a40 ; jmp qword ptr [rcx]
0x00000000000530e8 : jp 0x530ab ; sti ; jmp qword ptr [rbx]
0x00000000000680bd : jrcxz 0x680c0 ; call qword ptr [rbx]
0x0000000000009a80 : jrcxz 0x9a52 ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jmp 0x5d38
0x000000000000ad35 : jrcxz 0xad3c ; jmp 0x7826
0x00000000000037ac : js 0x37b4 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000004636c : js 0x4637f ; mov rax, qword ptr [rip + 0x228bc3] ; call qword ptr [rax]
0x00000000000498c5 : js 0x498d1 ; mov rax, qword ptr [rip + 0x22566a] ; call qword ptr [rax]
0x0000000000053c64 : js 0x53c7a ; cld ; lcall ptr [rax + 0x24] ; cld ; call rax
0x0000000000053eac : js 0x53f20 ; cld ; call rbx
0x000000000006a4d8 : js 0x6a4a9 ; sti ; jmp rbx
0x000000000002b333 : lahf ; ret 0x8d4c
0x000000000004aa8c : lahf ; ret 0x8de9
0x000000000004aa73 : lahf ; ret 0xa6e9
0x0000000000024f02 : lahf ; ret 0xc208
0x000000000000a086 : lahf ; ret 0xea83
0x0000000000053289 : lahf ; sti ; inc dword ptr [rcx - 0x61] ; sti ; jmp qword ptr [rcx]
0x000000000005328d : lahf ; sti ; jmp qword ptr [rcx]
0x0000000000053c97 : lcall ptr [rax + 0x22] ; cld ; ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x0000000000053c67 : lcall ptr [rax + 0x24] ; cld ; call rax
0x0000000000053c0f : lcall ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000053c0b : lcall ptr [rax + 0x28] ; cld ; lcall ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000000310f5 : lcall ptr [rax + 0x5a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000512af : lcall ptr [rax + rdi - 5] ; call qword ptr [rdi]
0x0000000000069297 : lcall ptr [rax - 0x5fffffdc] ; cld ; jmp rax
0x0000000000050caf : lcall ptr [rax] ; sub bh, bl ; jmp rax
0x0000000000050cab : lcall ptr [rax] ; sub bh, bl ; lcall ptr [rax] ; sub bh, bl ; jmp rax
0x0000000000053d7b : lcall ptr [rbp + 0x3b] ; cld ; dec dword ptr [rsp + rdi] ; cld ; call rsp
0x0000000000053dcb : lcall ptr [rbx + rax*2 - 4] ; call rdi
0x000000000001772d : lcall ptr [rbx - 0x77] ; ret
0x0000000000053fd3 : lcall ptr [rcx - 0xe0002f8] ; or ch, bh ; jmp rsi
0x000000000002a4ef : lcall ptr [rdx + 0x59] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000051a27 : lcall ptr [rdx + rdi*2 + 0x7b21fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000053f13 : lcall ptr [rip - 0x400033c] ; leave ; cld ; jmp rsp
0x00000000000536fb : lcall ptr [rsi] ; mov bl, 0xfb ; call qword ptr [rbp + 0x17fffbaf]
0x0000000000003462 : lea eax, dword ptr [rax + 2] ; ret
0x000000000002a441 : lea eax, dword ptr [rax + rcx + 0x10] ; ret
0x000000000000a028 : lea eax, dword ptr [rbx + 1] ; mov byte ptr [rbx], 0 ; jmp 0x6ad2
0x000000000004fcb1 : lea eax, dword ptr [rip + 0x18e7d] ; ret
0x000000000004d7b1 : lea eax, dword ptr [rip + 0x8401] ; ret
0x0000000000026dd6 : lea eax, dword ptr [rsi + 0xd] ; mov byte ptr [rsi + 0xc], dl ; ret
0x0000000000027a45 : lea eax, dword ptr [rsi + rax + 3] ; ret
0x0000000000027abc : lea eax, dword ptr [rsi + rax - 1] ; ret
0x0000000000003985 : lea ecx, dword ptr [rdx + 0x73] ; cmp cl, 4 ; jbe 0x3978 ; ret
0x0000000000026be3 : lea edi, dword ptr [rbx + 1] ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000003808 : lea edx, dword ptr [rdx + rdx + 0x1d] ; mov dword ptr [r9], edx ; ret
0x0000000000003461 : lea rax, qword ptr [r8 + 2] ; ret
0x000000000002a440 : lea rax, qword ptr [rax + rcx + 0x10] ; ret
0x000000000000a027 : lea rax, qword ptr [rbx + 1] ; mov byte ptr [rbx], 0 ; jmp 0x6ad3
0x000000000004fcb0 : lea rax, qword ptr [rip + 0x18e7d] ; ret
0x000000000004d7b0 : lea rax, qword ptr [rip + 0x8401] ; ret
0x0000000000026dd5 : lea rax, qword ptr [rsi + 0xd] ; mov byte ptr [rsi + 0xc], dl ; ret
0x0000000000027a44 : lea rax, qword ptr [rsi + rax + 3] ; ret
0x0000000000027abb : lea rax, qword ptr [rsi + rax - 1] ; ret
0x0000000000053f19 : leave ; cld ; jmp rsp
0x000000000004fdc7 : leave ; jmp r9
0x0000000000004dd2 : leave ; jne 0x4d54 ; xor eax, eax ; ret
0x00000000000018e1 : leave ; mov dword ptr [rdx + 0x28], ecx ; ret
0x000000000000986e : leave ; mov ebp, 0x87 ; jmp 0x5ae2
0x000000000000d5ad : leave ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rdi, rcx ; jmp rdi
0x000000000006553c : leave ; retf 0x8b8b
0x0000000000068c49 : leave ; retf 0xcccb
0x0000000000053841 : leave ; sti ; jmp qword ptr [rcx]
0x00000000000691c7 : ljmp ptr [rax + 0x1a] ; add byte ptr [rax], al ; loopne 0x691d6 ; cld ; jmp rax
0x0000000000053c9b : ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x0000000000053dff : ljmp ptr [rbx + 0x42] ; cld ; call rax
0x00000000000537f7 : ljmp ptr [rbx + rbx*4 - 5] ; jmp qword ptr [rdi]
0x0000000000053efb : ljmp ptr [rbx - 0xa000339] ; retf 0xfffc
0x0000000000054aaf : ljmp ptr [rdx + rbx*2 - 2] ; call rsp
0x0000000000054aab : ljmp ptr [rdx + rbx*2 - 2] ; ljmp ptr [rdx + rbx*2 - 2] ; call rsp
0x00000000000519d3 : ljmp ptr [rdx + rdi*2 + 0x7b21fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000054f83 : ljmp ptr [rdx - 2] ; call rsp
0x0000000000054f7f : ljmp ptr [rdx - 2] ; ljmp ptr [rdx - 2] ; call rsp
0x0000000000050cc7 : ljmp ptr [rsi + rbp] ; sti ; jmp rax
0x0000000000050cc3 : ljmp ptr [rsi + rbp] ; sti ; ljmp ptr [rsi + rbp] ; sti ; jmp rax
0x000000000001c756 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000012df5 : lodsb al, byte ptr [rsi] ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x00000000000519d4 : lodsb al, byte ptr [rsi] ; jp 0x519d5 ; jmp qword ptr [rcx]
0x0000000000020ab0 : lodsb al, byte ptr [rsi] ; push -0x49f0fffc ; ret 0x4801
0x00000000000532a1 : lodsb al, byte ptr [rsi] ; sti ; jmp qword ptr [rcx]
0x00000000000311ef : lodsd eax, dword ptr [rsi] ; retf 0xffff
0x0000000000001f80 : loop 0x1f7b ; ret 1
0x0000000000002140 : loop 0x213b ; ret 1
0x0000000000002304 : loop 0x22ff ; ret 1
0x0000000000027a9d : loop 0x27ae7 ; movzx edx, byte ptr [rcx + rdx] ; add rax, rdx ; ret
0x0000000000027d89 : loop 0x27d83 ; ret 0x7405
0x000000000000353f : loop 0x353a ; ret 0x533
0x0000000000035c5e : loop 0x35c67 ; add ah, bh ; add byte ptr [rax + 9], cl ; ret 0xb60f
0x0000000000036731 : loop 0x3673a ; add ah, bh ; add byte ptr [rax + 9], cl ; ret 0xb60f
0x000000000000398c : loop 0x3983 ; ret
0x000000000004e6fd : loop 0x4e6f8 ; ret 0x533
0x000000000004e7d9 : loop 0x4e7d4 ; ret 0x533
0x0000000000068055 : loop 0x68058 ; call qword ptr [rbx]
0x0000000000068054 : loop 0x68059 ; call qword ptr [rbx]
0x000000000006811d : loop 0x68120 ; jmp qword ptr [rcx]
0x0000000000024c4a : loope 0x24c50 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000026433 : loope 0x2643b ; mov dword ptr [rcx], r9d ; ret
0x00000000000264ef : loope 0x264f7 ; mov dword ptr [rcx], r9d ; ret
0x00000000000264fd : loope 0x26505 ; mov dword ptr [rcx], r9d ; ret
0x000000000002650b : loope 0x26513 ; mov dword ptr [rcx], r9d ; ret
0x00000000000265dd : loope 0x265e5 ; mov dword ptr [rcx], r9d ; ret
0x000000000005313c : loope 0x530e3 ; sti ; jmp rcx
0x00000000000531a4 : loope 0x5314b ; sti ; jmp rcx
0x000000000006912d : loope 0x6912c ; call qword ptr [rax]
0x0000000000001759 : loopne 0x17c9 ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000019582 : loopne 0x195bf ; ret 0x870f
0x000000000001ca31 : loopne 0x1ca6e ; ret 0x870f
0x000000000001d4d8 : loopne 0x1d4e6 ; or ecx, eax ; jmp 0x19f73
0x000000000001d4d5 : loopne 0x1d51f ; shl eax, 6 ; or ecx, eax ; jmp 0x19f76
0x000000000001f639 : loopne 0x1f647 ; or ecx, eax ; jmp 0x1c04e
0x000000000001f636 : loopne 0x1f680 ; shl eax, 6 ; or ecx, eax ; jmp 0x1c051
0x0000000000027ea4 : loopne 0x27eb2 ; or eax, edx ; ret
0x0000000000028b82 : loopne 0x28be7 ; pop r12 ; pop r13 ; ret
0x0000000000028be8 : loopne 0x28c4c ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028c18 : loopne 0x28c7d ; pop r12 ; pop r13 ; ret
0x0000000000028ca4 : loopne 0x28cec ; pop rsp ; pop r13 ; ret
0x0000000000028c8a : loopne 0x28cee ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029461 : loopne 0x294c7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000294b5 : loopne 0x2951c ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002951b : loopne 0x29565 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000002a724 : loopne 0x2a786 ; pop rbp ; pop r12 ; ret
0x000000000002a839 : loopne 0x2a89b ; pop rbp ; pop r12 ; ret
0x000000000002a877 : loopne 0x2a8bd ; pop rsp ; ret
0x000000000002b620 : loopne 0x2b682 ; pop rbp ; pop r12 ; ret
0x000000000002b6c2 : loopne 0x2b724 ; pop rbp ; pop r12 ; ret
0x0000000000050458 : loopne 0x50461 ; pop r14 ; pop r15 ; ret
0x00000000000507f8 : loopne 0x50811 ; sti ; jmp rax
0x00000000000507fc : loopne 0x50815 ; sti ; jmp rax
0x0000000000050800 : loopne 0x50819 ; sti ; call rax
0x0000000000050ccc : loopne 0x50cfe ; sti ; jmp rax
0x0000000000051910 : loopne 0x518a5 ; sti ; jmp rax
0x0000000000051914 : loopne 0x518a9 ; sti ; jmp rax
0x0000000000051918 : loopne 0x518ad ; sti ; jmp rax
0x000000000005191c : loopne 0x518b1 ; sti ; jmp rax
0x0000000000051920 : loopne 0x518b5 ; sti ; jmp rax
0x0000000000053b14 : loopne 0x53b48 ; cld ; call qword ptr [rax]
0x00000000000540b8 : loopne 0x540f6 ; std ; call rax
0x0000000000054980 : loopne 0x5491c ; std ; push qword ptr [rax - 0x6b] ; std ; call qword ptr [rax]
0x0000000000069094 : loopne 0x69034 ; cli ; jmp qword ptr [rax]
0x00000000000691cc : loopne 0x691d1 ; cld ; jmp rax
0x0000000000069254 : loopne 0x6928b ; cld ; jmp rax
0x0000000000026209 : mov ah, 0x24 ; clc ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x00000000000519c8 : mov ah, 0x7a ; sti ; jmp qword ptr [rcx]
0x00000000000699c1 : mov ah, 0xf9 ; call rax
0x0000000000053ef1 : mov ah, bh ; jmp rbx
0x0000000000069118 : mov al, 0x14 ; add byte ptr [rax], al ; rcr ch, 0xfb ; jmp rax
0x00000000000506c0 : mov al, 0x15 ; sti ; call rax
0x000000000002efc7 : mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000002b13 : mov al, 0x4c ; add eax, esi ; jmp rax
0x0000000000068fcc : mov al, 0x84 ; stc ; jmp rax
0x00000000000692fc : mov al, 0x95 ; cld ; jmp rax
0x0000000000069034 : mov al, 0x99 ; stc ; jmp qword ptr [rax]
0x000000000000fa81 : mov bh, 0x46 ; add dword ptr [rbx - 0x7cefdbac], ecx ; ret 0x6601
0x000000000000d965 : mov bh, 0x46 ; add dword ptr [rcx - 0x75], eax ; push rax ; add al, 0x83 ; ret 0x6601
0x000000000000e6be : mov bh, 0x46 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4118
0x00000000000264b7 : mov bh, 0x47 ; mov dword ptr es:[rcx], eax ; xor eax, eax ; ret
0x000000000004e1d9 : mov bh, 0x47 ; sub byte ptr [rcx + 0x39daf7f2], cl ; ret 0x1c7e
0x000000000004959b : mov bh, 0x50 ; add dword ptr [rsi - 0x3f], esp ; ret 0xe908
0x0000000000003991 : mov bh, 0x50 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000048f19 : mov bh, 0x50 ; add ecx, dword ptr [rax - 0x75] ; and byte ptr [r14 - 0x3f], r12b ; ret 0xf08
0x000000000004e501 : mov bh, 0x51 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000002c126 : mov bh, 0x55 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000043eb2 : mov bh, 0x56 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000000e702 : mov bh, 0x56 ; add esp, dword ptr [rsi - 0x3f] ; ret 0x4808
0x00000000000095d6 : mov bh, 0x56 ; or byte ptr [rcx], bh ; retf 0x8948
0x0000000000003e99 : mov bh, 0x57 ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000000d9b1 : mov bh, 0x5e ; add dword ptr [rsi - 0x3f], esp ; ret
0x0000000000027ad1 : mov bh, 0xc0 ; add rax, rsi ; ret
0x000000000004e212 : mov bh, 0xc0 ; mov word ptr [rdi + 0x28], dx ; ret
0x0000000000068c46 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000053eed : mov bh, ah ; dec dword ptr [rax - 0x78] ; cld ; jmp rbx
0x0000000000010b87 : mov bh, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000536fd : mov bl, 0xfb ; call qword ptr [rbp + 0x17fffbaf]
0x000000000005329d : mov bl, 0xfb ; inc eax ; lodsb al, byte ptr [rsi] ; sti ; jmp qword ptr [rcx]
0x000000000000ad30 : mov byte ptr [r15 + 3], al ; and ebx, 1 ; jmp 0x782b
0x0000000000028079 : mov byte ptr [rax + 2], dl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000028d38 : mov byte ptr [rax], 0x8b ; xor eax, eax ; pop rbx ; ret
0x0000000000057a94 : mov byte ptr [rax], 4 ; add byte ptr [rsi], dl ; add byte ptr [rdx], dh ; ret
0x000000000000a02b : mov byte ptr [rbx], 0 ; jmp 0x6acf
0x0000000000050814 : mov byte ptr [rbx], dl ; sti ; call qword ptr [rax]
0x0000000000004a5a : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x0000000000016db6 : mov byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax + 1], ecx ; ret
0x000000000004dfb9 : mov byte ptr [rcx], 0x89 ; xor dword ptr [rax + 1], edi ; ret
0x0000000000051120 : mov byte ptr [rcx], dh ; sti ; jmp rax
0x000000000000ad31 : mov byte ptr [rdi + 3], al ; and ebx, 1 ; jmp 0x782a
0x00000000000017e9 : mov byte ptr [rip + 0x26d850], 1 ; ret
0x0000000000026dd9 : mov byte ptr [rsi + 0xc], dl ; ret
0x000000000004e194 : mov byte ptr [rsi], bh ; ret
0x000000000004e193 : mov byte ptr [rsi], dil ; ret
0x0000000000051014 : mov ch, 0x30 ; sti ; jmp qword ptr [rdi]
0x000000000002809a : mov ch, 0x8b ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000003ee60 : mov ch, 0xfe ; inc dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000003be53 : mov ch, 2 ; add byte ptr [rbx + rcx*4 + 0x5c], al ; retf 0x4104
0x0000000000005a33 : mov cl, 0x48 ; add ecx, esi ; jmp rcx
0x0000000000053818 : mov cl, 0xc7 ; sti ; jmp qword ptr [rdi]
0x000000000000e43a : mov cl, byte ptr [rax + 1] ; retf 0xe2ff
0x0000000000034543 : mov cl, byte ptr [rcx + rax - 0x2f] ; jmp rcx
0x000000000003e852 : mov dh, 0x14 ; adc byte ptr [rcx - 0x73], al ; add qword ptr [rcx - 0x7d], rax ; ret 0x4902
0x000000000003bbdf : mov dh, 0x14 ; adc dword ptr [rcx], edi ; ret 0x950f
0x000000000003f353 : mov dh, 0x14 ; add al, byte ptr [rcx - 0x73] ; add qword ptr [rcx - 0x7d], rax ; ret 0x4902
0x0000000000001c11 : mov dh, 0x1c ; adc dword ptr [rax + 1], ecx ; ret
0x000000000001f358 : mov dh, 0x40 ; add eax, 0x93fe083 ; ret 0x8b48
0x000000000000f839 : mov dh, 0x40 ; jbe 0xf842 ; ret
0x000000000001d700 : mov dh, 0x41 ; add eax, 0x93fe083 ; ret 0xb60f
0x0000000000001d4d : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x0000000000005838 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe901
0x000000000001dd13 : mov dh, 0x43 ; add eax, 0x93fe083 ; ret 0xb60f
0x0000000000022b36 : mov dh, 0x43 ; dec dword ptr [rax - 0x77] ; ret 0xe083
0x0000000000020682 : mov dh, 0x44 ; ret 0x3b01
0x00000000000202f2 : mov dh, 0x44 ; ret 0x4801
0x0000000000020764 : mov dh, 0x44 ; ret 0x8d01
0x000000000001f603 : mov dh, 0x45 ; add eax, 0x93fe083 ; ret 0xb60f
0x0000000000021719 : mov dh, 0x46 ; add eax, 0x93fe083 ; ret 0xb60f
0x0000000000006984 : mov dh, 0x48 ; add dh, dh ; add al, 0xe ; add cl, byte ptr [rax - 0x77] ; retf 0x840f
0x000000000005018b : mov dh, 0x4e ; add eax, dword ptr [rbx + 0x9443fe2] ; ret 0x63e9
0x0000000000006930 : mov dh, 0x50 ; add cl, byte ptr [rax - 0x77] ; retf
0x0000000000002532 : mov dh, 0x50 ; add eax, dword ptr [rdx + rdx*8 - 0x7cbe608c] ; ret 0x4802
0x0000000000001c21 : mov dh, 0x53 ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000001994 : mov dh, 0x53 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000018dbb : mov dh, 0x53 ; dec dword ptr [rax - 0x73] ; dec dword ptr [r8 - 0x77] ; ret
0x00000000000053d8 : mov dh, 0x54 ; retf 0x8403
0x0000000000004aeb : mov dh, 0x56 ; add bh, byte ptr [rcx] ; retf 0x3fe9
0x00000000000501b5 : mov dh, 0x56 ; inc dword ptr [rbx + 0x9443fe2] ; ret 0xf44
0x000000000003fc4f : mov dh, 0x57 ; add eax, 0x93fe283 ; ret 0xb60f
0x0000000000019e43 : mov dh, 0x71 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000001c5e2 : mov dh, 0x76 ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000002bac1 : mov dh, 0x7d ; add byte ptr [rbp - 0x77], al ; ret 0x2b44
0x0000000000013688 : mov dh, 0xb4 ; and al, 0xcc ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x0000000000026208 : mov dh, 0xb4 ; and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x000000000001348d : mov dh, 0xbc ; and al, 0xcc ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x0000000000025c6d : mov dh, 0xbc ; and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x0000000000027db8 : mov dh, 0xc0 ; add eax, eax ; ret
0x0000000000004d7b : mov dh, 0xc0 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x0000000000027b62 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000033fb : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x0000000000016382 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000038663 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000000f984 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000013ebe : mov dh, 0xc6 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000000d5ac : mov dh, 0xc9 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rdi, rcx ; jmp rdi
0x0000000000027a34 : mov dh, 0xca ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000003453e : mov dh, 0xce ; movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x000000000004e2d5 : mov dh, 0xd0 ; movsxd rdx, dword ptr [r14 + rdx*4] ; add rdx, r14 ; jmp rdx
0x000000000003e180 : mov dh, 0xd0 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000048ac0 : mov dh, 0xd2 ; movsxd rdx, dword ptr [r15 + rdx*4] ; add rdx, r15 ; jmp rdx
0x0000000000003a3d : mov dh, 0xd2 ; movsxd rdx, dword ptr [rbx + rdx*4] ; add rdx, rbx ; jmp rdx
0x0000000000003e6c : mov dh, 0xd2 ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x000000000002b90d : mov dh, 0xd6 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000043873 : mov dh, 0xfe ; dec dword ptr [rax - 0x7b] ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x8548
0x000000000003eda8 : mov dh, 0xfe ; inc dword ptr [rbp - 0x75] ; add byte ptr [r14 - 0x3f], r12b ; ret
0x0000000000001a58 : mov dh, 4 ; adc byte ptr [rax + 1], cl ; ret
0x0000000000026e5c : mov dh, 4 ; add al, byte ptr [rbp - 0x77] ; ret 0x8941
0x000000000001af5d : mov dh, 4 ; add cl, byte ptr [rbp + rcx*4 + 5] ; stc ; ret
0x0000000000005ff3 : mov dh, 4 ; add dword ptr [rax + 1], ecx ; ret 0x8545
0x0000000000006019 : mov dh, 4 ; add dword ptr [rax + 1], ecx ; ret 0x8948
0x000000000000c1b9 : mov dh, 4 ; add dword ptr [rsi + 0x39], esp ; ret 0x8b41
0x0000000000013ad5 : mov dh, 4 ; add eax, dword ptr [rbp - 0x77] ; ret
0x000000000002237e : mov dh, 4 ; and al, 0x3d ; mov edi, 0x89000000 ; ret 0x8676
0x00000000000181c2 : mov dh, 4 ; and al, 0x84 ; ror byte ptr [rdi], 0x88 ; ret
0x0000000000005816 : mov dh, 4 ; and al, 0x89 ; ret 0xe283
0x00000000000205a1 : mov dh, 4 ; ret 0x443b
0x000000000000417f : mov dh, 4 ; sub byte ptr [rax + 1], cl ; ret
0x000000000000ed4a : mov dh, dh ; ret 0xf20
0x0000000000051768 : mov dl, 0x7b ; sti ; jmp qword ptr [rbx]
0x00000000000517ac : mov dl, 0x7b ; sti ; jmp qword ptr [rdx - 0x2e00048e]
0x000000000000033a : mov dl, 0x9e ; retf
0x000000000000e86e : mov ds, word ptr [rsi - 0x7c000024] ; ret
0x000000000001006e : mov ds, word ptr [rsi - 0x7c00003c] ; ret 0x8501
0x0000000000010526 : mov dword ptr [r13 - 0xc], eax ; mov r11d, edx ; jmp 0xc822
0x000000000000fd1a : mov dword ptr [r13 - 0xc], esi ; jmp 0xc81f
0x00000000000035e3 : mov dword ptr [r9 + 0x10], 0xffffffff ; ret
0x00000000000034ab : mov dword ptr [r9 + 0xc], 0xffffffff ; ret
0x000000000000345d : mov dword ptr [r9 + 0xc], eax ; lea rax, qword ptr [r8 + 2] ; ret
0x000000000000366a : mov dword ptr [r9 + 0xc], edx ; ret
0x000000000000356c : mov dword ptr [r9 + 8], edx ; ret
0x000000000000380c : mov dword ptr [r9], edx ; ret
0x00000000000310cb : mov dword ptr [rax + 0x10], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004d934 : mov dword ptr [rax + 0x48], esi ; mov qword ptr [rax + 0x50], rdx ; ret
0x000000000004d938 : mov dword ptr [rax + 0x50], edx ; ret
0x000000000002a43d : mov dword ptr [rax + 8], esi ; lea rax, qword ptr [rax + rcx + 0x10] ; ret
0x0000000000027ffe : mov dword ptr [rax - 8], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000009a81 : mov dword ptr [rax], 0x14 ; jmp 0x5d37
0x0000000000009a99 : mov dword ptr [rax], 0x1b ; jmp 0x5d37
0x0000000000009adb : mov dword ptr [rax], 0x40 ; jmp 0x5d37
0x0000000000009ac3 : mov dword ptr [rax], 0x52 ; jmp 0x5d37
0x0000000000057c02 : mov dword ptr [rax], 0xc700c7 ; ret
0x0000000000057c5e : mov dword ptr [rax], 0xca00ca ; retf 0xca00
0x0000000000031615 : mov dword ptr [rbp + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000010527 : mov dword ptr [rbp - 0xc], eax ; mov r11d, edx ; jmp 0xc821
0x000000000000fd1b : mov dword ptr [rbp - 0xc], esi ; jmp 0xc81e
0x000000000003e5b2 : mov dword ptr [rbp], ebx ; mov rdi, r15 ; call 0x2a8b8
0x0000000000049e57 : mov dword ptr [rbx + 0x38], 0 ; call qword ptr [rax]
0x000000000000c37a : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000035e4 : mov dword ptr [rcx + 0x10], 0xffffffff ; ret
0x00000000000034ac : mov dword ptr [rcx + 0xc], 0xffffffff ; ret
0x000000000000345e : mov dword ptr [rcx + 0xc], eax ; lea rax, qword ptr [r8 + 2] ; ret
0x000000000000366b : mov dword ptr [rcx + 0xc], edx ; ret
0x000000000004fdc4 : mov dword ptr [rcx + 1], ecx ; leave ; jmp r9
0x000000000000356d : mov dword ptr [rcx + 8], edx ; ret
0x0000000000016f4c : mov dword ptr [rcx - 0x7d], 0x14801c6 ; ret
0x000000000004ddc2 : mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x0000000000026426 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000026436 : mov dword ptr [rcx], ecx ; ret
0x00000000000264c9 : mov dword ptr [rcx], edi ; ret
0x000000000000380d : mov dword ptr [rcx], edx ; ret
0x000000000004dfbb : mov dword ptr [rcx], esi ; mov eax, 1 ; ret
0x0000000000026435 : mov dword ptr [rcx], r9d ; ret
0x000000000000ad0f : mov dword ptr [rdi + 0x19], eax ; jmp 0x772a
0x000000000004e1e9 : mov dword ptr [rdi + 0x28], edx ; ret
0x00000000000018ff : mov dword ptr [rdi + 0x30], edx ; xor eax, eax ; ret
0x00000000000018e2 : mov dword ptr [rdx + 0x28], ecx ; ret
0x0000000000026d01 : mov dword ptr [rdx], eax ; movzx eax, word ptr [rdi + 0x1e] ; ret
0x00000000000531e0 : mov dword ptr [rsi - 0x59760005], esp ; sti ; call qword ptr [rsi]
0x00000000000531e4 : mov dword ptr [rsi - 0x59e90005], esp ; sti ; call qword ptr [rsi]
0x000000000000c360 : mov dword ptr [rsi], 0 ; xor eax, eax ; ret
0x000000000000c331 : mov dword ptr [rsi], 0x989680 ; xor eax, eax ; ret
0x000000000000c320 : mov dword ptr [rsi], 0xa ; xor eax, eax ; ret
0x000000000000c351 : mov dword ptr [rsi], 0xfa ; xor eax, eax ; ret
0x000000000000c310 : mov dword ptr [rsi], 1 ; xor eax, eax ; ret
0x000000000000c388 : mov dword ptr [rsi], 2 ; xor eax, eax ; ret
0x0000000000001d36 : mov dword ptr [rsi], edx ; mov eax, 1 ; ret
0x0000000000027274 : mov dword ptr [rsp + 0x10], eax ; mov qword ptr [rsp + 0x18], rax ; call rsi
0x0000000000011ac0 : mov dword ptr [rsp + 0x10], edx ; mov r14, rax ; call 0x4dd09
0x0000000000026091 : mov dword ptr [rsp + 0x10], esi ; shl rdi, 2 ; call qword ptr [rax]
0x000000000001537a : mov dword ptr [rsp + 0x110], eax ; call rcx
0x000000000000e64b : mov dword ptr [rsp + 0x160], eax ; call rdx
0x0000000000027279 : mov dword ptr [rsp + 0x18], eax ; call rsi
0x000000000004d87c : mov dword ptr [rsp + 0x18], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004d6c3 : mov dword ptr [rsp + 0x48], ebx ; call rsi
0x00000000000182e8 : mov dword ptr [rsp + 8], eax ; jmp 0x1452d
0x0000000000026afa : mov dword ptr [rsp + 8], ecx ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000025a7b : mov dword ptr [rsp + 8], edx ; call qword ptr [rax]
0x0000000000026b83 : mov dword ptr [rsp], ecx ; mov edi, 8 ; call qword ptr [rax]
0x00000000000264b9 : mov dword ptr es:[rcx], eax ; xor eax, eax ; ret
0x0000000000027a68 : mov eax, 0 ; cmove rax, rsi ; ret
0x00000000000693a8 : mov eax, 0x30000041 ; ret 0xfffd
0x000000000000fcdc : mov eax, 0x83000000 ; ret 0x6601
0x000000000003cd4d : mov eax, 0x870f0c3c ; retf 6
0x00000000000068eb : mov eax, 0x89000000 ; ret 0x8841
0x0000000000026614 : mov eax, 0xffffffdf ; ret
0x0000000000001908 : mov eax, 0xffffffe4 ; ret
0x0000000000026a20 : mov eax, 0xfffffff9 ; ret
0x00000000000263d2 : mov eax, 0xfffffffc ; cmove eax, edx ; ret
0x000000000000c346 : mov eax, 0xfffffffd ; ret
0x000000000000190e : mov eax, 0xfffffffe ; ret
0x0000000000013b31 : mov eax, 0xffffffff ; ret
0x0000000000001d38 : mov eax, 1 ; ret
0x0000000000006ca8 : mov eax, dword ptr [rax + rax] ; add byte ptr [rax - 0x73], cl ; push rax ; add al, 0xeb ; ret 0x8341
0x000000000004d910 : mov eax, dword ptr [rax] ; jmp rax
0x0000000000026d6e : mov eax, dword ptr [rbx] ; mov rdi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000002809b : mov eax, dword ptr [rbx] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000265ec : mov eax, dword ptr [rdi + 0x10] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000026423 : mov eax, dword ptr [rdi + 0x14] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000026447 : mov eax, dword ptr [rdi + 4] ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x000000000004d8c4 : mov eax, dword ptr [rip + 0x221706] ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000049a6d : mov eax, dword ptr [rip + 0x2254c5] ; call qword ptr [rax]
0x00000000000498c8 : mov eax, dword ptr [rip + 0x22566a] ; call qword ptr [rax]
0x000000000004636f : mov eax, dword ptr [rip + 0x228bc3] ; call qword ptr [rax]
0x0000000000026cb1 : mov eax, dword ptr [rip + 0x248319] ; jmp qword ptr [rax]
0x000000000001de28 : mov eax, dword ptr [rip + 0x2511a2] ; call qword ptr [rax]
0x000000000001de02 : mov eax, dword ptr [rip + 0x2511c8] ; xor ebx, ebx ; call qword ptr [rax]
0x000000000001d82c : mov eax, dword ptr [rip + 0x25179e] ; call qword ptr [rax]
0x000000000001d3af : mov eax, dword ptr [rip + 0x251b83] ; call qword ptr [rax]
0x0000000000019043 : mov eax, dword ptr [rip + 0x255f87] ; xor ebx, ebx ; call qword ptr [rax]
0x000000000000bb88 : mov eax, dword ptr [rip + 0x263442] ; mov rdi, r10 ; call qword ptr [rax]
0x00000000000023ef : mov eax, dword ptr [rip + 0x26cbdb] ; call qword ptr [rax]
0x0000000000003441 : mov eax, eax ; ret
0x000000000002a957 : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002918a : mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002921c : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5a5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026a12 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002720f : mov eax, ebx ; mov rdi, rsi ; pop rbx ; pop rbp ; jmp rax
0x0000000000028d04 : mov eax, ecx ; and eax, 0x80 ; jne 0x28d21 ; ret
0x0000000000004e71 : mov eax, edi ; ret
0x0000000000027ee4 : mov eax, edx ; ret
0x00000000000295c6 : mov eax, esi ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002974c : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002951a : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000028ca3 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x000000000002a876 : mov eax, esp ; pop r12 ; ret
0x00000000000294b4 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000028b81 : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028be7 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a723 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029519 : mov eax, r12d ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000028ca2 : mov eax, r12d ; pop r12 ; pop r13 ; ret
0x000000000002a875 : mov eax, r12d ; pop r12 ; ret
0x0000000000028b80 : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028be6 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a722 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029189 : mov eax, r13d ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000295c5 : mov eax, r14d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000000986f : mov ebp, 0x87 ; jmp 0x5ae1
0x0000000000065504 : mov ebp, 0xbf8bbe8b ; rol cl, 0xc2 ; ret
0x0000000000068c3d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000049b41 : mov ebp, 0xe8014c00 ; jmp rax
0x0000000000026d41 : mov ebp, dword ptr [rdi] ; call qword ptr [rbx]
0x0000000000027fe4 : mov ebp, edx ; mov rbx, rsi ; call qword ptr [rax]
0x0000000000001826 : mov ebp, esp ; call rax
0x0000000000028548 : mov ebx, 0x83000000 ; ret
0x0000000000068c3b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000054028 : mov ebx, 0xc8fffd24 ; and al, 0xfd ; call rsi
0x0000000000032546 : mov ebx, 0xe9fffffe ; retf 0xfffe
0x000000000004d500 : mov ebx, dword ptr [rbp] ; mov rdi, rsp ; je 0x4d581 ; call r11
0x0000000000004f46 : mov ebx, dword ptr [rdx] ; je 0x4f58 ; call rax
0x000000000000fd7c : mov ebx, eax ; jmp 0xc81d
0x000000000000fd18 : mov ebx, eax ; mov dword ptr [r13 - 0xc], esi ; jmp 0xc821
0x00000000000023a8 : mov ebx, edi ; movsxd rdi, ebp ; call qword ptr [rax]
0x000000000001052b : mov ebx, edx ; jmp 0xc81d
0x000000000004d82d : mov ebx, esi ; and rbx, rdx ; call qword ptr [rax]
0x0000000000027fe7 : mov ebx, esi ; call qword ptr [rax]
0x0000000000000340 : mov ecx, 0x3c0ef18d ; retf 0x28ee
0x0000000000017b14 : mov ecx, 0x89fffffb ; ret
0x000000000003ba51 : mov ecx, 0x8b460002 ; pop rsp ; ret 0x4104
0x0000000000053840 : mov ecx, cs ; sti ; jmp qword ptr [rcx]
0x0000000000025ae2 : mov ecx, dword ptr [rax + 0x39] ; retf 0x1873
0x0000000000065537 : mov ecx, dword ptr [rbx - 0x36747475] ; retf 0x8b8b
0x000000000006553a : mov ecx, dword ptr [rbx - 0x74743537] ; retf
0x0000000000065536 : mov ecx, dword ptr [rbx - 0x74747475] ; leave ; retf 0x8b8b
0x0000000000065535 : mov ecx, dword ptr [rbx - 0x74747475] ; mov ecx, ecx ; retf 0x8b8b
0x000000000000e293 : mov ecx, dword ptr [rdi] ; test byte ptr [rcx], al ; and eax, 0x83410000 ; ret 0x4c01
0x00000000000018dd : mov ecx, dword ptr [rdx + 0x28] ; bswap ecx ; mov dword ptr [rdx + 0x28], ecx ; ret
0x000000000006553b : mov ecx, ecx ; retf 0x8b8b
0x0000000000068fed : mov ecx, edi ; jmp qword ptr [rax]
0x0000000000049e6b : mov edi, 0x1000 ; call qword ptr [rax]
0x0000000000033467 : mov edi, 0x108 ; call qword ptr [rax]
0x000000000005199c : mov edi, 0x21fffb7a ; jnp 0x519a5 ; jmp qword ptr [rcx]
0x000000000004c5b1 : mov edi, 0x60 ; call qword ptr [rax]
0x000000000004f6fa : mov edi, 0x6c ; call qword ptr [rax]
0x0000000000049e09 : mov edi, 0x80 ; call qword ptr [rax]
0x0000000000030347 : mov edi, 0x89000000 ; ret 0x1776
0x0000000000022382 : mov edi, 0x89000000 ; ret 0x8676
0x0000000000022c17 : mov edi, 0x89000000 ; ret 0x870f
0x000000000001bdfe : mov edi, 0x89000000 ; ret 0xc076
0x0000000000053129 : mov edi, 0xc02efffb ; sti ; jmp qword ptr [rdi]
0x0000000000026b86 : mov edi, 8 ; call qword ptr [rax]
0x000000000004d4f3 : mov edi, dword ptr [rdx + 0x50] ; call rax
0x0000000000008d05 : mov edi, dword ptr [rsi + 0x50] ; call qword ptr [rax]
0x0000000000065505 : mov edi, dword ptr [rsi - 0x3e3f4075] ; ret 0xc4c3
0x0000000000049d2c : mov edi, dword ptr [rsp + 0x100] ; call qword ptr [rax]
0x0000000000049d7e : mov edi, dword ptr [rsp + 0x100] ; call qword ptr [rbx]
0x000000000000befd : mov edi, dword ptr [rsp + 0x130] ; call qword ptr [rax]
0x000000000000bedd : mov edi, dword ptr [rsp + 0x160] ; call qword ptr [rax]
0x000000000004b9fb : mov edi, dword ptr [rsp + 0x28] ; call 0x37d06
0x0000000000025f96 : mov edi, dword ptr [rsp + 0xc8] ; call qword ptr [rdx]
0x0000000000049d74 : mov edi, dword ptr [rsp + 0xf0] ; call qword ptr [rbx]
0x000000000001de25 : mov edi, eax ; mov rax, qword ptr [rip + 0x2511a2] ; call qword ptr [rax]
0x000000000001d829 : mov edi, eax ; mov rax, qword ptr [rip + 0x25179e] ; call qword ptr [rax]
0x000000000001d3ac : mov edi, eax ; mov rax, qword ptr [rip + 0x251b83] ; call qword ptr [rax]
0x000000000002cae6 : mov edi, ebp ; call 0x28d04
0x000000000003efb6 : mov edi, ebp ; call 0x2b244
0x000000000000b63e : mov edi, ebp ; call qword ptr [rax]
0x000000000004d795 : mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000002b5f4 : mov edi, ebx ; call 0x280b4
0x000000000003e1ef : mov edi, ebx ; call 0x2a414
0x0000000000030050 : mov edi, ebx ; call 0x2c2a4
0x0000000000031a7b : mov edi, ebx ; call 0x2dca4
0x0000000000037a25 : mov edi, ebx ; call 0x33d14
0x0000000000025a78 : mov edi, ebx ; mov qword ptr [rsp + 8], r10 ; call qword ptr [rax]
0x000000000004d90c : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000031a4a : mov edi, ebx ; xor r14d, r14d ; call 0x2dca7
0x000000000002af46 : mov edi, edi ; call 0x27a24
0x000000000003e5b6 : mov edi, edi ; call 0x2a8b4
0x000000000003f7eb : mov edi, edi ; call 0x2c2a4
0x000000000001e045 : mov edi, edi ; dec dword ptr [rax - 0x77] ; retf
0x000000000001f4a7 : mov edi, edi ; inc dword ptr [rbx - 0x7cb7fe20] ; ret
0x000000000000c305 : mov edi, edi ; movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x000000000000bb8f : mov edi, edx ; call qword ptr [rax]
0x0000000000009115 : mov edi, edx ; jmp 0x540c
0x000000000003d93a : mov edi, esi ; call 0x2a414
0x00000000000419b3 : mov edi, esi ; call 0x2dca4
0x0000000000027212 : mov edi, esi ; pop rbx ; pop rbp ; jmp rax
0x000000000004d8cb : mov edi, esp ; call qword ptr [rax]
0x000000000004d504 : mov edi, esp ; je 0x4d57d ; call r11
0x000000000004d6c1 : mov edi, esp ; mov dword ptr [rsp + 0x48], ebx ; call rsi
0x000000000002dff8 : mov edi, esp ; mov edx, dword ptr [rsp + 0x24] ; call 0x2a258
0x0000000000026d71 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000053139 : mov edx, 0xa2e1fffb ; sti ; jmp rcx
0x00000000000311e9 : mov edx, 0xc ; call 0x2dca7
0x000000000003247f : mov edx, 0xc ; xor esi, esi ; call 0x2ef39
0x000000000002dffa : mov edx, dword ptr [rsp + 0x24] ; call 0x2a256
0x0000000000017af0 : mov edx, dword ptr [rsp + 0x30] ; call 0x13dd6
0x000000000001057d : mov edx, eax ; jmp 0xc81d
0x000000000004e20f : mov edx, eax ; movzx eax, ax ; mov word ptr [rdi + 0x28], dx ; ret
0x0000000000003567 : mov edx, eax ; sub rdx, r8 ; mov dword ptr [r9 + 8], edx ; ret
0x0000000000020287 : mov edx, edi ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000002640b : mov edx, edx ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000005626 : mov edx, esp ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000000ea85 : mov es, word ptr [rdi - 0x7c000026] ; ret
0x000000000003f7a4 : mov esi, 0x20 ; call 0x2c2a7
0x000000000002fffe : mov esi, 0x89ffff7d ; ret 0xb60f
0x0000000000065506 : mov esi, 0xc1c0bf8b ; ret 0xc4c3
0x0000000000068c3e : mov esi, 0xc2c1c0bf ; ret
0x000000000001825d : mov esi, 1 ; jmp 0x14490
0x0000000000011ac5 : mov esi, eax ; call 0x4dd04
0x000000000002cae3 : mov esi, ebp ; mov rdi, rbp ; call 0x28d07
0x000000000002efc2 : mov esi, ebp ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000002af43 : mov esi, ebx ; mov rdi, r15 ; call 0x27a27
0x000000000002ef98 : mov esi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp 0x2b248
0x00000000000397d2 : mov esi, esi ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000002cae2 : mov esi, r13d ; mov rdi, rbp ; call 0x28d08
0x0000000000049f80 : mov esp, 0x89440000 ; retf
0x0000000000021230 : mov esp, 0x89ffff47 ; ret
0x000000000005329c : mov esp, 0xc0fffbb3 ; lodsb al, byte ptr [rsi] ; sti ; jmp qword ptr [rcx]
0x000000000001348e : mov esp, 0xcc24 ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x0000000000025c6e : mov esp, 0xf824 ; add byte ptr [rax + 0x29], cl ; ret 0x3840
0x000000000002a871 : mov esp, dword ptr [rbx] ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000009bc4 : mov esp, dword ptr [rsp + 0x1c8] ; jmp 0x5e8c
0x000000000003d937 : mov esp, eax ; mov rdi, r14 ; call 0x2a417
0x0000000000033910 : mov fs, ebx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000001176b : mov fs, word ptr [rcx - 0x7c000053] ; ret
0x000000000000fae5 : mov fs, word ptr [rdi] ; retf 0xffff
0x000000000000f863 : mov gs, word ptr [rcx - 0x7c000034] ; ret
0x0000000000011a5d : mov gs, word ptr [rdi - 0x7c000056] ; ret
0x000000000004d87b : mov qword ptr [r12 + 0x18], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003e5b1 : mov qword ptr [r13], rbx ; mov rdi, r15 ; call 0x2a8b9
0x000000000000ad0e : mov qword ptr [r15 + 0x19], rax ; jmp 0x772b
0x000000000004d933 : mov qword ptr [rax + 0x48], rsi ; mov qword ptr [rax + 0x50], rdx ; ret
0x000000000004d937 : mov qword ptr [rax + 0x50], rdx ; ret
0x000000000002a43c : mov qword ptr [rax + 8], rsi ; lea rax, qword ptr [rax + rcx + 0x10] ; ret
0x0000000000027ffd : mov qword ptr [rax - 8], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031614 : mov qword ptr [rbp + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049e56 : mov qword ptr [rbx + 0x38], 0 ; call qword ptr [rax]
0x000000000000c379 : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000026441 : mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000000000264c8 : mov qword ptr [rcx], rdi ; ret
0x00000000000018fe : mov qword ptr [rdi + 0x30], rdx ; xor eax, eax ; ret
0x000000000000c330 : mov qword ptr [rsi], 0x989680 ; xor eax, eax ; ret
0x000000000000c350 : mov qword ptr [rsi], 0xfa ; xor eax, eax ; ret
0x0000000000001d35 : mov qword ptr [rsi], rdx ; mov eax, 1 ; ret
0x0000000000015379 : mov qword ptr [rsp + 0x110], rax ; call rcx
0x000000000000e64a : mov qword ptr [rsp + 0x160], rax ; call rdx
0x0000000000027278 : mov qword ptr [rsp + 0x18], rax ; call rsi
0x0000000000025a7a : mov qword ptr [rsp + 8], r10 ; call qword ptr [rax]
0x00000000000182e7 : mov qword ptr [rsp + 8], rax ; jmp 0x1452e
0x0000000000026af9 : mov qword ptr [rsp + 8], rcx ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000026b82 : mov qword ptr [rsp], rcx ; mov edi, 8 ; call qword ptr [rax]
0x000000000001057c : mov r10, rax ; jmp 0xc81e
0x000000000000fd7b : mov r11d, eax ; jmp 0xc81e
0x000000000000fd17 : mov r11d, eax ; mov dword ptr [r13 - 0xc], esi ; jmp 0xc822
0x000000000001052a : mov r11d, edx ; jmp 0xc81e
0x000000000003d936 : mov r12, rax ; mov rdi, r14 ; call 0x2a418
0x0000000000011ac4 : mov r14, rax ; call 0x4dd05
0x000000000001825c : mov r14d, 1 ; jmp 0x14491
0x0000000000009114 : mov r15, rdx ; jmp 0x540d
0x0000000000027310 : mov rax, -1 ; ret
0x000000000004d90f : mov rax, qword ptr [rax] ; jmp rax
0x0000000000049a6c : mov rax, qword ptr [rip + 0x2254c5] ; call qword ptr [rax]
0x00000000000498c7 : mov rax, qword ptr [rip + 0x22566a] ; call qword ptr [rax]
0x000000000004636e : mov rax, qword ptr [rip + 0x228bc3] ; call qword ptr [rax]
0x0000000000026cb0 : mov rax, qword ptr [rip + 0x248319] ; jmp qword ptr [rax]
0x000000000001de27 : mov rax, qword ptr [rip + 0x2511a2] ; call qword ptr [rax]
0x000000000001de01 : mov rax, qword ptr [rip + 0x2511c8] ; xor ebx, ebx ; call qword ptr [rax]
0x000000000001d82b : mov rax, qword ptr [rip + 0x25179e] ; call qword ptr [rax]
0x000000000001d3ae : mov rax, qword ptr [rip + 0x251b83] ; call qword ptr [rax]
0x0000000000019042 : mov rax, qword ptr [rip + 0x255f87] ; xor ebx, ebx ; call qword ptr [rax]
0x00000000000023ee : mov rax, qword ptr [rip + 0x26cbdb] ; call qword ptr [rax]
0x0000000000003440 : mov rax, r8 ; ret
0x000000000002a956 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002720e : mov rax, rbx ; mov rdi, rsi ; pop rbx ; pop rbp ; jmp rax
0x0000000000004e70 : mov rax, rdi ; ret
0x0000000000026d40 : mov rbp, qword ptr [rdi] ; call qword ptr [rbx]
0x0000000000027fe3 : mov rbp, rdx ; mov rbx, rsi ; call qword ptr [rax]
0x0000000000001825 : mov rbp, rsp ; call rax
0x0000000000004f45 : mov rbx, qword ptr [rdx] ; je 0x4f59 ; call rax
0x00000000000023a7 : mov rbx, rdi ; movsxd rdi, ebp ; call qword ptr [rax]
0x000000000004d82c : mov rbx, rsi ; and rbx, rdx ; call qword ptr [rax]
0x0000000000027fe6 : mov rbx, rsi ; call qword ptr [rax]
0x000000000004d4f2 : mov rdi, qword ptr [r10 + 0x50] ; call rax
0x0000000000008d04 : mov rdi, qword ptr [r14 + 0x50] ; call qword ptr [rax]
0x0000000000049d2b : mov rdi, qword ptr [rsp + 0x100] ; call qword ptr [rax]
0x0000000000049d7d : mov rdi, qword ptr [rsp + 0x100] ; call qword ptr [rbx]
0x000000000000befc : mov rdi, qword ptr [rsp + 0x130] ; call qword ptr [rax]
0x000000000000bedc : mov rdi, qword ptr [rsp + 0x160] ; call qword ptr [rax]
0x000000000004b9fa : mov rdi, qword ptr [rsp + 0x28] ; call 0x37d07
0x0000000000025f95 : mov rdi, qword ptr [rsp + 0xc8] ; call qword ptr [rdx]
0x0000000000049d73 : mov rdi, qword ptr [rsp + 0xf0] ; call qword ptr [rbx]
0x000000000000bb8e : mov rdi, r10 ; call qword ptr [rax]
0x000000000004d8ca : mov rdi, r12 ; call qword ptr [rax]
0x000000000002dff7 : mov rdi, r12 ; mov edx, dword ptr [rsp + 0x24] ; call 0x2a259
0x0000000000026d70 : mov rdi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000003efb5 : mov rdi, r13 ; call 0x2b245
0x000000000003d939 : mov rdi, r14 ; call 0x2a415
0x00000000000419b2 : mov rdi, r14 ; call 0x2dca5
0x000000000002af45 : mov rdi, r15 ; call 0x27a25
0x000000000003e5b5 : mov rdi, r15 ; call 0x2a8b5
0x000000000003f7ea : mov rdi, r15 ; call 0x2c2a5
0x000000000002cae5 : mov rdi, rbp ; call 0x28d05
0x000000000000b63d : mov rdi, rbp ; call qword ptr [rax]
0x000000000002b5f3 : mov rdi, rbx ; call 0x280b5
0x000000000003e1ee : mov rdi, rbx ; call 0x2a415
0x000000000003004f : mov rdi, rbx ; call 0x2c2a5
0x0000000000031a7a : mov rdi, rbx ; call 0x2dca5
0x0000000000037a24 : mov rdi, rbx ; call 0x33d15
0x0000000000025a77 : mov rdi, rbx ; mov qword ptr [rsp + 8], r10 ; call qword ptr [rax]
0x000000000004d90b : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000031a49 : mov rdi, rbx ; xor r14d, r14d ; call 0x2dca8
0x0000000000027211 : mov rdi, rsi ; pop rbx ; pop rbp ; jmp rax
0x000000000004d503 : mov rdi, rsp ; je 0x4d57e ; call r11
0x000000000004d6c0 : mov rdi, rsp ; mov dword ptr [rsp + 0x48], ebx ; call rsi
0x0000000000017aef : mov rdx, qword ptr [rsp + 0x30] ; call 0x13dd7
0x000000000002af42 : mov rsi, rbx ; mov rdi, r15 ; call 0x27a28
0x0000000000053ef0 : mov spl, dil ; jmp rbx
0x0000000000025e2c : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe083
0x0000000000027ee0 : mov word ptr [rax], es ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000000863f : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4172
0x000000000004e1e8 : mov word ptr [rdi + 0x28], dx ; ret
0x000000000002aeb9 : mov word ptr [rdi], cs ; test bh, dh ; add al, byte ptr [rax] ; add al, ch ; pop rbx ; retf
0x000000000001c947 : movabs al, byte ptr [0x8348b874093cbc74] ; ret 0x4801
0x00000000000133c3 : movabs al, byte ptr [0x8948c62948000000] ; ret 0x3949
0x000000000000d1d6 : movabs eax, dword ptr [0x14404f85c8b0005] ; retf
0x00000000000002e1 : movabs eax, dword ptr [0xce6f7fa9b7660e48] ; retf 0xba85
0x0000000000010576 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x95e9
0x0000000000051a18 : movsb byte ptr [rdi], byte ptr [rsi] ; jp 0x51a19 ; jmp qword ptr [rcx]
0x000000000005323d : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; call rdx
0x000000000003fef7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000032487 : movsd dword ptr [rdi], dword ptr [rsi] ; retf 0xffff
0x0000000000001db6 : movsxd r10, dword ptr [r11 + r10*4] ; add r10, r11 ; jmp r10
0x0000000000002b10 : movsxd r14, dword ptr [rax + r14*4] ; add rax, r14 ; jmp rax
0x000000000004f970 : movsxd r8, dword ptr [rbx + r8*4] ; add r8, rbx ; jmp r8
0x000000000000dbb9 : movsxd r8, dword ptr [rdi + r8*4] ; add rdi, r8 ; jmp rdi
0x000000000004fdc1 : movsxd r9, dword ptr [rcx + r9*4] ; add r9, rcx ; jmp r9
0x0000000000049b3e : movsxd rax, dword ptr [r13 + r15*4] ; add rax, r13 ; jmp rax
0x000000000004244b : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000004d7d : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000000c022 : movsxd rax, dword ptr [rax + rbp*4] ; add rax, rdi ; jmp rax
0x0000000000001974 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x0000000000022463 : movsxd rax, dword ptr [rcx + r13*4] ; add rax, rcx ; jmp rax
0x0000000000027b64 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000033fd : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x0000000000013ec0 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000000c8ff : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000343b3 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000000f986 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000000b637 : movsxd rbp, ebp ; add rbp, 0x40 ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000034540 : movsxd rcx, dword ptr [r10 + rcx*4] ; add rcx, r10 ; jmp rcx
0x0000000000007b16 : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000000d5ae : movsxd rcx, dword ptr [rdi + rcx*4] ; add rdi, rcx ; jmp rdi
0x000000000000e437 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000006957 : movsxd rdi, dword ptr [rsi + rdi*4] ; add rsi, rdi ; jmp rsi
0x00000000000023ab : movsxd rdi, ebp ; call qword ptr [rax]
0x0000000000026aff : movsxd rdi, edi ; call qword ptr [rax]
0x000000000000452b : movsxd rdx, dword ptr [r11 + rdx*4] ; add rdx, r11 ; jmp rdx
0x000000000000437c : movsxd rdx, dword ptr [r12 + rdx*4] ; add rdx, r12 ; jmp rdx
0x000000000004e2d7 : movsxd rdx, dword ptr [r14 + rdx*4] ; add rdx, r14 ; jmp rdx
0x0000000000048ac2 : movsxd rdx, dword ptr [r15 + rdx*4] ; add rdx, r15 ; jmp rdx
0x000000000002dd4d : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000000c307 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x0000000000005628 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000003a3f : movsxd rdx, dword ptr [rbx + rdx*4] ; add rdx, rbx ; jmp rdx
0x0000000000022d36 : movsxd rdx, dword ptr [rcx + rbp*4] ; add rdx, rcx ; jmp rdx
0x0000000000003e6e : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; jmp rdx
0x0000000000004a57 : movsxd rsi, dword ptr [r8 + rcx*4] ; add rsi, r8 ; jmp rsi
0x000000000002efc4 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x0000000000005a30 : movsxd rsi, dword ptr [rcx + rsi*4] ; add rcx, rsi ; jmp rcx
0x0000000000027db7 : movzx eax, al ; add eax, eax ; ret
0x0000000000027ad0 : movzx eax, ax ; add rax, rsi ; ret
0x000000000004e211 : movzx eax, ax ; mov word ptr [rdi + 0x28], dx ; ret
0x0000000000027a57 : movzx eax, byte ptr [rax + rdx] ; add rax, rsi ; ret
0x0000000000027ab7 : movzx eax, byte ptr [rax + rdx] ; lea rax, qword ptr [rsi + rax - 1] ; ret
0x0000000000027a40 : movzx eax, byte ptr [rsi + 1] ; lea rax, qword ptr [rsi + rax + 3] ; ret
0x0000000000026584 : movzx eax, word ptr [rdi + 0x1c] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000026450 : movzx eax, word ptr [rdi + 0x1e] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000026d03 : movzx eax, word ptr [rdi + 0x1e] ; ret
0x0000000000026459 : movzx eax, word ptr [rdi + 0x20] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000000000264ad : movzx eax, word ptr [rdi + 0x24] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000000000264b6 : movzx eax, word ptr [rdi + 0x26] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000003665 : movzx edx, byte ptr [r8 + 3] ; mov dword ptr [r9 + 0xc], edx ; ret
0x0000000000003666 : movzx edx, byte ptr [rax + 3] ; mov dword ptr [r9 + 0xc], edx ; ret
0x0000000000027a9f : movzx edx, byte ptr [rcx + rdx] ; add rax, rdx ; ret
0x0000000000053158 : mul byte ptr [rdi - 0x58890005] ; sti ; jmp rcx
0x000000000002f7b8 : mul dword ptr [rsi - 0x3f] ; ret
0x0000000000027213 : neg dword ptr [rbx + 0x5d] ; jmp rax
0x000000000000b49b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000010578 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x95e9
0x000000000000562b : nop ; add rax, rdx ; jmp rax
0x0000000000069250 : nop ; and byte ptr [rax], al ; add al, ah ; xor bh, ah ; jmp rax
0x000000000006912c : nop ; loope 0x6912d ; call qword ptr [rax]
0x00000000000265ff : nop ; mov eax, 0xffffffe4 ; ret
0x000000000000343f : nop ; mov rax, r8 ; ret
0x0000000000069060 : nop ; or dword ptr [rax], eax ; add byte ptr [rax - 0x43], dh ; stc ; jmp rax
0x0000000000051911 : nop ; sti ; jmp rax
0x0000000000053b48 : nop ; sub edi, esp ; dec dword ptr [rax + 0x2b] ; cld ; call qword ptr [rax]
0x000000000002a9bf : nop ; xor eax, eax ; ret
0x000000000000175b : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000000018e8 : nop dword ptr [rax + rax] ; ret
0x000000000004fa9b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000002efa3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000001905 : nop dword ptr [rax] ; mov eax, 0xffffffe4 ; ret
0x00000000000265f4 : nop dword ptr [rax] ; mov eax, 0xfffffffe ; ret
0x000000000002efcd : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000004f50c : nop dword ptr [rax] ; ret
0x0000000000003571 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000000175a : nop word ptr [rax + rax] ; pop rbp ; ret
0x00000000000039b2 : nop word ptr [rax + rax] ; ret
0x00000000000311ea : or al, 0 ; add byte ptr [rax], al ; call 0x2dca6
0x0000000000032480 : or al, 0 ; add byte ptr [rax], al ; xor esi, esi ; call 0x2ef38
0x000000000006830a : or al, 0 ; cld ; jne 0x68313 ; jmp qword ptr [rcx]
0x00000000000680da : or al, 0 ; cmp bh, 0xff ; call qword ptr [rbx]
0x0000000000068312 : or al, 0 ; fcomp dword ptr [rdx - 1] ; jmp qword ptr [rcx]
0x0000000000068052 : or al, 0 ; loop 0x6805b ; call qword ptr [rbx]
0x0000000000067482 : or al, 0 ; ret
0x00000000000674b2 : or al, 0 ; retf
0x00000000000674aa : or al, 0 ; retf 0
0x0000000000067812 : or al, 0 ; sar bh, 0xff ; call qword ptr [rbx]
0x000000000006781a : or al, 0 ; sar edi, -1 ; call qword ptr [rbx]
0x00000000000680ba : or al, 0x15 ; sti ; jrcxz 0x680c3 ; call qword ptr [rbx]
0x0000000000026b84 : or al, 0x24 ; mov edi, 8 ; call qword ptr [rax]
0x000000000006786a : or al, 0x33 ; retf 0xffff
0x0000000000067892 : or al, 0x3b ; sar bh, 0xff ; call qword ptr [rbx]
0x0000000000053d80 : or al, 0x3c ; cld ; call rsp
0x000000000000fd7a : or al, 0x41 ; mov ebx, eax ; jmp 0xc81f
0x0000000000003460 : or al, 0x49 ; lea eax, dword ptr [rax + 2] ; ret
0x00000000000017a3 : or al, 0x5d ; jmp rax
0x0000000000054720 : or al, 0x74 ; std ; call rcx
0x000000000005471c : or al, 0x74 ; std ; dec dword ptr [rsp + rsi*2] ; std ; call rcx
0x0000000000011411 : or al, 0x83 ; ret 0x4401
0x0000000000007b18 : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000004fdc3 : or al, 0x89 ; add r9, rcx ; jmp r9
0x0000000000034542 : or al, 0x8a ; add rcx, r10 ; jmp rcx
0x000000000000e439 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000000d5b0 : or al, 0x8f ; add rdi, rcx ; jmp rdi
0x000000000000d550 : or al, 0xe9 ; ret
0x00000000000059da : or al, 0xf7 ; ret 0
0x000000000001b64c : or al, 9 ; ret 0x8b48
0x0000000000018cd2 : or al, 9 ; ret 0xb60f
0x0000000000018652 : or al, 9 ; ret 0xf41
0x00000000000066d2 : or al, 9 ; retf 0xb60f
0x000000000003a533 : or al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed77
0x000000000000c322 : or al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000057b2c : or al, byte ptr [rax] ; or al, byte ptr [rax] ; or al, byte ptr [rax] ; or al, byte ptr [rax] ; ret
0x0000000000063558 : or al, byte ptr [rax] ; or al, byte ptr [rax] ; or al, byte ptr [rax] ; or al, byte ptr [rax] ; retf
0x0000000000057b2e : or al, byte ptr [rax] ; or al, byte ptr [rax] ; or al, byte ptr [rax] ; ret
0x000000000006355a : or al, byte ptr [rax] ; or al, byte ptr [rax] ; or al, byte ptr [rax] ; retf
0x0000000000057b30 : or al, byte ptr [rax] ; or al, byte ptr [rax] ; ret
0x000000000006355c : or al, byte ptr [rax] ; or al, byte ptr [rax] ; retf
0x0000000000057b32 : or al, byte ptr [rax] ; ret
0x000000000006355e : or al, byte ptr [rax] ; retf
0x000000000002aa47 : or al, ch ; ret
0x000000000004c968 : or al, ch ; ret 0xfe25
0x000000000002eae8 : or al, ch ; ret 0xff95
0x000000000004e190 : or bh, byte ptr [rdx + rdx*4] ; mov byte ptr [rsi], dil ; ret
0x0000000000002395 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000271b4 : or byte ptr [r8 - 0x7d], r9b ; ret 0x4110
0x000000000000f38f : or byte ptr [r9 - 0x77], r8b ; ret
0x000000000004a8cf : or byte ptr [rax + 0x19], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4103
0x0000000000049fdc : or byte ptr [rax + 0x19], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x8003
0x0000000000049dca : or byte ptr [rax + 0x63], cl ; ret 0x148
0x0000000000004c62 : or byte ptr [rax + 0xf], cl ; ror dword ptr [rax + 0x29], cl ; ret 0xd7eb
0x0000000000004c61 : or byte ptr [rax + 0xf], r9b ; ror dword ptr [rax + 0x29], cl ; ret 0xd7eb
0x000000000004aa4b : or byte ptr [rax + 1], cl ; ret
0x00000000000142ec : or byte ptr [rax - 0x48f0d707], al ; ror byte ptr [rdi], 0x94 ; ret 0xf980
0x000000000002a43f : or byte ptr [rax - 0x73], cl ; or byte ptr [rax], r10b ; ret
0x000000000004636d : or byte ptr [rax - 0x75], cl ; add eax, 0x228bc3 ; call qword ptr [rax]
0x0000000000045fc4 : or byte ptr [rax - 0x77], cl ; ret 0x63e8
0x000000000003e720 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x45 ; retf 0x8d49
0x00000000000271b5 : or byte ptr [rax - 0x7d], cl ; ret 0x4110
0x000000000002d915 : or byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000002dab1 : or byte ptr [rax - 0x7d], cl ; ret 0x8903
0x000000000004027d : or byte ptr [rax - 0x80], al ; std ; jp 0x40299 ; xchg eax, esp ; ret 0x8040
0x000000000004b3ae : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000026b87 : or byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000000ac5c : or byte ptr [rax], al ; add cl, ch ; retf
0x000000000000ed5a : or byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x0000000000069030 : or byte ptr [rax], cl ; add byte ptr [rax], al ; mov al, 0x99 ; stc ; jmp qword ptr [rax]
0x000000000002a443 : or byte ptr [rax], dl ; ret
0x000000000002a442 : or byte ptr [rax], r10b ; ret
0x00000000000271e9 : or byte ptr [rbp + 0x39], al ; ret
0x0000000000013c72 : or byte ptr [rbp + rax*2 - 0xa], dh ; ret 0xf04
0x0000000000026c9f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000026a17 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006d975 : or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000069458 : or byte ptr [rbx], 0 ; and byte ptr [rbp - 2], ah ; call rax
0x000000000000f390 : or byte ptr [rcx - 0x77], al ; ret
0x00000000000106d0 : or byte ptr [rcx - 0x77], al ; retf
0x0000000000002623 : or byte ptr [rcx - 0x7c047630], cl ; ret 0x4101
0x00000000000169a1 : or byte ptr [rcx - 0x80], al ; inc byte ptr [rdx + 0xf] ; xchg eax, esp ; ret 0x8041
0x0000000000033468 : or byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000000095d8 : or byte ptr [rcx], bh ; retf 0x8948
0x00000000000195df : or byte ptr [rdi], 0x85 ; adc edx, dword ptr [rbx - 0x76b80000] ; retf 0x13eb
0x0000000000017c87 : or byte ptr [rdi], 0x85 ; ret
0x00000000000195f7 : or byte ptr [rdi], 0x85 ; ret 0x61
0x000000000000f359 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0x0000000000027acf : or byte ptr [rdi], cl ; mov bh, 0xc0 ; add rax, rsi ; ret
0x0000000000010b85 : or byte ptr [rdi], cl ; mov bh, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000021629 : or byte ptr [rdi], cl ; mov dh, 0x40 ; add eax, 0x93fe083 ; ret 0x8b48
0x0000000000019e41 : or byte ptr [rdi], cl ; mov dh, 0x71 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000000f1b7 : or byte ptr [rdi], cl ; test ch, dl ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x0000000000033e94 : or byte ptr [rdi], cl ; xchg eax, edi ; ret 0xc283
0x0000000000003aba : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x000000000003a54a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xbde8
0x0000000000068fe8 : or byte ptr [rip - 0x76a00000], al ; stc ; jmp qword ptr [rax]
0x0000000000001b73 : or byte ptr [rsi + 0x39], ah ; ret 0xb70f
0x0000000000001b6f : or byte ptr [rsi - 0x3f], ah ; ret 0x6608
0x00000000000389a7 : or byte ptr [rsi - 0x3f], ah ; ret 0x8408
0x0000000000049c3b : or byte ptr [rsi - 0x3f], ah ; ret 0xf08
0x0000000000053fd9 : or ch, bh ; jmp rsi
0x0000000000053f95 : or ch, bh ; push qword ptr [rcx] ; or ebp, edi ; jmp qword ptr [rsi]
0x0000000000053fd5 : or ch, bh ; push rcx ; or ch, bh ; jmp rsi
0x000000000004efa1 : or cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000000398b2 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x55e8
0x000000000000fb52 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x5e9
0x000000000001082b : or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8fe9
0x000000000000ffa2 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xb8e9
0x00000000000187a1 : or cl, ch ; pop rdi ; ret
0x000000000001781d : or cl, ch ; ret
0x00000000000182eb : or cl, ch ; ret 0xffff
0x0000000000028d37 : or dh, al ; add byte ptr [rbx - 0xca43fcf], cl ; ret
0x000000000003be52 : or dh, byte ptr [rbp - 0x74bbfffe] ; pop rsp ; retf 0x4104
0x000000000000bbef : or dh, dh ; ret
0x000000000004d44b : or dh, dh ; ret 0xf02
0x000000000004e18f : or dil, byte ptr [rdx + r10*4] ; mov byte ptr [rsi], dil ; ret
0x000000000002bd84 : or dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000068309 : or dword ptr [rax + rax], ecx ; cld ; jne 0x68314 ; jmp qword ptr [rcx]
0x00000000000680d9 : or dword ptr [rax + rax], ecx ; cmp bh, 0xff ; call qword ptr [rbx]
0x0000000000068311 : or dword ptr [rax + rax], ecx ; fcomp dword ptr [rdx - 1] ; jmp qword ptr [rcx]
0x0000000000068051 : or dword ptr [rax + rax], ecx ; loop 0x6805c ; call qword ptr [rbx]
0x00000000000674b1 : or dword ptr [rax + rax], ecx ; retf
0x00000000000674a9 : or dword ptr [rax + rax], ecx ; retf 0
0x0000000000008f83 : or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000069061 : or dword ptr [rax], eax ; add byte ptr [rax - 0x43], dh ; stc ; jmp rax
0x000000000003a8be : or dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4920
0x00000000000562fa : or dword ptr [rax], eax ; ret 0x400
0x00000000000454c4 : or dword ptr [rbp - 0x3876feb8], 0xf ; xchg eax, ebp ; ret 0x540a
0x0000000000040899 : or dword ptr [rbx + 0x412c2474], 0xf ; xchg eax, ebp ; ret 0xa44
0x000000000004f973 : or dword ptr [rcx + 1], 0xffffffd8 ; jmp r8
0x0000000000022b2c : or dword ptr [rip + 0x4800001a], 0xffffff83 ; ret
0x0000000000021b89 : or dword ptr [rsi + 0x30], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000069b12 : or dword ptr [rsi], 0x4e028310 ; ret
0x0000000000053c65 : or eax, 0x2458fffc ; cld ; call rax
0x000000000004dd9f : or eax, 0xc0310674 ; ret
0x0000000000069091 : or eax, dword ptr [rax] ; add al, ah ; wait ; cli ; jmp qword ptr [rax]
0x000000000003e83f : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000006d977 : or eax, dword ptr [rdx] ; ret
0x000000000006a9f1 : or eax, dword ptr [rdx] ; retf
0x000000000003e83e : or eax, dword ptr cs:[rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000027ea6 : or eax, edx ; ret
0x0000000000053f99 : or ebp, edi ; jmp qword ptr [rsi]
0x0000000000027d8e : or ebx, esi ; ret
0x000000000003e1f7 : or ecx, dword ptr [rax - 0x77] ; ret 0xc985
0x000000000001d4da : or ecx, eax ; jmp 0x19f71
0x000000000001f63b : or ecx, eax ; jmp 0x1c04c
0x0000000000053f4d : or edi, ebp ; jmp rax
0x0000000000053f49 : or edi, ebp ; push qword ptr [rsi] ; or edi, ebp ; jmp rax
0x0000000000026dd3 : or edi, edi ; lea rax, qword ptr [rsi + 0xd] ; mov byte ptr [rsi + 0xc], dl ; ret
0x00000000000118d9 : or edx, 0xffffffff ; dec dword ptr [rcx - 0x7d] ; ret 0x830c
0x000000000006d976 : or r8d, dword ptr [rdx] ; ret
0x000000000006a9f0 : or r8d, dword ptr [rdx] ; retf
0x0000000000026d72 : out 0x5b, eax ; pop rbp ; pop r12 ; jmp rax
0x000000000004d505 : out 0x74, eax ; jo 0x4d54e ; call rbx
0x00000000000149e2 : out 0x75, al ; retf
0x000000000004d6c2 : out 0x89, eax ; pop rsp ; and al, 0x48 ; call rsi
0x000000000002dff9 : out 0x8b, eax ; push rsp ; and al, 0x24 ; call 0x2a257
0x000000000004913b : out 0xe8, eax ; jmp qword ptr [rax]
0x000000000002e6e8 : out 0xe8, eax ; ret 0xff99
0x000000000002e0b8 : out 0xe8, eax ; ret 0xffbb
0x0000000000029138 : out 0xe8, eax ; ret 0xfff9
0x000000000002e57f : out 0xe8, eax ; retf
0x0000000000053889 : out 0xfb, eax ; call rcx
0x000000000004d8cc : out 0xff, eax ; adc byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000004000b : out 0xff, eax ; dec dword ptr [rbp - 0x77] ; retf
0x00000000000028ae : out 1, eax ; ret
0x0000000000026097 : out 2, eax ; call qword ptr [rax]
0x0000000000008cd1 : out 4, eax ; call qword ptr [rax]
0x0000000000049c6c : out dx, al ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000002cae4 : out dx, al ; mov rdi, rbp ; call 0x28d06
0x000000000002efc3 : out dx, al ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000002cae7 : out dx, eax ; call 0x28d03
0x000000000003efb7 : out dx, eax ; call 0x2b243
0x000000000000b63f : out dx, eax ; call qword ptr [rax]
0x0000000000013b30 : out dx, eax ; mov eax, 0xffffffff ; ret
0x0000000000053888 : out dx, eax ; out 0xfb, eax ; call rcx
0x000000000004d796 : out dx, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000026eb8 : out dx, eax ; xor eax, eax ; ret
0x0000000000053e7d : outsb dx, byte ptr [rsi] ; cld ; jmp rbx
0x0000000000053e79 : outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rbx] ; outsb dx, byte ptr [rsi] ; cld ; jmp rbx
0x0000000000025b7d : outsd dx, dword ptr [rsi] ; add dword ptr [rbp - 0x7b], eax ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000053ead : outsd dx, dword ptr [rsi] ; cld ; call rbx
0x0000000000053e9d : outsd dx, dword ptr [rsi] ; cld ; inc ecx ; outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x0000000000053ea5 : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x0000000000053ea1 : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rsi]
0x00000000000202ed : outsd dx, dword ptr [rsi] ; jo 0x202fb ; add byte ptr [rdi], cl ; mov dh, 0x44 ; ret 0x4801
0x000000000003ff2d : outsd dx, dword ptr [rsi] ; ret
0x0000000000053ea4 : outsd dx, dword ptr es:[rsi] ; cld ; jmp qword ptr [rdx]
0x000000000002ef9c : pop r12 ; jmp 0x2b244
0x0000000000026d75 : pop r12 ; jmp rax
0x000000000004d798 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000000015c3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026a96 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000001e3b : pop r12 ; pop r13 ; ret
0x0000000000002398 : pop r12 ; ret
0x0000000000050455 : pop r13 ; and eax, 1 ; pop r14 ; pop r15 ; ret
0x000000000004d79a : pop r13 ; pop r14 ; jmp rax
0x00000000000015c5 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026a98 : pop r13 ; pop r14 ; ret
0x0000000000001e3d : pop r13 ; ret
0x000000000004d79c : pop r14 ; jmp rax
0x00000000000015c7 : pop r14 ; pop r15 ; ret
0x0000000000026a9a : pop r14 ; ret
0x00000000000015c9 : pop r15 ; ret
0x0000000000053c68 : pop rax ; and al, 0xfc ; call rax
0x0000000000053c98 : pop rax ; and bh, ah ; ljmp ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x0000000000004ae6 : pop rax ; idiv edi ; dec dword ptr [rdi] ; mov dh, 0x56 ; add bh, byte ptr [rcx] ; retf 0x3fe9
0x00000000000310f6 : pop rax ; pop rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000045d40 : pop rax ; sbb byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000053c10 : pop rax ; sub ah, bh ; call qword ptr [rax]
0x0000000000053c0c : pop rax ; sub ah, bh ; lcall ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x000000000004d501 : pop rbp ; add byte ptr [rax - 0x77], cl ; out 0x74, eax ; jo 0x4d552 ; call rbx
0x000000000003e5b3 : pop rbp ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x2a8b7
0x000000000000e7da : pop rbp ; add byte ptr [rcx - 0x77], al ; ret
0x000000000003ca32 : pop rbp ; add byte ptr [rcx - 0x77], cl ; ret 0x8545
0x0000000000050456 : pop rbp ; and eax, 1 ; pop r14 ; pop r15 ; ret
0x0000000000053d7c : pop rbp ; cmp edi, esp ; dec dword ptr [rsp + rdi] ; cld ; call rsp
0x0000000000001757 : pop rbp ; jmp rax
0x00000000000017e8 : pop rbp ; mov byte ptr [rip + 0x26d850], 1 ; ret
0x0000000000028ca1 : pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x000000000002a874 : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000002ef9b : pop rbp ; pop r12 ; jmp 0x2b245
0x0000000000026d74 : pop rbp ; pop r12 ; jmp rax
0x000000000004d797 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000000015c2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026a95 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000001e3a : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000002397 : pop rbp ; pop r12 ; ret
0x000000000004d79b : pop rbp ; pop r14 ; jmp rax
0x00000000000015c6 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000026a99 : pop rbp ; pop r14 ; ret
0x0000000000001760 : pop rbp ; ret
0x0000000000028b7f : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004d90e : pop rbx ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000027214 : pop rbx ; pop rbp ; jmp rax
0x0000000000028ca0 : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x000000000002a873 : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000002ef9a : pop rbx ; pop rbp ; pop r12 ; jmp 0x2b246
0x0000000000026d73 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000026a94 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000001e39 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000002396 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026a18 : pop rbx ; pop rbp ; ret
0x000000000000a9c1 : pop rbx ; ret
0x000000000002aec1 : pop rbx ; retf
0x000000000002efd0 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002a4f1 : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000001939 : pop rdi ; add ecx, dword ptr [rcx - 0x77] ; retf 0x894d
0x000000000005523c : pop rdi ; fsin ; jmp qword ptr [rcx]
0x0000000000031578 : pop rdi ; jne 0x31587 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000015ca : pop rdi ; ret
0x0000000000042be6 : pop rdi ; sub al, ch ; ret
0x00000000000310f7 : pop rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000025d31 : pop rdx ; jmp rdi
0x000000000000bbee : pop rdx ; or dh, dh ; ret
0x000000000002a4f0 : pop rdx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000d9b2 : pop rsi ; add dword ptr [rsi - 0x3f], esp ; ret
0x000000000004d79d : pop rsi ; jmp rax
0x0000000000009e53 : pop rsi ; jo 0x9de9 ; push rbx ; add dword ptr [rcx], ebp ; ret 0xd089
0x00000000000015c8 : pop rsi ; pop r15 ; ret
0x0000000000031577 : pop rsi ; pop rdi ; jne 0x31588 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026a9b : pop rsi ; ret
0x0000000000022902 : pop rsi ; sbb al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xbae9
0x000000000006d9e4 : pop rsp ; add byte ptr [r8], r8b ; call 0x2706d7f3
0x000000000004d6c4 : pop rsp ; and al, 0x48 ; call rsi
0x0000000000053dcc : pop rsp ; cld ; call rdi
0x00000000000512b0 : pop rsp ; cmp bl, bh ; call qword ptr [rdi]
0x000000000002ef9d : pop rsp ; jmp 0x2b243
0x0000000000026d76 : pop rsp ; jmp rax
0x000000000004d799 : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x00000000000015c4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026a97 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000001e3c : pop rsp ; pop r13 ; ret
0x0000000000002399 : pop rsp ; ret
0x000000000003ba56 : pop rsp ; ret 0x4104
0x000000000003be58 : pop rsp ; retf 0x4104
0x000000000002b6da : popfq ; ret 0x8d48
0x000000000002ef9f : popfq ; ret 0xffff
0x0000000000040fd4 : push -0x17bf95b0 ; ret
0x00000000000691c8 : push -0x1fffffe6 ; add ah, bh ; jmp rax
0x0000000000020ab1 : push -0x49f0fffc ; ret 0x4801
0x000000000003f63e : push -0x76f91f3f ; ret 0xb60f
0x000000000000faa5 : push -0x7c000036 ; ret
0x0000000000008f81 : push -0x7cb7f615 ; ret
0x0000000000053ca4 : push 0x10fffc21 ; adc edi, esp ; call rax
0x000000000004aecc : push 0x140c601 ; ret
0x0000000000027fff : push 0x415d5bf8 ; pop rsp ; ret
0x00000000000498ca : push 0x56 ; and al, byte ptr [rax] ; call qword ptr [rax]
0x000000000005067f : push qword ptr [rax + 0x13] ; sti ; call rax
0x000000000005067b : push qword ptr [rax + 0x13] ; sti ; push qword ptr [rax + 0x13] ; sti ; call rax
0x00000000000506bf : push qword ptr [rax - 0x2f0004eb] ; adc edi, ebx ; call rax
0x0000000000054983 : push qword ptr [rax - 0x6b] ; std ; call qword ptr [rax]
0x00000000000508bb : push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x000000000005081f : push qword ptr [rax] ; adc al, 0xfb ; call rax
0x00000000000508b7 : push qword ptr [rax] ; adc al, 0xfb ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x000000000005081b : push qword ptr [rax] ; adc al, 0xfb ; push qword ptr [rax] ; adc al, 0xfb ; call rax
0x0000000000054203 : push qword ptr [rax] ; cmp bh, ch ; call rax
0x00000000000541ff : push qword ptr [rax] ; cmp bh, ch ; push qword ptr [rax] ; cmp bh, ch ; call rax
0x000000000005100f : push qword ptr [rbp - 0x4a0004d0] ; xor bl, bh ; jmp qword ptr [rdi]
0x0000000000050693 : push qword ptr [rbx + rdx - 5] ; call rax
0x000000000005068f : push qword ptr [rbx + rdx - 5] ; push qword ptr [rbx + rdx - 5] ; call rax
0x0000000000053e7b : push qword ptr [rbx] ; outsb dx, byte ptr [rsi] ; cld ; jmp rbx
0x0000000000053827 : push qword ptr [rcx - 0x15000439] ; sar bl, 0xff ; retf
0x0000000000053f97 : push qword ptr [rcx] ; or ebp, edi ; jmp qword ptr [rsi]
0x000000000000fb4c : push qword ptr [rcx] ; rol byte ptr [rax + 0xf0a017e], cl ; xchg eax, esp ; ret 0x5e9
0x000000000000ff9c : push qword ptr [rcx] ; rol byte ptr [rax + 0xf0a017e], cl ; xchg eax, esp ; ret 0xb8e9
0x000000000005177b : push qword ptr [rdx + 0x23fffb7b] ; jbe 0x51786 ; jmp qword ptr [rbx]
0x00000000000519c7 : push qword ptr [rdx + rdi*2 + 0x7b21fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000051763 : push qword ptr [rdx - 0x4d000485] ; jnp 0x5176e ; jmp qword ptr [rbx]
0x0000000000051777 : push qword ptr [rdx - 0x4d000485] ; jnp 0x51782 ; jmp qword ptr [rbx]
0x00000000000517ab : push qword ptr [rdx - 0x5d000485] ; jb 0x517b6 ; call rcx
0x000000000002b9d3 : push qword ptr [rdx - 0x77] ; ret 0x8348
0x0000000000054ad7 : push qword ptr [rsi + rdx*2 - 2] ; call rsp
0x0000000000054ad3 : push qword ptr [rsi + rdx*2 - 2] ; push qword ptr [rsi + rdx*2 - 2] ; call rsp
0x000000000005315b : push qword ptr [rsi - 0x59] ; sti ; jmp rcx
0x0000000000053f4b : push qword ptr [rsi] ; or edi, ebp ; jmp rax
0x0000000000053f47 : push qword ptr [rsi] ; or edi, ebp ; push qword ptr [rsi] ; or edi, ebp ; jmp rax
0x0000000000053e44 : push r12 ; cld ; inc dword ptr [rdi + 0x54] ; cld ; jmp qword ptr [rbx]
0x0000000000053e48 : push r12 ; cld ; jmp qword ptr [rbx]
0x000000000004d9e0 : push r12 ; push rbp ; push rbx ; call qword ptr [rax]
0x000000000004d9de : push r13 ; push r12 ; push rbp ; push rbx ; call qword ptr [rax]
0x0000000000053cb0 : push rax ; adc bh, ah ; call rax
0x000000000002763b : push rax ; adc dh, dh ; ret 0x7504
0x00000000000506e4 : push rax ; adc eax, 0x13d0fffb ; sti ; call rax
0x000000000000d96a : push rax ; add al, 0x83 ; ret 0x6601
0x0000000000006cae : push rax ; add al, 0xeb ; ret 0x8341
0x0000000000006931 : push rax ; add cl, byte ptr [rax - 0x77] ; retf
0x000000000002807a : push rax ; add dh, byte ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002aad4 : push rax ; add dword ptr [rax - 0x80], -3 ; ja 0x2aaf2 ; xchg eax, esp ; ret
0x0000000000010df6 : push rax ; add dword ptr [rbx - 0x1d3ec01e], eax ; adc cl, byte ptr [rcx] ; retf 0xb60f
0x000000000000ed7d : push rax ; add dword ptr [rbx - 0x1d3ec01e], eax ; or al, 9 ; retf 0xb60f
0x0000000000010e68 : push rax ; add dword ptr [rbx - 0x1d3ec01e], eax ; sbb byte ptr [rcx], cl ; retf 0xb60f
0x000000000004959c : push rax ; add dword ptr [rsi - 0x3f], esp ; ret 0xe908
0x0000000000003992 : push rax ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000002533 : push rax ; add eax, dword ptr [rdx + rdx*8 - 0x7cbe608c] ; ret 0x4802
0x0000000000048f1a : push rax ; add ecx, dword ptr [rax - 0x75] ; and byte ptr [r14 - 0x3f], r12b ; ret 0xf08
0x0000000000049e68 : push rax ; and al, byte ptr [rax] ; mov edi, 0x1000 ; call qword ptr [rax]
0x0000000000008d07 : push rax ; call qword ptr [rax]
0x000000000004d4f5 : push rax ; call rax
0x00000000000017eb : push rax ; fsub dword ptr [rsi] ; add byte ptr [rcx], al ; ret
0x000000000000c470 : push rax ; jbe 0xc3fa ; cli ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc083
0x0000000000049a6b : push rax ; mov rax, qword ptr [rip + 0x2254c5] ; call qword ptr [rax]
0x0000000000017aee : push rax ; mov rdx, qword ptr [rsp + 0x30] ; call 0x13dd8
0x000000000003e71f : push rax ; or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x45 ; retf 0x8d49
0x000000000004d939 : push rax ; push rax ; ret
0x000000000000a1d2 : push rax ; ret
0x0000000000031616 : push rbp ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003c093 : push rbp ; adc cl, ch ; shr ebx, -1 ; inc dword ptr [rcx - 0xa] ; ret 0xf10
0x0000000000010895 : push rbp ; add byte ptr [rcx - 0x77], al ; ret
0x000000000003ee65 : push rbp ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000002c127 : push rbp ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000001824 : push rbp ; mov rbp, rsp ; call rax
0x000000000000ed59 : push rbp ; or byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000000000106cf : push rbp ; or byte ptr [rcx - 0x77], al ; retf
0x000000000004d9df : push rbp ; push r12 ; push rbp ; push rbx ; call qword ptr [rax]
0x000000000004d9e2 : push rbp ; push rbx ; call qword ptr [rax]
0x000000000003f747 : push rbp ; retf
0x0000000000053eff : push rbp ; retf 0xfffc
0x0000000000001c22 : push rbx ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000001969f : push rbx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000009e56 : push rbx ; add dword ptr [rcx], ebp ; ret 0xd089
0x0000000000001a54 : push rbx ; add eax, 0x4b60f00 ; adc byte ptr [rax + 1], cl ; ret
0x0000000000001995 : push rbx ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000004d9e3 : push rbx ; call qword ptr [rax]
0x000000000001c8b2 : push rbx ; dec byte ptr [rax + 0xf] ; ret 0x96eb
0x0000000000018dbc : push rbx ; dec dword ptr [rax - 0x73] ; dec dword ptr [r8 - 0x77] ; ret
0x0000000000027fe2 : push rbx ; mov rbp, rdx ; mov rbx, rsi ; call qword ptr [rax]
0x0000000000026d0c : push rbx ; ret
0x0000000000027884 : push rcx ; adc bl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, eax ; ret
0x00000000000304ec : push rcx ; add dword ptr [rbx - 0x1d3ec01e], eax ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x000000000004e502 : push rcx ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x0000000000049e06 : push rcx ; and al, byte ptr [rax] ; mov edi, 0x80 ; call qword ptr [rax]
0x0000000000053fd7 : push rcx ; or ch, bh ; jmp rsi
0x000000000006938d : push rcx ; std ; jmp qword ptr [rax]
0x000000000003ffdb : push rdi ; add al, byte ptr [rbx - 0x1d3ec01e] ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x0000000000010cb5 : push rdi ; add dword ptr [rbx - 0x1d3ec01e], eax ; sbb byte ptr [rcx], cl ; ret 0xb60f
0x0000000000003e9a : push rdi ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000003fc50 : push rdi ; add eax, 0x93fe283 ; ret 0xb60f
0x0000000000013035 : push rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004e7e5 : push rdi ; ret 0x8c0
0x000000000004e216 : push rdi ; sub bl, al ; mov eax, 0xfffffffe ; ret
0x000000000002ad0b : push rdx ; add al, 0 ; add byte ptr [rbx - 0x76b3fe20], al ; retf
0x0000000000004aec : push rsi ; add bh, byte ptr [rcx] ; retf 0x3fe9
0x0000000000043eb3 : push rsi ; add dword ptr [rsi - 0x3f], esp ; ret 0xf08
0x000000000000e703 : push rsi ; add esp, dword ptr [rsi - 0x3f] ; ret 0x4808
0x00000000000498cb : push rsi ; and al, byte ptr [rax] ; call qword ptr [rax]
0x0000000000053157 : push rsi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; push qword ptr [rsi - 0x59] ; sti ; jmp rcx
0x00000000000501b6 : push rsi ; inc dword ptr [rbx + 0x9443fe2] ; ret 0xf44
0x00000000000095d7 : push rsi ; or byte ptr [rcx], bh ; retf 0x8948
0x000000000002c42f : push rsi ; ret
0x0000000000010dd9 : push rsi ; ret 0x7504
0x000000000001f261 : push rsi ; ret 0x8908
0x00000000000066a8 : push rsi ; ret 0xf08
0x0000000000006329 : push rsi ; ret 0xf10
0x0000000000011ac1 : push rsp ; and al, 0x10 ; mov r14, rax ; call 0x4dd08
0x000000000002dffb : push rsp ; and al, 0x24 ; call 0x2a255
0x0000000000017af1 : push rsp ; and al, 0x30 ; call 0x13dd5
0x0000000000025a7c : push rsp ; and al, 8 ; call qword ptr [rax]
0x0000000000049a70 : push rsp ; and al, byte ptr [rax] ; call qword ptr [rax]
0x0000000000053e45 : push rsp ; cld ; inc dword ptr [rdi + 0x54] ; cld ; jmp qword ptr [rbx]
0x0000000000053e49 : push rsp ; cld ; jmp qword ptr [rbx]
0x00000000000556b3 : push rsp ; cmp edi, edi ; jmp rsp
0x000000000004d9e1 : push rsp ; push rbp ; push rbx ; call qword ptr [rax]
0x00000000000303a5 : push rsp ; retf 0x4104
0x00000000000053d9 : push rsp ; retf 0x8403
0x0000000000051a28 : pushfq ; jp 0x51a29 ; jmp qword ptr [rcx]
0x00000000000537d5 : pushfq ; sti ; call rax
0x00000000000537d1 : pushfq ; sti ; dec dword ptr [rcx - 0x64] ; sti ; call rax
0x000000000002bd81 : rcl byte ptr [rax], 0xeb ; or dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000050698 : rcl byte ptr [rbx], 1 ; sti ; call qword ptr [rax]
0x00000000000506c4 : rcl byte ptr [rbx], 1 ; sti ; call rax
0x000000000002efd2 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000028f9c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000002807d : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002a9ba : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; xor eax, eax ; ret
0x00000000000537f4 : rcr byte ptr [rbx - 0x64930005], 1 ; sti ; jmp qword ptr [rdi]
0x000000000006911c : rcr ch, 0xfb ; jmp rax
0x0000000000026a93 : rcr dword ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000000470 : ret
0x0000000000000851 : ret 0
0x0000000000025605 : ret 0x1074
0x000000000000dfef : ret 0x11
0x000000000004bcbe : ret 0x12
0x000000000002bba5 : ret 0x1389
0x0000000000049dcd : ret 0x148
0x0000000000003ee4 : ret 0x14c
0x000000000002258a : ret 0x14e9
0x0000000000013b26 : ret 0x1774
0x000000000003034c : ret 0x1776
0x000000000004a653 : ret 0x17e8
0x0000000000009fd4 : ret 0x189
0x00000000000234a0 : ret 0x18e9
0x000000000001f41b : ret 0x1ae9
0x00000000000397c6 : ret 0x1b2
0x000000000003ff22 : ret 0x1ba
0x000000000000260f : ret 0x1bf
0x000000000004e1e1 : ret 0x1c7e
0x00000000000233a4 : ret 0x1ce9
0x000000000001cf2c : ret 0x1d
0x00000000000074ea : ret 0x1d73
0x00000000000024ca : ret 0x1e74
0x0000000000020223 : ret 0x1e9
0x000000000000eb10 : ret 0x20
0x000000000004e717 : ret 0x20c
0x0000000000023cbe : ret 0x20e9
0x000000000002221b : ret 0x22e9
0x000000000001f31a : ret 0x23e9
0x0000000000025e45 : ret 0x2673
0x000000000001f6de : ret 0x26e9
0x0000000000020e25 : ret 0x27e9
0x000000000002ee9a : ret 0x27f
0x000000000001350b : ret 0x2873
0x00000000000232b6 : ret 0x28e9
0x0000000000003568 : ret 0x294c
0x000000000002bac6 : ret 0x2b44
0x00000000000052c2 : ret 0x2b49
0x00000000000201c5 : ret 0x2be9
0x0000000000018662 : ret 0x2ce9
0x0000000000023b1f : ret 0x2de9
0x0000000000019d8c : ret 0x2e9
0x000000000000c5cd : ret 0x2f7c
0x00000000000221c7 : ret 0x30e9
0x0000000000005b37 : ret 0x3145
0x0000000000020f56 : ret 0x32e9
0x00000000000251c4 : ret 0x340
0x0000000000025353 : ret 0x348d
0x0000000000050299 : ret 0x34e9
0x000000000003a5d5 : ret 0x35e8
0x0000000000019d38 : ret 0x36e9
0x000000000002317a : ret 0x37e9
0x0000000000013496 : ret 0x3840
0x0000000000005e3a : ret 0x3901
0x0000000000016d9a : ret 0x3904
0x000000000001b87d : ret 0x3941
0x00000000000333f8 : ret 0x3944
0x00000000000054c2 : ret 0x3948
0x00000000000133cc : ret 0x3949
0x0000000000002d41 : ret 0x394d
0x00000000000019f5 : ret 0x3a80
0x0000000000020684 : ret 0x3b01
0x0000000000020fe5 : ret 0x3be9
0x000000000000d5e9 : ret 0x3c
0x0000000000012e58 : ret 0x3d
0x000000000000dd8b : ret 0x3d08
0x0000000000007008 : ret 0x3d48
0x0000000000020f1b : ret 0x3de9
0x000000000004d518 : ret 0x3f6
0x0000000000021c9f : ret 0x3fe9
0x00000000000562fc : ret 0x400
0x000000000002e147 : ret 0x4000
0x0000000000028a70 : ret 0x4007
0x0000000000033e90 : ret 0x40c6
0x0000000000002629 : ret 0x4101
0x000000000002d799 : ret 0x4102
0x000000000004a8d5 : ret 0x4103
0x0000000000004952 : ret 0x4104
0x0000000000011222 : ret 0x4105
0x000000000000c974 : ret 0x410c
0x00000000000271b8 : ret 0x4110
0x000000000000e6c3 : ret 0x4118
0x000000000002ef39 : ret 0x4140
0x000000000003ea83 : ret 0x415f
0x0000000000008647 : ret 0x4172
0x0000000000020bd7 : ret 0x41e9
0x0000000000027e89 : ret 0x423f
0x00000000000192cf : ret 0x4374
0x0000000000006313 : ret 0x4388
0x000000000000271f : ret 0x4401
0x000000000002d94e : ret 0x4403
0x000000000002d9ee : ret 0x4405
0x000000000002d79d : ret 0x4408
0x0000000000006a20 : ret 0x440c
0x00000000000205a3 : ret 0x443b
0x000000000002611e : ret 0x4488
0x0000000000018a2a : ret 0x44e9
0x00000000000281e1 : ret 0x4501
0x000000000002d7fb : ret 0x4502
0x0000000000003c20 : ret 0x4508
0x000000000000bd09 : ret 0x4588
0x000000000004d6d5 : ret 0x45f6
0x0000000000009f8e : ret 0x4688
0x00000000000178a4 : ret 0x46e8
0x0000000000018c28 : ret 0x46e9
0x0000000000028ef4 : ret 0x47c7
0x0000000000005343 : ret 0x4801
0x000000000000253b : ret 0x4802
0x000000000004615e : ret 0x4803
0x0000000000003644 : ret 0x4804
0x0000000000003d42 : ret 0x4808
0x0000000000011810 : ret 0x480c
0x00000000000271e4 : ret 0x4810
0x0000000000047377 : ret 0x4818
0x0000000000006089 : ret 0x4821
0x0000000000009525 : ret 0x4901
0x0000000000001eb2 : ret 0x4902
0x000000000003a8c3 : ret 0x4920
0x000000000000e29c : ret 0x4c01
0x000000000000c554 : ret 0x4c0f
0x000000000003d50c : ret 0x4c5e
0x0000000000020e65 : ret 0x4ce9
0x000000000002d001 : ret 0x4d01
0x0000000000002f8e : ret 0x4f6
0x0000000000010d0e : ret 0x4f7c
0x000000000001f839 : ret 0x4fe9
0x0000000000027815 : ret 0x5073
0x000000000002c570 : ret 0x5088
0x000000000004c7e5 : ret 0x508d
0x0000000000004e1c : ret 0x5174
0x0000000000021d66 : ret 0x52e9
0x0000000000003541 : ret 0x533
0x0000000000004980 : ret 0x53c
0x00000000000505a3 : ret 0x53e9
0x0000000000040fa3 : ret 0x540a
0x0000000000040222 : ret 0x5488
0x000000000000c742 : ret 0x5489
0x0000000000003807 : ret 0x548d
0x00000000000398b5 : ret 0x55e8
0x000000000003d789 : ret 0x5841
0x00000000000392b5 : ret 0x5a41
0x00000000000219e3 : ret 0x5ae9
0x000000000003d623 : ret 0x5b41
0x0000000000028cf0 : ret 0x5d5b
0x0000000000045642 : ret 0x5e59
0x000000000000fb55 : ret 0x5e9
0x0000000000038a38 : ret 0x5f5e
0x00000000000195fa : ret 0x61
0x000000000001b917 : ret 0x61e9
0x0000000000021995 : ret 0x62e9
0x0000000000001973 : ret 0x6348
0x0000000000028dd4 : ret 0x634d
0x0000000000045fc7 : ret 0x63e8
0x0000000000050193 : ret 0x63e9
0x0000000000020ea0 : ret 0x64e9
0x000000000000d96d : ret 0x6601
0x0000000000001b72 : ret 0x6608
0x000000000000f2b3 : ret 0x6857
0x00000000000236f0 : ret 0x68e9
0x0000000000018324 : ret 0x6ae9
0x0000000000050162 : ret 0x6be9
0x000000000001f544 : ret 0x6de9
0x000000000002211e : ret 0x6e9
0x0000000000021c6d : ret 0x71e9
0x000000000005bebc : ret 0x7201
0x000000000001f44d : ret 0x73e9
0x0000000000027d8b : ret 0x7405
0x0000000000013c71 : ret 0x7408
0x0000000000003671 : ret 0x7410
0x000000000000dfe6 : ret 0x7420
0x0000000000027e9f : ret 0x743f
0x0000000000022aa4 : ret 0x74e9
0x0000000000010ddb : ret 0x7504
0x0000000000050149 : ret 0x7520
0x0000000000012773 : ret 0x7c83
0x000000000001f9db : ret 0x7de9
0x000000000004fdb1 : ret 0x7e80
0x0000000000049fe2 : ret 0x8003
0x0000000000040284 : ret 0x8040
0x00000000000022c6 : ret 0x8041
0x000000000002b019 : ret 0x8066
0x0000000000021a31 : ret 0x80e9
0x0000000000045ed9 : ret 0x8102
0x0000000000045b3d : ret 0x8108
0x0000000000007f46 : ret 0x820f
0x000000000000c4b8 : ret 0x8301
0x000000000000cbca : ret 0x830c
0x0000000000007655 : ret 0x830f
0x0000000000047c8a : ret 0x8310
0x000000000000dd36 : ret 0x8318
0x0000000000006cb1 : ret 0x8341
0x00000000000037b1 : ret 0x8348
0x0000000000022c37 : ret 0x8372
0x0000000000021ab2 : ret 0x83e9
0x0000000000001d21 : ret 0x8401
0x0000000000005ba9 : ret 0x8403
0x00000000000389aa : ret 0x8408
0x000000000000b647 : ret 0x840f
0x0000000000005011 : ret 0x8489
0x000000000000b71c : ret 0x84c7
0x0000000000010074 : ret 0x8501
0x00000000000024e4 : ret 0x850f
0x0000000000005e18 : ret 0x851d
0x0000000000005ff8 : ret 0x8545
0x000000000000810e : ret 0x8548
0x0000000000012c0a : ret 0x854d
0x000000000000df32 : ret 0x860f
0x0000000000022387 : ret 0x8676
0x0000000000011094 : ret 0x870f
0x000000000000866a : ret 0x8802
0x00000000000068f0 : ret 0x8841
0x000000000004c7f4 : ret 0x8844
0x000000000002c55b : ret 0x884c
0x000000000002a59c : ret 0x8858
0x000000000002d918 : ret 0x8901
0x000000000002dab4 : ret 0x8903
0x000000000001f263 : ret 0x8908
0x000000000000356b : ret 0x8941
0x0000000000014b49 : ret 0x8944
0x00000000000029cd : ret 0x8945
0x0000000000002455 : ret 0x8948
0x000000000001fed7 : ret 0x8949
0x00000000000078a7 : ret 0x894c
0x00000000000189e8 : ret 0x89eb
0x000000000004021b : ret 0x8a3c
0x000000000004da06 : ret 0x8b01
0x0000000000004682 : ret 0x8b04
0x000000000000c1be : ret 0x8b41
0x000000000000a932 : ret 0x8b48
0x0000000000025236 : ret 0x8b4c
0x000000000000354d : ret 0x8c0
0x0000000000005c98 : ret 0x8c0f
0x000000000004ad71 : ret 0x8c89
0x00000000000180c3 : ret 0x8ceb
0x0000000000020766 : ret 0x8d01
0x000000000000f8ed : ret 0x8d0c
0x0000000000007f1c : ret 0x8d0f
0x000000000000d977 : ret 0x8d41
0x000000000000251a : ret 0x8d43
0x0000000000044312 : ret 0x8d44
0x0000000000006772 : ret 0x8d48
0x000000000000370c : ret 0x8d49
0x00000000000237fb : ret 0x8d4c
0x0000000000002ca6 : ret 0x8d4d
0x000000000003f99a : ret 0x8dba
0x000000000004aa8d : ret 0x8de9
0x000000000003390e : ret 0x8e0f
0x000000000004f93e : ret 0x8f0f
0x000000000001082e : ret 0x8fe9
0x0000000000018034 : ret 0x8feb
0x0000000000004233 : ret 0x950f
0x000000000001057e : ret 0x95e9
0x000000000002195a : ret 0x96e9
0x000000000001c8b7 : ret 0x96eb
0x0000000000009a0a : ret 0x974
0x000000000002178d : ret 0x97e9
0x000000000000c59a : ret 0x9848
0x000000000005035e : ret 0x98e9
0x0000000000050534 : ret 0x99e9
0x0000000000010976 : ret 0x9ae9
0x0000000000017c19 : ret 0x9beb
0x000000000001b8df : ret 0x9ceb
0x0000000000040605 : ret 0x9d3c
0x0000000000022987 : ret 0x9de9
0x0000000000017b99 : ret 0x9feb
0x0000000000035c3c : ret 0xa
0x00000000000181a0 : ret 0xa0eb
0x00000000000408a1 : ret 0xa44
0x0000000000021912 : ret 0xa6e9
0x0000000000004c39 : ret 0xa801
0x000000000001f4a4 : ret 0xa8e9
0x0000000000014be9 : ret 0xa8eb
0x00000000000201f4 : ret 0xaae9
0x0000000000018f27 : ret 0xabe8
0x000000000002527c : ret 0xabe9
0x0000000000022058 : ret 0xace9
0x0000000000007845 : ret 0xade8
0x0000000000020c06 : ret 0xb2e9
0x00000000000189bc : ret 0xb5eb
0x0000000000002b39 : ret 0xb60f
0x0000000000018bd8 : ret 0xb6e9
0x0000000000001b76 : ret 0xb70f
0x00000000000130e2 : ret 0xb74
0x00000000000225d1 : ret 0xb7e9
0x0000000000005321 : ret 0xb801
0x0000000000016c9a : ret 0xb808
0x0000000000016c90 : ret 0xb810
0x0000000000016c86 : ret 0xb820
0x0000000000027d99 : ret 0xb83a
0x000000000000ffa5 : ret 0xb8e9
0x000000000004fe34 : ret 0xb975
0x0000000000033bde : ret 0xbc80
0x0000000000005051 : ret 0xbc89
0x000000000003a54d : ret 0xbde8
0x000000000001e817 : ret 0xbe72
0x000000000000bfa1 : ret 0xc031
0x000000000001be03 : ret 0xc076
0x000000000000c477 : ret 0xc083
0x00000000000026dd : ret 0xc141
0x0000000000045523 : ret 0xc148
0x0000000000045291 : ret 0xc166
0x00000000000025a1 : ret 0xc189
0x000000000002265f : ret 0xc1e9
0x0000000000057a6c : ret 0xc200
0x000000000005be60 : ret 0xc201
0x0000000000062402 : ret 0xc202
0x0000000000024f03 : ret 0xc208
0x000000000003c512 : ret 0xc209
0x000000000004aabd : ret 0xc220
0x000000000000da51 : ret 0xc238
0x000000000001b76a : ret 0xc272
0x0000000000033e97 : ret 0xc283
0x000000000004e20e : ret 0xc289
0x0000000000057a70 : ret 0xc300
0x000000000001c5b5 : ret 0xc3e9
0x000000000006550b : ret 0xc4c3
0x0000000000025af2 : ret 0xc704
0x0000000000047386 : ret 0xc748
0x00000000000105cb : ret 0xc889
0x000000000001af8d : ret 0xc8e9
0x0000000000009cb0 : ret 0xc931
0x000000000003e1fa : ret 0xc985
0x000000000002b9e2 : ret 0xca01
0x00000000000208bf : ret 0xca08
0x000000000000423c : ret 0xca09
0x0000000000035668 : ret 0xca31
0x000000000002180c : ret 0xce9
0x0000000000003165 : ret 0xceb
0x00000000000503ff : ret 0xcee9
0x0000000000013f5a : ret 0xd029
0x000000000000d946 : ret 0xd038
0x000000000000cdd5 : ret 0xd039
0x0000000000009e59 : ret 0xd089
0x0000000000026385 : ret 0xd121
0x000000000000701d : ret 0xd139
0x0000000000009c7d : ret 0xd184
0x0000000000023126 : ret 0xd1e9
0x000000000002942e : ret 0xd389
0x0000000000021877 : ret 0xd5e9
0x00000000000217c8 : ret 0xd6e9
0x000000000002537e : ret 0xd739
0x000000000001fd20 : ret 0xd7e9
0x0000000000004c69 : ret 0xd7eb
0x000000000002227f : ret 0xd9e9
0x0000000000009a3a : ret 0xd9eb
0x0000000000020263 : ret 0xdae9
0x0000000000002fdf : ret 0xdb31
0x000000000004ec7f : ret 0xde73
0x0000000000023eea : ret 0xde9
0x00000000000134fa : ret 0xe083
0x0000000000069f51 : ret 0xe1a
0x0000000000020999 : ret 0xe1c1
0x000000000001e497 : ret 0xe1e9
0x0000000000005800 : ret 0xe283
0x000000000000c905 : ret 0xe2ff
0x00000000000236a5 : ret 0xe3e9
0x00000000000270f7 : ret 0xe683
0x000000000003b687 : ret 0xe6c1
0x000000000002c354 : ret 0xe75
0x0000000000033516 : ret 0xe775
0x00000000000498f4 : ret 0xe801
0x000000000004cfe9 : ret 0xe808
0x0000000000006e9e : ret 0xe889
0x000000000000de5e : ret 0xe8c1
0x00000000000501cd : ret 0xe9
0x00000000000027da : ret 0xe901
0x00000000000495a0 : ret 0xe908
0x000000000000d54f : ret 0xe90c
0x0000000000003774 : ret 0xe92e
0x0000000000003257 : ret 0xe937
0x00000000000145c1 : ret 0xea29
0x000000000000a087 : ret 0xea83
0x0000000000001d52 : ret 0xeb01
0x0000000000005230 : ret 0xebb8
0x00000000000233f2 : ret 0xece9
0x00000000000398a0 : ret 0xed77
0x000000000004a247 : ret 0xeec1
0x0000000000013b2e : ret 0xef73
0x0000000000023446 : ret 0xefe9
0x000000000004d8b2 : ret 0xf000
0x0000000000002902 : ret 0xf01
0x000000000004d44d : ret 0xf02
0x0000000000003811 : ret 0xf04
0x000000000001e02d : ret 0xf077
0x0000000000003676 : ret 0xf08
0x0000000000009a13 : ret 0xf089
0x000000000000632b : ret 0xf10
0x000000000000348b : ret 0xf20
0x0000000000002319 : ret 0xf41
0x0000000000002ad6 : ret 0xf44
0x000000000004efc9 : ret 0xf475
0x0000000000018fde : ret 0xf4e8
0x0000000000010600 : ret 0xf4e9
0x0000000000007866 : ret 0xf575
0x000000000003e2be : ret 0xf685
0x000000000000318d : ret 0xf883
0x00000000000454ff : ret 0xf889
0x00000000000142f5 : ret 0xf980
0x0000000000017656 : ret 0xf981
0x0000000000016f34 : ret 0xf983
0x00000000000192a3 : ret 0xfa81
0x0000000000004a15 : ret 0xfa83
0x0000000000002484 : ret 0xfac1
0x0000000000028c43 : ret 0xfbe
0x00000000000218c5 : ret 0xfbe9
0x00000000000263d9 : ret 0xfc3
0x000000000004c96a : ret 0xfe25
0x0000000000047eea : ret 0xfe29
0x000000000004867a : ret 0xfe2b
0x000000000004432a : ret 0xfe37
0x000000000004a1da : ret 0xfe3a
0x0000000000046cda : ret 0xfe6f
0x0000000000011f66 : ret 0xfe81
0x00000000000416da : ret 0xfeab
0x0000000000040eda : ret 0xfeb3
0x000000000002400a : ret 0xfefd
0x0000000000024aca : ret 0xff09
0x000000000003d76a : ret 0xff17
0x0000000000039fda : ret 0xff22
0x000000000002050a : ret 0xff38
0x00000000000208d2 : ret 0xff3d
0x00000000000351ea : ret 0xff56
0x0000000000024839 : ret 0xff78
0x000000000000489f : ret 0xff83
0x0000000000041287 : ret 0xff85
0x00000000000338da : ret 0xff89
0x000000000002eaea : ret 0xff95
0x00000000000329da : ret 0xff98
0x000000000002e6ea : ret 0xff99
0x000000000001a0b1 : ret 0xffa6
0x000000000002e0ba : ret 0xffbb
0x0000000000010053 : ret 0xffc7
0x0000000000016a1a : ret 0xffd7
0x0000000000029eea : ret 0xffe1
0x0000000000015cf2 : ret 0xffe4
0x00000000000260f9 : ret 0xfff2
0x000000000002913a : ret 0xfff9
0x0000000000045bbc : ret 0xfffa
0x0000000000004cef : ret 0xfffb
0x000000000001355a : ret 0xfffd
0x000000000003e1f3 : ret 0xfffe
0x0000000000009119 : ret 0xffff
0x0000000000001f82 : ret 1
0x0000000000000860 : ret 3
0x000000000000aa49 : ret 4
0x0000000000035d2c : ret 5
0x000000000000033c : retf
0x0000000000000758 : retf 0
0x000000000003c5d1 : retf 0x104
0x0000000000006479 : retf 0x1089
0x00000000000284b5 : retf 0x10be
0x000000000001012e : retf 0x12
0x00000000000195e8 : retf 0x13eb
0x0000000000025ae5 : retf 0x1873
0x00000000000208c1 : retf 0x1975
0x000000000000c8bb : retf 0x1b9
0x0000000000005be3 : retf 0x1e
0x000000000000f3f5 : retf 0x1ee9
0x0000000000026ba1 : retf 0x1f0f
0x000000000003a8e6 : retf 0x20
0x000000000004db15 : retf 0x2005
0x000000000001b403 : retf 0x21
0x000000000000150a : retf 0x26da
0x000000000002ccea : retf 0x27a
0x0000000000000345 : retf 0x28ee
0x0000000000046162 : retf 0x2948
0x000000000004aa42 : retf 0x2c89
0x0000000000007b50 : retf 0x2d
0x000000000000d57d : retf 0x2f
0x0000000000062be8 : retf 0x2f02
0x000000000002a2e4 : retf 0x3145
0x00000000000104e1 : retf 0x32e9
0x0000000000006fe1 : retf 0x34
0x00000000000103a5 : retf 0x34e9
0x0000000000013b08 : retf 0x3574
0x00000000000103dd : retf 0x36e9
0x0000000000013d69 : retf 0x39e9
0x0000000000003d5c : retf 0x3c73
0x000000000000ed92 : retf 0x3de9
0x00000000000181f5 : retf 0x3e9
0x0000000000010418 : retf 0x3ee9
0x0000000000004aef : retf 0x3fe9
0x0000000000056536 : retf 0x403
0x0000000000033df2 : retf 0x40c6
0x00000000000303a6 : retf 0x4104
0x0000000000014762 : retf 0x44
0x00000000000103cf : retf 0x44e9
0x0000000000030885 : retf 0x4501
0x000000000003c47a : retf 0x4520
0x00000000000282d3 : retf 0x4541
0x000000000000f7ce : retf 0x45e9
0x000000000002b503 : retf 0x4801
0x000000000004d78e : retf 0x485b
0x000000000002f186 : retf 0x4901
0x0000000000027e75 : retf 0x4a8d
0x0000000000006b9d : retf 0x4ae9
0x0000000000006355 : retf 0x4ce9
0x00000000000103c1 : retf 0x52e9
0x00000000000102c0 : retf 0x53e9
0x0000000000045bf3 : retf 0x5401
0x000000000000e302 : retf 0x54e9
0x0000000000015a42 : retf 0x57
0x0000000000028f2d : retf 0x5d5b
0x0000000000006d9c : retf 0x5e9
0x00000000000103b3 : retf 0x60e9
0x00000000000026a6 : retf 0x6348
0x000000000001166a : retf 0x65e9
0x000000000000e013 : retf 0x69e9
0x000000000000e16c : retf 0x6de9
0x000000000001070d : retf 0x6e9
0x000000000003566a : retf 0x728d
0x000000000000f1ff : retf 0x7de9
0x0000000000013abf : retf 0x7e74
0x0000000000028b10 : retf 0x8348
0x0000000000010290 : retf 0x83e9
0x00000000000053da : retf 0x8403
0x0000000000003bf1 : retf 0x840f
0x0000000000005248 : retf 0x8548
0x000000000002c56f : retf 0x88c2
0x0000000000033eaa : retf 0x88d0
0x00000000000034a6 : retf 0x8941
0x0000000000001c7d : retf 0x8944
0x00000000000095da : retf 0x8948
0x000000000000287c : retf 0x8949
0x000000000000193d : retf 0x894d
0x0000000000006303 : retf 0x8966
0x000000000000e0fa : retf 0x8b48
0x000000000006553d : retf 0x8b8b
0x0000000000001ad0 : retf 0x8d48
0x000000000000420d : retf 0x8d49
0x0000000000008635 : retf 0x8d4a
0x000000000003b105 : retf 0x8d4c
0x0000000000006617 : retf 0x8f0f
0x000000000002795d : retf 0x9066
0x0000000000050507 : retf 0x944
0x00000000000260f0 : retf 0x9489
0x000000000002ce85 : retf 0x973c
0x0000000000010dd4 : retf 0xa8e9
0x000000000001036a : retf 0xa9e9
0x000000000003c47f : retf 0xabe8
0x0000000000011321 : retf 0xaee9
0x000000000000f973 : retf 0xb3c
0x000000000000423e : retf 0xb60f
0x0000000000007b88 : retf 0xb70f
0x000000000001035c : retf 0xb7e9
0x000000000002d464 : retf 0xb841
0x0000000000011021 : retf 0xb8e9
0x00000000000002ea : retf 0xba85
0x0000000000022908 : retf 0xbae9
0x00000000000066e4 : retf 0xbde9
0x0000000000013ce4 : retf 0xbee9
0x000000000000f415 : retf 0xc141
0x0000000000004206 : retf 0xc148
0x0000000000010e95 : retf 0xc1e9
0x00000000000038c5 : retf 0xc209
0x0000000000005c96 : retf 0xc239
0x000000000001034e : retf 0xc5e9
0x000000000002c53c : retf 0xc6
0x0000000000057c60 : retf 0xca00
0x0000000000062be4 : retf 0xca02
0x000000000000a423 : retf 0xca77
0x0000000000033ddf : retf 0xca83
0x000000000005bf3c : retf 0xcb01
0x0000000000068c4a : retf 0xcccb
0x0000000000010c07 : retf 0xce9
0x0000000000006fd2 : retf 0xcfe9
0x0000000000002718 : retf 0xd089
0x00000000000053a6 : retf 0xd189
0x000000000004fda8 : retf 0xd231
0x000000000002b9e4 : retf 0xd285
0x0000000000013bcc : retf 0xd6e9
0x000000000000f935 : retf 0xdee9
0x000000000002bfa9 : retf 0xe083
0x000000000000e43d : retf 0xe2ff
0x0000000000003d98 : retf 0xe572
0x00000000000069b8 : retf 0xe575
0x000000000000243e : retf 0xe681
0x0000000000003736 : retf 0xe6c1
0x00000000000095a9 : retf 0xe7d3
0x000000000004d65a : retf 0xeac1
0x00000000000102ef : retf 0xeae9
0x0000000000013cb4 : retf 0xeee9
0x000000000002bb8c : retf 0xf209
0x00000000000283d8 : retf 0xf40
0x000000000000d03c : retf 0xf41
0x0000000000008377 : retf 0xf44
0x000000000000ca1c : retf 0xf45
0x00000000000036ab : retf 0xf6e9
0x000000000001db14 : retf 0xf981
0x0000000000027e18 : retf 0xf983
0x0000000000003728 : retf 0xfac1
0x0000000000053688 : retf 0xfbab
0x0000000000026a0a : retf 0xfdaa
0x000000000000f5d2 : retf 0xfde9
0x0000000000046ad2 : retf 0xfe71
0x00000000000466d2 : retf 0xfe75
0x000000000003ebd2 : retf 0xfed6
0x0000000000043642 : retf 0xfed9
0x000000000003d9d2 : retf 0xfee8
0x000000000003f862 : retf 0xfef6
0x0000000000043fc2 : retf 0xff57
0x000000000002292a : retf 0xff69
0x000000000001ea92 : retf 0xff6c
0x000000000002c842 : retf 0xffc0
0x0000000000007c61 : retf 0xffe0
0x000000000004b5e9 : retf 0xffea
0x000000000004421a : retf 0xffeb
0x000000000004e802 : retf 0xfffa
0x000000000002c782 : retf 0xfffc
0x0000000000027f32 : retf 0xfffe
0x000000000000a030 : retf 0xffff
0x000000000000c09c : retf 1
0x000000000002c312 : retf 2
0x000000000001a1bb : retf 3
0x0000000000002c80 : retf 5
0x000000000003cd52 : retf 6
0x00000000000223c0 : retf 8
0x0000000000018684 : retf 9
0x000000000000295e : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000000a636 : rol byte ptr [rax + 0x23124a4], cl ; add byte ptr [rax], al ; ret
0x0000000000002914 : rol byte ptr [rax + 0x6742cf9], 0xf3 ; ret
0x000000000000fb4e : rol byte ptr [rax + 0xf0a017e], cl ; xchg eax, esp ; ret 0x5e9
0x000000000000ff9e : rol byte ptr [rax + 0xf0a017e], cl ; xchg eax, esp ; ret 0xb8e9
0x0000000000003801 : rol byte ptr [rax - 0x6af0ef07], cl ; ret 0x548d
0x0000000000002958 : rol byte ptr [rax - 0x6bf08206], 0xc0 ; ret
0x0000000000012df7 : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x00000000000024c7 : rol byte ptr [rbp + 0x39], 1 ; ret 0x1e74
0x00000000000026d6 : rol byte ptr [rbp - 0x77], cl ; rol dword ptr [rcx + 0xf], cl ; ret 0xc141
0x000000000002b6d5 : rol byte ptr [rbx - 0x62f0e403], cl ; ret 0x8d48
0x00000000000105f7 : rol byte ptr [rbx - 0x77c0220], cl ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf4e9
0x000000000003bbce : rol byte ptr [rbx - 0x78f08008], 1 ; ret
0x0000000000028609 : rol byte ptr [rcx + rcx*4 - 0xa], 0x83 ; ret
0x000000000000dfb6 : rol byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000026430 : rol byte ptr [rcx - 0x7d], 0xe1 ; add dword ptr [rcx + rcx*4 + 9], eax ; ret
0x00000000000100ed : rol byte ptr [rcx - 0x7d], cl ; stc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd039
0x000000000000cdce : rol byte ptr [rcx - 0x7d], cl ; stc ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd039
0x000000000002b32d : rol byte ptr [rcx - 0x7d], cl ; std ; sbb cl, byte ptr [rdi] ; lahf ; ret 0x8d4c
0x000000000004fdaa : rol byte ptr [rcx - 0x80], cl ; clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x7e80
0x0000000000010826 : rol byte ptr [rcx - 0x80], cl ; jns 0x10834 ; or cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8fe9
0x0000000000007dd1 : rol byte ptr [rcx], 0x81 ; std ; retf
0x000000000004ddc0 : rol byte ptr [rcx], 0x89 ; add dword ptr [rax + 1], edi ; ret
0x0000000000027db9 : rol byte ptr [rcx], 0xc0 ; ret
0x0000000000053cac : rol byte ptr [rip + 0x1250fffc], 1 ; cld ; call rax
0x0000000000065509 : rol cl, 0xc2 ; ret
0x0000000000004a0e : rol dword ptr [rbx + 0xf4110f8], -0x6c ; ret 0xfa83
0x000000000000533d : rol dword ptr [rbx - 0x7cb7fe40], 1 ; ret 0x4801
0x0000000000056530 : rol dword ptr [rbx], 4 ; add byte ptr [rax], al ; retf 0x403
0x00000000000026c2 : rol dword ptr [rcx + 0x39], cl ; ret
0x00000000000026d9 : rol dword ptr [rcx + 0xf], cl ; ret 0xc141
0x00000000000192d4 : rol dword ptr [rcx - 0x7d], -0x3a ; add dword ptr [rax + 1], ecx ; ret
0x00000000000027d7 : rol dword ptr [rcx - 0x7d], 1 ; ret 0xe901
0x0000000000017dbf : rol dword ptr [rcx], 0x44 ; cmp ecx, esi ; jle 0x17d5c ; jmp 0x1481c
0x0000000000013b22 : rol dword ptr [rsp + rax*2], 0x39 ; ret 0x1774
0x0000000000027acd : rol eax, 8 ; movzx eax, ax ; add rax, rsi ; ret
0x000000000003e181 : ror byte ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000002640c : ror byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000003a3e : ror byte ptr [rax + 0x63], cl ; adc al, 0x93 ; add rdx, rbx ; jmp rdx
0x0000000000003e6d : ror byte ptr [rax + 0x63], cl ; adc al, 0x96 ; add rdx, rsi ; jmp rdx
0x000000000003e723 : ror byte ptr [rax + 0xf], 0x45 ; retf 0x8d49
0x0000000000027ad2 : ror byte ptr [rax + 1], 0xf0 ; ret
0x000000000004d600 : ror byte ptr [rax + 1], 1 ; retf 0x8b48
0x0000000000004f44 : ror byte ptr [rax - 0x75], 0x1a ; je 0x4f5a ; call rax
0x00000000000264c7 : ror byte ptr [rax - 0x77], 0x39 ; ret
0x0000000000028a6d : ror byte ptr [rax - 0x7d], cl ; ret 0x4007
0x000000000004a8d2 : ror byte ptr [rax - 0x7d], cl ; ret 0x4103
0x0000000000049fdf : ror byte ptr [rax - 0x7d], cl ; ret 0x8003
0x0000000000026491 : ror byte ptr [rax], 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000027ace : ror byte ptr [rax], 0xf ; mov bh, 0xc0 ; add rax, rsi ; ret
0x000000000004244a : ror byte ptr [rcx + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000004e2d6 : ror byte ptr [rcx + 0x63], 1 ; adc al, 0x96 ; add rdx, r14 ; jmp rdx
0x0000000000048ac1 : ror byte ptr [rcx + 0x63], cl ; adc al, 0x97 ; add rdx, r15 ; jmp rdx
0x00000000000042c0 : ror byte ptr [rcx + 1], cl ; fimul dword ptr [rax + 1] ; ret
0x000000000002fc38 : ror byte ptr [rcx], 1 ; ret 0x3941
0x0000000000001db5 : ror byte ptr [rdi + 0x63], cl ; adc al, 0x93 ; add r10, r11 ; jmp r10
0x000000000001534b : ror byte ptr [rdi], 0x44 ; ret 0x8489
0x00000000000407b6 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000011902 : ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000016a17 : ror byte ptr [rdi], 0x84 ; ret 0xffd7
0x0000000000013557 : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x0000000000010ad9 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000002e877 : ror byte ptr [rdi], 0x84 ; ret 4
0x0000000000025b81 : ror byte ptr [rdi], 0x84 ; retf
0x0000000000022dc6 : ror byte ptr [rdi], 0x85 ; ret
0x000000000004bcbb : ror byte ptr [rdi], 0x85 ; ret 0x12
0x00000000000259e7 : ror byte ptr [rdi], 0x85 ; ret 0xfffb
0x00000000000280d7 : ror byte ptr [rdi], 0x85 ; ret 1
0x0000000000045058 : ror byte ptr [rdi], 0x85 ; retf
0x00000000000181c6 : ror byte ptr [rdi], 0x88 ; ret
0x0000000000007b4d : ror byte ptr [rdi], 0x88 ; retf 0x2d
0x00000000000142f2 : ror byte ptr [rdi], 0x94 ; ret 0xf980
0x000000000000966e : ror byte ptr [rdi], 0x95 ; ret
0x00000000000345fa : ror byte ptr [rdi], 0x95 ; ret 0x3d48
0x0000000000026382 : ror byte ptr [rdi], 0x95 ; ret 0xd121
0x000000000004aa8a : ror byte ptr [rdi], 0x9f ; ret 0x8de9
0x000000000004aa71 : ror byte ptr [rdi], 0x9f ; ret 0xa6e9
0x0000000000027db6 : ror byte ptr [rdi], 0xb6 ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000001c50a : ror byte ptr [rdi], cl ; ret 0x8489
0x0000000000007001 : ror byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; enter 0xf48, -0x51 ; ret 0x3d48
0x0000000000069440 : ror byte ptr [rdx], 0 ; add byte ptr [rdx - 2], bl ; call qword ptr [rax]
0x000000000004f96f : ror byte ptr [rsi + 0x63], 4 ; or dword ptr [rcx + 1], 0xffffffd8 ; jmp r8
0x0000000000004c66 : ror dword ptr [rax + 0x29], cl ; ret 0xd7eb
0x00000000000178a1 : ror dword ptr [rax - 0x77], 1 ; ret 0x46e8
0x0000000000012c04 : ror dword ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x854d
0x000000000004ef9f : ror dword ptr [rax], 1 ; or cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x000000000002efea : ror dword ptr [rcx + 0x44eb09d0], -0x77 ; ret 0x8941
0x0000000000009714 : ror dword ptr [rcx - 0x7d], cl ; ret
0x0000000000001d4b : ror dword ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb01
0x0000000000054054 : sahf ; and eax, 0x25c0fffd ; std ; call rcx
0x000000000000d945 : sahf ; ret 0xd038
0x000000000000033b : sahf ; retf
0x0000000000027ee5 : sal bl, 1 ; ret
0x0000000000028098 : sal byte ptr [rbp - 0x4b], 0x8b ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000001821 : sal byte ptr [rcx + rbp*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x000000000004aa3a : sal byte ptr [rdx + rdx + 0x48], 0x89 ; fimul dword ptr [rax + 0x29] ; retf 0x2c89
0x000000000002d5df : sal byte ptr [rsi + rbp*2 + 0x4d], 0x63 ; retf 0xb841
0x000000000002aa4f : sal byte ptr [rsi + rbx + 0x48], 0x89 ; ret
0x0000000000027636 : sal byte ptr [rsi + rsi + 0x48], 0x8b ; push rax ; adc dh, dh ; ret 0x7504
0x000000000001870b : sal dword ptr [rsi + 0x5b41ffff], -0x77 ; ret
0x0000000000054600 : sal dword ptr [rsi - 3], 1 ; call rcx
0x0000000000033306 : salc ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003f686 : salc ; jl 0x3f692 ; add byte ptr [rbx + rcx*4 + 0x54], al ; retf 0x4104
0x0000000000013a28 : salc ; jne 0x13a04 ; ret
0x000000000004b9f9 : salc ; mov rdi, qword ptr [rsp + 0x28] ; call 0x37d08
0x000000000002b90e : salc ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000067814 : sar bh, 0xff ; call qword ptr [rbx]
0x0000000000010566 : sar bh, 1 ; inc dword ptr [rbx - 0x5716fe3b] ; ret 0xffff
0x000000000005382d : sar bl, 0xff ; retf
0x000000000004e376 : sar byte ptr [rax - 0x64], 1 ; ret
0x00000000000542d4 : sar byte ptr [rcx], 0xfd ; call rax
0x0000000000054084 : sar byte ptr [rcx], 1 ; std ; call rax
0x000000000005423c : sar byte ptr [rcx], 1 ; std ; dec dword ptr [rax + 0x3a] ; std ; call rax
0x00000000000542d0 : sar byte ptr [rcx], 1 ; std ; inc eax ; cmp ebp, edi ; call rax
0x00000000000540b4 : sar byte ptr [rcx], 1 ; std ; jmp rax
0x0000000000009c78 : sar dword ptr [rdi], 0xf ; xchg eax, ebp ; ret 0xd184
0x000000000006781c : sar edi, -1 ; call qword ptr [rbx]
0x0000000000010dd7 : sar edi, 1 ; push rsi ; ret 0x7504
0x00000000000552e1 : sar esi, 1 ; jmp rsp
0x0000000000022903 : sbb al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xbae9
0x000000000000538a : sbb al, 0xf6 ; ret 0xf20
0x00000000000691c9 : sbb al, byte ptr [rax] ; add al, ah ; add ah, bh ; jmp rax
0x0000000000022b2e : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000020508 : sbb al, ch ; ret 0xff38
0x0000000000038ecf : sbb al, ch ; retf
0x000000000004b463 : sbb byte ptr [r8 - 0x77], r9b ; retf 0x8948
0x0000000000004c20 : sbb byte ptr [rax + 0xf], cl ; ret
0x000000000004b464 : sbb byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000036f25 : sbb byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000028ab7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004d87f : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004ea3a : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000050269 : sbb byte ptr [rbx + 0x9443fe2], al ; ret 0xf44
0x000000000000435e : sbb byte ptr [rbx + 0xf4c007d], cl ; ret
0x0000000000002b9a : sbb byte ptr [rcx + 9], al ; ret 0xb60f
0x000000000001f36e : sbb byte ptr [rcx], cl ; ret 0x8b48
0x0000000000010cbc : sbb byte ptr [rcx], cl ; ret 0xb60f
0x0000000000019d0c : sbb byte ptr [rcx], cl ; ret 0xf41
0x0000000000010e6f : sbb byte ptr [rcx], cl ; retf 0xb60f
0x000000000003fc4d : sbb byte ptr [rdi], cl ; mov dh, 0x57 ; add eax, 0x93fe283 ; ret 0xb60f
0x0000000000010973 : sbb byte ptr [rdi], cl ; ret 0x9ae9
0x0000000000010972 : sbb byte ptr [rdi], r9b ; ret 0x9ae9
0x0000000000050cb0 : sbb byte ptr [rdx], ch ; sti ; jmp rax
0x0000000000050cac : sbb byte ptr [rdx], ch ; sti ; lcall ptr [rax] ; sub bh, bl ; jmp rax
0x0000000000006a1d : sbb cl, byte ptr [rcx - 0x7d] ; ret 0x440c
0x0000000000010ee2 : sbb cl, byte ptr [rcx - 0x7d] ; ret 0xe90c
0x000000000002b331 : sbb cl, byte ptr [rdi] ; lahf ; ret 0x8d4c
0x000000000000c7ad : sbb dword ptr [rbp - 0x1d7cf9ec], ecx ; jg 0xc7e6 ; ret 0x8d48
0x0000000000022873 : sbb dword ptr [rdi + rdi*8], ebp ; dec dword ptr [rax - 0x7d] ; ret
0x000000000003870d : sbb eax, 0x8948ffff ; ret 0x8548
0x0000000000024113 : sbb eax, 0x89ffffc6 ; ret
0x0000000000053f14 : sbb eax, 0xfbfffcc4 ; leave ; cld ; jmp rsp
0x0000000000009a9b : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x5d35
0x000000000002b6d8 : sbb ecx, dword ptr [rdi] ; popfq ; ret 0x8d48
0x0000000000053e58 : scasb al, byte ptr [rdi] ; cld ; jmp rax
0x000000000003f7ee : scasb al, byte ptr [rdi] ; retf 0xfffe
0x00000000000536e9 : scasb al, byte ptr [rdi] ; sti ; call qword ptr [rdi]
0x0000000000007003 : scasd eax, dword ptr [rdi] ; enter 0xf48, -0x51 ; ret 0x3d48
0x0000000000007007 : scasd eax, dword ptr [rdi] ; ret 0x3d48
0x0000000000012dfc : scasd eax, dword ptr [rdi] ; ret 0x6348
0x000000000000b71b : scasd eax, dword ptr [rdi] ; ret 0x84c7
0x00000000000536e1 : scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rbp + 0x17fffbaf]
0x00000000000536e5 : scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rdi]
0x0000000000001d68 : scasd eax, dword ptr [rdi] ; xor eax, eax ; ret
0x000000000000295c : sete al ; ret
0x0000000000027db4 : setne al ; movzx eax, al ; add eax, eax ; ret
0x00000000000028fe : seto byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000005323c : shl byte ptr [rbx + rdi*8 - 0x45b2d01], cl ; call rdx
0x0000000000053c6c : shl byte ptr [rdx], 1 ; cld ; call rax
0x00000000000037a9 : shl byte ptr [rsi - 0x7d], cl ; js 0x37b7 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000005405c : shl dword ptr [rip + 0x25dffffd], 1 ; std ; call qword ptr [rdx]
0x000000000001d4d7 : shl eax, 6 ; or ecx, eax ; jmp 0x19f74
0x000000000001f638 : shl eax, 6 ; or ecx, eax ; jmp 0x1c04f
0x0000000000027ea3 : shl eax, 8 ; or eax, edx ; ret
0x0000000000026096 : shl edi, 2 ; call qword ptr [rax]
0x0000000000008cd0 : shl edi, 4 ; call qword ptr [rax]
0x0000000000027d88 : shl edx, cl ; test dl, 5 ; je 0x27da0 ; ret
0x0000000000026095 : shl rdi, 2 ; call qword ptr [rax]
0x0000000000008ccf : shl rdi, 4 ; call qword ptr [rax]
0x0000000000027d87 : shl rdx, cl ; test dl, 5 ; je 0x27da1 ; ret
0x000000000002122e : shr cl, 1 ; mov esp, 0x89ffff47 ; ret
0x0000000000040008 : shr cl, 1 ; out 0xff, eax ; dec dword ptr [rbp - 0x77] ; retf
0x0000000000024837 : shr cl, 1 ; ret 0xff78
0x0000000000022543 : shr cl, 1 ; retf
0x000000000001ea90 : shr cl, 1 ; retf 0xff6c
0x0000000000024111 : shr cl, 1 ; sbb eax, 0x89ffffc6 ; ret
0x0000000000010426 : shr cl, cl ; in eax, dx ; ret
0x00000000000118d7 : shr cl, cl ; or edx, 0xffffffff ; dec dword ptr [rcx - 0x7d] ; ret 0x830c
0x0000000000053ea0 : shr dword ptr [rdi - 4], -1 ; outsd dx, dword ptr es:[rsi] ; cld ; jmp qword ptr [rdx]
0x000000000003c096 : shr ebx, -1 ; inc dword ptr [rcx - 0xa] ; ret 0xf10
0x000000000001d4db : shr ecx, -0x74 ; retf 0xffff
0x000000000001b313 : shr ecx, 0x1b ; ret
0x000000000001f63c : shr ecx, 6 ; retf 0xffff
0x0000000000003803 : stc ; adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x548d
0x00000000000100f0 : stc ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd039
0x000000000000cd2f : stc ; adc eax, 0x39c1940f ; retf 0x840f
0x000000000000cdd1 : stc ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd039
0x0000000000003989 : stc ; add al, 0x76 ; loop 0x3986 ; ret
0x00000000000694aa : stc ; call qword ptr [rax]
0x00000000000696ea : stc ; call qword ptr [rdx]
0x00000000000699c2 : stc ; call rax
0x0000000000068fe6 : stc ; dec dword ptr [rax] ; add eax, 0x89600000 ; stc ; jmp qword ptr [rax]
0x0000000000068fee : stc ; jmp qword ptr [rax]
0x0000000000068fce : stc ; jmp rax
0x00000000000694d2 : stc ; jmp rsp
0x0000000000015b99 : stc ; jnp 0x15bb0 ; test byte ptr [rax], ah ; ret
0x000000000001af63 : stc ; ret
0x0000000000002da2 : stc ; retf
0x00000000000023ac : std ; call qword ptr [rax]
0x0000000000054062 : std ; call qword ptr [rdx]
0x0000000000054082 : std ; call rax
0x000000000005405a : std ; call rcx
0x000000000005402e : std ; call rsi
0x000000000005423e : std ; dec dword ptr [rax + 0x3a] ; std ; call rax
0x000000000004ab25 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000005471e : std ; dec dword ptr [rsp + rsi*2] ; std ; call rcx
0x000000000005471a : std ; dec dword ptr [rsp + rsi*2] ; std ; dec dword ptr [rsp + rsi*2] ; std ; call rcx
0x000000000005402a : std ; dec eax ; and al, 0xfd ; call rsi
0x0000000000069386 : std ; dec eax ; cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; push rcx ; std ; jmp qword ptr [rax]
0x000000000002075f : std ; imul eax, dword ptr [rax + rax], 0xf ; mov dh, 0x44 ; ret 0x8d01
0x00000000000545fa : std ; inc dword ptr [rdi - 0x2e00028a] ; jbe 0x54609 ; call rcx
0x00000000000545f6 : std ; inc dword ptr [rdi - 0x7800028a] ; jbe 0x54605 ; call rcx
0x00000000000542d2 : std ; inc eax ; cmp ebp, edi ; call rax
0x000000000002aad8 : std ; ja 0x2aaee ; xchg eax, esp ; ret
0x0000000000054992 : std ; jmp qword ptr [rax - 0x1f00026a]
0x000000000006938e : std ; jmp qword ptr [rax]
0x000000000006d952 : std ; jmp qword ptr [rbx]
0x0000000000054066 : std ; jmp qword ptr [rdi]
0x0000000000053f9a : std ; jmp qword ptr [rsi]
0x0000000000053f4e : std ; jmp rax
0x0000000000054962 : std ; jmp rcx
0x0000000000053fda : std ; jmp rsi
0x0000000000040280 : std ; jp 0x40296 ; xchg eax, esp ; ret 0x8040
0x0000000000053fd2 : std ; lcall ptr [rcx - 0xe0002f8] ; or ch, bh ; jmp rsi
0x000000000004c69e : std ; or byte ptr [rax + 0x19], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4103
0x0000000000054982 : std ; push qword ptr [rax - 0x6b] ; std ; call qword ptr [rax]
0x0000000000054202 : std ; push qword ptr [rax] ; cmp bh, ch ; call rax
0x00000000000541fe : std ; push qword ptr [rax] ; cmp bh, ch ; push qword ptr [rax] ; cmp bh, ch ; call rax
0x0000000000053f96 : std ; push qword ptr [rcx] ; or ebp, edi ; jmp qword ptr [rsi]
0x0000000000053f4a : std ; push qword ptr [rsi] ; or edi, ebp ; jmp rax
0x0000000000053fd6 : std ; push rcx ; or ch, bh ; jmp rsi
0x0000000000007dd4 : std ; retf
0x000000000002b330 : std ; sbb cl, byte ptr [rdi] ; lahf ; ret 0x8d4c
0x000000000002b6d7 : std ; sbb ecx, dword ptr [rdi] ; popfq ; ret 0x8d48
0x000000000002c471 : sti ; add al, 0 ; add dh, dh ; ret
0x0000000000042dbb : sti ; add al, byte ptr [rcx - 0x77] ; ret
0x0000000000050642 : sti ; call qword ptr [rax]
0x00000000000536e2 : sti ; call qword ptr [rbp + 0x17fffbaf]
0x00000000000512b2 : sti ; call qword ptr [rdi]
0x00000000000531e6 : sti ; call qword ptr [rsi]
0x0000000000050682 : sti ; call rax
0x000000000005148e : sti ; call rcx
0x000000000005323a : sti ; call rdx
0x000000000000584e : sti ; dec byte ptr [rdi] ; ret
0x0000000000009087 : sti ; dec byte ptr [rdi] ; retf
0x000000000005111a : sti ; dec dword ptr [rax - 0x770004cf] ; xor ebx, edi ; jmp rax
0x00000000000531e2 : sti ; dec dword ptr [rcx + 0x16fffba6] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; call qword ptr [rsi]
0x000000000005383e : sti ; dec dword ptr [rcx + rcx*8 - 0x36de0005] ; sti ; jmp qword ptr [rcx]
0x00000000000537d2 : sti ; dec dword ptr [rcx - 0x64] ; sti ; call rax
0x00000000000537ce : sti ; dec dword ptr [rcx - 0x64] ; sti ; dec dword ptr [rcx - 0x64] ; sti ; call rax
0x00000000000531de : sti ; dec dword ptr [rcx - 0x7600045a] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; call qword ptr [rsi]
0x00000000000690c6 : sti ; inc dword ptr [rax + 0x60000012] ; fsincos ; call rax
0x0000000000053302 : sti ; inc dword ptr [rax + rbx*4 - 0x54260005] ; sti ; call rcx
0x0000000000053236 : sti ; inc dword ptr [rax + rbx*4 - 0x5b2d0005] ; sti ; call rdx
0x0000000000053232 : sti ; inc dword ptr [rax + rbx*4 - 0x677b0005] ; sti ; call rdx
0x00000000000507b2 : sti ; inc dword ptr [rax - 0x2f0004eb] ; adc edi, ebx ; call rax
0x000000000005085a : sti ; inc dword ptr [rax - 0x2f0004ec] ; adc edi, ebx ; call rax
0x0000000000050846 : sti ; inc dword ptr [rax - 0x7f0004ec] ; adc al, 0xfb ; call rax
0x0000000000051906 : sti ; inc dword ptr [rbp - 0x6d] ; sti ; inc dword ptr [rbp - 0x6d] ; sti ; jmp rax
0x000000000005190a : sti ; inc dword ptr [rbp - 0x6d] ; sti ; jmp rax
0x0000000000053286 : sti ; inc dword ptr [rcx - 0x61] ; sti ; inc dword ptr [rcx - 0x61] ; sti ; jmp qword ptr [rcx]
0x000000000005328a : sti ; inc dword ptr [rcx - 0x61] ; sti ; jmp qword ptr [rcx]
0x000000000005329e : sti ; inc eax ; lodsb al, byte ptr [rsi] ; sti ; jmp qword ptr [rcx]
0x00000000000537ea : sti ; inc eax ; pushfq ; sti ; dec dword ptr [rcx - 0x64] ; sti ; call rax
0x000000000005176a : sti ; jmp qword ptr [rbx]
0x000000000005192a : sti ; jmp qword ptr [rcx]
0x0000000000051016 : sti ; jmp qword ptr [rdi]
0x00000000000517ae : sti ; jmp qword ptr [rdx - 0x2e00048e]
0x00000000000507f6 : sti ; jmp rax
0x000000000006a4da : sti ; jmp rbx
0x000000000005313a : sti ; jmp rcx
0x00000000000680bc : sti ; jrcxz 0x680c1 ; call qword ptr [rbx]
0x00000000000512ae : sti ; lcall ptr [rax + rdi - 5] ; call qword ptr [rdi]
0x0000000000050cae : sti ; lcall ptr [rax] ; sub bh, bl ; jmp rax
0x0000000000050caa : sti ; lcall ptr [rax] ; sub bh, bl ; lcall ptr [rax] ; sub bh, bl ; jmp rax
0x0000000000051a26 : sti ; lcall ptr [rdx + rdi*2 + 0x7b21fffb] ; sti ; jmp qword ptr [rcx]
0x00000000000536fa : sti ; lcall ptr [rsi] ; mov bl, 0xfb ; call qword ptr [rbp + 0x17fffbaf]
0x0000000000053f18 : sti ; leave ; cld ; jmp rsp
0x00000000000691c6 : sti ; ljmp ptr [rax + 0x1a] ; add byte ptr [rax], al ; loopne 0x691d7 ; cld ; jmp rax
0x00000000000537f6 : sti ; ljmp ptr [rbx + rbx*4 - 5] ; jmp qword ptr [rdi]
0x00000000000519d2 : sti ; ljmp ptr [rdx + rdi*2 + 0x7b21fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000050cc6 : sti ; ljmp ptr [rsi + rbp] ; sti ; jmp rax
0x0000000000050cc2 : sti ; ljmp ptr [rsi + rbp] ; sti ; ljmp ptr [rsi + rbp] ; sti ; jmp rax
0x00000000000023a9 : sti ; movsxd rdi, ebp ; call qword ptr [rax]
0x0000000000049fdb : sti ; or byte ptr [rax + 0x19], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x8003
0x000000000005067e : sti ; push qword ptr [rax + 0x13] ; sti ; call rax
0x000000000005067a : sti ; push qword ptr [rax + 0x13] ; sti ; push qword ptr [rax + 0x13] ; sti ; call rax
0x00000000000506be : sti ; push qword ptr [rax - 0x2f0004eb] ; adc edi, ebx ; call rax
0x00000000000508ba : sti ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x000000000005081e : sti ; push qword ptr [rax] ; adc al, 0xfb ; call rax
0x00000000000508b6 : sti ; push qword ptr [rax] ; adc al, 0xfb ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x000000000005081a : sti ; push qword ptr [rax] ; adc al, 0xfb ; push qword ptr [rax] ; adc al, 0xfb ; call rax
0x000000000005100e : sti ; push qword ptr [rbp - 0x4a0004d0] ; xor bl, bh ; jmp qword ptr [rdi]
0x0000000000050692 : sti ; push qword ptr [rbx + rdx - 5] ; call rax
0x000000000005068e : sti ; push qword ptr [rbx + rdx - 5] ; push qword ptr [rbx + rdx - 5] ; call rax
0x000000000005177a : sti ; push qword ptr [rdx + 0x23fffb7b] ; jbe 0x51787 ; jmp qword ptr [rbx]
0x00000000000519c6 : sti ; push qword ptr [rdx + rdi*2 + 0x7b21fffb] ; sti ; jmp qword ptr [rcx]
0x0000000000051762 : sti ; push qword ptr [rdx - 0x4d000485] ; jnp 0x5176f ; jmp qword ptr [rbx]
0x0000000000051776 : sti ; push qword ptr [rdx - 0x4d000485] ; jnp 0x51783 ; jmp qword ptr [rbx]
0x00000000000517aa : sti ; push qword ptr [rdx - 0x5d000485] ; jb 0x517b7 ; call rcx
0x000000000005315a : sti ; push qword ptr [rsi - 0x59] ; sti ; jmp rcx
0x0000000000053156 : sti ; push rsi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; push qword ptr [rsi - 0x59] ; sti ; jmp rcx
0x0000000000022b93 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7e020], al ; ret
0x00000000000310f2 : stosb byte ptr [rdi], al ; retf
0x0000000000053309 : stosd dword ptr [rdi], eax ; sti ; call rcx
0x0000000000053c11 : sub ah, bh ; call qword ptr [rax]
0x0000000000053cc5 : sub ah, bh ; call rax
0x0000000000053c0d : sub ah, bh ; lcall ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000050cc8 : sub al, 0x2e ; sti ; jmp rax
0x0000000000050cc4 : sub al, 0x2e ; sti ; ljmp ptr [rsi + rbp] ; sti ; jmp rax
0x0000000000053c25 : sub al, 0xfc ; call rax
0x0000000000022874 : sub al, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000004e91a : sub al, 1 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000000417b : sub al, 5 ; add byte ptr [rdi], cl ; mov dh, 4 ; sub byte ptr [rax + 1], cl ; ret
0x000000000004b9fe : sub al, ch ; cld ; ret 0xfffe
0x0000000000042be7 : sub al, ch ; ret
0x0000000000050cb1 : sub bh, bl ; jmp rax
0x0000000000050cad : sub bh, bl ; lcall ptr [rax] ; sub bh, bl ; jmp rax
0x000000000004e217 : sub bl, al ; mov eax, 0xfffffffe ; ret
0x000000000004e1da : sub byte ptr [r9 + 0x39daf7f2], r9b ; ret 0x1c7e
0x000000000001e790 : sub byte ptr [rax + 0x48000000], 0x39 ; ret
0x0000000000004181 : sub byte ptr [rax + 1], cl ; ret
0x000000000000e6fe : sub byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x56 ; add esp, dword ptr [rsi - 0x3f] ; ret 0x4808
0x00000000000265eb : sub byte ptr [rbx + 0x1891047], cl ; xor eax, eax ; ret
0x000000000004e1db : sub byte ptr [rcx + 0x39daf7f2], cl ; ret 0x1c7e
0x0000000000026090 : sub byte ptr [rcx + 0x48102474], cl ; shl edi, 2 ; call qword ptr [rax]
0x0000000000008869 : sub byte ptr [rcx - 0x16bbdbbc], cl ; xchg eax, ebp ; retf
0x0000000000053b10 : sub byte ptr [rdi], ch ; cld ; jmp rax
0x00000000000018df : sub byte ptr [rdi], cl ; leave ; mov dword ptr [rdx + 0x28], ecx ; ret
0x0000000000049fd9 : sub dword ptr [rax + 0x194808fb], eax ; ror byte ptr [rax - 0x7d], cl ; ret 0x8003
0x000000000004c5ae : sub dword ptr [rdx], esp ; add byte ptr [rdi + 0x60], bh ; call qword ptr [rax]
0x0000000000053e78 : sub dword ptr [rsi - 4], -1 ; xor ebp, dword ptr [rsi - 4] ; jmp rbx
0x0000000000050ce5 : sub eax, 0x2e2cfffb ; sti ; jmp rax
0x0000000000069321 : sub eax, 0xa3000000 ; cld ; call qword ptr [rax]
0x0000000000013a69 : sub eax, esi ; ret
0x0000000000026be0 : sub ebx, dword ptr [rbp] ; lea edi, dword ptr [rbx + 1] ; movsxd rdi, edi ; call qword ptr [rax]
0x0000000000053b4d : sub edi, esp ; call qword ptr [rax]
0x0000000000053b49 : sub edi, esp ; dec dword ptr [rax + 0x2b] ; cld ; call qword ptr [rax]
0x0000000000053bc1 : sub edi, esp ; jmp rax
0x000000000000356a : sub edx, eax ; mov dword ptr [r9 + 8], edx ; ret
0x0000000000016c84 : sub esi, esi ; ret 0xb820
0x0000000000050625 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000053b4c : sub rdi, rsp ; call qword ptr [rax]
0x0000000000003569 : sub rdx, r8 ; mov dword ptr [r9 + 8], edx ; ret
0x0000000000050624 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000000130b2 : syscall
0x000000000004cb6f : test ah, cl ; retf
0x000000000004d347 : test ah, dh ; ret
0x000000000000c025 : test al, 0x48 ; add eax, edi ; jmp rax
0x00000000000023ed : test al, 0x48 ; mov eax, dword ptr [rip + 0x26cbdb] ; call qword ptr [rax]
0x0000000000001d23 : test al, al ; jne 0x1d0e ; xor eax, eax ; ret
0x0000000000015b7d : test bh, bh ; ret 0
0x000000000002aebb : test bh, dh ; add al, byte ptr [rax] ; add al, ch ; pop rbx ; retf
0x000000000002c470 : test bl, bh ; add al, 0 ; add dh, dh ; ret
0x00000000000397d3 : test byte ptr [rax + 0x63], 0x14 ; nop ; add rax, rdx ; jmp rax
0x000000000000504d : test byte ptr [rax + 0xf], 0x45 ; ret 0xbc89
0x0000000000014906 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000001347b : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3949
0x0000000000016045 : test byte ptr [rax + rdi*8], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000000b499 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000053304 : test byte ptr [rax - 0x54260005], bl ; sti ; call rcx
0x0000000000053238 : test byte ptr [rax - 0x5b2d0005], bl ; sti ; call rdx
0x0000000000053234 : test byte ptr [rax - 0x677b0005], bl ; sti ; call rdx
0x0000000000015b9c : test byte ptr [rax], ah ; ret
0x0000000000004e6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000026d3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rbp, qword ptr [rdi] ; call qword ptr [rbx]
0x00000000000017aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000018ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000027ada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000001918b : test byte ptr [rax], al ; ret
0x000000000003bbf5 : test byte ptr [rbp + 0xf], 0xb6 ; retf 0xb841
0x0000000000018978 : test byte ptr [rbx], dl ; retf
0x000000000001c755 : test byte ptr [rcx + rax - 0x7cb80000], ch ; ret 0x4801
0x0000000000017b13 : test byte ptr [rcx - 0x76000005], bh ; ret
0x0000000000015ffa : test byte ptr [rcx - 0x7c00000c], dl ; ret
0x000000000000e295 : test byte ptr [rcx], al ; and eax, 0x83410000 ; ret 0x4c01
0x000000000000ed4f : test byte ptr [rdi + rdi*8 - 1], ch ; push rsi ; ret 0xf10
0x0000000000024ac4 : test byte ptr [rdi - 0x16000027], dh ; ret 0xff09
0x00000000000163e8 : test byte ptr [rdi - 0x76000026], ch ; ret
0x000000000000cc82 : test byte ptr [rdi], 0x84 ; retf
0x000000000001e05e : test byte ptr [rdi], 0x85 ; retf
0x0000000000019e4b : test byte ptr [rdi], 0xb6 ; ret
0x0000000000008ee6 : test byte ptr [rdx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000001f752 : test byte ptr [rdx + rdx*2], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000001c854 : test byte ptr [rdx], al ; jbe 0x1c85e ; dec dword ptr [rax - 0x77] ; ret
0x0000000000054a8c : test byte ptr [rsi - 2], cl ; call rsp
0x0000000000025c5b : test byte ptr [rsp + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x3949
0x000000000004998a : test byte ptr [rsp + rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000001cb78 : test byte ptr [rsp + rdi*8 - 0x7cb70001], dh ; ret
0x000000000001cbe8 : test byte ptr [rsp + rdi*8 - 1], al ; dec dword ptr [rax - 0x7d] ; ret
0x000000000002fa46 : test ch, al ; add al, 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x00000000000222c6 : test ch, al ; xor edi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000000f1b9 : test ch, dl ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x0000000000068fcd : test cl, bh ; jmp rax
0x0000000000027d8a : test dl, 5 ; je 0x27d9e ; ret
0x000000000002ce71 : test dl, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000043fbb : test dword ptr [rax - 0x75], 0xe8202454 ; retf 0xff57
0x0000000000027e2b : test dword ptr [rax - 0xd000000], esp ; ret
0x000000000004244e : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x0000000000001977 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000000c4ff : test dword ptr [rax], edx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000004244d : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000001976 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000001ca98 : test dword ptr [rbp + rdi*8 - 0x7cb70001], edx ; ret
0x000000000004e705 : test dword ptr [rbp - 0x8ffffff], ecx ; ret 0x8c0
0x0000000000032545 : test dword ptr [rbx - 0x16000002], edi ; retf 0xfffe
0x0000000000028547 : test dword ptr [rbx - 0x7d000000], edi ; ret
0x000000000004e711 : test dword ptr [rbx - 0x8ffffff], edx ; ret 0x20c
0x0000000000003547 : test dword ptr [rcx + rax], ebp ; add bh, dh ; ret 0x8c0
0x0000000000004c32 : test dword ptr [rcx], ebx ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0xa801
0x0000000000022872 : test dword ptr [rcx], ebx ; sub al, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000000a094 : test dword ptr [rcx], esi ; retf 0xffff
0x000000000001aa79 : test dword ptr [rdi - 0x7cffff7d], ebp ; ret 0x4401
0x000000000001cb08 : test dword ptr [rdi*8 - 0x7cb70001], esp ; ret
0x000000000001c753 : test dword ptr [rdi], ecx ; test byte ptr [rcx + rax - 0x7cb80000], ch ; ret 0x4801
0x000000000001aa77 : test dword ptr [rdi], ecx ; test dword ptr [rdi - 0x7cffff7d], ebp ; ret 0x4401
0x0000000000040218 : test dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8a3c
0x00000000000290f1 : test dword ptr [rdx + 0x39000001], ecx ; retf
0x000000000002aebc : test dword ptr [rdx], 0x5be80000 ; retf
0x000000000001538d : test dword ptr [rdx], ebx ; retf
0x000000000004e7ed : test dword ptr [rsi - 0x8ffffff], esp ; ret 0x20c
0x000000000000f864 : test eax, 0x83ffffcc ; ret
0x00000000000180a4 : test eax, 0x850f20a8 ; retf
0x000000000000343e : test eax, 0xc0894c90 ; ret
0x000000000001036c : test eax, 0xf6ffffc4 ; ret 0xf08
0x0000000000001753 : test eax, eax ; je 0x1765 ; pop rbp ; jmp rax
0x00000000000017a0 : test eax, eax ; je 0x17b5 ; pop rbp ; jmp rax
0x0000000000001820 : test eax, eax ; je 0x1815 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000004f43 : test eax, eax ; mov rbx, qword ptr [rdx] ; je 0x4f5b ; call rax
0x000000000003a531 : test edx, eax ; or al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed77
0x0000000000009b6b : test edx, esp ; retf
0x0000000000054c81 : test esi, edi ; call qword ptr [rax]
0x000000000001cf97 : test esp, ebx ; retf
0x0000000000001752 : test rax, rax ; je 0x1766 ; pop rbp ; jmp rax
0x000000000000179f : test rax, rax ; je 0x17b6 ; pop rbp ; jmp rax
0x000000000000181f : test rax, rax ; je 0x1816 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000004f42 : test rax, rax ; mov rbx, qword ptr [rdx] ; je 0x4f5c ; call rax
0x0000000000010533 : vpsubsw xmm11, xmm15, xmm7 ; ret 0xffff
0x0000000000010544 : vpsubsw xmm9, xmm15, xmm6 ; ret 0xffff
0x0000000000069095 : wait ; cli ; jmp qword ptr [rax]
0x0000000000032b91 : wait ; ret
0x0000000000010272 : wait ; ret 0xffff
0x00000000000537d9 : wait ; sti ; call rax
0x00000000000537f9 : wait ; sti ; jmp qword ptr [rdi]
0x00000000000537f5 : wait ; sti ; ljmp ptr [rbx + rbx*4 - 5] ; jmp qword ptr [rdi]
0x0000000000033df0 : wbinvd ; retf 0x40c6
0x0000000000015b74 : xchg byte ptr [rax], cl ; ret
0x00000000000530e4 : xchg byte ptr [rbx + rdi*8 - 0x4418501], ah ; jmp qword ptr [rbx]
0x00000000000179b5 : xchg byte ptr [rbx - 0x77c0220], al ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8341
0x000000000001af84 : xchg byte ptr [rbx - 0x77c0220], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc8e9
0x0000000000016f2b : xchg byte ptr [rbx - 0x77c0220], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf983
0x000000000003f651 : xchg byte ptr [rdi - 0x7600000f], dh ; ret 0x8d48
0x000000000000bf9b : xchg byte ptr [rdx - 0x76fffffe], bl ; ret 0xc031
0x000000000003e83d : xchg byte ptr [rsi], ch ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000009b7f : xchg dl, bl ; retf
0x0000000000027edf : xchg dword ptr [rax + rax - 0x2f770000], ecx ; ret
0x0000000000009870 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x5ae0
0x000000000000dbbc : xchg dword ptr [rcx + rax - 0x39], ecx ; jmp rdi
0x000000000004c5ad : xchg dword ptr [rcx], ebp ; and al, byte ptr [rax] ; mov edi, 0x60 ; call qword ptr [rax]
0x0000000000022c1e : xchg dword ptr [rdi + rdi*8 - 1], ebp ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000545fc : xchg dword ptr [rsi - 3], esi ; call rcx
0x00000000000692fd : xchg eax, ebp ; cld ; jmp rax
0x00000000000512ac : xchg eax, ebp ; cmp bl, bh ; lcall ptr [rax + rdi - 5] ; call qword ptr [rdi]
0x000000000000298f : xchg eax, ebp ; ret
0x00000000000345fc : xchg eax, ebp ; ret 0x3d48
0x0000000000040fa2 : xchg eax, ebp ; ret 0x540a
0x0000000000003806 : xchg eax, ebp ; ret 0x548d
0x000000000001794d : xchg eax, ebp ; ret 0x8341
0x00000000000276d5 : xchg eax, ebp ; ret 0x8348
0x000000000003e022 : xchg eax, ebp ; ret 0x8548
0x00000000000408a0 : xchg eax, ebp ; ret 0xa44
0x000000000004aabc : xchg eax, ebp ; ret 0xc220
0x000000000000423b : xchg eax, ebp ; ret 0xca09
0x0000000000026384 : xchg eax, ebp ; ret 0xd121
0x0000000000009c7c : xchg eax, ebp ; ret 0xd184
0x0000000000010580 : xchg eax, ebp ; ret 0xffff
0x000000000000886f : xchg eax, ebp ; retf
0x0000000000027db5 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000009c77 : xchg eax, ebp ; sar dword ptr [rdi], 0xf ; xchg eax, ebp ; ret 0xd184
0x00000000000536e0 : xchg eax, ebp ; scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rbp + 0x17fffbaf]
0x00000000000536e4 : xchg eax, ebp ; scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rdi]
0x0000000000054985 : xchg eax, ebp ; std ; call qword ptr [rax]
0x000000000004e712 : xchg eax, ebx ; add dword ptr [rax], eax ; add bh, dh ; ret 0x20c
0x0000000000001db9 : xchg eax, ebx ; add r10, r11 ; jmp r10
0x000000000000452e : xchg eax, ebx ; add rdx, r11 ; jmp rdx
0x0000000000003a42 : xchg eax, ebx ; add rdx, rbx ; jmp rdx
0x00000000000187ca : xchg eax, ebx ; ret
0x0000000000054981 : xchg eax, ebx ; std ; push qword ptr [rax - 0x6b] ; std ; call qword ptr [rax]
0x0000000000051909 : xchg eax, ebx ; sti ; inc dword ptr [rbp - 0x6d] ; sti ; jmp rax
0x000000000005190d : xchg eax, ebx ; sti ; jmp rax
0x00000000000023a3 : xchg eax, ecx ; retf
0x000000000005497d : xchg eax, ecx ; std ; jmp rax
0x0000000000054961 : xchg eax, ecx ; std ; jmp rcx
0x0000000000048ac5 : xchg eax, edi ; add rdx, r15 ; jmp rdx
0x0000000000040604 : xchg eax, edi ; ret 0x9d3c
0x0000000000033e96 : xchg eax, edi ; ret 0xc283
0x000000000000a02f : xchg eax, edi ; retf 0xffff
0x000000000004e192 : xchg eax, edx ; mov byte ptr [rsi], dil ; ret
0x000000000004e2da : xchg eax, esi ; add rdx, r14 ; jmp rdx
0x0000000000003e71 : xchg eax, esi ; add rdx, rsi ; jmp rdx
0x000000000000497f : xchg eax, esi ; ret 0x53c
0x000000000000c476 : xchg eax, esi ; ret 0xc083
0x0000000000017655 : xchg eax, esi ; ret 0xf981
0x0000000000011f65 : xchg eax, esi ; ret 0xfe81
0x00000000000208d1 : xchg eax, esi ; ret 0xff3d
0x000000000000fd7f : xchg eax, esi ; retf 0xffff
0x0000000000054991 : xchg eax, esi ; std ; jmp qword ptr [rax - 0x1f00026a]
0x0000000000054995 : xchg eax, esi ; std ; jmp rax
0x000000000000ac57 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add cl, ch ; retf
0x000000000000437f : xchg eax, esp ; add rdx, r12 ; jmp rdx
0x0000000000025b18 : xchg eax, esp ; and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf 0x8941
0x0000000000025b26 : xchg eax, esp ; and al, 0x68 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf 0x8941
0x00000000000260f2 : xchg eax, esp ; and al, 0xd4 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff2
0x0000000000019e47 : xchg eax, esp ; ret
0x0000000000005b36 : xchg eax, esp ; ret 0x3145
0x000000000003a5d4 : xchg eax, esp ; ret 0x35e8
0x00000000000344f9 : xchg eax, esp ; ret 0x3948
0x00000000000398b4 : xchg eax, esp ; ret 0x55e8
0x000000000000fb54 : xchg eax, esp ; ret 0x5e9
0x0000000000012772 : xchg eax, esp ; ret 0x7c83
0x000000000004fdb0 : xchg eax, esp ; ret 0x7e80
0x0000000000040283 : xchg eax, esp ; ret 0x8040
0x00000000000169a7 : xchg eax, esp ; ret 0x8041
0x00000000000179e5 : xchg eax, esp ; ret 0x8341
0x00000000000037b0 : xchg eax, esp ; ret 0x8348
0x0000000000012c09 : xchg eax, esp ; ret 0x854d
0x0000000000003abc : xchg eax, esp ; ret 0x8948
0x000000000004021a : xchg eax, esp ; ret 0x8a3c
0x000000000001082d : xchg eax, esp ; ret 0x8fe9
0x000000000000f35b : xchg eax, esp ; ret 0xb60f
0x000000000000ffa4 : xchg eax, esp ; ret 0xb8e9
0x000000000003a54c : xchg eax, esp ; ret 0xbde8
0x000000000000da50 : xchg eax, esp ; ret 0xc238
0x000000000001af8c : xchg eax, esp ; ret 0xc8e9
0x00000000000208be : xchg eax, esp ; ret 0xca08
0x000000000000ea70 : xchg eax, esp ; ret 0xd038
0x000000000000cdd4 : xchg eax, esp ; ret 0xd039
0x0000000000024e9b : xchg eax, esp ; ret 0xd184
0x000000000000de5d : xchg eax, esp ; ret 0xe8c1
0x00000000000105ff : xchg eax, esp ; ret 0xf4e9
0x00000000000209cd : xchg eax, esp ; ret 0xf883
0x00000000000142f4 : xchg eax, esp ; ret 0xf980
0x0000000000016f33 : xchg eax, esp ; ret 0xf983
0x0000000000004a14 : xchg eax, esp ; ret 0xfa83
0x000000000000489e : xchg eax, esp ; ret 0xff83
0x000000000000295d : xchg eax, esp ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000004a0d : xchg eax, esp ; rol dword ptr [rbx + 0xf4110f8], -0x6c ; ret 0xfa83
0x000000000000966d : xchg eax, esp ; ror byte ptr [rdi], 0x95 ; ret
0x000000000006901d : xchg eax, esp ; stc ; jmp qword ptr [rax]
0x0000000000054960 : xchg eax, esp ; xchg eax, ecx ; std ; jmp rcx
0x0000000000051908 : xchg eax, r11d ; sti ; inc dword ptr [rbp - 0x6d] ; sti ; jmp rax
0x000000000005190c : xchg eax, r11d ; sti ; jmp rax
0x000000000000033d : xchg ebp, esp ; and byte ptr [rcx + 0x3c0ef18d], bh ; retf 0x28ee
0x0000000000055e61 : xchg edi, edi ; call rsp
0x0000000000055e5d : xchg edi, edi ; dec dword ptr [rbx] ; xchg edi, edi ; call rsp
0x0000000000055e2d : xchg edi, edi ; dec dword ptr [rbx] ; xchg edi, edi ; jmp rsp
0x0000000000055e31 : xchg edi, edi ; jmp rsp
0x000000000000bbe8 : xlatb ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; pop rdx ; or dh, dh ; ret
0x000000000000bb90 : xlatb ; call qword ptr [rax]
0x0000000000026ec2 : xlatb ; jb 0x26e19 ; ret
0x0000000000009116 : xlatb ; jmp 0x540b
0x0000000000013a66 : xlatb ; jne 0x13a45 ; sub eax, esi ; ret
0x0000000000017af5 : xlatb ; ret 0xffff
0x0000000000013a68 : xlatb ; sub eax, esi ; ret
0x00000000000443da : xor ah, byte ptr [rax - 2] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000000bb8b : xor al, 0x26 ; add byte ptr [rcx + rcx*4 - 0x29], cl ; call qword ptr [rax]
0x0000000000004a59 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x0000000000002b12 : xor al, 0xb0 ; add rax, r14 ; jmp rax
0x000000000002efc6 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x0000000000005a32 : xor al, 0xb1 ; add rcx, rsi ; jmp rcx
0x00000000000168cb : xor al, ch ; call rsp
0x0000000000024008 : xor al, ch ; ret 0xfefd
0x0000000000043640 : xor al, ch ; retf 0xfed9
0x0000000000017af3 : xor al, ch ; xlatb ; ret 0xffff
0x0000000000069255 : xor bh, ah ; jmp rax
0x0000000000051015 : xor bl, bh ; jmp qword ptr [rdi]
0x000000000004d7a6 : xor byte ptr [r8 + 3], r9b ; ret
0x000000000004d7a7 : xor byte ptr [rax + 3], cl ; ret
0x000000000001db0f : xor byte ptr [rax + rsi*8 + 0xf], 0xb6 ; retf 0xf981
0x0000000000020503 : xor byte ptr [rax - 0x75], cl ; je 0x20533 ; sbb al, ch ; ret 0xff38
0x000000000002d796 : xor byte ptr [rax - 0x7d], cl ; ret 0x4102
0x000000000002d867 : xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000002d7f8 : xor byte ptr [rax - 0x7d], cl ; ret 0x4502
0x0000000000047374 : xor byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000000000021b8b : xor byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000021b8a : xor byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006af87 : xor byte ptr [rbx + 0xac50206], al ; ret
0x0000000000050640 : xor byte ptr [rbx + rdi*8], dl ; call qword ptr [rax]
0x0000000000050820 : xor byte ptr [rbx + rdi*8], dl ; call rax
0x00000000000508b8 : xor byte ptr [rbx + rdi*8], dl ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x000000000005081c : xor byte ptr [rbx + rdi*8], dl ; push qword ptr [rax] ; adc al, 0xfb ; call rax
0x000000000002d912 : xor byte ptr [rbx - 0x7cb7f740], al ; ret 0x8901
0x000000000002daae : xor byte ptr [rbx - 0x7cb7f740], al ; ret 0x8903
0x000000000002dee4 : xor byte ptr [rcx - 0x77], al ; ret
0x000000000000bf00 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000054204 : xor byte ptr [rdx], bh ; std ; call rax
0x0000000000054200 : xor byte ptr [rdx], bh ; std ; push qword ptr [rax] ; cmp bh, ch ; call rax
0x00000000000281ea : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000004dfbc : xor dword ptr [rax + 1], edi ; ret
0x0000000000053f98 : xor dword ptr [rcx], ecx ; std ; jmp qword ptr [rsi]
0x000000000000a63a : xor dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000000dcd8 : xor eax, 0x83ffffe8 ; ret
0x000000000002642f : xor eax, eax ; and r9d, 1 ; mov dword ptr [rcx], r9d ; ret
0x0000000000002913 : xor eax, eax ; cmp cl, 0x2c ; je 0x2928 ; ret
0x0000000000002957 : xor eax, eax ; cmp dl, 0x7d ; sete al ; ret
0x00000000000264c6 : xor eax, eax ; mov qword ptr [rcx], rdi ; ret
0x000000000004e1e6 : xor eax, eax ; mov word ptr [rdi + 0x28], dx ; ret
0x000000000002efd1 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002807c : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000027220 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000000c37c : xor eax, eax ; pop rbx ; ret
0x0000000000001902 : xor eax, eax ; ret
0x0000000000053e7c : xor ebp, dword ptr [rsi - 4] ; jmp rbx
0x0000000000019049 : xor ebx, ebx ; call qword ptr [rax]
0x0000000000017d37 : xor ebx, ebx ; jmp 0x13f64
0x0000000000051121 : xor ebx, edi ; jmp rax
0x000000000003e2bb : xor ecx, dword ptr [rax - 0x77] ; ret 0xf685
0x000000000000986d : xor ecx, ecx ; mov ebp, 0x87 ; jmp 0x5ae3
0x00000000000222c8 : xor edi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000118d6 : xor edx, edx ; jmp 0xe364
0x000000000004e1e4 : xor edx, edx ; xor eax, eax ; mov word ptr [rdi + 0x28], dx ; ret
0x0000000000031a4d : xor esi, esi ; call 0x2dca4
0x0000000000032484 : xor esi, esi ; call 0x2ef34
0x0000000000013ba4 : xor esi, esi ; ret 0xf10
0x0000000000053b1d : xor esp, edi ; jmp qword ptr [rax]
0x0000000000031a4c : xor r14d, r14d ; call 0x2dca5
0x0000000000002912 : xor r8, r8 ; cmp cl, 0x2c ; je 0x2929 ; ret
